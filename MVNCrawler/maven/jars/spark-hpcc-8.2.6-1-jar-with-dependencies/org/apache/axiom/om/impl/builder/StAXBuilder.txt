Compiled from "StAXBuilder.java"
public abstract class org.apache.axiom.om.impl.builder.StAXBuilder implements org.apache.axiom.om.OMXMLParserWrapper,org.apache.axiom.om.impl.builder.CustomBuilderSupport {
  private static final org.apache.commons.logging.Log log;

  protected javax.xml.stream.XMLStreamReader parser;

  protected org.apache.axiom.om.impl.builder.OMFactoryEx omfactory;

  private final org.apache.axiom.om.impl.builder.Detachable detachable;

  private final java.io.Closeable closeable;

  protected org.apache.axiom.om.impl.OMContainerEx target;

  protected boolean done;

  protected boolean cache;

  protected boolean parserAccessed;

  protected org.apache.axiom.om.OMDocument document;

  protected java.lang.String charEncoding;

  boolean autoClose;

  protected boolean _isClosed;

  protected org.apache.axiom.om.impl.builder.CustomBuilder customBuilderForPayload;

  protected java.util.Map<javax.xml.namespace.QName, org.apache.axiom.om.impl.builder.CustomBuilder> customBuilders;

  protected int maxDepthForCustomBuilders;

  protected org.apache.axiom.ext.stax.datahandler.DataHandlerReader dataHandlerReader;

  protected int elementLevel;

  protected java.lang.Exception parserException;

  private final java.util.Map<org.apache.axiom.om.OMContainer, java.lang.Throwable> discardTracker;

  protected org.apache.axiom.om.impl.builder.StAXBuilder(org.apache.axiom.om.OMFactory, javax.xml.stream.XMLStreamReader, java.lang.String, org.apache.axiom.om.impl.builder.Detachable, java.io.Closeable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field done:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field cache:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field parserAccessed:Z
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field charEncoding:Ljava/lang/String;
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field _isClosed:Z
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field customBuilderForPayload:Lorg/apache/axiom/om/impl/builder/CustomBuilder;
      34: aload_0
      35: aconst_null
      36: putfield      #8                  // Field customBuilders:Ljava/util/Map;
      39: aload_0
      40: iconst_m1
      41: putfield      #9                  // Field maxDepthForCustomBuilders:I
      44: aload_0
      45: iconst_0
      46: putfield      #10                 // Field elementLevel:I
      49: aload_0
      50: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      53: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      58: ifeq          71
      61: new           #13                 // class java/util/LinkedHashMap
      64: dup
      65: invokespecial #14                 // Method java/util/LinkedHashMap."<init>":()V
      68: goto          72
      71: aconst_null
      72: putfield      #15                 // Field discardTracker:Ljava/util/Map;
      75: aload_0
      76: aload_1
      77: checkcast     #16                 // class org/apache/axiom/om/impl/builder/OMFactoryEx
      80: putfield      #17                 // Field omfactory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
      83: aload_0
      84: aload         4
      86: putfield      #18                 // Field detachable:Lorg/apache/axiom/om/impl/builder/Detachable;
      89: aload_0
      90: aload         5
      92: putfield      #19                 // Field closeable:Ljava/io/Closeable;
      95: aload_0
      96: aload_3
      97: putfield      #5                  // Field charEncoding:Ljava/lang/String;
     100: aload_0
     101: aload_2
     102: invokespecial #20                 // Method initParser:(Ljavax/xml/stream/XMLStreamReader;)V
     105: return

  protected org.apache.axiom.om.impl.builder.StAXBuilder(org.apache.axiom.om.OMFactory, javax.xml.stream.XMLStreamReader, org.apache.axiom.om.impl.builder.Detachable, java.io.Closeable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokeinterface #21,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getEncoding:()Ljava/lang/String;
       9: aload_3
      10: aload         4
      12: invokespecial #22                 // Method "<init>":(Lorg/apache/axiom/om/OMFactory;Ljavax/xml/stream/XMLStreamReader;Ljava/lang/String;Lorg/apache/axiom/om/impl/builder/Detachable;Ljava/io/Closeable;)V
      15: return

  protected org.apache.axiom.om.impl.builder.StAXBuilder(org.apache.axiom.om.OMFactory, javax.xml.stream.XMLStreamReader);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokespecial #23                 // Method "<init>":(Lorg/apache/axiom/om/OMFactory;Ljavax/xml/stream/XMLStreamReader;Lorg/apache/axiom/om/impl/builder/Detachable;Ljava/io/Closeable;)V
       8: return

  protected org.apache.axiom.om.impl.builder.StAXBuilder(org.apache.axiom.om.OMFactory, javax.xml.stream.XMLStreamReader, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aconst_null
       6: invokespecial #22                 // Method "<init>":(Lorg/apache/axiom/om/OMFactory;Ljavax/xml/stream/XMLStreamReader;Ljava/lang/String;Lorg/apache/axiom/om/impl/builder/Detachable;Ljava/io/Closeable;)V
       9: return

  private void initParser(javax.xml.stream.XMLStreamReader);
    Code:
       0: aload_1
       1: instanceof    #24                 // class org/apache/axiom/om/impl/builder/BuilderAwareReader
       4: ifeq          17
       7: aload_1
       8: checkcast     #24                 // class org/apache/axiom/om/impl/builder/BuilderAwareReader
      11: aload_0
      12: invokeinterface #25,  2           // InterfaceMethod org/apache/axiom/om/impl/builder/BuilderAwareReader.setBuilder:(Lorg/apache/axiom/om/impl/builder/StAXBuilder;)V
      17: aload_0
      18: aload_1
      19: invokestatic  #26                 // Method org/apache/axiom/util/stax/XMLStreamReaderUtils.getDataHandlerReader:(Ljavax/xml/stream/XMLStreamReader;)Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      22: putfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      25: aload_0
      26: aload_1
      27: putfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      30: return

  protected org.apache.axiom.om.impl.builder.StAXBuilder(javax.xml.stream.XMLStreamReader);
    Code:
       0: aload_0
       1: invokestatic  #29                 // Method org/apache/axiom/om/OMAbstractFactory.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
       4: aload_1
       5: invokespecial #30                 // Method "<init>":(Lorg/apache/axiom/om/OMFactory;Ljavax/xml/stream/XMLStreamReader;)V
       8: return

  protected org.apache.axiom.om.impl.builder.StAXBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field done:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field cache:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field parserAccessed:Z
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field charEncoding:Ljava/lang/String;
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field _isClosed:Z
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field customBuilderForPayload:Lorg/apache/axiom/om/impl/builder/CustomBuilder;
      34: aload_0
      35: aconst_null
      36: putfield      #8                  // Field customBuilders:Ljava/util/Map;
      39: aload_0
      40: iconst_m1
      41: putfield      #9                  // Field maxDepthForCustomBuilders:I
      44: aload_0
      45: iconst_0
      46: putfield      #10                 // Field elementLevel:I
      49: aload_0
      50: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      53: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      58: ifeq          71
      61: new           #13                 // class java/util/LinkedHashMap
      64: dup
      65: invokespecial #14                 // Method java/util/LinkedHashMap."<init>":()V
      68: goto          72
      71: aconst_null
      72: putfield      #15                 // Field discardTracker:Ljava/util/Map;
      75: aload_0
      76: aconst_null
      77: putfield      #18                 // Field detachable:Lorg/apache/axiom/om/impl/builder/Detachable;
      80: aload_0
      81: aconst_null
      82: putfield      #19                 // Field closeable:Ljava/io/Closeable;
      85: return

  public void init(java.io.InputStream, java.lang.String, java.lang.String, java.lang.String) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method org/apache/axiom/om/util/StAXUtils.createXMLStreamReader:(Ljava/io/InputStream;)Ljavax/xml/stream/XMLStreamReader;
       5: putfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       8: goto          23
      11: astore        5
      13: new           #33                 // class org/apache/axiom/om/OMException
      16: dup
      17: aload         5
      19: invokespecial #34                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
      23: aload_0
      24: invokestatic  #29                 // Method org/apache/axiom/om/OMAbstractFactory.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
      27: checkcast     #16                 // class org/apache/axiom/om/impl/builder/OMFactoryEx
      30: putfield      #17                 // Field omfactory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
      33: return
    Exception table:
       from    to  target type
           0     8    11   Class javax/xml/stream/XMLStreamException

  public void setOMBuilderFactory(org.apache.axiom.om.OMFactory);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class org/apache/axiom/om/impl/builder/OMFactoryEx
       5: putfield      #17                 // Field omfactory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       8: return

  protected abstract void processNamespaceData(org.apache.axiom.om.OMElement);

  protected void processAttributes(org.apache.axiom.om.OMElement);
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: invokeinterface #35,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeCount:()I
       9: istore_2
      10: iconst_0
      11: istore_3
      12: iload_3
      13: iload_2
      14: if_icmpge     167
      17: aload_0
      18: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      21: iload_3
      22: invokeinterface #36,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeNamespace:(I)Ljava/lang/String;
      27: astore        4
      29: aload_0
      30: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      33: iload_3
      34: invokeinterface #37,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributePrefix:(I)Ljava/lang/String;
      39: astore        5
      41: aconst_null
      42: astore        6
      44: aload         4
      46: ifnull        86
      49: aload         4
      51: invokevirtual #38                 // Method java/lang/String.length:()I
      54: ifle          86
      57: aload_1
      58: aload         4
      60: aload         5
      62: invokeinterface #39,  3           // InterfaceMethod org/apache/axiom/om/OMElement.findNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
      67: astore        6
      69: aload         6
      71: ifnonnull     86
      74: aload_1
      75: aload         4
      77: aload         5
      79: invokeinterface #40,  3           // InterfaceMethod org/apache/axiom/om/OMElement.declareNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
      84: astore        6
      86: aload_1
      87: aload_0
      88: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      91: iload_3
      92: invokeinterface #41,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeLocalName:(I)Ljava/lang/String;
      97: aload_0
      98: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
     101: iload_3
     102: invokeinterface #42,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeValue:(I)Ljava/lang/String;
     107: aload         6
     109: invokeinterface #43,  4           // InterfaceMethod org/apache/axiom/om/OMElement.addAttribute:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/axiom/om/OMNamespace;)Lorg/apache/axiom/om/OMAttribute;
     114: astore        7
     116: aload         7
     118: aload_0
     119: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
     122: iload_3
     123: invokeinterface #44,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeType:(I)Ljava/lang/String;
     128: invokeinterface #45,  2           // InterfaceMethod org/apache/axiom/om/OMAttribute.setAttributeType:(Ljava/lang/String;)V
     133: aload         7
     135: instanceof    #46                 // class org/apache/axiom/om/impl/OMAttributeEx
     138: ifeq          161
     141: aload         7
     143: checkcast     #46                 // class org/apache/axiom/om/impl/OMAttributeEx
     146: aload_0
     147: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
     150: iload_3
     151: invokeinterface #47,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.isAttributeSpecified:(I)Z
     156: invokeinterface #48,  2           // InterfaceMethod org/apache/axiom/om/impl/OMAttributeEx.setSpecified:(Z)V
     161: iinc          3, 1
     164: goto          12
     167: return

  protected org.apache.axiom.om.OMNode createOMText(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
       4: ifnull        118
       7: aload_0
       8: getfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      11: invokeinterface #49,  1           // InterfaceMethod org/apache/axiom/ext/stax/datahandler/DataHandlerReader.isBinary:()Z
      16: ifeq          118
      19: aload_0
      20: getfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      23: invokeinterface #50,  1           // InterfaceMethod org/apache/axiom/ext/stax/datahandler/DataHandlerReader.isDeferred:()Z
      28: ifeq          44
      31: aload_0
      32: getfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      35: invokeinterface #51,  1           // InterfaceMethod org/apache/axiom/ext/stax/datahandler/DataHandlerReader.getDataHandlerProvider:()Lorg/apache/axiom/ext/stax/datahandler/DataHandlerProvider;
      40: astore_2
      41: goto          67
      44: aload_0
      45: getfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      48: invokeinterface #52,  1           // InterfaceMethod org/apache/axiom/ext/stax/datahandler/DataHandlerReader.getDataHandler:()Ljavax/activation/DataHandler;
      53: astore_2
      54: goto          67
      57: astore_3
      58: new           #33                 // class org/apache/axiom/om/OMException
      61: dup
      62: aload_3
      63: invokespecial #34                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      66: athrow
      67: aload_0
      68: getfield      #17                 // Field omfactory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
      71: aload_0
      72: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
      75: aload_2
      76: aload_0
      77: getfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      80: invokeinterface #54,  1           // InterfaceMethod org/apache/axiom/ext/stax/datahandler/DataHandlerReader.isOptimized:()Z
      85: iconst_1
      86: invokeinterface #55,  5           // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMText:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/Object;ZZ)Lorg/apache/axiom/om/OMText;
      91: astore_3
      92: aload_0
      93: getfield      #27                 // Field dataHandlerReader:Lorg/apache/axiom/ext/stax/datahandler/DataHandlerReader;
      96: invokeinterface #56,  1           // InterfaceMethod org/apache/axiom/ext/stax/datahandler/DataHandlerReader.getContentID:()Ljava/lang/String;
     101: astore        4
     103: aload         4
     105: ifnull        116
     108: aload_3
     109: aload         4
     111: invokeinterface #57,  2           // InterfaceMethod org/apache/axiom/om/OMText.setContentID:(Ljava/lang/String;)V
     116: aload_3
     117: areturn
     118: aload_0
     119: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
     122: invokeinterface #58,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getText:()Ljava/lang/String;
     127: astore_2
     128: goto          139
     131: astore_3
     132: aload_0
     133: aload_3
     134: putfield      #60                 // Field parserException:Ljava/lang/Exception;
     137: aload_3
     138: athrow
     139: aload_0
     140: getfield      #17                 // Field omfactory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
     143: aload_0
     144: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     147: aload_2
     148: iload_1
     149: iconst_1
     150: invokeinterface #61,  5           // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMText:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;IZ)Lorg/apache/axiom/om/OMText;
     155: areturn
    Exception table:
       from    to  target type
          44    54    57   Class javax/xml/stream/XMLStreamException
         118   128   131   Class java/lang/RuntimeException

  private void discarded(org.apache.axiom.om.impl.OMContainerEx);
    Code:
       0: aload_1
       1: invokeinterface #62,  1           // InterfaceMethod org/apache/axiom/om/impl/OMContainerEx.discarded:()V
       6: aload_0
       7: getfield      #15                 // Field discardTracker:Ljava/util/Map;
      10: ifnull        31
      13: aload_0
      14: getfield      #15                 // Field discardTracker:Ljava/util/Map;
      17: aload_1
      18: new           #63                 // class java/lang/Throwable
      21: dup
      22: invokespecial #64                 // Method java/lang/Throwable."<init>":()V
      25: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  public void debugDiscarded(java.lang.Object);
    Code:
       0: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
       3: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          47
      11: aload_0
      12: getfield      #15                 // Field discardTracker:Ljava/util/Map;
      15: ifnull        47
      18: aload_0
      19: getfield      #15                 // Field discardTracker:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #63                 // class java/lang/Throwable
      31: astore_2
      32: aload_2
      33: ifnull        47
      36: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      39: ldc           #67                 // String About to throw NodeUnavailableException. Location of the code that caused the node to be discarded/consumed:
      41: aload_2
      42: invokeinterface #68,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      47: return

  public void discard(org.apache.axiom.om.OMElement) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method discard:(Lorg/apache/axiom/om/OMContainer;)V
       5: aload_1
       6: invokeinterface #70,  1           // InterfaceMethod org/apache/axiom/om/OMElement.discard:()V
      11: return

  public void discard(org.apache.axiom.om.OMContainer) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field elementLevel:I
       4: istore_2
       5: aload_0
       6: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
       9: astore_3
      10: aload_3
      11: aload_1
      12: if_acmpeq     34
      15: iinc          2, -1
      18: aload_3
      19: checkcast     #71                 // class org/apache/axiom/om/OMElement
      22: invokeinterface #72,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getParent:()Lorg/apache/axiom/om/OMContainer;
      27: checkcast     #73                 // class org/apache/axiom/om/impl/OMContainerEx
      30: astore_3
      31: goto          10
      34: iload_2
      35: ifeq          50
      38: iload_2
      39: iconst_1
      40: if_icmpne     89
      43: aload_0
      44: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      47: ifnonnull     89
      50: aload_0
      51: invokevirtual #75                 // Method close:()V
      54: aload_0
      55: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
      58: astore_3
      59: aload_0
      60: aload_3
      61: invokespecial #76                 // Method discarded:(Lorg/apache/axiom/om/impl/OMContainerEx;)V
      64: aload_3
      65: aload_1
      66: if_acmpne     72
      69: goto          88
      72: aload_3
      73: checkcast     #71                 // class org/apache/axiom/om/OMElement
      76: invokeinterface #72,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getParent:()Lorg/apache/axiom/om/OMContainer;
      81: checkcast     #73                 // class org/apache/axiom/om/impl/OMContainerEx
      84: astore_3
      85: goto          59
      88: return
      89: iconst_0
      90: istore        4
      92: aload_0
      93: invokevirtual #77                 // Method parserNext:()I
      96: lookupswitch  { // 3
                     1: 132
                     2: 138
                     8: 212
               default: 276
          }
     132: iinc          4, 1
     135: goto          276
     138: iload         4
     140: ifle          149
     143: iinc          4, -1
     146: goto          276
     149: aload_0
     150: aload_0
     151: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     154: invokespecial #76                 // Method discarded:(Lorg/apache/axiom/om/impl/OMContainerEx;)V
     157: aload_1
     158: aload_0
     159: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     162: if_acmpne     169
     165: iconst_1
     166: goto          170
     169: iconst_0
     170: istore        5
     172: aload_0
     173: aload_0
     174: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     177: checkcast     #71                 // class org/apache/axiom/om/OMElement
     180: invokeinterface #72,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getParent:()Lorg/apache/axiom/om/OMContainer;
     185: checkcast     #73                 // class org/apache/axiom/om/impl/OMContainerEx
     188: putfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     191: aload_0
     192: dup
     193: getfield      #10                 // Field elementLevel:I
     196: iconst_1
     197: isub
     198: putfield      #10                 // Field elementLevel:I
     201: iload         5
     203: ifeq          209
     206: goto          279
     209: goto          276
     212: iload         4
     214: ifne          224
     217: aload_0
     218: getfield      #10                 // Field elementLevel:I
     221: ifeq          234
     224: new           #33                 // class org/apache/axiom/om/OMException
     227: dup
     228: ldc           #78                 // String Unexpected END_DOCUMENT
     230: invokespecial #79                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
     233: athrow
     234: aload_0
     235: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     238: aload_0
     239: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
     242: if_acmpeq     255
     245: new           #33                 // class org/apache/axiom/om/OMException
     248: dup
     249: ldc           #80                 // String Called discard for an element that is not being built by this builder
     251: invokespecial #79                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
     254: athrow
     255: aload_0
     256: aload_0
     257: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     260: invokespecial #76                 // Method discarded:(Lorg/apache/axiom/om/impl/OMContainerEx;)V
     263: aload_0
     264: aconst_null
     265: putfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     268: aload_0
     269: iconst_1
     270: putfield      #2                  // Field done:Z
     273: goto          279
     276: goto          92
     279: return

  public java.lang.String getText() throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: invokeinterface #58,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getText:()Ljava/lang/String;
       9: areturn

  public java.lang.String getNamespace() throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: invokeinterface #81,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getNamespaceURI:()Ljava/lang/String;
       9: areturn

  public int getNamespaceCount() throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: invokeinterface #82,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getNamespaceCount:()I
       9: ireturn
      10: astore_1
      11: new           #33                 // class org/apache/axiom/om/OMException
      14: dup
      15: aload_1
      16: invokespecial #34                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Exception

  public java.lang.String getNamespacePrefix(int) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: iload_1
       5: invokeinterface #84,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getNamespacePrefix:(I)Ljava/lang/String;
      10: areturn
      11: astore_2
      12: new           #33                 // class org/apache/axiom/om/OMException
      15: dup
      16: aload_2
      17: invokespecial #34                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/Exception

  public java.lang.String getNamespaceUri(int) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: iload_1
       5: invokeinterface #85,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getNamespaceURI:(I)Ljava/lang/String;
      10: areturn
      11: astore_2
      12: new           #33                 // class org/apache/axiom/om/OMException
      15: dup
      16: aload_2
      17: invokespecial #34                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/Exception

  public void setCache(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parserAccessed:Z
       4: ifeq          21
       7: iload_1
       8: ifeq          21
      11: new           #86                 // class java/lang/UnsupportedOperationException
      14: dup
      15: ldc           #87                 // String parser accessed. cannot set cache
      17: invokespecial #88                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #3                  // Field cache:Z
      26: return

  public boolean isCache();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cache:Z
       4: ireturn

  public java.lang.String getName() throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: invokeinterface #89,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getLocalName:()Ljava/lang/String;
       9: areturn

  public java.lang.String getPrefix() throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: invokeinterface #90,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getPrefix:()Ljava/lang/String;
       9: areturn

  public int getAttributeCount() throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: invokeinterface #35,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeCount:()I
       9: ireturn

  public java.lang.String getAttributeNamespace(int) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: iload_1
       5: invokeinterface #36,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeNamespace:(I)Ljava/lang/String;
      10: areturn

  public java.lang.String getAttributeName(int) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: iload_1
       5: invokeinterface #36,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeNamespace:(I)Ljava/lang/String;
      10: areturn

  public java.lang.String getAttributePrefix(int) throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
       4: iload_1
       5: invokeinterface #36,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeNamespace:(I)Ljava/lang/String;
      10: areturn

  public java.lang.Object getParser();
    Code:
       0: aload_0
       1: getfield      #4                  // Field parserAccessed:Z
       4: ifeq          17
       7: new           #91                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #92                 // String Parser already accessed!
      13: invokespecial #93                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field cache:Z
      21: ifne          99
      24: aload_0
      25: iconst_1
      26: putfield      #4                  // Field parserAccessed:Z
      29: aload_0
      30: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
      33: astore_1
      34: aload_0
      35: getfield      #10                 // Field elementLevel:I
      38: ifle          72
      41: aload_0
      42: aload_1
      43: invokespecial #76                 // Method discarded:(Lorg/apache/axiom/om/impl/OMContainerEx;)V
      46: aload_1
      47: checkcast     #71                 // class org/apache/axiom/om/OMElement
      50: invokeinterface #72,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getParent:()Lorg/apache/axiom/om/OMContainer;
      55: checkcast     #73                 // class org/apache/axiom/om/impl/OMContainerEx
      58: astore_1
      59: aload_0
      60: dup
      61: getfield      #10                 // Field elementLevel:I
      64: iconst_1
      65: isub
      66: putfield      #10                 // Field elementLevel:I
      69: goto          34
      72: aload_1
      73: ifnull        89
      76: aload_1
      77: aload_0
      78: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      81: if_acmpne     89
      84: aload_0
      85: aload_1
      86: invokespecial #76                 // Method discarded:(Lorg/apache/axiom/om/impl/OMContainerEx;)V
      89: aload_0
      90: aconst_null
      91: putfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
      94: aload_0
      95: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      98: areturn
      99: new           #91                 // class java/lang/IllegalStateException
     102: dup
     103: ldc           #94                 // String cache must be switched off to access the parser
     105: invokespecial #93                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow

  public javax.xml.stream.XMLStreamReader disableCaching();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field cache:Z
       5: aload_0
       6: invokevirtual #77                 // Method parserNext:()I
       9: pop
      10: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      13: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      18: ifeq          51
      21: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      24: new           #95                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #97                 // String Caching disabled; current element level is
      33: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #10                 // Field elementLevel:I
      40: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      51: aload_0
      52: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      55: areturn

  public void reenableCaching(org.apache.axiom.om.OMContainer);
    Code:
       0: aload_0
       1: getfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokespecial #76                 // Method discarded:(Lorg/apache/axiom/om/impl/OMContainerEx;)V
      10: aload_0
      11: getfield      #10                 // Field elementLevel:I
      14: ifne          38
      17: aload_2
      18: aload_1
      19: if_acmpne     30
      22: aload_2
      23: aload_0
      24: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      27: if_acmpeq     72
      30: new           #91                 // class java/lang/IllegalStateException
      33: dup
      34: invokespecial #102                // Method java/lang/IllegalStateException."<init>":()V
      37: athrow
      38: aload_0
      39: dup
      40: getfield      #10                 // Field elementLevel:I
      43: iconst_1
      44: isub
      45: putfield      #10                 // Field elementLevel:I
      48: aload_2
      49: aload_1
      50: if_acmpne     56
      53: goto          72
      56: aload_2
      57: checkcast     #71                 // class org/apache/axiom/om/OMElement
      60: invokeinterface #72,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getParent:()Lorg/apache/axiom/om/OMContainer;
      65: checkcast     #73                 // class org/apache/axiom/om/impl/OMContainerEx
      68: astore_2
      69: goto          5
      72: aload_1
      73: aload_0
      74: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      77: if_acmpne     93
      80: aload_0
      81: aconst_null
      82: putfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
      85: aload_0
      86: iconst_1
      87: putfield      #2                  // Field done:Z
      90: goto          148
      93: aload_0
      94: getfield      #10                 // Field elementLevel:I
      97: ifne          132
     100: aload_0
     101: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
     104: ifnonnull     132
     107: aload_0
     108: invokevirtual #77                 // Method parserNext:()I
     111: bipush        8
     113: if_icmpeq     119
     116: goto          107
     119: aload_0
     120: aconst_null
     121: putfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     124: aload_0
     125: iconst_1
     126: putfield      #2                  // Field done:Z
     129: goto          148
     132: aload_0
     133: aload_1
     134: checkcast     #71                 // class org/apache/axiom/om/OMElement
     137: invokeinterface #72,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getParent:()Lorg/apache/axiom/om/OMContainer;
     142: checkcast     #73                 // class org/apache/axiom/om/impl/OMContainerEx
     145: putfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     148: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
     151: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     156: ifeq          201
     159: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
     162: new           #95                 // class java/lang/StringBuilder
     165: dup
     166: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
     169: ldc           #104                // String Caching re-enabled; new element level:
     171: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload_0
     175: getfield      #10                 // Field elementLevel:I
     178: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     181: ldc           #105                // String ; done=
     183: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_0
     187: getfield      #2                  // Field done:Z
     190: invokevirtual #106                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     193: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     201: aload_0
     202: getfield      #2                  // Field done:Z
     205: ifeq          219
     208: aload_0
     209: getfield      #107                // Field autoClose:Z
     212: ifeq          219
     215: aload_0
     216: invokevirtual #75                 // Method close:()V
     219: aload_0
     220: iconst_1
     221: putfield      #3                  // Field cache:Z
     224: return

  public boolean isCompleted();
    Code:
       0: aload_0
       1: getfield      #2                  // Field done:Z
       4: ireturn

  protected abstract org.apache.axiom.om.OMNode createOMElement() throws org.apache.axiom.om.OMException;

  abstract int parserNext();

  public abstract int next() throws org.apache.axiom.om.OMException;

  public org.apache.axiom.om.impl.builder.CustomBuilder registerCustomBuilder(javax.xml.namespace.QName, int, org.apache.axiom.om.impl.builder.CustomBuilder);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #8                  // Field customBuilders:Ljava/util/Map;
       7: ifnonnull     24
      10: aload_0
      11: new           #108                // class java/util/HashMap
      14: dup
      15: invokespecial #109                // Method java/util/HashMap."<init>":()V
      18: putfield      #8                  // Field customBuilders:Ljava/util/Map;
      21: goto          39
      24: aload_0
      25: getfield      #8                  // Field customBuilders:Ljava/util/Map;
      28: aload_1
      29: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #110                // class org/apache/axiom/om/impl/builder/CustomBuilder
      37: astore        4
      39: aload_0
      40: aload_0
      41: getfield      #9                  // Field maxDepthForCustomBuilders:I
      44: iload_2
      45: if_icmple     55
      48: aload_0
      49: getfield      #9                  // Field maxDepthForCustomBuilders:I
      52: goto          56
      55: iload_2
      56: putfield      #9                  // Field maxDepthForCustomBuilders:I
      59: aload_0
      60: getfield      #8                  // Field customBuilders:Ljava/util/Map;
      63: aload_1
      64: aload_3
      65: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload         4
      73: areturn

  public org.apache.axiom.om.impl.builder.CustomBuilder registerCustomBuilderForPayload(org.apache.axiom.om.impl.builder.CustomBuilder);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: aload_1
       4: putfield      #7                  // Field customBuilderForPayload:Lorg/apache/axiom/om/impl/builder/CustomBuilder;
       7: aload_2
       8: areturn

  protected org.apache.axiom.om.impl.builder.CustomBuilder getCustomBuilder(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field customBuilders:Ljava/util/Map;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: new           #111                // class javax/xml/namespace/QName
      12: dup
      13: aload_1
      14: aload_2
      15: invokespecial #112                // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      18: astore_3
      19: aload_0
      20: getfield      #8                  // Field customBuilders:Ljava/util/Map;
      23: aload_3
      24: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #110                // class org/apache/axiom/om/impl/builder/CustomBuilder
      32: areturn

  public short getBuilderType();
    Code:
       0: iconst_1
       1: ireturn

  public void registerExternalContentHandler(java.lang.Object);
    Code:
       0: new           #86                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object getRegisteredContentHandler();
    Code:
       0: new           #86                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected abstract org.apache.axiom.om.OMDocument createDocument();

  protected void createDocumentIfNecessary();
    Code:
       0: aload_0
       1: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
       4: ifnonnull     124
       7: aload_0
       8: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      11: invokeinterface #115,  1          // InterfaceMethod javax/xml/stream/XMLStreamReader.getEventType:()I
      16: bipush        7
      18: if_icmpne     124
      21: aload_0
      22: aload_0
      23: invokevirtual #117                // Method createDocument:()Lorg/apache/axiom/om/OMDocument;
      26: putfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      29: aload_0
      30: getfield      #5                  // Field charEncoding:Ljava/lang/String;
      33: ifnull        49
      36: aload_0
      37: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      40: aload_0
      41: getfield      #5                  // Field charEncoding:Ljava/lang/String;
      44: invokeinterface #118,  2          // InterfaceMethod org/apache/axiom/om/OMDocument.setCharsetEncoding:(Ljava/lang/String;)V
      49: aload_0
      50: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      53: aload_0
      54: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      57: invokeinterface #119,  1          // InterfaceMethod javax/xml/stream/XMLStreamReader.getVersion:()Ljava/lang/String;
      62: invokeinterface #120,  2          // InterfaceMethod org/apache/axiom/om/OMDocument.setXMLVersion:(Ljava/lang/String;)V
      67: aload_0
      68: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      71: aload_0
      72: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      75: invokeinterface #121,  1          // InterfaceMethod javax/xml/stream/XMLStreamReader.getCharacterEncodingScheme:()Ljava/lang/String;
      80: invokeinterface #122,  2          // InterfaceMethod org/apache/axiom/om/OMDocument.setXMLEncoding:(Ljava/lang/String;)V
      85: aload_0
      86: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      89: aload_0
      90: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      93: invokeinterface #123,  1          // InterfaceMethod javax/xml/stream/XMLStreamReader.isStandalone:()Z
      98: ifeq          106
     101: ldc           #124                // String yes
     103: goto          108
     106: ldc           #125                // String no
     108: invokeinterface #126,  2          // InterfaceMethod org/apache/axiom/om/OMDocument.setStandalone:(Ljava/lang/String;)V
     113: aload_0
     114: aload_0
     115: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
     118: checkcast     #73                 // class org/apache/axiom/om/impl/OMContainerEx
     121: putfield      #53                 // Field target:Lorg/apache/axiom/om/impl/OMContainerEx;
     124: return

  public org.apache.axiom.om.OMDocument getDocument();
    Code:
       0: aload_0
       1: invokevirtual #127                // Method createDocumentIfNecessary:()V
       4: aload_0
       5: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
       8: ifnonnull     21
      11: new           #86                 // class java/lang/UnsupportedOperationException
      14: dup
      15: ldc           #128                // String There is no document linked to this builder
      17: invokespecial #88                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
      25: areturn

  public java.lang.String getCharsetEncoding();
    Code:
       0: aload_0
       1: getfield      #74                 // Field document:Lorg/apache/axiom/om/OMDocument;
       4: invokeinterface #129,  1          // InterfaceMethod org/apache/axiom/om/OMDocument.getCharsetEncoding:()Ljava/lang/String;
       9: areturn

  public void close();
    Code:
       0: aload_0
       1: invokevirtual #130                // Method isClosed:()Z
       4: ifne          32
       7: aload_0
       8: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      11: invokeinterface #131,  1          // InterfaceMethod javax/xml/stream/XMLStreamReader.close:()V
      16: aload_0
      17: getfield      #19                 // Field closeable:Ljava/io/Closeable;
      20: ifnull        32
      23: aload_0
      24: getfield      #19                 // Field closeable:Ljava/io/Closeable;
      27: invokeinterface #132,  1          // InterfaceMethod java/io/Closeable.close:()V
      32: aload_0
      33: iconst_1
      34: putfield      #6                  // Field _isClosed:Z
      37: aload_0
      38: iconst_1
      39: putfield      #2                  // Field done:Z
      42: aload_0
      43: aconst_null
      44: putfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      47: goto          125
      50: astore_1
      51: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      54: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      59: ifeq          89
      62: getstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
      65: new           #95                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #133                // String Exception occurred during parser close.  Processing continues.
      74: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_1
      78: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #101,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      89: aload_0
      90: iconst_1
      91: putfield      #6                  // Field _isClosed:Z
      94: aload_0
      95: iconst_1
      96: putfield      #2                  // Field done:Z
      99: aload_0
     100: aconst_null
     101: putfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
     104: goto          125
     107: astore_2
     108: aload_0
     109: iconst_1
     110: putfield      #6                  // Field _isClosed:Z
     113: aload_0
     114: iconst_1
     115: putfield      #2                  // Field done:Z
     118: aload_0
     119: aconst_null
     120: putfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
     123: aload_2
     124: athrow
     125: return
    Exception table:
       from    to  target type
           0    32    50   Class java/lang/Throwable
           0    32   107   any
          50    89   107   any

  public java.lang.Object getReaderProperty(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokevirtual #130                // Method isClosed:()Z
       4: ifne          18
       7: aload_0
       8: getfield      #28                 // Field parser:Ljavax/xml/stream/XMLStreamReader;
      11: aload_1
      12: invokeinterface #135,  2          // InterfaceMethod javax/xml/stream/XMLStreamReader.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      17: areturn
      18: aconst_null
      19: areturn

  public java.lang.String getCharacterEncoding();
    Code:
       0: aload_0
       1: getfield      #5                  // Field charEncoding:Ljava/lang/String;
       4: ifnonnull     10
       7: ldc           #136                // String UTF-8
       9: areturn
      10: aload_0
      11: getfield      #5                  // Field charEncoding:Ljava/lang/String;
      14: areturn

  public void setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #107                // Field autoClose:Z
       5: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _isClosed:Z
       4: ireturn

  public void releaseParserOnClose(boolean);
    Code:
       0: return

  public void detach() throws org.apache.axiom.om.OMException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field detachable:Lorg/apache/axiom/om/impl/builder/Detachable;
       4: ifnull        19
       7: aload_0
       8: getfield      #18                 // Field detachable:Lorg/apache/axiom/om/impl/builder/Detachable;
      11: invokeinterface #137,  1          // InterfaceMethod org/apache/axiom/om/impl/builder/Detachable.detach:()V
      16: goto          34
      19: aload_0
      20: getfield      #2                  // Field done:Z
      23: ifne          34
      26: aload_0
      27: invokevirtual #138                // Method next:()I
      30: pop
      31: goto          19
      34: return

  static {};
    Code:
       0: ldc           #139                // class org/apache/axiom/om/impl/builder/StAXBuilder
       2: invokestatic  #140                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #11                 // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
