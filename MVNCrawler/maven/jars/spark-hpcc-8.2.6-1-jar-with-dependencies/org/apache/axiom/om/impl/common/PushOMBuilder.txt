Compiled from "PushOMBuilder.java"
public class org.apache.axiom.om.impl.common.PushOMBuilder extends org.apache.axiom.util.stax.AbstractXMLStreamWriter implements org.apache.axiom.ext.stax.datahandler.DataHandlerWriter {
  private final org.apache.axiom.om.impl.intf.AxiomSourcedElement root;

  private final org.apache.axiom.om.impl.builder.OMFactoryEx factory;

  private org.apache.axiom.om.OMElement parent;

  public org.apache.axiom.om.impl.common.PushOMBuilder(org.apache.axiom.om.impl.intf.AxiomSourcedElement) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/apache/axiom/util/stax/AbstractXMLStreamWriter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #23                 // Field root:Lorg/apache/axiom/om/impl/intf/AxiomSourcedElement;
       9: aload_0
      10: aload_1
      11: invokestatic  #25                 // Method org/apache/axiom/om/impl/common/AxiomInformationItemSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomInformationItemSupport$org_apache_axiom_om_impl_intf_AxiomInformationItem$getOMFactory:(Lorg/apache/axiom/om/impl/intf/AxiomInformationItem;)Lorg/apache/axiom/om/OMFactory;
      14: checkcast     #31                 // class org/apache/axiom/om/impl/builder/OMFactoryEx
      17: putfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
      20: aload_1
      21: invokestatic  #35                 // Method org/apache/axiom/om/impl/common/AxiomChildNodeSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomChildNodeSupport$org_apache_axiom_om_impl_intf_AxiomChildNode$getParent:(Lorg/apache/axiom/om/impl/intf/AxiomChildNode;)Lorg/apache/axiom/om/OMContainer;
      24: astore_2
      25: aload_2
      26: instanceof    #41                 // class org/apache/axiom/om/OMElement
      29: ifeq          83
      32: aload_2
      33: checkcast     #41                 // class org/apache/axiom/om/OMElement
      36: invokeinterface #43,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getNamespacesInScope:()Ljava/util/Iterator;
      41: astore_3
      42: goto          74
      45: aload_3
      46: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #53                 // class org/apache/axiom/om/OMNamespace
      54: astore        4
      56: aload_0
      57: aload         4
      59: invokeinterface #55,  1           // InterfaceMethod org/apache/axiom/om/OMNamespace.getPrefix:()Ljava/lang/String;
      64: aload         4
      66: invokeinterface #59,  1           // InterfaceMethod org/apache/axiom/om/OMNamespace.getNamespaceURI:()Ljava/lang/String;
      71: invokevirtual #62                 // Method setPrefix:(Ljava/lang/String;Ljava/lang/String;)V
      74: aload_3
      75: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifne          45
      83: return

  public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: getstatic     #83                 // Field org/apache/axiom/ext/stax/datahandler/DataHandlerWriter.PROPERTY:Ljava/lang/String;
       3: aload_1
       4: invokevirtual #87                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       7: ifeq          12
      10: aload_0
      11: areturn
      12: new           #81                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #93                 // class java/lang/StringBuilder
      19: dup
      20: ldc           #95                 // String Unsupported property
      22: invokespecial #97                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      25: aload_1
      26: invokevirtual #100                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #107                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow

  protected void doWriteStartDocument();
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #112                // String OMDataSource#serialize(XMLStreamWriter) MUST NOT use XMLStreamWriter#writeStartDocument()
       6: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void doWriteStartDocument(java.lang.String, java.lang.String);
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #115                // String OMDataSource#serialize(XMLStreamWriter) MUST NOT use XMLStreamWriter#writeStartDocument(String, String)
       6: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void doWriteStartDocument(java.lang.String);
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #119                // String OMDataSource#serialize(XMLStreamWriter) MUST NOT use XMLStreamWriter#writeStartDocument(String)
       6: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void doWriteEndDocument();
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #122                // String OMDataSource#serialize(XMLStreamWriter) MUST NOT use XMLStreamWriter#writeEndDocument()
       6: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void doWriteDTD(java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #16                 // class javax/xml/stream/XMLStreamException
       3: dup
       4: ldc           #125                // String A DTD must not appear in element content
       6: invokespecial #127                // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/String;)V
       9: athrow

  private org.apache.axiom.om.OMNamespace getOMNamespace(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #131                // String
       6: astore_1
       7: aload_2
       8: ifnonnull     14
      11: ldc           #131                // String
      13: astore_2
      14: iload_3
      15: ifne          27
      18: aload_2
      19: invokevirtual #133                // Method java/lang/String.length:()I
      22: ifne          27
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      31: ifnull        68
      34: aload_0
      35: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      38: aload_1
      39: invokeinterface #139,  2          // InterfaceMethod org/apache/axiom/om/OMElement.findNamespaceURI:(Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
      44: astore        4
      46: aload         4
      48: ifnull        68
      51: aload         4
      53: invokeinterface #59,  1           // InterfaceMethod org/apache/axiom/om/OMNamespace.getNamespaceURI:()Ljava/lang/String;
      58: aload_2
      59: invokevirtual #87                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifeq          68
      65: aload         4
      67: areturn
      68: aload_0
      69: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
      72: aload_2
      73: aload_1
      74: invokeinterface #143,  3          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
      79: areturn

  protected void doWriteStartElement(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: iconst_0
       4: invokespecial #153                // Method getOMNamespace:(Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMNamespace;
       7: astore        4
       9: aload_0
      10: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      13: ifnonnull     37
      16: aload_0
      17: getfield      #23                 // Field root:Lorg/apache/axiom/om/impl/intf/AxiomSourcedElement;
      20: aload_1
      21: aload_2
      22: aload_3
      23: invokestatic  #155                // Method org/apache/axiom/om/impl/common/AxiomSourcedElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomSourcedElementSupport$org_apache_axiom_om_impl_intf_AxiomSourcedElement$validateName:(Lorg/apache/axiom/om/impl/intf/AxiomSourcedElement;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      26: aload_0
      27: aload_0
      28: getfield      #23                 // Field root:Lorg/apache/axiom/om/impl/intf/AxiomSourcedElement;
      31: putfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      34: goto          56
      37: aload_0
      38: aload_0
      39: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
      42: aload_2
      43: aload_0
      44: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      47: aconst_null
      48: invokeinterface #161,  4          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMElement:(Ljava/lang/String;Lorg/apache/axiom/om/OMContainer;Lorg/apache/axiom/om/OMXMLParserWrapper;)Lorg/apache/axiom/om/OMElement;
      53: putfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      56: aload         4
      58: ifnull        73
      61: aload_0
      62: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      65: aload         4
      67: iconst_0
      68: invokeinterface #165,  3          // InterfaceMethod org/apache/axiom/om/OMElement.setNamespace:(Lorg/apache/axiom/om/OMNamespace;Z)V
      73: return

  protected void doWriteStartElement(java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #170                // String OMDataSource#serialize(XMLStreamWriter) MUST NOT use XMLStreamWriter#writeStartElement(String)
       6: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void doWriteEndElement();
    Code:
       0: aload_0
       1: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       4: aload_0
       5: getfield      #23                 // Field root:Lorg/apache/axiom/om/impl/intf/AxiomSourcedElement;
       8: if_acmpne     19
      11: aload_0
      12: aconst_null
      13: putfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      16: goto          48
      19: aload_0
      20: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      23: checkcast     #173                // class org/apache/axiom/om/impl/OMContainerEx
      26: iconst_1
      27: invokeinterface #175,  2          // InterfaceMethod org/apache/axiom/om/impl/OMContainerEx.setComplete:(Z)V
      32: aload_0
      33: aload_0
      34: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      37: invokeinterface #179,  1          // InterfaceMethod org/apache/axiom/om/OMElement.getParent:()Lorg/apache/axiom/om/OMContainer;
      42: checkcast     #41                 // class org/apache/axiom/om/OMElement
      45: putfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      48: return

  protected void doWriteEmptyElement(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #184                // Method doWriteStartElement:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       7: aload_0
       8: invokevirtual #186                // Method doWriteEndElement:()V
      11: return

  protected void doWriteEmptyElement(java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #188                // String OMDataSource#serialize(XMLStreamWriter) MUST NOT use XMLStreamWriter#writeEmptyElement(String)
       6: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void doWriteAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: iconst_0
       9: invokespecial #153                // Method getOMNamespace:(Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMNamespace;
      12: aload         4
      14: invokeinterface #192,  4          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMAttribute:(Ljava/lang/String;Lorg/apache/axiom/om/OMNamespace;Ljava/lang/String;)Lorg/apache/axiom/om/OMAttribute;
      19: astore        5
      21: aload_0
      22: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      25: checkcast     #196                // class org/apache/axiom/om/impl/intf/AxiomElement
      28: aload         5
      30: invokestatic  #198                // Method org/apache/axiom/om/impl/common/AxiomElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$internalAppendAttribute:(Lorg/apache/axiom/om/impl/intf/AxiomElement;Lorg/apache/axiom/om/OMAttribute;)V
      33: return

  protected void doWriteAttribute(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: aload_1
       4: aload_2
       5: invokevirtual #207                // Method doWriteAttribute:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
       8: return

  protected void doWriteNamespace(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       4: checkcast     #196                // class org/apache/axiom/om/impl/intf/AxiomElement
       7: aload_0
       8: aload_1
       9: aload_2
      10: iconst_1
      11: invokespecial #153                // Method getOMNamespace:(Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMNamespace;
      14: invokestatic  #210                // Method org/apache/axiom/om/impl/common/AxiomElementSupport.ajc$interMethodDispatch1$org_apache_axiom_om_impl_common_AxiomElementSupport$org_apache_axiom_om_impl_intf_AxiomElement$addNamespaceDeclaration:(Lorg/apache/axiom/om/impl/intf/AxiomElement;Lorg/apache/axiom/om/OMNamespace;)V
      17: return

  protected void doWriteDefaultNamespace(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokevirtual #215                // Method doWriteNamespace:(Ljava/lang/String;Ljava/lang/String;)V
       6: return

  protected void doWriteCharacters(char[], int, int);
    Code:
       0: aload_0
       1: new           #88                 // class java/lang/String
       4: dup
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #219                // Method java/lang/String."<init>":([CII)V
      11: invokevirtual #221                // Method doWriteCharacters:(Ljava/lang/String;)V
      14: return

  protected void doWriteCharacters(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_0
       5: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       8: aload_1
       9: iconst_4
      10: iconst_1
      11: invokeinterface #228,  5          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMText:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;IZ)Lorg/apache/axiom/om/OMText;
      16: pop
      17: return

  protected void doWriteCData(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_0
       5: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       8: aload_1
       9: bipush        12
      11: iconst_1
      12: invokeinterface #228,  5          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMText:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;IZ)Lorg/apache/axiom/om/OMText;
      17: pop
      18: return

  protected void doWriteComment(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_0
       5: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       8: aload_1
       9: iconst_1
      10: invokeinterface #235,  4          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMComment:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMComment;
      15: pop
      16: return

  protected void doWriteEntityRef(java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_0
       5: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       8: aload_1
       9: aconst_null
      10: iconst_1
      11: invokeinterface #240,  5          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMEntityReference:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMEntityReference;
      16: pop
      17: return

  protected void doWriteProcessingInstruction(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_0
       5: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       8: aload_1
       9: aload_2
      10: iconst_1
      11: invokeinterface #245,  5          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMProcessingInstruction:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMProcessingInstruction;
      16: pop
      17: return

  protected void doWriteProcessingInstruction(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #131                // String
       4: invokevirtual #250                // Method doWriteProcessingInstruction:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public void flush() throws javax.xml.stream.XMLStreamException;
    Code:
       0: return

  public void close() throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #254                // String OMDataSource#serialize(XMLStreamWriter) MUST NOT call XMLStreamWriter#close()
       6: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeDataHandler(javax.activation.DataHandler, java.lang.String, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_1
       5: iload_3
       6: invokeinterface #260,  3          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMText:(Ljava/lang/Object;Z)Lorg/apache/axiom/om/OMText;
      11: astore        4
      13: aload_2
      14: ifnull        25
      17: aload         4
      19: aload_2
      20: invokeinterface #263,  2          // InterfaceMethod org/apache/axiom/om/OMText.setContentID:(Ljava/lang/String;)V
      25: aload_0
      26: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
      29: aload         4
      31: invokeinterface #268,  2          // InterfaceMethod org/apache/axiom/om/OMElement.addChild:(Lorg/apache/axiom/om/OMNode;)V
      36: return

  public void writeDataHandler(org.apache.axiom.ext.stax.datahandler.DataHandlerProvider, java.lang.String, boolean) throws java.io.IOException, javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #137                // Field parent:Lorg/apache/axiom/om/OMElement;
       4: aload_0
       5: getfield      #33                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       8: aload_2
       9: aload_1
      10: iload_3
      11: invokeinterface #279,  4          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMText:(Ljava/lang/String;Lorg/apache/axiom/ext/stax/datahandler/DataHandlerProvider;Z)Lorg/apache/axiom/om/OMText;
      16: invokeinterface #268,  2          // InterfaceMethod org/apache/axiom/om/OMElement.addChild:(Lorg/apache/axiom/om/OMNode;)V
      21: return
}
