Compiled from "ElementHelper.java"
public class org.apache.axiom.om.util.ElementHelper {
  private org.apache.axiom.om.OMElement element;

  public org.apache.axiom.om.util.ElementHelper(org.apache.axiom.om.OMElement);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
       9: return

  public javax.xml.namespace.QName resolveQName(java.lang.String, boolean);
    Code:
       0: aload_1
       1: bipush        58
       3: invokevirtual #3                  // Method java/lang/String.indexOf:(I)I
       6: istore_3
       7: iload_3
       8: ifge          89
      11: iload_2
      12: ifeq          80
      15: aload_0
      16: getfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
      19: invokeinterface #4,  1            // InterfaceMethod org/apache/axiom/om/OMElement.getNamespace:()Lorg/apache/axiom/om/OMNamespace;
      24: astore        4
      26: aload         4
      28: ifnull        80
      31: aload         4
      33: invokeinterface #5,  1            // InterfaceMethod org/apache/axiom/om/OMNamespace.getPrefix:()Ljava/lang/String;
      38: ifnonnull     57
      41: new           #6                  // class javax/xml/namespace/QName
      44: dup
      45: aload         4
      47: invokeinterface #7,  1            // InterfaceMethod org/apache/axiom/om/OMNamespace.getNamespaceURI:()Ljava/lang/String;
      52: aload_1
      53: invokespecial #8                  // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      56: areturn
      57: new           #6                  // class javax/xml/namespace/QName
      60: dup
      61: aload         4
      63: invokeinterface #7,  1            // InterfaceMethod org/apache/axiom/om/OMNamespace.getNamespaceURI:()Ljava/lang/String;
      68: aload_1
      69: aload         4
      71: invokeinterface #5,  1            // InterfaceMethod org/apache/axiom/om/OMNamespace.getPrefix:()Ljava/lang/String;
      76: invokespecial #9                  // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      79: areturn
      80: new           #6                  // class javax/xml/namespace/QName
      83: dup
      84: aload_1
      85: invokespecial #10                 // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;)V
      88: areturn
      89: aload_1
      90: iconst_0
      91: iload_3
      92: invokevirtual #11                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      95: astore        4
      97: aload_1
      98: iload_3
      99: iconst_1
     100: iadd
     101: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     104: astore        5
     106: aload         5
     108: invokevirtual #13                 // Method java/lang/String.length:()I
     111: ifne          116
     114: aconst_null
     115: areturn
     116: aload_0
     117: getfield      #2                  // Field element:Lorg/apache/axiom/om/OMElement;
     120: aload         4
     122: invokeinterface #14,  2           // InterfaceMethod org/apache/axiom/om/OMElement.findNamespaceURI:(Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
     127: astore        6
     129: aload         6
     131: ifnonnull     136
     134: aconst_null
     135: areturn
     136: new           #6                  // class javax/xml/namespace/QName
     139: dup
     140: aload         6
     142: invokeinterface #7,  1            // InterfaceMethod org/apache/axiom/om/OMNamespace.getNamespaceURI:()Ljava/lang/String;
     147: aload         5
     149: aload         4
     151: invokespecial #9                  // Method javax/xml/namespace/QName."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     154: areturn

  public javax.xml.namespace.QName resolveQName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #15                 // Method resolveQName:(Ljava/lang/String;Z)Ljavax/xml/namespace/QName;
       6: areturn

  public static void setNewElement(org.apache.axiom.om.OMElement, org.apache.axiom.om.OMElement, org.apache.axiom.om.OMElement);
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_1
       5: invokeinterface #16,  1           // InterfaceMethod org/apache/axiom/om/OMElement.discard:()V
      10: aload_0
      11: aload_2
      12: invokeinterface #17,  2           // InterfaceMethod org/apache/axiom/om/OMElement.addChild:(Lorg/apache/axiom/om/OMNode;)V
      17: return

  public static org.apache.axiom.om.OMElement getChildWithName(org.apache.axiom.om.OMElement, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #18,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getChildren:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          60
      16: aload_2
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #21                 // class org/apache/axiom/om/OMNode
      25: astore_3
      26: aload_3
      27: invokeinterface #22,  1           // InterfaceMethod org/apache/axiom/om/OMNode.getType:()I
      32: iconst_1
      33: if_icmpne     57
      36: aload_1
      37: aload_3
      38: checkcast     #23                 // class org/apache/axiom/om/OMElement
      41: invokeinterface #24,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getLocalName:()Ljava/lang/String;
      46: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          57
      52: aload_3
      53: checkcast     #23                 // class org/apache/axiom/om/OMElement
      56: areturn
      57: goto          7
      60: aconst_null
      61: areturn

  public static java.lang.String getContentID(javax.xml.stream.XMLStreamReader, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method getContentID:(Ljavax/xml/stream/XMLStreamReader;)Ljava/lang/String;
       4: areturn

  public static java.lang.String getContentID(javax.xml.stream.XMLStreamReader);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeCount:()I
       6: ifle          35
       9: aload_0
      10: iconst_0
      11: invokeinterface #28,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeLocalName:(I)Ljava/lang/String;
      16: ldc           #29                 // String href
      18: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          35
      24: aload_0
      25: iconst_0
      26: invokeinterface #30,  2           // InterfaceMethod javax/xml/stream/XMLStreamReader.getAttributeValue:(I)Ljava/lang/String;
      31: invokestatic  #31                 // Method getContentIDFromHref:(Ljava/lang/String;)Ljava/lang/String;
      34: areturn
      35: new           #32                 // class org/apache/axiom/om/OMException
      38: dup
      39: ldc           #33                 // String Href attribute not found in XOP:Include element
      41: invokespecial #34                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
      44: athrow

  public static java.lang.String getContentIDFromHref(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #35                 // Method org/apache/axiom/util/stax/xop/XOPUtils.getContentIDFromURL:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn

  public static org.apache.axiom.om.OMElement importOMElement(org.apache.axiom.om.OMElement, org.apache.axiom.om.OMFactory);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getOMFactory:()Lorg/apache/axiom/om/OMFactory;
       6: invokeinterface #37,  1           // InterfaceMethod org/apache/axiom/om/OMFactory.getMetaFactory:()Lorg/apache/axiom/om/OMMetaFactory;
      11: aload_1
      12: invokeinterface #37,  1           // InterfaceMethod org/apache/axiom/om/OMFactory.getMetaFactory:()Lorg/apache/axiom/om/OMMetaFactory;
      17: if_acmpne     22
      20: aload_0
      21: areturn
      22: aload_1
      23: invokeinterface #37,  1           // InterfaceMethod org/apache/axiom/om/OMFactory.getMetaFactory:()Lorg/apache/axiom/om/OMMetaFactory;
      28: aload_1
      29: aload_0
      30: invokeinterface #38,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getXMLStreamReader:()Ljavax/xml/stream/XMLStreamReader;
      35: invokeinterface #39,  3           // InterfaceMethod org/apache/axiom/om/OMMetaFactory.createStAXOMBuilder:(Lorg/apache/axiom/om/OMFactory;Ljavax/xml/stream/XMLStreamReader;)Lorg/apache/axiom/om/OMXMLParserWrapper;
      40: invokeinterface #40,  1           // InterfaceMethod org/apache/axiom/om/OMXMLParserWrapper.getDocumentElement:()Lorg/apache/axiom/om/OMElement;
      45: astore_2
      46: aload_2
      47: invokeinterface #41,  1           // InterfaceMethod org/apache/axiom/om/OMElement.build:()V
      52: aload_2
      53: areturn

  public static org.apache.axiom.soap.SOAPHeaderBlock toSOAPHeaderBlock(org.apache.axiom.om.OMElement, org.apache.axiom.soap.SOAPFactory) throws java.lang.Exception;
    Code:
       0: aload_0
       1: instanceof    #42                 // class org/apache/axiom/soap/SOAPHeaderBlock
       4: ifeq          12
       7: aload_0
       8: checkcast     #42                 // class org/apache/axiom/soap/SOAPHeaderBlock
      11: areturn
      12: aload_0
      13: invokeinterface #43,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getQName:()Ljavax/xml/namespace/QName;
      18: astore_2
      19: aload_2
      20: invokevirtual #44                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      23: astore_3
      24: aload_1
      25: aload_2
      26: invokevirtual #45                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      29: aload_2
      30: invokevirtual #46                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      33: invokeinterface #47,  3           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createOMNamespace:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
      38: astore        4
      40: new           #48                 // class java/io/ByteArrayOutputStream
      43: dup
      44: invokespecial #49                 // Method java/io/ByteArrayOutputStream."<init>":()V
      47: astore        5
      49: aload_0
      50: aload         5
      52: invokeinterface #50,  2           // InterfaceMethod org/apache/axiom/om/OMElement.serialize:(Ljava/io/OutputStream;)V
      57: new           #51                 // class org/apache/axiom/om/ds/ByteArrayDataSource
      60: dup
      61: aload         5
      63: invokevirtual #52                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      66: ldc           #53                 // String utf-8
      68: invokespecial #54                 // Method org/apache/axiom/om/ds/ByteArrayDataSource."<init>":([BLjava/lang/String;)V
      71: astore        6
      73: aload_1
      74: aload_3
      75: aload         4
      77: aload         6
      79: invokeinterface #55,  4           // InterfaceMethod org/apache/axiom/soap/SOAPFactory.createSOAPHeaderBlock:(Ljava/lang/String;Lorg/apache/axiom/om/OMNamespace;Lorg/apache/axiom/om/OMDataSource;)Lorg/apache/axiom/soap/SOAPHeaderBlock;
      84: astore        7
      86: aload         7
      88: areturn

  public static java.io.Reader getTextAsStream(org.apache.axiom.om.OMElement, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokeinterface #56,  2           // InterfaceMethod org/apache/axiom/om/OMElement.getTextAsStream:(Z)Ljava/io/Reader;
       7: areturn

  public static void writeTextTo(org.apache.axiom.om.OMElement, java.io.Writer, boolean) throws javax.xml.stream.XMLStreamException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokeinterface #57,  3           // InterfaceMethod org/apache/axiom/om/OMElement.writeTextTo:(Ljava/io/Writer;Z)V
       8: return
}
