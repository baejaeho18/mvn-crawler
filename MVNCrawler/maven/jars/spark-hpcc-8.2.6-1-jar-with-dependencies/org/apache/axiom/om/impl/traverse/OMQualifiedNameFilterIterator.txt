Compiled from "OMQualifiedNameFilterIterator.java"
public class org.apache.axiom.om.impl.traverse.OMQualifiedNameFilterIterator extends org.apache.axiom.om.impl.traverse.OMFilterIterator {
  private final java.lang.String prefix;

  private final java.lang.String localName;

  public org.apache.axiom.om.impl.traverse.OMQualifiedNameFilterIterator(java.util.Iterator, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/axiom/om/impl/traverse/OMFilterIterator."<init>":(Ljava/util/Iterator;)V
       5: aload_2
       6: bipush        58
       8: invokevirtual #2                  // Method java/lang/String.indexOf:(I)I
      11: istore_3
      12: iload_3
      13: iconst_m1
      14: if_icmpne     30
      17: aload_0
      18: aconst_null
      19: putfield      #3                  // Field prefix:Ljava/lang/String;
      22: aload_0
      23: aload_2
      24: putfield      #4                  // Field localName:Ljava/lang/String;
      27: goto          51
      30: aload_0
      31: aload_2
      32: iconst_0
      33: iload_3
      34: invokevirtual #5                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: putfield      #3                  // Field prefix:Ljava/lang/String;
      40: aload_0
      41: aload_2
      42: iload_3
      43: iconst_1
      44: iadd
      45: invokevirtual #6                  // Method java/lang/String.substring:(I)Ljava/lang/String;
      48: putfield      #4                  // Field localName:Ljava/lang/String;
      51: return

  protected boolean matches(org.apache.axiom.om.OMNode);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/apache/axiom/om/OMElement
       4: ifeq          95
       7: aload_1
       8: checkcast     #7                  // class org/apache/axiom/om/OMElement
      11: astore_2
      12: aload_0
      13: getfield      #4                  // Field localName:Ljava/lang/String;
      16: aload_2
      17: invokeinterface #8,  1            // InterfaceMethod org/apache/axiom/om/OMElement.getLocalName:()Ljava/lang/String;
      22: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      25: ifne          30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: checkcast     #7                  // class org/apache/axiom/om/OMElement
      34: invokeinterface #10,  1           // InterfaceMethod org/apache/axiom/om/OMElement.getNamespace:()Lorg/apache/axiom/om/OMNamespace;
      39: astore_3
      40: aload_0
      41: getfield      #3                  // Field prefix:Ljava/lang/String;
      44: ifnonnull     69
      47: aload_3
      48: ifnull        63
      51: aload_3
      52: invokeinterface #11,  1           // InterfaceMethod org/apache/axiom/om/OMNamespace.getPrefix:()Ljava/lang/String;
      57: invokevirtual #12                 // Method java/lang/String.length:()I
      60: ifne          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: aload_3
      70: ifnull        93
      73: aload_0
      74: getfield      #3                  // Field prefix:Ljava/lang/String;
      77: aload_3
      78: invokeinterface #11,  1           // InterfaceMethod org/apache/axiom/om/OMNamespace.getPrefix:()Ljava/lang/String;
      83: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn
      95: iconst_0
      96: ireturn
}
