Compiled from "SAXOMBuilder.java"
public class org.apache.axiom.om.impl.common.factory.SAXOMBuilder extends org.apache.axiom.om.impl.common.OMContentHandler implements org.apache.axiom.om.OMXMLParserWrapper {
  private final javax.xml.transform.sax.SAXSource source;

  private org.apache.axiom.om.OMDocument document;

  private final org.apache.axiom.om.impl.builder.OMFactoryEx factory;

  public org.apache.axiom.om.impl.common.factory.SAXOMBuilder(org.apache.axiom.om.OMFactory, javax.xml.transform.sax.SAXSource, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #17                 // Method org/apache/axiom/om/impl/common/OMContentHandler."<init>":(Z)V
       5: aload_0
       6: aload_1
       7: checkcast     #20                 // class org/apache/axiom/om/impl/builder/OMFactoryEx
      10: putfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
      13: aload_0
      14: aload_2
      15: putfield      #24                 // Field source:Ljavax/xml/transform/sax/SAXSource;
      18: return

  protected org.apache.axiom.om.OMContainer doStartDocument();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       5: aload_0
       6: invokeinterface #35,  2           // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMDocument:(Lorg/apache/axiom/om/OMXMLParserWrapper;)Lorg/apache/axiom/om/OMDocument;
      11: putfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
      14: aload_0
      15: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
      18: areturn

  protected void doEndDocument();
    Code:
       0: aload_0
       1: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
       4: checkcast     #43                 // class org/apache/axiom/om/impl/OMContainerEx
       7: iconst_1
       8: invokeinterface #45,  2           // InterfaceMethod org/apache/axiom/om/impl/OMContainerEx.setComplete:(Z)V
      13: return

  public org.apache.axiom.om.OMDocument getDocument();
    Code:
       0: aload_0
       1: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
       4: ifnonnull     98
       7: aload_0
       8: getfield      #24                 // Field source:Ljavax/xml/transform/sax/SAXSource;
      11: ifnull        98
      14: aload_0
      15: getfield      #24                 // Field source:Ljavax/xml/transform/sax/SAXSource;
      18: invokevirtual #50                 // Method javax/xml/transform/sax/SAXSource.getXMLReader:()Lorg/xml/sax/XMLReader;
      21: astore_1
      22: aload_1
      23: aload_0
      24: invokeinterface #56,  2           // InterfaceMethod org/xml/sax/XMLReader.setContentHandler:(Lorg/xml/sax/ContentHandler;)V
      29: aload_1
      30: aload_0
      31: invokeinterface #62,  2           // InterfaceMethod org/xml/sax/XMLReader.setDTDHandler:(Lorg/xml/sax/DTDHandler;)V
      36: aload_1
      37: ldc           #66                 // String http://xml.org/sax/properties/lexical-handler
      39: aload_0
      40: invokeinterface #68,  3           // InterfaceMethod org/xml/sax/XMLReader.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      45: goto          49
      48: pop
      49: aload_1
      50: ldc           #72                 // String http://xml.org/sax/properties/declaration-handler
      52: aload_0
      53: invokeinterface #68,  3           // InterfaceMethod org/xml/sax/XMLReader.setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      58: goto          62
      61: pop
      62: aload_1
      63: aload_0
      64: getfield      #24                 // Field source:Ljavax/xml/transform/sax/SAXSource;
      67: invokevirtual #74                 // Method javax/xml/transform/sax/SAXSource.getInputSource:()Lorg/xml/sax/InputSource;
      70: invokeinterface #78,  2           // InterfaceMethod org/xml/sax/XMLReader.parse:(Lorg/xml/sax/InputSource;)V
      75: goto          98
      78: astore_2
      79: new           #82                 // class org/apache/axiom/om/OMException
      82: dup
      83: aload_2
      84: invokespecial #84                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      87: athrow
      88: astore_2
      89: new           #82                 // class org/apache/axiom/om/OMException
      92: dup
      93: aload_2
      94: invokespecial #84                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      97: athrow
      98: aload_0
      99: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
     102: ifnull        122
     105: aload_0
     106: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
     109: invokeinterface #87,  1           // InterfaceMethod org/apache/axiom/om/OMDocument.isComplete:()Z
     114: ifeq          122
     117: aload_0
     118: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
     121: areturn
     122: new           #82                 // class org/apache/axiom/om/OMException
     125: dup
     126: ldc           #93                 // String Tree not complete
     128: invokespecial #95                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
     131: athrow
    Exception table:
       from    to  target type
          36    45    48   Class org/xml/sax/SAXException
          49    58    61   Class org/xml/sax/SAXException
          62    75    78   Class java/io/IOException
          62    75    88   Class org/xml/sax/SAXException

  public int next() throws org.apache.axiom.om.OMException;
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void discard(org.apache.axiom.om.OMElement) throws org.apache.axiom.om.OMException;
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void setCache(boolean) throws org.apache.axiom.om.OMException;
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isCache();
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object getParser();
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isCompleted();
    Code:
       0: aload_0
       1: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
       4: ifnull        21
       7: aload_0
       8: getfield      #39                 // Field document:Lorg/apache/axiom/om/OMDocument;
      11: invokeinterface #87,  1           // InterfaceMethod org/apache/axiom/om/OMDocument.isComplete:()Z
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: iconst_0
      22: ireturn

  public org.apache.axiom.om.OMElement getDocumentElement();
    Code:
       0: aload_0
       1: invokevirtual #126                // Method getDocument:()Lorg/apache/axiom/om/OMDocument;
       4: invokeinterface #128,  1          // InterfaceMethod org/apache/axiom/om/OMDocument.getOMDocumentElement:()Lorg/apache/axiom/om/OMElement;
       9: areturn

  public org.apache.axiom.om.OMElement getDocumentElement(boolean);
    Code:
       0: aload_0
       1: invokevirtual #126                // Method getDocument:()Lorg/apache/axiom/om/OMDocument;
       4: invokeinterface #128,  1          // InterfaceMethod org/apache/axiom/om/OMDocument.getOMDocumentElement:()Lorg/apache/axiom/om/OMElement;
       9: astore_2
      10: iload_1
      11: ifeq          21
      14: aload_2
      15: invokeinterface #132,  1          // InterfaceMethod org/apache/axiom/om/OMElement.detach:()Lorg/apache/axiom/om/OMNode;
      20: pop
      21: aload_2
      22: areturn

  public short getBuilderType();
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void registerExternalContentHandler(java.lang.Object);
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Object getRegisteredContentHandler();
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getCharacterEncoding();
    Code:
       0: new           #110                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #112                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void close();
    Code:
       0: return

  protected void createOMDocType(org.apache.axiom.om.OMContainer, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: iconst_1
      12: invokeinterface #152,  7          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMDocType:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMDocType;
      17: pop
      18: return

  protected org.apache.axiom.om.OMElement createOMElement(org.apache.axiom.om.OMContainer, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_2
       5: aload_1
       6: aload_0
       7: invokeinterface #164,  4          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMElement:(Ljava/lang/String;Lorg/apache/axiom/om/OMContainer;Lorg/apache/axiom/om/OMXMLParserWrapper;)Lorg/apache/axiom/om/OMElement;
      12: astore        7
      14: iconst_0
      15: istore        8
      17: goto          50
      20: aload         7
      22: checkcast     #167                // class org/apache/axiom/om/impl/OMElementEx
      25: aload         5
      27: iconst_2
      28: iload         8
      30: imul
      31: iconst_1
      32: iadd
      33: aaload
      34: aload         5
      36: iconst_2
      37: iload         8
      39: imul
      40: aaload
      41: invokeinterface #169,  3          // InterfaceMethod org/apache/axiom/om/impl/OMElementEx.addNamespaceDeclaration:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/axiom/om/OMNamespace;
      46: pop
      47: iinc          8, 1
      50: iload         8
      52: iload         6
      54: if_icmplt     20
      57: aload         7
      59: aload_3
      60: aload         4
      62: iconst_0
      63: invokestatic  #173                // Method org/apache/axiom/om/impl/builder/BuilderUtil.setNamespace:(Lorg/apache/axiom/om/OMElement;Ljava/lang/String;Ljava/lang/String;Z)V
      66: aload         7
      68: areturn

  protected void completed(org.apache.axiom.om.OMElement);
    Code:
       0: aload_1
       1: checkcast     #167                // class org/apache/axiom/om/impl/OMElementEx
       4: iconst_1
       5: invokeinterface #189,  2          // InterfaceMethod org/apache/axiom/om/impl/OMElementEx.setComplete:(Z)V
      10: return

  protected void createOMText(org.apache.axiom.om.OMContainer, java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_1
       5: aload_2
       6: iload_3
       7: iconst_1
       8: invokeinterface #192,  5          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMText:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;IZ)Lorg/apache/axiom/om/OMText;
      13: pop
      14: return

  protected void createOMProcessingInstruction(org.apache.axiom.om.OMContainer, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_1
       5: aload_2
       6: aload_3
       7: iconst_1
       8: invokeinterface #199,  5          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMProcessingInstruction:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMProcessingInstruction;
      13: pop
      14: return

  protected void createOMComment(org.apache.axiom.om.OMContainer, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_1
       5: aload_2
       6: iconst_1
       7: invokeinterface #206,  4          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMComment:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMComment;
      12: pop
      13: return

  protected void createOMEntityReference(org.apache.axiom.om.OMContainer, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #22                 // Field factory:Lorg/apache/axiom/om/impl/builder/OMFactoryEx;
       4: aload_1
       5: aload_2
       6: aload_3
       7: iconst_1
       8: invokeinterface #211,  5          // InterfaceMethod org/apache/axiom/om/impl/builder/OMFactoryEx.createOMEntityReference:(Lorg/apache/axiom/om/OMContainer;Ljava/lang/String;Ljava/lang/String;Z)Lorg/apache/axiom/om/OMEntityReference;
      13: pop
      14: return

  public void detach();
    Code:
       0: aload_0
       1: invokevirtual #126                // Method getDocument:()Lorg/apache/axiom/om/OMDocument;
       4: pop
       5: return
}
