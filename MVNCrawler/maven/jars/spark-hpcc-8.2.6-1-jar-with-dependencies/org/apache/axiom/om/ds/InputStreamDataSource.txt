Compiled from "InputStreamDataSource.java"
public class org.apache.axiom.om.ds.InputStreamDataSource extends org.apache.axiom.om.ds.OMDataSourceExtBase {
  org.apache.axiom.om.ds.InputStreamDataSource$Data data;

  private static final int BUFFER_LEN;

  public org.apache.axiom.om.ds.InputStreamDataSource(java.io.InputStream, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/axiom/om/ds/OMDataSourceExtBase."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       9: aload_0
      10: new           #3                  // class org/apache/axiom/om/ds/InputStreamDataSource$Data
      13: dup
      14: aload_0
      15: invokespecial #4                  // Method org/apache/axiom/om/ds/InputStreamDataSource$Data."<init>":(Lorg/apache/axiom/om/ds/InputStreamDataSource;)V
      18: putfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      21: aload_0
      22: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      25: aload_1
      26: putfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
      29: aload_0
      30: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      33: aload_2
      34: putfield      #6                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.encoding:Ljava/lang/String;
      37: return

  public void serialize(java.io.OutputStream, org.apache.axiom.om.OMOutputFormat) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: ifnonnull     17
       7: new           #7                  // class org/apache/axiom/om/OMException
      10: dup
      11: ldc           #8                  // String The InputStreamDataSource does not have a backing object
      13: invokespecial #9                  // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_2
      18: invokevirtual #10                 // Method org/apache/axiom/om/OMOutputFormat.getCharSetEncoding:()Ljava/lang/String;
      21: astore_3
      22: aload_0
      23: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      26: getfield      #6                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.encoding:Ljava/lang/String;
      29: aload_3
      30: invokevirtual #11                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      33: ifne          52
      36: aload_0
      37: aload_3
      38: invokevirtual #12                 // Method getXMLBytes:(Ljava/lang/String;)[B
      41: astore        4
      43: aload_1
      44: aload         4
      46: invokevirtual #13                 // Method java/io/OutputStream.write:([B)V
      49: goto          63
      52: aload_0
      53: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      56: getfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
      59: aload_1
      60: invokestatic  #14                 // Method inputStream2OutputStream:(Ljava/io/InputStream;Ljava/io/OutputStream;)V
      63: goto          90
      66: astore        4
      68: new           #16                 // class javax/xml/stream/XMLStreamException
      71: dup
      72: aload         4
      74: invokespecial #17                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      77: athrow
      78: astore        4
      80: new           #16                 // class javax/xml/stream/XMLStreamException
      83: dup
      84: aload         4
      86: invokespecial #17                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      89: athrow
      90: return
    Exception table:
       from    to  target type
          22    63    66   Class java/io/UnsupportedEncodingException
          22    63    78   Class java/io/IOException

  public void serialize(javax.xml.stream.XMLStreamWriter) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: ifnonnull     17
       7: new           #7                  // class org/apache/axiom/om/OMException
      10: dup
      11: ldc           #8                  // String The InputStreamDataSource does not have a backing object
      13: invokespecial #9                  // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokespecial #19                 // Method org/apache/axiom/om/ds/OMDataSourceExtBase.serialize:(Ljavax/xml/stream/XMLStreamWriter;)V
      22: return

  public javax.xml.stream.XMLStreamReader getReader() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: ifnonnull     17
       7: new           #7                  // class org/apache/axiom/om/OMException
      10: dup
      11: ldc           #8                  // String The InputStreamDataSource does not have a backing object
      13: invokespecial #9                  // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      21: getfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
      24: aload_0
      25: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      28: getfield      #6                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.encoding:Ljava/lang/String;
      31: invokestatic  #20                 // Method org/apache/axiom/om/util/StAXUtils.createXMLStreamReader:(Ljava/io/InputStream;Ljava/lang/String;)Ljavax/xml/stream/XMLStreamReader;
      34: areturn

  public java.io.InputStream getXMLInputStream(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: ifnonnull     17
       7: new           #7                  // class org/apache/axiom/om/OMException
      10: dup
      11: ldc           #8                  // String The InputStreamDataSource does not have a backing object
      13: invokespecial #9                  // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      21: getfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
      24: areturn

  public java.lang.Object getObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: areturn

  public boolean isDestructiveRead();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: ifnonnull     17
       7: new           #7                  // class org/apache/axiom/om/OMException
      10: dup
      11: ldc           #8                  // String The InputStreamDataSource does not have a backing object
      13: invokespecial #9                  // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_1
      18: ireturn

  public boolean isDestructiveWrite();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: ifnonnull     17
       7: new           #7                  // class org/apache/axiom/om/OMException
      10: dup
      11: ldc           #8                  // String The InputStreamDataSource does not have a backing object
      13: invokespecial #9                  // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_1
      18: ireturn

  public byte[] getXMLBytes(java.lang.String) throws java.io.UnsupportedEncodingException;
    Code:
       0: new           #21                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #22                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: new           #23                 // class org/apache/axiom/om/OMOutputFormat
      11: dup
      12: invokespecial #24                 // Method org/apache/axiom/om/OMOutputFormat."<init>":()V
      15: astore_3
      16: aload_3
      17: aload_1
      18: invokevirtual #25                 // Method org/apache/axiom/om/OMOutputFormat.setCharSetEncoding:(Ljava/lang/String;)V
      21: aload_0
      22: aload_2
      23: aload_3
      24: invokevirtual #26                 // Method serialize:(Ljava/io/OutputStream;Lorg/apache/axiom/om/OMOutputFormat;)V
      27: goto          42
      30: astore        4
      32: new           #7                  // class org/apache/axiom/om/OMException
      35: dup
      36: aload         4
      38: invokespecial #27                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      41: athrow
      42: aload_2
      43: invokevirtual #28                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      46: areturn
    Exception table:
       from    to  target type
          21    27    30   Class javax/xml/stream/XMLStreamException

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       4: getfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
       7: ifnull        41
      10: aload_0
      11: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      14: getfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
      17: invokevirtual #29                 // Method java/io/InputStream.close:()V
      20: goto          33
      23: astore_1
      24: new           #7                  // class org/apache/axiom/om/OMException
      27: dup
      28: aload_1
      29: invokespecial #27                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      32: athrow
      33: aload_0
      34: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      37: aconst_null
      38: putfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
      41: return
    Exception table:
       from    to  target type
          10    20    23   Class java/io/IOException

  public org.apache.axiom.om.OMDataSourceExt copy();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
       5: getfield      #6                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.encoding:Ljava/lang/String;
       8: invokevirtual #12                 // Method getXMLBytes:(Ljava/lang/String;)[B
      11: astore_1
      12: goto          25
      15: astore_2
      16: new           #7                  // class org/apache/axiom/om/OMException
      19: dup
      20: aload_2
      21: invokespecial #27                 // Method org/apache/axiom/om/OMException."<init>":(Ljava/lang/Throwable;)V
      24: athrow
      25: new           #30                 // class java/io/ByteArrayInputStream
      28: dup
      29: aload_1
      30: invokespecial #31                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      33: astore_2
      34: new           #30                 // class java/io/ByteArrayInputStream
      37: dup
      38: aload_1
      39: invokespecial #31                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      42: astore_3
      43: aload_0
      44: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      47: aload_2
      48: putfield      #5                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.is:Ljava/io/InputStream;
      51: new           #32                 // class org/apache/axiom/om/ds/InputStreamDataSource
      54: dup
      55: aload_3
      56: aload_0
      57: getfield      #2                  // Field data:Lorg/apache/axiom/om/ds/InputStreamDataSource$Data;
      60: getfield      #6                  // Field org/apache/axiom/om/ds/InputStreamDataSource$Data.encoding:Ljava/lang/String;
      63: invokespecial #33                 // Method "<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      66: areturn
    Exception table:
       from    to  target type
           0    12    15   Class java/io/UnsupportedEncodingException

  private static void inputStream2OutputStream(java.io.InputStream, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: sipush        4096
       3: newarray       byte
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #34                 // Method java/io/InputStream.read:([B)I
      11: istore_3
      12: iload_3
      13: ifle          32
      16: aload_1
      17: aload_2
      18: iconst_0
      19: iload_3
      20: invokevirtual #35                 // Method java/io/OutputStream.write:([BII)V
      23: aload_0
      24: aload_2
      25: invokevirtual #34                 // Method java/io/InputStream.read:([B)I
      28: istore_3
      29: goto          12
      32: return
}
