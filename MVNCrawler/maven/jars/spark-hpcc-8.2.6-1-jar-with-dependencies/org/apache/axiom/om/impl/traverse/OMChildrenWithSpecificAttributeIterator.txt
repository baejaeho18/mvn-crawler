Compiled from "OMChildrenWithSpecificAttributeIterator.java"
public class org.apache.axiom.om.impl.traverse.OMChildrenWithSpecificAttributeIterator extends org.apache.axiom.om.impl.traverse.OMFilterIterator {
  private javax.xml.namespace.QName attributeName;

  private java.lang.String attributeValue;

  private boolean detach;

  private boolean doCaseSensitiveValueChecks;

  public org.apache.axiom.om.impl.traverse.OMChildrenWithSpecificAttributeIterator(org.apache.axiom.om.OMNode, javax.xml.namespace.QName, java.lang.String, boolean);
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/axiom/om/impl/traverse/OMChildrenIterator
       4: dup
       5: aload_1
       6: invokespecial #2                  // Method org/apache/axiom/om/impl/traverse/OMChildrenIterator."<init>":(Lorg/apache/axiom/om/OMNode;)V
       9: invokespecial #3                  // Method org/apache/axiom/om/impl/traverse/OMFilterIterator."<init>":(Ljava/util/Iterator;)V
      12: aload_0
      13: iconst_1
      14: putfield      #4                  // Field doCaseSensitiveValueChecks:Z
      17: aload_0
      18: aload_2
      19: putfield      #5                  // Field attributeName:Ljavax/xml/namespace/QName;
      22: aload_0
      23: aload_3
      24: putfield      #6                  // Field attributeValue:Ljava/lang/String;
      27: aload_0
      28: iload         4
      30: putfield      #7                  // Field detach:Z
      33: return

  public void setCaseInsensitiveValueChecks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field doCaseSensitiveValueChecks:Z
       5: return

  protected boolean matches(org.apache.axiom.om.OMNode);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/apache/axiom/om/OMElement
       4: ifeq          73
       7: aload_1
       8: checkcast     #8                  // class org/apache/axiom/om/OMElement
      11: aload_0
      12: getfield      #5                  // Field attributeName:Ljavax/xml/namespace/QName;
      15: invokeinterface #9,  2            // InterfaceMethod org/apache/axiom/om/OMElement.getAttribute:(Ljavax/xml/namespace/QName;)Lorg/apache/axiom/om/OMAttribute;
      20: astore_2
      21: aload_2
      22: ifnull        71
      25: aload_0
      26: getfield      #4                  // Field doCaseSensitiveValueChecks:Z
      29: ifeq          51
      32: aload_2
      33: invokeinterface #10,  1           // InterfaceMethod org/apache/axiom/om/OMAttribute.getAttributeValue:()Ljava/lang/String;
      38: aload_0
      39: getfield      #6                  // Field attributeValue:Ljava/lang/String;
      42: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifeq          71
      48: goto          67
      51: aload_2
      52: invokeinterface #10,  1           // InterfaceMethod org/apache/axiom/om/OMAttribute.getAttributeValue:()Ljava/lang/String;
      57: aload_0
      58: getfield      #6                  // Field attributeValue:Ljava/lang/String;
      61: invokevirtual #12                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn
      73: iconst_0
      74: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokespecial #13                 // Method org/apache/axiom/om/impl/traverse/OMFilterIterator.next:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #7                  // Field detach:Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #14                 // Method remove:()V
      16: aload_1
      17: areturn
}
