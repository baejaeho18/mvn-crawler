Compiled from "WrappedTextNodeStreamReader.java"
public class org.apache.axiom.util.stax.WrappedTextNodeStreamReader implements javax.xml.stream.XMLStreamReader {
  private final javax.xml.namespace.QName wrapperElementName;

  private final java.io.Reader reader;

  private final int chunkSize;

  private int eventType;

  private char[] charData;

  private int charDataLength;

  private javax.xml.namespace.NamespaceContext namespaceContext;

  public org.apache.axiom.util.stax.WrappedTextNodeStreamReader(javax.xml.namespace.QName, java.io.Reader, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        7
       7: putfield      #3                  // Field eventType:I
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
      15: aload_0
      16: aload_2
      17: putfield      #5                  // Field reader:Ljava/io/Reader;
      20: aload_0
      21: iload_3
      22: putfield      #6                  // Field chunkSize:I
      25: return

  public org.apache.axiom.util.stax.WrappedTextNodeStreamReader(javax.xml.namespace.QName, java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        4096
       6: invokespecial #7                  // Method "<init>":(Ljavax/xml/namespace/QName;Ljava/io/Reader;I)V
       9: return

  public java.lang.Object getProperty(java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aconst_null
       1: areturn

  public boolean hasNext() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: bipush        8
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int next() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: tableswitch   { // 1 to 7
                     1: 56
                     2: 123
                     3: 132
                     4: 66
                     5: 132
                     6: 132
                     7: 48
               default: 132
          }
      48: aload_0
      49: iconst_1
      50: putfield      #3                  // Field eventType:I
      53: goto          140
      56: aload_0
      57: aload_0
      58: getfield      #6                  // Field chunkSize:I
      61: newarray       char
      63: putfield      #8                  // Field charData:[C
      66: aload_0
      67: aload_0
      68: getfield      #5                  // Field reader:Ljava/io/Reader;
      71: aload_0
      72: getfield      #8                  // Field charData:[C
      75: invokevirtual #9                  // Method java/io/Reader.read:([C)I
      78: putfield      #10                 // Field charDataLength:I
      81: goto          94
      84: astore_1
      85: new           #12                 // class javax/xml/stream/XMLStreamException
      88: dup
      89: aload_1
      90: invokespecial #13                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      93: athrow
      94: aload_0
      95: getfield      #10                 // Field charDataLength:I
      98: iconst_m1
      99: if_icmpne     115
     102: aload_0
     103: aconst_null
     104: putfield      #8                  // Field charData:[C
     107: aload_0
     108: iconst_2
     109: putfield      #3                  // Field eventType:I
     112: goto          140
     115: aload_0
     116: iconst_4
     117: putfield      #3                  // Field eventType:I
     120: goto          140
     123: aload_0
     124: bipush        8
     126: putfield      #3                  // Field eventType:I
     129: goto          140
     132: new           #14                 // class java/lang/IllegalStateException
     135: dup
     136: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":()V
     139: athrow
     140: aload_0
     141: getfield      #3                  // Field eventType:I
     144: ireturn
    Exception table:
       from    to  target type
          66    81    84   Class java/io/IOException

  public int nextTag() throws javax.xml.stream.XMLStreamException;
    Code:
       0: new           #12                 // class javax/xml/stream/XMLStreamException
       3: dup
       4: ldc           #16                 // String Current event is not white space
       6: invokespecial #17                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int getEventType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: ireturn

  public boolean isStartElement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isEndElement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isCharacters();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isWhiteSpace();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasText();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean hasName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_1
       5: if_icmpeq     16
       8: aload_0
       9: getfield      #3                  // Field eventType:I
      12: iconst_2
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public void require(int, java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException;
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field eventType:I
       5: if_icmpne     38
       8: aload_2
       9: ifnull        23
      12: aload_2
      13: aload_0
      14: invokevirtual #18                 // Method getNamespaceURI:()Ljava/lang/String;
      17: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          38
      23: aload_3
      24: ifnull        48
      27: aload_2
      28: aload_0
      29: invokevirtual #20                 // Method getLocalName:()Ljava/lang/String;
      32: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifne          48
      38: new           #12                 // class javax/xml/stream/XMLStreamException
      41: dup
      42: ldc           #21                 // String Unexpected event type
      44: invokespecial #17                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  public javax.xml.stream.Location getLocation();
    Code:
       0: getstatic     #22                 // Field org/apache/axiom/util/stax/DummyLocation.INSTANCE:Lorg/apache/axiom/util/stax/DummyLocation;
       3: areturn

  public void close() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field reader:Ljava/io/Reader;
       4: invokevirtual #23                 // Method java/io/Reader.close:()V
       7: goto          20
      10: astore_1
      11: new           #12                 // class javax/xml/stream/XMLStreamException
      14: dup
      15: aload_1
      16: invokespecial #13                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      19: athrow
      20: return
    Exception table:
       from    to  target type
           0     7    10   Class java/io/IOException

  public java.lang.String getEncoding();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getCharacterEncodingScheme();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getVersion();
    Code:
       0: aconst_null
       1: areturn

  public boolean standaloneSet();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isStandalone();
    Code:
       0: iconst_1
       1: ireturn

  public javax.xml.namespace.NamespaceContext getNamespaceContext();
    Code:
       0: aload_0
       1: getfield      #24                 // Field namespaceContext:Ljavax/xml/namespace/NamespaceContext;
       4: ifnonnull     35
       7: aload_0
       8: new           #25                 // class org/apache/axiom/util/namespace/MapBasedNamespaceContext
      11: dup
      12: aload_0
      13: getfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
      16: invokevirtual #26                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      19: aload_0
      20: getfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
      23: invokevirtual #27                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      26: invokestatic  #28                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
      29: invokespecial #29                 // Method org/apache/axiom/util/namespace/MapBasedNamespaceContext."<init>":(Ljava/util/Map;)V
      32: putfield      #24                 // Field namespaceContext:Ljavax/xml/namespace/NamespaceContext;
      35: aload_0
      36: getfield      #24                 // Field namespaceContext:Ljavax/xml/namespace/NamespaceContext;
      39: areturn

  public java.lang.String getNamespaceURI(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getNamespaceContext:()Ljavax/xml/namespace/NamespaceContext;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod javax/xml/namespace/NamespaceContext.getNamespaceURI:(Ljava/lang/String;)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ldc           #33                 // String
      14: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: aconst_null
      21: goto          25
      24: aload_1
      25: areturn

  private void checkStartElement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_1
       5: if_icmpeq     16
       8: new           #14                 // class java/lang/IllegalStateException
      11: dup
      12: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":()V
      15: athrow
      16: return

  public java.lang.String getAttributeValue(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: aconst_null
       5: areturn

  public int getAttributeCount();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: iconst_0
       5: ireturn

  public javax.xml.namespace.QName getAttributeName(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: new           #35                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: invokespecial #36                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      11: athrow

  public java.lang.String getAttributeLocalName(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: new           #35                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: invokespecial #36                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      11: athrow

  public java.lang.String getAttributePrefix(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: new           #35                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: invokespecial #36                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      11: athrow

  public java.lang.String getAttributeNamespace(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: new           #35                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: invokespecial #36                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      11: athrow

  public java.lang.String getAttributeType(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: new           #35                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: invokespecial #36                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      11: athrow

  public java.lang.String getAttributeValue(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: new           #35                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: invokespecial #36                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      11: athrow

  public boolean isAttributeSpecified(int);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method checkStartElement:()V
       4: new           #35                 // class java/lang/ArrayIndexOutOfBoundsException
       7: dup
       8: invokespecial #36                 // Method java/lang/ArrayIndexOutOfBoundsException."<init>":()V
      11: athrow

  private void checkElement();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_1
       5: if_icmpeq     24
       8: aload_0
       9: getfield      #3                  // Field eventType:I
      12: iconst_2
      13: if_icmpeq     24
      16: new           #14                 // class java/lang/IllegalStateException
      19: dup
      20: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":()V
      23: athrow
      24: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkElement:()V
       4: aload_0
       5: getfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
       8: invokevirtual #38                 // Method javax/xml/namespace/QName.getLocalPart:()Ljava/lang/String;
      11: areturn

  public java.lang.String getPrefix();
    Code:
       0: aload_0
       1: getfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
       4: invokevirtual #26                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
       7: areturn

  public java.lang.String getNamespaceURI();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkElement:()V
       4: aload_0
       5: getfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
       8: invokevirtual #27                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      11: areturn

  public int getNamespaceCount();
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkElement:()V
       4: iconst_1
       5: ireturn

  public java.lang.String getNamespacePrefix(int);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkElement:()V
       4: iload_1
       5: ifne          16
       8: aload_0
       9: getfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
      12: invokevirtual #26                 // Method javax/xml/namespace/QName.getPrefix:()Ljava/lang/String;
      15: areturn
      16: new           #39                 // class java/lang/IndexOutOfBoundsException
      19: dup
      20: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      23: athrow

  public java.lang.String getNamespaceURI(int);
    Code:
       0: aload_0
       1: invokespecial #37                 // Method checkElement:()V
       4: iload_1
       5: ifne          16
       8: aload_0
       9: getfield      #4                  // Field wrapperElementName:Ljavax/xml/namespace/QName;
      12: invokevirtual #27                 // Method javax/xml/namespace/QName.getNamespaceURI:()Ljava/lang/String;
      15: areturn
      16: new           #39                 // class java/lang/IndexOutOfBoundsException
      19: dup
      20: invokespecial #40                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      23: athrow

  public java.lang.String getElementText() throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_1
       5: if_icmpne     67
       8: new           #41                 // class java/lang/StringBuffer
      11: dup
      12: invokespecial #42                 // Method java/lang/StringBuffer."<init>":()V
      15: astore_1
      16: sipush        4096
      19: newarray       char
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field reader:Ljava/io/Reader;
      26: aload_2
      27: invokevirtual #9                  // Method java/io/Reader.read:([C)I
      30: dup
      31: istore_3
      32: iconst_m1
      33: if_icmpeq     47
      36: aload_1
      37: aload_2
      38: iconst_0
      39: iload_3
      40: invokevirtual #43                 // Method java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;
      43: pop
      44: goto          22
      47: aload_0
      48: iconst_2
      49: putfield      #3                  // Field eventType:I
      52: aload_1
      53: invokevirtual #44                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      56: areturn
      57: astore_1
      58: new           #12                 // class javax/xml/stream/XMLStreamException
      61: dup
      62: aload_1
      63: invokespecial #13                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/Throwable;)V
      66: athrow
      67: new           #12                 // class javax/xml/stream/XMLStreamException
      70: dup
      71: ldc           #45                 // String Current event is not a START_ELEMENT
      73: invokespecial #17                 // Method javax/xml/stream/XMLStreamException."<init>":(Ljava/lang/String;)V
      76: athrow
    Exception table:
       from    to  target type
           8    56    57   Class java/io/IOException

  private void checkCharacters();
    Code:
       0: aload_0
       1: getfield      #3                  // Field eventType:I
       4: iconst_4
       5: if_icmpeq     16
       8: new           #14                 // class java/lang/IllegalStateException
      11: dup
      12: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":()V
      15: athrow
      16: return

  public java.lang.String getText();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkCharacters:()V
       4: new           #47                 // class java/lang/String
       7: dup
       8: aload_0
       9: getfield      #8                  // Field charData:[C
      12: iconst_0
      13: aload_0
      14: getfield      #10                 // Field charDataLength:I
      17: invokespecial #48                 // Method java/lang/String."<init>":([CII)V
      20: areturn

  public char[] getTextCharacters();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkCharacters:()V
       4: aload_0
       5: getfield      #8                  // Field charData:[C
       8: areturn

  public int getTextStart();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkCharacters:()V
       4: iconst_0
       5: ireturn

  public int getTextLength();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkCharacters:()V
       4: aload_0
       5: getfield      #10                 // Field charDataLength:I
       8: ireturn

  public int getTextCharacters(int, char[], int, int) throws javax.xml.stream.XMLStreamException;
    Code:
       0: aload_0
       1: invokespecial #46                 // Method checkCharacters:()V
       4: aload_0
       5: getfield      #10                 // Field charDataLength:I
       8: iload_1
       9: isub
      10: iload         4
      12: invokestatic  #49                 // Method java/lang/Math.min:(II)I
      15: istore        5
      17: aload_0
      18: getfield      #8                  // Field charData:[C
      21: iload_1
      22: aload_2
      23: iload_3
      24: iload         5
      26: invokestatic  #50                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      29: iload         5
      31: ireturn

  public java.lang.String getPIData();
    Code:
       0: new           #14                 // class java/lang/IllegalStateException
       3: dup
       4: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":()V
       7: athrow

  public java.lang.String getPITarget();
    Code:
       0: new           #14                 // class java/lang/IllegalStateException
       3: dup
       4: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":()V
       7: athrow
}
