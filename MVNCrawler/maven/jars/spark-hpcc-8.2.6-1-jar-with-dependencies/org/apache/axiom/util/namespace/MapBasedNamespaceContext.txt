Compiled from "MapBasedNamespaceContext.java"
public class org.apache.axiom.util.namespace.MapBasedNamespaceContext extends org.apache.axiom.util.namespace.AbstractNamespaceContext {
  private final java.util.Map namespaces;

  public org.apache.axiom.util.namespace.MapBasedNamespaceContext(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/axiom/util/namespace/AbstractNamespaceContext."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field namespaces:Ljava/util/Map;
       9: return

  protected java.lang.String doGetNamespaceURI(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field namespaces:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class java/lang/String
      13: astore_2
      14: aload_2
      15: ifnonnull     23
      18: ldc           #6                  // String
      20: goto          24
      23: aload_2
      24: areturn

  protected java.lang.String doGetPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field namespaces:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          67
      24: aload_2
      25: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #11                 // class java/util/Map$Entry
      33: astore_3
      34: aload_3
      35: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #4                  // class java/lang/String
      43: astore        4
      45: aload         4
      47: aload_1
      48: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          64
      54: aload_3
      55: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: checkcast     #4                  // class java/lang/String
      63: areturn
      64: goto          15
      67: aload_1
      68: invokevirtual #15                 // Method java/lang/String.length:()I
      71: ifne          77
      74: ldc           #6                  // String
      76: areturn
      77: aconst_null
      78: areturn

  protected java.util.Iterator doGetPrefixes(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #2                  // Field namespaces:Ljava/util/Map;
       6: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          87
      26: aload_3
      27: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #11                 // class java/util/Map$Entry
      35: astore        4
      37: aload         4
      39: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      44: checkcast     #4                  // class java/lang/String
      47: astore        5
      49: aload         5
      51: aload_1
      52: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          84
      58: aload_2
      59: ifnonnull     70
      62: new           #16                 // class java/util/HashSet
      65: dup
      66: invokespecial #17                 // Method java/util/HashSet."<init>":()V
      69: astore_2
      70: aload_2
      71: aload         4
      73: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      78: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      83: pop
      84: goto          17
      87: aload_2
      88: ifnull        101
      91: aload_2
      92: invokestatic  #19                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      95: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     100: areturn
     101: aload_1
     102: invokevirtual #15                 // Method java/lang/String.length:()I
     105: ifne          119
     108: ldc           #6                  // String
     110: invokestatic  #20                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
     113: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     118: areturn
     119: getstatic     #21                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
     122: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     127: areturn
}
