Compiled from "AbstractBase64DecodingWriter.java"
public abstract class org.apache.axiom.util.base64.AbstractBase64DecodingWriter extends java.io.Writer {
  private final char[] in;

  private final byte[] out;

  private int rest;

  public org.apache.axiom.util.base64.AbstractBase64DecodingWriter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Writer."<init>":()V
       4: aload_0
       5: iconst_4
       6: newarray       char
       8: putfield      #2                  // Field in:[C
      11: aload_0
      12: iconst_3
      13: newarray       byte
      15: putfield      #3                  // Field out:[B
      18: return

  private static boolean isWhitespace(int);
    Code:
       0: iload_0
       1: bipush        32
       3: if_icmpgt     34
       6: iload_0
       7: bipush        32
       9: if_icmpeq     30
      12: iload_0
      13: bipush        10
      15: if_icmpeq     30
      18: iload_0
      19: bipush        13
      21: if_icmpeq     30
      24: iload_0
      25: bipush        9
      27: if_icmpne     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public final void write(char[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          20
       4: aload_0
       5: aload_1
       6: iload_2
       7: caload
       8: invokevirtual #4                  // Method write:(I)V
      11: iinc          2, 1
      14: iinc          3, -1
      17: goto          0
      20: return

  public final void write(java.lang.String, int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifle          22
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokevirtual #5                  // Method java/lang/String.charAt:(I)C
      10: invokevirtual #4                  // Method write:(I)V
      13: iinc          2, 1
      16: iinc          3, -1
      19: goto          0
      22: return

  public final void write(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: invokestatic  #6                  // Method isWhitespace:(I)Z
       4: ifne          47
       7: aload_0
       8: getfield      #2                  // Field in:[C
      11: aload_0
      12: dup
      13: getfield      #7                  // Field rest:I
      16: dup_x1
      17: iconst_1
      18: iadd
      19: putfield      #7                  // Field rest:I
      22: iload_1
      23: i2c
      24: castore
      25: aload_0
      26: getfield      #7                  // Field rest:I
      29: iconst_4
      30: if_icmpne     47
      33: aload_0
      34: aload_0
      35: getfield      #2                  // Field in:[C
      38: iconst_0
      39: invokespecial #8                  // Method decode:([CI)V
      42: aload_0
      43: iconst_0
      44: putfield      #7                  // Field rest:I
      47: return

  private int decode(char) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        61
       3: if_icmpne     8
       6: iconst_m1
       7: ireturn
       8: iload_1
       9: getstatic     #10                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      12: arraylength
      13: if_icmpge     28
      16: getstatic     #10                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      19: iload_1
      20: baload
      21: istore_2
      22: iload_2
      23: iflt          28
      26: iload_2
      27: ireturn
      28: new           #11                 // class java/io/IOException
      31: dup
      32: new           #12                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #14                 // String Invalid base64 char \'
      41: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_1
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: ldc           #17                 // String \'
      50: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      59: athrow

  private void decode(char[], int) throws java.io.IOException;
    Code:
       0: iconst_3
       1: istore_3
       2: aload_1
       3: iload_2
       4: iconst_3
       5: iadd
       6: caload
       7: bipush        61
       9: if_icmpne     14
      12: iconst_2
      13: istore_3
      14: aload_1
      15: iload_2
      16: iconst_2
      17: iadd
      18: caload
      19: bipush        61
      21: if_icmpne     26
      24: iconst_1
      25: istore_3
      26: aload_0
      27: aload_1
      28: iload_2
      29: caload
      30: invokespecial #20                 // Method decode:(C)I
      33: istore        4
      35: aload_0
      36: aload_1
      37: iload_2
      38: iconst_1
      39: iadd
      40: caload
      41: invokespecial #20                 // Method decode:(C)I
      44: istore        5
      46: aload_0
      47: aload_1
      48: iload_2
      49: iconst_2
      50: iadd
      51: caload
      52: invokespecial #20                 // Method decode:(C)I
      55: istore        6
      57: aload_0
      58: aload_1
      59: iload_2
      60: iconst_3
      61: iadd
      62: caload
      63: invokespecial #20                 // Method decode:(C)I
      66: istore        7
      68: iload_3
      69: tableswitch   { // 1 to 3
                     1: 96
                     2: 121
                     3: 169
               default: 236
          }
      96: aload_0
      97: getfield      #3                  // Field out:[B
     100: iconst_0
     101: iload         4
     103: iconst_2
     104: ishl
     105: sipush        252
     108: iand
     109: iload         5
     111: iconst_4
     112: ishr
     113: iconst_3
     114: iand
     115: ior
     116: i2b
     117: bastore
     118: goto          236
     121: aload_0
     122: getfield      #3                  // Field out:[B
     125: iconst_0
     126: iload         4
     128: iconst_2
     129: ishl
     130: sipush        252
     133: iand
     134: iload         5
     136: iconst_4
     137: ishr
     138: iconst_3
     139: iand
     140: ior
     141: i2b
     142: bastore
     143: aload_0
     144: getfield      #3                  // Field out:[B
     147: iconst_1
     148: iload         5
     150: iconst_4
     151: ishl
     152: sipush        240
     155: iand
     156: iload         6
     158: iconst_2
     159: ishr
     160: bipush        15
     162: iand
     163: ior
     164: i2b
     165: bastore
     166: goto          236
     169: aload_0
     170: getfield      #3                  // Field out:[B
     173: iconst_0
     174: iload         4
     176: iconst_2
     177: ishl
     178: sipush        252
     181: iand
     182: iload         5
     184: iconst_4
     185: ishr
     186: iconst_3
     187: iand
     188: ior
     189: i2b
     190: bastore
     191: aload_0
     192: getfield      #3                  // Field out:[B
     195: iconst_1
     196: iload         5
     198: iconst_4
     199: ishl
     200: sipush        240
     203: iand
     204: iload         6
     206: iconst_2
     207: ishr
     208: bipush        15
     210: iand
     211: ior
     212: i2b
     213: bastore
     214: aload_0
     215: getfield      #3                  // Field out:[B
     218: iconst_2
     219: iload         6
     221: bipush        6
     223: ishl
     224: sipush        192
     227: iand
     228: iload         7
     230: bipush        63
     232: iand
     233: ior
     234: i2b
     235: bastore
     236: aload_0
     237: aload_0
     238: getfield      #3                  // Field out:[B
     241: iload_3
     242: invokevirtual #21                 // Method doWrite:([BI)V
     245: return

  protected abstract void doWrite(byte[], int) throws java.io.IOException;
}
