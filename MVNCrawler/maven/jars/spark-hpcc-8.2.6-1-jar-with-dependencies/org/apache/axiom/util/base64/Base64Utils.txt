Compiled from "Base64Utils.java"
public class org.apache.axiom.util.base64.Base64Utils {
  public org.apache.axiom.util.base64.Base64Utils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static int getEncodedSize(int);
    Code:
       0: iload_0
       1: iconst_2
       2: iadd
       3: iconst_3
       4: idiv
       5: iconst_4
       6: imul
       7: ireturn

  private static int getBufferSize(javax.activation.DataHandler);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method javax/activation/DataHandler.getDataSource:()Ljavax/activation/DataSource;
       4: invokestatic  #3                  // Method org/apache/axiom/util/activation/DataSourceUtils.getSize:(Ljavax/activation/DataSource;)J
       7: lstore_1
       8: lload_1
       9: ldc2_w        #4                  // long -1l
      12: lcmp
      13: ifne          20
      16: sipush        4096
      19: ireturn
      20: lload_1
      21: ldc2_w        #7                  // long 2147483647l
      24: lcmp
      25: ifle          38
      28: new           #9                  // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #10                 // String DataHandler is too large to encode to string
      34: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: lload_1
      39: l2i
      40: invokestatic  #12                 // Method getEncodedSize:(I)I
      43: ireturn

  public static java.lang.String encode(javax.activation.DataHandler) throws java.io.IOException;
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokestatic  #14                 // Method getBufferSize:(Ljavax/activation/DataHandler;)I
       8: invokespecial #15                 // Method java/lang/StringBuilder."<init>":(I)V
      11: astore_1
      12: new           #16                 // class org/apache/axiom/util/base64/Base64EncodingStringBufferOutputStream
      15: dup
      16: aload_1
      17: invokespecial #17                 // Method org/apache/axiom/util/base64/Base64EncodingStringBufferOutputStream."<init>":(Ljava/lang/StringBuilder;)V
      20: astore_2
      21: aload_0
      22: aload_2
      23: invokevirtual #18                 // Method javax/activation/DataHandler.writeTo:(Ljava/io/OutputStream;)V
      26: aload_2
      27: invokevirtual #19                 // Method org/apache/axiom/util/base64/Base64EncodingStringBufferOutputStream.complete:()V
      30: aload_1
      31: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public static char[] encodeToCharArray(javax.activation.DataHandler) throws java.io.IOException;
    Code:
       0: new           #21                 // class org/apache/axiom/util/base64/NoCopyCharArrayWriter
       3: dup
       4: aload_0
       5: invokestatic  #14                 // Method getBufferSize:(Ljavax/activation/DataHandler;)I
       8: invokespecial #22                 // Method org/apache/axiom/util/base64/NoCopyCharArrayWriter."<init>":(I)V
      11: astore_1
      12: new           #23                 // class org/apache/axiom/util/base64/Base64EncodingWriterOutputStream
      15: dup
      16: aload_1
      17: invokespecial #24                 // Method org/apache/axiom/util/base64/Base64EncodingWriterOutputStream."<init>":(Ljava/io/Writer;)V
      20: astore_2
      21: aload_0
      22: aload_2
      23: invokevirtual #18                 // Method javax/activation/DataHandler.writeTo:(Ljava/io/OutputStream;)V
      26: aload_2
      27: invokevirtual #25                 // Method org/apache/axiom/util/base64/Base64EncodingWriterOutputStream.complete:()V
      30: aload_1
      31: invokevirtual #26                 // Method org/apache/axiom/util/base64/NoCopyCharArrayWriter.toCharArray:()[C
      34: areturn

  private static int decode0(char[], byte[], int);
    Code:
       0: iconst_3
       1: istore_3
       2: aload_0
       3: iconst_3
       4: caload
       5: bipush        61
       7: if_icmpne     12
      10: iconst_2
      11: istore_3
      12: aload_0
      13: iconst_2
      14: caload
      15: bipush        61
      17: if_icmpne     22
      20: iconst_1
      21: istore_3
      22: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      25: aload_0
      26: iconst_0
      27: caload
      28: baload
      29: istore        4
      31: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      34: aload_0
      35: iconst_1
      36: caload
      37: baload
      38: istore        5
      40: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      43: aload_0
      44: iconst_2
      45: caload
      46: baload
      47: istore        6
      49: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      52: aload_0
      53: iconst_3
      54: caload
      55: baload
      56: istore        7
      58: iload_3
      59: tableswitch   { // 1 to 3
                     1: 84
                     2: 105
                     3: 149
               default: 215
          }
      84: aload_1
      85: iload_2
      86: iload         4
      88: iconst_2
      89: ishl
      90: sipush        252
      93: iand
      94: iload         5
      96: iconst_4
      97: ishr
      98: iconst_3
      99: iand
     100: ior
     101: i2b
     102: bastore
     103: iconst_1
     104: ireturn
     105: aload_1
     106: iload_2
     107: iinc          2, 1
     110: iload         4
     112: iconst_2
     113: ishl
     114: sipush        252
     117: iand
     118: iload         5
     120: iconst_4
     121: ishr
     122: iconst_3
     123: iand
     124: ior
     125: i2b
     126: bastore
     127: aload_1
     128: iload_2
     129: iload         5
     131: iconst_4
     132: ishl
     133: sipush        240
     136: iand
     137: iload         6
     139: iconst_2
     140: ishr
     141: bipush        15
     143: iand
     144: ior
     145: i2b
     146: bastore
     147: iconst_2
     148: ireturn
     149: aload_1
     150: iload_2
     151: iinc          2, 1
     154: iload         4
     156: iconst_2
     157: ishl
     158: sipush        252
     161: iand
     162: iload         5
     164: iconst_4
     165: ishr
     166: iconst_3
     167: iand
     168: ior
     169: i2b
     170: bastore
     171: aload_1
     172: iload_2
     173: iinc          2, 1
     176: iload         5
     178: iconst_4
     179: ishl
     180: sipush        240
     183: iand
     184: iload         6
     186: iconst_2
     187: ishr
     188: bipush        15
     190: iand
     191: ior
     192: i2b
     193: bastore
     194: aload_1
     195: iload_2
     196: iload         6
     198: bipush        6
     200: ishl
     201: sipush        192
     204: iand
     205: iload         7
     207: bipush        63
     209: iand
     210: ior
     211: i2b
     212: bastore
     213: iconst_3
     214: ireturn
     215: new           #29                 // class java/lang/RuntimeException
     218: dup
     219: ldc           #30                 // String internalError00
     221: invokespecial #31                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     224: athrow

  public static byte[] decode(char[], int, int);
    Code:
       0: iconst_4
       1: newarray       char
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload_2
       8: iconst_4
       9: idiv
      10: iconst_3
      11: imul
      12: iconst_3
      13: iadd
      14: newarray       byte
      16: astore        5
      18: iconst_0
      19: istore        6
      21: iload_1
      22: istore        7
      24: iload         7
      26: iload_1
      27: iload_2
      28: iadd
      29: if_icmpge     101
      32: aload_0
      33: iload         7
      35: caload
      36: istore        8
      38: iload         8
      40: bipush        61
      42: if_icmpeq     63
      45: iload         8
      47: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      50: arraylength
      51: if_icmpge     95
      54: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      57: iload         8
      59: baload
      60: iflt          95
      63: aload_3
      64: iload         4
      66: iinc          4, 1
      69: iload         8
      71: castore
      72: iload         4
      74: aload_3
      75: arraylength
      76: if_icmpne     95
      79: iconst_0
      80: istore        4
      82: iload         6
      84: aload_3
      85: aload         5
      87: iload         6
      89: invokestatic  #32                 // Method decode0:([C[BI)I
      92: iadd
      93: istore        6
      95: iinc          7, 1
      98: goto          24
     101: iload         6
     103: aload         5
     105: arraylength
     106: if_icmpne     112
     109: aload         5
     111: areturn
     112: iload         6
     114: newarray       byte
     116: astore        7
     118: aload         5
     120: iconst_0
     121: aload         7
     123: iconst_0
     124: iload         6
     126: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     129: aload         7
     131: areturn

  public static byte[] decode(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: aload_0
       8: invokevirtual #34                 // Method java/lang/String.length:()I
      11: if_icmpge     105
      14: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      17: aload_0
      18: iload_3
      19: invokevirtual #35                 // Method java/lang/String.charAt:(I)C
      22: baload
      23: tableswitch   { // -3 to -1
                    -3: 72
                    -2: 69
                    -1: 48
               default: 82
          }
      48: iload_2
      49: iconst_2
      50: if_icmpne     63
      53: new           #9                  // class java/lang/IllegalArgumentException
      56: dup
      57: ldc           #36                 // String Too much padding
      59: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: iinc          2, 1
      66: goto          99
      69: goto          99
      72: new           #9                  // class java/lang/IllegalArgumentException
      75: dup
      76: ldc           #37                 // String Invalid character encountered
      78: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: iload_2
      83: ifle          96
      86: new           #9                  // class java/lang/IllegalArgumentException
      89: dup
      90: ldc           #38                 // String Unexpected padding character
      92: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: iinc          1, 1
      99: iinc          3, 1
     102: goto          6
     105: iload_1
     106: iload_2
     107: iadd
     108: iconst_4
     109: irem
     110: ifeq          123
     113: new           #9                  // class java/lang/IllegalArgumentException
     116: dup
     117: ldc           #39                 // String Missing padding
     119: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: iload_1
     124: iload_2
     125: iadd
     126: iconst_4
     127: idiv
     128: iconst_3
     129: imul
     130: iload_2
     131: isub
     132: newarray       byte
     134: astore_3
     135: iconst_0
     136: istore        4
     138: iconst_0
     139: istore        5
     141: iconst_0
     142: istore        6
     144: iconst_0
     145: istore        7
     147: iload_1
     148: ifle          237
     151: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
     154: aload_0
     155: iload         4
     157: iinc          4, 1
     160: invokevirtual #35                 // Method java/lang/String.charAt:(I)C
     163: baload
     164: istore        8
     166: iload         8
     168: bipush        -2
     170: if_icmpne     176
     173: goto          147
     176: iload         7
     178: ifne          195
     181: iload         8
     183: iconst_2
     184: ishl
     185: i2b
     186: istore        6
     188: bipush        6
     190: istore        7
     192: goto          231
     195: iload         6
     197: iload         8
     199: iload         7
     201: iconst_2
     202: isub
     203: ishr
     204: ior
     205: i2b
     206: istore        6
     208: aload_3
     209: iload         5
     211: iinc          5, 1
     214: iload         6
     216: bastore
     217: iload         8
     219: bipush        10
     221: iload         7
     223: isub
     224: ishl
     225: i2b
     226: istore        6
     228: iinc          7, -2
     231: iinc          1, -1
     234: goto          147
     237: iload         6
     239: ifeq          252
     242: new           #9                  // class java/lang/IllegalArgumentException
     245: dup
     246: ldc           #40                 // String Invalid base64 value
     248: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     251: athrow
     252: iload         5
     254: aload_3
     255: arraylength
     256: if_icmpeq     269
     259: new           #41                 // class java/lang/Error
     262: dup
     263: ldc           #42                 // String Oops. This is a bug.
     265: invokespecial #43                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
     268: athrow
     269: aload_3
     270: areturn

  public static boolean isValidBase64Encoding(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #34                 // Method java/lang/String.length:()I
       7: if_icmpge     64
      10: aload_0
      11: iload_1
      12: invokevirtual #35                 // Method java/lang/String.charAt:(I)C
      15: istore_2
      16: iload_2
      17: bipush        61
      19: if_icmpeq     58
      22: iload_2
      23: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      26: arraylength
      27: if_icmpge     41
      30: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      33: iload_2
      34: baload
      35: iflt          41
      38: goto          58
      41: iload_2
      42: bipush        13
      44: if_icmpeq     58
      47: iload_2
      48: bipush        10
      50: if_icmpne     56
      53: goto          58
      56: iconst_0
      57: ireturn
      58: iinc          1, 1
      61: goto          2
      64: iconst_1
      65: ireturn

  public static void decode(char[], int, int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_4
       1: newarray       char
       3: astore        4
       5: iconst_0
       6: istore        5
       8: iconst_3
       9: newarray       byte
      11: astore        6
      13: iload_1
      14: istore        7
      16: iload         7
      18: iload_1
      19: iload_2
      20: iadd
      21: if_icmpge     101
      24: aload_0
      25: iload         7
      27: caload
      28: istore        8
      30: iload         8
      32: bipush        61
      34: if_icmpeq     55
      37: iload         8
      39: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      42: arraylength
      43: if_icmpge     95
      46: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      49: iload         8
      51: baload
      52: iflt          95
      55: aload         4
      57: iload         5
      59: iinc          5, 1
      62: iload         8
      64: castore
      65: iload         5
      67: aload         4
      69: arraylength
      70: if_icmpne     95
      73: iconst_0
      74: istore        5
      76: aload         4
      78: aload         6
      80: iconst_0
      81: invokestatic  #32                 // Method decode0:([C[BI)I
      84: istore        9
      86: aload_3
      87: aload         6
      89: iconst_0
      90: iload         9
      92: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V
      95: iinc          7, 1
      98: goto          16
     101: return

  public static void decode(java.lang.String, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iconst_4
       1: newarray       char
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iconst_3
       7: newarray       byte
       9: astore        4
      11: iconst_0
      12: istore        5
      14: iload         5
      16: aload_0
      17: invokevirtual #34                 // Method java/lang/String.length:()I
      20: if_icmpge     96
      23: aload_0
      24: iload         5
      26: invokevirtual #35                 // Method java/lang/String.charAt:(I)C
      29: istore        6
      31: iload         6
      33: bipush        61
      35: if_icmpeq     56
      38: iload         6
      40: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      43: arraylength
      44: if_icmpge     90
      47: getstatic     #28                 // Field org/apache/axiom/util/base64/Base64Constants.S_DECODETABLE:[B
      50: iload         6
      52: baload
      53: iflt          90
      56: aload_2
      57: iload_3
      58: iinc          3, 1
      61: iload         6
      63: castore
      64: iload_3
      65: aload_2
      66: arraylength
      67: if_icmpne     90
      70: iconst_0
      71: istore_3
      72: aload_2
      73: aload         4
      75: iconst_0
      76: invokestatic  #32                 // Method decode0:([C[BI)I
      79: istore        7
      81: aload_1
      82: aload         4
      84: iconst_0
      85: iload         7
      87: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V
      90: iinc          5, 1
      93: goto          14
      96: return

  public static java.lang.String encode(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #45                 // Method encode:([BII)Ljava/lang/String;
       7: areturn

  public static java.lang.String encode(byte[], int, int);
    Code:
       0: iload_2
       1: ifgt          7
       4: ldc           #46                 // String
       6: areturn
       7: iload_2
       8: iconst_3
       9: idiv
      10: iconst_4
      11: imul
      12: iconst_4
      13: iadd
      14: newarray       char
      16: astore_3
      17: iload_1
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload_2
      24: iload_1
      25: isub
      26: istore        6
      28: iload         6
      30: iconst_3
      31: if_icmplt     155
      34: aload_0
      35: iload         4
      37: baload
      38: sipush        255
      41: iand
      42: bipush        16
      44: ishl
      45: aload_0
      46: iload         4
      48: iconst_1
      49: iadd
      50: baload
      51: sipush        255
      54: iand
      55: bipush        8
      57: ishl
      58: iadd
      59: aload_0
      60: iload         4
      62: iconst_2
      63: iadd
      64: baload
      65: sipush        255
      68: iand
      69: iadd
      70: istore        7
      72: aload_3
      73: iload         5
      75: iinc          5, 1
      78: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      81: iload         7
      83: bipush        18
      85: ishr
      86: baload
      87: i2c
      88: castore
      89: aload_3
      90: iload         5
      92: iinc          5, 1
      95: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      98: iload         7
     100: bipush        12
     102: ishr
     103: bipush        63
     105: iand
     106: baload
     107: i2c
     108: castore
     109: aload_3
     110: iload         5
     112: iinc          5, 1
     115: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     118: iload         7
     120: bipush        6
     122: ishr
     123: bipush        63
     125: iand
     126: baload
     127: i2c
     128: castore
     129: aload_3
     130: iload         5
     132: iinc          5, 1
     135: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     138: iload         7
     140: bipush        63
     142: iand
     143: baload
     144: i2c
     145: castore
     146: iinc          4, 3
     149: iinc          6, -3
     152: goto          28
     155: iload         6
     157: iconst_1
     158: if_icmpne     227
     161: aload_0
     162: iload         4
     164: baload
     165: sipush        255
     168: iand
     169: istore        7
     171: aload_3
     172: iload         5
     174: iinc          5, 1
     177: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     180: iload         7
     182: iconst_2
     183: ishr
     184: baload
     185: i2c
     186: castore
     187: aload_3
     188: iload         5
     190: iinc          5, 1
     193: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     196: iload         7
     198: iconst_4
     199: ishl
     200: bipush        63
     202: iand
     203: baload
     204: i2c
     205: castore
     206: aload_3
     207: iload         5
     209: iinc          5, 1
     212: bipush        61
     214: castore
     215: aload_3
     216: iload         5
     218: iinc          5, 1
     221: bipush        61
     223: castore
     224: goto          321
     227: iload         6
     229: iconst_2
     230: if_icmpne     321
     233: aload_0
     234: iload         4
     236: baload
     237: sipush        255
     240: iand
     241: bipush        8
     243: ishl
     244: aload_0
     245: iload         4
     247: iconst_1
     248: iadd
     249: baload
     250: sipush        255
     253: iand
     254: iadd
     255: istore        7
     257: aload_3
     258: iload         5
     260: iinc          5, 1
     263: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     266: iload         7
     268: bipush        10
     270: ishr
     271: baload
     272: i2c
     273: castore
     274: aload_3
     275: iload         5
     277: iinc          5, 1
     280: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     283: iload         7
     285: iconst_4
     286: ishr
     287: bipush        63
     289: iand
     290: baload
     291: i2c
     292: castore
     293: aload_3
     294: iload         5
     296: iinc          5, 1
     299: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     302: iload         7
     304: iconst_2
     305: ishl
     306: bipush        63
     308: iand
     309: baload
     310: i2c
     311: castore
     312: aload_3
     313: iload         5
     315: iinc          5, 1
     318: bipush        61
     320: castore
     321: new           #48                 // class java/lang/String
     324: dup
     325: aload_3
     326: iconst_0
     327: iload         5
     329: invokespecial #49                 // Method java/lang/String."<init>":([CII)V
     332: areturn

  public static void encode(byte[], int, int, java.lang.StringBuffer);
    Code:
       0: iload_2
       1: ifgt          5
       4: return
       5: iconst_4
       6: newarray       char
       8: astore        4
      10: iload_1
      11: istore        5
      13: iload_2
      14: iload_1
      15: isub
      16: istore        6
      18: iload         6
      20: iconst_3
      21: if_icmplt     140
      24: aload_0
      25: iload         5
      27: baload
      28: sipush        255
      31: iand
      32: bipush        16
      34: ishl
      35: aload_0
      36: iload         5
      38: iconst_1
      39: iadd
      40: baload
      41: sipush        255
      44: iand
      45: bipush        8
      47: ishl
      48: iadd
      49: aload_0
      50: iload         5
      52: iconst_2
      53: iadd
      54: baload
      55: sipush        255
      58: iand
      59: iadd
      60: istore        7
      62: aload         4
      64: iconst_0
      65: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      68: iload         7
      70: bipush        18
      72: ishr
      73: baload
      74: i2c
      75: castore
      76: aload         4
      78: iconst_1
      79: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      82: iload         7
      84: bipush        12
      86: ishr
      87: bipush        63
      89: iand
      90: baload
      91: i2c
      92: castore
      93: aload         4
      95: iconst_2
      96: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      99: iload         7
     101: bipush        6
     103: ishr
     104: bipush        63
     106: iand
     107: baload
     108: i2c
     109: castore
     110: aload         4
     112: iconst_3
     113: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     116: iload         7
     118: bipush        63
     120: iand
     121: baload
     122: i2c
     123: castore
     124: aload_3
     125: aload         4
     127: invokevirtual #50                 // Method java/lang/StringBuffer.append:([C)Ljava/lang/StringBuffer;
     130: pop
     131: iinc          5, 3
     134: iinc          6, -3
     137: goto          18
     140: iload         6
     142: iconst_1
     143: if_icmpne     207
     146: aload_0
     147: iload         5
     149: baload
     150: sipush        255
     153: iand
     154: istore        7
     156: aload         4
     158: iconst_0
     159: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     162: iload         7
     164: iconst_2
     165: ishr
     166: baload
     167: i2c
     168: castore
     169: aload         4
     171: iconst_1
     172: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     175: iload         7
     177: iconst_4
     178: ishl
     179: bipush        63
     181: iand
     182: baload
     183: i2c
     184: castore
     185: aload         4
     187: iconst_2
     188: bipush        61
     190: castore
     191: aload         4
     193: iconst_3
     194: bipush        61
     196: castore
     197: aload_3
     198: aload         4
     200: invokevirtual #50                 // Method java/lang/StringBuffer.append:([C)Ljava/lang/StringBuffer;
     203: pop
     204: goto          296
     207: iload         6
     209: iconst_2
     210: if_icmpne     296
     213: aload_0
     214: iload         5
     216: baload
     217: sipush        255
     220: iand
     221: bipush        8
     223: ishl
     224: aload_0
     225: iload         5
     227: iconst_1
     228: iadd
     229: baload
     230: sipush        255
     233: iand
     234: iadd
     235: istore        7
     237: aload         4
     239: iconst_0
     240: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     243: iload         7
     245: bipush        10
     247: ishr
     248: baload
     249: i2c
     250: castore
     251: aload         4
     253: iconst_1
     254: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     257: iload         7
     259: iconst_4
     260: ishr
     261: bipush        63
     263: iand
     264: baload
     265: i2c
     266: castore
     267: aload         4
     269: iconst_2
     270: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     273: iload         7
     275: iconst_2
     276: ishl
     277: bipush        63
     279: iand
     280: baload
     281: i2c
     282: castore
     283: aload         4
     285: iconst_3
     286: bipush        61
     288: castore
     289: aload_3
     290: aload         4
     292: invokevirtual #50                 // Method java/lang/StringBuffer.append:([C)Ljava/lang/StringBuffer;
     295: pop
     296: return

  public static void encode(byte[], int, int, java.io.OutputStream) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifgt          5
       4: return
       5: iconst_4
       6: newarray       byte
       8: astore        4
      10: iload_1
      11: istore        5
      13: iload_2
      14: iload_1
      15: isub
      16: istore        6
      18: iload         6
      20: iconst_3
      21: if_icmplt     137
      24: aload_0
      25: iload         5
      27: baload
      28: sipush        255
      31: iand
      32: bipush        16
      34: ishl
      35: aload_0
      36: iload         5
      38: iconst_1
      39: iadd
      40: baload
      41: sipush        255
      44: iand
      45: bipush        8
      47: ishl
      48: iadd
      49: aload_0
      50: iload         5
      52: iconst_2
      53: iadd
      54: baload
      55: sipush        255
      58: iand
      59: iadd
      60: istore        7
      62: aload         4
      64: iconst_0
      65: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      68: iload         7
      70: bipush        18
      72: ishr
      73: baload
      74: bastore
      75: aload         4
      77: iconst_1
      78: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      81: iload         7
      83: bipush        12
      85: ishr
      86: bipush        63
      88: iand
      89: baload
      90: bastore
      91: aload         4
      93: iconst_2
      94: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      97: iload         7
      99: bipush        6
     101: ishr
     102: bipush        63
     104: iand
     105: baload
     106: bastore
     107: aload         4
     109: iconst_3
     110: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     113: iload         7
     115: bipush        63
     117: iand
     118: baload
     119: bastore
     120: aload_3
     121: aload         4
     123: iconst_0
     124: iconst_4
     125: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V
     128: iinc          5, 3
     131: iinc          6, -3
     134: goto          18
     137: iload         6
     139: iconst_1
     140: if_icmpne     203
     143: aload_0
     144: iload         5
     146: baload
     147: sipush        255
     150: iand
     151: istore        7
     153: aload         4
     155: iconst_0
     156: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     159: iload         7
     161: iconst_2
     162: ishr
     163: baload
     164: bastore
     165: aload         4
     167: iconst_1
     168: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     171: iload         7
     173: iconst_4
     174: ishl
     175: bipush        63
     177: iand
     178: baload
     179: bastore
     180: aload         4
     182: iconst_2
     183: bipush        61
     185: bastore
     186: aload         4
     188: iconst_3
     189: bipush        61
     191: bastore
     192: aload_3
     193: aload         4
     195: iconst_0
     196: iconst_4
     197: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V
     200: goto          290
     203: iload         6
     205: iconst_2
     206: if_icmpne     290
     209: aload_0
     210: iload         5
     212: baload
     213: sipush        255
     216: iand
     217: bipush        8
     219: ishl
     220: aload_0
     221: iload         5
     223: iconst_1
     224: iadd
     225: baload
     226: sipush        255
     229: iand
     230: iadd
     231: istore        7
     233: aload         4
     235: iconst_0
     236: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     239: iload         7
     241: bipush        10
     243: ishr
     244: baload
     245: bastore
     246: aload         4
     248: iconst_1
     249: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     252: iload         7
     254: iconst_4
     255: ishr
     256: bipush        63
     258: iand
     259: baload
     260: bastore
     261: aload         4
     263: iconst_2
     264: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     267: iload         7
     269: iconst_2
     270: ishl
     271: bipush        63
     273: iand
     274: baload
     275: bastore
     276: aload         4
     278: iconst_3
     279: bipush        61
     281: bastore
     282: aload_3
     283: aload         4
     285: iconst_0
     286: iconst_4
     287: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V
     290: return

  public static void encode(byte[], int, int, java.io.Writer) throws java.io.IOException;
    Code:
       0: iload_2
       1: ifgt          5
       4: return
       5: iconst_4
       6: newarray       char
       8: astore        4
      10: iload_1
      11: istore        5
      13: iload_2
      14: iload_1
      15: isub
      16: istore        6
      18: iconst_0
      19: istore        7
      21: iload         6
      23: iconst_3
      24: if_icmplt     161
      27: aload_0
      28: iload         5
      30: baload
      31: sipush        255
      34: iand
      35: bipush        16
      37: ishl
      38: aload_0
      39: iload         5
      41: iconst_1
      42: iadd
      43: baload
      44: sipush        255
      47: iand
      48: bipush        8
      50: ishl
      51: iadd
      52: aload_0
      53: iload         5
      55: iconst_2
      56: iadd
      57: baload
      58: sipush        255
      61: iand
      62: iadd
      63: istore        8
      65: aload         4
      67: iconst_0
      68: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      71: iload         8
      73: bipush        18
      75: ishr
      76: baload
      77: i2c
      78: castore
      79: aload         4
      81: iconst_1
      82: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
      85: iload         8
      87: bipush        12
      89: ishr
      90: bipush        63
      92: iand
      93: baload
      94: i2c
      95: castore
      96: aload         4
      98: iconst_2
      99: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     102: iload         8
     104: bipush        6
     106: ishr
     107: bipush        63
     109: iand
     110: baload
     111: i2c
     112: castore
     113: aload         4
     115: iconst_3
     116: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     119: iload         8
     121: bipush        63
     123: iand
     124: baload
     125: i2c
     126: castore
     127: aload_3
     128: aload         4
     130: iconst_0
     131: iconst_4
     132: invokevirtual #51                 // Method java/io/Writer.write:([CII)V
     135: iinc          5, 3
     138: iinc          6, -3
     141: iinc          7, 4
     144: iload         7
     146: bipush        76
     148: irem
     149: ifne          158
     152: aload_3
     153: ldc           #52                 // String \n
     155: invokevirtual #53                 // Method java/io/Writer.write:(Ljava/lang/String;)V
     158: goto          21
     161: iload         6
     163: iconst_1
     164: if_icmpne     229
     167: aload_0
     168: iload         5
     170: baload
     171: sipush        255
     174: iand
     175: istore        8
     177: aload         4
     179: iconst_0
     180: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     183: iload         8
     185: iconst_2
     186: ishr
     187: baload
     188: i2c
     189: castore
     190: aload         4
     192: iconst_1
     193: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     196: iload         8
     198: iconst_4
     199: ishl
     200: bipush        63
     202: iand
     203: baload
     204: i2c
     205: castore
     206: aload         4
     208: iconst_2
     209: bipush        61
     211: castore
     212: aload         4
     214: iconst_3
     215: bipush        61
     217: castore
     218: aload_3
     219: aload         4
     221: iconst_0
     222: iconst_4
     223: invokevirtual #51                 // Method java/io/Writer.write:([CII)V
     226: goto          319
     229: iload         6
     231: iconst_2
     232: if_icmpne     319
     235: aload_0
     236: iload         5
     238: baload
     239: sipush        255
     242: iand
     243: bipush        8
     245: ishl
     246: aload_0
     247: iload         5
     249: iconst_1
     250: iadd
     251: baload
     252: sipush        255
     255: iand
     256: iadd
     257: istore        8
     259: aload         4
     261: iconst_0
     262: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     265: iload         8
     267: bipush        10
     269: ishr
     270: baload
     271: i2c
     272: castore
     273: aload         4
     275: iconst_1
     276: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     279: iload         8
     281: iconst_4
     282: ishr
     283: bipush        63
     285: iand
     286: baload
     287: i2c
     288: castore
     289: aload         4
     291: iconst_2
     292: getstatic     #47                 // Field org/apache/axiom/util/base64/Base64Constants.S_BASE64CHAR:[B
     295: iload         8
     297: iconst_2
     298: ishl
     299: bipush        63
     301: iand
     302: baload
     303: i2c
     304: castore
     305: aload         4
     307: iconst_3
     308: bipush        61
     310: castore
     311: aload_3
     312: aload         4
     314: iconst_0
     315: iconst_4
     316: invokevirtual #51                 // Method java/io/Writer.write:([CII)V
     319: return
}
