Compiled from "TempFileBlobImpl.java"
final class org.apache.axiom.blob.TempFileBlobImpl extends org.apache.axiom.blob.AbstractWritableBlob {
  private static final org.apache.commons.logging.Log log;

  private final org.apache.axiom.blob.TempFileBlobFactory factory;

  private final java.lang.Throwable trace;

  private java.io.File file;

  private org.apache.axiom.blob.State state;

  org.apache.axiom.blob.TempFileBlobImpl(org.apache.axiom.blob.TempFileBlobFactory);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/axiom/blob/AbstractWritableBlob."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field org/apache/axiom/blob/State.NEW:Lorg/apache/axiom/blob/State;
       8: putfield      #1                  // Field state:Lorg/apache/axiom/blob/State;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field factory:Lorg/apache/axiom/blob/TempFileBlobFactory;
      16: aload_0
      17: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      20: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      25: ifeq          38
      28: new           #7                  // class java/lang/Throwable
      31: dup
      32: invokespecial #8                  // Method java/lang/Throwable."<init>":()V
      35: goto          39
      38: aconst_null
      39: putfield      #9                  // Field trace:Ljava/lang/Throwable;
      42: return

  public java.io.OutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:Lorg/apache/axiom/blob/State;
       4: getstatic     #3                  // Field org/apache/axiom/blob/State.NEW:Lorg/apache/axiom/blob/State;
       7: if_acmpeq     18
      10: new           #10                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: aload_0
      20: getfield      #4                  // Field factory:Lorg/apache/axiom/blob/TempFileBlobFactory;
      23: invokevirtual #12                 // Method org/apache/axiom/blob/TempFileBlobFactory.createTempFile:()Ljava/io/File;
      26: putfield      #13                 // Field file:Ljava/io/File;
      29: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      32: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      37: ifeq          70
      40: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      43: new           #14                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #16                 // String Using temporary file
      52: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #13                 // Field file:Ljava/io/File;
      59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: aload_0
      71: getfield      #13                 // Field file:Ljava/io/File;
      74: invokevirtual #21                 // Method java/io/File.deleteOnExit:()V
      77: new           #22                 // class org/apache/axiom/blob/TempFileBlobImpl$1
      80: dup
      81: aload_0
      82: aload_0
      83: getfield      #13                 // Field file:Ljava/io/File;
      86: invokespecial #23                 // Method org/apache/axiom/blob/TempFileBlobImpl$1."<init>":(Lorg/apache/axiom/blob/TempFileBlobImpl;Ljava/io/File;)V
      89: astore_1
      90: aload_0
      91: getstatic     #24                 // Field org/apache/axiom/blob/State.UNCOMMITTED:Lorg/apache/axiom/blob/State;
      94: putfield      #1                  // Field state:Lorg/apache/axiom/blob/State;
      97: aload_1
      98: areturn

  public java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:Lorg/apache/axiom/blob/State;
       4: getstatic     #25                 // Field org/apache/axiom/blob/State.COMMITTED:Lorg/apache/axiom/blob/State;
       7: if_acmpeq     18
      10: new           #10                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: new           #26                 // class org/apache/axiom/blob/TempFileInputStream
      21: dup
      22: aload_0
      23: getfield      #13                 // Field file:Ljava/io/File;
      26: invokespecial #27                 // Method org/apache/axiom/blob/TempFileInputStream."<init>":(Ljava/io/File;)V
      29: areturn

  public long getSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:Lorg/apache/axiom/blob/State;
       4: getstatic     #25                 // Field org/apache/axiom/blob/State.COMMITTED:Lorg/apache/axiom/blob/State;
       7: if_acmpeq     18
      10: new           #10                 // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #13                 // Field file:Ljava/io/File;
      22: invokevirtual #28                 // Method java/io/File.length:()J
      25: lreturn

  public void release() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field file:Ljava/io/File;
       4: ifnull        100
       7: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      10: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      15: ifeq          48
      18: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      21: new           #14                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #29                 // String Deleting temporary file
      30: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: getfield      #13                 // Field file:Ljava/io/File;
      37: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      40: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      48: aload_0
      49: getfield      #13                 // Field file:Ljava/io/File;
      52: invokevirtual #30                 // Method java/io/File.delete:()Z
      55: ifne          88
      58: new           #31                 // class java/io/IOException
      61: dup
      62: new           #14                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #32                 // String Failed to delete
      71: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #13                 // Field file:Ljava/io/File;
      78: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokespecial #33                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: aconst_null
      90: putfield      #13                 // Field file:Ljava/io/File;
      93: aload_0
      94: getstatic     #34                 // Field org/apache/axiom/blob/State.RELEASED:Lorg/apache/axiom/blob/State;
      97: putfield      #1                  // Field state:Lorg/apache/axiom/blob/State;
     100: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field file:Ljava/io/File;
       4: ifnull        70
       7: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      10: new           #14                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #35                 // String Cleaning up unreleased temporary file
      19: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #13                 // Field file:Ljava/io/File;
      26: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      37: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      40: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      45: ifeq          62
      48: getstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
      51: ldc           #37                 // String Blob was created here
      53: aload_0
      54: getfield      #9                  // Field trace:Ljava/lang/Throwable;
      57: invokeinterface #38,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      62: aload_0
      63: getfield      #13                 // Field file:Ljava/io/File;
      66: invokevirtual #30                 // Method java/io/File.delete:()Z
      69: pop
      70: return

  static org.apache.axiom.blob.State access$002(org.apache.axiom.blob.TempFileBlobImpl, org.apache.axiom.blob.State);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field state:Lorg/apache/axiom/blob/State;
       6: areturn

  static {};
    Code:
       0: ldc           #39                 // class org/apache/axiom/blob/TempFileBlobImpl
       2: invokestatic  #40                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #5                  // Field log:Lorg/apache/commons/logging/Log;
       8: return
}
