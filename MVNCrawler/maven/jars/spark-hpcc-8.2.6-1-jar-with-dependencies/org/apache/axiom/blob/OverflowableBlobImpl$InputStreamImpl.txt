Compiled from "OverflowableBlobImpl.java"
class org.apache.axiom.blob.OverflowableBlobImpl$InputStreamImpl extends java.io.InputStream {
  private int currentChunkIndex;

  private int currentChunkOffset;

  private int markChunkIndex;

  private int markChunkOffset;

  final org.apache.axiom.blob.OverflowableBlobImpl this$0;

  org.apache.axiom.blob.OverflowableBlobImpl$InputStreamImpl(org.apache.axiom.blob.OverflowableBlobImpl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
       5: aload_0
       6: invokespecial #2                  // Method java/io/InputStream."<init>":()V
       9: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
       4: getfield      #3                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkIndex:I
       7: aload_0
       8: getfield      #4                  // Field currentChunkIndex:I
      11: isub
      12: aload_0
      13: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      16: getfield      #5                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkSize:I
      19: imul
      20: aload_0
      21: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      24: getfield      #6                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkOffset:I
      27: iadd
      28: aload_0
      29: getfield      #7                  // Field currentChunkOffset:I
      32: isub
      33: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iconst_0
       7: istore        4
       9: iload_3
      10: ifle          177
      13: aload_0
      14: getfield      #4                  // Field currentChunkIndex:I
      17: aload_0
      18: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      21: getfield      #3                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkIndex:I
      24: if_icmpne     41
      27: aload_0
      28: getfield      #7                  // Field currentChunkOffset:I
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      35: getfield      #6                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkOffset:I
      38: if_icmpeq     177
      41: aload_0
      42: getfield      #4                  // Field currentChunkIndex:I
      45: aload_0
      46: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      49: getfield      #3                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkIndex:I
      52: if_icmpne     76
      55: iload_3
      56: aload_0
      57: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      60: getfield      #6                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkOffset:I
      63: aload_0
      64: getfield      #7                  // Field currentChunkOffset:I
      67: isub
      68: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      71: istore        5
      73: goto          94
      76: iload_3
      77: aload_0
      78: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      81: getfield      #5                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkSize:I
      84: aload_0
      85: getfield      #7                  // Field currentChunkOffset:I
      88: isub
      89: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      92: istore        5
      94: aload_0
      95: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      98: getfield      #9                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunks:[[B
     101: aload_0
     102: getfield      #4                  // Field currentChunkIndex:I
     105: aaload
     106: aload_0
     107: getfield      #7                  // Field currentChunkOffset:I
     110: aload_1
     111: iload_2
     112: iload         5
     114: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     117: iload_3
     118: iload         5
     120: isub
     121: istore_3
     122: iload_2
     123: iload         5
     125: iadd
     126: istore_2
     127: aload_0
     128: dup
     129: getfield      #7                  // Field currentChunkOffset:I
     132: iload         5
     134: iadd
     135: putfield      #7                  // Field currentChunkOffset:I
     138: iload         4
     140: iload         5
     142: iadd
     143: istore        4
     145: aload_0
     146: getfield      #7                  // Field currentChunkOffset:I
     149: aload_0
     150: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
     153: getfield      #5                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkSize:I
     156: if_icmpne     174
     159: aload_0
     160: dup
     161: getfield      #4                  // Field currentChunkIndex:I
     164: iconst_1
     165: iadd
     166: putfield      #4                  // Field currentChunkIndex:I
     169: aload_0
     170: iconst_0
     171: putfield      #7                  // Field currentChunkOffset:I
     174: goto          9
     177: iload         4
     179: ifne          184
     182: iconst_m1
     183: ireturn
     184: iload         4
     186: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #11                 // Method read:([BII)I
       8: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: iconst_1
       1: newarray       byte
       3: astore_1
       4: aload_0
       5: aload_1
       6: invokevirtual #12                 // Method read:([B)I
       9: iconst_m1
      10: if_icmpne     17
      13: iconst_m1
      14: goto          24
      17: aload_1
      18: iconst_0
      19: baload
      20: sipush        255
      23: iand
      24: ireturn

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field currentChunkIndex:I
       5: putfield      #13                 // Field markChunkIndex:I
       8: aload_0
       9: aload_0
      10: getfield      #7                  // Field currentChunkOffset:I
      13: putfield      #14                 // Field markChunkOffset:I
      16: return

  public void reset() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #13                 // Field markChunkIndex:I
       5: putfield      #4                  // Field currentChunkIndex:I
       8: aload_0
       9: aload_0
      10: getfield      #14                 // Field markChunkOffset:I
      13: putfield      #7                  // Field currentChunkOffset:I
      16: return

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method available:()I
       4: istore_3
       5: lload_1
       6: iload_3
       7: i2l
       8: lcmp
       9: ifge          17
      12: lload_1
      13: l2i
      14: goto          18
      17: iload_3
      18: istore        4
      20: aload_0
      21: getfield      #7                  // Field currentChunkOffset:I
      24: iload         4
      26: iadd
      27: istore        5
      29: iload         5
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      35: getfield      #5                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkSize:I
      38: idiv
      39: istore        6
      41: aload_0
      42: dup
      43: getfield      #4                  // Field currentChunkIndex:I
      46: iload         6
      48: iadd
      49: putfield      #4                  // Field currentChunkIndex:I
      52: aload_0
      53: iload         5
      55: iload         6
      57: aload_0
      58: getfield      #1                  // Field this$0:Lorg/apache/axiom/blob/OverflowableBlobImpl;
      61: getfield      #5                  // Field org/apache/axiom/blob/OverflowableBlobImpl.chunkSize:I
      64: imul
      65: isub
      66: putfield      #7                  // Field currentChunkOffset:I
      69: iload         4
      71: i2l
      72: lreturn

  public void close() throws java.io.IOException;
    Code:
       0: return
}
