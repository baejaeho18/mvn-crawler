Compiled from "Unbox.java"
public class org.apache.logging.log4j.util.Unbox {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private static final int BITS_PER_INT;

  private static final int RINGBUFFER_MIN_SIZE;

  private static final int RINGBUFFER_SIZE;

  private static final int MASK;

  private static java.lang.ThreadLocal<org.apache.logging.log4j.util.Unbox$State> threadLocalState;

  private static org.apache.logging.log4j.util.Unbox$WebSafeState webSafeState;

  private org.apache.logging.log4j.util.Unbox();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  private static int calculateRingBufferSize(java.lang.String);
    Code:
       0: invokestatic  #4                  // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       3: aload_0
       4: bipush        32
       6: invokestatic  #6                  // Method java/lang/String.valueOf:(I)Ljava/lang/String;
       9: invokevirtual #7                  // Method org/apache/logging/log4j/util/PropertiesUtil.getStringProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      12: astore_1
      13: aload_1
      14: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      17: istore_2
      18: iload_2
      19: bipush        32
      21: if_icmpge     44
      24: bipush        32
      26: istore_2
      27: getstatic     #9                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      30: ldc           #10                 // String Invalid {} {}, using minimum size {}.
      32: aload_0
      33: aload_1
      34: bipush        32
      36: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #12,  5           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      44: iload_2
      45: invokestatic  #13                 // Method ceilingNextPowerOfTwo:(I)I
      48: ireturn
      49: astore_2
      50: getstatic     #9                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      53: ldc           #15                 // String Invalid {} {}, using default size {}.
      55: aload_0
      56: aload_1
      57: bipush        32
      59: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: invokeinterface #12,  5           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      67: bipush        32
      69: ireturn
    Exception table:
       from    to  target type
          13    48    49   Class java/lang/Exception

  private static int ceilingNextPowerOfTwo(int);
    Code:
       0: iconst_1
       1: bipush        32
       3: iload_0
       4: iconst_1
       5: isub
       6: invokestatic  #16                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       9: isub
      10: ishl
      11: ireturn

  public static java.lang.StringBuilder box(float);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: fload_0
       4: invokevirtual #18                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
       7: areturn

  public static java.lang.StringBuilder box(double);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: dload_0
       4: invokevirtual #19                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
       7: areturn

  public static java.lang.StringBuilder box(short);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: iload_0
       4: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       7: areturn

  public static java.lang.StringBuilder box(int);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: iload_0
       4: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       7: areturn

  public static java.lang.StringBuilder box(char);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: iload_0
       4: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       7: areturn

  public static java.lang.StringBuilder box(long);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: lload_0
       4: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
       7: areturn

  public static java.lang.StringBuilder box(byte);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: iload_0
       4: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
       7: areturn

  public static java.lang.StringBuilder box(boolean);
    Code:
       0: invokestatic  #17                 // Method getSB:()Ljava/lang/StringBuilder;
       3: iload_0
       4: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
       7: areturn

  private static org.apache.logging.log4j.util.Unbox$State getState();
    Code:
       0: getstatic     #24                 // Field threadLocalState:Ljava/lang/ThreadLocal;
       3: invokevirtual #25                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #26                 // class org/apache/logging/log4j/util/Unbox$State
       9: astore_0
      10: aload_0
      11: ifnonnull     29
      14: new           #26                 // class org/apache/logging/log4j/util/Unbox$State
      17: dup
      18: invokespecial #27                 // Method org/apache/logging/log4j/util/Unbox$State."<init>":()V
      21: astore_0
      22: getstatic     #24                 // Field threadLocalState:Ljava/lang/ThreadLocal;
      25: aload_0
      26: invokevirtual #28                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      29: aload_0
      30: areturn

  private static java.lang.StringBuilder getSB();
    Code:
       0: getstatic     #29                 // Field org/apache/logging/log4j/util/Constants.ENABLE_THREADLOCALS:Z
       3: ifeq          15
       6: invokestatic  #30                 // Method getState:()Lorg/apache/logging/log4j/util/Unbox$State;
       9: invokevirtual #31                 // Method org/apache/logging/log4j/util/Unbox$State.getStringBuilder:()Ljava/lang/StringBuilder;
      12: goto          21
      15: getstatic     #32                 // Field webSafeState:Lorg/apache/logging/log4j/util/Unbox$WebSafeState;
      18: invokevirtual #33                 // Method org/apache/logging/log4j/util/Unbox$WebSafeState.getStringBuilder:()Ljava/lang/StringBuilder;
      21: areturn

  static int getRingbufferSize();
    Code:
       0: getstatic     #2                  // Field RINGBUFFER_SIZE:I
       3: ireturn

  static int access$000();
    Code:
       0: getstatic     #2                  // Field RINGBUFFER_SIZE:I
       3: ireturn

  static int access$100();
    Code:
       0: getstatic     #1                  // Field MASK:I
       3: ireturn

  static {};
    Code:
       0: invokestatic  #34                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #9                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: ldc           #35                 // String log4j.unbox.ringbuffer.size
       8: invokestatic  #36                 // Method calculateRingBufferSize:(Ljava/lang/String;)I
      11: putstatic     #2                  // Field RINGBUFFER_SIZE:I
      14: getstatic     #2                  // Field RINGBUFFER_SIZE:I
      17: iconst_1
      18: isub
      19: putstatic     #1                  // Field MASK:I
      22: new           #37                 // class java/lang/ThreadLocal
      25: dup
      26: invokespecial #38                 // Method java/lang/ThreadLocal."<init>":()V
      29: putstatic     #24                 // Field threadLocalState:Ljava/lang/ThreadLocal;
      32: new           #39                 // class org/apache/logging/log4j/util/Unbox$WebSafeState
      35: dup
      36: aconst_null
      37: invokespecial #40                 // Method org/apache/logging/log4j/util/Unbox$WebSafeState."<init>":(Lorg/apache/logging/log4j/util/Unbox$1;)V
      40: putstatic     #32                 // Field webSafeState:Lorg/apache/logging/log4j/util/Unbox$WebSafeState;
      43: return
}
