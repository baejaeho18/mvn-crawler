Compiled from "SchemaBuilder.java"
class org.apache.ws.commons.schema.SchemaBuilder$2 implements org.apache.ws.commons.schema.utils.TargetNamespaceValidator {
  final org.apache.ws.commons.schema.XmlSchema val$schema;

  final org.apache.ws.commons.schema.SchemaBuilder this$0;

  org.apache.ws.commons.schema.SchemaBuilder$2(org.apache.ws.commons.schema.SchemaBuilder, org.apache.ws.commons.schema.XmlSchema);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/ws/commons/schema/SchemaBuilder;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$schema:Lorg/apache/ws/commons/schema/XmlSchema;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void validate(org.apache.ws.commons.schema.XmlSchema);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method org/apache/ws/commons/schema/XmlSchema.getSyntacticalTargetNamespace:()Ljava/lang/String;
       5: invokespecial #5                  // Method isEmpty:(Ljava/lang/String;)Z
       8: ifeq          25
      11: aload_1
      12: aload_0
      13: getfield      #2                  // Field val$schema:Lorg/apache/ws/commons/schema/XmlSchema;
      16: invokevirtual #6                  // Method org/apache/ws/commons/schema/XmlSchema.getLogicalTargetNamespace:()Ljava/lang/String;
      19: invokevirtual #7                  // Method org/apache/ws/commons/schema/XmlSchema.setLogicalTargetNamespace:(Ljava/lang/String;)V
      22: goto          123
      25: aload_1
      26: invokevirtual #4                  // Method org/apache/ws/commons/schema/XmlSchema.getSyntacticalTargetNamespace:()Ljava/lang/String;
      29: aload_0
      30: getfield      #2                  // Field val$schema:Lorg/apache/ws/commons/schema/XmlSchema;
      33: invokevirtual #6                  // Method org/apache/ws/commons/schema/XmlSchema.getLogicalTargetNamespace:()Ljava/lang/String;
      36: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifne          123
      42: ldc           #9                  // String An included schema was announced to have the default target namespace
      44: astore_2
      45: aload_0
      46: aload_0
      47: getfield      #2                  // Field val$schema:Lorg/apache/ws/commons/schema/XmlSchema;
      50: invokevirtual #6                  // Method org/apache/ws/commons/schema/XmlSchema.getLogicalTargetNamespace:()Ljava/lang/String;
      53: invokespecial #5                  // Method isEmpty:(Ljava/lang/String;)Z
      56: ifne          89
      59: new           #10                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      66: aload_2
      67: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #13                 // String  or the target namespace
      72: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_0
      76: getfield      #2                  // Field val$schema:Lorg/apache/ws/commons/schema/XmlSchema;
      79: invokevirtual #6                  // Method org/apache/ws/commons/schema/XmlSchema.getLogicalTargetNamespace:()Ljava/lang/String;
      82: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: astore_2
      89: new           #15                 // class org/apache/ws/commons/schema/XmlSchemaException
      92: dup
      93: new           #10                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     100: aload_2
     101: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: ldc           #16                 // String , but has the target namespace
     106: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_1
     110: invokevirtual #6                  // Method org/apache/ws/commons/schema/XmlSchema.getLogicalTargetNamespace:()Ljava/lang/String;
     113: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #17                 // Method org/apache/ws/commons/schema/XmlSchemaException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: return

  private boolean isEmpty(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        13
       4: ldc           #18                 // String
       6: aload_1
       7: invokevirtual #8                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn
}
