Compiled from "ElemTemplateElement.java"
public class org.apache.xalan.templates.ElemTemplateElement extends org.apache.xml.utils.UnImplNode implements org.apache.xml.utils.PrefixResolver,java.io.Serializable,org.apache.xpath.ExpressionNode,org.apache.xpath.WhitespaceStrippingElementMatcher,org.apache.xalan.templates.XSLTVisitable {
  static final long serialVersionUID;

  private int m_lineNumber;

  private int m_endLineNumber;

  private int m_columnNumber;

  private int m_endColumnNumber;

  private boolean m_defaultSpace;

  private boolean m_hasTextLitOnly;

  protected boolean m_hasVariableDecl;

  private java.util.Vector m_declaredPrefixes;

  java.util.Vector m_prefixTable;

  protected int m_docOrderNumber;

  protected org.apache.xalan.templates.ElemTemplateElement m_parentNode;

  org.apache.xalan.templates.ElemTemplateElement m_nextSibling;

  org.apache.xalan.templates.ElemTemplateElement m_firstChild;

  private transient org.w3c.dom.Node m_DOMBackPointer;

  public org.apache.xalan.templates.ElemTemplateElement();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xml/utils/UnImplNode."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field m_defaultSpace:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field m_hasTextLitOnly:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_hasVariableDecl:Z
      19: aload_0
      20: iconst_m1
      21: putfield      #5                  // Field m_docOrderNumber:I
      24: return

  public boolean isCompiledTemplate();
    Code:
       0: iconst_0
       1: ireturn

  public int getXSLToken();
    Code:
       0: iconst_m1
       1: ireturn

  public java.lang.String getNodeName();
    Code:
       0: ldc           #6                  // String Unknown XSLT Element
       2: areturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getNodeName:()Ljava/lang/String;
       4: areturn

  public void runtimeInit(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: return

  public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: return

  public org.apache.xalan.templates.StylesheetComposed getStylesheetComposed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: invokevirtual #9                  // Method getStylesheetComposed:()Lorg/apache/xalan/templates/StylesheetComposed;
       7: areturn

  public org.apache.xalan.templates.Stylesheet getStylesheet();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: if_acmpne     12
       8: aconst_null
       9: goto          19
      12: aload_0
      13: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      16: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
      19: areturn

  public org.apache.xalan.templates.StylesheetRoot getStylesheetRoot();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
       7: areturn

  public void recompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException;
    Code:
       0: return

  public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method resolvePrefixTables:()V
       4: aload_0
       5: invokevirtual #13                 // Method getFirstChildElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       8: astore_2
       9: aload_0
      10: aload_2
      11: ifnull        34
      14: aload_2
      15: invokevirtual #14                 // Method getXSLToken:()I
      18: bipush        78
      20: if_icmpne     34
      23: aload_2
      24: invokevirtual #15                 // Method getNextSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      27: ifnonnull     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: putfield      #3                  // Field m_hasTextLitOnly:Z
      38: aload_1
      39: invokevirtual #16                 // Method org/apache/xalan/templates/StylesheetRoot.getComposeState:()Lorg/apache/xalan/templates/StylesheetRoot$ComposeState;
      42: astore_3
      43: aload_3
      44: invokevirtual #17                 // Method org/apache/xalan/templates/StylesheetRoot$ComposeState.pushStackMark:()V
      47: return

  public void endCompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/apache/xalan/templates/StylesheetRoot.getComposeState:()Lorg/apache/xalan/templates/StylesheetRoot$ComposeState;
       4: astore_2
       5: aload_2
       6: invokevirtual #18                 // Method org/apache/xalan/templates/StylesheetRoot$ComposeState.popStackMark:()V
       9: return

  public void error(java.lang.String, java.lang.Object[]);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #19                 // Method org/apache/xalan/res/XSLMessages.createMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: new           #20                 // class java/lang/RuntimeException
       9: dup
      10: ldc           #21                 // String ER_ELEMTEMPLATEELEM_ERR
      12: iconst_1
      13: anewarray     #22                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_3
      19: aastore
      20: invokestatic  #19                 // Method org/apache/xalan/res/XSLMessages.createMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #23                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow

  public void error(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
       6: return

  public org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException;
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     12
       5: aload_0
       6: ldc           #25                 // String ER_NULL_CHILD
       8: aconst_null
       9: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
      12: aload_1
      13: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      16: astore_2
      17: aconst_null
      18: aload_0
      19: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      22: if_acmpne     33
      25: aload_0
      26: aload_2
      27: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      30: goto          46
      33: aload_0
      34: invokevirtual #28                 // Method getLastChild:()Lorg/w3c/dom/Node;
      37: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      40: astore_3
      41: aload_3
      42: aload_2
      43: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      46: aload_2
      47: aload_0
      48: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      51: aload_1
      52: areturn

  public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     12
       5: aload_0
       6: ldc           #25                 // String ER_NULL_CHILD
       8: aconst_null
       9: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
      12: aconst_null
      13: aload_0
      14: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      17: if_acmpne     28
      20: aload_0
      21: aload_1
      22: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      25: goto          38
      28: aload_0
      29: invokevirtual #30                 // Method getLastChildElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      32: astore_2
      33: aload_2
      34: aload_1
      35: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      38: aload_1
      39: aload_0
      40: invokevirtual #31                 // Method setParentElem:(Lorg/apache/xalan/templates/ElemTemplateElement;)V
      43: aload_1
      44: areturn

  public boolean hasChildNodes();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: if_acmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public short getNodeType();
    Code:
       0: iconst_1
       1: ireturn

  public org.w3c.dom.NodeList getChildNodes();
    Code:
       0: aload_0
       1: areturn

  public org.apache.xalan.templates.ElemTemplateElement removeChild(org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       8: aload_0
       9: if_acmpeq     14
      12: aconst_null
      13: areturn
      14: aload_1
      15: aload_0
      16: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      19: if_acmpne     33
      22: aload_0
      23: aload_1
      24: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      27: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      30: goto          46
      33: aload_1
      34: invokevirtual #32                 // Method getPreviousSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      37: astore_2
      38: aload_2
      39: aload_1
      40: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      43: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      46: aload_1
      47: aconst_null
      48: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      51: aload_1
      52: aconst_null
      53: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      56: aload_1
      57: areturn

  public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException;
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getParentNode:()Lorg/w3c/dom/Node;
      10: aload_0
      11: if_acmpeq     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      20: astore_3
      21: aload_2
      22: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      25: astore        4
      27: aload         4
      29: invokevirtual #34                 // Method getPreviousSibling:()Lorg/w3c/dom/Node;
      32: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      35: astore        5
      37: aconst_null
      38: aload         5
      40: if_acmpeq     49
      43: aload         5
      45: aload_3
      46: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      49: aload_0
      50: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      53: aload         4
      55: if_acmpne     63
      58: aload_0
      59: aload_3
      60: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      63: aload_3
      64: aload_0
      65: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      68: aload         4
      70: aconst_null
      71: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      74: aload_3
      75: aload         4
      77: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      80: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      83: aload         4
      85: aconst_null
      86: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      89: aload_3
      90: areturn

  public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException;
    Code:
       0: aconst_null
       1: aload_2
       2: if_acmpne     13
       5: aload_0
       6: aload_1
       7: invokevirtual #35                 // Method appendChild:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
      10: pop
      11: aload_1
      12: areturn
      13: aload_1
      14: aload_2
      15: if_acmpne     20
      18: aload_1
      19: areturn
      20: aload_0
      21: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      24: astore_3
      25: aconst_null
      26: astore        4
      28: iconst_0
      29: istore        5
      31: goto          167
      34: aload_1
      35: aload_3
      36: if_acmpne     88
      39: aconst_null
      40: aload         4
      42: if_acmpeq     65
      45: aload         4
      47: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      50: aload_3
      51: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      56: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      59: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      62: goto          78
      65: aload_0
      66: aload_3
      67: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      72: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      75: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      78: aload_3
      79: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      84: astore_3
      85: goto          167
      88: aload_2
      89: aload_3
      90: if_acmpne     157
      93: aconst_null
      94: aload         4
      96: if_acmpeq     114
      99: aload         4
     101: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     104: aload_1
     105: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     108: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
     111: goto          122
     114: aload_0
     115: aload_1
     116: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     119: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
     122: aload_1
     123: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     126: aload_2
     127: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     130: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
     133: aload_1
     134: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     137: aload_0
     138: invokevirtual #31                 // Method setParentElem:(Lorg/apache/xalan/templates/ElemTemplateElement;)V
     141: aload_1
     142: astore        4
     144: aload_3
     145: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
     150: astore_3
     151: iconst_1
     152: istore        5
     154: goto          167
     157: aload_3
     158: astore        4
     160: aload_3
     161: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
     166: astore_3
     167: aconst_null
     168: aload_3
     169: if_acmpne     34
     172: iload         5
     174: ifne          189
     177: new           #37                 // class org/w3c/dom/DOMException
     180: dup
     181: bipush        8
     183: ldc           #38                 // String refChild was not found in insertBefore method!
     185: invokespecial #39                 // Method org/w3c/dom/DOMException."<init>":(SLjava/lang/String;)V
     188: athrow
     189: aload_1
     190: areturn

  public org.apache.xalan.templates.ElemTemplateElement replaceChild(org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_2
       5: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       8: aload_0
       9: if_acmpeq     14
      12: aconst_null
      13: areturn
      14: aload_2
      15: invokevirtual #32                 // Method getPreviousSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      18: astore_3
      19: aconst_null
      20: aload_3
      21: if_acmpeq     29
      24: aload_3
      25: aload_1
      26: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      29: aload_0
      30: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      33: aload_2
      34: if_acmpne     42
      37: aload_0
      38: aload_1
      39: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      42: aload_1
      43: aload_0
      44: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      47: aload_2
      48: aconst_null
      49: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      52: aload_1
      53: aload_2
      54: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      57: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      60: aload_2
      61: aconst_null
      62: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      65: aload_1
      66: areturn

  public int getLength();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       6: astore_2
       7: goto          18
      10: iinc          1, 1
      13: aload_2
      14: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      17: astore_2
      18: aload_2
      19: ifnonnull     10
      22: iload_1
      23: ireturn

  public org.w3c.dom.Node item(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: goto          18
      10: aload_2
      11: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      14: astore_2
      15: iinc          3, 1
      18: iload_3
      19: iload_1
      20: if_icmpge     27
      23: aload_2
      24: ifnonnull     10
      27: aload_2
      28: areturn

  public org.w3c.dom.Document getOwnerDocument();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
       4: areturn

  public org.apache.xalan.templates.ElemTemplate getOwnerXSLTemplate();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #14                 // Method getXSLToken:()I
       6: istore_2
       7: goto          25
      10: aload_1
      11: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      14: astore_1
      15: aconst_null
      16: aload_1
      17: if_acmpeq     25
      20: aload_1
      21: invokevirtual #14                 // Method getXSLToken:()I
      24: istore_2
      25: aconst_null
      26: aload_1
      27: if_acmpeq     36
      30: iload_2
      31: bipush        19
      33: if_icmpne     10
      36: aload_1
      37: checkcast     #41                 // class org/apache/xalan/templates/ElemTemplate
      40: areturn

  public java.lang.String getTagName();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getNodeName:()Ljava/lang/String;
       4: areturn

  public boolean hasTextLitOnly();
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_hasTextLitOnly:Z
       4: ireturn

  public java.lang.String getBaseIdentifier();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getSystemId:()Ljava/lang/String;
       4: areturn

  public int getEndLineNumber();
    Code:
       0: aload_0
       1: getfield      #43                 // Field m_endLineNumber:I
       4: ireturn

  public int getLineNumber();
    Code:
       0: aload_0
       1: getfield      #44                 // Field m_lineNumber:I
       4: ireturn

  public int getEndColumnNumber();
    Code:
       0: aload_0
       1: getfield      #45                 // Field m_endColumnNumber:I
       4: ireturn

  public int getColumnNumber();
    Code:
       0: aload_0
       1: getfield      #46                 // Field m_columnNumber:I
       4: ireturn

  public java.lang.String getPublicId();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: if_acmpeq     18
       8: aload_0
       9: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      12: invokevirtual #47                 // Method getPublicId:()Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: areturn

  public java.lang.String getSystemId();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #48                 // Method org/apache/xalan/templates/Stylesheet.getHref:()Ljava/lang/String;
      17: areturn

  public void setLocaterInfo(javax.xml.transform.SourceLocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #49,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getLineNumber:()I
       7: putfield      #44                 // Field m_lineNumber:I
      10: aload_0
      11: aload_1
      12: invokeinterface #50,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getColumnNumber:()I
      17: putfield      #46                 // Field m_columnNumber:I
      20: return

  public void setEndLocaterInfo(javax.xml.transform.SourceLocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #49,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getLineNumber:()I
       7: putfield      #43                 // Field m_endLineNumber:I
      10: aload_0
      11: aload_1
      12: invokeinterface #50,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getColumnNumber:()I
      17: putfield      #45                 // Field m_endColumnNumber:I
      20: return

  public boolean hasVariableDecl();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_hasVariableDecl:Z
       4: ireturn

  public void setXmlSpace(int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: if_icmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: putfield      #2                  // Field m_defaultSpace:Z
      14: return

  public boolean getXmlSpace();
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_defaultSpace:Z
       4: ireturn

  public java.util.Vector getDeclaredPrefixes();
    Code:
       0: aload_0
       1: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
       4: areturn

  public void setPrefixes(org.xml.sax.helpers.NamespaceSupport) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #52                 // Method setPrefixes:(Lorg/xml/sax/helpers/NamespaceSupport;Z)V
       6: return

  public void setPrefixes(org.xml.sax.helpers.NamespaceSupport, boolean) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method org/xml/sax/helpers/NamespaceSupport.getDeclaredPrefixes:()Ljava/util/Enumeration;
       4: astore_3
       5: goto          86
       8: aload_3
       9: invokeinterface #54,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      14: checkcast     #55                 // class java/lang/String
      17: astore        4
      19: aconst_null
      20: aload_0
      21: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
      24: if_acmpne     38
      27: aload_0
      28: new           #56                 // class java/util/Vector
      31: dup
      32: invokespecial #57                 // Method java/util/Vector."<init>":()V
      35: putfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
      38: aload_1
      39: aload         4
      41: invokevirtual #58                 // Method org/xml/sax/helpers/NamespaceSupport.getURI:(Ljava/lang/String;)Ljava/lang/String;
      44: astore        5
      46: iload_2
      47: ifeq          63
      50: aload         5
      52: ldc           #59                 // String http://www.w3.org/1999/XSL/Transform
      54: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          63
      60: goto          86
      63: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
      66: dup
      67: aload         4
      69: aload         5
      71: iconst_0
      72: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      75: astore        6
      77: aload_0
      78: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
      81: aload         6
      83: invokevirtual #63                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      86: aload_3
      87: invokeinterface #64,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      92: ifne          8
      95: return

  public java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node);
    Code:
       0: aload_0
       1: ldc           #65                 // String ER_CANT_RESOLVE_NSPREFIX
       3: aconst_null
       4: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
       7: aconst_null
       8: areturn

  public java.lang.String getNamespaceForPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpeq     71
      10: aload_2
      11: invokevirtual #66                 // Method java/util/Vector.size:()I
      14: istore_3
      15: aload_1
      16: ldc           #67                 // String #default
      18: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          27
      24: ldc           #68                 // String
      26: astore_1
      27: iconst_0
      28: istore        4
      30: goto          65
      33: aload_2
      34: iload         4
      36: invokevirtual #69                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      39: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      42: astore        5
      44: aload_1
      45: aload         5
      47: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      50: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifeq          62
      56: aload         5
      58: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
      61: areturn
      62: iinc          4, 1
      65: iload         4
      67: iload_3
      68: if_icmplt     33
      71: aconst_null
      72: aload_0
      73: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      76: if_acmpeq     88
      79: aload_0
      80: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      83: aload_1
      84: invokevirtual #72                 // Method getNamespaceForPrefix:(Ljava/lang/String;)Ljava/lang/String;
      87: areturn
      88: ldc           #73                 // String xml
      90: aload_1
      91: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          100
      97: ldc           #74                 // String http://www.w3.org/XML/1998/namespace
      99: areturn
     100: aconst_null
     101: areturn

  public java.util.Vector getPrefixes();
    Code:
       0: aload_0
       1: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
       4: areturn

  public boolean containsExcludeResultPrefix(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_3
       5: aconst_null
       6: aload_3
       7: if_acmpeq     17
      10: aload_3
      11: aload_1
      12: aload_2
      13: invokevirtual #76                 // Method containsExcludeResultPrefix:(Ljava/lang/String;Ljava/lang/String;)Z
      16: ireturn
      17: iconst_0
      18: ireturn

  private boolean excludeResultNSDecl(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_2
       1: ifnull        37
       4: aload_2
       5: ldc           #59                 // String http://www.w3.org/1999/XSL/Transform
       7: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifne          24
      13: aload_0
      14: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
      17: aload_2
      18: invokevirtual #77                 // Method org/apache/xalan/templates/Stylesheet.containsExtensionElementURI:(Ljava/lang/String;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokevirtual #76                 // Method containsExcludeResultPrefix:(Ljava/lang/String;Ljava/lang/String;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public void resolvePrefixTables() throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
       5: aconst_null
       6: aload_0
       7: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
      10: if_acmpeq     167
      13: aload_0
      14: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
      17: astore_1
      18: aload_0
      19: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
      22: invokevirtual #66                 // Method java/util/Vector.size:()I
      25: istore_2
      26: iconst_0
      27: istore_3
      28: goto          162
      31: aload_0
      32: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/Vector;
      35: iload_3
      36: invokevirtual #69                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      39: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      42: astore        4
      44: aload         4
      46: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      49: astore        5
      51: aload         4
      53: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
      56: astore        6
      58: aconst_null
      59: aload         6
      61: if_acmpne     68
      64: ldc           #68                 // String
      66: astore        6
      68: aload_0
      69: aload         5
      71: aload         6
      73: invokespecial #78                 // Method excludeResultNSDecl:(Ljava/lang/String;Ljava/lang/String;)Z
      76: istore        7
      78: aconst_null
      79: aload_0
      80: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      83: if_acmpne     97
      86: aload_0
      87: new           #56                 // class java/util/Vector
      90: dup
      91: invokespecial #57                 // Method java/util/Vector."<init>":()V
      94: putfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      97: aload_1
      98: aload         6
     100: invokevirtual #79                 // Method org/apache/xalan/templates/StylesheetRoot.getNamespaceAliasComposed:(Ljava/lang/String;)Lorg/apache/xalan/templates/NamespaceAlias;
     103: astore        8
     105: aconst_null
     106: aload         8
     108: if_acmpeq     135
     111: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
     114: dup
     115: aload         8
     117: invokevirtual #80                 // Method org/apache/xalan/templates/NamespaceAlias.getStylesheetPrefix:()Ljava/lang/String;
     120: aload         8
     122: invokevirtual #81                 // Method org/apache/xalan/templates/NamespaceAlias.getResultNamespace:()Ljava/lang/String;
     125: iload         7
     127: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
     130: astore        4
     132: goto          150
     135: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
     138: dup
     139: aload         5
     141: aload         6
     143: iload         7
     145: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
     148: astore        4
     150: aload_0
     151: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
     154: aload         4
     156: invokevirtual #63                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     159: iinc          3, 1
     162: iload_3
     163: iload_2
     164: if_icmplt     31
     167: aload_0
     168: invokevirtual #82                 // Method getParentNodeElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
     171: astore_1
     172: aconst_null
     173: aload_1
     174: if_acmpeq     295
     177: aload_1
     178: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
     181: astore_2
     182: aconst_null
     183: aload_0
     184: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
     187: if_acmpne     208
     190: aload_0
     191: invokevirtual #83                 // Method needToCheckExclude:()Z
     194: ifne          208
     197: aload_0
     198: aload_1
     199: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
     202: putfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
     205: goto          292
     208: aload_2
     209: invokevirtual #66                 // Method java/util/Vector.size:()I
     212: istore_3
     213: iconst_0
     214: istore        4
     216: goto          286
     219: aload_2
     220: iload         4
     222: invokevirtual #69                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
     225: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
     228: astore        5
     230: aload_0
     231: aload         5
     233: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
     236: aload         5
     238: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
     241: invokespecial #78                 // Method excludeResultNSDecl:(Ljava/lang/String;Ljava/lang/String;)Z
     244: istore        6
     246: iload         6
     248: aload         5
     250: invokevirtual #84                 // Method org/apache/xalan/templates/XMLNSDecl.getIsExcluded:()Z
     253: if_icmpeq     277
     256: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
     259: dup
     260: aload         5
     262: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
     265: aload         5
     267: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
     270: iload         6
     272: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
     275: astore        5
     277: aload_0
     278: aload         5
     280: invokevirtual #85                 // Method addOrReplaceDecls:(Lorg/apache/xalan/templates/XMLNSDecl;)V
     283: iinc          4, 1
     286: iload         4
     288: iload_3
     289: if_icmplt     219
     292: goto          314
     295: aconst_null
     296: aload_0
     297: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
     300: if_acmpne     314
     303: aload_0
     304: new           #56                 // class java/util/Vector
     307: dup
     308: invokespecial #57                 // Method java/util/Vector."<init>":()V
     311: putfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
     314: return

  void addOrReplaceDecls(org.apache.xalan.templates.XMLNSDecl);
    Code:
       0: aload_0
       1: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
       4: invokevirtual #66                 // Method java/util/Vector.size:()I
       7: istore_2
       8: iload_2
       9: iconst_1
      10: isub
      11: istore_3
      12: goto          47
      15: aload_0
      16: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      19: iload_3
      20: invokevirtual #69                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      23: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      26: astore        4
      28: aload         4
      30: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      37: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          44
      43: return
      44: iinc          3, -1
      47: iload_3
      48: ifge          15
      51: aload_0
      52: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      55: aload_1
      56: invokevirtual #63                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      59: return

  boolean needToCheckExclude();
    Code:
       0: iconst_0
       1: ireturn

  void executeNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #86                 // Method executeNSDecls:(Lorg/apache/xalan/transformer/TransformerImpl;Ljava/lang/String;)V
       6: return

  void executeNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException;
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
       5: if_acmpeq     96
       8: aload_1
       9: invokevirtual #87                 // Method org/apache/xalan/transformer/TransformerImpl.getResultTreeHandler:()Lorg/apache/xml/serializer/SerializationHandler;
      12: astore_3
      13: aload_0
      14: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      17: invokevirtual #66                 // Method java/util/Vector.size:()I
      20: istore        4
      22: iload         4
      24: iconst_1
      25: isub
      26: istore        5
      28: goto          91
      31: aload_0
      32: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      35: iload         5
      37: invokevirtual #69                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      40: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      43: astore        6
      45: aload         6
      47: invokevirtual #84                 // Method org/apache/xalan/templates/XMLNSDecl.getIsExcluded:()Z
      50: ifne          88
      53: aconst_null
      54: aload_2
      55: if_acmpeq     70
      58: aload         6
      60: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      63: aload_2
      64: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          88
      70: aload_3
      71: aload         6
      73: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      76: aload         6
      78: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
      81: iconst_1
      82: invokeinterface #88,  4           // InterfaceMethod org/apache/xml/serializer/SerializationHandler.startPrefixMapping:(Ljava/lang/String;Ljava/lang/String;Z)Z
      87: pop
      88: iinc          5, -1
      91: iload         5
      93: ifge          31
      96: goto          109
      99: astore_3
     100: new           #90                 // class javax/xml/transform/TransformerException
     103: dup
     104: aload_3
     105: invokespecial #91                 // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/Throwable;)V
     108: athrow
     109: return
    Exception table:
       from    to  target type
           0    96    99   Class org/xml/sax/SAXException

  void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #92                 // Method unexecuteNSDecls:(Lorg/apache/xalan/transformer/TransformerImpl;Ljava/lang/String;)V
       6: return

  void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException;
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
       5: if_acmpeq     88
       8: aload_1
       9: invokevirtual #87                 // Method org/apache/xalan/transformer/TransformerImpl.getResultTreeHandler:()Lorg/apache/xml/serializer/SerializationHandler;
      12: astore_3
      13: aload_0
      14: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      17: invokevirtual #66                 // Method java/util/Vector.size:()I
      20: istore        4
      22: iconst_0
      23: istore        5
      25: goto          81
      28: aload_0
      29: getfield      #75                 // Field m_prefixTable:Ljava/util/Vector;
      32: iload         5
      34: invokevirtual #69                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      37: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      40: astore        6
      42: aload         6
      44: invokevirtual #84                 // Method org/apache/xalan/templates/XMLNSDecl.getIsExcluded:()Z
      47: ifne          78
      50: aconst_null
      51: aload_2
      52: if_acmpeq     67
      55: aload         6
      57: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      60: aload_2
      61: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifne          78
      67: aload_3
      68: aload         6
      70: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      73: invokeinterface #93,  2           // InterfaceMethod org/xml/sax/ContentHandler.endPrefixMapping:(Ljava/lang/String;)V
      78: iinc          5, 1
      81: iload         5
      83: iload         4
      85: if_icmplt     28
      88: goto          101
      91: astore_3
      92: new           #90                 // class javax/xml/transform/TransformerException
      95: dup
      96: aload_3
      97: invokespecial #91                 // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/Throwable;)V
     100: athrow
     101: return
    Exception table:
       from    to  target type
           0    88    91   Class org/xml/sax/SAXException

  public void setUid(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field m_docOrderNumber:I
       5: return

  public int getUid();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_docOrderNumber:I
       4: ireturn

  public org.w3c.dom.Node getParentNode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.apache.xalan.templates.ElemTemplateElement getParentElem();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public void setParentElem(org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: return

  public org.w3c.dom.Node getNextSibling();
    Code:
       0: aload_0
       1: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.w3c.dom.Node getPreviousSibling();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method getParentNode:()Lorg/w3c/dom/Node;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: ifnull        41
      11: aload_1
      12: invokeinterface #95,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
      17: astore_1
      18: goto          37
      21: aload_1
      22: aload_0
      23: if_acmpne     28
      26: aload_2
      27: areturn
      28: aload_1
      29: astore_2
      30: aload_1
      31: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      36: astore_1
      37: aload_1
      38: ifnonnull     21
      41: aconst_null
      42: areturn

  public org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getParentNodeElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: ifnull        37
      11: aload_1
      12: invokevirtual #13                 // Method getFirstChildElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      15: astore_1
      16: goto          33
      19: aload_1
      20: aload_0
      21: if_acmpne     26
      24: aload_2
      25: areturn
      26: aload_1
      27: astore_2
      28: aload_1
      29: invokevirtual #15                 // Method getNextSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      32: astore_1
      33: aload_1
      34: ifnonnull     19
      37: aconst_null
      38: areturn

  public org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem();
    Code:
       0: aload_0
       1: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.apache.xalan.templates.ElemTemplateElement getParentNodeElem();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.w3c.dom.Node getFirstChild();
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.apache.xalan.templates.ElemTemplateElement getFirstChildElem();
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.w3c.dom.Node getLastChild();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       6: astore_2
       7: goto          17
      10: aload_2
      11: astore_1
      12: aload_2
      13: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      16: astore_2
      17: aload_2
      18: ifnonnull     10
      21: aload_1
      22: areturn

  public org.apache.xalan.templates.ElemTemplateElement getLastChildElem();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       6: astore_2
       7: goto          17
      10: aload_2
      11: astore_1
      12: aload_2
      13: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      16: astore_2
      17: aload_2
      18: ifnonnull     10
      21: aload_1
      22: areturn

  public org.w3c.dom.Node getDOMBackPointer();
    Code:
       0: aload_0
       1: getfield      #96                 // Field m_DOMBackPointer:Lorg/w3c/dom/Node;
       4: areturn

  public void setDOMBackPointer(org.w3c.dom.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #96                 // Field m_DOMBackPointer:Lorg/w3c/dom/Node;
       5: return

  public int compareTo(java.lang.Object) throws java.lang.ClassCastException;
    Code:
       0: aload_1
       1: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
       4: astore_2
       5: aload_2
       6: invokevirtual #9                  // Method getStylesheetComposed:()Lorg/apache/xalan/templates/StylesheetComposed;
       9: invokevirtual #97                 // Method org/apache/xalan/templates/StylesheetComposed.getImportCountComposed:()I
      12: istore_3
      13: aload_0
      14: invokevirtual #9                  // Method getStylesheetComposed:()Lorg/apache/xalan/templates/StylesheetComposed;
      17: invokevirtual #97                 // Method org/apache/xalan/templates/StylesheetComposed.getImportCountComposed:()I
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     30
      28: iconst_m1
      29: ireturn
      30: iload         4
      32: iload_3
      33: if_icmple     38
      36: iconst_1
      37: ireturn
      38: aload_0
      39: invokevirtual #98                 // Method getUid:()I
      42: aload_2
      43: invokevirtual #98                 // Method getUid:()I
      46: isub
      47: ireturn

  public boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext, org.w3c.dom.Element) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
       4: astore_3
       5: aconst_null
       6: aload_3
       7: if_acmpeq     19
      10: aload_3
      11: aload_1
      12: aload_2
      13: invokevirtual #99                 // Method shouldStripWhiteSpace:(Lorg/apache/xpath/XPathContext;Lorg/w3c/dom/Element;)Z
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean canStripWhiteSpace();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
       4: astore_1
       5: aconst_null
       6: aload_1
       7: if_acmpeq     17
      10: aload_1
      11: invokevirtual #100                // Method org/apache/xalan/templates/StylesheetRoot.canStripWhiteSpace:()Z
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean canAcceptVariables();
    Code:
       0: iconst_1
       1: ireturn

  public void exprSetParent(org.apache.xpath.ExpressionNode);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
       5: invokevirtual #31                 // Method setParentElem:(Lorg/apache/xalan/templates/ElemTemplateElement;)V
       8: return

  public org.apache.xpath.ExpressionNode exprGetParent();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public void exprAddChild(org.apache.xpath.ExpressionNode, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
       5: invokevirtual #101                // Method appendChild:(Lorg/apache/xalan/templates/ElemTemplateElement;)Lorg/apache/xalan/templates/ElemTemplateElement;
       8: pop
       9: return

  public org.apache.xpath.ExpressionNode exprGetChild(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #102                // Method item:(I)Lorg/w3c/dom/Node;
       5: checkcast     #103                // class org/apache/xpath/ExpressionNode
       8: areturn

  public int exprGetNumChildren();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method getLength:()I
       4: ireturn

  protected boolean accept(org.apache.xalan.templates.XSLTVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #105                // Method org/apache/xalan/templates/XSLTVisitor.visitInstruction:(Lorg/apache/xalan/templates/ElemTemplateElement;)Z
       5: ireturn

  public void callVisitors(org.apache.xalan.templates.XSLTVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #106                // Method accept:(Lorg/apache/xalan/templates/XSLTVisitor;)Z
       5: ifeq          13
       8: aload_0
       9: aload_1
      10: invokevirtual #107                // Method callChildVisitors:(Lorg/apache/xalan/templates/XSLTVisitor;)V
      13: return

  protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean);
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_3
       5: goto          18
       8: aload_3
       9: aload_1
      10: invokevirtual #108                // Method callVisitors:(Lorg/apache/xalan/templates/XSLTVisitor;)V
      13: aload_3
      14: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      17: astore_3
      18: aload_3
      19: ifnonnull     8
      22: return

  protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #109                // Method callChildVisitors:(Lorg/apache/xalan/templates/XSLTVisitor;Z)V
       6: return

  public boolean handlesNullPrefixes();
    Code:
       0: iconst_0
       1: ireturn
}
