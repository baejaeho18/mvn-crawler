Compiled from "StackGuard.java"
public class org.apache.xalan.transformer.StackGuard {
  private int m_recursionLimit;

  org.apache.xalan.transformer.TransformerImpl m_transformer;

  public int getRecursionLimit();
    Code:
       0: aload_0
       1: getfield      #1                  // Field m_recursionLimit:I
       4: ireturn

  public void setRecursionLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field m_recursionLimit:I
       5: return

  public org.apache.xalan.transformer.StackGuard(org.apache.xalan.transformer.TransformerImpl);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #1                  // Field m_recursionLimit:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field m_transformer:Lorg/apache/xalan/transformer/TransformerImpl;
      14: return

  public int countLikeTemplates(org.apache.xalan.templates.ElemTemplate, int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_transformer:Lorg/apache/xalan/transformer/TransformerImpl;
       4: invokevirtual #4                  // Method org/apache/xalan/transformer/TransformerImpl.getCurrentTemplateElements:()Lorg/apache/xml/utils/ObjectStack;
       7: astore_3
       8: iconst_1
       9: istore        4
      11: iload_2
      12: iconst_1
      13: isub
      14: istore        5
      16: goto          38
      19: aload_3
      20: iload         5
      22: invokevirtual #5                  // Method org/apache/xml/utils/ObjectVector.elementAt:(I)Ljava/lang/Object;
      25: checkcast     #6                  // class org/apache/xalan/templates/ElemTemplateElement
      28: aload_1
      29: if_acmpne     35
      32: iinc          4, 1
      35: iinc          5, -1
      38: iload         5
      40: ifge          19
      43: iload         4
      45: ireturn

  private org.apache.xalan.templates.ElemTemplate getNextMatchOrNamedTemplate(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_transformer:Lorg/apache/xalan/transformer/TransformerImpl;
       4: invokevirtual #4                  // Method org/apache/xalan/transformer/TransformerImpl.getCurrentTemplateElements:()Lorg/apache/xml/utils/ObjectStack;
       7: astore_2
       8: iload_1
       9: istore_3
      10: goto          48
      13: aload_2
      14: iload_3
      15: invokevirtual #5                  // Method org/apache/xml/utils/ObjectVector.elementAt:(I)Ljava/lang/Object;
      18: checkcast     #6                  // class org/apache/xalan/templates/ElemTemplateElement
      21: astore        4
      23: aconst_null
      24: aload         4
      26: if_acmpeq     45
      29: aload         4
      31: invokevirtual #7                  // Method org/apache/xalan/templates/ElemTemplateElement.getXSLToken:()I
      34: bipush        19
      36: if_icmpne     45
      39: aload         4
      41: checkcast     #8                  // class org/apache/xalan/templates/ElemTemplate
      44: areturn
      45: iinc          3, -1
      48: iload_3
      49: ifge          13
      52: aconst_null
      53: areturn

  public void checkForInfinateLoop() throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_transformer:Lorg/apache/xalan/transformer/TransformerImpl;
       4: invokevirtual #9                  // Method org/apache/xalan/transformer/TransformerImpl.getCurrentTemplateElementsCount:()I
       7: istore_1
       8: iload_1
       9: aload_0
      10: getfield      #1                  // Field m_recursionLimit:I
      13: if_icmpge     17
      16: return
      17: aload_0
      18: getfield      #1                  // Field m_recursionLimit:I
      21: ifgt          25
      24: return
      25: iload_1
      26: iconst_1
      27: isub
      28: istore_2
      29: goto          157
      32: aload_0
      33: iload_2
      34: invokespecial #10                 // Method getNextMatchOrNamedTemplate:(I)Lorg/apache/xalan/templates/ElemTemplate;
      37: astore_3
      38: aconst_null
      39: aload_3
      40: if_acmpne     46
      43: goto          165
      46: aload_0
      47: aload_3
      48: iload_2
      49: invokevirtual #11                 // Method countLikeTemplates:(Lorg/apache/xalan/templates/ElemTemplate;I)I
      52: istore        4
      54: iload         4
      56: aload_0
      57: getfield      #1                  // Field m_recursionLimit:I
      60: if_icmplt     154
      63: aconst_null
      64: aload_3
      65: invokevirtual #12                 // Method org/apache/xalan/templates/ElemTemplate.getName:()Lorg/apache/xml/utils/QName;
      68: if_acmpeq     76
      71: ldc           #13                 // String nameIs
      73: goto          78
      76: ldc           #14                 // String matchPatternIs
      78: aconst_null
      79: invokestatic  #15                 // Method org/apache/xalan/res/XSLMessages.createMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      82: astore        5
      84: iconst_3
      85: anewarray     #16                 // class java/lang/Object
      88: dup
      89: iconst_0
      90: new           #17                 // class java/lang/Integer
      93: dup
      94: iload         4
      96: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      99: aastore
     100: dup
     101: iconst_1
     102: aload         5
     104: aastore
     105: dup
     106: iconst_2
     107: aconst_null
     108: aload_3
     109: invokevirtual #12                 // Method org/apache/xalan/templates/ElemTemplate.getName:()Lorg/apache/xml/utils/QName;
     112: if_acmpeq     125
     115: aload_3
     116: invokevirtual #12                 // Method org/apache/xalan/templates/ElemTemplate.getName:()Lorg/apache/xml/utils/QName;
     119: invokevirtual #19                 // Method org/apache/xml/utils/QName.toString:()Ljava/lang/String;
     122: goto          132
     125: aload_3
     126: invokevirtual #20                 // Method org/apache/xalan/templates/ElemTemplate.getMatch:()Lorg/apache/xpath/XPath;
     129: invokevirtual #21                 // Method org/apache/xpath/XPath.getPatternString:()Ljava/lang/String;
     132: aastore
     133: astore        6
     135: ldc           #22                 // String recursionTooDeep
     137: aload         6
     139: invokestatic  #15                 // Method org/apache/xalan/res/XSLMessages.createMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     142: astore        7
     144: new           #23                 // class javax/xml/transform/TransformerException
     147: dup
     148: aload         7
     150: invokespecial #24                 // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/String;)V
     153: athrow
     154: iinc          2, -1
     157: iload_2
     158: aload_0
     159: getfield      #1                  // Field m_recursionLimit:I
     162: if_icmpge     32
     165: return
}
