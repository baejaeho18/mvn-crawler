Compiled from "NamespaceAlias.java"
final class org.apache.xalan.xsltc.compiler.NamespaceAlias extends org.apache.xalan.xsltc.compiler.TopLevelElement {
  private java.lang.String sPrefix;

  private java.lang.String rPrefix;

  org.apache.xalan.xsltc.compiler.NamespaceAlias();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xalan/xsltc/compiler/TopLevelElement."<init>":()V
       4: return

  public void parseContents(org.apache.xalan.xsltc.compiler.Parser);
    Code:
       0: aload_0
       1: aload_0
       2: ldc           #2                  // String stylesheet-prefix
       4: invokevirtual #3                  // Method org/apache/xalan/xsltc/compiler/SyntaxTreeNode.getAttribute:(Ljava/lang/String;)Ljava/lang/String;
       7: putfield      #4                  // Field sPrefix:Ljava/lang/String;
      10: aload_0
      11: aload_0
      12: ldc           #5                  // String result-prefix
      14: invokevirtual #3                  // Method org/apache/xalan/xsltc/compiler/SyntaxTreeNode.getAttribute:(Ljava/lang/String;)Ljava/lang/String;
      17: putfield      #6                  // Field rPrefix:Ljava/lang/String;
      20: aload_1
      21: invokevirtual #7                  // Method org/apache/xalan/xsltc/compiler/Parser.getSymbolTable:()Lorg/apache/xalan/xsltc/compiler/SymbolTable;
      24: aload_0
      25: getfield      #4                  // Field sPrefix:Ljava/lang/String;
      28: aload_0
      29: getfield      #6                  // Field rPrefix:Ljava/lang/String;
      32: invokevirtual #8                  // Method org/apache/xalan/xsltc/compiler/SymbolTable.addPrefixAlias:(Ljava/lang/String;Ljava/lang/String;)V
      35: return

  public org.apache.xalan.xsltc.compiler.util.Type typeCheck(org.apache.xalan.xsltc.compiler.SymbolTable) throws org.apache.xalan.xsltc.compiler.util.TypeCheckError;
    Code:
       0: getstatic     #9                  // Field org/apache/xalan/xsltc/compiler/util/Type.Void:Lorg/apache/xalan/xsltc/compiler/util/Type;
       3: areturn

  public void translate(org.apache.xalan.xsltc.compiler.util.ClassGenerator, org.apache.xalan.xsltc.compiler.util.MethodGenerator);
    Code:
       0: return
}
