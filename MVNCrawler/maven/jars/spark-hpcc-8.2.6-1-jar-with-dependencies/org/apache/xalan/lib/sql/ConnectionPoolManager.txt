Compiled from "ConnectionPoolManager.java"
public class org.apache.xalan.lib.sql.ConnectionPoolManager {
  private static java.util.Hashtable m_poolTable;

  public org.apache.xalan.lib.sql.ConnectionPoolManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokespecial #2                  // Method init:()V
       8: return

  private synchronized void init();
    Code:
       0: getstatic     #3                  // Field m_poolTable:Ljava/util/Hashtable;
       3: ifnonnull     16
       6: new           #4                  // class java/util/Hashtable
       9: dup
      10: invokespecial #5                  // Method java/util/Hashtable."<init>":()V
      13: putstatic     #3                  // Field m_poolTable:Ljava/util/Hashtable;
      16: return

  public synchronized void registerPool(java.lang.String, org.apache.xalan.lib.sql.ConnectionPool);
    Code:
       0: getstatic     #3                  // Field m_poolTable:Ljava/util/Hashtable;
       3: aload_1
       4: invokevirtual #6                  // Method java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
       7: ifeq          24
      10: new           #7                  // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #8                  // String ER_POOL_EXISTS
      16: aconst_null
      17: invokestatic  #9                  // Method org/apache/xalan/res/XSLMessages.createMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      20: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: getstatic     #3                  // Field m_poolTable:Ljava/util/Hashtable;
      27: aload_1
      28: aload_2
      29: invokevirtual #11                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: return

  public synchronized void removePool(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method getPool:(Ljava/lang/String;)Lorg/apache/xalan/lib/sql/ConnectionPool;
       5: astore_2
       6: aconst_null
       7: aload_2
       8: if_acmpeq     35
      11: aload_2
      12: iconst_0
      13: invokeinterface #13,  2           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.setPoolEnabled:(Z)V
      18: aload_2
      19: invokeinterface #14,  1           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.hasActiveConnections:()Z
      24: ifne          35
      27: getstatic     #3                  // Field m_poolTable:Ljava/util/Hashtable;
      30: aload_1
      31: invokevirtual #15                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: return

  public synchronized org.apache.xalan.lib.sql.ConnectionPool getPool(java.lang.String);
    Code:
       0: getstatic     #3                  // Field m_poolTable:Ljava/util/Hashtable;
       3: aload_1
       4: invokevirtual #16                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/xalan/lib/sql/ConnectionPool
      10: areturn

  static {};
    Code:
       0: aconst_null
       1: putstatic     #3                  // Field m_poolTable:Ljava/util/Hashtable;
       4: return
}
