Compiled from "TypeSafeMatcher.java"
public abstract class org.junit.internal.matchers.TypeSafeMatcher<T> extends org.hamcrest.BaseMatcher<T> {
  private java.lang.Class<?> expectedType;

  public abstract boolean matchesSafely(T);

  protected org.junit.internal.matchers.TypeSafeMatcher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hamcrest/BaseMatcher."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method findExpectedType:(Ljava/lang/Class;)Ljava/lang/Class;
      12: putfield      #4                  // Field expectedType:Ljava/lang/Class;
      15: return

  private static java.lang.Class<?> findExpectedType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: ldc_w         #5                  // class java/lang/Object
       6: if_acmpeq     62
       9: aload_1
      10: invokestatic  #6                  // Method org/junit/internal/MethodSorter.getDeclaredMethods:(Ljava/lang/Class;)[Ljava/lang/reflect/Method;
      13: astore_2
      14: aload_2
      15: arraylength
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     54
      26: aload_2
      27: iload         4
      29: aaload
      30: astore        5
      32: aload         5
      34: invokestatic  #7                  // Method isMatchesSafelyMethod:(Ljava/lang/reflect/Method;)Z
      37: ifeq          48
      40: aload         5
      42: invokevirtual #8                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      45: iconst_0
      46: aaload
      47: areturn
      48: iinc          4, 1
      51: goto          20
      54: aload_1
      55: invokevirtual #9                  // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      58: astore_1
      59: goto          2
      62: new           #10                 // class java/lang/Error
      65: dup
      66: ldc           #11                 // String Cannot determine correct type for matchesSafely() method.
      68: invokespecial #12                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      71: athrow

  private static boolean isMatchesSafelyMethod(java.lang.reflect.Method);
    Code:
       0: ldc           #13                 // String matchesSafely
       2: aload_0
       3: invokevirtual #14                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       6: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          32
      12: aload_0
      13: invokevirtual #8                  // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      16: arraylength
      17: iconst_1
      18: if_icmpne     32
      21: aload_0
      22: invokevirtual #16                 // Method java/lang/reflect/Method.isSynthetic:()Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  protected org.junit.internal.matchers.TypeSafeMatcher(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hamcrest/BaseMatcher."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field expectedType:Ljava/lang/Class;
       9: return

  public final boolean matches(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_0
       5: getfield      #4                  // Field expectedType:Ljava/lang/Class;
       8: aload_1
       9: invokevirtual #17                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      12: ifeq          27
      15: aload_0
      16: aload_1
      17: invokevirtual #18                 // Method matchesSafely:(Ljava/lang/Object;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
}
