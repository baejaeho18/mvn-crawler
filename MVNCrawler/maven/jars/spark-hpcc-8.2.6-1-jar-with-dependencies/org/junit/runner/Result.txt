Compiled from "Result.java"
public class org.junit.runner.Result implements java.io.Serializable {
  private static final long serialVersionUID;

  private static final java.io.ObjectStreamField[] serialPersistentFields;

  private final java.util.concurrent.atomic.AtomicInteger count;

  private final java.util.concurrent.atomic.AtomicInteger ignoreCount;

  private final java.util.concurrent.atomic.AtomicInteger assumptionFailureCount;

  private final java.util.concurrent.CopyOnWriteArrayList<org.junit.runner.notification.Failure> failures;

  private final java.util.concurrent.atomic.AtomicLong runTime;

  private final java.util.concurrent.atomic.AtomicLong startTime;

  private org.junit.runner.Result$SerializedForm serializedForm;

  public org.junit.runner.Result();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #2                  // Field ignoreCount:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      30: dup
      31: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      34: putfield      #1                  // Field assumptionFailureCount:Ljava/util/concurrent/atomic/AtomicInteger;
      37: aload_0
      38: new           #10                 // class java/util/concurrent/CopyOnWriteArrayList
      41: dup
      42: invokespecial #11                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      45: putfield      #3                  // Field failures:Ljava/util/concurrent/CopyOnWriteArrayList;
      48: aload_0
      49: new           #12                 // class java/util/concurrent/atomic/AtomicLong
      52: dup
      53: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      56: putfield      #5                  // Field runTime:Ljava/util/concurrent/atomic/AtomicLong;
      59: aload_0
      60: new           #12                 // class java/util/concurrent/atomic/AtomicLong
      63: dup
      64: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      67: putfield      #6                  // Field startTime:Ljava/util/concurrent/atomic/AtomicLong;
      70: return

  private org.junit.runner.Result(org.junit.runner.Result$SerializedForm);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #14                 // Method org/junit/runner/Result$SerializedForm.access$000:(Lorg/junit/runner/Result$SerializedForm;)Ljava/util/concurrent/atomic/AtomicInteger;
       9: putfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      12: aload_0
      13: aload_1
      14: invokestatic  #15                 // Method org/junit/runner/Result$SerializedForm.access$100:(Lorg/junit/runner/Result$SerializedForm;)Ljava/util/concurrent/atomic/AtomicInteger;
      17: putfield      #2                  // Field ignoreCount:Ljava/util/concurrent/atomic/AtomicInteger;
      20: aload_0
      21: aload_1
      22: invokestatic  #16                 // Method org/junit/runner/Result$SerializedForm.access$200:(Lorg/junit/runner/Result$SerializedForm;)Ljava/util/concurrent/atomic/AtomicInteger;
      25: putfield      #1                  // Field assumptionFailureCount:Ljava/util/concurrent/atomic/AtomicInteger;
      28: aload_0
      29: new           #10                 // class java/util/concurrent/CopyOnWriteArrayList
      32: dup
      33: aload_1
      34: invokestatic  #17                 // Method org/junit/runner/Result$SerializedForm.access$300:(Lorg/junit/runner/Result$SerializedForm;)Ljava/util/List;
      37: invokespecial #18                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":(Ljava/util/Collection;)V
      40: putfield      #3                  // Field failures:Ljava/util/concurrent/CopyOnWriteArrayList;
      43: aload_0
      44: new           #12                 // class java/util/concurrent/atomic/AtomicLong
      47: dup
      48: aload_1
      49: invokestatic  #19                 // Method org/junit/runner/Result$SerializedForm.access$400:(Lorg/junit/runner/Result$SerializedForm;)J
      52: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      55: putfield      #5                  // Field runTime:Ljava/util/concurrent/atomic/AtomicLong;
      58: aload_0
      59: new           #12                 // class java/util/concurrent/atomic/AtomicLong
      62: dup
      63: aload_1
      64: invokestatic  #21                 // Method org/junit/runner/Result$SerializedForm.access$500:(Lorg/junit/runner/Result$SerializedForm;)J
      67: invokespecial #20                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      70: putfield      #6                  // Field startTime:Ljava/util/concurrent/atomic/AtomicLong;
      73: return

  public int getRunCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getFailureCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field failures:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: invokevirtual #23                 // Method java/util/concurrent/CopyOnWriteArrayList.size:()I
       7: ireturn

  public long getRunTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field runTime:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public java.util.List<org.junit.runner.notification.Failure> getFailures();
    Code:
       0: aload_0
       1: getfield      #3                  // Field failures:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  public int getIgnoreCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ignoreCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getAssumptionFailureCount();
    Code:
       0: aload_0
       1: getfield      #1                  // Field assumptionFailureCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: ifnonnull     17
       7: new           #25                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #26                 // String Result was serialized from a version of JUnit that doesn\'t support this method
      13: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #1                  // Field assumptionFailureCount:Ljava/util/concurrent/atomic/AtomicInteger;
      21: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      24: ireturn

  public boolean wasSuccessful();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getFailureCount:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: new           #29                 // class org/junit/runner/Result$SerializedForm
       3: dup
       4: aload_0
       5: invokespecial #30                 // Method org/junit/runner/Result$SerializedForm."<init>":(Lorg/junit/runner/Result;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #31                 // Method org/junit/runner/Result$SerializedForm.serialize:(Ljava/io/ObjectOutputStream;)V
      14: return

  private void readObject(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #32                 // Method org/junit/runner/Result$SerializedForm.deserialize:(Ljava/io/ObjectInputStream;)Lorg/junit/runner/Result$SerializedForm;
       5: putfield      #33                 // Field serializedForm:Lorg/junit/runner/Result$SerializedForm;
       8: return

  private java.lang.Object readResolve();
    Code:
       0: new           #34                 // class org/junit/runner/Result
       3: dup
       4: aload_0
       5: getfield      #33                 // Field serializedForm:Lorg/junit/runner/Result$SerializedForm;
       8: invokespecial #35                 // Method "<init>":(Lorg/junit/runner/Result$SerializedForm;)V
      11: areturn

  public org.junit.runner.notification.RunListener createListener();
    Code:
       0: new           #36                 // class org/junit/runner/Result$Listener
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #37                 // Method org/junit/runner/Result$Listener."<init>":(Lorg/junit/runner/Result;Lorg/junit/runner/Result$1;)V
       9: areturn

  static java.util.concurrent.atomic.AtomicLong access$600(org.junit.runner.Result);
    Code:
       0: aload_0
       1: getfield      #6                  // Field startTime:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$700(org.junit.runner.Result);
    Code:
       0: aload_0
       1: getfield      #5                  // Field runTime:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$800(org.junit.runner.Result);
    Code:
       0: aload_0
       1: getfield      #4                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static java.util.concurrent.CopyOnWriteArrayList access$900(org.junit.runner.Result);
    Code:
       0: aload_0
       1: getfield      #3                  // Field failures:Ljava/util/concurrent/CopyOnWriteArrayList;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$1000(org.junit.runner.Result);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ignoreCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$1100(org.junit.runner.Result);
    Code:
       0: aload_0
       1: getfield      #1                  // Field assumptionFailureCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static {};
    Code:
       0: ldc_w         #29                 // class org/junit/runner/Result$SerializedForm
       3: invokestatic  #38                 // Method java/io/ObjectStreamClass.lookup:(Ljava/lang/Class;)Ljava/io/ObjectStreamClass;
       6: invokevirtual #39                 // Method java/io/ObjectStreamClass.getFields:()[Ljava/io/ObjectStreamField;
       9: putstatic     #40                 // Field serialPersistentFields:[Ljava/io/ObjectStreamField;
      12: return
}
