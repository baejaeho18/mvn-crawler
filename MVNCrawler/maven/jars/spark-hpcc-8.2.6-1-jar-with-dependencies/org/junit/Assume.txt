Compiled from "Assume.java"
public class org.junit.Assume {
  public org.junit.Assume();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void assumeTrue(boolean);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: iconst_1
       5: invokestatic  #2                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokestatic  #3                  // Method org/hamcrest/CoreMatchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      11: invokestatic  #4                  // Method assumeThat:(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      14: return

  public static void assumeFalse(boolean);
    Code:
       0: iload_0
       1: invokestatic  #2                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: iconst_0
       5: invokestatic  #2                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: invokestatic  #3                  // Method org/hamcrest/CoreMatchers.is:(Ljava/lang/Object;)Lorg/hamcrest/Matcher;
      11: invokestatic  #4                  // Method assumeThat:(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      14: return

  public static void assumeTrue(java.lang.String, boolean);
    Code:
       0: iload_1
       1: ifne          13
       4: new           #5                  // class org/junit/AssumptionViolatedException
       7: dup
       8: aload_0
       9: invokespecial #6                  // Method org/junit/AssumptionViolatedException."<init>":(Ljava/lang/String;)V
      12: athrow
      13: return

  public static void assumeFalse(java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifne          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokestatic  #7                  // Method assumeTrue:(Ljava/lang/String;Z)V
      13: return

  public static void assumeNotNull(java.lang.Object...);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method org/hamcrest/CoreMatchers.notNullValue:()Lorg/hamcrest/Matcher;
       4: invokestatic  #4                  // Method assumeThat:(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
       7: aload_0
       8: invokestatic  #9                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      11: invokestatic  #8                  // Method org/hamcrest/CoreMatchers.notNullValue:()Lorg/hamcrest/Matcher;
      14: invokestatic  #10                 // Method org/hamcrest/CoreMatchers.everyItem:(Lorg/hamcrest/Matcher;)Lorg/hamcrest/Matcher;
      17: invokestatic  #4                  // Method assumeThat:(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      20: return

  public static <T> void assumeThat(T, org.hamcrest.Matcher<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #11,  2           // InterfaceMethod org/hamcrest/Matcher.matches:(Ljava/lang/Object;)Z
       7: ifne          20
      10: new           #5                  // class org/junit/AssumptionViolatedException
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #12                 // Method org/junit/AssumptionViolatedException."<init>":(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      19: athrow
      20: return

  public static <T> void assumeThat(java.lang.String, T, org.hamcrest.Matcher<T>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod org/hamcrest/Matcher.matches:(Ljava/lang/Object;)Z
       7: ifne          21
      10: new           #5                  // class org/junit/AssumptionViolatedException
      13: dup
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokespecial #13                 // Method org/junit/AssumptionViolatedException."<init>":(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
      20: athrow
      21: return

  public static void assumeNoException(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #14                 // Method org/hamcrest/CoreMatchers.nullValue:()Lorg/hamcrest/Matcher;
       4: invokestatic  #4                  // Method assumeThat:(Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
       7: return

  public static void assumeNoException(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #14                 // Method org/hamcrest/CoreMatchers.nullValue:()Lorg/hamcrest/Matcher;
       5: invokestatic  #15                 // Method assumeThat:(Ljava/lang/String;Ljava/lang/Object;Lorg/hamcrest/Matcher;)V
       8: return
}
