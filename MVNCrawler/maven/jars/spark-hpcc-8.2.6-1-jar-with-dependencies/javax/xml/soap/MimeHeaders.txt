Compiled from "MimeHeaders.java"
public class javax.xml.soap.MimeHeaders {
  private java.util.Vector headers;

  public javax.xml.soap.MimeHeaders();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/Vector
       8: dup
       9: invokespecial #4                  // Method java/util/Vector."<init>":()V
      12: putfield      #1                  // Field headers:Ljava/util/Vector;
      15: return

  public java.lang.String[] getHeader(java.lang.String);
    Code:
       0: new           #3                  // class java/util/Vector
       3: dup
       4: invokespecial #4                  // Method java/util/Vector."<init>":()V
       7: astore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: aload_0
      12: getfield      #1                  // Field headers:Ljava/util/Vector;
      15: invokevirtual #5                  // Method java/util/Vector.size:()I
      18: if_icmpge     69
      21: aload_0
      22: getfield      #1                  // Field headers:Ljava/util/Vector;
      25: iload_3
      26: invokevirtual #6                  // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      29: checkcast     #7                  // class javax/xml/soap/MimeHeader
      32: astore        4
      34: aload         4
      36: invokevirtual #8                  // Method javax/xml/soap/MimeHeader.getName:()Ljava/lang/String;
      39: aload_1
      40: invokevirtual #9                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      43: ifeq          63
      46: aload         4
      48: invokevirtual #10                 // Method javax/xml/soap/MimeHeader.getValue:()Ljava/lang/String;
      51: ifnull        63
      54: aload_2
      55: aload         4
      57: invokevirtual #10                 // Method javax/xml/soap/MimeHeader.getValue:()Ljava/lang/String;
      60: invokevirtual #11                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      63: iinc          3, 1
      66: goto          10
      69: aload_2
      70: invokevirtual #5                  // Method java/util/Vector.size:()I
      73: ifne          78
      76: aconst_null
      77: areturn
      78: aload_2
      79: invokevirtual #5                  // Method java/util/Vector.size:()I
      82: anewarray     #12                 // class java/lang/String
      85: astore_3
      86: aload_2
      87: aload_3
      88: invokevirtual #13                 // Method java/util/Vector.copyInto:([Ljava/lang/Object;)V
      91: aload_3
      92: areturn

  public void setHeader(java.lang.String, java.lang.String);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: ifnull        15
       6: ldc           #14                 // String
       8: aload_1
       9: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifeq          25
      15: new           #16                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #17                 // String Illegal MimeHeader name
      21: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: getfield      #1                  // Field headers:Ljava/util/Vector;
      34: invokevirtual #5                  // Method java/util/Vector.size:()I
      37: if_icmpge     117
      40: aload_0
      41: getfield      #1                  // Field headers:Ljava/util/Vector;
      44: iload         4
      46: invokevirtual #6                  // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      49: checkcast     #7                  // class javax/xml/soap/MimeHeader
      52: astore        5
      54: aload         5
      56: invokevirtual #8                  // Method javax/xml/soap/MimeHeader.getName:()Ljava/lang/String;
      59: aload_1
      60: invokevirtual #9                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      63: ifeq          111
      66: iload_3
      67: ifne          97
      70: aload_0
      71: getfield      #1                  // Field headers:Ljava/util/Vector;
      74: new           #7                  // class javax/xml/soap/MimeHeader
      77: dup
      78: aload         5
      80: invokevirtual #8                  // Method javax/xml/soap/MimeHeader.getName:()Ljava/lang/String;
      83: aload_2
      84: invokespecial #19                 // Method javax/xml/soap/MimeHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      87: iload         4
      89: invokevirtual #20                 // Method java/util/Vector.setElementAt:(Ljava/lang/Object;I)V
      92: iconst_1
      93: istore_3
      94: goto          111
      97: aload_0
      98: getfield      #1                  // Field headers:Ljava/util/Vector;
     101: iload         4
     103: dup
     104: iconst_1
     105: isub
     106: istore        4
     108: invokevirtual #21                 // Method java/util/Vector.removeElementAt:(I)V
     111: iinc          4, 1
     114: goto          28
     117: iload_3
     118: ifne          127
     121: aload_0
     122: aload_1
     123: aload_2
     124: invokevirtual #22                 // Method addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     127: return

  public void addHeader(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        13
       4: ldc           #14                 // String
       6: aload_1
       7: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          23
      13: new           #16                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #17                 // String Illegal MimeHeader name
      19: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #1                  // Field headers:Ljava/util/Vector;
      27: invokevirtual #5                  // Method java/util/Vector.size:()I
      30: istore_3
      31: iload_3
      32: iconst_1
      33: isub
      34: istore        4
      36: iload         4
      38: iflt          94
      41: aload_0
      42: getfield      #1                  // Field headers:Ljava/util/Vector;
      45: iload         4
      47: invokevirtual #6                  // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      50: checkcast     #7                  // class javax/xml/soap/MimeHeader
      53: astore        5
      55: aload         5
      57: invokevirtual #8                  // Method javax/xml/soap/MimeHeader.getName:()Ljava/lang/String;
      60: aload_1
      61: invokevirtual #9                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      64: ifeq          88
      67: aload_0
      68: getfield      #1                  // Field headers:Ljava/util/Vector;
      71: new           #7                  // class javax/xml/soap/MimeHeader
      74: dup
      75: aload_1
      76: aload_2
      77: invokespecial #19                 // Method javax/xml/soap/MimeHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      80: iload         4
      82: iconst_1
      83: iadd
      84: invokevirtual #23                 // Method java/util/Vector.insertElementAt:(Ljava/lang/Object;I)V
      87: return
      88: iinc          4, -1
      91: goto          36
      94: aload_0
      95: getfield      #1                  // Field headers:Ljava/util/Vector;
      98: new           #7                  // class javax/xml/soap/MimeHeader
     101: dup
     102: aload_1
     103: aload_2
     104: invokespecial #19                 // Method javax/xml/soap/MimeHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     107: invokevirtual #11                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     110: return

  public void removeHeader(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #1                  // Field headers:Ljava/util/Vector;
       7: invokevirtual #5                  // Method java/util/Vector.size:()I
      10: if_icmpge     54
      13: aload_0
      14: getfield      #1                  // Field headers:Ljava/util/Vector;
      17: iload_2
      18: invokevirtual #6                  // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      21: checkcast     #7                  // class javax/xml/soap/MimeHeader
      24: astore_3
      25: aload_3
      26: invokevirtual #8                  // Method javax/xml/soap/MimeHeader.getName:()Ljava/lang/String;
      29: aload_1
      30: invokevirtual #9                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      33: ifeq          48
      36: aload_0
      37: getfield      #1                  // Field headers:Ljava/util/Vector;
      40: iload_2
      41: dup
      42: iconst_1
      43: isub
      44: istore_2
      45: invokevirtual #21                 // Method java/util/Vector.removeElementAt:(I)V
      48: iinc          2, 1
      51: goto          2
      54: return

  public void removeAllHeaders();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Ljava/util/Vector;
       4: invokevirtual #24                 // Method java/util/Vector.removeAllElements:()V
       7: return

  public java.util.Iterator getAllHeaders();
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Ljava/util/Vector;
       4: invokevirtual #25                 // Method java/util/Vector.iterator:()Ljava/util/Iterator;
       7: areturn

  public java.util.Iterator getMatchingHeaders(java.lang.String[]);
    Code:
       0: new           #26                 // class javax/xml/soap/MimeHeaders$MatchingIterator
       3: dup
       4: aload_0
       5: aload_1
       6: iconst_1
       7: invokespecial #27                 // Method javax/xml/soap/MimeHeaders$MatchingIterator."<init>":(Ljavax/xml/soap/MimeHeaders;[Ljava/lang/String;Z)V
      10: areturn

  public java.util.Iterator getNonMatchingHeaders(java.lang.String[]);
    Code:
       0: new           #26                 // class javax/xml/soap/MimeHeaders$MatchingIterator
       3: dup
       4: aload_0
       5: aload_1
       6: iconst_0
       7: invokespecial #27                 // Method javax/xml/soap/MimeHeaders$MatchingIterator."<init>":(Ljavax/xml/soap/MimeHeaders;[Ljava/lang/String;Z)V
      10: areturn

  static java.util.Vector access$000(javax.xml.soap.MimeHeaders);
    Code:
       0: aload_0
       1: getfield      #1                  // Field headers:Ljava/util/Vector;
       4: areturn
}
