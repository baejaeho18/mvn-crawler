Compiled from "StringTrieBuilder.java"
class com.ibm.icu.util.StringTrieBuilder$ValueNode extends com.ibm.icu.util.StringTrieBuilder$Node {
  protected boolean hasValue;

  protected int value;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.util.StringTrieBuilder$ValueNode();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/ibm/icu/util/StringTrieBuilder$Node."<init>":()V
       4: return

  public com.ibm.icu.util.StringTrieBuilder$ValueNode(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/ibm/icu/util/StringTrieBuilder$Node."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field hasValue:Z
       9: aload_0
      10: iload_1
      11: putfield      #4                  // Field value:I
      14: return

  public final void setValue(int);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #3                  // Field hasValue:Z
      10: ifeq          21
      13: new           #6                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iconst_1
      23: putfield      #3                  // Field hasValue:Z
      26: aload_0
      27: iload_1
      28: putfield      #4                  // Field value:I
      31: return

  private void setFinalValue(int);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field hasValue:Z
       5: aload_0
       6: iload_1
       7: putfield      #4                  // Field value:I
      10: return

  public int hashCode();
    Code:
       0: ldc           #8                  // int 1118481
       2: istore_1
       3: aload_0
       4: getfield      #3                  // Field hasValue:Z
       7: ifeq          20
      10: iload_1
      11: bipush        37
      13: imul
      14: aload_0
      15: getfield      #4                  // Field value:I
      18: iadd
      19: istore_1
      20: iload_1
      21: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #9                  // Method com/ibm/icu/util/StringTrieBuilder$Node.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: checkcast     #10                 // class com/ibm/icu/util/StringTrieBuilder$ValueNode
      21: astore_2
      22: aload_0
      23: getfield      #3                  // Field hasValue:Z
      26: aload_2
      27: getfield      #3                  // Field hasValue:Z
      30: if_icmpne     55
      33: aload_0
      34: getfield      #3                  // Field hasValue:Z
      37: ifeq          51
      40: aload_0
      41: getfield      #4                  // Field value:I
      44: aload_2
      45: getfield      #4                  // Field value:I
      48: if_icmpne     55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn

  public com.ibm.icu.util.StringTrieBuilder$Node add(com.ibm.icu.util.StringTrieBuilder, java.lang.CharSequence, int, int);
    Code:
       0: iload_3
       1: aload_2
       2: invokeinterface #11,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       7: if_icmpne     20
      10: new           #12                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #13                 // String Duplicate string.
      16: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_1
      21: aload_2
      22: iload_3
      23: iload         4
      25: invokestatic  #15                 // Method com/ibm/icu/util/StringTrieBuilder.access$100:(Lcom/ibm/icu/util/StringTrieBuilder;Ljava/lang/CharSequence;II)Lcom/ibm/icu/util/StringTrieBuilder$ValueNode;
      28: astore        5
      30: aload         5
      32: aload_0
      33: getfield      #4                  // Field value:I
      36: invokevirtual #16                 // Method setValue:(I)V
      39: aload         5
      41: areturn

  public void write(com.ibm.icu.util.StringTrieBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field value:I
       6: iconst_1
       7: invokevirtual #17                 // Method com/ibm/icu/util/StringTrieBuilder.writeValueAndFinal:(IZ)I
      10: putfield      #18                 // Field offset:I
      13: return

  static void access$000(com.ibm.icu.util.StringTrieBuilder$ValueNode, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method setFinalValue:(I)V
       5: return

  static {};
    Code:
       0: ldc           #19                 // class com/ibm/icu/util/StringTrieBuilder
       2: invokevirtual #20                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #5                  // Field $assertionsDisabled:Z
      16: return
}
