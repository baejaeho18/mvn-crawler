Compiled from "HebrewCalendar.java"
public class com.ibm.icu.util.HebrewCalendar extends com.ibm.icu.util.Calendar {
  private static final long serialVersionUID;

  public static final int TISHRI;

  public static final int HESHVAN;

  public static final int KISLEV;

  public static final int TEVET;

  public static final int SHEVAT;

  public static final int ADAR_1;

  public static final int ADAR;

  public static final int NISAN;

  public static final int IYAR;

  public static final int SIVAN;

  public static final int TAMUZ;

  public static final int AV;

  public static final int ELUL;

  private static final int[][] LIMITS;

  private static final int[][] MONTH_LENGTH;

  private static final int[][] MONTH_START;

  private static final int[][] LEAP_MONTH_START;

  private static com.ibm.icu.impl.CalendarCache cache;

  private static final long HOUR_PARTS;

  private static final long DAY_PARTS;

  private static final int MONTH_DAYS;

  private static final long MONTH_FRACT;

  private static final long MONTH_PARTS;

  private static final long BAHARAD;

  public com.ibm.icu.util.HebrewCalendar();
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #3                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #4                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #5                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: return

  public com.ibm.icu.util.HebrewCalendar(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #3                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       5: invokestatic  #4                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
       8: invokespecial #5                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      11: return

  public com.ibm.icu.util.HebrewCalendar(java.util.Locale);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: aload_1
       5: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Ljava/util/Locale;)V
       8: return

  public com.ibm.icu.util.HebrewCalendar(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: aload_1
       5: invokespecial #5                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
       8: return

  public com.ibm.icu.util.HebrewCalendar(com.ibm.icu.util.TimeZone, java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Ljava/util/Locale;)V
       6: aload_0
       7: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      10: invokevirtual #9                  // Method setTimeInMillis:(J)V
      13: return

  public com.ibm.icu.util.HebrewCalendar(com.ibm.icu.util.TimeZone, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
       6: aload_0
       7: invokestatic  #8                  // Method java/lang/System.currentTimeMillis:()J
      10: invokevirtual #9                  // Method setTimeInMillis:(J)V
      13: return

  public com.ibm.icu.util.HebrewCalendar(int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #3                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #4                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #10                 // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: aload_0
      14: iconst_1
      15: iload_1
      16: invokevirtual #12                 // Method set:(II)V
      19: aload_0
      20: iconst_2
      21: iload_2
      22: invokevirtual #12                 // Method set:(II)V
      25: aload_0
      26: iconst_5
      27: iload_3
      28: invokevirtual #12                 // Method set:(II)V
      31: return

  public com.ibm.icu.util.HebrewCalendar(java.util.Date);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #3                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #4                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #10                 // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: aload_0
      14: aload_1
      15: invokevirtual #13                 // Method setTime:(Ljava/util/Date;)V
      18: return

  public com.ibm.icu.util.HebrewCalendar(int, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #3                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #4                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #10                 // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: aload_0
      14: iconst_1
      15: iload_1
      16: invokevirtual #12                 // Method set:(II)V
      19: aload_0
      20: iconst_2
      21: iload_2
      22: invokevirtual #12                 // Method set:(II)V
      25: aload_0
      26: iconst_5
      27: iload_3
      28: invokevirtual #12                 // Method set:(II)V
      31: aload_0
      32: bipush        11
      34: iload         4
      36: invokevirtual #12                 // Method set:(II)V
      39: aload_0
      40: bipush        12
      42: iload         5
      44: invokevirtual #12                 // Method set:(II)V
      47: aload_0
      48: bipush        13
      50: iload         6
      52: invokevirtual #12                 // Method set:(II)V
      55: return

  public void add(int, int);
    Code:
       0: iload_1
       1: lookupswitch  { // 1
                     2: 20
               default: 172
          }
      20: aload_0
      21: iconst_2
      22: invokevirtual #14                 // Method get:(I)I
      25: istore_3
      26: aload_0
      27: iconst_1
      28: invokevirtual #14                 // Method get:(I)I
      31: istore        4
      33: iload_2
      34: ifle          95
      37: iload_3
      38: iconst_5
      39: if_icmpge     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore        5
      49: iload_3
      50: iload_2
      51: iadd
      52: istore_3
      53: iload         5
      55: ifeq          74
      58: iload_3
      59: iconst_5
      60: if_icmplt     74
      63: iload         4
      65: invokestatic  #15                 // Method isLeapYear:(I)Z
      68: ifne          74
      71: iinc          3, 1
      74: iload_3
      75: bipush        12
      77: if_icmpgt     83
      80: goto          151
      83: iinc          3, -13
      86: iinc          4, 1
      89: iconst_1
      90: istore        5
      92: goto          53
      95: iload_3
      96: iconst_5
      97: if_icmple     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: istore        5
     107: iload_3
     108: iload_2
     109: iadd
     110: istore_3
     111: iload         5
     113: ifeq          132
     116: iload_3
     117: iconst_5
     118: if_icmpgt     132
     121: iload         4
     123: invokestatic  #15                 // Method isLeapYear:(I)Z
     126: ifne          132
     129: iinc          3, -1
     132: iload_3
     133: iflt          139
     136: goto          151
     139: iinc          3, 13
     142: iinc          4, -1
     145: iconst_1
     146: istore        5
     148: goto          111
     151: aload_0
     152: iconst_2
     153: iload_3
     154: invokevirtual #12                 // Method set:(II)V
     157: aload_0
     158: iconst_1
     159: iload         4
     161: invokevirtual #12                 // Method set:(II)V
     164: aload_0
     165: iconst_5
     166: invokevirtual #16                 // Method pinField:(I)V
     169: goto          178
     172: aload_0
     173: iload_1
     174: iload_2
     175: invokespecial #17                 // Method com/ibm/icu/util/Calendar.add:(II)V
     178: return

  public void roll(int, int);
    Code:
       0: iload_1
       1: lookupswitch  { // 1
                     2: 20
               default: 118
          }
      20: aload_0
      21: iconst_2
      22: invokevirtual #14                 // Method get:(I)I
      25: istore_3
      26: aload_0
      27: iconst_1
      28: invokevirtual #14                 // Method get:(I)I
      31: istore        4
      33: iload         4
      35: invokestatic  #15                 // Method isLeapYear:(I)Z
      38: istore        5
      40: iload         4
      42: invokestatic  #18                 // Method monthsInYear:(I)I
      45: istore        6
      47: iload_3
      48: iload_2
      49: iload         6
      51: irem
      52: iadd
      53: istore        7
      55: iload         5
      57: ifne          99
      60: iload_2
      61: ifle          81
      64: iload_3
      65: iconst_5
      66: if_icmpge     81
      69: iload         7
      71: iconst_5
      72: if_icmplt     81
      75: iinc          7, 1
      78: goto          99
      81: iload_2
      82: ifge          99
      85: iload_3
      86: iconst_5
      87: if_icmple     99
      90: iload         7
      92: iconst_5
      93: if_icmpgt     99
      96: iinc          7, -1
      99: aload_0
     100: iconst_2
     101: iload         7
     103: bipush        13
     105: iadd
     106: bipush        13
     108: irem
     109: invokevirtual #12                 // Method set:(II)V
     112: aload_0
     113: iconst_5
     114: invokevirtual #16                 // Method pinField:(I)V
     117: return
     118: aload_0
     119: iload_1
     120: iload_2
     121: invokespecial #19                 // Method com/ibm/icu/util/Calendar.roll:(II)V
     124: return

  private static long startOfYear(int);
    Code:
       0: getstatic     #20                 // Field cache:Lcom/ibm/icu/impl/CalendarCache;
       3: iload_0
       4: i2l
       5: invokevirtual #21                 // Method com/ibm/icu/impl/CalendarCache.get:(J)J
       8: lstore_1
       9: lload_1
      10: getstatic     #22                 // Field com/ibm/icu/impl/CalendarCache.EMPTY:J
      13: lcmp
      14: ifne          169
      17: sipush        235
      20: iload_0
      21: imul
      22: sipush        234
      25: isub
      26: bipush        19
      28: idiv
      29: istore_3
      30: iload_3
      31: i2l
      32: ldc2_w        #23                 // long 13753l
      35: lmul
      36: ldc2_w        #25                 // long 12084l
      39: ladd
      40: lstore        4
      42: iload_3
      43: bipush        29
      45: imul
      46: i2l
      47: lload         4
      49: ldc2_w        #27                 // long 25920l
      52: ldiv
      53: ladd
      54: lstore_1
      55: lload         4
      57: ldc2_w        #27                 // long 25920l
      60: lrem
      61: lstore        4
      63: lload_1
      64: ldc2_w        #29                 // long 7l
      67: lrem
      68: l2i
      69: istore        6
      71: iload         6
      73: iconst_2
      74: if_icmpeq     90
      77: iload         6
      79: iconst_4
      80: if_icmpeq     90
      83: iload         6
      85: bipush        6
      87: if_icmpne     102
      90: lload_1
      91: lconst_1
      92: ladd
      93: lstore_1
      94: lload_1
      95: ldc2_w        #29                 // long 7l
      98: lrem
      99: l2i
     100: istore        6
     102: iload         6
     104: iconst_1
     105: if_icmpne     133
     108: lload         4
     110: ldc2_w        #31                 // long 16404l
     113: lcmp
     114: ifle          133
     117: iload_0
     118: invokestatic  #15                 // Method isLeapYear:(I)Z
     121: ifne          133
     124: lload_1
     125: ldc2_w        #33                 // long 2l
     128: ladd
     129: lstore_1
     130: goto          160
     133: iload         6
     135: ifne          160
     138: lload         4
     140: ldc2_w        #35                 // long 23269l
     143: lcmp
     144: ifle          160
     147: iload_0
     148: iconst_1
     149: isub
     150: invokestatic  #15                 // Method isLeapYear:(I)Z
     153: ifeq          160
     156: lload_1
     157: lconst_1
     158: ladd
     159: lstore_1
     160: getstatic     #20                 // Field cache:Lcom/ibm/icu/impl/CalendarCache;
     163: iload_0
     164: i2l
     165: lload_1
     166: invokevirtual #37                 // Method com/ibm/icu/impl/CalendarCache.put:(JJ)V
     169: lload_1
     170: lreturn

  private final int yearType(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #38                 // Method handleGetYearLength:(I)I
       5: istore_2
       6: iload_2
       7: sipush        380
      10: if_icmple     16
      13: iinc          2, -30
      16: iconst_0
      17: istore_3
      18: iload_2
      19: tableswitch   { // 353 to 355
                   353: 44
                   354: 49
                   355: 54
               default: 59
          }
      44: iconst_0
      45: istore_3
      46: goto          95
      49: iconst_1
      50: istore_3
      51: goto          95
      54: iconst_2
      55: istore_3
      56: goto          95
      59: new           #39                 // class java/lang/IllegalArgumentException
      62: dup
      63: new           #40                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #42                 // String Illegal year length
      72: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: iload_2
      76: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: ldc           #45                 // String  in year
      81: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iload_1
      85: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: iload_3
      96: ireturn

  public static boolean isLeapYear(int);
    Code:
       0: iload_0
       1: bipush        12
       3: imul
       4: bipush        17
       6: iadd
       7: bipush        19
       9: irem
      10: istore_1
      11: iload_1
      12: iload_1
      13: ifge          21
      16: bipush        -7
      18: goto          23
      21: bipush        12
      23: if_icmplt     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  private static int monthsInYear(int);
    Code:
       0: iload_0
       1: invokestatic  #15                 // Method isLeapYear:(I)Z
       4: ifeq          12
       7: bipush        13
       9: goto          14
      12: bipush        12
      14: ireturn

  protected int handleGetLimit(int, int);
    Code:
       0: getstatic     #48                 // Field LIMITS:[[I
       3: iload_1
       4: aaload
       5: iload_2
       6: iaload
       7: ireturn

  protected int handleGetMonthLength(int, int);
    Code:
       0: iload_2
       1: ifge          17
       4: iload_2
       5: iinc          1, -1
       8: iload_1
       9: invokestatic  #18                 // Method monthsInYear:(I)I
      12: iadd
      13: istore_2
      14: goto          0
      17: iload_2
      18: bipush        12
      20: if_icmple     36
      23: iload_2
      24: iload_1
      25: iinc          1, 1
      28: invokestatic  #18                 // Method monthsInYear:(I)I
      31: isub
      32: istore_2
      33: goto          17
      36: iload_2
      37: lookupswitch  { // 2
                     1: 64
                     2: 64
               default: 76
          }
      64: getstatic     #49                 // Field MONTH_LENGTH:[[I
      67: iload_2
      68: aaload
      69: aload_0
      70: iload_1
      71: invokespecial #50                 // Method yearType:(I)I
      74: iaload
      75: ireturn
      76: getstatic     #49                 // Field MONTH_LENGTH:[[I
      79: iload_2
      80: aaload
      81: iconst_0
      82: iaload
      83: ireturn

  protected int handleGetYearLength(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iadd
       3: invokestatic  #51                 // Method startOfYear:(I)J
       6: iload_1
       7: invokestatic  #51                 // Method startOfYear:(I)J
      10: lsub
      11: l2i
      12: ireturn

  protected void validateField(int);
    Code:
       0: iload_1
       1: iconst_2
       2: if_icmpne     34
       5: aload_0
       6: invokevirtual #52                 // Method handleGetExtendedYear:()I
       9: invokestatic  #15                 // Method isLeapYear:(I)Z
      12: ifne          34
      15: aload_0
      16: iconst_2
      17: invokevirtual #53                 // Method internalGet:(I)I
      20: iconst_5
      21: if_icmpne     34
      24: new           #39                 // class java/lang/IllegalArgumentException
      27: dup
      28: ldc           #54                 // String MONTH cannot be ADAR_1(5) except leap years
      30: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: iload_1
      36: invokespecial #55                 // Method com/ibm/icu/util/Calendar.validateField:(I)V
      39: return

  protected void handleComputeFields(int);
    Code:
       0: iload_1
       1: ldc           #56                 // int 347997
       3: isub
       4: i2l
       5: lstore_2
       6: lload_2
       7: ldc2_w        #27                 // long 25920l
      10: lmul
      11: ldc2_w        #57                 // long 765433l
      14: ldiv
      15: lstore        4
      17: ldc2_w        #59                 // long 19l
      20: lload         4
      22: lmul
      23: ldc2_w        #61                 // long 234l
      26: ladd
      27: ldc2_w        #63                 // long 235l
      30: ldiv
      31: l2i
      32: iconst_1
      33: iadd
      34: istore        6
      36: iload         6
      38: invokestatic  #51                 // Method startOfYear:(I)J
      41: lstore        7
      43: lload_2
      44: lload         7
      46: lsub
      47: l2i
      48: istore        9
      50: iload         9
      52: iconst_1
      53: if_icmpge     76
      56: iinc          6, -1
      59: iload         6
      61: invokestatic  #51                 // Method startOfYear:(I)J
      64: lstore        7
      66: lload_2
      67: lload         7
      69: lsub
      70: l2i
      71: istore        9
      73: goto          50
      76: aload_0
      77: iload         6
      79: invokespecial #50                 // Method yearType:(I)I
      82: istore        10
      84: iload         6
      86: invokestatic  #15                 // Method isLeapYear:(I)Z
      89: ifeq          98
      92: getstatic     #65                 // Field LEAP_MONTH_START:[[I
      95: goto          101
      98: getstatic     #66                 // Field MONTH_START:[[I
     101: astore        11
     103: iconst_0
     104: istore        12
     106: iload         9
     108: aload         11
     110: iload         12
     112: aaload
     113: iload         10
     115: iaload
     116: if_icmple     125
     119: iinc          12, 1
     122: goto          106
     125: iinc          12, -1
     128: iload         9
     130: aload         11
     132: iload         12
     134: aaload
     135: iload         10
     137: iaload
     138: isub
     139: istore        13
     141: aload_0
     142: iconst_0
     143: iconst_0
     144: invokevirtual #67                 // Method internalSet:(II)V
     147: aload_0
     148: iconst_1
     149: iload         6
     151: invokevirtual #67                 // Method internalSet:(II)V
     154: aload_0
     155: bipush        19
     157: iload         6
     159: invokevirtual #67                 // Method internalSet:(II)V
     162: aload_0
     163: iconst_2
     164: iload         12
     166: invokevirtual #67                 // Method internalSet:(II)V
     169: aload_0
     170: iconst_5
     171: iload         13
     173: invokevirtual #67                 // Method internalSet:(II)V
     176: aload_0
     177: bipush        6
     179: iload         9
     181: invokevirtual #67                 // Method internalSet:(II)V
     184: return

  protected int handleGetExtendedYear();
    Code:
       0: aload_0
       1: bipush        19
       3: iconst_1
       4: invokevirtual #68                 // Method newerField:(II)I
       7: bipush        19
       9: if_icmpne     23
      12: aload_0
      13: bipush        19
      15: iconst_1
      16: invokevirtual #69                 // Method internalGet:(II)I
      19: istore_1
      20: goto          30
      23: aload_0
      24: iconst_1
      25: iconst_1
      26: invokevirtual #69                 // Method internalGet:(II)I
      29: istore_1
      30: iload_1
      31: ireturn

  protected int handleComputeMonthStart(int, int, boolean);
    Code:
       0: iload_2
       1: ifge          17
       4: iload_2
       5: iinc          1, -1
       8: iload_1
       9: invokestatic  #18                 // Method monthsInYear:(I)I
      12: iadd
      13: istore_2
      14: goto          0
      17: iload_2
      18: bipush        12
      20: if_icmple     36
      23: iload_2
      24: iload_1
      25: iinc          1, 1
      28: invokestatic  #18                 // Method monthsInYear:(I)I
      31: isub
      32: istore_2
      33: goto          17
      36: iload_1
      37: invokestatic  #51                 // Method startOfYear:(I)J
      40: lstore        4
      42: iload_2
      43: ifeq          90
      46: iload_1
      47: invokestatic  #15                 // Method isLeapYear:(I)Z
      50: ifeq          73
      53: lload         4
      55: getstatic     #65                 // Field LEAP_MONTH_START:[[I
      58: iload_2
      59: aaload
      60: aload_0
      61: iload_1
      62: invokespecial #50                 // Method yearType:(I)I
      65: iaload
      66: i2l
      67: ladd
      68: lstore        4
      70: goto          90
      73: lload         4
      75: getstatic     #66                 // Field MONTH_START:[[I
      78: iload_2
      79: aaload
      80: aload_0
      81: iload_1
      82: invokespecial #50                 // Method yearType:(I)I
      85: iaload
      86: i2l
      87: ladd
      88: lstore        4
      90: lload         4
      92: ldc2_w        #70                 // long 347997l
      95: ladd
      96: l2i
      97: ireturn

  public java.lang.String getType();
    Code:
       0: ldc           #72                 // String hebrew
       2: areturn

  static {};
    Code:
       0: bipush        22
       2: anewarray     #73                 // class "[I"
       5: dup
       6: iconst_0
       7: iconst_4
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_0
      13: iastore
      14: dup
      15: iconst_1
      16: iconst_0
      17: iastore
      18: dup
      19: iconst_2
      20: iconst_0
      21: iastore
      22: dup
      23: iconst_3
      24: iconst_0
      25: iastore
      26: aastore
      27: dup
      28: iconst_1
      29: iconst_4
      30: newarray       int
      32: dup
      33: iconst_0
      34: ldc           #74                 // int -5000000
      36: iastore
      37: dup
      38: iconst_1
      39: ldc           #74                 // int -5000000
      41: iastore
      42: dup
      43: iconst_2
      44: ldc           #75                 // int 5000000
      46: iastore
      47: dup
      48: iconst_3
      49: ldc           #75                 // int 5000000
      51: iastore
      52: aastore
      53: dup
      54: iconst_2
      55: iconst_4
      56: newarray       int
      58: dup
      59: iconst_0
      60: iconst_0
      61: iastore
      62: dup
      63: iconst_1
      64: iconst_0
      65: iastore
      66: dup
      67: iconst_2
      68: bipush        12
      70: iastore
      71: dup
      72: iconst_3
      73: bipush        12
      75: iastore
      76: aastore
      77: dup
      78: iconst_3
      79: iconst_4
      80: newarray       int
      82: dup
      83: iconst_0
      84: iconst_1
      85: iastore
      86: dup
      87: iconst_1
      88: iconst_1
      89: iastore
      90: dup
      91: iconst_2
      92: bipush        51
      94: iastore
      95: dup
      96: iconst_3
      97: bipush        56
      99: iastore
     100: aastore
     101: dup
     102: iconst_4
     103: iconst_0
     104: newarray       int
     106: aastore
     107: dup
     108: iconst_5
     109: iconst_4
     110: newarray       int
     112: dup
     113: iconst_0
     114: iconst_1
     115: iastore
     116: dup
     117: iconst_1
     118: iconst_1
     119: iastore
     120: dup
     121: iconst_2
     122: bipush        29
     124: iastore
     125: dup
     126: iconst_3
     127: bipush        30
     129: iastore
     130: aastore
     131: dup
     132: bipush        6
     134: iconst_4
     135: newarray       int
     137: dup
     138: iconst_0
     139: iconst_1
     140: iastore
     141: dup
     142: iconst_1
     143: iconst_1
     144: iastore
     145: dup
     146: iconst_2
     147: sipush        353
     150: iastore
     151: dup
     152: iconst_3
     153: sipush        385
     156: iastore
     157: aastore
     158: dup
     159: bipush        7
     161: iconst_0
     162: newarray       int
     164: aastore
     165: dup
     166: bipush        8
     168: iconst_4
     169: newarray       int
     171: dup
     172: iconst_0
     173: iconst_m1
     174: iastore
     175: dup
     176: iconst_1
     177: iconst_m1
     178: iastore
     179: dup
     180: iconst_2
     181: iconst_5
     182: iastore
     183: dup
     184: iconst_3
     185: iconst_5
     186: iastore
     187: aastore
     188: dup
     189: bipush        9
     191: iconst_0
     192: newarray       int
     194: aastore
     195: dup
     196: bipush        10
     198: iconst_0
     199: newarray       int
     201: aastore
     202: dup
     203: bipush        11
     205: iconst_0
     206: newarray       int
     208: aastore
     209: dup
     210: bipush        12
     212: iconst_0
     213: newarray       int
     215: aastore
     216: dup
     217: bipush        13
     219: iconst_0
     220: newarray       int
     222: aastore
     223: dup
     224: bipush        14
     226: iconst_0
     227: newarray       int
     229: aastore
     230: dup
     231: bipush        15
     233: iconst_0
     234: newarray       int
     236: aastore
     237: dup
     238: bipush        16
     240: iconst_0
     241: newarray       int
     243: aastore
     244: dup
     245: bipush        17
     247: iconst_4
     248: newarray       int
     250: dup
     251: iconst_0
     252: ldc           #74                 // int -5000000
     254: iastore
     255: dup
     256: iconst_1
     257: ldc           #74                 // int -5000000
     259: iastore
     260: dup
     261: iconst_2
     262: ldc           #75                 // int 5000000
     264: iastore
     265: dup
     266: iconst_3
     267: ldc           #75                 // int 5000000
     269: iastore
     270: aastore
     271: dup
     272: bipush        18
     274: iconst_0
     275: newarray       int
     277: aastore
     278: dup
     279: bipush        19
     281: iconst_4
     282: newarray       int
     284: dup
     285: iconst_0
     286: ldc           #74                 // int -5000000
     288: iastore
     289: dup
     290: iconst_1
     291: ldc           #74                 // int -5000000
     293: iastore
     294: dup
     295: iconst_2
     296: ldc           #75                 // int 5000000
     298: iastore
     299: dup
     300: iconst_3
     301: ldc           #75                 // int 5000000
     303: iastore
     304: aastore
     305: dup
     306: bipush        20
     308: iconst_0
     309: newarray       int
     311: aastore
     312: dup
     313: bipush        21
     315: iconst_0
     316: newarray       int
     318: aastore
     319: putstatic     #48                 // Field LIMITS:[[I
     322: bipush        13
     324: anewarray     #73                 // class "[I"
     327: dup
     328: iconst_0
     329: iconst_3
     330: newarray       int
     332: dup
     333: iconst_0
     334: bipush        30
     336: iastore
     337: dup
     338: iconst_1
     339: bipush        30
     341: iastore
     342: dup
     343: iconst_2
     344: bipush        30
     346: iastore
     347: aastore
     348: dup
     349: iconst_1
     350: iconst_3
     351: newarray       int
     353: dup
     354: iconst_0
     355: bipush        29
     357: iastore
     358: dup
     359: iconst_1
     360: bipush        29
     362: iastore
     363: dup
     364: iconst_2
     365: bipush        30
     367: iastore
     368: aastore
     369: dup
     370: iconst_2
     371: iconst_3
     372: newarray       int
     374: dup
     375: iconst_0
     376: bipush        29
     378: iastore
     379: dup
     380: iconst_1
     381: bipush        30
     383: iastore
     384: dup
     385: iconst_2
     386: bipush        30
     388: iastore
     389: aastore
     390: dup
     391: iconst_3
     392: iconst_3
     393: newarray       int
     395: dup
     396: iconst_0
     397: bipush        29
     399: iastore
     400: dup
     401: iconst_1
     402: bipush        29
     404: iastore
     405: dup
     406: iconst_2
     407: bipush        29
     409: iastore
     410: aastore
     411: dup
     412: iconst_4
     413: iconst_3
     414: newarray       int
     416: dup
     417: iconst_0
     418: bipush        30
     420: iastore
     421: dup
     422: iconst_1
     423: bipush        30
     425: iastore
     426: dup
     427: iconst_2
     428: bipush        30
     430: iastore
     431: aastore
     432: dup
     433: iconst_5
     434: iconst_3
     435: newarray       int
     437: dup
     438: iconst_0
     439: bipush        30
     441: iastore
     442: dup
     443: iconst_1
     444: bipush        30
     446: iastore
     447: dup
     448: iconst_2
     449: bipush        30
     451: iastore
     452: aastore
     453: dup
     454: bipush        6
     456: iconst_3
     457: newarray       int
     459: dup
     460: iconst_0
     461: bipush        29
     463: iastore
     464: dup
     465: iconst_1
     466: bipush        29
     468: iastore
     469: dup
     470: iconst_2
     471: bipush        29
     473: iastore
     474: aastore
     475: dup
     476: bipush        7
     478: iconst_3
     479: newarray       int
     481: dup
     482: iconst_0
     483: bipush        30
     485: iastore
     486: dup
     487: iconst_1
     488: bipush        30
     490: iastore
     491: dup
     492: iconst_2
     493: bipush        30
     495: iastore
     496: aastore
     497: dup
     498: bipush        8
     500: iconst_3
     501: newarray       int
     503: dup
     504: iconst_0
     505: bipush        29
     507: iastore
     508: dup
     509: iconst_1
     510: bipush        29
     512: iastore
     513: dup
     514: iconst_2
     515: bipush        29
     517: iastore
     518: aastore
     519: dup
     520: bipush        9
     522: iconst_3
     523: newarray       int
     525: dup
     526: iconst_0
     527: bipush        30
     529: iastore
     530: dup
     531: iconst_1
     532: bipush        30
     534: iastore
     535: dup
     536: iconst_2
     537: bipush        30
     539: iastore
     540: aastore
     541: dup
     542: bipush        10
     544: iconst_3
     545: newarray       int
     547: dup
     548: iconst_0
     549: bipush        29
     551: iastore
     552: dup
     553: iconst_1
     554: bipush        29
     556: iastore
     557: dup
     558: iconst_2
     559: bipush        29
     561: iastore
     562: aastore
     563: dup
     564: bipush        11
     566: iconst_3
     567: newarray       int
     569: dup
     570: iconst_0
     571: bipush        30
     573: iastore
     574: dup
     575: iconst_1
     576: bipush        30
     578: iastore
     579: dup
     580: iconst_2
     581: bipush        30
     583: iastore
     584: aastore
     585: dup
     586: bipush        12
     588: iconst_3
     589: newarray       int
     591: dup
     592: iconst_0
     593: bipush        29
     595: iastore
     596: dup
     597: iconst_1
     598: bipush        29
     600: iastore
     601: dup
     602: iconst_2
     603: bipush        29
     605: iastore
     606: aastore
     607: putstatic     #49                 // Field MONTH_LENGTH:[[I
     610: bipush        14
     612: anewarray     #73                 // class "[I"
     615: dup
     616: iconst_0
     617: iconst_3
     618: newarray       int
     620: dup
     621: iconst_0
     622: iconst_0
     623: iastore
     624: dup
     625: iconst_1
     626: iconst_0
     627: iastore
     628: dup
     629: iconst_2
     630: iconst_0
     631: iastore
     632: aastore
     633: dup
     634: iconst_1
     635: iconst_3
     636: newarray       int
     638: dup
     639: iconst_0
     640: bipush        30
     642: iastore
     643: dup
     644: iconst_1
     645: bipush        30
     647: iastore
     648: dup
     649: iconst_2
     650: bipush        30
     652: iastore
     653: aastore
     654: dup
     655: iconst_2
     656: iconst_3
     657: newarray       int
     659: dup
     660: iconst_0
     661: bipush        59
     663: iastore
     664: dup
     665: iconst_1
     666: bipush        59
     668: iastore
     669: dup
     670: iconst_2
     671: bipush        60
     673: iastore
     674: aastore
     675: dup
     676: iconst_3
     677: iconst_3
     678: newarray       int
     680: dup
     681: iconst_0
     682: bipush        88
     684: iastore
     685: dup
     686: iconst_1
     687: bipush        89
     689: iastore
     690: dup
     691: iconst_2
     692: bipush        90
     694: iastore
     695: aastore
     696: dup
     697: iconst_4
     698: iconst_3
     699: newarray       int
     701: dup
     702: iconst_0
     703: bipush        117
     705: iastore
     706: dup
     707: iconst_1
     708: bipush        118
     710: iastore
     711: dup
     712: iconst_2
     713: bipush        119
     715: iastore
     716: aastore
     717: dup
     718: iconst_5
     719: iconst_3
     720: newarray       int
     722: dup
     723: iconst_0
     724: sipush        147
     727: iastore
     728: dup
     729: iconst_1
     730: sipush        148
     733: iastore
     734: dup
     735: iconst_2
     736: sipush        149
     739: iastore
     740: aastore
     741: dup
     742: bipush        6
     744: iconst_3
     745: newarray       int
     747: dup
     748: iconst_0
     749: sipush        147
     752: iastore
     753: dup
     754: iconst_1
     755: sipush        148
     758: iastore
     759: dup
     760: iconst_2
     761: sipush        149
     764: iastore
     765: aastore
     766: dup
     767: bipush        7
     769: iconst_3
     770: newarray       int
     772: dup
     773: iconst_0
     774: sipush        176
     777: iastore
     778: dup
     779: iconst_1
     780: sipush        177
     783: iastore
     784: dup
     785: iconst_2
     786: sipush        178
     789: iastore
     790: aastore
     791: dup
     792: bipush        8
     794: iconst_3
     795: newarray       int
     797: dup
     798: iconst_0
     799: sipush        206
     802: iastore
     803: dup
     804: iconst_1
     805: sipush        207
     808: iastore
     809: dup
     810: iconst_2
     811: sipush        208
     814: iastore
     815: aastore
     816: dup
     817: bipush        9
     819: iconst_3
     820: newarray       int
     822: dup
     823: iconst_0
     824: sipush        235
     827: iastore
     828: dup
     829: iconst_1
     830: sipush        236
     833: iastore
     834: dup
     835: iconst_2
     836: sipush        237
     839: iastore
     840: aastore
     841: dup
     842: bipush        10
     844: iconst_3
     845: newarray       int
     847: dup
     848: iconst_0
     849: sipush        265
     852: iastore
     853: dup
     854: iconst_1
     855: sipush        266
     858: iastore
     859: dup
     860: iconst_2
     861: sipush        267
     864: iastore
     865: aastore
     866: dup
     867: bipush        11
     869: iconst_3
     870: newarray       int
     872: dup
     873: iconst_0
     874: sipush        294
     877: iastore
     878: dup
     879: iconst_1
     880: sipush        295
     883: iastore
     884: dup
     885: iconst_2
     886: sipush        296
     889: iastore
     890: aastore
     891: dup
     892: bipush        12
     894: iconst_3
     895: newarray       int
     897: dup
     898: iconst_0
     899: sipush        324
     902: iastore
     903: dup
     904: iconst_1
     905: sipush        325
     908: iastore
     909: dup
     910: iconst_2
     911: sipush        326
     914: iastore
     915: aastore
     916: dup
     917: bipush        13
     919: iconst_3
     920: newarray       int
     922: dup
     923: iconst_0
     924: sipush        353
     927: iastore
     928: dup
     929: iconst_1
     930: sipush        354
     933: iastore
     934: dup
     935: iconst_2
     936: sipush        355
     939: iastore
     940: aastore
     941: putstatic     #66                 // Field MONTH_START:[[I
     944: bipush        14
     946: anewarray     #73                 // class "[I"
     949: dup
     950: iconst_0
     951: iconst_3
     952: newarray       int
     954: dup
     955: iconst_0
     956: iconst_0
     957: iastore
     958: dup
     959: iconst_1
     960: iconst_0
     961: iastore
     962: dup
     963: iconst_2
     964: iconst_0
     965: iastore
     966: aastore
     967: dup
     968: iconst_1
     969: iconst_3
     970: newarray       int
     972: dup
     973: iconst_0
     974: bipush        30
     976: iastore
     977: dup
     978: iconst_1
     979: bipush        30
     981: iastore
     982: dup
     983: iconst_2
     984: bipush        30
     986: iastore
     987: aastore
     988: dup
     989: iconst_2
     990: iconst_3
     991: newarray       int
     993: dup
     994: iconst_0
     995: bipush        59
     997: iastore
     998: dup
     999: iconst_1
    1000: bipush        59
    1002: iastore
    1003: dup
    1004: iconst_2
    1005: bipush        60
    1007: iastore
    1008: aastore
    1009: dup
    1010: iconst_3
    1011: iconst_3
    1012: newarray       int
    1014: dup
    1015: iconst_0
    1016: bipush        88
    1018: iastore
    1019: dup
    1020: iconst_1
    1021: bipush        89
    1023: iastore
    1024: dup
    1025: iconst_2
    1026: bipush        90
    1028: iastore
    1029: aastore
    1030: dup
    1031: iconst_4
    1032: iconst_3
    1033: newarray       int
    1035: dup
    1036: iconst_0
    1037: bipush        117
    1039: iastore
    1040: dup
    1041: iconst_1
    1042: bipush        118
    1044: iastore
    1045: dup
    1046: iconst_2
    1047: bipush        119
    1049: iastore
    1050: aastore
    1051: dup
    1052: iconst_5
    1053: iconst_3
    1054: newarray       int
    1056: dup
    1057: iconst_0
    1058: sipush        147
    1061: iastore
    1062: dup
    1063: iconst_1
    1064: sipush        148
    1067: iastore
    1068: dup
    1069: iconst_2
    1070: sipush        149
    1073: iastore
    1074: aastore
    1075: dup
    1076: bipush        6
    1078: iconst_3
    1079: newarray       int
    1081: dup
    1082: iconst_0
    1083: sipush        177
    1086: iastore
    1087: dup
    1088: iconst_1
    1089: sipush        178
    1092: iastore
    1093: dup
    1094: iconst_2
    1095: sipush        179
    1098: iastore
    1099: aastore
    1100: dup
    1101: bipush        7
    1103: iconst_3
    1104: newarray       int
    1106: dup
    1107: iconst_0
    1108: sipush        206
    1111: iastore
    1112: dup
    1113: iconst_1
    1114: sipush        207
    1117: iastore
    1118: dup
    1119: iconst_2
    1120: sipush        208
    1123: iastore
    1124: aastore
    1125: dup
    1126: bipush        8
    1128: iconst_3
    1129: newarray       int
    1131: dup
    1132: iconst_0
    1133: sipush        236
    1136: iastore
    1137: dup
    1138: iconst_1
    1139: sipush        237
    1142: iastore
    1143: dup
    1144: iconst_2
    1145: sipush        238
    1148: iastore
    1149: aastore
    1150: dup
    1151: bipush        9
    1153: iconst_3
    1154: newarray       int
    1156: dup
    1157: iconst_0
    1158: sipush        265
    1161: iastore
    1162: dup
    1163: iconst_1
    1164: sipush        266
    1167: iastore
    1168: dup
    1169: iconst_2
    1170: sipush        267
    1173: iastore
    1174: aastore
    1175: dup
    1176: bipush        10
    1178: iconst_3
    1179: newarray       int
    1181: dup
    1182: iconst_0
    1183: sipush        295
    1186: iastore
    1187: dup
    1188: iconst_1
    1189: sipush        296
    1192: iastore
    1193: dup
    1194: iconst_2
    1195: sipush        297
    1198: iastore
    1199: aastore
    1200: dup
    1201: bipush        11
    1203: iconst_3
    1204: newarray       int
    1206: dup
    1207: iconst_0
    1208: sipush        324
    1211: iastore
    1212: dup
    1213: iconst_1
    1214: sipush        325
    1217: iastore
    1218: dup
    1219: iconst_2
    1220: sipush        326
    1223: iastore
    1224: aastore
    1225: dup
    1226: bipush        12
    1228: iconst_3
    1229: newarray       int
    1231: dup
    1232: iconst_0
    1233: sipush        354
    1236: iastore
    1237: dup
    1238: iconst_1
    1239: sipush        355
    1242: iastore
    1243: dup
    1244: iconst_2
    1245: sipush        356
    1248: iastore
    1249: aastore
    1250: dup
    1251: bipush        13
    1253: iconst_3
    1254: newarray       int
    1256: dup
    1257: iconst_0
    1258: sipush        383
    1261: iastore
    1262: dup
    1263: iconst_1
    1264: sipush        384
    1267: iastore
    1268: dup
    1269: iconst_2
    1270: sipush        385
    1273: iastore
    1274: aastore
    1275: putstatic     #65                 // Field LEAP_MONTH_START:[[I
    1278: new           #76                 // class com/ibm/icu/impl/CalendarCache
    1281: dup
    1282: invokespecial #77                 // Method com/ibm/icu/impl/CalendarCache."<init>":()V
    1285: putstatic     #20                 // Field cache:Lcom/ibm/icu/impl/CalendarCache;
    1288: return
}
