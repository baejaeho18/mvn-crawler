Compiled from "BytesTrieBuilder.java"
public final class com.ibm.icu.util.BytesTrieBuilder extends com.ibm.icu.util.StringTrieBuilder {
  private final byte[] intBytes;

  private byte[] bytes;

  private int bytesLength;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.util.BytesTrieBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/util/StringTrieBuilder."<init>":()V
       4: aload_0
       5: iconst_5
       6: newarray       byte
       8: putfield      #2                  // Field intBytes:[B
      11: return

  public com.ibm.icu.util.BytesTrieBuilder add(byte[], int, int);
    Code:
       0: aload_0
       1: new           #3                  // class com/ibm/icu/util/BytesTrieBuilder$BytesAsCharSequence
       4: dup
       5: aload_1
       6: iload_2
       7: invokespecial #4                  // Method com/ibm/icu/util/BytesTrieBuilder$BytesAsCharSequence."<init>":([BI)V
      10: iload_3
      11: invokevirtual #5                  // Method addImpl:(Ljava/lang/CharSequence;I)V
      14: aload_0
      15: areturn

  public com.ibm.icu.util.BytesTrie build(com.ibm.icu.util.StringTrieBuilder$Option);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method buildBytes:(Lcom/ibm/icu/util/StringTrieBuilder$Option;)V
       5: new           #7                  // class com/ibm/icu/util/BytesTrie
       8: dup
       9: aload_0
      10: getfield      #8                  // Field bytes:[B
      13: aload_0
      14: getfield      #8                  // Field bytes:[B
      17: arraylength
      18: aload_0
      19: getfield      #9                  // Field bytesLength:I
      22: isub
      23: invokespecial #10                 // Method com/ibm/icu/util/BytesTrie."<init>":([BI)V
      26: areturn

  public java.nio.ByteBuffer buildByteBuffer(com.ibm.icu.util.StringTrieBuilder$Option);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method buildBytes:(Lcom/ibm/icu/util/StringTrieBuilder$Option;)V
       5: aload_0
       6: getfield      #8                  // Field bytes:[B
       9: aload_0
      10: getfield      #8                  // Field bytes:[B
      13: arraylength
      14: aload_0
      15: getfield      #9                  // Field bytesLength:I
      18: isub
      19: aload_0
      20: getfield      #9                  // Field bytesLength:I
      23: invokestatic  #11                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
      26: areturn

  private void buildBytes(com.ibm.icu.util.StringTrieBuilder$Option);
    Code:
       0: aload_0
       1: getfield      #8                  // Field bytes:[B
       4: ifnonnull     16
       7: aload_0
       8: sipush        1024
      11: newarray       byte
      13: putfield      #8                  // Field bytes:[B
      16: aload_0
      17: aload_1
      18: invokevirtual #12                 // Method buildImpl:(Lcom/ibm/icu/util/StringTrieBuilder$Option;)V
      21: return

  public com.ibm.icu.util.BytesTrieBuilder clear();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method clearImpl:()V
       4: aload_0
       5: aconst_null
       6: putfield      #8                  // Field bytes:[B
       9: aload_0
      10: iconst_0
      11: putfield      #9                  // Field bytesLength:I
      14: aload_0
      15: areturn

  protected boolean matchNodesCanHaveValues();
    Code:
       0: iconst_0
       1: ireturn

  protected int getMaxBranchLinearSubNodeLength();
    Code:
       0: iconst_5
       1: ireturn

  protected int getMinLinearMatch();
    Code:
       0: bipush        16
       2: ireturn

  protected int getMaxLinearMatchLength();
    Code:
       0: bipush        16
       2: ireturn

  private void ensureCapacity(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #8                  // Field bytes:[B
       5: arraylength
       6: if_icmple     62
       9: aload_0
      10: getfield      #8                  // Field bytes:[B
      13: arraylength
      14: istore_2
      15: iload_2
      16: iconst_2
      17: imul
      18: istore_2
      19: iload_2
      20: iload_1
      21: if_icmple     15
      24: iload_2
      25: newarray       byte
      27: astore_3
      28: aload_0
      29: getfield      #8                  // Field bytes:[B
      32: aload_0
      33: getfield      #8                  // Field bytes:[B
      36: arraylength
      37: aload_0
      38: getfield      #9                  // Field bytesLength:I
      41: isub
      42: aload_3
      43: aload_3
      44: arraylength
      45: aload_0
      46: getfield      #9                  // Field bytesLength:I
      49: isub
      50: aload_0
      51: getfield      #9                  // Field bytesLength:I
      54: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      57: aload_0
      58: aload_3
      59: putfield      #8                  // Field bytes:[B
      62: return

  protected int write(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field bytesLength:I
       4: iconst_1
       5: iadd
       6: istore_2
       7: aload_0
       8: iload_2
       9: invokespecial #15                 // Method ensureCapacity:(I)V
      12: aload_0
      13: iload_2
      14: putfield      #9                  // Field bytesLength:I
      17: aload_0
      18: getfield      #8                  // Field bytes:[B
      21: aload_0
      22: getfield      #8                  // Field bytes:[B
      25: arraylength
      26: aload_0
      27: getfield      #9                  // Field bytesLength:I
      30: isub
      31: iload_1
      32: i2b
      33: bastore
      34: aload_0
      35: getfield      #9                  // Field bytesLength:I
      38: ireturn

  protected int write(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field bytesLength:I
       4: iload_2
       5: iadd
       6: istore_3
       7: aload_0
       8: iload_3
       9: invokespecial #15                 // Method ensureCapacity:(I)V
      12: aload_0
      13: iload_3
      14: putfield      #9                  // Field bytesLength:I
      17: aload_0
      18: getfield      #8                  // Field bytes:[B
      21: arraylength
      22: aload_0
      23: getfield      #9                  // Field bytesLength:I
      26: isub
      27: istore        4
      29: iload_2
      30: ifle          61
      33: aload_0
      34: getfield      #8                  // Field bytes:[B
      37: iload         4
      39: iinc          4, 1
      42: aload_0
      43: getfield      #16                 // Field strings:Ljava/lang/StringBuilder;
      46: iload_1
      47: iinc          1, 1
      50: invokevirtual #17                 // Method java/lang/StringBuilder.charAt:(I)C
      53: i2b
      54: bastore
      55: iinc          2, -1
      58: goto          29
      61: aload_0
      62: getfield      #9                  // Field bytesLength:I
      65: ireturn

  private int write(byte[], int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field bytesLength:I
       4: iload_2
       5: iadd
       6: istore_3
       7: aload_0
       8: iload_3
       9: invokespecial #15                 // Method ensureCapacity:(I)V
      12: aload_0
      13: iload_3
      14: putfield      #9                  // Field bytesLength:I
      17: aload_1
      18: iconst_0
      19: aload_0
      20: getfield      #8                  // Field bytes:[B
      23: aload_0
      24: getfield      #8                  // Field bytes:[B
      27: arraylength
      28: aload_0
      29: getfield      #9                  // Field bytesLength:I
      32: isub
      33: iload_2
      34: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload_0
      38: getfield      #9                  // Field bytesLength:I
      41: ireturn

  protected int writeValueAndFinal(int, boolean);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpgt     32
       5: iload_1
       6: bipush        64
       8: if_icmpgt     32
      11: aload_0
      12: bipush        16
      14: iload_1
      15: iadd
      16: iconst_1
      17: ishl
      18: iload_2
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ior
      28: invokevirtual #18                 // Method write:(I)I
      31: ireturn
      32: iconst_1
      33: istore_3
      34: iload_1
      35: iflt          44
      38: iload_1
      39: ldc           #19                 // int 16777215
      41: if_icmple     98
      44: aload_0
      45: getfield      #2                  // Field intBytes:[B
      48: iconst_0
      49: bipush        127
      51: bastore
      52: aload_0
      53: getfield      #2                  // Field intBytes:[B
      56: iconst_1
      57: iload_1
      58: bipush        24
      60: ishr
      61: i2b
      62: bastore
      63: aload_0
      64: getfield      #2                  // Field intBytes:[B
      67: iconst_2
      68: iload_1
      69: bipush        16
      71: ishr
      72: i2b
      73: bastore
      74: aload_0
      75: getfield      #2                  // Field intBytes:[B
      78: iconst_3
      79: iload_1
      80: bipush        8
      82: ishr
      83: i2b
      84: bastore
      85: aload_0
      86: getfield      #2                  // Field intBytes:[B
      89: iconst_4
      90: iload_1
      91: i2b
      92: bastore
      93: iconst_5
      94: istore_3
      95: goto          191
      98: iload_1
      99: sipush        6911
     102: if_icmpgt     122
     105: aload_0
     106: getfield      #2                  // Field intBytes:[B
     109: iconst_0
     110: bipush        81
     112: iload_1
     113: bipush        8
     115: ishr
     116: iadd
     117: i2b
     118: bastore
     119: goto          180
     122: iload_1
     123: ldc           #20                 // int 1179647
     125: if_icmpgt     145
     128: aload_0
     129: getfield      #2                  // Field intBytes:[B
     132: iconst_0
     133: bipush        108
     135: iload_1
     136: bipush        16
     138: ishr
     139: iadd
     140: i2b
     141: bastore
     142: goto          166
     145: aload_0
     146: getfield      #2                  // Field intBytes:[B
     149: iconst_0
     150: bipush        126
     152: bastore
     153: aload_0
     154: getfield      #2                  // Field intBytes:[B
     157: iconst_1
     158: iload_1
     159: bipush        16
     161: ishr
     162: i2b
     163: bastore
     164: iconst_2
     165: istore_3
     166: aload_0
     167: getfield      #2                  // Field intBytes:[B
     170: iload_3
     171: iinc          3, 1
     174: iload_1
     175: bipush        8
     177: ishr
     178: i2b
     179: bastore
     180: aload_0
     181: getfield      #2                  // Field intBytes:[B
     184: iload_3
     185: iinc          3, 1
     188: iload_1
     189: i2b
     190: bastore
     191: aload_0
     192: getfield      #2                  // Field intBytes:[B
     195: iconst_0
     196: aload_0
     197: getfield      #2                  // Field intBytes:[B
     200: iconst_0
     201: baload
     202: iconst_1
     203: ishl
     204: iload_2
     205: ifeq          212
     208: iconst_1
     209: goto          213
     212: iconst_0
     213: ior
     214: i2b
     215: bastore
     216: aload_0
     217: aload_0
     218: getfield      #2                  // Field intBytes:[B
     221: iload_3
     222: invokespecial #21                 // Method write:([BI)I
     225: ireturn

  protected int writeValueAndType(boolean, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #18                 // Method write:(I)I
       5: istore        4
       7: iload_1
       8: ifeq          19
      11: aload_0
      12: iload_2
      13: iconst_0
      14: invokevirtual #22                 // Method writeValueAndFinal:(IZ)I
      17: istore        4
      19: iload         4
      21: ireturn

  protected int writeDeltaTo(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field bytesLength:I
       4: iload_1
       5: isub
       6: istore_2
       7: getstatic     #23                 // Field $assertionsDisabled:Z
      10: ifne          25
      13: iload_2
      14: ifge          25
      17: new           #24                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: iload_2
      26: sipush        191
      29: if_icmpgt     38
      32: aload_0
      33: iload_2
      34: invokevirtual #18                 // Method write:(I)I
      37: ireturn
      38: iload_2
      39: sipush        12287
      42: if_icmpgt     65
      45: aload_0
      46: getfield      #2                  // Field intBytes:[B
      49: iconst_0
      50: sipush        192
      53: iload_2
      54: bipush        8
      56: ishr
      57: iadd
      58: i2b
      59: bastore
      60: iconst_1
      61: istore_3
      62: goto          152
      65: iload_2
      66: ldc           #26                 // int 917503
      68: if_icmpgt     91
      71: aload_0
      72: getfield      #2                  // Field intBytes:[B
      75: iconst_0
      76: sipush        240
      79: iload_2
      80: bipush        16
      82: ishr
      83: iadd
      84: i2b
      85: bastore
      86: iconst_2
      87: istore_3
      88: goto          141
      91: iload_2
      92: ldc           #19                 // int 16777215
      94: if_icmpgt     110
      97: aload_0
      98: getfield      #2                  // Field intBytes:[B
     101: iconst_0
     102: bipush        -2
     104: bastore
     105: iconst_3
     106: istore_3
     107: goto          130
     110: aload_0
     111: getfield      #2                  // Field intBytes:[B
     114: iconst_0
     115: iconst_m1
     116: bastore
     117: aload_0
     118: getfield      #2                  // Field intBytes:[B
     121: iconst_1
     122: iload_2
     123: bipush        24
     125: ishr
     126: i2b
     127: bastore
     128: iconst_4
     129: istore_3
     130: aload_0
     131: getfield      #2                  // Field intBytes:[B
     134: iconst_1
     135: iload_2
     136: bipush        16
     138: ishr
     139: i2b
     140: bastore
     141: aload_0
     142: getfield      #2                  // Field intBytes:[B
     145: iconst_1
     146: iload_2
     147: bipush        8
     149: ishr
     150: i2b
     151: bastore
     152: aload_0
     153: getfield      #2                  // Field intBytes:[B
     156: iload_3
     157: iinc          3, 1
     160: iload_2
     161: i2b
     162: bastore
     163: aload_0
     164: aload_0
     165: getfield      #2                  // Field intBytes:[B
     168: iload_3
     169: invokespecial #21                 // Method write:([BI)I
     172: ireturn

  static {};
    Code:
       0: ldc           #27                 // class com/ibm/icu/util/BytesTrieBuilder
       2: invokevirtual #28                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #23                 // Field $assertionsDisabled:Z
      16: return
}
