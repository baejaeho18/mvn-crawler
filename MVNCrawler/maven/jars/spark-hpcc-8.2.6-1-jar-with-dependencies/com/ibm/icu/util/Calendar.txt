Compiled from "Calendar.java"
public abstract class com.ibm.icu.util.Calendar implements java.io.Serializable, java.lang.Cloneable, java.lang.Comparable<com.ibm.icu.util.Calendar> {
  public static final int ERA;

  public static final int YEAR;

  public static final int MONTH;

  public static final int WEEK_OF_YEAR;

  public static final int WEEK_OF_MONTH;

  public static final int DATE;

  public static final int DAY_OF_MONTH;

  public static final int DAY_OF_YEAR;

  public static final int DAY_OF_WEEK;

  public static final int DAY_OF_WEEK_IN_MONTH;

  public static final int AM_PM;

  public static final int HOUR;

  public static final int HOUR_OF_DAY;

  public static final int MINUTE;

  public static final int SECOND;

  public static final int MILLISECOND;

  public static final int ZONE_OFFSET;

  public static final int DST_OFFSET;

  public static final int YEAR_WOY;

  public static final int DOW_LOCAL;

  public static final int EXTENDED_YEAR;

  public static final int JULIAN_DAY;

  public static final int MILLISECONDS_IN_DAY;

  public static final int IS_LEAP_MONTH;

  protected static final int BASE_FIELD_COUNT;

  protected static final int MAX_FIELD_COUNT;

  public static final int SUNDAY;

  public static final int MONDAY;

  public static final int TUESDAY;

  public static final int WEDNESDAY;

  public static final int THURSDAY;

  public static final int FRIDAY;

  public static final int SATURDAY;

  public static final int JANUARY;

  public static final int FEBRUARY;

  public static final int MARCH;

  public static final int APRIL;

  public static final int MAY;

  public static final int JUNE;

  public static final int JULY;

  public static final int AUGUST;

  public static final int SEPTEMBER;

  public static final int OCTOBER;

  public static final int NOVEMBER;

  public static final int DECEMBER;

  public static final int UNDECIMBER;

  public static final int AM;

  public static final int PM;

  public static final int WEEKDAY;

  public static final int WEEKEND;

  public static final int WEEKEND_ONSET;

  public static final int WEEKEND_CEASE;

  public static final int WALLTIME_LAST;

  public static final int WALLTIME_FIRST;

  public static final int WALLTIME_NEXT_VALID;

  protected static final int ONE_SECOND;

  protected static final int ONE_MINUTE;

  protected static final int ONE_HOUR;

  protected static final long ONE_DAY;

  protected static final long ONE_WEEK;

  protected static final int JAN_1_1_JULIAN_DAY;

  protected static final int EPOCH_JULIAN_DAY;

  protected static final int MIN_JULIAN;

  protected static final long MIN_MILLIS;

  protected static final java.util.Date MIN_DATE;

  protected static final int MAX_JULIAN;

  protected static final long MAX_MILLIS;

  protected static final java.util.Date MAX_DATE;

  private static final int MAX_HOURS;

  private transient int[] fields;

  private transient int[] stamp;

  private long time;

  private transient boolean isTimeSet;

  private transient boolean areFieldsSet;

  private transient boolean areAllFieldsSet;

  private transient boolean areFieldsVirtuallySet;

  private boolean lenient;

  private com.ibm.icu.util.TimeZone zone;

  private int firstDayOfWeek;

  private int minimalDaysInFirstWeek;

  private int weekendOnset;

  private int weekendOnsetMillis;

  private int weekendCease;

  private int weekendCeaseMillis;

  private int repeatedWallTime;

  private int skippedWallTime;

  protected static final int UNSET;

  protected static final int INTERNALLY_SET;

  protected static final int MINIMUM_USER_STAMP;

  private transient int nextStamp;

  private static int STAMP_MAX;

  private static final long serialVersionUID;

  private transient int internalSetMask;

  private transient int gregorianYear;

  private transient int gregorianMonth;

  private transient int gregorianDayOfYear;

  private transient int gregorianDayOfMonth;

  private static final com.ibm.icu.impl.ICUCache<java.lang.String, com.ibm.icu.util.Calendar$PatternData> PATTERN_CACHE;

  private static final java.lang.String[] DEFAULT_PATTERNS;

  private static final char QUOTE;

  private static final int FIELD_DIFF_MAX_INT;

  private static final int[][] LIMITS;

  protected static final int MINIMUM;

  protected static final int GREATEST_MINIMUM;

  protected static final int LEAST_MAXIMUM;

  protected static final int MAXIMUM;

  private static final com.ibm.icu.util.Calendar$WeekDataCache WEEK_DATA_CACHE;

  protected static final int RESOLVE_REMAP;

  static final int[][][] DATE_PRECEDENCE;

  static final int[][][] DOW_PRECEDENCE;

  private static final int[] FIND_ZONE_TRANSITION_TIME_UNITS;

  private static final int[][] GREGORIAN_MONTH_COUNT;

  private static final java.lang.String[] FIELD_NAME;

  private com.ibm.icu.util.ULocale validLocale;

  private com.ibm.icu.util.ULocale actualLocale;

  static final boolean $assertionsDisabled;

  protected com.ibm.icu.util.Calendar();
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #8                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #9                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #10                 // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: return

  protected com.ibm.icu.util.Calendar(com.ibm.icu.util.TimeZone, java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #11                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       6: invokespecial #10                 // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
       9: return

  protected com.ibm.icu.util.Calendar(com.ibm.icu.util.TimeZone, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #13                 // Field lenient:Z
       9: aload_0
      10: iconst_0
      11: putfield      #14                 // Field repeatedWallTime:I
      14: aload_0
      15: iconst_0
      16: putfield      #15                 // Field skippedWallTime:I
      19: aload_0
      20: iconst_2
      21: putfield      #16                 // Field nextStamp:I
      24: aload_0
      25: aload_1
      26: putfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      29: aload_0
      30: aload_2
      31: invokestatic  #18                 // Method getRegionForCalendar:(Lcom/ibm/icu/util/ULocale;)Ljava/lang/String;
      34: invokespecial #19                 // Method setWeekData:(Ljava/lang/String;)V
      37: aload_0
      38: aload_2
      39: invokespecial #20                 // Method setCalendarLocale:(Lcom/ibm/icu/util/ULocale;)V
      42: aload_0
      43: invokespecial #21                 // Method initInternal:()V
      46: return

  private void setCalendarLocale(com.ibm.icu.util.ULocale);
    Code:
       0: aload_1
       1: astore_2
       2: aload_1
       3: invokevirtual #22                 // Method com/ibm/icu/util/ULocale.getVariant:()Ljava/lang/String;
       6: invokevirtual #23                 // Method java/lang/String.length:()I
       9: ifne          19
      12: aload_1
      13: invokevirtual #24                 // Method com/ibm/icu/util/ULocale.getKeywords:()Ljava/util/Iterator;
      16: ifnull        125
      19: new           #25                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      26: astore_3
      27: aload_3
      28: aload_1
      29: invokevirtual #27                 // Method com/ibm/icu/util/ULocale.getLanguage:()Ljava/lang/String;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: invokevirtual #29                 // Method com/ibm/icu/util/ULocale.getScript:()Ljava/lang/String;
      40: astore        4
      42: aload         4
      44: invokevirtual #23                 // Method java/lang/String.length:()I
      47: ifle          62
      50: aload_3
      51: ldc           #30                 // String _
      53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: aload_1
      63: invokevirtual #31                 // Method com/ibm/icu/util/ULocale.getCountry:()Ljava/lang/String;
      66: astore        5
      68: aload         5
      70: invokevirtual #23                 // Method java/lang/String.length:()I
      73: ifle          88
      76: aload_3
      77: ldc           #30                 // String _
      79: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         5
      84: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_1
      89: ldc           #32                 // String calendar
      91: invokevirtual #33                 // Method com/ibm/icu/util/ULocale.getKeywordValue:(Ljava/lang/String;)Ljava/lang/String;
      94: astore        6
      96: aload         6
      98: ifnull        113
     101: aload_3
     102: ldc           #34                 // String @calendar=
     104: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload         6
     109: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: pop
     113: new           #35                 // class com/ibm/icu/util/ULocale
     116: dup
     117: aload_3
     118: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #37                 // Method com/ibm/icu/util/ULocale."<init>":(Ljava/lang/String;)V
     124: astore_2
     125: aload_0
     126: aload_2
     127: aload_2
     128: invokevirtual #38                 // Method setLocale:(Lcom/ibm/icu/util/ULocale;Lcom/ibm/icu/util/ULocale;)V
     131: return

  private void recalculateStamp();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #16                 // Field nextStamp:I
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_0
       9: getfield      #39                 // Field stamp:[I
      12: arraylength
      13: if_icmpge     104
      16: getstatic     #40                 // Field STAMP_MAX:I
      19: istore_2
      20: iconst_m1
      21: istore_1
      22: iconst_0
      23: istore        4
      25: iload         4
      27: aload_0
      28: getfield      #39                 // Field stamp:[I
      31: arraylength
      32: if_icmpge     77
      35: aload_0
      36: getfield      #39                 // Field stamp:[I
      39: iload         4
      41: iaload
      42: aload_0
      43: getfield      #16                 // Field nextStamp:I
      46: if_icmple     71
      49: aload_0
      50: getfield      #39                 // Field stamp:[I
      53: iload         4
      55: iaload
      56: iload_2
      57: if_icmpge     71
      60: aload_0
      61: getfield      #39                 // Field stamp:[I
      64: iload         4
      66: iaload
      67: istore_2
      68: iload         4
      70: istore_1
      71: iinc          4, 1
      74: goto          25
      77: iload_1
      78: iflt          104
      81: aload_0
      82: getfield      #39                 // Field stamp:[I
      85: iload_1
      86: aload_0
      87: dup
      88: getfield      #16                 // Field nextStamp:I
      91: iconst_1
      92: iadd
      93: dup_x1
      94: putfield      #16                 // Field nextStamp:I
      97: iastore
      98: iinc          3, 1
     101: goto          7
     104: aload_0
     105: dup
     106: getfield      #16                 // Field nextStamp:I
     109: iconst_1
     110: iadd
     111: putfield      #16                 // Field nextStamp:I
     114: return

  private void initInternal();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #41                 // Method handleCreateFields:()[I
       5: putfield      #42                 // Field fields:[I
       8: aload_0
       9: getfield      #42                 // Field fields:[I
      12: ifnull        35
      15: aload_0
      16: getfield      #42                 // Field fields:[I
      19: arraylength
      20: bipush        23
      22: if_icmplt     35
      25: aload_0
      26: getfield      #42                 // Field fields:[I
      29: arraylength
      30: bipush        32
      32: if_icmple     45
      35: new           #43                 // class java/lang/IllegalStateException
      38: dup
      39: ldc           #44                 // String Invalid fields[]
      41: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: aload_0
      47: getfield      #42                 // Field fields:[I
      50: arraylength
      51: newarray       int
      53: putfield      #39                 // Field stamp:[I
      56: ldc           #46                 // int 4718695
      58: istore_1
      59: bipush        23
      61: istore_2
      62: iload_2
      63: aload_0
      64: getfield      #42                 // Field fields:[I
      67: arraylength
      68: if_icmpge     83
      71: iload_1
      72: iconst_1
      73: iload_2
      74: ishl
      75: ior
      76: istore_1
      77: iinc          2, 1
      80: goto          62
      83: aload_0
      84: iload_1
      85: putfield      #47                 // Field internalSetMask:I
      88: return

  public static com.ibm.icu.util.Calendar getInstance();
    Code:
       0: aconst_null
       1: aconst_null
       2: invokestatic  #48                 // Method getInstanceInternal:(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar;
       5: areturn

  public static com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #48                 // Method getInstanceInternal:(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar;
       5: areturn

  public static com.ibm.icu.util.Calendar getInstance(java.util.Locale);
    Code:
       0: aconst_null
       1: aload_0
       2: invokestatic  #11                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       5: invokestatic  #48                 // Method getInstanceInternal:(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar;
       8: areturn

  public static com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.ULocale);
    Code:
       0: aconst_null
       1: aload_0
       2: invokestatic  #48                 // Method getInstanceInternal:(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar;
       5: areturn

  public static com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.TimeZone, java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #11                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       5: invokestatic  #48                 // Method getInstanceInternal:(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar;
       8: areturn

  public static com.ibm.icu.util.Calendar getInstance(com.ibm.icu.util.TimeZone, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #48                 // Method getInstanceInternal:(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar;
       5: areturn

  private static com.ibm.icu.util.Calendar getInstanceInternal(com.ibm.icu.util.TimeZone, com.ibm.icu.util.ULocale);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: getstatic     #8                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #9                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: astore_1
      11: aload_0
      12: ifnonnull     19
      15: invokestatic  #7                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
      18: astore_0
      19: aload_1
      20: invokestatic  #49                 // Method createInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar;
      23: astore_2
      24: aload_2
      25: aload_0
      26: invokevirtual #50                 // Method setTimeZone:(Lcom/ibm/icu/util/TimeZone;)V
      29: aload_2
      30: invokestatic  #51                 // Method java/lang/System.currentTimeMillis:()J
      33: invokevirtual #52                 // Method setTimeInMillis:(J)V
      36: aload_2
      37: areturn

  private static java.lang.String getRegionForCalendar(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #53                 // Method com/ibm/icu/util/ULocale.getRegionForSupplementalData:(Lcom/ibm/icu/util/ULocale;Z)Ljava/lang/String;
       5: astore_1
       6: aload_1
       7: invokevirtual #23                 // Method java/lang/String.length:()I
      10: ifne          16
      13: ldc           #54                 // String 001
      15: astore_1
      16: aload_1
      17: areturn

  private static com.ibm.icu.util.Calendar$CalType getCalendarTypeForLocale(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method com/ibm/icu/impl/CalendarUtil.getCalendarType:(Lcom/ibm/icu/util/ULocale;)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnull        60
       9: aload_1
      10: getstatic     #56                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      13: invokevirtual #57                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      16: astore_1
      17: invokestatic  #58                 // Method com/ibm/icu/util/Calendar$CalType.values:()[Lcom/ibm/icu/util/Calendar$CalType;
      20: astore_2
      21: aload_2
      22: arraylength
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     60
      33: aload_2
      34: iload         4
      36: aaload
      37: astore        5
      39: aload_1
      40: aload         5
      42: getfield      #59                 // Field com/ibm/icu/util/Calendar$CalType.id:Ljava/lang/String;
      45: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          54
      51: aload         5
      53: areturn
      54: iinc          4, 1
      57: goto          27
      60: getstatic     #61                 // Field com/ibm/icu/util/Calendar$CalType.UNKNOWN:Lcom/ibm/icu/util/Calendar$CalType;
      63: areturn

  private static com.ibm.icu.util.Calendar createInstance(com.ibm.icu.util.ULocale);
    Code:
       0: aconst_null
       1: astore_1
       2: invokestatic  #7                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       5: astore_2
       6: aload_0
       7: invokestatic  #62                 // Method getCalendarTypeForLocale:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar$CalType;
      10: astore_3
      11: aload_3
      12: getstatic     #61                 // Field com/ibm/icu/util/Calendar$CalType.UNKNOWN:Lcom/ibm/icu/util/Calendar$CalType;
      15: if_acmpne     22
      18: getstatic     #63                 // Field com/ibm/icu/util/Calendar$CalType.GREGORIAN:Lcom/ibm/icu/util/Calendar$CalType;
      21: astore_3
      22: getstatic     #64                 // Field com/ibm/icu/util/Calendar$1.$SwitchMap$com$ibm$icu$util$Calendar$CalType:[I
      25: aload_3
      26: invokevirtual #65                 // Method com/ibm/icu/util/Calendar$CalType.ordinal:()I
      29: iaload
      30: tableswitch   { // 1 to 18
                     1: 116
                     2: 129
                     3: 152
                     4: 165
                     5: 178
                     6: 191
                     7: 204
                     8: 217
                     9: 238
                    10: 251
                    11: 264
                    12: 264
                    13: 264
                    14: 264
                    15: 264
                    16: 277
                    17: 290
                    18: 303
               default: 316
          }
     116: new           #66                 // class com/ibm/icu/util/GregorianCalendar
     119: dup
     120: aload_2
     121: aload_0
     122: invokespecial #67                 // Method com/ibm/icu/util/GregorianCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     125: astore_1
     126: goto          326
     129: new           #66                 // class com/ibm/icu/util/GregorianCalendar
     132: dup
     133: aload_2
     134: aload_0
     135: invokespecial #67                 // Method com/ibm/icu/util/GregorianCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     138: astore_1
     139: aload_1
     140: iconst_2
     141: invokevirtual #68                 // Method setFirstDayOfWeek:(I)V
     144: aload_1
     145: iconst_4
     146: invokevirtual #69                 // Method setMinimalDaysInFirstWeek:(I)V
     149: goto          326
     152: new           #70                 // class com/ibm/icu/util/BuddhistCalendar
     155: dup
     156: aload_2
     157: aload_0
     158: invokespecial #71                 // Method com/ibm/icu/util/BuddhistCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     161: astore_1
     162: goto          326
     165: new           #72                 // class com/ibm/icu/util/ChineseCalendar
     168: dup
     169: aload_2
     170: aload_0
     171: invokespecial #73                 // Method com/ibm/icu/util/ChineseCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     174: astore_1
     175: goto          326
     178: new           #74                 // class com/ibm/icu/util/CopticCalendar
     181: dup
     182: aload_2
     183: aload_0
     184: invokespecial #75                 // Method com/ibm/icu/util/CopticCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     187: astore_1
     188: goto          326
     191: new           #76                 // class com/ibm/icu/util/DangiCalendar
     194: dup
     195: aload_2
     196: aload_0
     197: invokespecial #77                 // Method com/ibm/icu/util/DangiCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     200: astore_1
     201: goto          326
     204: new           #78                 // class com/ibm/icu/util/EthiopicCalendar
     207: dup
     208: aload_2
     209: aload_0
     210: invokespecial #79                 // Method com/ibm/icu/util/EthiopicCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     213: astore_1
     214: goto          326
     217: new           #78                 // class com/ibm/icu/util/EthiopicCalendar
     220: dup
     221: aload_2
     222: aload_0
     223: invokespecial #79                 // Method com/ibm/icu/util/EthiopicCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     226: astore_1
     227: aload_1
     228: checkcast     #78                 // class com/ibm/icu/util/EthiopicCalendar
     231: iconst_1
     232: invokevirtual #80                 // Method com/ibm/icu/util/EthiopicCalendar.setAmeteAlemEra:(Z)V
     235: goto          326
     238: new           #81                 // class com/ibm/icu/util/HebrewCalendar
     241: dup
     242: aload_2
     243: aload_0
     244: invokespecial #82                 // Method com/ibm/icu/util/HebrewCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     247: astore_1
     248: goto          326
     251: new           #83                 // class com/ibm/icu/util/IndianCalendar
     254: dup
     255: aload_2
     256: aload_0
     257: invokespecial #84                 // Method com/ibm/icu/util/IndianCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     260: astore_1
     261: goto          326
     264: new           #85                 // class com/ibm/icu/util/IslamicCalendar
     267: dup
     268: aload_2
     269: aload_0
     270: invokespecial #86                 // Method com/ibm/icu/util/IslamicCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     273: astore_1
     274: goto          326
     277: new           #87                 // class com/ibm/icu/util/JapaneseCalendar
     280: dup
     281: aload_2
     282: aload_0
     283: invokespecial #88                 // Method com/ibm/icu/util/JapaneseCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     286: astore_1
     287: goto          326
     290: new           #89                 // class com/ibm/icu/util/PersianCalendar
     293: dup
     294: aload_2
     295: aload_0
     296: invokespecial #90                 // Method com/ibm/icu/util/PersianCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     299: astore_1
     300: goto          326
     303: new           #91                 // class com/ibm/icu/util/TaiwanCalendar
     306: dup
     307: aload_2
     308: aload_0
     309: invokespecial #92                 // Method com/ibm/icu/util/TaiwanCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
     312: astore_1
     313: goto          326
     316: new           #93                 // class java/lang/IllegalArgumentException
     319: dup
     320: ldc           #94                 // String Unknown calendar type
     322: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     325: athrow
     326: aload_1
     327: areturn

  public static java.util.Locale[] getAvailableLocales();
    Code:
       0: invokestatic  #96                 // Method com/ibm/icu/impl/ICUResourceBundle.getAvailableLocales:()[Ljava/util/Locale;
       3: areturn

  public static com.ibm.icu.util.ULocale[] getAvailableULocales();
    Code:
       0: invokestatic  #97                 // Method com/ibm/icu/impl/ICUResourceBundle.getAvailableULocales:()[Lcom/ibm/icu/util/ULocale;
       3: areturn

  public static final java.lang.String[] getKeywordValuesForLocale(java.lang.String, com.ibm.icu.util.ULocale, boolean);
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #53                 // Method com/ibm/icu/util/ULocale.getRegionForSupplementalData:(Lcom/ibm/icu/util/ULocale;Z)Ljava/lang/String;
       5: astore_3
       6: new           #98                 // class java/util/ArrayList
       9: dup
      10: invokespecial #99                 // Method java/util/ArrayList."<init>":()V
      13: astore        4
      15: ldc           #101                // String com/ibm/icu/impl/data/icudt61b
      17: ldc           #102                // String supplementalData
      19: getstatic     #103                // Field com/ibm/icu/impl/ICUResourceBundle.ICU_DATA_CLASS_LOADER:Ljava/lang/ClassLoader;
      22: invokestatic  #104                // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Lcom/ibm/icu/util/UResourceBundle;
      25: astore        5
      27: aload         5
      29: ldc           #105                // String calendarPreferenceData
      31: invokevirtual #106                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      34: astore        6
      36: aconst_null
      37: astore        7
      39: aload         6
      41: aload_3
      42: invokevirtual #106                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      45: astore        7
      47: goto          61
      50: astore        8
      52: aload         6
      54: ldc           #54                 // String 001
      56: invokevirtual #106                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      59: astore        7
      61: aload         7
      63: invokevirtual #108                // Method com/ibm/icu/util/UResourceBundle.getStringArray:()[Ljava/lang/String;
      66: astore        8
      68: iload_2
      69: ifeq          75
      72: aload         8
      74: areturn
      75: iconst_0
      76: istore        9
      78: iload         9
      80: aload         8
      82: arraylength
      83: if_icmpge     103
      86: aload         4
      88: aload         8
      90: iload         9
      92: aaload
      93: invokevirtual #109                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      96: pop
      97: iinc          9, 1
     100: goto          78
     103: invokestatic  #58                 // Method com/ibm/icu/util/Calendar$CalType.values:()[Lcom/ibm/icu/util/Calendar$CalType;
     106: astore        9
     108: aload         9
     110: arraylength
     111: istore        10
     113: iconst_0
     114: istore        11
     116: iload         11
     118: iload         10
     120: if_icmpge     160
     123: aload         9
     125: iload         11
     127: aaload
     128: astore        12
     130: aload         4
     132: aload         12
     134: getfield      #59                 // Field com/ibm/icu/util/Calendar$CalType.id:Ljava/lang/String;
     137: invokevirtual #110                // Method java/util/ArrayList.contains:(Ljava/lang/Object;)Z
     140: ifne          154
     143: aload         4
     145: aload         12
     147: getfield      #59                 // Field com/ibm/icu/util/Calendar$CalType.id:Ljava/lang/String;
     150: invokevirtual #109                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     153: pop
     154: iinc          11, 1
     157: goto          116
     160: aload         4
     162: aload         4
     164: invokevirtual #111                // Method java/util/ArrayList.size:()I
     167: anewarray     #112                // class java/lang/String
     170: invokevirtual #113                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     173: checkcast     #114                // class "[Ljava/lang/String;"
     176: areturn
    Exception table:
       from    to  target type
          39    47    50   Class java/util/MissingResourceException

  public final java.util.Date getTime();
    Code:
       0: new           #115                // class java/util/Date
       3: dup
       4: aload_0
       5: invokevirtual #116                // Method getTimeInMillis:()J
       8: invokespecial #117                // Method java/util/Date."<init>":(J)V
      11: areturn

  public final void setTime(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #118                // Method java/util/Date.getTime:()J
       5: invokevirtual #52                 // Method setTimeInMillis:(J)V
       8: return

  public long getTimeInMillis();
    Code:
       0: aload_0
       1: getfield      #119                // Field isTimeSet:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #120                // Method updateTime:()V
      11: aload_0
      12: getfield      #121                // Field time:J
      15: lreturn

  public void setTimeInMillis(long);
    Code:
       0: lload_1
       1: ldc2_w        #122                // long 183882168921600000l
       4: lcmp
       5: ifle          49
       8: aload_0
       9: invokevirtual #124                // Method isLenient:()Z
      12: ifeq          22
      15: ldc2_w        #122                // long 183882168921600000l
      18: lstore_1
      19: goto          98
      22: new           #93                 // class java/lang/IllegalArgumentException
      25: dup
      26: new           #25                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #125                // String millis value greater than upper bounds for a Calendar :
      35: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: lload_1
      39: invokevirtual #126                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      42: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: lload_1
      50: ldc2_w        #127                // long -184303902528000000l
      53: lcmp
      54: ifge          98
      57: aload_0
      58: invokevirtual #124                // Method isLenient:()Z
      61: ifeq          71
      64: ldc2_w        #127                // long -184303902528000000l
      67: lstore_1
      68: goto          98
      71: new           #93                 // class java/lang/IllegalArgumentException
      74: dup
      75: new           #25                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #129                // String millis value less than lower bounds for a Calendar :
      84: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: lload_1
      88: invokevirtual #126                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      91: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: lload_1
     100: putfield      #121                // Field time:J
     103: aload_0
     104: aload_0
     105: iconst_0
     106: dup_x1
     107: putfield      #130                // Field areAllFieldsSet:Z
     110: putfield      #131                // Field areFieldsSet:Z
     113: aload_0
     114: aload_0
     115: iconst_1
     116: dup_x1
     117: putfield      #132                // Field areFieldsVirtuallySet:Z
     120: putfield      #119                // Field isTimeSet:Z
     123: iconst_0
     124: istore_3
     125: iload_3
     126: aload_0
     127: getfield      #42                 // Field fields:[I
     130: arraylength
     131: if_icmpge     154
     134: aload_0
     135: getfield      #42                 // Field fields:[I
     138: iload_3
     139: aload_0
     140: getfield      #39                 // Field stamp:[I
     143: iload_3
     144: iconst_0
     145: dup_x2
     146: iastore
     147: iastore
     148: iinc          3, 1
     151: goto          125
     154: return

  public final int get(int);
    Code:
       0: aload_0
       1: invokevirtual #133                // Method complete:()V
       4: aload_0
       5: getfield      #42                 // Field fields:[I
       8: iload_1
       9: iaload
      10: ireturn

  protected final int internalGet(int);
    Code:
       0: aload_0
       1: getfield      #42                 // Field fields:[I
       4: iload_1
       5: iaload
       6: ireturn

  protected final int internalGet(int, int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field stamp:[I
       4: iload_1
       5: iaload
       6: ifle          18
       9: aload_0
      10: getfield      #42                 // Field fields:[I
      13: iload_1
      14: iaload
      15: goto          19
      18: iload_2
      19: ireturn

  public final void set(int, int);
    Code:
       0: aload_0
       1: getfield      #132                // Field areFieldsVirtuallySet:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #134                // Method computeFields:()V
      11: aload_0
      12: getfield      #42                 // Field fields:[I
      15: iload_1
      16: iload_2
      17: iastore
      18: aload_0
      19: getfield      #16                 // Field nextStamp:I
      22: getstatic     #40                 // Field STAMP_MAX:I
      25: if_icmpne     32
      28: aload_0
      29: invokespecial #135                // Method recalculateStamp:()V
      32: aload_0
      33: getfield      #39                 // Field stamp:[I
      36: iload_1
      37: aload_0
      38: dup
      39: getfield      #16                 // Field nextStamp:I
      42: dup_x1
      43: iconst_1
      44: iadd
      45: putfield      #16                 // Field nextStamp:I
      48: iastore
      49: aload_0
      50: aload_0
      51: aload_0
      52: iconst_0
      53: dup_x1
      54: putfield      #132                // Field areFieldsVirtuallySet:Z
      57: dup_x1
      58: putfield      #131                // Field areFieldsSet:Z
      61: putfield      #119                // Field isTimeSet:Z
      64: return

  public final void set(int, int, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokevirtual #136                // Method set:(II)V
       6: aload_0
       7: iconst_2
       8: iload_2
       9: invokevirtual #136                // Method set:(II)V
      12: aload_0
      13: iconst_5
      14: iload_3
      15: invokevirtual #136                // Method set:(II)V
      18: return

  public final void set(int, int, int, int, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokevirtual #136                // Method set:(II)V
       6: aload_0
       7: iconst_2
       8: iload_2
       9: invokevirtual #136                // Method set:(II)V
      12: aload_0
      13: iconst_5
      14: iload_3
      15: invokevirtual #136                // Method set:(II)V
      18: aload_0
      19: bipush        11
      21: iload         4
      23: invokevirtual #136                // Method set:(II)V
      26: aload_0
      27: bipush        12
      29: iload         5
      31: invokevirtual #136                // Method set:(II)V
      34: return

  public final void set(int, int, int, int, int, int);
    Code:
       0: aload_0
       1: iconst_1
       2: iload_1
       3: invokevirtual #136                // Method set:(II)V
       6: aload_0
       7: iconst_2
       8: iload_2
       9: invokevirtual #136                // Method set:(II)V
      12: aload_0
      13: iconst_5
      14: iload_3
      15: invokevirtual #136                // Method set:(II)V
      18: aload_0
      19: bipush        11
      21: iload         4
      23: invokevirtual #136                // Method set:(II)V
      26: aload_0
      27: bipush        12
      29: iload         5
      31: invokevirtual #136                // Method set:(II)V
      34: aload_0
      35: bipush        13
      37: iload         6
      39: invokevirtual #136                // Method set:(II)V
      42: return

  private static int gregoYearFromIslamicStart(int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_0
       3: sipush        1397
       6: if_icmplt     46
       9: iload_0
      10: sipush        1397
      13: isub
      14: bipush        67
      16: idiv
      17: istore_1
      18: iload_0
      19: sipush        1397
      22: isub
      23: bipush        67
      25: irem
      26: istore_2
      27: iconst_2
      28: iload_1
      29: imul
      30: iload_2
      31: bipush        33
      33: if_icmplt     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_3
      43: goto          83
      46: iload_0
      47: sipush        1396
      50: isub
      51: bipush        67
      53: idiv
      54: iconst_1
      55: isub
      56: istore_1
      57: iload_0
      58: sipush        1396
      61: isub
      62: ineg
      63: bipush        67
      65: irem
      66: istore_2
      67: iconst_2
      68: iload_1
      69: imul
      70: iload_2
      71: bipush        33
      73: if_icmpgt     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: iadd
      82: istore_3
      83: iload_0
      84: sipush        579
      87: iadd
      88: iload_3
      89: isub
      90: ireturn

  public final int getRelatedYear();
    Code:
       0: aload_0
       1: bipush        19
       3: invokevirtual #137                // Method get:(I)I
       6: istore_1
       7: getstatic     #63                 // Field com/ibm/icu/util/Calendar$CalType.GREGORIAN:Lcom/ibm/icu/util/Calendar$CalType;
      10: astore_2
      11: aload_0
      12: invokevirtual #138                // Method getType:()Ljava/lang/String;
      15: astore_3
      16: invokestatic  #58                 // Method com/ibm/icu/util/Calendar$CalType.values:()[Lcom/ibm/icu/util/Calendar$CalType;
      19: astore        4
      21: aload         4
      23: arraylength
      24: istore        5
      26: iconst_0
      27: istore        6
      29: iload         6
      31: iload         5
      33: if_icmpge     67
      36: aload         4
      38: iload         6
      40: aaload
      41: astore        7
      43: aload_3
      44: aload         7
      46: getfield      #59                 // Field com/ibm/icu/util/Calendar$CalType.id:Ljava/lang/String;
      49: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      52: ifeq          61
      55: aload         7
      57: astore_2
      58: goto          67
      61: iinc          6, 1
      64: goto          29
      67: getstatic     #64                 // Field com/ibm/icu/util/Calendar$1.$SwitchMap$com$ibm$icu$util$Calendar$CalType:[I
      70: aload_2
      71: invokevirtual #65                 // Method com/ibm/icu/util/Calendar$CalType.ordinal:()I
      74: iaload
      75: tableswitch   { // 4 to 17
                     4: 162
                     5: 177
                     6: 201
                     7: 186
                     8: 192
                     9: 153
                    10: 171
                    11: 210
                    12: 210
                    13: 210
                    14: 210
                    15: 210
                    16: 218
                    17: 144
               default: 218
          }
     144: iinc_w        1, 622
     150: goto          218
     153: iinc_w        1, -3760
     159: goto          218
     162: iinc_w        1, -2637
     168: goto          218
     171: iinc          1, 79
     174: goto          218
     177: iinc_w        1, 284
     183: goto          218
     186: iinc          1, 8
     189: goto          218
     192: iinc_w        1, -5492
     198: goto          218
     201: iinc_w        1, -2333
     207: goto          218
     210: iload_1
     211: invokestatic  #139                // Method gregoYearFromIslamicStart:(I)I
     214: istore_1
     215: goto          218
     218: iload_1
     219: ireturn

  private static int firstIslamicStartYearFromGrego(int);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_0
       3: sipush        1977
       6: if_icmplt     46
       9: iload_0
      10: sipush        1977
      13: isub
      14: bipush        65
      16: idiv
      17: istore_1
      18: iload_0
      19: sipush        1977
      22: isub
      23: bipush        65
      25: irem
      26: istore_2
      27: iconst_2
      28: iload_1
      29: imul
      30: iload_2
      31: bipush        32
      33: if_icmplt     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: iadd
      42: istore_3
      43: goto          83
      46: iload_0
      47: sipush        1976
      50: isub
      51: bipush        65
      53: idiv
      54: iconst_1
      55: isub
      56: istore_1
      57: iload_0
      58: sipush        1976
      61: isub
      62: ineg
      63: bipush        65
      65: irem
      66: istore_2
      67: iconst_2
      68: iload_1
      69: imul
      70: iload_2
      71: bipush        32
      73: if_icmpgt     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: iadd
      82: istore_3
      83: iload_0
      84: sipush        579
      87: isub
      88: iload_3
      89: iadd
      90: ireturn

  public final void setRelatedYear(int);
    Code:
       0: getstatic     #63                 // Field com/ibm/icu/util/Calendar$CalType.GREGORIAN:Lcom/ibm/icu/util/Calendar$CalType;
       3: astore_2
       4: aload_0
       5: invokevirtual #138                // Method getType:()Ljava/lang/String;
       8: astore_3
       9: invokestatic  #58                 // Method com/ibm/icu/util/Calendar$CalType.values:()[Lcom/ibm/icu/util/Calendar$CalType;
      12: astore        4
      14: aload         4
      16: arraylength
      17: istore        5
      19: iconst_0
      20: istore        6
      22: iload         6
      24: iload         5
      26: if_icmpge     60
      29: aload         4
      31: iload         6
      33: aaload
      34: astore        7
      36: aload_3
      37: aload         7
      39: getfield      #59                 // Field com/ibm/icu/util/Calendar$CalType.id:Ljava/lang/String;
      42: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifeq          54
      48: aload         7
      50: astore_2
      51: goto          60
      54: iinc          6, 1
      57: goto          22
      60: getstatic     #64                 // Field com/ibm/icu/util/Calendar$1.$SwitchMap$com$ibm$icu$util$Calendar$CalType:[I
      63: aload_2
      64: invokevirtual #65                 // Method com/ibm/icu/util/Calendar$CalType.ordinal:()I
      67: iaload
      68: tableswitch   { // 4 to 17
                     4: 158
                     5: 173
                     6: 197
                     7: 182
                     8: 188
                     9: 149
                    10: 167
                    11: 206
                    12: 206
                    13: 206
                    14: 206
                    15: 206
                    16: 214
                    17: 140
               default: 214
          }
     140: iinc_w        1, -622
     146: goto          214
     149: iinc_w        1, 3760
     155: goto          214
     158: iinc_w        1, 2637
     164: goto          214
     167: iinc          1, -79
     170: goto          214
     173: iinc_w        1, -284
     179: goto          214
     182: iinc          1, -8
     185: goto          214
     188: iinc_w        1, 5492
     194: goto          214
     197: iinc_w        1, 2333
     203: goto          214
     206: iload_1
     207: invokestatic  #140                // Method firstIslamicStartYearFromGrego:(I)I
     210: istore_1
     211: goto          214
     214: aload_0
     215: bipush        19
     217: iload_1
     218: invokevirtual #136                // Method set:(II)V
     221: return

  public final void clear();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #42                 // Field fields:[I
       7: arraylength
       8: if_icmpge     31
      11: aload_0
      12: getfield      #42                 // Field fields:[I
      15: iload_1
      16: aload_0
      17: getfield      #39                 // Field stamp:[I
      20: iload_1
      21: iconst_0
      22: dup_x2
      23: iastore
      24: iastore
      25: iinc          1, 1
      28: goto          2
      31: aload_0
      32: aload_0
      33: aload_0
      34: aload_0
      35: iconst_0
      36: dup_x1
      37: putfield      #132                // Field areFieldsVirtuallySet:Z
      40: dup_x1
      41: putfield      #130                // Field areAllFieldsSet:Z
      44: dup_x1
      45: putfield      #131                // Field areFieldsSet:Z
      48: putfield      #119                // Field isTimeSet:Z
      51: return

  public final void clear(int);
    Code:
       0: aload_0
       1: getfield      #132                // Field areFieldsVirtuallySet:Z
       4: ifeq          11
       7: aload_0
       8: invokevirtual #134                // Method computeFields:()V
      11: aload_0
      12: getfield      #42                 // Field fields:[I
      15: iload_1
      16: iconst_0
      17: iastore
      18: aload_0
      19: getfield      #39                 // Field stamp:[I
      22: iload_1
      23: iconst_0
      24: iastore
      25: aload_0
      26: aload_0
      27: aload_0
      28: aload_0
      29: iconst_0
      30: dup_x1
      31: putfield      #132                // Field areFieldsVirtuallySet:Z
      34: dup_x1
      35: putfield      #130                // Field areAllFieldsSet:Z
      38: dup_x1
      39: putfield      #131                // Field areFieldsSet:Z
      42: putfield      #119                // Field isTimeSet:Z
      45: return

  public final boolean isSet(int);
    Code:
       0: aload_0
       1: getfield      #132                // Field areFieldsVirtuallySet:Z
       4: ifne          16
       7: aload_0
       8: getfield      #39                 // Field stamp:[I
      11: iload_1
      12: iaload
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected void complete();
    Code:
       0: aload_0
       1: getfield      #119                // Field isTimeSet:Z
       4: ifne          11
       7: aload_0
       8: invokespecial #120                // Method updateTime:()V
      11: aload_0
      12: getfield      #131                // Field areFieldsSet:Z
      15: ifne          32
      18: aload_0
      19: invokevirtual #134                // Method computeFields:()V
      22: aload_0
      23: iconst_1
      24: putfield      #131                // Field areFieldsSet:Z
      27: aload_0
      28: iconst_1
      29: putfield      #130                // Field areAllFieldsSet:Z
      32: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #1                  // class com/ibm/icu/util/Calendar
      30: astore_2
      31: aload_0
      32: aload_2
      33: invokevirtual #142                // Method isEquivalentTo:(Lcom/ibm/icu/util/Calendar;)Z
      36: ifeq          58
      39: aload_0
      40: invokevirtual #116                // Method getTimeInMillis:()J
      43: aload_2
      44: invokevirtual #143                // Method getTime:()Ljava/util/Date;
      47: invokevirtual #118                // Method java/util/Date.getTime:()J
      50: lcmp
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public boolean isEquivalentTo(com.ibm.icu.util.Calendar);
    Code:
       0: aload_0
       1: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: if_acmpne     84
      11: aload_0
      12: invokevirtual #124                // Method isLenient:()Z
      15: aload_1
      16: invokevirtual #124                // Method isLenient:()Z
      19: if_icmpne     84
      22: aload_0
      23: invokevirtual #144                // Method getFirstDayOfWeek:()I
      26: aload_1
      27: invokevirtual #144                // Method getFirstDayOfWeek:()I
      30: if_icmpne     84
      33: aload_0
      34: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
      37: aload_1
      38: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
      41: if_icmpne     84
      44: aload_0
      45: invokevirtual #146                // Method getTimeZone:()Lcom/ibm/icu/util/TimeZone;
      48: aload_1
      49: invokevirtual #146                // Method getTimeZone:()Lcom/ibm/icu/util/TimeZone;
      52: invokevirtual #147                // Method com/ibm/icu/util/TimeZone.equals:(Ljava/lang/Object;)Z
      55: ifeq          84
      58: aload_0
      59: invokevirtual #148                // Method getRepeatedWallTimeOption:()I
      62: aload_1
      63: invokevirtual #148                // Method getRepeatedWallTimeOption:()I
      66: if_icmpne     84
      69: aload_0
      70: invokevirtual #149                // Method getSkippedWallTimeOption:()I
      73: aload_1
      74: invokevirtual #149                // Method getSkippedWallTimeOption:()I
      77: if_icmpne     84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field lenient:Z
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: aload_0
      13: getfield      #150                // Field firstDayOfWeek:I
      16: iconst_1
      17: ishl
      18: ior
      19: aload_0
      20: getfield      #151                // Field minimalDaysInFirstWeek:I
      23: iconst_4
      24: ishl
      25: ior
      26: aload_0
      27: getfield      #14                 // Field repeatedWallTime:I
      30: bipush        7
      32: ishl
      33: ior
      34: aload_0
      35: getfield      #15                 // Field skippedWallTime:I
      38: bipush        9
      40: ishl
      41: ior
      42: aload_0
      43: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      46: invokevirtual #152                // Method com/ibm/icu/util/TimeZone.hashCode:()I
      49: bipush        11
      51: ishl
      52: ior
      53: ireturn

  private long compare(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #1                  // class com/ibm/icu/util/Calendar
       4: ifeq          18
       7: aload_1
       8: checkcast     #1                  // class com/ibm/icu/util/Calendar
      11: invokevirtual #116                // Method getTimeInMillis:()J
      14: lstore_2
      15: goto          63
      18: aload_1
      19: instanceof    #115                // class java/util/Date
      22: ifeq          36
      25: aload_1
      26: checkcast     #115                // class java/util/Date
      29: invokevirtual #118                // Method java/util/Date.getTime:()J
      32: lstore_2
      33: goto          63
      36: new           #93                 // class java/lang/IllegalArgumentException
      39: dup
      40: new           #25                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_1
      48: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: ldc           #154                // String is not a Calendar or Date
      53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: invokevirtual #116                // Method getTimeInMillis:()J
      67: lload_2
      68: lsub
      69: lreturn

  public boolean before(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #155                // Method compare:(Ljava/lang/Object;)J
       5: lconst_0
       6: lcmp
       7: ifge          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean after(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #155                // Method compare:(Ljava/lang/Object;)J
       5: lconst_0
       6: lcmp
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int getActualMaximum(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 21
                     0: 175
                     1: 184
                     2: 184
                     3: 184
                     4: 184
                     5: 104
                     6: 142
                     7: 175
                     8: 184
                     9: 175
                    10: 175
                    11: 175
                    12: 175
                    13: 175
                    14: 175
                    15: 175
                    16: 175
                    17: 184
                    18: 175
                    19: 184
                    20: 175
                    21: 175
               default: 184
          }
     104: aload_0
     105: invokevirtual #156                // Method clone:()Ljava/lang/Object;
     108: checkcast     #1                  // class com/ibm/icu/util/Calendar
     111: astore_3
     112: aload_3
     113: iconst_1
     114: invokevirtual #157                // Method setLenient:(Z)V
     117: aload_3
     118: iload_1
     119: iconst_0
     120: invokevirtual #158                // Method prepareGetActual:(IZ)V
     123: aload_0
     124: aload_3
     125: bipush        19
     127: invokevirtual #137                // Method get:(I)I
     130: aload_3
     131: iconst_2
     132: invokevirtual #137                // Method get:(I)I
     135: invokevirtual #159                // Method handleGetMonthLength:(II)I
     138: istore_2
     139: goto          200
     142: aload_0
     143: invokevirtual #156                // Method clone:()Ljava/lang/Object;
     146: checkcast     #1                  // class com/ibm/icu/util/Calendar
     149: astore_3
     150: aload_3
     151: iconst_1
     152: invokevirtual #157                // Method setLenient:(Z)V
     155: aload_3
     156: iload_1
     157: iconst_0
     158: invokevirtual #158                // Method prepareGetActual:(IZ)V
     161: aload_0
     162: aload_3
     163: bipush        19
     165: invokevirtual #137                // Method get:(I)I
     168: invokevirtual #160                // Method handleGetYearLength:(I)I
     171: istore_2
     172: goto          200
     175: aload_0
     176: iload_1
     177: invokevirtual #161                // Method getMaximum:(I)I
     180: istore_2
     181: goto          200
     184: aload_0
     185: iload_1
     186: aload_0
     187: iload_1
     188: invokevirtual #162                // Method getLeastMaximum:(I)I
     191: aload_0
     192: iload_1
     193: invokevirtual #161                // Method getMaximum:(I)I
     196: invokespecial #163                // Method getActualHelper:(III)I
     199: istore_2
     200: iload_2
     201: ireturn

  public int getActualMinimum(int);
    Code:
       0: iload_1
       1: tableswitch   { // 7 to 21
                     7: 76
                     8: 85
                     9: 76
                    10: 76
                    11: 76
                    12: 76
                    13: 76
                    14: 76
                    15: 76
                    16: 76
                    17: 85
                    18: 76
                    19: 85
                    20: 76
                    21: 76
               default: 85
          }
      76: aload_0
      77: iload_1
      78: invokevirtual #164                // Method getMinimum:(I)I
      81: istore_2
      82: goto          101
      85: aload_0
      86: iload_1
      87: aload_0
      88: iload_1
      89: invokevirtual #165                // Method getGreatestMinimum:(I)I
      92: aload_0
      93: iload_1
      94: invokevirtual #164                // Method getMinimum:(I)I
      97: invokespecial #163                // Method getActualHelper:(III)I
     100: istore_2
     101: iload_2
     102: ireturn

  protected void prepareGetActual(int, boolean);
    Code:
       0: aload_0
       1: bipush        21
       3: iconst_0
       4: invokevirtual #136                // Method set:(II)V
       7: iload_1
       8: tableswitch   { // 1 to 19
                     1: 100
                     2: 128
                     3: 162
                     4: 162
                     5: 194
                     6: 194
                     7: 194
                     8: 141
                     9: 194
                    10: 194
                    11: 194
                    12: 194
                    13: 194
                    14: 194
                    15: 194
                    16: 194
                    17: 115
                    18: 194
                    19: 100
               default: 194
          }
     100: aload_0
     101: bipush        6
     103: aload_0
     104: bipush        6
     106: invokevirtual #165                // Method getGreatestMinimum:(I)I
     109: invokevirtual #136                // Method set:(II)V
     112: goto          194
     115: aload_0
     116: iconst_3
     117: aload_0
     118: iconst_3
     119: invokevirtual #165                // Method getGreatestMinimum:(I)I
     122: invokevirtual #136                // Method set:(II)V
     125: goto          194
     128: aload_0
     129: iconst_5
     130: aload_0
     131: iconst_5
     132: invokevirtual #165                // Method getGreatestMinimum:(I)I
     135: invokevirtual #136                // Method set:(II)V
     138: goto          194
     141: aload_0
     142: iconst_5
     143: iconst_1
     144: invokevirtual #136                // Method set:(II)V
     147: aload_0
     148: bipush        7
     150: aload_0
     151: bipush        7
     153: invokevirtual #137                // Method get:(I)I
     156: invokevirtual #136                // Method set:(II)V
     159: goto          194
     162: aload_0
     163: getfield      #150                // Field firstDayOfWeek:I
     166: istore_3
     167: iload_2
     168: ifeq          187
     171: iload_3
     172: bipush        6
     174: iadd
     175: bipush        7
     177: irem
     178: istore_3
     179: iload_3
     180: iconst_1
     181: if_icmpge     187
     184: iinc          3, 7
     187: aload_0
     188: bipush        7
     190: iload_3
     191: invokevirtual #136                // Method set:(II)V
     194: aload_0
     195: iload_1
     196: aload_0
     197: iload_1
     198: invokevirtual #165                // Method getGreatestMinimum:(I)I
     201: invokevirtual #136                // Method set:(II)V
     204: return

  private int getActualHelper(int, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpne     7
       5: iload_2
       6: ireturn
       7: iload_3
       8: iload_2
       9: if_icmple     16
      12: iconst_1
      13: goto          17
      16: iconst_m1
      17: istore        4
      19: aload_0
      20: invokevirtual #156                // Method clone:()Ljava/lang/Object;
      23: checkcast     #1                  // class com/ibm/icu/util/Calendar
      26: astore        5
      28: aload         5
      30: invokevirtual #133                // Method complete:()V
      33: aload         5
      35: iconst_1
      36: invokevirtual #157                // Method setLenient:(Z)V
      39: aload         5
      41: iload_1
      42: iload         4
      44: ifge          51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: invokevirtual #158                // Method prepareGetActual:(IZ)V
      55: aload         5
      57: iload_1
      58: iload_2
      59: invokevirtual #136                // Method set:(II)V
      62: aload         5
      64: iload_1
      65: invokevirtual #137                // Method get:(I)I
      68: iload_2
      69: if_icmpeq     84
      72: iload_1
      73: iconst_4
      74: if_icmpeq     84
      77: iload         4
      79: ifle          84
      82: iload_2
      83: ireturn
      84: iload_2
      85: istore        6
      87: iload_2
      88: iload         4
      90: iadd
      91: istore_2
      92: aload         5
      94: iload_1
      95: iload         4
      97: invokevirtual #166                // Method add:(II)V
     100: aload         5
     102: iload_1
     103: invokevirtual #137                // Method get:(I)I
     106: iload_2
     107: if_icmpeq     113
     110: goto          121
     113: iload_2
     114: istore        6
     116: iload_2
     117: iload_3
     118: if_icmpne     87
     121: iload         6
     123: ireturn

  public final void roll(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: ifeq          10
       6: iconst_1
       7: goto          11
      10: iconst_m1
      11: invokevirtual #167                // Method roll:(II)V
      14: return

  public void roll(int, int);
    Code:
       0: iload_2
       1: ifne          5
       4: return
       5: aload_0
       6: invokevirtual #133                // Method complete:()V
       9: iload_1
      10: tableswitch   { // 0 to 21
                     0: 112
                     1: 284
                     2: 239
                     3: 647
                     4: 474
                     5: 112
                     6: 830
                     7: 923
                     8: 1028
                     9: 112
                    10: 177
                    11: 177
                    12: 112
                    13: 112
                    14: 112
                    15: 1152
                    16: 1152
                    17: 284
                    18: 923
                    19: 451
                    20: 1139
                    21: 112
               default: 1152
          }
     112: aload_0
     113: iload_1
     114: invokevirtual #168                // Method getActualMinimum:(I)I
     117: istore_3
     118: aload_0
     119: iload_1
     120: invokevirtual #169                // Method getActualMaximum:(I)I
     123: istore        4
     125: iload         4
     127: iload_3
     128: isub
     129: iconst_1
     130: iadd
     131: istore        5
     133: aload_0
     134: iload_1
     135: invokevirtual #170                // Method internalGet:(I)I
     138: iload_2
     139: iadd
     140: istore        6
     142: iload         6
     144: iload_3
     145: isub
     146: iload         5
     148: irem
     149: istore        6
     151: iload         6
     153: ifge          163
     156: iload         6
     158: iload         5
     160: iadd
     161: istore        6
     163: iload         6
     165: iload_3
     166: iadd
     167: istore        6
     169: aload_0
     170: iload_1
     171: iload         6
     173: invokevirtual #136                // Method set:(II)V
     176: return
     177: aload_0
     178: invokevirtual #116                // Method getTimeInMillis:()J
     181: lstore_3
     182: aload_0
     183: iload_1
     184: invokevirtual #170                // Method internalGet:(I)I
     187: istore        5
     189: aload_0
     190: iload_1
     191: invokevirtual #161                // Method getMaximum:(I)I
     194: istore        6
     196: iload         5
     198: iload_2
     199: iadd
     200: iload         6
     202: iconst_1
     203: iadd
     204: irem
     205: istore        7
     207: iload         7
     209: ifge          221
     212: iload         7
     214: iload         6
     216: iconst_1
     217: iadd
     218: iadd
     219: istore        7
     221: aload_0
     222: lload_3
     223: ldc2_w        #171                // long 3600000l
     226: iload         7
     228: i2l
     229: iload         5
     231: i2l
     232: lsub
     233: lmul
     234: ladd
     235: invokevirtual #52                 // Method setTimeInMillis:(J)V
     238: return
     239: aload_0
     240: iconst_2
     241: invokevirtual #169                // Method getActualMaximum:(I)I
     244: istore_3
     245: aload_0
     246: iconst_2
     247: invokevirtual #170                // Method internalGet:(I)I
     250: iload_2
     251: iadd
     252: iload_3
     253: iconst_1
     254: iadd
     255: irem
     256: istore        4
     258: iload         4
     260: ifge          271
     263: iload         4
     265: iload_3
     266: iconst_1
     267: iadd
     268: iadd
     269: istore        4
     271: aload_0
     272: iconst_2
     273: iload         4
     275: invokevirtual #136                // Method set:(II)V
     278: aload_0
     279: iconst_5
     280: invokevirtual #173                // Method pinField:(I)V
     283: return
     284: iconst_0
     285: istore_3
     286: aload_0
     287: iconst_0
     288: invokevirtual #137                // Method get:(I)I
     291: istore        4
     293: iload         4
     295: ifne          339
     298: aload_0
     299: invokevirtual #138                // Method getType:()Ljava/lang/String;
     302: astore        5
     304: aload         5
     306: ldc           #174                // String gregorian
     308: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     311: ifne          334
     314: aload         5
     316: ldc           #175                // String roc
     318: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     321: ifne          334
     324: aload         5
     326: ldc           #176                // String coptic
     328: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     331: ifeq          339
     334: iload_2
     335: ineg
     336: istore_2
     337: iconst_1
     338: istore_3
     339: aload_0
     340: iload_1
     341: invokevirtual #170                // Method internalGet:(I)I
     344: iload_2
     345: iadd
     346: istore        5
     348: iload         4
     350: ifgt          359
     353: iload         5
     355: iconst_1
     356: if_icmplt     426
     359: aload_0
     360: iload_1
     361: invokevirtual #169                // Method getActualMaximum:(I)I
     364: istore        6
     366: iload         6
     368: ldc           #177                // int 32768
     370: if_icmpge     414
     373: iload         5
     375: iconst_1
     376: if_icmpge     393
     379: iload         6
     381: iload         5
     383: ineg
     384: iload         6
     386: irem
     387: isub
     388: istore        5
     390: goto          423
     393: iload         5
     395: iload         6
     397: if_icmple     423
     400: iload         5
     402: iconst_1
     403: isub
     404: iload         6
     406: irem
     407: iconst_1
     408: iadd
     409: istore        5
     411: goto          423
     414: iload         5
     416: iconst_1
     417: if_icmpge     423
     420: iconst_1
     421: istore        5
     423: goto          433
     426: iload_3
     427: ifeq          433
     430: iconst_1
     431: istore        5
     433: aload_0
     434: iload_1
     435: iload         5
     437: invokevirtual #136                // Method set:(II)V
     440: aload_0
     441: iconst_2
     442: invokevirtual #173                // Method pinField:(I)V
     445: aload_0
     446: iconst_5
     447: invokevirtual #173                // Method pinField:(I)V
     450: return
     451: aload_0
     452: iload_1
     453: aload_0
     454: iload_1
     455: invokevirtual #170                // Method internalGet:(I)I
     458: iload_2
     459: iadd
     460: invokevirtual #136                // Method set:(II)V
     463: aload_0
     464: iconst_2
     465: invokevirtual #173                // Method pinField:(I)V
     468: aload_0
     469: iconst_5
     470: invokevirtual #173                // Method pinField:(I)V
     473: return
     474: aload_0
     475: bipush        7
     477: invokevirtual #170                // Method internalGet:(I)I
     480: aload_0
     481: invokevirtual #144                // Method getFirstDayOfWeek:()I
     484: isub
     485: istore_3
     486: iload_3
     487: ifge          493
     490: iinc          3, 7
     493: iload_3
     494: aload_0
     495: iconst_5
     496: invokevirtual #170                // Method internalGet:(I)I
     499: isub
     500: iconst_1
     501: iadd
     502: bipush        7
     504: irem
     505: istore        4
     507: iload         4
     509: ifge          515
     512: iinc          4, 7
     515: bipush        7
     517: iload         4
     519: isub
     520: aload_0
     521: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
     524: if_icmpge     537
     527: bipush        8
     529: iload         4
     531: isub
     532: istore        5
     534: goto          543
     537: iconst_1
     538: iload         4
     540: isub
     541: istore        5
     543: aload_0
     544: iconst_5
     545: invokevirtual #169                // Method getActualMaximum:(I)I
     548: istore        6
     550: iload         6
     552: aload_0
     553: iconst_5
     554: invokevirtual #170                // Method internalGet:(I)I
     557: isub
     558: iload_3
     559: iadd
     560: bipush        7
     562: irem
     563: istore        7
     565: iload         6
     567: bipush        7
     569: iadd
     570: iload         7
     572: isub
     573: istore        8
     575: iload         8
     577: iload         5
     579: isub
     580: istore        9
     582: aload_0
     583: iconst_5
     584: invokevirtual #170                // Method internalGet:(I)I
     587: iload_2
     588: bipush        7
     590: imul
     591: iadd
     592: iload         5
     594: isub
     595: iload         9
     597: irem
     598: istore        10
     600: iload         10
     602: ifge          612
     605: iload         10
     607: iload         9
     609: iadd
     610: istore        10
     612: iload         10
     614: iload         5
     616: iadd
     617: istore        10
     619: iload         10
     621: iconst_1
     622: if_icmpge     628
     625: iconst_1
     626: istore        10
     628: iload         10
     630: iload         6
     632: if_icmple     639
     635: iload         6
     637: istore        10
     639: aload_0
     640: iconst_5
     641: iload         10
     643: invokevirtual #136                // Method set:(II)V
     646: return
     647: aload_0
     648: bipush        7
     650: invokevirtual #170                // Method internalGet:(I)I
     653: aload_0
     654: invokevirtual #144                // Method getFirstDayOfWeek:()I
     657: isub
     658: istore_3
     659: iload_3
     660: ifge          666
     663: iinc          3, 7
     666: iload_3
     667: aload_0
     668: bipush        6
     670: invokevirtual #170                // Method internalGet:(I)I
     673: isub
     674: iconst_1
     675: iadd
     676: bipush        7
     678: irem
     679: istore        4
     681: iload         4
     683: ifge          689
     686: iinc          4, 7
     689: bipush        7
     691: iload         4
     693: isub
     694: aload_0
     695: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
     698: if_icmpge     711
     701: bipush        8
     703: iload         4
     705: isub
     706: istore        5
     708: goto          717
     711: iconst_1
     712: iload         4
     714: isub
     715: istore        5
     717: aload_0
     718: bipush        6
     720: invokevirtual #169                // Method getActualMaximum:(I)I
     723: istore        6
     725: iload         6
     727: aload_0
     728: bipush        6
     730: invokevirtual #170                // Method internalGet:(I)I
     733: isub
     734: iload_3
     735: iadd
     736: bipush        7
     738: irem
     739: istore        7
     741: iload         6
     743: bipush        7
     745: iadd
     746: iload         7
     748: isub
     749: istore        8
     751: iload         8
     753: iload         5
     755: isub
     756: istore        9
     758: aload_0
     759: bipush        6
     761: invokevirtual #170                // Method internalGet:(I)I
     764: iload_2
     765: bipush        7
     767: imul
     768: iadd
     769: iload         5
     771: isub
     772: iload         9
     774: irem
     775: istore        10
     777: iload         10
     779: ifge          789
     782: iload         10
     784: iload         9
     786: iadd
     787: istore        10
     789: iload         10
     791: iload         5
     793: iadd
     794: istore        10
     796: iload         10
     798: iconst_1
     799: if_icmpge     805
     802: iconst_1
     803: istore        10
     805: iload         10
     807: iload         6
     809: if_icmple     816
     812: iload         6
     814: istore        10
     816: aload_0
     817: bipush        6
     819: iload         10
     821: invokevirtual #136                // Method set:(II)V
     824: aload_0
     825: iconst_2
     826: invokevirtual #178                // Method clear:(I)V
     829: return
     830: iload_2
     831: i2l
     832: ldc2_w        #179                // long 86400000l
     835: lmul
     836: lstore_3
     837: aload_0
     838: getfield      #121                // Field time:J
     841: aload_0
     842: bipush        6
     844: invokevirtual #170                // Method internalGet:(I)I
     847: iconst_1
     848: isub
     849: i2l
     850: ldc2_w        #179                // long 86400000l
     853: lmul
     854: lsub
     855: lstore        5
     857: aload_0
     858: bipush        6
     860: invokevirtual #169                // Method getActualMaximum:(I)I
     863: istore        7
     865: aload_0
     866: aload_0
     867: getfield      #121                // Field time:J
     870: lload_3
     871: ladd
     872: lload         5
     874: lsub
     875: iload         7
     877: i2l
     878: ldc2_w        #179                // long 86400000l
     881: lmul
     882: lrem
     883: putfield      #121                // Field time:J
     886: aload_0
     887: getfield      #121                // Field time:J
     890: lconst_0
     891: lcmp
     892: ifge          911
     895: aload_0
     896: dup
     897: getfield      #121                // Field time:J
     900: iload         7
     902: i2l
     903: ldc2_w        #179                // long 86400000l
     906: lmul
     907: ladd
     908: putfield      #121                // Field time:J
     911: aload_0
     912: aload_0
     913: getfield      #121                // Field time:J
     916: lload         5
     918: ladd
     919: invokevirtual #52                 // Method setTimeInMillis:(J)V
     922: return
     923: iload_2
     924: i2l
     925: ldc2_w        #179                // long 86400000l
     928: lmul
     929: lstore_3
     930: aload_0
     931: iload_1
     932: invokevirtual #170                // Method internalGet:(I)I
     935: istore        5
     937: iload         5
     939: iload_1
     940: bipush        7
     942: if_icmpne     952
     945: aload_0
     946: invokevirtual #144                // Method getFirstDayOfWeek:()I
     949: goto          953
     952: iconst_1
     953: isub
     954: istore        5
     956: iload         5
     958: ifge          964
     961: iinc          5, 7
     964: aload_0
     965: getfield      #121                // Field time:J
     968: iload         5
     970: i2l
     971: ldc2_w        #179                // long 86400000l
     974: lmul
     975: lsub
     976: lstore        6
     978: aload_0
     979: aload_0
     980: getfield      #121                // Field time:J
     983: lload_3
     984: ladd
     985: lload         6
     987: lsub
     988: ldc2_w        #181                // long 604800000l
     991: lrem
     992: putfield      #121                // Field time:J
     995: aload_0
     996: getfield      #121                // Field time:J
     999: lconst_0
    1000: lcmp
    1001: ifge          1016
    1004: aload_0
    1005: dup
    1006: getfield      #121                // Field time:J
    1009: ldc2_w        #181                // long 604800000l
    1012: ladd
    1013: putfield      #121                // Field time:J
    1016: aload_0
    1017: aload_0
    1018: getfield      #121                // Field time:J
    1021: lload         6
    1023: ladd
    1024: invokevirtual #52                 // Method setTimeInMillis:(J)V
    1027: return
    1028: iload_2
    1029: i2l
    1030: ldc2_w        #181                // long 604800000l
    1033: lmul
    1034: lstore_3
    1035: aload_0
    1036: iconst_5
    1037: invokevirtual #170                // Method internalGet:(I)I
    1040: iconst_1
    1041: isub
    1042: bipush        7
    1044: idiv
    1045: istore        5
    1047: aload_0
    1048: iconst_5
    1049: invokevirtual #169                // Method getActualMaximum:(I)I
    1052: aload_0
    1053: iconst_5
    1054: invokevirtual #170                // Method internalGet:(I)I
    1057: isub
    1058: bipush        7
    1060: idiv
    1061: istore        6
    1063: aload_0
    1064: getfield      #121                // Field time:J
    1067: iload         5
    1069: i2l
    1070: ldc2_w        #181                // long 604800000l
    1073: lmul
    1074: lsub
    1075: lstore        7
    1077: ldc2_w        #181                // long 604800000l
    1080: iload         5
    1082: iload         6
    1084: iadd
    1085: iconst_1
    1086: iadd
    1087: i2l
    1088: lmul
    1089: lstore        9
    1091: aload_0
    1092: aload_0
    1093: getfield      #121                // Field time:J
    1096: lload_3
    1097: ladd
    1098: lload         7
    1100: lsub
    1101: lload         9
    1103: lrem
    1104: putfield      #121                // Field time:J
    1107: aload_0
    1108: getfield      #121                // Field time:J
    1111: lconst_0
    1112: lcmp
    1113: ifge          1127
    1116: aload_0
    1117: dup
    1118: getfield      #121                // Field time:J
    1121: lload         9
    1123: ladd
    1124: putfield      #121                // Field time:J
    1127: aload_0
    1128: aload_0
    1129: getfield      #121                // Field time:J
    1132: lload         7
    1134: ladd
    1135: invokevirtual #52                 // Method setTimeInMillis:(J)V
    1138: return
    1139: aload_0
    1140: iload_1
    1141: aload_0
    1142: iload_1
    1143: invokevirtual #170                // Method internalGet:(I)I
    1146: iload_2
    1147: iadd
    1148: invokevirtual #136                // Method set:(II)V
    1151: return
    1152: new           #93                 // class java/lang/IllegalArgumentException
    1155: dup
    1156: new           #25                 // class java/lang/StringBuilder
    1159: dup
    1160: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
    1163: ldc           #183                // String Calendar.roll(
    1165: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1168: aload_0
    1169: iload_1
    1170: invokevirtual #184                // Method fieldName:(I)Ljava/lang/String;
    1173: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1176: ldc           #185                // String ) not supported
    1178: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
    1181: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
    1184: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
    1187: athrow

  public void add(int, int);
    Code:
       0: iload_2
       1: ifne          5
       4: return
       5: iload_2
       6: i2l
       7: lstore_3
       8: iconst_1
       9: istore        5
      11: iload_1
      12: tableswitch   { // 0 to 21
                     0: 116
                     1: 134
                     2: 185
                     3: 229
                     4: 229
                     5: 247
                     6: 247
                     7: 247
                     8: 229
                     9: 238
                    10: 256
                    11: 256
                    12: 268
                    13: 280
                    14: 292
                    15: 298
                    16: 298
                    17: 134
                    18: 247
                    19: 185
                    20: 247
                    21: 292
               default: 298
          }
     116: aload_0
     117: iload_1
     118: aload_0
     119: iload_1
     120: invokevirtual #137                // Method get:(I)I
     123: iload_2
     124: iadd
     125: invokevirtual #136                // Method set:(II)V
     128: aload_0
     129: iconst_0
     130: invokevirtual #173                // Method pinField:(I)V
     133: return
     134: aload_0
     135: iconst_0
     136: invokevirtual #137                // Method get:(I)I
     139: istore        6
     141: iload         6
     143: ifne          185
     146: aload_0
     147: invokevirtual #138                // Method getType:()Ljava/lang/String;
     150: astore        7
     152: aload         7
     154: ldc           #174                // String gregorian
     156: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     159: ifne          182
     162: aload         7
     164: ldc           #175                // String roc
     166: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     169: ifne          182
     172: aload         7
     174: ldc           #176                // String coptic
     176: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     179: ifeq          185
     182: iload_2
     183: ineg
     184: istore_2
     185: aload_0
     186: invokevirtual #124                // Method isLenient:()Z
     189: istore        6
     191: aload_0
     192: iconst_1
     193: invokevirtual #157                // Method setLenient:(Z)V
     196: aload_0
     197: iload_1
     198: aload_0
     199: iload_1
     200: invokevirtual #137                // Method get:(I)I
     203: iload_2
     204: iadd
     205: invokevirtual #136                // Method set:(II)V
     208: aload_0
     209: iconst_5
     210: invokevirtual #173                // Method pinField:(I)V
     213: iload         6
     215: ifne          228
     218: aload_0
     219: invokevirtual #133                // Method complete:()V
     222: aload_0
     223: iload         6
     225: invokevirtual #157                // Method setLenient:(Z)V
     228: return
     229: lload_3
     230: ldc2_w        #181                // long 604800000l
     233: lmul
     234: lstore_3
     235: goto          334
     238: lload_3
     239: ldc2_w        #186                // long 43200000l
     242: lmul
     243: lstore_3
     244: goto          334
     247: lload_3
     248: ldc2_w        #179                // long 86400000l
     251: lmul
     252: lstore_3
     253: goto          334
     256: lload_3
     257: ldc2_w        #171                // long 3600000l
     260: lmul
     261: lstore_3
     262: iconst_0
     263: istore        5
     265: goto          334
     268: lload_3
     269: ldc2_w        #188                // long 60000l
     272: lmul
     273: lstore_3
     274: iconst_0
     275: istore        5
     277: goto          334
     280: lload_3
     281: ldc2_w        #190                // long 1000l
     284: lmul
     285: lstore_3
     286: iconst_0
     287: istore        5
     289: goto          334
     292: iconst_0
     293: istore        5
     295: goto          334
     298: new           #93                 // class java/lang/IllegalArgumentException
     301: dup
     302: new           #25                 // class java/lang/StringBuilder
     305: dup
     306: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     309: ldc           #192                // String Calendar.add(
     311: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     314: aload_0
     315: iload_1
     316: invokevirtual #184                // Method fieldName:(I)Ljava/lang/String;
     319: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     322: ldc           #185                // String ) not supported
     324: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     327: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     330: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     333: athrow
     334: iconst_0
     335: istore        6
     337: iconst_0
     338: istore        7
     340: iload         5
     342: ifeq          368
     345: aload_0
     346: bipush        16
     348: invokevirtual #137                // Method get:(I)I
     351: aload_0
     352: bipush        15
     354: invokevirtual #137                // Method get:(I)I
     357: iadd
     358: istore        6
     360: aload_0
     361: bipush        21
     363: invokevirtual #137                // Method get:(I)I
     366: istore        7
     368: aload_0
     369: aload_0
     370: invokevirtual #116                // Method getTimeInMillis:()J
     373: lload_3
     374: ladd
     375: invokevirtual #52                 // Method setTimeInMillis:(J)V
     378: iload         5
     380: ifeq          603
     383: aload_0
     384: bipush        21
     386: invokevirtual #137                // Method get:(I)I
     389: istore        8
     391: iload         8
     393: iload         7
     395: if_icmpeq     603
     398: aload_0
     399: invokevirtual #193                // Method internalGetTimeInMillis:()J
     402: lstore        9
     404: aload_0
     405: bipush        16
     407: invokevirtual #137                // Method get:(I)I
     410: aload_0
     411: bipush        15
     413: invokevirtual #137                // Method get:(I)I
     416: iadd
     417: istore        11
     419: iload         11
     421: iload         6
     423: if_icmpeq     603
     426: iload         6
     428: iload         11
     430: isub
     431: i2l
     432: ldc2_w        #179                // long 86400000l
     435: lrem
     436: lstore        12
     438: lload         12
     440: lconst_0
     441: lcmp
     442: ifeq          462
     445: aload_0
     446: lload         9
     448: lload         12
     450: ladd
     451: invokevirtual #52                 // Method setTimeInMillis:(J)V
     454: aload_0
     455: bipush        21
     457: invokevirtual #137                // Method get:(I)I
     460: istore        8
     462: iload         8
     464: iload         7
     466: if_icmpeq     603
     469: aload_0
     470: getfield      #15                 // Field skippedWallTime:I
     473: tableswitch   { // 0 to 2
                     0: 516
                     1: 500
                     2: 532
               default: 603
          }
     500: lload         12
     502: lconst_0
     503: lcmp
     504: ifle          603
     507: aload_0
     508: lload         9
     510: invokevirtual #52                 // Method setTimeInMillis:(J)V
     513: goto          603
     516: lload         12
     518: lconst_0
     519: lcmp
     520: ifge          603
     523: aload_0
     524: lload         9
     526: invokevirtual #52                 // Method setTimeInMillis:(J)V
     529: goto          603
     532: lload         12
     534: lconst_0
     535: lcmp
     536: ifle          546
     539: aload_0
     540: invokevirtual #193                // Method internalGetTimeInMillis:()J
     543: goto          548
     546: lload         9
     548: lstore        14
     550: aload_0
     551: lload         14
     553: invokespecial #194                // Method getImmediatePreviousZoneTransition:(J)Ljava/lang/Long;
     556: astore        16
     558: aload         16
     560: ifnull        575
     563: aload_0
     564: aload         16
     566: invokevirtual #195                // Method java/lang/Long.longValue:()J
     569: invokevirtual #52                 // Method setTimeInMillis:(J)V
     572: goto          603
     575: new           #196                // class java/lang/RuntimeException
     578: dup
     579: new           #25                 // class java/lang/StringBuilder
     582: dup
     583: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     586: ldc           #197                // String Could not locate a time zone transition before
     588: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     591: lload         14
     593: invokevirtual #126                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     596: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     599: invokespecial #198                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     602: athrow
     603: return

  public java.lang.String getDisplayName(java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #199                // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getDisplayName(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #199                // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public int compareTo(com.ibm.icu.util.Calendar);
    Code:
       0: aload_0
       1: invokevirtual #116                // Method getTimeInMillis:()J
       4: aload_1
       5: invokevirtual #116                // Method getTimeInMillis:()J
       8: lsub
       9: lstore_2
      10: lload_2
      11: lconst_0
      12: lcmp
      13: ifge          20
      16: iconst_m1
      17: goto          31
      20: lload_2
      21: lconst_0
      22: lcmp
      23: ifle          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public com.ibm.icu.text.DateFormat getDateTimeFormat(int, int, java.util.Locale);
    Code:
       0: aload_0
       1: aload_3
       2: invokestatic  #11                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       5: iload_1
       6: iload_2
       7: invokestatic  #200                // Method formatHelper:(Lcom/ibm/icu/util/Calendar;Lcom/ibm/icu/util/ULocale;II)Lcom/ibm/icu/text/DateFormat;
      10: areturn

  public com.ibm.icu.text.DateFormat getDateTimeFormat(int, int, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_3
       2: iload_1
       3: iload_2
       4: invokestatic  #200                // Method formatHelper:(Lcom/ibm/icu/util/Calendar;Lcom/ibm/icu/util/ULocale;II)Lcom/ibm/icu/text/DateFormat;
       7: areturn

  protected com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokestatic  #11                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       7: invokevirtual #201                // Method handleGetDateFormat:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/DateFormat;
      10: areturn

  protected com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String, java.lang.String, java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #11                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       7: invokevirtual #201                // Method handleGetDateFormat:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/DateFormat;
      10: areturn

  protected com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #201                // Method handleGetDateFormat:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/DateFormat;
       7: areturn

  protected com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String, java.lang.String, com.ibm.icu.util.ULocale);
    Code:
       0: new           #202                // class com/ibm/icu/util/Calendar$FormatConfiguration
       3: dup
       4: aconst_null
       5: invokespecial #203                // Method com/ibm/icu/util/Calendar$FormatConfiguration."<init>":(Lcom/ibm/icu/util/Calendar$1;)V
       8: astore        4
      10: aload         4
      12: aload_1
      13: invokestatic  #204                // Method com/ibm/icu/util/Calendar$FormatConfiguration.access$102:(Lcom/ibm/icu/util/Calendar$FormatConfiguration;Ljava/lang/String;)Ljava/lang/String;
      16: pop
      17: aload         4
      19: aload_2
      20: invokestatic  #205                // Method com/ibm/icu/util/Calendar$FormatConfiguration.access$202:(Lcom/ibm/icu/util/Calendar$FormatConfiguration;Ljava/lang/String;)Ljava/lang/String;
      23: pop
      24: aload         4
      26: new           #206                // class com/ibm/icu/text/DateFormatSymbols
      29: dup
      30: aload_0
      31: aload_3
      32: invokespecial #207                // Method com/ibm/icu/text/DateFormatSymbols."<init>":(Lcom/ibm/icu/util/Calendar;Lcom/ibm/icu/util/ULocale;)V
      35: invokestatic  #208                // Method com/ibm/icu/util/Calendar$FormatConfiguration.access$302:(Lcom/ibm/icu/util/Calendar$FormatConfiguration;Lcom/ibm/icu/text/DateFormatSymbols;)Lcom/ibm/icu/text/DateFormatSymbols;
      38: pop
      39: aload         4
      41: aload_3
      42: invokestatic  #209                // Method com/ibm/icu/util/Calendar$FormatConfiguration.access$402:(Lcom/ibm/icu/util/Calendar$FormatConfiguration;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/ULocale;
      45: pop
      46: aload         4
      48: aload_0
      49: invokestatic  #210                // Method com/ibm/icu/util/Calendar$FormatConfiguration.access$502:(Lcom/ibm/icu/util/Calendar$FormatConfiguration;Lcom/ibm/icu/util/Calendar;)Lcom/ibm/icu/util/Calendar;
      52: pop
      53: aload         4
      55: invokestatic  #211                // Method com/ibm/icu/text/SimpleDateFormat.getInstance:(Lcom/ibm/icu/util/Calendar$FormatConfiguration;)Lcom/ibm/icu/text/SimpleDateFormat;
      58: areturn

  private static com.ibm.icu.text.DateFormat formatHelper(com.ibm.icu.util.Calendar, com.ibm.icu.util.ULocale, int, int);
    Code:
       0: iload_3
       1: iconst_m1
       2: if_icmplt     10
       5: iload_3
       6: iconst_3
       7: if_icmple     37
      10: new           #93                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #25                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #213                // String Illegal time style
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_3
      27: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: iconst_m1
      39: if_icmplt     47
      42: iload_2
      43: iconst_3
      44: if_icmple     74
      47: new           #93                 // class java/lang/IllegalArgumentException
      50: dup
      51: new           #25                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #215                // String Illegal date style
      60: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: iload_2
      64: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_0
      75: aload_1
      76: invokestatic  #216                // Method com/ibm/icu/util/Calendar$PatternData.access$600:(Lcom/ibm/icu/util/Calendar;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar$PatternData;
      79: astore        4
      81: aconst_null
      82: astore        5
      84: aconst_null
      85: astore        6
      87: iload_3
      88: iflt          190
      91: iload_2
      92: iflt          190
      95: aload         4
      97: iload_2
      98: invokestatic  #217                // Method com/ibm/icu/util/Calendar$PatternData.access$700:(Lcom/ibm/icu/util/Calendar$PatternData;I)Ljava/lang/String;
     101: iconst_2
     102: iconst_2
     103: iconst_2
     104: anewarray     #218                // class java/lang/CharSequence
     107: dup
     108: iconst_0
     109: aload         4
     111: invokestatic  #219                // Method com/ibm/icu/util/Calendar$PatternData.access$800:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     114: iload_3
     115: aaload
     116: aastore
     117: dup
     118: iconst_1
     119: aload         4
     121: invokestatic  #219                // Method com/ibm/icu/util/Calendar$PatternData.access$800:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     124: iload_2
     125: iconst_4
     126: iadd
     127: aaload
     128: aastore
     129: invokestatic  #220                // Method com/ibm/icu/impl/SimpleFormatterImpl.formatRawPattern:(Ljava/lang/String;II[Ljava/lang/CharSequence;)Ljava/lang/String;
     132: astore        6
     134: aload         4
     136: invokestatic  #221                // Method com/ibm/icu/util/Calendar$PatternData.access$900:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     139: ifnull        270
     142: aload         4
     144: invokestatic  #221                // Method com/ibm/icu/util/Calendar$PatternData.access$900:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     147: iload_2
     148: iconst_4
     149: iadd
     150: aaload
     151: astore        7
     153: aload         4
     155: invokestatic  #221                // Method com/ibm/icu/util/Calendar$PatternData.access$900:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     158: iload_3
     159: aaload
     160: astore        8
     162: aload         4
     164: invokestatic  #219                // Method com/ibm/icu/util/Calendar$PatternData.access$800:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     167: iload_2
     168: iconst_4
     169: iadd
     170: aaload
     171: aload         4
     173: invokestatic  #219                // Method com/ibm/icu/util/Calendar$PatternData.access$800:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     176: iload_3
     177: aaload
     178: aload         7
     180: aload         8
     182: invokestatic  #222                // Method mergeOverrideStrings:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     185: astore        5
     187: goto          270
     190: iload_3
     191: iflt          223
     194: aload         4
     196: invokestatic  #219                // Method com/ibm/icu/util/Calendar$PatternData.access$800:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     199: iload_3
     200: aaload
     201: astore        6
     203: aload         4
     205: invokestatic  #221                // Method com/ibm/icu/util/Calendar$PatternData.access$900:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     208: ifnull        270
     211: aload         4
     213: invokestatic  #221                // Method com/ibm/icu/util/Calendar$PatternData.access$900:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     216: iload_3
     217: aaload
     218: astore        5
     220: goto          270
     223: iload_2
     224: iflt          260
     227: aload         4
     229: invokestatic  #219                // Method com/ibm/icu/util/Calendar$PatternData.access$800:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     232: iload_2
     233: iconst_4
     234: iadd
     235: aaload
     236: astore        6
     238: aload         4
     240: invokestatic  #221                // Method com/ibm/icu/util/Calendar$PatternData.access$900:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     243: ifnull        270
     246: aload         4
     248: invokestatic  #221                // Method com/ibm/icu/util/Calendar$PatternData.access$900:(Lcom/ibm/icu/util/Calendar$PatternData;)[Ljava/lang/String;
     251: iload_2
     252: iconst_4
     253: iadd
     254: aaload
     255: astore        5
     257: goto          270
     260: new           #93                 // class java/lang/IllegalArgumentException
     263: dup
     264: ldc           #223                // String No date or time style specified
     266: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     269: athrow
     270: aload_0
     271: aload         6
     273: aload         5
     275: aload_1
     276: invokevirtual #201                // Method handleGetDateFormat:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/DateFormat;
     279: astore        7
     281: aload         7
     283: aload_0
     284: invokevirtual #224                // Method com/ibm/icu/text/DateFormat.setCalendar:(Lcom/ibm/icu/util/Calendar;)V
     287: aload         7
     289: areturn

  private static com.ibm.icu.util.Calendar$PatternData getPatternData(com.ibm.icu.util.ULocale, java.lang.String);
    Code:
       0: ldc           #101                // String com/ibm/icu/impl/data/icudt61b
       2: aload_0
       3: invokestatic  #225                // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/UResourceBundle;
       6: checkcast     #226                // class com/ibm/icu/impl/ICUResourceBundle
       9: astore_2
      10: aload_2
      11: new           #25                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #227                // String calendar/
      20: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #228                // String /DateTimePatterns
      29: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #229                // Method com/ibm/icu/impl/ICUResourceBundle.findWithFallback:(Ljava/lang/String;)Lcom/ibm/icu/impl/ICUResourceBundle;
      38: astore_3
      39: aload_3
      40: ifnonnull     50
      43: aload_2
      44: ldc           #230                // String calendar/gregorian/DateTimePatterns
      46: invokevirtual #231                // Method com/ibm/icu/impl/ICUResourceBundle.getWithFallback:(Ljava/lang/String;)Lcom/ibm/icu/impl/ICUResourceBundle;
      49: astore_3
      50: aload_3
      51: invokevirtual #232                // Method com/ibm/icu/impl/ICUResourceBundle.getSize:()I
      54: istore        4
      56: iload         4
      58: anewarray     #112                // class java/lang/String
      61: astore        5
      63: iload         4
      65: anewarray     #112                // class java/lang/String
      68: astore        6
      70: iconst_0
      71: istore        7
      73: iload         7
      75: iload         4
      77: if_icmpge     165
      80: aload_3
      81: iload         7
      83: invokevirtual #233                // Method com/ibm/icu/impl/ICUResourceBundle.get:(I)Lcom/ibm/icu/util/UResourceBundle;
      86: checkcast     #226                // class com/ibm/icu/impl/ICUResourceBundle
      89: astore        8
      91: aload         8
      93: invokevirtual #234                // Method com/ibm/icu/impl/ICUResourceBundle.getType:()I
      96: lookupswitch  { // 2
                     0: 124
                     8: 137
               default: 159
          }
     124: aload         5
     126: iload         7
     128: aload         8
     130: invokevirtual #235                // Method com/ibm/icu/impl/ICUResourceBundle.getString:()Ljava/lang/String;
     133: aastore
     134: goto          159
     137: aload         5
     139: iload         7
     141: aload         8
     143: iconst_0
     144: invokevirtual #236                // Method com/ibm/icu/impl/ICUResourceBundle.getString:(I)Ljava/lang/String;
     147: aastore
     148: aload         6
     150: iload         7
     152: aload         8
     154: iconst_1
     155: invokevirtual #236                // Method com/ibm/icu/impl/ICUResourceBundle.getString:(I)Ljava/lang/String;
     158: aastore
     159: iinc          7, 1
     162: goto          73
     165: new           #237                // class com/ibm/icu/util/Calendar$PatternData
     168: dup
     169: aload         5
     171: aload         6
     173: invokespecial #238                // Method com/ibm/icu/util/Calendar$PatternData."<init>":([Ljava/lang/String;[Ljava/lang/String;)V
     176: areturn

  public static java.lang.String getDateTimePattern(com.ibm.icu.util.Calendar, com.ibm.icu.util.ULocale, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #216                // Method com/ibm/icu/util/Calendar$PatternData.access$600:(Lcom/ibm/icu/util/Calendar;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Calendar$PatternData;
       5: astore_3
       6: aload_3
       7: iload_2
       8: invokestatic  #217                // Method com/ibm/icu/util/Calendar$PatternData.access$700:(Lcom/ibm/icu/util/Calendar$PatternData;I)Ljava/lang/String;
      11: areturn

  private static java.lang.String mergeOverrideStrings(java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     10
       4: aload_3
       5: ifnonnull     10
       8: aconst_null
       9: areturn
      10: aload_2
      11: ifnonnull     20
      14: aload_1
      15: aload_3
      16: invokestatic  #239                // Method expandOverride:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      19: areturn
      20: aload_3
      21: ifnonnull     30
      24: aload_0
      25: aload_2
      26: invokestatic  #239                // Method expandOverride:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      29: areturn
      30: aload_2
      31: aload_3
      32: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          40
      38: aload_2
      39: areturn
      40: new           #25                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_0
      48: aload_2
      49: invokestatic  #239                // Method expandOverride:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      52: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #240                // String ;
      57: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: aload_3
      62: invokestatic  #239                // Method expandOverride:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      65: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  private static java.lang.String expandOverride(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: bipush        61
       3: invokevirtual #241                // Method java/lang/String.indexOf:(I)I
       6: iflt          11
       9: aload_1
      10: areturn
      11: iconst_0
      12: istore_2
      13: bipush        32
      15: istore_3
      16: new           #25                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      23: astore        4
      25: new           #242                // class java/text/StringCharacterIterator
      28: dup
      29: aload_0
      30: invokespecial #243                // Method java/text/StringCharacterIterator."<init>":(Ljava/lang/String;)V
      33: astore        5
      35: aload         5
      37: invokevirtual #244                // Method java/text/StringCharacterIterator.first:()C
      40: istore        6
      42: iload         6
      44: ldc           #245                // int 65535
      46: if_icmpeq     134
      49: iload         6
      51: bipush        39
      53: if_icmpne     72
      56: iload_2
      57: ifne          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: istore_2
      66: iload         6
      68: istore_3
      69: goto          124
      72: iload_2
      73: ifne          121
      76: iload         6
      78: iload_3
      79: if_icmpeq     121
      82: aload         4
      84: invokevirtual #246                // Method java/lang/StringBuilder.length:()I
      87: ifle          98
      90: aload         4
      92: ldc           #240                // String ;
      94: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: pop
      98: aload         4
     100: iload         6
     102: invokevirtual #247                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     105: pop
     106: aload         4
     108: ldc           #248                // String =
     110: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: pop
     114: aload         4
     116: aload_1
     117: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: pop
     121: iload         6
     123: istore_3
     124: aload         5
     126: invokevirtual #249                // Method java/text/StringCharacterIterator.next:()C
     129: istore        6
     131: goto          42
     134: aload         4
     136: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: areturn

  protected void pinField(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #169                // Method getActualMaximum:(I)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: invokevirtual #168                // Method getActualMinimum:(I)I
      11: istore_3
      12: aload_0
      13: getfield      #42                 // Field fields:[I
      16: iload_1
      17: iaload
      18: iload_2
      19: if_icmple     31
      22: aload_0
      23: iload_1
      24: iload_2
      25: invokevirtual #136                // Method set:(II)V
      28: goto          47
      31: aload_0
      32: getfield      #42                 // Field fields:[I
      35: iload_1
      36: iaload
      37: iload_3
      38: if_icmpge     47
      41: aload_0
      42: iload_1
      43: iload_3
      44: invokevirtual #136                // Method set:(II)V
      47: return

  protected int weekNumber(int, int, int);
    Code:
       0: iload_3
       1: aload_0
       2: invokevirtual #144                // Method getFirstDayOfWeek:()I
       5: isub
       6: iload_2
       7: isub
       8: iconst_1
       9: iadd
      10: bipush        7
      12: irem
      13: istore        4
      15: iload         4
      17: ifge          23
      20: iinc          4, 7
      23: iload_1
      24: iload         4
      26: iadd
      27: iconst_1
      28: isub
      29: bipush        7
      31: idiv
      32: istore        5
      34: bipush        7
      36: iload         4
      38: isub
      39: aload_0
      40: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
      43: if_icmplt     49
      46: iinc          5, 1
      49: iload         5
      51: ireturn

  protected final int weekNumber(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: iload_2
       4: invokevirtual #250                // Method weekNumber:(III)I
       7: ireturn

  public int fieldDifference(java.util.Date, int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: invokevirtual #116                // Method getTimeInMillis:()J
       6: lstore        4
       8: aload_1
       9: invokevirtual #118                // Method java/util/Date.getTime:()J
      12: lstore        6
      14: lload         4
      16: lload         6
      18: lcmp
      19: ifge          177
      22: iconst_1
      23: istore        8
      25: aload_0
      26: lload         4
      28: invokevirtual #52                 // Method setTimeInMillis:(J)V
      31: aload_0
      32: iload_2
      33: iload         8
      35: invokevirtual #166                // Method add:(II)V
      38: aload_0
      39: invokevirtual #116                // Method getTimeInMillis:()J
      42: lstore        9
      44: lload         9
      46: lload         6
      48: lcmp
      49: ifne          55
      52: iload         8
      54: ireturn
      55: lload         9
      57: lload         6
      59: lcmp
      60: ifle          66
      63: goto          105
      66: iload         8
      68: ldc           #251                // int 2147483647
      70: if_icmpge     94
      73: iload         8
      75: istore_3
      76: iload         8
      78: iconst_1
      79: ishl
      80: istore        8
      82: iload         8
      84: ifge          102
      87: ldc           #251                // int 2147483647
      89: istore        8
      91: goto          102
      94: new           #196                // class java/lang/RuntimeException
      97: dup
      98: invokespecial #252                // Method java/lang/RuntimeException."<init>":()V
     101: athrow
     102: goto          25
     105: iload         8
     107: iload_3
     108: isub
     109: iconst_1
     110: if_icmple     174
     113: iload_3
     114: iload         8
     116: iload_3
     117: isub
     118: iconst_2
     119: idiv
     120: iadd
     121: istore        9
     123: aload_0
     124: lload         4
     126: invokevirtual #52                 // Method setTimeInMillis:(J)V
     129: aload_0
     130: iload_2
     131: iload         9
     133: invokevirtual #166                // Method add:(II)V
     136: aload_0
     137: invokevirtual #116                // Method getTimeInMillis:()J
     140: lstore        10
     142: lload         10
     144: lload         6
     146: lcmp
     147: ifne          153
     150: iload         9
     152: ireturn
     153: lload         10
     155: lload         6
     157: lcmp
     158: ifle          168
     161: iload         9
     163: istore        8
     165: goto          171
     168: iload         9
     170: istore_3
     171: goto          105
     174: goto          323
     177: lload         4
     179: lload         6
     181: lcmp
     182: ifle          323
     185: iconst_m1
     186: istore        8
     188: aload_0
     189: lload         4
     191: invokevirtual #52                 // Method setTimeInMillis:(J)V
     194: aload_0
     195: iload_2
     196: iload         8
     198: invokevirtual #166                // Method add:(II)V
     201: aload_0
     202: invokevirtual #116                // Method getTimeInMillis:()J
     205: lstore        9
     207: lload         9
     209: lload         6
     211: lcmp
     212: ifne          218
     215: iload         8
     217: ireturn
     218: lload         9
     220: lload         6
     222: lcmp
     223: ifge          229
     226: goto          254
     229: iload         8
     231: istore_3
     232: iload         8
     234: iconst_1
     235: ishl
     236: istore        8
     238: iload         8
     240: ifne          251
     243: new           #196                // class java/lang/RuntimeException
     246: dup
     247: invokespecial #252                // Method java/lang/RuntimeException."<init>":()V
     250: athrow
     251: goto          188
     254: iload_3
     255: iload         8
     257: isub
     258: iconst_1
     259: if_icmple     323
     262: iload_3
     263: iload         8
     265: iload_3
     266: isub
     267: iconst_2
     268: idiv
     269: iadd
     270: istore        9
     272: aload_0
     273: lload         4
     275: invokevirtual #52                 // Method setTimeInMillis:(J)V
     278: aload_0
     279: iload_2
     280: iload         9
     282: invokevirtual #166                // Method add:(II)V
     285: aload_0
     286: invokevirtual #116                // Method getTimeInMillis:()J
     289: lstore        10
     291: lload         10
     293: lload         6
     295: lcmp
     296: ifne          302
     299: iload         9
     301: ireturn
     302: lload         10
     304: lload         6
     306: lcmp
     307: ifge          317
     310: iload         9
     312: istore        8
     314: goto          320
     317: iload         9
     319: istore_3
     320: goto          254
     323: aload_0
     324: lload         4
     326: invokevirtual #52                 // Method setTimeInMillis:(J)V
     329: aload_0
     330: iload_2
     331: iload_3
     332: invokevirtual #166                // Method add:(II)V
     335: iload_3
     336: ireturn

  public void setTimeZone(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
       5: aload_0
       6: iconst_0
       7: putfield      #131                // Field areFieldsSet:Z
      10: return

  public com.ibm.icu.util.TimeZone getTimeZone();
    Code:
       0: aload_0
       1: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
       4: areturn

  public void setLenient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field lenient:Z
       5: return

  public boolean isLenient();
    Code:
       0: aload_0
       1: getfield      #13                 // Field lenient:Z
       4: ireturn

  public void setRepeatedWallTimeOption(int);
    Code:
       0: iload_1
       1: ifeq          36
       4: iload_1
       5: iconst_1
       6: if_icmpeq     36
       9: new           #93                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #25                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #253                // String Illegal repeated wall time option -
      22: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: putfield      #14                 // Field repeatedWallTime:I
      41: return

  public int getRepeatedWallTimeOption();
    Code:
       0: aload_0
       1: getfield      #14                 // Field repeatedWallTime:I
       4: ireturn

  public void setSkippedWallTimeOption(int);
    Code:
       0: iload_1
       1: ifeq          41
       4: iload_1
       5: iconst_1
       6: if_icmpeq     41
       9: iload_1
      10: iconst_2
      11: if_icmpeq     41
      14: new           #93                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #25                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #254                // String Illegal skipped wall time option -
      27: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: iload_1
      43: putfield      #15                 // Field skippedWallTime:I
      46: return

  public int getSkippedWallTimeOption();
    Code:
       0: aload_0
       1: getfield      #15                 // Field skippedWallTime:I
       4: ireturn

  public void setFirstDayOfWeek(int);
    Code:
       0: aload_0
       1: getfield      #150                // Field firstDayOfWeek:I
       4: iload_1
       5: if_icmpeq     39
       8: iload_1
       9: iconst_1
      10: if_icmplt     19
      13: iload_1
      14: bipush        7
      16: if_icmple     29
      19: new           #93                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #255                // String Invalid day of week
      25: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #150                // Field firstDayOfWeek:I
      34: aload_0
      35: iconst_0
      36: putfield      #131                // Field areFieldsSet:Z
      39: return

  public int getFirstDayOfWeek();
    Code:
       0: aload_0
       1: getfield      #150                // Field firstDayOfWeek:I
       4: ireturn

  public void setMinimalDaysInFirstWeek(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     10
       5: iconst_1
       6: istore_1
       7: goto          19
      10: iload_1
      11: bipush        7
      13: if_icmple     19
      16: bipush        7
      18: istore_1
      19: aload_0
      20: getfield      #151                // Field minimalDaysInFirstWeek:I
      23: iload_1
      24: if_icmpeq     37
      27: aload_0
      28: iload_1
      29: putfield      #151                // Field minimalDaysInFirstWeek:I
      32: aload_0
      33: iconst_0
      34: putfield      #131                // Field areFieldsSet:Z
      37: return

  public int getMinimalDaysInFirstWeek();
    Code:
       0: aload_0
       1: getfield      #151                // Field minimalDaysInFirstWeek:I
       4: ireturn

  protected abstract int handleGetLimit(int, int);

  protected int getLimit(int, int);
    Code:
       0: iload_1
       1: tableswitch   { // 4 to 22
                     4: 100
                     5: 182
                     6: 182
                     7: 92
                     8: 182
                     9: 92
                    10: 92
                    11: 92
                    12: 92
                    13: 92
                    14: 92
                    15: 92
                    16: 92
                    17: 182
                    18: 92
                    19: 182
                    20: 92
                    21: 92
                    22: 92
               default: 182
          }
      92: getstatic     #256                // Field LIMITS:[[I
      95: iload_1
      96: aaload
      97: iload_2
      98: iaload
      99: ireturn
     100: iload_2
     101: ifne          121
     104: aload_0
     105: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
     108: iconst_1
     109: if_icmpne     116
     112: iconst_1
     113: goto          117
     116: iconst_0
     117: istore_3
     118: goto          180
     121: iload_2
     122: iconst_1
     123: if_icmpne     131
     126: iconst_1
     127: istore_3
     128: goto          180
     131: aload_0
     132: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
     135: istore        4
     137: aload_0
     138: iconst_5
     139: iload_2
     140: invokevirtual #257                // Method handleGetLimit:(II)I
     143: istore        5
     145: iload_2
     146: iconst_2
     147: if_icmpne     165
     150: iload         5
     152: bipush        7
     154: iload         4
     156: isub
     157: iadd
     158: bipush        7
     160: idiv
     161: istore_3
     162: goto          180
     165: iload         5
     167: bipush        6
     169: iadd
     170: bipush        7
     172: iload         4
     174: isub
     175: iadd
     176: bipush        7
     178: idiv
     179: istore_3
     180: iload_3
     181: ireturn
     182: aload_0
     183: iload_1
     184: iload_2
     185: invokevirtual #257                // Method handleGetLimit:(II)I
     188: ireturn

  public final int getMinimum(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #258                // Method getLimit:(II)I
       6: ireturn

  public final int getMaximum(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_3
       3: invokevirtual #258                // Method getLimit:(II)I
       6: ireturn

  public final int getGreatestMinimum(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokevirtual #258                // Method getLimit:(II)I
       6: ireturn

  public final int getLeastMaximum(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokevirtual #258                // Method getLimit:(II)I
       6: ireturn

  public int getDayOfWeekType(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     11
       5: iload_1
       6: bipush        7
       8: if_icmple     21
      11: new           #93                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #255                // String Invalid day of week
      17: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #259                // Field weekendOnset:I
      25: aload_0
      26: getfield      #260                // Field weekendCease:I
      29: if_icmpne     55
      32: iload_1
      33: aload_0
      34: getfield      #259                // Field weekendOnset:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #261                // Field weekendOnsetMillis:I
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_2
      54: ireturn
      55: aload_0
      56: getfield      #259                // Field weekendOnset:I
      59: aload_0
      60: getfield      #260                // Field weekendCease:I
      63: if_icmpge     84
      66: iload_1
      67: aload_0
      68: getfield      #259                // Field weekendOnset:I
      71: if_icmplt     82
      74: iload_1
      75: aload_0
      76: getfield      #260                // Field weekendCease:I
      79: if_icmple     102
      82: iconst_0
      83: ireturn
      84: iload_1
      85: aload_0
      86: getfield      #260                // Field weekendCease:I
      89: if_icmple     102
      92: iload_1
      93: aload_0
      94: getfield      #259                // Field weekendOnset:I
      97: if_icmpge     102
     100: iconst_0
     101: ireturn
     102: iload_1
     103: aload_0
     104: getfield      #259                // Field weekendOnset:I
     107: if_icmpne     123
     110: aload_0
     111: getfield      #261                // Field weekendOnsetMillis:I
     114: ifne          121
     117: iconst_1
     118: goto          122
     121: iconst_2
     122: ireturn
     123: iload_1
     124: aload_0
     125: getfield      #260                // Field weekendCease:I
     128: if_icmpne     147
     131: aload_0
     132: getfield      #262                // Field weekendCeaseMillis:I
     135: ldc_w         #263                // int 86400000
     138: if_icmplt     145
     141: iconst_1
     142: goto          146
     145: iconst_3
     146: ireturn
     147: iconst_1
     148: ireturn

  public int getWeekendTransition(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #259                // Field weekendOnset:I
       5: if_icmpne     13
       8: aload_0
       9: getfield      #261                // Field weekendOnsetMillis:I
      12: ireturn
      13: iload_1
      14: aload_0
      15: getfield      #260                // Field weekendCease:I
      18: if_icmpne     26
      21: aload_0
      22: getfield      #262                // Field weekendCeaseMillis:I
      25: ireturn
      26: new           #93                 // class java/lang/IllegalArgumentException
      29: dup
      30: ldc_w         #264                // String Not weekend transition day
      33: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow

  public boolean isWeekend(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #265                // Method setTime:(Ljava/util/Date;)V
       5: aload_0
       6: invokevirtual #266                // Method isWeekend:()Z
       9: ireturn

  public boolean isWeekend();
    Code:
       0: aload_0
       1: bipush        7
       3: invokevirtual #137                // Method get:(I)I
       6: istore_1
       7: aload_0
       8: iload_1
       9: invokevirtual #267                // Method getDayOfWeekType:(I)I
      12: istore_2
      13: iload_2
      14: lookupswitch  { // 2
                     0: 40
                     1: 42
               default: 44
          }
      40: iconst_0
      41: ireturn
      42: iconst_1
      43: ireturn
      44: aload_0
      45: bipush        14
      47: invokevirtual #170                // Method internalGet:(I)I
      50: sipush        1000
      53: aload_0
      54: bipush        13
      56: invokevirtual #170                // Method internalGet:(I)I
      59: bipush        60
      61: aload_0
      62: bipush        12
      64: invokevirtual #170                // Method internalGet:(I)I
      67: bipush        60
      69: aload_0
      70: bipush        11
      72: invokevirtual #170                // Method internalGet:(I)I
      75: imul
      76: iadd
      77: imul
      78: iadd
      79: imul
      80: iadd
      81: istore_3
      82: aload_0
      83: iload_1
      84: invokevirtual #268                // Method getWeekendTransition:(I)I
      87: istore        4
      89: iload_2
      90: iconst_2
      91: if_icmpne     108
      94: iload_3
      95: iload         4
      97: if_icmplt     104
     100: iconst_1
     101: goto          119
     104: iconst_0
     105: goto          119
     108: iload_3
     109: iload         4
     111: if_icmpge     118
     114: iconst_1
     115: goto          119
     118: iconst_0
     119: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #269                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #1                  // class com/ibm/icu/util/Calendar
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #42                 // Field fields:[I
      13: arraylength
      14: newarray       int
      16: putfield      #42                 // Field fields:[I
      19: aload_1
      20: aload_0
      21: getfield      #42                 // Field fields:[I
      24: arraylength
      25: newarray       int
      27: putfield      #39                 // Field stamp:[I
      30: aload_0
      31: getfield      #42                 // Field fields:[I
      34: iconst_0
      35: aload_1
      36: getfield      #42                 // Field fields:[I
      39: iconst_0
      40: aload_0
      41: getfield      #42                 // Field fields:[I
      44: arraylength
      45: invokestatic  #270                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      48: aload_0
      49: getfield      #39                 // Field stamp:[I
      52: iconst_0
      53: aload_1
      54: getfield      #39                 // Field stamp:[I
      57: iconst_0
      58: aload_0
      59: getfield      #42                 // Field fields:[I
      62: arraylength
      63: invokestatic  #270                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      66: aload_1
      67: aload_0
      68: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      71: invokevirtual #271                // Method com/ibm/icu/util/TimeZone.clone:()Ljava/lang/Object;
      74: checkcast     #272                // class com/ibm/icu/util/TimeZone
      77: putfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      80: aload_1
      81: areturn
      82: astore_1
      83: new           #274                // class com/ibm/icu/util/ICUCloneNotSupportedException
      86: dup
      87: aload_1
      88: invokespecial #275                // Method com/ibm/icu/util/ICUCloneNotSupportedException."<init>":(Ljava/lang/Throwable;)V
      91: athrow
    Exception table:
       from    to  target type
           0    81    82   Class java/lang/CloneNotSupportedException

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #199                // Method java/lang/Class.getName:()Ljava/lang/String;
      16: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_1
      21: ldc_w         #276                // String [time=
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: pop
      28: aload_1
      29: aload_0
      30: getfield      #119                // Field isTimeSet:Z
      33: ifeq          46
      36: aload_0
      37: getfield      #121                // Field time:J
      40: invokestatic  #277                // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      43: goto          49
      46: ldc_w         #278                // String ?
      49: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_1
      54: ldc_w         #279                // String ,areFieldsSet=
      57: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: aload_0
      63: getfield      #131                // Field areFieldsSet:Z
      66: invokevirtual #280                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      69: pop
      70: aload_1
      71: ldc_w         #281                // String ,areAllFieldsSet=
      74: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: pop
      78: aload_1
      79: aload_0
      80: getfield      #130                // Field areAllFieldsSet:Z
      83: invokevirtual #280                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      86: pop
      87: aload_1
      88: ldc_w         #282                // String ,lenient=
      91: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: aload_1
      96: aload_0
      97: getfield      #13                 // Field lenient:Z
     100: invokevirtual #280                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: pop
     104: aload_1
     105: ldc_w         #283                // String ,zone=
     108: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: pop
     112: aload_1
     113: aload_0
     114: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     117: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: pop
     121: aload_1
     122: ldc_w         #284                // String ,firstDayOfWeek=
     125: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_1
     130: aload_0
     131: getfield      #150                // Field firstDayOfWeek:I
     134: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     137: pop
     138: aload_1
     139: ldc_w         #285                // String ,minimalDaysInFirstWeek=
     142: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: aload_1
     147: aload_0
     148: getfield      #151                // Field minimalDaysInFirstWeek:I
     151: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     154: pop
     155: aload_1
     156: ldc_w         #286                // String ,repeatedWallTime=
     159: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: pop
     163: aload_1
     164: aload_0
     165: getfield      #14                 // Field repeatedWallTime:I
     168: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     171: pop
     172: aload_1
     173: ldc_w         #287                // String ,skippedWallTime=
     176: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: pop
     180: aload_1
     181: aload_0
     182: getfield      #15                 // Field skippedWallTime:I
     185: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     188: pop
     189: iconst_0
     190: istore_2
     191: iload_2
     192: aload_0
     193: getfield      #42                 // Field fields:[I
     196: arraylength
     197: if_icmpge     254
     200: aload_1
     201: bipush        44
     203: invokevirtual #247                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     206: aload_0
     207: iload_2
     208: invokevirtual #184                // Method fieldName:(I)Ljava/lang/String;
     211: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     214: bipush        61
     216: invokevirtual #247                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     219: pop
     220: aload_1
     221: aload_0
     222: iload_2
     223: invokevirtual #288                // Method isSet:(I)Z
     226: ifeq          241
     229: aload_0
     230: getfield      #42                 // Field fields:[I
     233: iload_2
     234: iaload
     235: invokestatic  #289                // Method java/lang/String.valueOf:(I)Ljava/lang/String;
     238: goto          244
     241: ldc_w         #278                // String ?
     244: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: pop
     248: iinc          2, 1
     251: goto          191
     254: aload_1
     255: bipush        93
     257: invokevirtual #247                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     260: pop
     261: aload_1
     262: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: areturn

  public static com.ibm.icu.util.Calendar$WeekData getWeekDataForRegion(java.lang.String);
    Code:
       0: getstatic     #290                // Field WEEK_DATA_CACHE:Lcom/ibm/icu/util/Calendar$WeekDataCache;
       3: aload_0
       4: aload_0
       5: invokevirtual #291                // Method com/ibm/icu/util/Calendar$WeekDataCache.createInstance:(Ljava/lang/String;Ljava/lang/String;)Lcom/ibm/icu/util/Calendar$WeekData;
       8: areturn

  public com.ibm.icu.util.Calendar$WeekData getWeekData();
    Code:
       0: new           #292                // class com/ibm/icu/util/Calendar$WeekData
       3: dup
       4: aload_0
       5: getfield      #150                // Field firstDayOfWeek:I
       8: aload_0
       9: getfield      #151                // Field minimalDaysInFirstWeek:I
      12: aload_0
      13: getfield      #259                // Field weekendOnset:I
      16: aload_0
      17: getfield      #261                // Field weekendOnsetMillis:I
      20: aload_0
      21: getfield      #260                // Field weekendCease:I
      24: aload_0
      25: getfield      #262                // Field weekendCeaseMillis:I
      28: invokespecial #293                // Method com/ibm/icu/util/Calendar$WeekData."<init>":(IIIIII)V
      31: areturn

  public com.ibm.icu.util.Calendar setWeekData(com.ibm.icu.util.Calendar$WeekData);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #294                // Field com/ibm/icu/util/Calendar$WeekData.firstDayOfWeek:I
       5: invokevirtual #68                 // Method setFirstDayOfWeek:(I)V
       8: aload_0
       9: aload_1
      10: getfield      #295                // Field com/ibm/icu/util/Calendar$WeekData.minimalDaysInFirstWeek:I
      13: invokevirtual #69                 // Method setMinimalDaysInFirstWeek:(I)V
      16: aload_0
      17: aload_1
      18: getfield      #296                // Field com/ibm/icu/util/Calendar$WeekData.weekendOnset:I
      21: putfield      #259                // Field weekendOnset:I
      24: aload_0
      25: aload_1
      26: getfield      #297                // Field com/ibm/icu/util/Calendar$WeekData.weekendOnsetMillis:I
      29: putfield      #261                // Field weekendOnsetMillis:I
      32: aload_0
      33: aload_1
      34: getfield      #298                // Field com/ibm/icu/util/Calendar$WeekData.weekendCease:I
      37: putfield      #260                // Field weekendCease:I
      40: aload_0
      41: aload_1
      42: getfield      #299                // Field com/ibm/icu/util/Calendar$WeekData.weekendCeaseMillis:I
      45: putfield      #262                // Field weekendCeaseMillis:I
      48: aload_0
      49: areturn

  private static com.ibm.icu.util.Calendar$WeekData getWeekDataForRegionInternal(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #54                 // String 001
       6: astore_0
       7: ldc           #101                // String com/ibm/icu/impl/data/icudt61b
       9: ldc           #102                // String supplementalData
      11: getstatic     #103                // Field com/ibm/icu/impl/ICUResourceBundle.ICU_DATA_CLASS_LOADER:Ljava/lang/ClassLoader;
      14: invokestatic  #104                // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Lcom/ibm/icu/util/UResourceBundle;
      17: astore_1
      18: aload_1
      19: ldc_w         #300                // String weekData
      22: invokevirtual #106                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      25: astore_2
      26: aconst_null
      27: astore_3
      28: aload_2
      29: aload_0
      30: invokevirtual #106                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      33: astore_3
      34: goto          61
      37: astore        4
      39: aload_0
      40: ldc           #54                 // String 001
      42: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      45: ifne          58
      48: aload_2
      49: ldc           #54                 // String 001
      51: invokevirtual #106                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      54: astore_3
      55: goto          61
      58: aload         4
      60: athrow
      61: aload_3
      62: invokevirtual #301                // Method com/ibm/icu/util/UResourceBundle.getIntVector:()[I
      65: astore        4
      67: new           #292                // class com/ibm/icu/util/Calendar$WeekData
      70: dup
      71: aload         4
      73: iconst_0
      74: iaload
      75: aload         4
      77: iconst_1
      78: iaload
      79: aload         4
      81: iconst_2
      82: iaload
      83: aload         4
      85: iconst_3
      86: iaload
      87: aload         4
      89: iconst_4
      90: iaload
      91: aload         4
      93: iconst_5
      94: iaload
      95: invokespecial #293                // Method com/ibm/icu/util/Calendar$WeekData."<init>":(IIIIII)V
      98: areturn
    Exception table:
       from    to  target type
          28    34    37   Class java/util/MissingResourceException

  private void setWeekData(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     7
       4: ldc           #54                 // String 001
       6: astore_1
       7: getstatic     #290                // Field WEEK_DATA_CACHE:Lcom/ibm/icu/util/Calendar$WeekDataCache;
      10: aload_1
      11: aload_1
      12: invokevirtual #302                // Method com/ibm/icu/util/Calendar$WeekDataCache.getInstance:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #292                // class com/ibm/icu/util/Calendar$WeekData
      18: astore_2
      19: aload_0
      20: aload_2
      21: invokevirtual #303                // Method setWeekData:(Lcom/ibm/icu/util/Calendar$WeekData;)Lcom/ibm/icu/util/Calendar;
      24: pop
      25: return

  private void updateTime();
    Code:
       0: aload_0
       1: invokevirtual #304                // Method computeTime:()V
       4: aload_0
       5: invokevirtual #124                // Method isLenient:()Z
       8: ifne          18
      11: aload_0
      12: getfield      #130                // Field areAllFieldsSet:Z
      15: ifne          23
      18: aload_0
      19: iconst_0
      20: putfield      #131                // Field areFieldsSet:Z
      23: aload_0
      24: iconst_1
      25: putfield      #119                // Field isTimeSet:Z
      28: aload_0
      29: iconst_0
      30: putfield      #132                // Field areFieldsVirtuallySet:Z
      33: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #119                // Field isTimeSet:Z
       4: ifne          15
       7: aload_0
       8: invokespecial #120                // Method updateTime:()V
      11: goto          15
      14: astore_2
      15: aload_1
      16: invokevirtual #305                // Method java/io/ObjectOutputStream.defaultWriteObject:()V
      19: return
    Exception table:
       from    to  target type
           7    11    14   Class java/lang/IllegalArgumentException

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #306                // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: invokespecial #21                 // Method initInternal:()V
       8: aload_0
       9: iconst_1
      10: putfield      #119                // Field isTimeSet:Z
      13: aload_0
      14: aload_0
      15: iconst_0
      16: dup_x1
      17: putfield      #130                // Field areAllFieldsSet:Z
      20: putfield      #131                // Field areFieldsSet:Z
      23: aload_0
      24: iconst_1
      25: putfield      #132                // Field areFieldsVirtuallySet:Z
      28: aload_0
      29: iconst_2
      30: putfield      #16                 // Field nextStamp:I
      33: return

  protected void computeFields();
    Code:
       0: iconst_2
       1: newarray       int
       3: astore_1
       4: aload_0
       5: invokevirtual #146                // Method getTimeZone:()Lcom/ibm/icu/util/TimeZone;
       8: aload_0
       9: getfield      #121                // Field time:J
      12: iconst_0
      13: aload_1
      14: invokevirtual #307                // Method com/ibm/icu/util/TimeZone.getOffset:(JZ[I)V
      17: aload_0
      18: getfield      #121                // Field time:J
      21: aload_1
      22: iconst_0
      23: iaload
      24: i2l
      25: ladd
      26: aload_1
      27: iconst_1
      28: iaload
      29: i2l
      30: ladd
      31: lstore_2
      32: aload_0
      33: getfield      #47                 // Field internalSetMask:I
      36: istore        4
      38: iconst_0
      39: istore        5
      41: iload         5
      43: aload_0
      44: getfield      #42                 // Field fields:[I
      47: arraylength
      48: if_icmpge     89
      51: iload         4
      53: iconst_1
      54: iand
      55: ifne          69
      58: aload_0
      59: getfield      #39                 // Field stamp:[I
      62: iload         5
      64: iconst_1
      65: iastore
      66: goto          77
      69: aload_0
      70: getfield      #39                 // Field stamp:[I
      73: iload         5
      75: iconst_0
      76: iastore
      77: iload         4
      79: iconst_1
      80: ishr
      81: istore        4
      83: iinc          5, 1
      86: goto          41
      89: lload_2
      90: ldc2_w        #179                // long 86400000l
      93: invokestatic  #308                // Method floorDivide:(JJ)J
      96: lstore        5
      98: aload_0
      99: getfield      #42                 // Field fields:[I
     102: bipush        20
     104: lload         5
     106: l2i
     107: ldc_w         #309                // int 2440588
     110: iadd
     111: iastore
     112: aload_0
     113: aload_0
     114: getfield      #42                 // Field fields:[I
     117: bipush        20
     119: iaload
     120: invokespecial #310                // Method computeGregorianAndDOWFields:(I)V
     123: aload_0
     124: aload_0
     125: getfield      #42                 // Field fields:[I
     128: bipush        20
     130: iaload
     131: invokevirtual #311                // Method handleComputeFields:(I)V
     134: aload_0
     135: invokespecial #312                // Method computeWeekFields:()V
     138: lload_2
     139: lload         5
     141: ldc2_w        #179                // long 86400000l
     144: lmul
     145: lsub
     146: l2i
     147: istore        7
     149: aload_0
     150: getfield      #42                 // Field fields:[I
     153: bipush        21
     155: iload         7
     157: iastore
     158: aload_0
     159: getfield      #42                 // Field fields:[I
     162: bipush        14
     164: iload         7
     166: sipush        1000
     169: irem
     170: iastore
     171: iload         7
     173: sipush        1000
     176: idiv
     177: istore        7
     179: aload_0
     180: getfield      #42                 // Field fields:[I
     183: bipush        13
     185: iload         7
     187: bipush        60
     189: irem
     190: iastore
     191: iload         7
     193: bipush        60
     195: idiv
     196: istore        7
     198: aload_0
     199: getfield      #42                 // Field fields:[I
     202: bipush        12
     204: iload         7
     206: bipush        60
     208: irem
     209: iastore
     210: iload         7
     212: bipush        60
     214: idiv
     215: istore        7
     217: aload_0
     218: getfield      #42                 // Field fields:[I
     221: bipush        11
     223: iload         7
     225: iastore
     226: aload_0
     227: getfield      #42                 // Field fields:[I
     230: bipush        9
     232: iload         7
     234: bipush        12
     236: idiv
     237: iastore
     238: aload_0
     239: getfield      #42                 // Field fields:[I
     242: bipush        10
     244: iload         7
     246: bipush        12
     248: irem
     249: iastore
     250: aload_0
     251: getfield      #42                 // Field fields:[I
     254: bipush        15
     256: aload_1
     257: iconst_0
     258: iaload
     259: iastore
     260: aload_0
     261: getfield      #42                 // Field fields:[I
     264: bipush        16
     266: aload_1
     267: iconst_1
     268: iaload
     269: iastore
     270: return

  private final void computeGregorianAndDOWFields(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #313                // Method computeGregorianFields:(I)V
       5: aload_0
       6: getfield      #42                 // Field fields:[I
       9: bipush        7
      11: iload_1
      12: invokestatic  #314                // Method julianDayToDayOfWeek:(I)I
      15: dup_x2
      16: iastore
      17: istore_2
      18: iload_2
      19: aload_0
      20: invokevirtual #144                // Method getFirstDayOfWeek:()I
      23: isub
      24: iconst_1
      25: iadd
      26: istore_3
      27: iload_3
      28: iconst_1
      29: if_icmpge     35
      32: iinc          3, 7
      35: aload_0
      36: getfield      #42                 // Field fields:[I
      39: bipush        18
      41: iload_3
      42: iastore
      43: return

  protected final void computeGregorianFields(int);
    Code:
       0: iload_1
       1: ldc_w         #315                // int 1721426
       4: isub
       5: i2l
       6: lstore        6
       8: iconst_1
       9: newarray       int
      11: astore        8
      13: lload         6
      15: ldc_w         #316                // int 146097
      18: aload         8
      20: invokestatic  #317                // Method floorDivide:(JI[I)I
      23: istore        9
      25: aload         8
      27: iconst_0
      28: iaload
      29: ldc_w         #318                // int 36524
      32: aload         8
      34: invokestatic  #319                // Method floorDivide:(II[I)I
      37: istore        10
      39: aload         8
      41: iconst_0
      42: iaload
      43: sipush        1461
      46: aload         8
      48: invokestatic  #319                // Method floorDivide:(II[I)I
      51: istore        11
      53: aload         8
      55: iconst_0
      56: iaload
      57: sipush        365
      60: aload         8
      62: invokestatic  #319                // Method floorDivide:(II[I)I
      65: istore        12
      67: sipush        400
      70: iload         9
      72: imul
      73: bipush        100
      75: iload         10
      77: imul
      78: iadd
      79: iconst_4
      80: iload         11
      82: imul
      83: iadd
      84: iload         12
      86: iadd
      87: istore_2
      88: aload         8
      90: iconst_0
      91: iaload
      92: istore        5
      94: iload         10
      96: iconst_4
      97: if_icmpeq     106
     100: iload         12
     102: iconst_4
     103: if_icmpne     114
     106: sipush        365
     109: istore        5
     111: goto          117
     114: iinc          2, 1
     117: iload_2
     118: iconst_3
     119: iand
     120: ifne          142
     123: iload_2
     124: bipush        100
     126: irem
     127: ifne          138
     130: iload_2
     131: sipush        400
     134: irem
     135: ifne          142
     138: iconst_1
     139: goto          143
     142: iconst_0
     143: istore        13
     145: iconst_0
     146: istore        14
     148: iload         13
     150: ifeq          158
     153: bipush        60
     155: goto          160
     158: bipush        59
     160: istore        15
     162: iload         5
     164: iload         15
     166: if_icmplt     181
     169: iload         13
     171: ifeq          178
     174: iconst_1
     175: goto          179
     178: iconst_2
     179: istore        14
     181: bipush        12
     183: iload         5
     185: iload         14
     187: iadd
     188: imul
     189: bipush        6
     191: iadd
     192: sipush        367
     195: idiv
     196: istore_3
     197: iload         5
     199: getstatic     #320                // Field GREGORIAN_MONTH_COUNT:[[I
     202: iload_3
     203: aaload
     204: iload         13
     206: ifeq          213
     209: iconst_3
     210: goto          214
     213: iconst_2
     214: iaload
     215: isub
     216: iconst_1
     217: iadd
     218: istore        4
     220: aload_0
     221: iload_2
     222: putfield      #321                // Field gregorianYear:I
     225: aload_0
     226: iload_3
     227: putfield      #322                // Field gregorianMonth:I
     230: aload_0
     231: iload         4
     233: putfield      #323                // Field gregorianDayOfMonth:I
     236: aload_0
     237: iload         5
     239: iconst_1
     240: iadd
     241: putfield      #324                // Field gregorianDayOfYear:I
     244: return

  private final void computeWeekFields();
    Code:
       0: aload_0
       1: getfield      #42                 // Field fields:[I
       4: bipush        19
       6: iaload
       7: istore_1
       8: aload_0
       9: getfield      #42                 // Field fields:[I
      12: bipush        7
      14: iaload
      15: istore_2
      16: aload_0
      17: getfield      #42                 // Field fields:[I
      20: bipush        6
      22: iaload
      23: istore_3
      24: iload_1
      25: istore        4
      27: iload_2
      28: bipush        7
      30: iadd
      31: aload_0
      32: invokevirtual #144                // Method getFirstDayOfWeek:()I
      35: isub
      36: bipush        7
      38: irem
      39: istore        5
      41: iload_2
      42: iload_3
      43: isub
      44: sipush        7001
      47: iadd
      48: aload_0
      49: invokevirtual #144                // Method getFirstDayOfWeek:()I
      52: isub
      53: bipush        7
      55: irem
      56: istore        6
      58: iload_3
      59: iconst_1
      60: isub
      61: iload         6
      63: iadd
      64: bipush        7
      66: idiv
      67: istore        7
      69: bipush        7
      71: iload         6
      73: isub
      74: aload_0
      75: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
      78: if_icmplt     84
      81: iinc          7, 1
      84: iload         7
      86: ifne          115
      89: iload_3
      90: aload_0
      91: iload_1
      92: iconst_1
      93: isub
      94: invokevirtual #160                // Method handleGetYearLength:(I)I
      97: iadd
      98: istore        8
     100: aload_0
     101: iload         8
     103: iload_2
     104: invokevirtual #325                // Method weekNumber:(II)I
     107: istore        7
     109: iinc          4, -1
     112: goto          180
     115: aload_0
     116: iload_1
     117: invokevirtual #160                // Method handleGetYearLength:(I)I
     120: istore        8
     122: iload_3
     123: iload         8
     125: iconst_5
     126: isub
     127: if_icmplt     180
     130: iload         5
     132: iload         8
     134: iadd
     135: iload_3
     136: isub
     137: bipush        7
     139: irem
     140: istore        9
     142: iload         9
     144: ifge          150
     147: iinc          9, 7
     150: bipush        6
     152: iload         9
     154: isub
     155: aload_0
     156: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
     159: if_icmplt     180
     162: iload_3
     163: bipush        7
     165: iadd
     166: iload         5
     168: isub
     169: iload         8
     171: if_icmple     180
     174: iconst_1
     175: istore        7
     177: iinc          4, 1
     180: aload_0
     181: getfield      #42                 // Field fields:[I
     184: iconst_3
     185: iload         7
     187: iastore
     188: aload_0
     189: getfield      #42                 // Field fields:[I
     192: bipush        17
     194: iload         4
     196: iastore
     197: aload_0
     198: getfield      #42                 // Field fields:[I
     201: iconst_5
     202: iaload
     203: istore        8
     205: aload_0
     206: getfield      #42                 // Field fields:[I
     209: iconst_4
     210: aload_0
     211: iload         8
     213: iload_2
     214: invokevirtual #325                // Method weekNumber:(II)I
     217: iastore
     218: aload_0
     219: getfield      #42                 // Field fields:[I
     222: bipush        8
     224: iload         8
     226: iconst_1
     227: isub
     228: bipush        7
     230: idiv
     231: iconst_1
     232: iadd
     233: iastore
     234: return

  protected int resolveFields(int[][][]);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_0
       3: istore        4
       5: iload         4
       7: aload_1
       8: arraylength
       9: if_icmpge     176
      12: iload_2
      13: ifge          176
      16: aload_1
      17: iload         4
      19: aaload
      20: astore        5
      22: iconst_0
      23: istore        6
      25: iconst_0
      26: istore        7
      28: iload         7
      30: aload         5
      32: arraylength
      33: if_icmpge     170
      36: aload         5
      38: iload         7
      40: aaload
      41: astore        8
      43: iconst_0
      44: istore        9
      46: aload         8
      48: iconst_0
      49: iaload
      50: bipush        32
      52: if_icmplt     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore        10
      62: iload         10
      64: aload         8
      66: arraylength
      67: if_icmpge     105
      70: aload_0
      71: getfield      #39                 // Field stamp:[I
      74: aload         8
      76: iload         10
      78: iaload
      79: iaload
      80: istore        11
      82: iload         11
      84: ifne          90
      87: goto          164
      90: iload         9
      92: iload         11
      94: invokestatic  #326                // Method java/lang/Math.max:(II)I
      97: istore        9
      99: iinc          10, 1
     102: goto          62
     105: iload         9
     107: iload         6
     109: if_icmple     164
     112: aload         8
     114: iconst_0
     115: iaload
     116: istore_3
     117: iload_3
     118: bipush        32
     120: if_icmplt     153
     123: iload_3
     124: bipush        31
     126: iand
     127: istore_3
     128: iload_3
     129: iconst_5
     130: if_icmpne     148
     133: aload_0
     134: getfield      #39                 // Field stamp:[I
     137: iconst_4
     138: iaload
     139: aload_0
     140: getfield      #39                 // Field stamp:[I
     143: iload_3
     144: iaload
     145: if_icmpge     155
     148: iload_3
     149: istore_2
     150: goto          155
     153: iload_3
     154: istore_2
     155: iload_2
     156: iload_3
     157: if_icmpne     164
     160: iload         9
     162: istore        6
     164: iinc          7, 1
     167: goto          28
     170: iinc          4, 1
     173: goto          5
     176: iload_2
     177: bipush        32
     179: if_icmplt     189
     182: iload_2
     183: bipush        31
     185: iand
     186: goto          190
     189: iload_2
     190: ireturn

  protected int newestStamp(int, int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iload_1
       4: istore        5
       6: iload         5
       8: iload_2
       9: if_icmpgt     39
      12: aload_0
      13: getfield      #39                 // Field stamp:[I
      16: iload         5
      18: iaload
      19: iload         4
      21: if_icmple     33
      24: aload_0
      25: getfield      #39                 // Field stamp:[I
      28: iload         5
      30: iaload
      31: istore        4
      33: iinc          5, 1
      36: goto          6
      39: iload         4
      41: ireturn

  protected final int getStamp(int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field stamp:[I
       4: iload_1
       5: iaload
       6: ireturn

  protected int newerField(int, int);
    Code:
       0: aload_0
       1: getfield      #39                 // Field stamp:[I
       4: iload_2
       5: iaload
       6: aload_0
       7: getfield      #39                 // Field stamp:[I
      10: iload_1
      11: iaload
      12: if_icmple     17
      15: iload_2
      16: ireturn
      17: iload_1
      18: ireturn

  protected void validateFields();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #42                 // Field fields:[I
       7: arraylength
       8: if_icmpge     32
      11: aload_0
      12: getfield      #39                 // Field stamp:[I
      15: iload_1
      16: iaload
      17: iconst_2
      18: if_icmplt     26
      21: aload_0
      22: iload_1
      23: invokevirtual #327                // Method validateField:(I)V
      26: iinc          1, 1
      29: goto          2
      32: return

  protected void validateField(int);
    Code:
       0: iload_1
       1: tableswitch   { // 5 to 8
                     5: 32
                     6: 56
                     7: 112
                     8: 75
               default: 112
          }
      32: aload_0
      33: invokevirtual #328                // Method handleGetExtendedYear:()I
      36: istore_2
      37: aload_0
      38: iload_1
      39: iconst_1
      40: aload_0
      41: iload_2
      42: aload_0
      43: iconst_2
      44: invokevirtual #170                // Method internalGet:(I)I
      47: invokevirtual #159                // Method handleGetMonthLength:(II)I
      50: invokevirtual #329                // Method validateField:(III)V
      53: goto          127
      56: aload_0
      57: invokevirtual #328                // Method handleGetExtendedYear:()I
      60: istore_2
      61: aload_0
      62: iload_1
      63: iconst_1
      64: aload_0
      65: iload_2
      66: invokevirtual #160                // Method handleGetYearLength:(I)I
      69: invokevirtual #329                // Method validateField:(III)V
      72: goto          127
      75: aload_0
      76: iload_1
      77: invokevirtual #170                // Method internalGet:(I)I
      80: ifne          94
      83: new           #93                 // class java/lang/IllegalArgumentException
      86: dup
      87: ldc_w         #330                // String DAY_OF_WEEK_IN_MONTH cannot be zero
      90: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: aload_0
      95: iload_1
      96: aload_0
      97: iload_1
      98: invokevirtual #164                // Method getMinimum:(I)I
     101: aload_0
     102: iload_1
     103: invokevirtual #161                // Method getMaximum:(I)I
     106: invokevirtual #329                // Method validateField:(III)V
     109: goto          127
     112: aload_0
     113: iload_1
     114: aload_0
     115: iload_1
     116: invokevirtual #164                // Method getMinimum:(I)I
     119: aload_0
     120: iload_1
     121: invokevirtual #161                // Method getMaximum:(I)I
     124: invokevirtual #329                // Method validateField:(III)V
     127: return

  protected final void validateField(int, int, int);
    Code:
       0: aload_0
       1: getfield      #42                 // Field fields:[I
       4: iload_1
       5: iaload
       6: istore        4
       8: iload         4
      10: iload_2
      11: if_icmplt     20
      14: iload         4
      16: iload_3
      17: if_icmple     76
      20: new           #93                 // class java/lang/IllegalArgumentException
      23: dup
      24: new           #25                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      31: aload_0
      32: iload_1
      33: invokevirtual #184                // Method fieldName:(I)Ljava/lang/String;
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: bipush        61
      41: invokevirtual #247                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      44: iload         4
      46: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc_w         #331                // String , valid range=
      52: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_2
      56: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: ldc_w         #332                // String ..
      62: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: iload_3
      66: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      69: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: return

  protected void computeTime();
    Code:
       0: aload_0
       1: invokevirtual #124                // Method isLenient:()Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #333                // Method validateFields:()V
      11: aload_0
      12: invokevirtual #334                // Method computeJulianDay:()I
      15: istore_1
      16: iload_1
      17: invokestatic  #335                // Method julianDayToMillis:(I)J
      20: lstore_2
      21: aload_0
      22: getfield      #39                 // Field stamp:[I
      25: bipush        21
      27: iaload
      28: iconst_2
      29: if_icmplt     63
      32: aload_0
      33: bipush        9
      35: bipush        14
      37: iconst_0
      38: invokevirtual #336                // Method newestStamp:(III)I
      41: aload_0
      42: getfield      #39                 // Field stamp:[I
      45: bipush        21
      47: iaload
      48: if_icmpgt     63
      51: aload_0
      52: bipush        21
      54: invokevirtual #170                // Method internalGet:(I)I
      57: i2l
      58: lstore        4
      60: goto          114
      63: aload_0
      64: bipush        11
      66: invokevirtual #170                // Method internalGet:(I)I
      69: invokestatic  #337                // Method java/lang/Math.abs:(I)I
      72: istore        6
      74: iload         6
      76: aload_0
      77: bipush        10
      79: invokevirtual #170                // Method internalGet:(I)I
      82: invokestatic  #337                // Method java/lang/Math.abs:(I)I
      85: invokestatic  #326                // Method java/lang/Math.max:(II)I
      88: istore        6
      90: iload         6
      92: sipush        548
      95: if_icmple     107
      98: aload_0
      99: invokevirtual #338                // Method computeMillisInDayLong:()J
     102: lstore        4
     104: goto          114
     107: aload_0
     108: invokevirtual #339                // Method computeMillisInDay:()I
     111: i2l
     112: lstore        4
     114: aload_0
     115: getfield      #39                 // Field stamp:[I
     118: bipush        15
     120: iaload
     121: iconst_2
     122: if_icmpge     136
     125: aload_0
     126: getfield      #39                 // Field stamp:[I
     129: bipush        16
     131: iaload
     132: iconst_2
     133: if_icmplt     162
     136: aload_0
     137: lload_2
     138: lload         4
     140: ladd
     141: aload_0
     142: bipush        15
     144: invokevirtual #170                // Method internalGet:(I)I
     147: aload_0
     148: bipush        16
     150: invokevirtual #170                // Method internalGet:(I)I
     153: iadd
     154: i2l
     155: lsub
     156: putfield      #121                // Field time:J
     159: goto          337
     162: aload_0
     163: getfield      #13                 // Field lenient:Z
     166: ifeq          177
     169: aload_0
     170: getfield      #15                 // Field skippedWallTime:I
     173: iconst_2
     174: if_icmpne     320
     177: aload_0
     178: lload_2
     179: lload         4
     181: invokevirtual #340                // Method computeZoneOffset:(JJ)I
     184: istore        6
     186: lload_2
     187: lload         4
     189: ladd
     190: iload         6
     192: i2l
     193: lsub
     194: lstore        7
     196: aload_0
     197: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     200: lload         7
     202: invokevirtual #341                // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
     205: istore        9
     207: iload         6
     209: iload         9
     211: if_icmpeq     311
     214: aload_0
     215: getfield      #13                 // Field lenient:Z
     218: ifne          232
     221: new           #93                 // class java/lang/IllegalArgumentException
     224: dup
     225: ldc_w         #342                // String The specified wall time does not exist due to time zone offset transition.
     228: invokespecial #95                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     231: athrow
     232: getstatic     #343                // Field $assertionsDisabled:Z
     235: ifne          258
     238: aload_0
     239: getfield      #15                 // Field skippedWallTime:I
     242: iconst_2
     243: if_icmpeq     258
     246: new           #344                // class java/lang/AssertionError
     249: dup
     250: aload_0
     251: getfield      #15                 // Field skippedWallTime:I
     254: invokespecial #345                // Method java/lang/AssertionError."<init>":(I)V
     257: athrow
     258: aload_0
     259: lload         7
     261: invokespecial #194                // Method getImmediatePreviousZoneTransition:(J)Ljava/lang/Long;
     264: astore        10
     266: aload         10
     268: ifnonnull     299
     271: new           #196                // class java/lang/RuntimeException
     274: dup
     275: new           #25                 // class java/lang/StringBuilder
     278: dup
     279: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     282: ldc           #197                // String Could not locate a time zone transition before
     284: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: lload         7
     289: invokevirtual #126                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     292: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     295: invokespecial #198                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     298: athrow
     299: aload_0
     300: aload         10
     302: invokevirtual #195                // Method java/lang/Long.longValue:()J
     305: putfield      #121                // Field time:J
     308: goto          317
     311: aload_0
     312: lload         7
     314: putfield      #121                // Field time:J
     317: goto          337
     320: aload_0
     321: lload_2
     322: lload         4
     324: ladd
     325: aload_0
     326: lload_2
     327: lload         4
     329: invokevirtual #340                // Method computeZoneOffset:(JJ)I
     332: i2l
     333: lsub
     334: putfield      #121                // Field time:J
     337: return

  private java.lang.Long getImmediatePreviousZoneTransition(long);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
       6: instanceof    #346                // class com/ibm/icu/util/BasicTimeZone
       9: ifeq          43
      12: aload_0
      13: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      16: checkcast     #346                // class com/ibm/icu/util/BasicTimeZone
      19: lload_1
      20: iconst_1
      21: invokevirtual #347                // Method com/ibm/icu/util/BasicTimeZone.getPreviousTransition:(JZ)Lcom/ibm/icu/util/TimeZoneTransition;
      24: astore        4
      26: aload         4
      28: ifnull        40
      31: aload         4
      33: invokevirtual #348                // Method com/ibm/icu/util/TimeZoneTransition.getTime:()J
      36: invokestatic  #349                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      39: astore_3
      40: goto          71
      43: aload_0
      44: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      47: lload_1
      48: ldc2_w        #350                // long 7200000l
      51: invokestatic  #352                // Method getPreviousZoneTransitionTime:(Lcom/ibm/icu/util/TimeZone;JJ)Ljava/lang/Long;
      54: astore_3
      55: aload_3
      56: ifnonnull     71
      59: aload_0
      60: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      63: lload_1
      64: ldc2_w        #353                // long 108000000l
      67: invokestatic  #352                // Method getPreviousZoneTransitionTime:(Lcom/ibm/icu/util/TimeZone;JJ)Ljava/lang/Long;
      70: astore_3
      71: aload_3
      72: areturn

  private static java.lang.Long getPreviousZoneTransitionTime(com.ibm.icu.util.TimeZone, long, long);
    Code:
       0: getstatic     #343                // Field $assertionsDisabled:Z
       3: ifne          20
       6: lload_3
       7: lconst_0
       8: lcmp
       9: ifgt          20
      12: new           #344                // class java/lang/AssertionError
      15: dup
      16: invokespecial #355                // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: lload_1
      21: lstore        5
      23: lload_1
      24: lload_3
      25: lsub
      26: lconst_1
      27: lsub
      28: lstore        7
      30: aload_0
      31: lload         5
      33: invokevirtual #341                // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
      36: istore        9
      38: aload_0
      39: lload         7
      41: invokevirtual #341                // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
      44: istore        10
      46: iload         9
      48: iload         10
      50: if_icmpne     55
      53: aconst_null
      54: areturn
      55: aload_0
      56: iload         9
      58: lload         5
      60: lload         7
      62: invokestatic  #356                // Method findPreviousZoneTransitionTime:(Lcom/ibm/icu/util/TimeZone;IJJ)Ljava/lang/Long;
      65: areturn

  private static java.lang.Long findPreviousZoneTransitionTime(com.ibm.icu.util.TimeZone, int, long, long);
    Code:
       0: iconst_0
       1: istore        6
       3: lconst_0
       4: lstore        7
       6: getstatic     #357                // Field FIND_ZONE_TRANSITION_TIME_UNITS:[I
       9: astore        9
      11: aload         9
      13: arraylength
      14: istore        10
      16: iconst_0
      17: istore        11
      19: iload         11
      21: iload         10
      23: if_icmpge     83
      26: aload         9
      28: iload         11
      30: iaload
      31: istore        12
      33: lload         4
      35: iload         12
      37: i2l
      38: ldiv
      39: lstore        13
      41: lload_2
      42: iload         12
      44: i2l
      45: ldiv
      46: lstore        15
      48: lload         15
      50: lload         13
      52: lcmp
      53: ifle          77
      56: lload         13
      58: lload         15
      60: ladd
      61: lconst_1
      62: ladd
      63: iconst_1
      64: lushr
      65: iload         12
      67: i2l
      68: lmul
      69: lstore        7
      71: iconst_1
      72: istore        6
      74: goto          83
      77: iinc          11, 1
      80: goto          19
      83: iload         6
      85: ifne          96
      88: lload_2
      89: lload         4
      91: ladd
      92: iconst_1
      93: lushr
      94: lstore        7
      96: iload         6
      98: ifeq          143
     101: lload         7
     103: lload_2
     104: lcmp
     105: ifeq          134
     108: aload_0
     109: lload         7
     111: invokevirtual #341                // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
     114: istore        9
     116: iload         9
     118: iload_1
     119: if_icmpeq     131
     122: aload_0
     123: iload_1
     124: lload_2
     125: lload         7
     127: invokestatic  #356                // Method findPreviousZoneTransitionTime:(Lcom/ibm/icu/util/TimeZone;IJJ)Ljava/lang/Long;
     130: areturn
     131: lload         7
     133: lstore_2
     134: lload         7
     136: lconst_1
     137: lsub
     138: lstore        7
     140: goto          151
     143: lload_2
     144: lload         4
     146: ladd
     147: iconst_1
     148: lushr
     149: lstore        7
     151: lload         7
     153: lload         4
     155: lcmp
     156: ifne          164
     159: lload_2
     160: invokestatic  #349                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     163: areturn
     164: aload_0
     165: lload         7
     167: invokevirtual #341                // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
     170: istore        9
     172: iload         9
     174: iload_1
     175: if_icmpeq     197
     178: iload         6
     180: ifeq          188
     183: lload_2
     184: invokestatic  #349                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     187: areturn
     188: aload_0
     189: iload_1
     190: lload_2
     191: lload         7
     193: invokestatic  #356                // Method findPreviousZoneTransitionTime:(Lcom/ibm/icu/util/TimeZone;IJJ)Ljava/lang/Long;
     196: areturn
     197: aload_0
     198: iload_1
     199: lload         7
     201: lload         4
     203: invokestatic  #356                // Method findPreviousZoneTransitionTime:(Lcom/ibm/icu/util/TimeZone;IJJ)Ljava/lang/Long;
     206: areturn

  protected int computeMillisInDay();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #39                 // Field stamp:[I
       6: bipush        11
       8: iaload
       9: istore_2
      10: aload_0
      11: getfield      #39                 // Field stamp:[I
      14: bipush        10
      16: iaload
      17: aload_0
      18: getfield      #39                 // Field stamp:[I
      21: bipush        9
      23: iaload
      24: invokestatic  #326                // Method java/lang/Math.max:(II)I
      27: istore_3
      28: iload_3
      29: iload_2
      30: if_icmple     37
      33: iload_3
      34: goto          38
      37: iload_2
      38: istore        4
      40: iload         4
      42: ifeq          84
      45: iload         4
      47: iload_2
      48: if_icmpne     63
      51: iload_1
      52: aload_0
      53: bipush        11
      55: invokevirtual #170                // Method internalGet:(I)I
      58: iadd
      59: istore_1
      60: goto          84
      63: iload_1
      64: aload_0
      65: bipush        10
      67: invokevirtual #170                // Method internalGet:(I)I
      70: iadd
      71: istore_1
      72: iload_1
      73: bipush        12
      75: aload_0
      76: bipush        9
      78: invokevirtual #170                // Method internalGet:(I)I
      81: imul
      82: iadd
      83: istore_1
      84: iload_1
      85: bipush        60
      87: imul
      88: istore_1
      89: iload_1
      90: aload_0
      91: bipush        12
      93: invokevirtual #170                // Method internalGet:(I)I
      96: iadd
      97: istore_1
      98: iload_1
      99: bipush        60
     101: imul
     102: istore_1
     103: iload_1
     104: aload_0
     105: bipush        13
     107: invokevirtual #170                // Method internalGet:(I)I
     110: iadd
     111: istore_1
     112: iload_1
     113: sipush        1000
     116: imul
     117: istore_1
     118: iload_1
     119: aload_0
     120: bipush        14
     122: invokevirtual #170                // Method internalGet:(I)I
     125: iadd
     126: istore_1
     127: iload_1
     128: ireturn

  protected long computeMillisInDayLong();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #39                 // Field stamp:[I
       6: bipush        11
       8: iaload
       9: istore_3
      10: aload_0
      11: getfield      #39                 // Field stamp:[I
      14: bipush        10
      16: iaload
      17: aload_0
      18: getfield      #39                 // Field stamp:[I
      21: bipush        9
      23: iaload
      24: invokestatic  #326                // Method java/lang/Math.max:(II)I
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmple     40
      35: iload         4
      37: goto          41
      40: iload_3
      41: istore        5
      43: iload         5
      45: ifeq          90
      48: iload         5
      50: iload_3
      51: if_icmpne     67
      54: lload_1
      55: aload_0
      56: bipush        11
      58: invokevirtual #170                // Method internalGet:(I)I
      61: i2l
      62: ladd
      63: lstore_1
      64: goto          90
      67: lload_1
      68: aload_0
      69: bipush        10
      71: invokevirtual #170                // Method internalGet:(I)I
      74: i2l
      75: ladd
      76: lstore_1
      77: lload_1
      78: bipush        12
      80: aload_0
      81: bipush        9
      83: invokevirtual #170                // Method internalGet:(I)I
      86: imul
      87: i2l
      88: ladd
      89: lstore_1
      90: lload_1
      91: ldc2_w        #358                // long 60l
      94: lmul
      95: lstore_1
      96: lload_1
      97: aload_0
      98: bipush        12
     100: invokevirtual #170                // Method internalGet:(I)I
     103: i2l
     104: ladd
     105: lstore_1
     106: lload_1
     107: ldc2_w        #358                // long 60l
     110: lmul
     111: lstore_1
     112: lload_1
     113: aload_0
     114: bipush        13
     116: invokevirtual #170                // Method internalGet:(I)I
     119: i2l
     120: ladd
     121: lstore_1
     122: lload_1
     123: ldc2_w        #190                // long 1000l
     126: lmul
     127: lstore_1
     128: lload_1
     129: aload_0
     130: bipush        14
     132: invokevirtual #170                // Method internalGet:(I)I
     135: i2l
     136: ladd
     137: lstore_1
     138: lload_1
     139: lreturn

  protected int computeZoneOffset(long, int);
    Code:
       0: iconst_2
       1: newarray       int
       3: astore        4
       5: lload_1
       6: iload_3
       7: i2l
       8: ladd
       9: lstore        5
      11: aload_0
      12: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      15: instanceof    #346                // class com/ibm/icu/util/BasicTimeZone
      18: ifeq          74
      21: aload_0
      22: getfield      #14                 // Field repeatedWallTime:I
      25: iconst_1
      26: if_icmpne     33
      29: iconst_4
      30: goto          35
      33: bipush        12
      35: istore        7
      37: aload_0
      38: getfield      #15                 // Field skippedWallTime:I
      41: iconst_1
      42: if_icmpne     50
      45: bipush        12
      47: goto          51
      50: iconst_4
      51: istore        8
      53: aload_0
      54: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      57: checkcast     #346                // class com/ibm/icu/util/BasicTimeZone
      60: lload         5
      62: iload         8
      64: iload         7
      66: aload         4
      68: invokevirtual #360                // Method com/ibm/icu/util/BasicTimeZone.getOffsetFromLocal:(JII[I)V
      71: goto          229
      74: aload_0
      75: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      78: lload         5
      80: iconst_1
      81: aload         4
      83: invokevirtual #307                // Method com/ibm/icu/util/TimeZone.getOffset:(JZ[I)V
      86: iconst_0
      87: istore        7
      89: aload_0
      90: getfield      #14                 // Field repeatedWallTime:I
      93: iconst_1
      94: if_icmpne     189
      97: lload         5
      99: aload         4
     101: iconst_0
     102: iaload
     103: aload         4
     105: iconst_1
     106: iaload
     107: iadd
     108: i2l
     109: lsub
     110: lstore        8
     112: aload_0
     113: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     116: lload         8
     118: ldc2_w        #361                // long 21600000l
     121: lsub
     122: invokevirtual #341                // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
     125: istore        10
     127: aload         4
     129: iconst_0
     130: iaload
     131: aload         4
     133: iconst_1
     134: iaload
     135: iadd
     136: iload         10
     138: isub
     139: istore        11
     141: getstatic     #343                // Field $assertionsDisabled:Z
     144: ifne          165
     147: iload         11
     149: ldc_w         #363                // int -21600000
     152: if_icmpgt     165
     155: new           #344                // class java/lang/AssertionError
     158: dup
     159: iload         11
     161: invokespecial #345                // Method java/lang/AssertionError."<init>":(I)V
     164: athrow
     165: iload         11
     167: ifge          189
     170: iconst_1
     171: istore        7
     173: aload_0
     174: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     177: lload         5
     179: iload         11
     181: i2l
     182: ladd
     183: iconst_1
     184: aload         4
     186: invokevirtual #307                // Method com/ibm/icu/util/TimeZone.getOffset:(JZ[I)V
     189: iload         7
     191: ifne          229
     194: aload_0
     195: getfield      #15                 // Field skippedWallTime:I
     198: iconst_1
     199: if_icmpne     229
     202: lload         5
     204: aload         4
     206: iconst_0
     207: iaload
     208: aload         4
     210: iconst_1
     211: iaload
     212: iadd
     213: i2l
     214: lsub
     215: lstore        8
     217: aload_0
     218: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     221: lload         8
     223: iconst_0
     224: aload         4
     226: invokevirtual #307                // Method com/ibm/icu/util/TimeZone.getOffset:(JZ[I)V
     229: aload         4
     231: iconst_0
     232: iaload
     233: aload         4
     235: iconst_1
     236: iaload
     237: iadd
     238: ireturn

  protected int computeZoneOffset(long, long);
    Code:
       0: iconst_2
       1: newarray       int
       3: astore        5
       5: lload_1
       6: lload_3
       7: ladd
       8: lstore        6
      10: aload_0
      11: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      14: instanceof    #346                // class com/ibm/icu/util/BasicTimeZone
      17: ifeq          73
      20: aload_0
      21: getfield      #14                 // Field repeatedWallTime:I
      24: iconst_1
      25: if_icmpne     32
      28: iconst_4
      29: goto          34
      32: bipush        12
      34: istore        8
      36: aload_0
      37: getfield      #15                 // Field skippedWallTime:I
      40: iconst_1
      41: if_icmpne     49
      44: bipush        12
      46: goto          50
      49: iconst_4
      50: istore        9
      52: aload_0
      53: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      56: checkcast     #346                // class com/ibm/icu/util/BasicTimeZone
      59: lload         6
      61: iload         9
      63: iload         8
      65: aload         5
      67: invokevirtual #360                // Method com/ibm/icu/util/BasicTimeZone.getOffsetFromLocal:(JII[I)V
      70: goto          228
      73: aload_0
      74: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
      77: lload         6
      79: iconst_1
      80: aload         5
      82: invokevirtual #307                // Method com/ibm/icu/util/TimeZone.getOffset:(JZ[I)V
      85: iconst_0
      86: istore        8
      88: aload_0
      89: getfield      #14                 // Field repeatedWallTime:I
      92: iconst_1
      93: if_icmpne     188
      96: lload         6
      98: aload         5
     100: iconst_0
     101: iaload
     102: aload         5
     104: iconst_1
     105: iaload
     106: iadd
     107: i2l
     108: lsub
     109: lstore        9
     111: aload_0
     112: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     115: lload         9
     117: ldc2_w        #361                // long 21600000l
     120: lsub
     121: invokevirtual #341                // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
     124: istore        11
     126: aload         5
     128: iconst_0
     129: iaload
     130: aload         5
     132: iconst_1
     133: iaload
     134: iadd
     135: iload         11
     137: isub
     138: istore        12
     140: getstatic     #343                // Field $assertionsDisabled:Z
     143: ifne          164
     146: iload         12
     148: ldc_w         #363                // int -21600000
     151: if_icmpgt     164
     154: new           #344                // class java/lang/AssertionError
     157: dup
     158: iload         12
     160: invokespecial #345                // Method java/lang/AssertionError."<init>":(I)V
     163: athrow
     164: iload         12
     166: ifge          188
     169: iconst_1
     170: istore        8
     172: aload_0
     173: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     176: lload         6
     178: iload         12
     180: i2l
     181: ladd
     182: iconst_1
     183: aload         5
     185: invokevirtual #307                // Method com/ibm/icu/util/TimeZone.getOffset:(JZ[I)V
     188: iload         8
     190: ifne          228
     193: aload_0
     194: getfield      #15                 // Field skippedWallTime:I
     197: iconst_1
     198: if_icmpne     228
     201: lload         6
     203: aload         5
     205: iconst_0
     206: iaload
     207: aload         5
     209: iconst_1
     210: iaload
     211: iadd
     212: i2l
     213: lsub
     214: lstore        9
     216: aload_0
     217: getfield      #17                 // Field zone:Lcom/ibm/icu/util/TimeZone;
     220: lload         9
     222: iconst_0
     223: aload         5
     225: invokevirtual #307                // Method com/ibm/icu/util/TimeZone.getOffset:(JZ[I)V
     228: aload         5
     230: iconst_0
     231: iaload
     232: aload         5
     234: iconst_1
     235: iaload
     236: iadd
     237: ireturn

  protected int computeJulianDay();
    Code:
       0: aload_0
       1: getfield      #39                 // Field stamp:[I
       4: bipush        20
       6: iaload
       7: iconst_2
       8: if_icmplt     48
      11: aload_0
      12: iconst_0
      13: bipush        8
      15: iconst_0
      16: invokevirtual #336                // Method newestStamp:(III)I
      19: istore_1
      20: aload_0
      21: bipush        17
      23: bipush        19
      25: iload_1
      26: invokevirtual #336                // Method newestStamp:(III)I
      29: istore_1
      30: iload_1
      31: aload_0
      32: getfield      #39                 // Field stamp:[I
      35: bipush        20
      37: iaload
      38: if_icmpgt     48
      41: aload_0
      42: bipush        20
      44: invokevirtual #170                // Method internalGet:(I)I
      47: ireturn
      48: aload_0
      49: aload_0
      50: invokevirtual #364                // Method getFieldResolutionTable:()[[[I
      53: invokevirtual #365                // Method resolveFields:([[[I)I
      56: istore_1
      57: iload_1
      58: ifge          63
      61: iconst_5
      62: istore_1
      63: aload_0
      64: iload_1
      65: invokevirtual #366                // Method handleComputeJulianDay:(I)I
      68: ireturn

  protected int[][][] getFieldResolutionTable();
    Code:
       0: getstatic     #367                // Field DATE_PRECEDENCE:[[[I
       3: areturn

  protected abstract int handleComputeMonthStart(int, int, boolean);

  protected abstract int handleGetExtendedYear();

  protected int handleGetMonthLength(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_1
       4: iadd
       5: iconst_1
       6: invokevirtual #368                // Method handleComputeMonthStart:(IIZ)I
       9: aload_0
      10: iload_1
      11: iload_2
      12: iconst_1
      13: invokevirtual #368                // Method handleComputeMonthStart:(IIZ)I
      16: isub
      17: ireturn

  protected int handleGetYearLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: iadd
       4: iconst_0
       5: iconst_0
       6: invokevirtual #368                // Method handleComputeMonthStart:(IIZ)I
       9: aload_0
      10: iload_1
      11: iconst_0
      12: iconst_0
      13: invokevirtual #368                // Method handleComputeMonthStart:(IIZ)I
      16: isub
      17: ireturn

  protected int[] handleCreateFields();
    Code:
       0: bipush        23
       2: newarray       int
       4: areturn

  protected int getDefaultMonthInYear(int);
    Code:
       0: iconst_0
       1: ireturn

  protected int getDefaultDayInMonth(int, int);
    Code:
       0: iconst_1
       1: ireturn

  protected int handleComputeJulianDay(int);
    Code:
       0: iload_1
       1: iconst_5
       2: if_icmpeq     16
       5: iload_1
       6: iconst_4
       7: if_icmpeq     16
      10: iload_1
      11: bipush        8
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: istore_2
      22: iload_1
      23: iconst_3
      24: if_icmpne     49
      27: aload_0
      28: bipush        17
      30: iconst_1
      31: invokevirtual #369                // Method newerField:(II)I
      34: bipush        17
      36: if_icmpne     49
      39: aload_0
      40: bipush        17
      42: invokevirtual #170                // Method internalGet:(I)I
      45: istore_3
      46: goto          54
      49: aload_0
      50: invokevirtual #328                // Method handleGetExtendedYear:()I
      53: istore_3
      54: aload_0
      55: bipush        19
      57: iload_3
      58: invokevirtual #370                // Method internalSet:(II)V
      61: iload_2
      62: ifeq          78
      65: aload_0
      66: iconst_2
      67: aload_0
      68: iload_3
      69: invokevirtual #371                // Method getDefaultMonthInYear:(I)I
      72: invokevirtual #372                // Method internalGet:(II)I
      75: goto          79
      78: iconst_0
      79: istore        4
      81: aload_0
      82: iload_3
      83: iload         4
      85: iload_2
      86: invokevirtual #368                // Method handleComputeMonthStart:(IIZ)I
      89: istore        5
      91: iload_1
      92: iconst_5
      93: if_icmpne     131
      96: aload_0
      97: iconst_5
      98: invokevirtual #288                // Method isSet:(I)Z
     101: ifeq          120
     104: iload         5
     106: aload_0
     107: iconst_5
     108: aload_0
     109: iload_3
     110: iload         4
     112: invokevirtual #373                // Method getDefaultDayInMonth:(II)I
     115: invokevirtual #372                // Method internalGet:(II)I
     118: iadd
     119: ireturn
     120: iload         5
     122: aload_0
     123: iload_3
     124: iload         4
     126: invokevirtual #373                // Method getDefaultDayInMonth:(II)I
     129: iadd
     130: ireturn
     131: iload_1
     132: bipush        6
     134: if_icmpne     147
     137: iload         5
     139: aload_0
     140: bipush        6
     142: invokevirtual #170                // Method internalGet:(I)I
     145: iadd
     146: ireturn
     147: aload_0
     148: invokevirtual #144                // Method getFirstDayOfWeek:()I
     151: istore        6
     153: iload         5
     155: iconst_1
     156: iadd
     157: invokestatic  #314                // Method julianDayToDayOfWeek:(I)I
     160: iload         6
     162: isub
     163: istore        7
     165: iload         7
     167: ifge          173
     170: iinc          7, 7
     173: iconst_0
     174: istore        8
     176: aload_0
     177: getstatic     #374                // Field DOW_PRECEDENCE:[[[I
     180: invokevirtual #365                // Method resolveFields:([[[I)I
     183: lookupswitch  { // 2
                     7: 208
                    18: 222
               default: 232
          }
     208: aload_0
     209: bipush        7
     211: invokevirtual #170                // Method internalGet:(I)I
     214: iload         6
     216: isub
     217: istore        8
     219: goto          232
     222: aload_0
     223: bipush        18
     225: invokevirtual #170                // Method internalGet:(I)I
     228: iconst_1
     229: isub
     230: istore        8
     232: iload         8
     234: bipush        7
     236: irem
     237: istore        8
     239: iload         8
     241: ifge          247
     244: iinc          8, 7
     247: iconst_1
     248: iload         7
     250: isub
     251: iload         8
     253: iadd
     254: istore        9
     256: iload_1
     257: bipush        8
     259: if_icmpne     341
     262: iload         9
     264: iconst_1
     265: if_icmpge     271
     268: iinc          9, 7
     271: aload_0
     272: bipush        8
     274: iconst_1
     275: invokevirtual #372                // Method internalGet:(II)I
     278: istore        10
     280: iload         10
     282: iflt          300
     285: iload         9
     287: bipush        7
     289: iload         10
     291: iconst_1
     292: isub
     293: imul
     294: iadd
     295: istore        9
     297: goto          338
     300: aload_0
     301: iconst_2
     302: iconst_0
     303: invokevirtual #372                // Method internalGet:(II)I
     306: istore        11
     308: aload_0
     309: iload_3
     310: iload         11
     312: invokevirtual #159                // Method handleGetMonthLength:(II)I
     315: istore        12
     317: iload         9
     319: iload         12
     321: iload         9
     323: isub
     324: bipush        7
     326: idiv
     327: iload         10
     329: iadd
     330: iconst_1
     331: iadd
     332: bipush        7
     334: imul
     335: iadd
     336: istore        9
     338: goto          371
     341: bipush        7
     343: iload         7
     345: isub
     346: aload_0
     347: invokevirtual #145                // Method getMinimalDaysInFirstWeek:()I
     350: if_icmpge     356
     353: iinc          9, 7
     356: iload         9
     358: bipush        7
     360: aload_0
     361: iload_1
     362: invokevirtual #170                // Method internalGet:(I)I
     365: iconst_1
     366: isub
     367: imul
     368: iadd
     369: istore        9
     371: iload         5
     373: iload         9
     375: iadd
     376: ireturn

  protected int computeGregorianMonthStart(int, int);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: bipush        11
       7: if_icmple     28
      10: iconst_1
      11: newarray       int
      13: astore_3
      14: iload_1
      15: iload_2
      16: bipush        12
      18: aload_3
      19: invokestatic  #319                // Method floorDivide:(II[I)I
      22: iadd
      23: istore_1
      24: aload_3
      25: iconst_0
      26: iaload
      27: istore_2
      28: iload_1
      29: iconst_4
      30: irem
      31: ifne          53
      34: iload_1
      35: bipush        100
      37: irem
      38: ifne          49
      41: iload_1
      42: sipush        400
      45: irem
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: istore_3
      55: iload_1
      56: iconst_1
      57: isub
      58: istore        4
      60: sipush        365
      63: iload         4
      65: imul
      66: iload         4
      68: iconst_4
      69: invokestatic  #375                // Method floorDivide:(II)I
      72: iadd
      73: iload         4
      75: bipush        100
      77: invokestatic  #375                // Method floorDivide:(II)I
      80: isub
      81: iload         4
      83: sipush        400
      86: invokestatic  #375                // Method floorDivide:(II)I
      89: iadd
      90: ldc_w         #315                // int 1721426
      93: iadd
      94: iconst_1
      95: isub
      96: istore        5
      98: iload_2
      99: ifeq          122
     102: iload         5
     104: getstatic     #320                // Field GREGORIAN_MONTH_COUNT:[[I
     107: iload_2
     108: aaload
     109: iload_3
     110: ifeq          117
     113: iconst_3
     114: goto          118
     117: iconst_2
     118: iaload
     119: iadd
     120: istore        5
     122: iload         5
     124: ireturn

  protected void handleComputeFields(int);
    Code:
       0: aload_0
       1: iconst_2
       2: aload_0
       3: invokevirtual #376                // Method getGregorianMonth:()I
       6: invokevirtual #370                // Method internalSet:(II)V
       9: aload_0
      10: iconst_5
      11: aload_0
      12: invokevirtual #377                // Method getGregorianDayOfMonth:()I
      15: invokevirtual #370                // Method internalSet:(II)V
      18: aload_0
      19: bipush        6
      21: aload_0
      22: invokevirtual #378                // Method getGregorianDayOfYear:()I
      25: invokevirtual #370                // Method internalSet:(II)V
      28: aload_0
      29: invokevirtual #379                // Method getGregorianYear:()I
      32: istore_2
      33: aload_0
      34: bipush        19
      36: iload_2
      37: invokevirtual #370                // Method internalSet:(II)V
      40: iconst_1
      41: istore_3
      42: iload_2
      43: iconst_1
      44: if_icmpge     53
      47: iconst_0
      48: istore_3
      49: iconst_1
      50: iload_2
      51: isub
      52: istore_2
      53: aload_0
      54: iconst_0
      55: iload_3
      56: invokevirtual #370                // Method internalSet:(II)V
      59: aload_0
      60: iconst_1
      61: iload_2
      62: invokevirtual #370                // Method internalSet:(II)V
      65: return

  protected final int getGregorianYear();
    Code:
       0: aload_0
       1: getfield      #321                // Field gregorianYear:I
       4: ireturn

  protected final int getGregorianMonth();
    Code:
       0: aload_0
       1: getfield      #322                // Field gregorianMonth:I
       4: ireturn

  protected final int getGregorianDayOfYear();
    Code:
       0: aload_0
       1: getfield      #324                // Field gregorianDayOfYear:I
       4: ireturn

  protected final int getGregorianDayOfMonth();
    Code:
       0: aload_0
       1: getfield      #323                // Field gregorianDayOfMonth:I
       4: ireturn

  public final int getFieldCount();
    Code:
       0: aload_0
       1: getfield      #42                 // Field fields:[I
       4: arraylength
       5: ireturn

  protected final void internalSet(int, int);
    Code:
       0: iconst_1
       1: iload_1
       2: ishl
       3: aload_0
       4: getfield      #47                 // Field internalSetMask:I
       7: iand
       8: ifne          43
      11: new           #43                 // class java/lang/IllegalStateException
      14: dup
      15: new           #25                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc_w         #380                // String Subclass cannot set
      25: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: iload_1
      30: invokevirtual #184                // Method fieldName:(I)Ljava/lang/String;
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #45                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #42                 // Field fields:[I
      47: iload_1
      48: iload_2
      49: iastore
      50: aload_0
      51: getfield      #39                 // Field stamp:[I
      54: iload_1
      55: iconst_1
      56: iastore
      57: return

  protected static final boolean isGregorianLeapYear(int);
    Code:
       0: iload_0
       1: iconst_4
       2: irem
       3: ifne          25
       6: iload_0
       7: bipush        100
       9: irem
      10: ifne          21
      13: iload_0
      14: sipush        400
      17: irem
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected static final int gregorianMonthLength(int, int);
    Code:
       0: getstatic     #320                // Field GREGORIAN_MONTH_COUNT:[[I
       3: iload_1
       4: aaload
       5: iload_0
       6: invokestatic  #381                // Method isGregorianLeapYear:(I)Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: iaload
      18: ireturn

  protected static final int gregorianPreviousMonthLength(int, int);
    Code:
       0: iload_1
       1: ifle          14
       4: iload_0
       5: iload_1
       6: iconst_1
       7: isub
       8: invokestatic  #382                // Method gregorianMonthLength:(II)I
      11: goto          16
      14: bipush        31
      16: ireturn

  protected static final long floorDivide(long, long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: iflt          12
       6: lload_0
       7: lload_2
       8: ldiv
       9: goto          19
      12: lload_0
      13: lconst_1
      14: ladd
      15: lload_2
      16: ldiv
      17: lconst_1
      18: lsub
      19: lreturn

  protected static final int floorDivide(int, int);
    Code:
       0: iload_0
       1: iflt          10
       4: iload_0
       5: iload_1
       6: idiv
       7: goto          17
      10: iload_0
      11: iconst_1
      12: iadd
      13: iload_1
      14: idiv
      15: iconst_1
      16: isub
      17: ireturn

  protected static final int floorDivide(int, int, int[]);
    Code:
       0: iload_0
       1: iflt          14
       4: aload_2
       5: iconst_0
       6: iload_0
       7: iload_1
       8: irem
       9: iastore
      10: iload_0
      11: iload_1
      12: idiv
      13: ireturn
      14: iload_0
      15: iconst_1
      16: iadd
      17: iload_1
      18: idiv
      19: iconst_1
      20: isub
      21: istore_3
      22: aload_2
      23: iconst_0
      24: iload_0
      25: iload_3
      26: iload_1
      27: imul
      28: isub
      29: iastore
      30: iload_3
      31: ireturn

  protected static final int floorDivide(long, int, int[]);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: iflt          20
       6: aload_3
       7: iconst_0
       8: lload_0
       9: iload_2
      10: i2l
      11: lrem
      12: l2i
      13: iastore
      14: lload_0
      15: iload_2
      16: i2l
      17: ldiv
      18: l2i
      19: ireturn
      20: lload_0
      21: lconst_1
      22: ladd
      23: iload_2
      24: i2l
      25: ldiv
      26: lconst_1
      27: lsub
      28: l2i
      29: istore        4
      31: aload_3
      32: iconst_0
      33: lload_0
      34: iload         4
      36: i2l
      37: iload_2
      38: i2l
      39: lmul
      40: lsub
      41: l2i
      42: iastore
      43: iload         4
      45: ireturn

  protected java.lang.String fieldName(int);
    Code:
       0: getstatic     #383                // Field FIELD_NAME:[Ljava/lang/String;
       3: iload_1
       4: aaload
       5: areturn
       6: astore_2
       7: new           #25                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc_w         #385                // String Field
      17: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/ArrayIndexOutOfBoundsException

  protected static final int millisToJulianDay(long);
    Code:
       0: ldc2_w        #386                // long 2440588l
       3: lload_0
       4: ldc2_w        #179                // long 86400000l
       7: invokestatic  #308                // Method floorDivide:(JJ)J
      10: ladd
      11: l2i
      12: ireturn

  protected static final long julianDayToMillis(int);
    Code:
       0: iload_0
       1: ldc_w         #309                // int 2440588
       4: isub
       5: i2l
       6: ldc2_w        #179                // long 86400000l
       9: lmul
      10: lreturn

  protected static final int julianDayToDayOfWeek(int);
    Code:
       0: iload_0
       1: iconst_2
       2: iadd
       3: bipush        7
       5: irem
       6: istore_1
       7: iload_1
       8: iconst_1
       9: if_icmpge     15
      12: iinc          1, 7
      15: iload_1
      16: ireturn

  protected final long internalGetTimeInMillis();
    Code:
       0: aload_0
       1: getfield      #121                // Field time:J
       4: lreturn

  public java.lang.String getType();
    Code:
       0: ldc_w         #388                // String unknown
       3: areturn

  public boolean haveDefaultCentury();
    Code:
       0: iconst_1
       1: ireturn

  public final com.ibm.icu.util.ULocale getLocale(com.ibm.icu.util.ULocale$Type);
    Code:
       0: aload_1
       1: getstatic     #389                // Field com/ibm/icu/util/ULocale.ACTUAL_LOCALE:Lcom/ibm/icu/util/ULocale$Type;
       4: if_acmpne     14
       7: aload_0
       8: getfield      #390                // Field actualLocale:Lcom/ibm/icu/util/ULocale;
      11: goto          18
      14: aload_0
      15: getfield      #391                // Field validLocale:Lcom/ibm/icu/util/ULocale;
      18: areturn

  final void setLocale(com.ibm.icu.util.ULocale, com.ibm.icu.util.ULocale);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: aload_2
      10: ifnonnull     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: if_icmpeq     29
      21: new           #93                 // class java/lang/IllegalArgumentException
      24: dup
      25: invokespecial #392                // Method java/lang/IllegalArgumentException."<init>":()V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #391                // Field validLocale:Lcom/ibm/icu/util/ULocale;
      34: aload_0
      35: aload_2
      36: putfield      #390                // Field actualLocale:Lcom/ibm/icu/util/ULocale;
      39: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #1                  // class com/ibm/icu/util/Calendar
       5: invokevirtual #393                // Method compareTo:(Lcom/ibm/icu/util/Calendar;)I
       8: ireturn

  static com.ibm.icu.impl.ICUCache access$1000();
    Code:
       0: getstatic     #6                  // Field PATTERN_CACHE:Lcom/ibm/icu/impl/ICUCache;
       3: areturn

  static com.ibm.icu.util.Calendar$PatternData access$1100(com.ibm.icu.util.ULocale, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method getPatternData:(Lcom/ibm/icu/util/ULocale;Ljava/lang/String;)Lcom/ibm/icu/util/Calendar$PatternData;
       5: areturn

  static java.lang.String[] access$1200();
    Code:
       0: getstatic     #4                  // Field DEFAULT_PATTERNS:[Ljava/lang/String;
       3: areturn

  static com.ibm.icu.util.Calendar$WeekData access$1300(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method getWeekDataForRegionInternal:(Ljava/lang/String;)Lcom/ibm/icu/util/Calendar$WeekData;
       4: areturn

  static {};
    Code:
       0: ldc           #1                  // class com/ibm/icu/util/Calendar
       2: invokevirtual #394                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #343                // Field $assertionsDisabled:Z
      16: new           #115                // class java/util/Date
      19: dup
      20: ldc2_w        #127                // long -184303902528000000l
      23: invokespecial #117                // Method java/util/Date."<init>":(J)V
      26: putstatic     #395                // Field MIN_DATE:Ljava/util/Date;
      29: new           #115                // class java/util/Date
      32: dup
      33: ldc2_w        #122                // long 183882168921600000l
      36: invokespecial #117                // Method java/util/Date."<init>":(J)V
      39: putstatic     #396                // Field MAX_DATE:Ljava/util/Date;
      42: sipush        10000
      45: putstatic     #40                 // Field STAMP_MAX:I
      48: new           #397                // class com/ibm/icu/impl/SimpleCache
      51: dup
      52: invokespecial #398                // Method com/ibm/icu/impl/SimpleCache."<init>":()V
      55: putstatic     #6                  // Field PATTERN_CACHE:Lcom/ibm/icu/impl/ICUCache;
      58: bipush        13
      60: anewarray     #112                // class java/lang/String
      63: dup
      64: iconst_0
      65: ldc_w         #399                // String HH:mm:ss z
      68: aastore
      69: dup
      70: iconst_1
      71: ldc_w         #399                // String HH:mm:ss z
      74: aastore
      75: dup
      76: iconst_2
      77: ldc_w         #400                // String HH:mm:ss
      80: aastore
      81: dup
      82: iconst_3
      83: ldc_w         #401                // String HH:mm
      86: aastore
      87: dup
      88: iconst_4
      89: ldc_w         #402                // String EEEE, yyyy MMMM dd
      92: aastore
      93: dup
      94: iconst_5
      95: ldc_w         #403                // String yyyy MMMM d
      98: aastore
      99: dup
     100: bipush        6
     102: ldc_w         #404                // String yyyy MMM d
     105: aastore
     106: dup
     107: bipush        7
     109: ldc_w         #405                // String yy/MM/dd
     112: aastore
     113: dup
     114: bipush        8
     116: ldc_w         #406                // String {1} {0}
     119: aastore
     120: dup
     121: bipush        9
     123: ldc_w         #406                // String {1} {0}
     126: aastore
     127: dup
     128: bipush        10
     130: ldc_w         #406                // String {1} {0}
     133: aastore
     134: dup
     135: bipush        11
     137: ldc_w         #406                // String {1} {0}
     140: aastore
     141: dup
     142: bipush        12
     144: ldc_w         #406                // String {1} {0}
     147: aastore
     148: putstatic     #4                  // Field DEFAULT_PATTERNS:[Ljava/lang/String;
     151: bipush        23
     153: anewarray     #407                // class "[I"
     156: dup
     157: iconst_0
     158: iconst_0
     159: newarray       int
     161: aastore
     162: dup
     163: iconst_1
     164: iconst_0
     165: newarray       int
     167: aastore
     168: dup
     169: iconst_2
     170: iconst_0
     171: newarray       int
     173: aastore
     174: dup
     175: iconst_3
     176: iconst_0
     177: newarray       int
     179: aastore
     180: dup
     181: iconst_4
     182: iconst_0
     183: newarray       int
     185: aastore
     186: dup
     187: iconst_5
     188: iconst_0
     189: newarray       int
     191: aastore
     192: dup
     193: bipush        6
     195: iconst_0
     196: newarray       int
     198: aastore
     199: dup
     200: bipush        7
     202: iconst_4
     203: newarray       int
     205: dup
     206: iconst_0
     207: iconst_1
     208: iastore
     209: dup
     210: iconst_1
     211: iconst_1
     212: iastore
     213: dup
     214: iconst_2
     215: bipush        7
     217: iastore
     218: dup
     219: iconst_3
     220: bipush        7
     222: iastore
     223: aastore
     224: dup
     225: bipush        8
     227: iconst_0
     228: newarray       int
     230: aastore
     231: dup
     232: bipush        9
     234: iconst_4
     235: newarray       int
     237: dup
     238: iconst_0
     239: iconst_0
     240: iastore
     241: dup
     242: iconst_1
     243: iconst_0
     244: iastore
     245: dup
     246: iconst_2
     247: iconst_1
     248: iastore
     249: dup
     250: iconst_3
     251: iconst_1
     252: iastore
     253: aastore
     254: dup
     255: bipush        10
     257: iconst_4
     258: newarray       int
     260: dup
     261: iconst_0
     262: iconst_0
     263: iastore
     264: dup
     265: iconst_1
     266: iconst_0
     267: iastore
     268: dup
     269: iconst_2
     270: bipush        11
     272: iastore
     273: dup
     274: iconst_3
     275: bipush        11
     277: iastore
     278: aastore
     279: dup
     280: bipush        11
     282: iconst_4
     283: newarray       int
     285: dup
     286: iconst_0
     287: iconst_0
     288: iastore
     289: dup
     290: iconst_1
     291: iconst_0
     292: iastore
     293: dup
     294: iconst_2
     295: bipush        23
     297: iastore
     298: dup
     299: iconst_3
     300: bipush        23
     302: iastore
     303: aastore
     304: dup
     305: bipush        12
     307: iconst_4
     308: newarray       int
     310: dup
     311: iconst_0
     312: iconst_0
     313: iastore
     314: dup
     315: iconst_1
     316: iconst_0
     317: iastore
     318: dup
     319: iconst_2
     320: bipush        59
     322: iastore
     323: dup
     324: iconst_3
     325: bipush        59
     327: iastore
     328: aastore
     329: dup
     330: bipush        13
     332: iconst_4
     333: newarray       int
     335: dup
     336: iconst_0
     337: iconst_0
     338: iastore
     339: dup
     340: iconst_1
     341: iconst_0
     342: iastore
     343: dup
     344: iconst_2
     345: bipush        59
     347: iastore
     348: dup
     349: iconst_3
     350: bipush        59
     352: iastore
     353: aastore
     354: dup
     355: bipush        14
     357: iconst_4
     358: newarray       int
     360: dup
     361: iconst_0
     362: iconst_0
     363: iastore
     364: dup
     365: iconst_1
     366: iconst_0
     367: iastore
     368: dup
     369: iconst_2
     370: sipush        999
     373: iastore
     374: dup
     375: iconst_3
     376: sipush        999
     379: iastore
     380: aastore
     381: dup
     382: bipush        15
     384: iconst_4
     385: newarray       int
     387: dup
     388: iconst_0
     389: ldc_w         #408                // int -43200000
     392: iastore
     393: dup
     394: iconst_1
     395: ldc_w         #408                // int -43200000
     398: iastore
     399: dup
     400: iconst_2
     401: ldc_w         #409                // int 43200000
     404: iastore
     405: dup
     406: iconst_3
     407: ldc_w         #409                // int 43200000
     410: iastore
     411: aastore
     412: dup
     413: bipush        16
     415: iconst_4
     416: newarray       int
     418: dup
     419: iconst_0
     420: iconst_0
     421: iastore
     422: dup
     423: iconst_1
     424: iconst_0
     425: iastore
     426: dup
     427: iconst_2
     428: ldc_w         #410                // int 3600000
     431: iastore
     432: dup
     433: iconst_3
     434: ldc_w         #410                // int 3600000
     437: iastore
     438: aastore
     439: dup
     440: bipush        17
     442: iconst_0
     443: newarray       int
     445: aastore
     446: dup
     447: bipush        18
     449: iconst_4
     450: newarray       int
     452: dup
     453: iconst_0
     454: iconst_1
     455: iastore
     456: dup
     457: iconst_1
     458: iconst_1
     459: iastore
     460: dup
     461: iconst_2
     462: bipush        7
     464: iastore
     465: dup
     466: iconst_3
     467: bipush        7
     469: iastore
     470: aastore
     471: dup
     472: bipush        19
     474: iconst_0
     475: newarray       int
     477: aastore
     478: dup
     479: bipush        20
     481: iconst_4
     482: newarray       int
     484: dup
     485: iconst_0
     486: ldc_w         #411                // int -2130706432
     489: iastore
     490: dup
     491: iconst_1
     492: ldc_w         #411                // int -2130706432
     495: iastore
     496: dup
     497: iconst_2
     498: ldc_w         #412                // int 2130706432
     501: iastore
     502: dup
     503: iconst_3
     504: ldc_w         #412                // int 2130706432
     507: iastore
     508: aastore
     509: dup
     510: bipush        21
     512: iconst_4
     513: newarray       int
     515: dup
     516: iconst_0
     517: iconst_0
     518: iastore
     519: dup
     520: iconst_1
     521: iconst_0
     522: iastore
     523: dup
     524: iconst_2
     525: ldc_w         #413                // int 86399999
     528: iastore
     529: dup
     530: iconst_3
     531: ldc_w         #413                // int 86399999
     534: iastore
     535: aastore
     536: dup
     537: bipush        22
     539: iconst_4
     540: newarray       int
     542: dup
     543: iconst_0
     544: iconst_0
     545: iastore
     546: dup
     547: iconst_1
     548: iconst_0
     549: iastore
     550: dup
     551: iconst_2
     552: iconst_1
     553: iastore
     554: dup
     555: iconst_3
     556: iconst_1
     557: iastore
     558: aastore
     559: putstatic     #256                // Field LIMITS:[[I
     562: new           #414                // class com/ibm/icu/util/Calendar$WeekDataCache
     565: dup
     566: aconst_null
     567: invokespecial #415                // Method com/ibm/icu/util/Calendar$WeekDataCache."<init>":(Lcom/ibm/icu/util/Calendar$1;)V
     570: putstatic     #290                // Field WEEK_DATA_CACHE:Lcom/ibm/icu/util/Calendar$WeekDataCache;
     573: iconst_2
     574: anewarray     #416                // class "[[I"
     577: dup
     578: iconst_0
     579: bipush        10
     581: anewarray     #407                // class "[I"
     584: dup
     585: iconst_0
     586: iconst_1
     587: newarray       int
     589: dup
     590: iconst_0
     591: iconst_5
     592: iastore
     593: aastore
     594: dup
     595: iconst_1
     596: iconst_2
     597: newarray       int
     599: dup
     600: iconst_0
     601: iconst_3
     602: iastore
     603: dup
     604: iconst_1
     605: bipush        7
     607: iastore
     608: aastore
     609: dup
     610: iconst_2
     611: iconst_2
     612: newarray       int
     614: dup
     615: iconst_0
     616: iconst_4
     617: iastore
     618: dup
     619: iconst_1
     620: bipush        7
     622: iastore
     623: aastore
     624: dup
     625: iconst_3
     626: iconst_2
     627: newarray       int
     629: dup
     630: iconst_0
     631: bipush        8
     633: iastore
     634: dup
     635: iconst_1
     636: bipush        7
     638: iastore
     639: aastore
     640: dup
     641: iconst_4
     642: iconst_2
     643: newarray       int
     645: dup
     646: iconst_0
     647: iconst_3
     648: iastore
     649: dup
     650: iconst_1
     651: bipush        18
     653: iastore
     654: aastore
     655: dup
     656: iconst_5
     657: iconst_2
     658: newarray       int
     660: dup
     661: iconst_0
     662: iconst_4
     663: iastore
     664: dup
     665: iconst_1
     666: bipush        18
     668: iastore
     669: aastore
     670: dup
     671: bipush        6
     673: iconst_2
     674: newarray       int
     676: dup
     677: iconst_0
     678: bipush        8
     680: iastore
     681: dup
     682: iconst_1
     683: bipush        18
     685: iastore
     686: aastore
     687: dup
     688: bipush        7
     690: iconst_1
     691: newarray       int
     693: dup
     694: iconst_0
     695: bipush        6
     697: iastore
     698: aastore
     699: dup
     700: bipush        8
     702: iconst_2
     703: newarray       int
     705: dup
     706: iconst_0
     707: bipush        37
     709: iastore
     710: dup
     711: iconst_1
     712: iconst_1
     713: iastore
     714: aastore
     715: dup
     716: bipush        9
     718: iconst_2
     719: newarray       int
     721: dup
     722: iconst_0
     723: bipush        35
     725: iastore
     726: dup
     727: iconst_1
     728: bipush        17
     730: iastore
     731: aastore
     732: aastore
     733: dup
     734: iconst_1
     735: iconst_5
     736: anewarray     #407                // class "[I"
     739: dup
     740: iconst_0
     741: iconst_1
     742: newarray       int
     744: dup
     745: iconst_0
     746: iconst_3
     747: iastore
     748: aastore
     749: dup
     750: iconst_1
     751: iconst_1
     752: newarray       int
     754: dup
     755: iconst_0
     756: iconst_4
     757: iastore
     758: aastore
     759: dup
     760: iconst_2
     761: iconst_1
     762: newarray       int
     764: dup
     765: iconst_0
     766: bipush        8
     768: iastore
     769: aastore
     770: dup
     771: iconst_3
     772: iconst_2
     773: newarray       int
     775: dup
     776: iconst_0
     777: bipush        40
     779: iastore
     780: dup
     781: iconst_1
     782: bipush        7
     784: iastore
     785: aastore
     786: dup
     787: iconst_4
     788: iconst_2
     789: newarray       int
     791: dup
     792: iconst_0
     793: bipush        40
     795: iastore
     796: dup
     797: iconst_1
     798: bipush        18
     800: iastore
     801: aastore
     802: aastore
     803: putstatic     #367                // Field DATE_PRECEDENCE:[[[I
     806: iconst_1
     807: anewarray     #416                // class "[[I"
     810: dup
     811: iconst_0
     812: iconst_2
     813: anewarray     #407                // class "[I"
     816: dup
     817: iconst_0
     818: iconst_1
     819: newarray       int
     821: dup
     822: iconst_0
     823: bipush        7
     825: iastore
     826: aastore
     827: dup
     828: iconst_1
     829: iconst_1
     830: newarray       int
     832: dup
     833: iconst_0
     834: bipush        18
     836: iastore
     837: aastore
     838: aastore
     839: putstatic     #374                // Field DOW_PRECEDENCE:[[[I
     842: iconst_4
     843: newarray       int
     845: dup
     846: iconst_0
     847: ldc_w         #410                // int 3600000
     850: iastore
     851: dup
     852: iconst_1
     853: ldc_w         #417                // int 1800000
     856: iastore
     857: dup
     858: iconst_2
     859: ldc_w         #418                // int 60000
     862: iastore
     863: dup
     864: iconst_3
     865: sipush        1000
     868: iastore
     869: putstatic     #357                // Field FIND_ZONE_TRANSITION_TIME_UNITS:[I
     872: bipush        12
     874: anewarray     #407                // class "[I"
     877: dup
     878: iconst_0
     879: iconst_4
     880: newarray       int
     882: dup
     883: iconst_0
     884: bipush        31
     886: iastore
     887: dup
     888: iconst_1
     889: bipush        31
     891: iastore
     892: dup
     893: iconst_2
     894: iconst_0
     895: iastore
     896: dup
     897: iconst_3
     898: iconst_0
     899: iastore
     900: aastore
     901: dup
     902: iconst_1
     903: iconst_4
     904: newarray       int
     906: dup
     907: iconst_0
     908: bipush        28
     910: iastore
     911: dup
     912: iconst_1
     913: bipush        29
     915: iastore
     916: dup
     917: iconst_2
     918: bipush        31
     920: iastore
     921: dup
     922: iconst_3
     923: bipush        31
     925: iastore
     926: aastore
     927: dup
     928: iconst_2
     929: iconst_4
     930: newarray       int
     932: dup
     933: iconst_0
     934: bipush        31
     936: iastore
     937: dup
     938: iconst_1
     939: bipush        31
     941: iastore
     942: dup
     943: iconst_2
     944: bipush        59
     946: iastore
     947: dup
     948: iconst_3
     949: bipush        60
     951: iastore
     952: aastore
     953: dup
     954: iconst_3
     955: iconst_4
     956: newarray       int
     958: dup
     959: iconst_0
     960: bipush        30
     962: iastore
     963: dup
     964: iconst_1
     965: bipush        30
     967: iastore
     968: dup
     969: iconst_2
     970: bipush        90
     972: iastore
     973: dup
     974: iconst_3
     975: bipush        91
     977: iastore
     978: aastore
     979: dup
     980: iconst_4
     981: iconst_4
     982: newarray       int
     984: dup
     985: iconst_0
     986: bipush        31
     988: iastore
     989: dup
     990: iconst_1
     991: bipush        31
     993: iastore
     994: dup
     995: iconst_2
     996: bipush        120
     998: iastore
     999: dup
    1000: iconst_3
    1001: bipush        121
    1003: iastore
    1004: aastore
    1005: dup
    1006: iconst_5
    1007: iconst_4
    1008: newarray       int
    1010: dup
    1011: iconst_0
    1012: bipush        30
    1014: iastore
    1015: dup
    1016: iconst_1
    1017: bipush        30
    1019: iastore
    1020: dup
    1021: iconst_2
    1022: sipush        151
    1025: iastore
    1026: dup
    1027: iconst_3
    1028: sipush        152
    1031: iastore
    1032: aastore
    1033: dup
    1034: bipush        6
    1036: iconst_4
    1037: newarray       int
    1039: dup
    1040: iconst_0
    1041: bipush        31
    1043: iastore
    1044: dup
    1045: iconst_1
    1046: bipush        31
    1048: iastore
    1049: dup
    1050: iconst_2
    1051: sipush        181
    1054: iastore
    1055: dup
    1056: iconst_3
    1057: sipush        182
    1060: iastore
    1061: aastore
    1062: dup
    1063: bipush        7
    1065: iconst_4
    1066: newarray       int
    1068: dup
    1069: iconst_0
    1070: bipush        31
    1072: iastore
    1073: dup
    1074: iconst_1
    1075: bipush        31
    1077: iastore
    1078: dup
    1079: iconst_2
    1080: sipush        212
    1083: iastore
    1084: dup
    1085: iconst_3
    1086: sipush        213
    1089: iastore
    1090: aastore
    1091: dup
    1092: bipush        8
    1094: iconst_4
    1095: newarray       int
    1097: dup
    1098: iconst_0
    1099: bipush        30
    1101: iastore
    1102: dup
    1103: iconst_1
    1104: bipush        30
    1106: iastore
    1107: dup
    1108: iconst_2
    1109: sipush        243
    1112: iastore
    1113: dup
    1114: iconst_3
    1115: sipush        244
    1118: iastore
    1119: aastore
    1120: dup
    1121: bipush        9
    1123: iconst_4
    1124: newarray       int
    1126: dup
    1127: iconst_0
    1128: bipush        31
    1130: iastore
    1131: dup
    1132: iconst_1
    1133: bipush        31
    1135: iastore
    1136: dup
    1137: iconst_2
    1138: sipush        273
    1141: iastore
    1142: dup
    1143: iconst_3
    1144: sipush        274
    1147: iastore
    1148: aastore
    1149: dup
    1150: bipush        10
    1152: iconst_4
    1153: newarray       int
    1155: dup
    1156: iconst_0
    1157: bipush        30
    1159: iastore
    1160: dup
    1161: iconst_1
    1162: bipush        30
    1164: iastore
    1165: dup
    1166: iconst_2
    1167: sipush        304
    1170: iastore
    1171: dup
    1172: iconst_3
    1173: sipush        305
    1176: iastore
    1177: aastore
    1178: dup
    1179: bipush        11
    1181: iconst_4
    1182: newarray       int
    1184: dup
    1185: iconst_0
    1186: bipush        31
    1188: iastore
    1189: dup
    1190: iconst_1
    1191: bipush        31
    1193: iastore
    1194: dup
    1195: iconst_2
    1196: sipush        334
    1199: iastore
    1200: dup
    1201: iconst_3
    1202: sipush        335
    1205: iastore
    1206: aastore
    1207: putstatic     #320                // Field GREGORIAN_MONTH_COUNT:[[I
    1210: bipush        22
    1212: anewarray     #112                // class java/lang/String
    1215: dup
    1216: iconst_0
    1217: ldc_w         #419                // String ERA
    1220: aastore
    1221: dup
    1222: iconst_1
    1223: ldc_w         #420                // String YEAR
    1226: aastore
    1227: dup
    1228: iconst_2
    1229: ldc_w         #421                // String MONTH
    1232: aastore
    1233: dup
    1234: iconst_3
    1235: ldc_w         #422                // String WEEK_OF_YEAR
    1238: aastore
    1239: dup
    1240: iconst_4
    1241: ldc_w         #423                // String WEEK_OF_MONTH
    1244: aastore
    1245: dup
    1246: iconst_5
    1247: ldc_w         #424                // String DAY_OF_MONTH
    1250: aastore
    1251: dup
    1252: bipush        6
    1254: ldc_w         #425                // String DAY_OF_YEAR
    1257: aastore
    1258: dup
    1259: bipush        7
    1261: ldc_w         #426                // String DAY_OF_WEEK
    1264: aastore
    1265: dup
    1266: bipush        8
    1268: ldc_w         #427                // String DAY_OF_WEEK_IN_MONTH
    1271: aastore
    1272: dup
    1273: bipush        9
    1275: ldc_w         #428                // String AM_PM
    1278: aastore
    1279: dup
    1280: bipush        10
    1282: ldc_w         #429                // String HOUR
    1285: aastore
    1286: dup
    1287: bipush        11
    1289: ldc_w         #430                // String HOUR_OF_DAY
    1292: aastore
    1293: dup
    1294: bipush        12
    1296: ldc_w         #431                // String MINUTE
    1299: aastore
    1300: dup
    1301: bipush        13
    1303: ldc_w         #432                // String SECOND
    1306: aastore
    1307: dup
    1308: bipush        14
    1310: ldc_w         #433                // String MILLISECOND
    1313: aastore
    1314: dup
    1315: bipush        15
    1317: ldc_w         #434                // String ZONE_OFFSET
    1320: aastore
    1321: dup
    1322: bipush        16
    1324: ldc_w         #435                // String DST_OFFSET
    1327: aastore
    1328: dup
    1329: bipush        17
    1331: ldc_w         #436                // String YEAR_WOY
    1334: aastore
    1335: dup
    1336: bipush        18
    1338: ldc_w         #437                // String DOW_LOCAL
    1341: aastore
    1342: dup
    1343: bipush        19
    1345: ldc_w         #438                // String EXTENDED_YEAR
    1348: aastore
    1349: dup
    1350: bipush        20
    1352: ldc_w         #439                // String JULIAN_DAY
    1355: aastore
    1356: dup
    1357: bipush        21
    1359: ldc_w         #440                // String MILLISECONDS_IN_DAY
    1362: aastore
    1363: putstatic     #383                // Field FIELD_NAME:[Ljava/lang/String;
    1366: return
}
