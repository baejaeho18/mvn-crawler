Compiled from "Currency.java"
public class com.ibm.icu.util.Currency extends com.ibm.icu.util.MeasureUnit {
  private static final long serialVersionUID;

  private static final boolean DEBUG;

  private static com.ibm.icu.impl.ICUCache<com.ibm.icu.util.ULocale, java.util.List<com.ibm.icu.impl.TextTrieMap<com.ibm.icu.util.Currency$CurrencyStringInfo>>> CURRENCY_NAME_CACHE;

  public static final int SYMBOL_NAME;

  public static final int LONG_NAME;

  public static final int PLURAL_LONG_NAME;

  public static final int NARROW_SYMBOL_NAME;

  private static final com.ibm.icu.util.Currency$EquivalenceRelation<java.lang.String> EQUIVALENT_CURRENCY_SYMBOLS;

  private static com.ibm.icu.util.Currency$ServiceShim shim;

  private static final java.lang.String EUR_STR;

  private static final com.ibm.icu.impl.CacheBase<java.lang.String, com.ibm.icu.util.Currency, java.lang.Void> regionCurrencyCache;

  private static final com.ibm.icu.util.ULocale UND;

  private static final java.lang.String[] EMPTY_STRING_ARRAY;

  private static final int[] POW10;

  private static java.lang.ref.SoftReference<java.util.List<java.lang.String>> ALL_TENDER_CODES;

  private static java.lang.ref.SoftReference<java.util.Set<java.lang.String>> ALL_CODES_AS_SET;

  private final java.lang.String isoCode;

  private static com.ibm.icu.util.Currency$ServiceShim getShim();
    Code:
       0: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
       3: ifnonnull     48
       6: ldc           #3                  // String com.ibm.icu.util.CurrencyServiceShim
       8: invokestatic  #4                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      11: astore_0
      12: aload_0
      13: invokevirtual #5                  // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      16: checkcast     #6                  // class com/ibm/icu/util/Currency$ServiceShim
      19: putstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      22: goto          48
      25: astore_0
      26: getstatic     #8                  // Field DEBUG:Z
      29: ifeq          36
      32: aload_0
      33: invokevirtual #9                  // Method java/lang/Exception.printStackTrace:()V
      36: new           #10                 // class java/lang/RuntimeException
      39: dup
      40: aload_0
      41: invokevirtual #11                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      44: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      51: areturn
    Exception table:
       from    to  target type
           6    22    25   Class java/lang/Exception

  public static com.ibm.icu.util.Currency getInstance(java.util.Locale);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       4: invokestatic  #14                 // Method getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Currency;
       7: areturn

  public static com.ibm.icu.util.Currency getInstance(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: ldc           #15                 // String currency
       3: invokevirtual #16                 // Method com/ibm/icu/util/ULocale.getKeywordValue:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        16
      11: aload_1
      12: invokestatic  #17                 // Method getInstance:(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
      15: areturn
      16: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      19: ifnonnull     27
      22: aload_0
      23: invokestatic  #18                 // Method createCurrency:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Currency;
      26: areturn
      27: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      30: aload_0
      31: invokevirtual #19                 // Method com/ibm/icu/util/Currency$ServiceShim.createInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/Currency;
      34: areturn

  public static java.lang.String[] getAvailableCurrencyCodes(com.ibm.icu.util.ULocale, java.util.Date);
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #20                 // Method com/ibm/icu/util/ULocale.getRegionForSupplementalData:(Lcom/ibm/icu/util/ULocale;Z)Ljava/lang/String;
       5: astore_2
       6: aload_1
       7: invokestatic  #21                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.onDate:(Ljava/util/Date;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      10: aload_2
      11: invokevirtual #22                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.withRegion:(Ljava/lang/String;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      14: astore_3
      15: aload_3
      16: invokestatic  #23                 // Method getTenderCurrencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      19: astore        4
      21: aload         4
      23: invokeinterface #24,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      28: ifeq          33
      31: aconst_null
      32: areturn
      33: aload         4
      35: aload         4
      37: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      42: anewarray     #26                 // class java/lang/String
      45: invokeinterface #27,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      50: checkcast     #28                 // class "[Ljava/lang/String;"
      53: areturn

  public static java.lang.String[] getAvailableCurrencyCodes(java.util.Locale, java.util.Date);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       4: aload_1
       5: invokestatic  #29                 // Method getAvailableCurrencyCodes:(Lcom/ibm/icu/util/ULocale;Ljava/util/Date;)[Ljava/lang/String;
       8: areturn

  public static java.util.Set<com.ibm.icu.util.Currency> getAvailableCurrencies();
    Code:
       0: invokestatic  #30                 // Method com/ibm/icu/text/CurrencyMetaInfo.getInstance:()Lcom/ibm/icu/text/CurrencyMetaInfo;
       3: astore_0
       4: aload_0
       5: invokestatic  #31                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.all:()Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
       8: invokevirtual #32                 // Method com/ibm/icu/text/CurrencyMetaInfo.currencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      11: astore_1
      12: new           #33                 // class java/util/HashSet
      15: dup
      16: aload_1
      17: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      22: invokespecial #34                 // Method java/util/HashSet."<init>":(I)V
      25: astore_2
      26: aload_1
      27: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore_3
      33: aload_3
      34: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          66
      42: aload_3
      43: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #26                 // class java/lang/String
      51: astore        4
      53: aload_2
      54: aload         4
      56: invokestatic  #17                 // Method getInstance:(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
      59: invokevirtual #38                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      62: pop
      63: goto          33
      66: aload_2
      67: areturn

  static com.ibm.icu.util.Currency createCurrency(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method com/ibm/icu/util/ULocale.getVariant:()Ljava/lang/String;
       4: astore_1
       5: ldc           #40                 // String EURO
       7: aload_1
       8: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifeq          20
      14: ldc           #43                 // String EUR
      16: invokestatic  #17                 // Method getInstance:(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
      19: areturn
      20: aload_0
      21: iconst_0
      22: invokestatic  #20                 // Method com/ibm/icu/util/ULocale.getRegionForSupplementalData:(Lcom/ibm/icu/util/ULocale;Z)Ljava/lang/String;
      25: astore_2
      26: ldc           #44                 // String PREEURO
      28: aload_1
      29: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          55
      35: new           #45                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_2
      43: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: bipush        45
      48: invokevirtual #48                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      51: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: astore_2
      55: getstatic     #50                 // Field regionCurrencyCache:Lcom/ibm/icu/impl/CacheBase;
      58: aload_2
      59: aconst_null
      60: invokevirtual #51                 // Method com/ibm/icu/impl/CacheBase.getInstance:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: checkcast     #42                 // class com/ibm/icu/util/Currency
      66: areturn

  private static com.ibm.icu.util.Currency loadCurrency(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #52                 // String -
       3: invokevirtual #53                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       6: ifeq          26
       9: aload_0
      10: iconst_0
      11: aload_0
      12: invokevirtual #54                 // Method java/lang/String.length:()I
      15: iconst_1
      16: isub
      17: invokevirtual #55                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      20: astore_1
      21: iconst_1
      22: istore_2
      23: goto          30
      26: aload_0
      27: astore_1
      28: iconst_0
      29: istore_2
      30: invokestatic  #30                 // Method com/ibm/icu/text/CurrencyMetaInfo.getInstance:()Lcom/ibm/icu/text/CurrencyMetaInfo;
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokestatic  #56                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.onRegion:(Ljava/lang/String;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      39: invokevirtual #32                 // Method com/ibm/icu/text/CurrencyMetaInfo.currencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      42: astore        4
      44: aload         4
      46: invokeinterface #24,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      51: ifne          113
      54: aload         4
      56: iconst_0
      57: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      62: checkcast     #26                 // class java/lang/String
      65: astore        5
      67: iload_2
      68: ifeq          107
      71: ldc           #43                 // String EUR
      73: aload         5
      75: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifeq          107
      81: aload         4
      83: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      88: iconst_2
      89: if_icmpge     94
      92: aconst_null
      93: areturn
      94: aload         4
      96: iconst_1
      97: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     102: checkcast     #26                 // class java/lang/String
     105: astore        5
     107: aload         5
     109: invokestatic  #17                 // Method getInstance:(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
     112: areturn
     113: aconst_null
     114: areturn

  public static com.ibm.icu.util.Currency getInstance(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #58                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #59                 // String The input currency code is null.
      10: invokespecial #60                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokestatic  #61                 // Method isAlpha3Code:(Ljava/lang/String;)Z
      18: ifne          31
      21: new           #62                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #63                 // String The input currency code is not 3-letter alphabetic code.
      27: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: ldc           #15                 // String currency
      33: aload_0
      34: getstatic     #65                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      37: invokevirtual #66                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      40: invokestatic  #67                 // Method com/ibm/icu/util/MeasureUnit.internalGetInstance:(Ljava/lang/String;Ljava/lang/String;)Lcom/ibm/icu/util/MeasureUnit;
      43: checkcast     #42                 // class com/ibm/icu/util/Currency
      46: areturn

  private static boolean isAlpha3Code(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method java/lang/String.length:()I
       4: iconst_3
       5: if_icmpeq     10
       8: iconst_0
       9: ireturn
      10: iconst_0
      11: istore_1
      12: iload_1
      13: iconst_3
      14: if_icmpge     55
      17: aload_0
      18: iload_1
      19: invokevirtual #68                 // Method java/lang/String.charAt:(I)C
      22: istore_2
      23: iload_2
      24: bipush        65
      26: if_icmplt     47
      29: iload_2
      30: bipush        90
      32: if_icmple     41
      35: iload_2
      36: bipush        97
      38: if_icmplt     47
      41: iload_2
      42: bipush        122
      44: if_icmple     49
      47: iconst_0
      48: ireturn
      49: iinc          1, 1
      52: goto          12
      55: iconst_1
      56: ireturn

  public static com.ibm.icu.util.Currency fromJavaCurrency(java.util.Currency);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method java/util/Currency.getCurrencyCode:()Ljava/lang/String;
       4: invokestatic  #17                 // Method getInstance:(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
       7: areturn

  public java.util.Currency toJavaCurrency();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method getCurrencyCode:()Ljava/lang/String;
       4: invokestatic  #71                 // Method java/util/Currency.getInstance:(Ljava/lang/String;)Ljava/util/Currency;
       7: areturn

  public static java.lang.Object registerInstance(com.ibm.icu.util.Currency, com.ibm.icu.util.ULocale);
    Code:
       0: invokestatic  #72                 // Method getShim:()Lcom/ibm/icu/util/Currency$ServiceShim;
       3: aload_0
       4: aload_1
       5: invokevirtual #73                 // Method com/ibm/icu/util/Currency$ServiceShim.registerInstance:(Lcom/ibm/icu/util/Currency;Lcom/ibm/icu/util/ULocale;)Ljava/lang/Object;
       8: areturn

  public static boolean unregister(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #62                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #74                 // String registryKey must not be null
      10: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      17: ifnonnull     22
      20: iconst_0
      21: ireturn
      22: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      25: aload_0
      26: invokevirtual #75                 // Method com/ibm/icu/util/Currency$ServiceShim.unregister:(Ljava/lang/Object;)Z
      29: ireturn

  public static java.util.Locale[] getAvailableLocales();
    Code:
       0: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
       3: ifnonnull     10
       6: invokestatic  #76                 // Method com/ibm/icu/impl/ICUResourceBundle.getAvailableLocales:()[Ljava/util/Locale;
       9: areturn
      10: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      13: invokevirtual #77                 // Method com/ibm/icu/util/Currency$ServiceShim.getAvailableLocales:()[Ljava/util/Locale;
      16: areturn

  public static com.ibm.icu.util.ULocale[] getAvailableULocales();
    Code:
       0: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
       3: ifnonnull     10
       6: invokestatic  #78                 // Method com/ibm/icu/impl/ICUResourceBundle.getAvailableULocales:()[Lcom/ibm/icu/util/ULocale;
       9: areturn
      10: getstatic     #2                  // Field shim:Lcom/ibm/icu/util/Currency$ServiceShim;
      13: invokevirtual #79                 // Method com/ibm/icu/util/Currency$ServiceShim.getAvailableULocales:()[Lcom/ibm/icu/util/ULocale;
      16: areturn

  public static final java.lang.String[] getKeywordValuesForLocale(java.lang.String, com.ibm.icu.util.ULocale, boolean);
    Code:
       0: ldc           #15                 // String currency
       2: aload_0
       3: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          13
       9: getstatic     #80                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      12: areturn
      13: iload_2
      14: ifne          33
      17: invokestatic  #81                 // Method getAllTenderCurrencies:()Ljava/util/List;
      20: iconst_0
      21: anewarray     #26                 // class java/lang/String
      24: invokeinterface #27,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      29: checkcast     #28                 // class "[Ljava/lang/String;"
      32: areturn
      33: getstatic     #82                 // Field UND:Lcom/ibm/icu/util/ULocale;
      36: aload_1
      37: invokevirtual #83                 // Method com/ibm/icu/util/ULocale.equals:(Ljava/lang/Object;)Z
      40: ifeq          47
      43: getstatic     #80                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      46: areturn
      47: aload_1
      48: iconst_1
      49: invokestatic  #20                 // Method com/ibm/icu/util/ULocale.getRegionForSupplementalData:(Lcom/ibm/icu/util/ULocale;Z)Ljava/lang/String;
      52: astore_3
      53: invokestatic  #84                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.now:()Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      56: aload_3
      57: invokevirtual #22                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.withRegion:(Ljava/lang/String;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      60: astore        4
      62: aload         4
      64: invokestatic  #23                 // Method getTenderCurrencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      67: astore        5
      69: aload         5
      71: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      76: ifne          83
      79: getstatic     #80                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
      82: areturn
      83: aload         5
      85: aload         5
      87: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      92: anewarray     #26                 // class java/lang/String
      95: invokeinterface #27,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     100: checkcast     #28                 // class "[Ljava/lang/String;"
     103: areturn

  public java.lang.String getCurrencyCode();
    Code:
       0: aload_0
       1: getfield      #85                 // Field subType:Ljava/lang/String;
       4: areturn

  public int getNumericCode();
    Code:
       0: iconst_0
       1: istore_1
       2: ldc           #87                 // String com/ibm/icu/impl/data/icudt61b
       4: ldc           #88                 // String currencyNumericCodes
       6: getstatic     #89                 // Field com/ibm/icu/impl/ICUResourceBundle.ICU_DATA_CLASS_LOADER:Ljava/lang/ClassLoader;
       9: invokestatic  #90                 // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Lcom/ibm/icu/util/UResourceBundle;
      12: astore_2
      13: aload_2
      14: ldc           #91                 // String codeMap
      16: invokevirtual #92                 // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      19: astore_3
      20: aload_3
      21: aload_0
      22: getfield      #85                 // Field subType:Ljava/lang/String;
      25: invokevirtual #92                 // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      28: astore        4
      30: aload         4
      32: invokevirtual #93                 // Method com/ibm/icu/util/UResourceBundle.getInt:()I
      35: istore_1
      36: goto          40
      39: astore_2
      40: iload_1
      41: ireturn
    Exception table:
       from    to  target type
           2    36    39   Class java/util/MissingResourceException

  public java.lang.String getSymbol();
    Code:
       0: aload_0
       1: getstatic     #95                 // Field com/ibm/icu/util/ULocale$Category.DISPLAY:Lcom/ibm/icu/util/ULocale$Category;
       4: invokestatic  #96                 // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
       7: invokevirtual #97                 // Method getSymbol:(Lcom/ibm/icu/util/ULocale;)Ljava/lang/String;
      10: areturn

  public java.lang.String getSymbol(java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       5: invokevirtual #97                 // Method getSymbol:(Lcom/ibm/icu/util/ULocale;)Ljava/lang/String;
       8: areturn

  public java.lang.String getSymbol(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aconst_null
       4: invokevirtual #98                 // Method getName:(Lcom/ibm/icu/util/ULocale;I[Z)Ljava/lang/String;
       7: areturn

  public java.lang.String getName(java.util.Locale, int, boolean[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       5: iload_2
       6: aload_3
       7: invokevirtual #98                 // Method getName:(Lcom/ibm/icu/util/ULocale;I[Z)Ljava/lang/String;
      10: areturn

  public java.lang.String getName(com.ibm.icu.util.ULocale, int, boolean[]);
    Code:
       0: aload_3
       1: ifnull        8
       4: aload_3
       5: iconst_0
       6: iconst_0
       7: bastore
       8: aload_1
       9: invokestatic  #99                 // Method com/ibm/icu/text/CurrencyDisplayNames.getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/CurrencyDisplayNames;
      12: astore        4
      14: iload_2
      15: tableswitch   { // 0 to 3
                     0: 44
                     1: 64
                     2: 74
                     3: 54
               default: 74
          }
      44: aload         4
      46: aload_0
      47: getfield      #85                 // Field subType:Ljava/lang/String;
      50: invokevirtual #100                // Method com/ibm/icu/text/CurrencyDisplayNames.getSymbol:(Ljava/lang/String;)Ljava/lang/String;
      53: areturn
      54: aload         4
      56: aload_0
      57: getfield      #85                 // Field subType:Ljava/lang/String;
      60: invokevirtual #101                // Method com/ibm/icu/text/CurrencyDisplayNames.getNarrowSymbol:(Ljava/lang/String;)Ljava/lang/String;
      63: areturn
      64: aload         4
      66: aload_0
      67: getfield      #85                 // Field subType:Ljava/lang/String;
      70: invokevirtual #102                // Method com/ibm/icu/text/CurrencyDisplayNames.getName:(Ljava/lang/String;)Ljava/lang/String;
      73: areturn
      74: new           #62                 // class java/lang/IllegalArgumentException
      77: dup
      78: new           #45                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #46                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #103                // String bad name style:
      87: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: iload_2
      91: invokevirtual #104                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     100: athrow

  public java.lang.String getName(java.util.Locale, int, java.lang.String, boolean[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       5: iload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #105                // Method getName:(Lcom/ibm/icu/util/ULocale;ILjava/lang/String;[Z)Ljava/lang/String;
      12: areturn

  public java.lang.String getName(com.ibm.icu.util.ULocale, int, java.lang.String, boolean[]);
    Code:
       0: iload_2
       1: iconst_2
       2: if_icmpeq     14
       5: aload_0
       6: aload_1
       7: iload_2
       8: aload         4
      10: invokevirtual #98                 // Method getName:(Lcom/ibm/icu/util/ULocale;I[Z)Ljava/lang/String;
      13: areturn
      14: aload         4
      16: ifnull        24
      19: aload         4
      21: iconst_0
      22: iconst_0
      23: bastore
      24: aload_1
      25: invokestatic  #99                 // Method com/ibm/icu/text/CurrencyDisplayNames.getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/CurrencyDisplayNames;
      28: astore        5
      30: aload         5
      32: aload_0
      33: getfield      #85                 // Field subType:Ljava/lang/String;
      36: aload_3
      37: invokevirtual #106                // Method com/ibm/icu/text/CurrencyDisplayNames.getPluralName:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      40: areturn

  public java.lang.String getDisplayName();
    Code:
       0: aload_0
       1: invokestatic  #107                // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       4: iconst_1
       5: aconst_null
       6: invokevirtual #108                // Method getName:(Ljava/util/Locale;I[Z)Ljava/lang/String;
       9: areturn

  public java.lang.String getDisplayName(java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aconst_null
       4: invokevirtual #108                // Method getName:(Ljava/util/Locale;I[Z)Ljava/lang/String;
       7: areturn

  public static java.lang.String parse(com.ibm.icu.util.ULocale, java.lang.String, int, java.text.ParsePosition);
    Code:
       0: aload_0
       1: invokestatic  #109                // Method getCurrencyTrieVec:(Lcom/ibm/icu/util/ULocale;)Ljava/util/List;
       4: astore        4
       6: iconst_0
       7: istore        5
       9: aconst_null
      10: astore        6
      12: aload         4
      14: iconst_1
      15: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      20: checkcast     #110                // class com/ibm/icu/impl/TextTrieMap
      23: astore        7
      25: new           #111                // class com/ibm/icu/util/Currency$CurrencyNameResultHandler
      28: dup
      29: aconst_null
      30: invokespecial #112                // Method com/ibm/icu/util/Currency$CurrencyNameResultHandler."<init>":(Lcom/ibm/icu/util/Currency$1;)V
      33: astore        8
      35: aload         7
      37: aload_1
      38: aload_3
      39: invokevirtual #113                // Method java/text/ParsePosition.getIndex:()I
      42: aload         8
      44: invokevirtual #114                // Method com/ibm/icu/impl/TextTrieMap.find:(Ljava/lang/CharSequence;ILcom/ibm/icu/impl/TextTrieMap$ResultHandler;)V
      47: aload         8
      49: invokevirtual #115                // Method com/ibm/icu/util/Currency$CurrencyNameResultHandler.getBestCurrencyISOCode:()Ljava/lang/String;
      52: astore        6
      54: aload         8
      56: invokevirtual #116                // Method com/ibm/icu/util/Currency$CurrencyNameResultHandler.getBestMatchLength:()I
      59: istore        5
      61: iload_2
      62: iconst_1
      63: if_icmpeq     125
      66: aload         4
      68: iconst_0
      69: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      74: checkcast     #110                // class com/ibm/icu/impl/TextTrieMap
      77: astore        9
      79: new           #111                // class com/ibm/icu/util/Currency$CurrencyNameResultHandler
      82: dup
      83: aconst_null
      84: invokespecial #112                // Method com/ibm/icu/util/Currency$CurrencyNameResultHandler."<init>":(Lcom/ibm/icu/util/Currency$1;)V
      87: astore        8
      89: aload         9
      91: aload_1
      92: aload_3
      93: invokevirtual #113                // Method java/text/ParsePosition.getIndex:()I
      96: aload         8
      98: invokevirtual #114                // Method com/ibm/icu/impl/TextTrieMap.find:(Ljava/lang/CharSequence;ILcom/ibm/icu/impl/TextTrieMap$ResultHandler;)V
     101: aload         8
     103: invokevirtual #116                // Method com/ibm/icu/util/Currency$CurrencyNameResultHandler.getBestMatchLength:()I
     106: iload         5
     108: if_icmple     125
     111: aload         8
     113: invokevirtual #115                // Method com/ibm/icu/util/Currency$CurrencyNameResultHandler.getBestCurrencyISOCode:()Ljava/lang/String;
     116: astore        6
     118: aload         8
     120: invokevirtual #116                // Method com/ibm/icu/util/Currency$CurrencyNameResultHandler.getBestMatchLength:()I
     123: istore        5
     125: aload_3
     126: invokevirtual #113                // Method java/text/ParsePosition.getIndex:()I
     129: istore        9
     131: aload_3
     132: iload         9
     134: iload         5
     136: iadd
     137: invokevirtual #117                // Method java/text/ParsePosition.setIndex:(I)V
     140: aload         6
     142: areturn

  public static com.ibm.icu.impl.TextTrieMap<com.ibm.icu.util.Currency$CurrencyStringInfo> getParsingTrie(com.ibm.icu.util.ULocale, int);
    Code:
       0: aload_0
       1: invokestatic  #109                // Method getCurrencyTrieVec:(Lcom/ibm/icu/util/ULocale;)Ljava/util/List;
       4: astore_2
       5: iload_1
       6: iconst_1
       7: if_icmpne     21
      10: aload_2
      11: iconst_1
      12: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #110                // class com/ibm/icu/impl/TextTrieMap
      20: areturn
      21: aload_2
      22: iconst_0
      23: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      28: checkcast     #110                // class com/ibm/icu/impl/TextTrieMap
      31: areturn

  private static java.util.List<com.ibm.icu.impl.TextTrieMap<com.ibm.icu.util.Currency$CurrencyStringInfo>> getCurrencyTrieVec(com.ibm.icu.util.ULocale);
    Code:
       0: getstatic     #118                // Field CURRENCY_NAME_CACHE:Lcom/ibm/icu/impl/ICUCache;
       3: aload_0
       4: invokeinterface #119,  2          // InterfaceMethod com/ibm/icu/impl/ICUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #120                // class java/util/List
      12: astore_1
      13: aload_1
      14: ifnonnull     74
      17: new           #110                // class com/ibm/icu/impl/TextTrieMap
      20: dup
      21: iconst_1
      22: invokespecial #121                // Method com/ibm/icu/impl/TextTrieMap."<init>":(Z)V
      25: astore_2
      26: new           #110                // class com/ibm/icu/impl/TextTrieMap
      29: dup
      30: iconst_0
      31: invokespecial #121                // Method com/ibm/icu/impl/TextTrieMap."<init>":(Z)V
      34: astore_3
      35: new           #122                // class java/util/ArrayList
      38: dup
      39: invokespecial #123                // Method java/util/ArrayList."<init>":()V
      42: astore_1
      43: aload_1
      44: aload_3
      45: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: aload_1
      52: aload_2
      53: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: aload_1
      61: invokestatic  #125                // Method setupCurrencyTrieVec:(Lcom/ibm/icu/util/ULocale;Ljava/util/List;)V
      64: getstatic     #118                // Field CURRENCY_NAME_CACHE:Lcom/ibm/icu/impl/ICUCache;
      67: aload_0
      68: aload_1
      69: invokeinterface #126,  3          // InterfaceMethod com/ibm/icu/impl/ICUCache.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      74: aload_1
      75: areturn

  private static void setupCurrencyTrieVec(com.ibm.icu.util.ULocale, java.util.List<com.ibm.icu.impl.TextTrieMap<com.ibm.icu.util.Currency$CurrencyStringInfo>>);
    Code:
       0: aload_1
       1: iconst_0
       2: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       7: checkcast     #110                // class com/ibm/icu/impl/TextTrieMap
      10: astore_2
      11: aload_1
      12: iconst_1
      13: invokeinterface #57,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      18: checkcast     #110                // class com/ibm/icu/impl/TextTrieMap
      21: astore_3
      22: aload_0
      23: invokestatic  #99                 // Method com/ibm/icu/text/CurrencyDisplayNames.getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/CurrencyDisplayNames;
      26: astore        4
      28: aload         4
      30: invokevirtual #127                // Method com/ibm/icu/text/CurrencyDisplayNames.symbolMap:()Ljava/util/Map;
      33: invokeinterface #128,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #129,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore        5
      45: aload         5
      47: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          152
      55: aload         5
      57: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #130                // class java/util/Map$Entry
      65: astore        6
      67: aload         6
      69: invokeinterface #131,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      74: checkcast     #26                 // class java/lang/String
      77: astore        7
      79: aload         6
      81: invokeinterface #132,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      86: checkcast     #26                 // class java/lang/String
      89: astore        8
      91: getstatic     #133                // Field EQUIVALENT_CURRENCY_SYMBOLS:Lcom/ibm/icu/util/Currency$EquivalenceRelation;
      94: aload         7
      96: invokevirtual #134                // Method com/ibm/icu/util/Currency$EquivalenceRelation.get:(Ljava/lang/Object;)Ljava/util/Set;
      99: invokeinterface #129,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     104: astore        9
     106: aload         9
     108: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          149
     116: aload         9
     118: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #26                 // class java/lang/String
     126: astore        10
     128: aload_2
     129: aload         10
     131: new           #135                // class com/ibm/icu/util/Currency$CurrencyStringInfo
     134: dup
     135: aload         8
     137: aload         7
     139: invokespecial #136                // Method com/ibm/icu/util/Currency$CurrencyStringInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     142: invokevirtual #137                // Method com/ibm/icu/impl/TextTrieMap.put:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lcom/ibm/icu/impl/TextTrieMap;
     145: pop
     146: goto          106
     149: goto          45
     152: aload         4
     154: invokevirtual #138                // Method com/ibm/icu/text/CurrencyDisplayNames.nameMap:()Ljava/util/Map;
     157: invokeinterface #128,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     162: invokeinterface #129,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     167: astore        5
     169: aload         5
     171: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     176: ifeq          236
     179: aload         5
     181: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     186: checkcast     #130                // class java/util/Map$Entry
     189: astore        6
     191: aload         6
     193: invokeinterface #131,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     198: checkcast     #26                 // class java/lang/String
     201: astore        7
     203: aload         6
     205: invokeinterface #132,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     210: checkcast     #26                 // class java/lang/String
     213: astore        8
     215: aload_3
     216: aload         7
     218: new           #135                // class com/ibm/icu/util/Currency$CurrencyStringInfo
     221: dup
     222: aload         8
     224: aload         7
     226: invokespecial #136                // Method com/ibm/icu/util/Currency$CurrencyStringInfo."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     229: invokevirtual #137                // Method com/ibm/icu/impl/TextTrieMap.put:(Ljava/lang/CharSequence;Ljava/lang/Object;)Lcom/ibm/icu/impl/TextTrieMap;
     232: pop
     233: goto          169
     236: return

  public int getDefaultFractionDigits();
    Code:
       0: aload_0
       1: getstatic     #139                // Field com/ibm/icu/util/Currency$CurrencyUsage.STANDARD:Lcom/ibm/icu/util/Currency$CurrencyUsage;
       4: invokevirtual #140                // Method getDefaultFractionDigits:(Lcom/ibm/icu/util/Currency$CurrencyUsage;)I
       7: ireturn

  public int getDefaultFractionDigits(com.ibm.icu.util.Currency$CurrencyUsage);
    Code:
       0: invokestatic  #30                 // Method com/ibm/icu/text/CurrencyMetaInfo.getInstance:()Lcom/ibm/icu/text/CurrencyMetaInfo;
       3: astore_2
       4: aload_2
       5: aload_0
       6: getfield      #85                 // Field subType:Ljava/lang/String;
       9: aload_1
      10: invokevirtual #141                // Method com/ibm/icu/text/CurrencyMetaInfo.currencyDigits:(Ljava/lang/String;Lcom/ibm/icu/util/Currency$CurrencyUsage;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyDigits;
      13: astore_3
      14: aload_3
      15: getfield      #142                // Field com/ibm/icu/text/CurrencyMetaInfo$CurrencyDigits.fractionDigits:I
      18: ireturn

  public double getRoundingIncrement();
    Code:
       0: aload_0
       1: getstatic     #139                // Field com/ibm/icu/util/Currency$CurrencyUsage.STANDARD:Lcom/ibm/icu/util/Currency$CurrencyUsage;
       4: invokevirtual #143                // Method getRoundingIncrement:(Lcom/ibm/icu/util/Currency$CurrencyUsage;)D
       7: dreturn

  public double getRoundingIncrement(com.ibm.icu.util.Currency$CurrencyUsage);
    Code:
       0: invokestatic  #30                 // Method com/ibm/icu/text/CurrencyMetaInfo.getInstance:()Lcom/ibm/icu/text/CurrencyMetaInfo;
       3: astore_2
       4: aload_2
       5: aload_0
       6: getfield      #85                 // Field subType:Ljava/lang/String;
       9: aload_1
      10: invokevirtual #141                // Method com/ibm/icu/text/CurrencyMetaInfo.currencyDigits:(Ljava/lang/String;Lcom/ibm/icu/util/Currency$CurrencyUsage;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyDigits;
      13: astore_3
      14: aload_3
      15: getfield      #144                // Field com/ibm/icu/text/CurrencyMetaInfo$CurrencyDigits.roundingIncrement:I
      18: istore        4
      20: iload         4
      22: ifne          27
      25: dconst_0
      26: dreturn
      27: aload_3
      28: getfield      #142                // Field com/ibm/icu/text/CurrencyMetaInfo$CurrencyDigits.fractionDigits:I
      31: istore        5
      33: iload         5
      35: iflt          47
      38: iload         5
      40: getstatic     #145                // Field POW10:[I
      43: arraylength
      44: if_icmplt     49
      47: dconst_0
      48: dreturn
      49: iload         4
      51: i2d
      52: getstatic     #145                // Field POW10:[I
      55: iload         5
      57: iaload
      58: i2d
      59: ddiv
      60: dreturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #85                 // Field subType:Ljava/lang/String;
       4: areturn

  protected com.ibm.icu.util.Currency(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #15                 // String currency
       3: aload_1
       4: invokespecial #146                // Method com/ibm/icu/util/MeasureUnit."<init>":(Ljava/lang/String;Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: putfield      #147                // Field isoCode:Ljava/lang/String;
      12: return

  private static synchronized java.util.List<java.lang.String> getAllTenderCurrencies();
    Code:
       0: getstatic     #148                // Field ALL_TENDER_CODES:Ljava/lang/ref/SoftReference;
       3: ifnonnull     10
       6: aconst_null
       7: goto          19
      10: getstatic     #148                // Field ALL_TENDER_CODES:Ljava/lang/ref/SoftReference;
      13: invokevirtual #149                // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      16: checkcast     #120                // class java/util/List
      19: astore_0
      20: aload_0
      21: ifnonnull     47
      24: invokestatic  #31                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.all:()Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      27: astore_1
      28: aload_1
      29: invokestatic  #23                 // Method getTenderCurrencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      32: invokestatic  #150                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      35: astore_0
      36: new           #151                // class java/lang/ref/SoftReference
      39: dup
      40: aload_0
      41: invokespecial #152                // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      44: putstatic     #148                // Field ALL_TENDER_CODES:Ljava/lang/ref/SoftReference;
      47: aload_0
      48: areturn

  private static synchronized java.util.Set<java.lang.String> getAllCurrenciesAsSet();
    Code:
       0: getstatic     #153                // Field ALL_CODES_AS_SET:Ljava/lang/ref/SoftReference;
       3: ifnonnull     10
       6: aconst_null
       7: goto          19
      10: getstatic     #153                // Field ALL_CODES_AS_SET:Ljava/lang/ref/SoftReference;
      13: invokevirtual #149                // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      16: checkcast     #154                // class java/util/Set
      19: astore_0
      20: aload_0
      21: ifnonnull     57
      24: invokestatic  #30                 // Method com/ibm/icu/text/CurrencyMetaInfo.getInstance:()Lcom/ibm/icu/text/CurrencyMetaInfo;
      27: astore_1
      28: new           #33                 // class java/util/HashSet
      31: dup
      32: aload_1
      33: invokestatic  #31                 // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.all:()Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      36: invokevirtual #32                 // Method com/ibm/icu/text/CurrencyMetaInfo.currencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      39: invokespecial #155                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      42: invokestatic  #156                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      45: astore_0
      46: new           #151                // class java/lang/ref/SoftReference
      49: dup
      50: aload_0
      51: invokespecial #152                // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      54: putstatic     #153                // Field ALL_CODES_AS_SET:Ljava/lang/ref/SoftReference;
      57: aload_0
      58: areturn

  public static boolean isAvailable(java.lang.String, java.util.Date, java.util.Date);
    Code:
       0: aload_0
       1: invokestatic  #61                 // Method isAlpha3Code:(Ljava/lang/String;)Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: ifnull        35
      13: aload_2
      14: ifnull        35
      17: aload_1
      18: aload_2
      19: invokevirtual #157                // Method java/util/Date.after:(Ljava/util/Date;)Z
      22: ifeq          35
      25: new           #62                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #158                // String To is before from
      31: invokespecial #64                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: getstatic     #65                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
      39: invokevirtual #66                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      42: astore_0
      43: invokestatic  #159                // Method getAllCurrenciesAsSet:()Ljava/util/Set;
      46: aload_0
      47: invokeinterface #160,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      52: istore_3
      53: iload_3
      54: ifne          59
      57: iconst_0
      58: ireturn
      59: aload_1
      60: ifnonnull     69
      63: aload_2
      64: ifnonnull     69
      67: iconst_1
      68: ireturn
      69: invokestatic  #30                 // Method com/ibm/icu/text/CurrencyMetaInfo.getInstance:()Lcom/ibm/icu/text/CurrencyMetaInfo;
      72: astore        4
      74: aload         4
      76: aload_1
      77: aload_2
      78: invokestatic  #161                // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.onDateRange:(Ljava/util/Date;Ljava/util/Date;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      81: aload_0
      82: invokevirtual #162                // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.withCurrency:(Ljava/lang/String;)Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
      85: invokevirtual #32                 // Method com/ibm/icu/text/CurrencyMetaInfo.currencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      88: astore        5
      90: aload         5
      92: aload_0
      93: invokeinterface #163,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      98: ireturn

  private static java.util.List<java.lang.String> getTenderCurrencies(com.ibm.icu.text.CurrencyMetaInfo$CurrencyFilter);
    Code:
       0: invokestatic  #30                 // Method com/ibm/icu/text/CurrencyMetaInfo.getInstance:()Lcom/ibm/icu/text/CurrencyMetaInfo;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokevirtual #164                // Method com/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter.withTender:()Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;
       9: invokevirtual #32                 // Method com/ibm/icu/text/CurrencyMetaInfo.currencies:(Lcom/ibm/icu/text/CurrencyMetaInfo$CurrencyFilter;)Ljava/util/List;
      12: areturn

  private java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: new           #165                // class com/ibm/icu/util/MeasureUnit$MeasureUnitProxy
       3: dup
       4: aload_0
       5: getfield      #166                // Field type:Ljava/lang/String;
       8: aload_0
       9: getfield      #85                 // Field subType:Ljava/lang/String;
      12: invokespecial #167                // Method com/ibm/icu/util/MeasureUnit$MeasureUnitProxy."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: areturn

  private java.lang.Object readResolve() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: getfield      #147                // Field isoCode:Ljava/lang/String;
       4: invokestatic  #17                 // Method getInstance:(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
       7: areturn

  static com.ibm.icu.util.Currency access$100(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method loadCurrency:(Ljava/lang/String;)Lcom/ibm/icu/util/Currency;
       4: areturn

  static {};
    Code:
       0: ldc           #15                 // String currency
       2: invokestatic  #168                // Method com/ibm/icu/impl/ICUDebug.enabled:(Ljava/lang/String;)Z
       5: putstatic     #8                  // Field DEBUG:Z
       8: new           #169                // class com/ibm/icu/impl/SimpleCache
      11: dup
      12: invokespecial #170                // Method com/ibm/icu/impl/SimpleCache."<init>":()V
      15: putstatic     #118                // Field CURRENCY_NAME_CACHE:Lcom/ibm/icu/impl/ICUCache;
      18: new           #171                // class com/ibm/icu/util/Currency$EquivalenceRelation
      21: dup
      22: aconst_null
      23: invokespecial #172                // Method com/ibm/icu/util/Currency$EquivalenceRelation."<init>":(Lcom/ibm/icu/util/Currency$1;)V
      26: iconst_2
      27: anewarray     #26                 // class java/lang/String
      30: dup
      31: iconst_0
      32: ldc           #173                // String ¥
      34: aastore
      35: dup
      36: iconst_1
      37: ldc           #174                // String ￥
      39: aastore
      40: invokevirtual #175                // Method com/ibm/icu/util/Currency$EquivalenceRelation.add:([Ljava/lang/Object;)Lcom/ibm/icu/util/Currency$EquivalenceRelation;
      43: iconst_3
      44: anewarray     #26                 // class java/lang/String
      47: dup
      48: iconst_0
      49: ldc           #176                // String $
      51: aastore
      52: dup
      53: iconst_1
      54: ldc           #177                // String ﹩
      56: aastore
      57: dup
      58: iconst_2
      59: ldc           #178                // String ＄
      61: aastore
      62: invokevirtual #175                // Method com/ibm/icu/util/Currency$EquivalenceRelation.add:([Ljava/lang/Object;)Lcom/ibm/icu/util/Currency$EquivalenceRelation;
      65: iconst_2
      66: anewarray     #26                 // class java/lang/String
      69: dup
      70: iconst_0
      71: ldc           #179                // String ₨
      73: aastore
      74: dup
      75: iconst_1
      76: ldc           #180                // String ₹
      78: aastore
      79: invokevirtual #175                // Method com/ibm/icu/util/Currency$EquivalenceRelation.add:([Ljava/lang/Object;)Lcom/ibm/icu/util/Currency$EquivalenceRelation;
      82: iconst_2
      83: anewarray     #26                 // class java/lang/String
      86: dup
      87: iconst_0
      88: ldc           #181                // String £
      90: aastore
      91: dup
      92: iconst_1
      93: ldc           #182                // String ₤
      95: aastore
      96: invokevirtual #175                // Method com/ibm/icu/util/Currency$EquivalenceRelation.add:([Ljava/lang/Object;)Lcom/ibm/icu/util/Currency$EquivalenceRelation;
      99: putstatic     #133                // Field EQUIVALENT_CURRENCY_SYMBOLS:Lcom/ibm/icu/util/Currency$EquivalenceRelation;
     102: new           #183                // class com/ibm/icu/util/Currency$1
     105: dup
     106: invokespecial #184                // Method com/ibm/icu/util/Currency$1."<init>":()V
     109: putstatic     #50                 // Field regionCurrencyCache:Lcom/ibm/icu/impl/CacheBase;
     112: new           #185                // class com/ibm/icu/util/ULocale
     115: dup
     116: ldc           #186                // String und
     118: invokespecial #187                // Method com/ibm/icu/util/ULocale."<init>":(Ljava/lang/String;)V
     121: putstatic     #82                 // Field UND:Lcom/ibm/icu/util/ULocale;
     124: iconst_0
     125: anewarray     #26                 // class java/lang/String
     128: putstatic     #80                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;
     131: bipush        10
     133: newarray       int
     135: dup
     136: iconst_0
     137: iconst_1
     138: iastore
     139: dup
     140: iconst_1
     141: bipush        10
     143: iastore
     144: dup
     145: iconst_2
     146: bipush        100
     148: iastore
     149: dup
     150: iconst_3
     151: sipush        1000
     154: iastore
     155: dup
     156: iconst_4
     157: sipush        10000
     160: iastore
     161: dup
     162: iconst_5
     163: ldc           #188                // int 100000
     165: iastore
     166: dup
     167: bipush        6
     169: ldc           #189                // int 1000000
     171: iastore
     172: dup
     173: bipush        7
     175: ldc           #190                // int 10000000
     177: iastore
     178: dup
     179: bipush        8
     181: ldc           #191                // int 100000000
     183: iastore
     184: dup
     185: bipush        9
     187: ldc           #192                // int 1000000000
     189: iastore
     190: putstatic     #145                // Field POW10:[I
     193: return
}
