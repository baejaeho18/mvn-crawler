Compiled from "ByteArrayWrapper.java"
public class com.ibm.icu.util.ByteArrayWrapper implements java.lang.Comparable<com.ibm.icu.util.ByteArrayWrapper> {
  public byte[] bytes;

  public int size;

  public com.ibm.icu.util.ByteArrayWrapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public com.ibm.icu.util.ByteArrayWrapper(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     12
       8: iload_2
       9: ifne          26
      12: iload_2
      13: iflt          26
      16: aload_1
      17: ifnull        53
      20: iload_2
      21: aload_1
      22: arraylength
      23: if_icmple     53
      26: new           #2                  // class java/lang/IndexOutOfBoundsException
      29: dup
      30: new           #3                  // class java/lang/StringBuilder
      33: dup
      34: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #5                  // String illegal size:
      39: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #9                  // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: aload_1
      55: putfield      #10                 // Field bytes:[B
      58: aload_0
      59: iload_2
      60: putfield      #11                 // Field size:I
      63: return

  public com.ibm.icu.util.ByteArrayWrapper(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #12                 // Method java/nio/ByteBuffer.limit:()I
       9: putfield      #11                 // Field size:I
      12: aload_0
      13: aload_0
      14: getfield      #11                 // Field size:I
      17: newarray       byte
      19: putfield      #10                 // Field bytes:[B
      22: aload_1
      23: aload_0
      24: getfield      #10                 // Field bytes:[B
      27: iconst_0
      28: aload_0
      29: getfield      #11                 // Field size:I
      32: invokevirtual #13                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      35: pop
      36: return

  public com.ibm.icu.util.ByteArrayWrapper ensureCapacity(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field bytes:[B
       4: ifnull        16
       7: aload_0
       8: getfield      #10                 // Field bytes:[B
      11: arraylength
      12: iload_1
      13: if_icmpge     46
      16: iload_1
      17: newarray       byte
      19: astore_2
      20: aload_0
      21: getfield      #10                 // Field bytes:[B
      24: ifnull        41
      27: aload_0
      28: getfield      #10                 // Field bytes:[B
      31: iconst_0
      32: aload_2
      33: iconst_0
      34: aload_0
      35: getfield      #11                 // Field size:I
      38: invokestatic  #14                 // Method copyBytes:([BI[BII)V
      41: aload_0
      42: aload_2
      43: putfield      #10                 // Field bytes:[B
      46: aload_0
      47: areturn

  public final com.ibm.icu.util.ByteArrayWrapper set(byte[], int, int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #11                 // Field size:I
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: invokevirtual #15                 // Method append:([BII)Lcom/ibm/icu/util/ByteArrayWrapper;
      12: pop
      13: aload_0
      14: areturn

  public final com.ibm.icu.util.ByteArrayWrapper append(byte[], int, int);
    Code:
       0: iload_3
       1: iload_2
       2: isub
       3: istore        4
       5: aload_0
       6: aload_0
       7: getfield      #11                 // Field size:I
      10: iload         4
      12: iadd
      13: invokevirtual #16                 // Method ensureCapacity:(I)Lcom/ibm/icu/util/ByteArrayWrapper;
      16: pop
      17: aload_1
      18: iload_2
      19: aload_0
      20: getfield      #10                 // Field bytes:[B
      23: aload_0
      24: getfield      #11                 // Field size:I
      27: iload         4
      29: invokestatic  #14                 // Method copyBytes:([BI[BII)V
      32: aload_0
      33: dup
      34: getfield      #11                 // Field size:I
      37: iload         4
      39: iadd
      40: putfield      #11                 // Field size:I
      43: aload_0
      44: areturn

  public final byte[] releaseBytes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field bytes:[B
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #10                 // Field bytes:[B
      10: aload_0
      11: iconst_0
      12: putfield      #11                 // Field size:I
      15: aload_1
      16: areturn

  public java.lang.String toString();
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #11                 // Field size:I
      15: if_icmpge     55
      18: iload_2
      19: ifeq          29
      22: aload_1
      23: ldc           #17                 // String
      25: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: aload_0
      31: getfield      #10                 // Field bytes:[B
      34: iload_2
      35: baload
      36: sipush        255
      39: iand
      40: i2l
      41: iconst_2
      42: invokestatic  #18                 // Method com/ibm/icu/impl/Utility.hex:(JI)Ljava/lang/String;
      45: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: iinc          2, 1
      52: goto          10
      55: aload_1
      56: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: checkcast     #19                 // class com/ibm/icu/util/ByteArrayWrapper
      17: astore_2
      18: aload_0
      19: getfield      #11                 // Field size:I
      22: aload_2
      23: getfield      #11                 // Field size:I
      26: if_icmpeq     31
      29: iconst_0
      30: ireturn
      31: iconst_0
      32: istore_3
      33: iload_3
      34: aload_0
      35: getfield      #11                 // Field size:I
      38: if_icmpge     64
      41: aload_0
      42: getfield      #10                 // Field bytes:[B
      45: iload_3
      46: baload
      47: aload_2
      48: getfield      #10                 // Field bytes:[B
      51: iload_3
      52: baload
      53: if_icmpeq     58
      56: iconst_0
      57: ireturn
      58: iinc          3, 1
      61: goto          33
      64: iconst_1
      65: ireturn
      66: astore_2
      67: iconst_0
      68: ireturn
    Exception table:
       from    to  target type
          13    30    66   Class java/lang/ClassCastException
          31    57    66   Class java/lang/ClassCastException
          58    65    66   Class java/lang/ClassCastException

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #10                 // Field bytes:[B
       4: arraylength
       5: istore_1
       6: iconst_0
       7: istore_2
       8: iload_2
       9: aload_0
      10: getfield      #11                 // Field size:I
      13: if_icmpge     34
      16: bipush        37
      18: iload_1
      19: imul
      20: aload_0
      21: getfield      #10                 // Field bytes:[B
      24: iload_2
      25: baload
      26: iadd
      27: istore_1
      28: iinc          2, 1
      31: goto          8
      34: iload_1
      35: ireturn

  public int compareTo(com.ibm.icu.util.ByteArrayWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #11                 // Field size:I
      11: aload_1
      12: getfield      #11                 // Field size:I
      15: if_icmpge     25
      18: aload_0
      19: getfield      #11                 // Field size:I
      22: goto          29
      25: aload_1
      26: getfield      #11                 // Field size:I
      29: istore_2
      30: iconst_0
      31: istore_3
      32: iload_3
      33: iload_2
      34: if_icmpge     80
      37: aload_0
      38: getfield      #10                 // Field bytes:[B
      41: iload_3
      42: baload
      43: aload_1
      44: getfield      #10                 // Field bytes:[B
      47: iload_3
      48: baload
      49: if_icmpeq     74
      52: aload_0
      53: getfield      #10                 // Field bytes:[B
      56: iload_3
      57: baload
      58: sipush        255
      61: iand
      62: aload_1
      63: getfield      #10                 // Field bytes:[B
      66: iload_3
      67: baload
      68: sipush        255
      71: iand
      72: isub
      73: ireturn
      74: iinc          3, 1
      77: goto          32
      80: aload_0
      81: getfield      #11                 // Field size:I
      84: aload_1
      85: getfield      #11                 // Field size:I
      88: isub
      89: ireturn

  private static final void copyBytes(byte[], int, byte[], int, int);
    Code:
       0: iload         4
       2: bipush        64
       4: if_icmpge     41
       7: iload_1
       8: istore        5
      10: iload_3
      11: istore        6
      13: iinc          4, -1
      16: iload         4
      18: iflt          38
      21: aload_2
      22: iload         6
      24: aload_0
      25: iload         5
      27: baload
      28: bastore
      29: iinc          5, 1
      32: iinc          6, 1
      35: goto          13
      38: goto          50
      41: aload_0
      42: iload_1
      43: aload_2
      44: iload_3
      45: iload         4
      47: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      50: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class com/ibm/icu/util/ByteArrayWrapper
       5: invokevirtual #22                 // Method compareTo:(Lcom/ibm/icu/util/ByteArrayWrapper;)I
       8: ireturn
}
