Compiled from "BytesTrie.java"
public final class com.ibm.icu.util.BytesTrie implements java.lang.Cloneable, java.lang.Iterable<com.ibm.icu.util.BytesTrie$Entry> {
  private static com.ibm.icu.util.BytesTrie$Result[] valueResults_;

  static final int kMaxBranchLinearSubNodeLength;

  static final int kMinLinearMatch;

  static final int kMaxLinearMatchLength;

  static final int kMinValueLead;

  private static final int kValueIsFinal;

  static final int kMinOneByteValueLead;

  static final int kMaxOneByteValue;

  static final int kMinTwoByteValueLead;

  static final int kMaxTwoByteValue;

  static final int kMinThreeByteValueLead;

  static final int kFourByteValueLead;

  static final int kMaxThreeByteValue;

  static final int kFiveByteValueLead;

  static final int kMaxOneByteDelta;

  static final int kMinTwoByteDeltaLead;

  static final int kMinThreeByteDeltaLead;

  static final int kFourByteDeltaLead;

  static final int kFiveByteDeltaLead;

  static final int kMaxTwoByteDelta;

  static final int kMaxThreeByteDelta;

  private byte[] bytes_;

  private int root_;

  private int pos_;

  private int remainingMatchLength_;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.util.BytesTrie(byte[], int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field bytes_:[B
       9: aload_0
      10: aload_0
      11: iload_2
      12: dup_x1
      13: putfield      #8                  // Field root_:I
      16: putfield      #9                  // Field pos_:I
      19: aload_0
      20: iconst_m1
      21: putfield      #10                 // Field remainingMatchLength_:I
      24: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public com.ibm.icu.util.BytesTrie reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field root_:I
       5: putfield      #9                  // Field pos_:I
       8: aload_0
       9: iconst_m1
      10: putfield      #10                 // Field remainingMatchLength_:I
      13: aload_0
      14: areturn

  public com.ibm.icu.util.BytesTrie saveState(com.ibm.icu.util.BytesTrie$State);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #7                  // Field bytes_:[B
       5: invokestatic  #12                 // Method com/ibm/icu/util/BytesTrie$State.access$002:(Lcom/ibm/icu/util/BytesTrie$State;[B)[B
       8: pop
       9: aload_1
      10: aload_0
      11: getfield      #8                  // Field root_:I
      14: invokestatic  #13                 // Method com/ibm/icu/util/BytesTrie$State.access$102:(Lcom/ibm/icu/util/BytesTrie$State;I)I
      17: pop
      18: aload_1
      19: aload_0
      20: getfield      #9                  // Field pos_:I
      23: invokestatic  #14                 // Method com/ibm/icu/util/BytesTrie$State.access$202:(Lcom/ibm/icu/util/BytesTrie$State;I)I
      26: pop
      27: aload_1
      28: aload_0
      29: getfield      #10                 // Field remainingMatchLength_:I
      32: invokestatic  #15                 // Method com/ibm/icu/util/BytesTrie$State.access$302:(Lcom/ibm/icu/util/BytesTrie$State;I)I
      35: pop
      36: aload_0
      37: areturn

  public com.ibm.icu.util.BytesTrie resetToState(com.ibm.icu.util.BytesTrie$State);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytes_:[B
       4: aload_1
       5: invokestatic  #16                 // Method com/ibm/icu/util/BytesTrie$State.access$000:(Lcom/ibm/icu/util/BytesTrie$State;)[B
       8: if_acmpne     48
      11: aload_0
      12: getfield      #7                  // Field bytes_:[B
      15: ifnull        48
      18: aload_0
      19: getfield      #8                  // Field root_:I
      22: aload_1
      23: invokestatic  #17                 // Method com/ibm/icu/util/BytesTrie$State.access$100:(Lcom/ibm/icu/util/BytesTrie$State;)I
      26: if_icmpne     48
      29: aload_0
      30: aload_1
      31: invokestatic  #18                 // Method com/ibm/icu/util/BytesTrie$State.access$200:(Lcom/ibm/icu/util/BytesTrie$State;)I
      34: putfield      #9                  // Field pos_:I
      37: aload_0
      38: aload_1
      39: invokestatic  #19                 // Method com/ibm/icu/util/BytesTrie$State.access$300:(Lcom/ibm/icu/util/BytesTrie$State;)I
      42: putfield      #10                 // Field remainingMatchLength_:I
      45: goto          58
      48: new           #20                 // class java/lang/IllegalArgumentException
      51: dup
      52: ldc           #21                 // String incompatible trie state
      54: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_0
      59: areturn

  public com.ibm.icu.util.BytesTrie$Result current();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos_:I
       4: istore_1
       5: iload_1
       6: ifge          13
       9: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
      12: areturn
      13: aload_0
      14: getfield      #10                 // Field remainingMatchLength_:I
      17: ifge          47
      20: aload_0
      21: getfield      #7                  // Field bytes_:[B
      24: iload_1
      25: baload
      26: sipush        255
      29: iand
      30: dup
      31: istore_2
      32: bipush        32
      34: if_icmplt     47
      37: getstatic     #24                 // Field valueResults_:[Lcom/ibm/icu/util/BytesTrie$Result;
      40: iload_2
      41: iconst_1
      42: iand
      43: aaload
      44: goto          50
      47: getstatic     #25                 // Field com/ibm/icu/util/BytesTrie$Result.NO_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
      50: areturn

  public com.ibm.icu.util.BytesTrie$Result first(int);
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #10                 // Field remainingMatchLength_:I
       5: iload_1
       6: ifge          15
       9: iinc_w        1, 256
      15: aload_0
      16: aload_0
      17: getfield      #8                  // Field root_:I
      20: iload_1
      21: invokespecial #26                 // Method nextImpl:(II)Lcom/ibm/icu/util/BytesTrie$Result;
      24: areturn

  public com.ibm.icu.util.BytesTrie$Result next(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos_:I
       4: istore_2
       5: iload_2
       6: ifge          13
       9: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
      12: areturn
      13: iload_1
      14: ifge          23
      17: iinc_w        1, 256
      23: aload_0
      24: getfield      #10                 // Field remainingMatchLength_:I
      27: istore_3
      28: iload_3
      29: iflt          107
      32: iload_1
      33: aload_0
      34: getfield      #7                  // Field bytes_:[B
      37: iload_2
      38: iinc          2, 1
      41: baload
      42: sipush        255
      45: iand
      46: if_icmpne     99
      49: aload_0
      50: iinc          3, -1
      53: iload_3
      54: putfield      #10                 // Field remainingMatchLength_:I
      57: aload_0
      58: iload_2
      59: putfield      #9                  // Field pos_:I
      62: iload_3
      63: ifge          95
      66: aload_0
      67: getfield      #7                  // Field bytes_:[B
      70: iload_2
      71: baload
      72: sipush        255
      75: iand
      76: dup
      77: istore        4
      79: bipush        32
      81: if_icmplt     95
      84: getstatic     #24                 // Field valueResults_:[Lcom/ibm/icu/util/BytesTrie$Result;
      87: iload         4
      89: iconst_1
      90: iand
      91: aaload
      92: goto          98
      95: getstatic     #25                 // Field com/ibm/icu/util/BytesTrie$Result.NO_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
      98: areturn
      99: aload_0
     100: invokespecial #27                 // Method stop:()V
     103: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     106: areturn
     107: aload_0
     108: iload_2
     109: iload_1
     110: invokespecial #26                 // Method nextImpl:(II)Lcom/ibm/icu/util/BytesTrie$Result;
     113: areturn

  public com.ibm.icu.util.BytesTrie$Result next(byte[], int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmplt     10
       5: aload_0
       6: invokevirtual #28                 // Method current:()Lcom/ibm/icu/util/BytesTrie$Result;
       9: areturn
      10: aload_0
      11: getfield      #9                  // Field pos_:I
      14: istore        4
      16: iload         4
      18: ifge          25
      21: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
      24: areturn
      25: aload_0
      26: getfield      #10                 // Field remainingMatchLength_:I
      29: istore        5
      31: iload_2
      32: iload_3
      33: if_icmpne     87
      36: aload_0
      37: iload         5
      39: putfield      #10                 // Field remainingMatchLength_:I
      42: aload_0
      43: iload         4
      45: putfield      #9                  // Field pos_:I
      48: iload         5
      50: ifge          83
      53: aload_0
      54: getfield      #7                  // Field bytes_:[B
      57: iload         4
      59: baload
      60: sipush        255
      63: iand
      64: dup
      65: istore        7
      67: bipush        32
      69: if_icmplt     83
      72: getstatic     #24                 // Field valueResults_:[Lcom/ibm/icu/util/BytesTrie$Result;
      75: iload         7
      77: iconst_1
      78: iand
      79: aaload
      80: goto          86
      83: getstatic     #25                 // Field com/ibm/icu/util/BytesTrie$Result.NO_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
      86: areturn
      87: aload_1
      88: iload_2
      89: iinc          2, 1
      92: baload
      93: istore        6
      95: iload         5
      97: ifge          109
     100: aload_0
     101: iload         5
     103: putfield      #10                 // Field remainingMatchLength_:I
     106: goto          138
     109: iload         6
     111: aload_0
     112: getfield      #7                  // Field bytes_:[B
     115: iload         4
     117: baload
     118: if_icmpeq     129
     121: aload_0
     122: invokespecial #27                 // Method stop:()V
     125: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     128: areturn
     129: iinc          4, 1
     132: iinc          5, -1
     135: goto          31
     138: aload_0
     139: getfield      #7                  // Field bytes_:[B
     142: iload         4
     144: iinc          4, 1
     147: baload
     148: sipush        255
     151: iand
     152: istore        7
     154: iload         7
     156: bipush        16
     158: if_icmpge     230
     161: aload_0
     162: iload         4
     164: iload         7
     166: iload         6
     168: sipush        255
     171: iand
     172: invokespecial #29                 // Method branchNext:(III)Lcom/ibm/icu/util/BytesTrie$Result;
     175: astore        8
     177: aload         8
     179: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     182: if_acmpne     189
     185: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     188: areturn
     189: iload_2
     190: iload_3
     191: if_icmpne     197
     194: aload         8
     196: areturn
     197: aload         8
     199: getstatic     #30                 // Field com/ibm/icu/util/BytesTrie$Result.FINAL_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
     202: if_acmpne     213
     205: aload_0
     206: invokespecial #27                 // Method stop:()V
     209: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     212: areturn
     213: aload_1
     214: iload_2
     215: iinc          2, 1
     218: baload
     219: istore        6
     221: aload_0
     222: getfield      #9                  // Field pos_:I
     225: istore        4
     227: goto          327
     230: iload         7
     232: bipush        32
     234: if_icmpge     273
     237: iload         7
     239: bipush        16
     241: isub
     242: istore        5
     244: iload         6
     246: aload_0
     247: getfield      #7                  // Field bytes_:[B
     250: iload         4
     252: baload
     253: if_icmpeq     264
     256: aload_0
     257: invokespecial #27                 // Method stop:()V
     260: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     263: areturn
     264: iinc          4, 1
     267: iinc          5, -1
     270: goto          330
     273: iload         7
     275: iconst_1
     276: iand
     277: ifeq          288
     280: aload_0
     281: invokespecial #27                 // Method stop:()V
     284: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     287: areturn
     288: iload         4
     290: iload         7
     292: invokestatic  #4                  // Method skipValue:(II)I
     295: istore        4
     297: getstatic     #31                 // Field $assertionsDisabled:Z
     300: ifne          327
     303: aload_0
     304: getfield      #7                  // Field bytes_:[B
     307: iload         4
     309: baload
     310: sipush        255
     313: iand
     314: bipush        32
     316: if_icmplt     327
     319: new           #32                 // class java/lang/AssertionError
     322: dup
     323: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
     326: athrow
     327: goto          138
     330: goto          31

  public int getValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos_:I
       4: istore_1
       5: aload_0
       6: getfield      #7                  // Field bytes_:[B
       9: iload_1
      10: iinc          1, 1
      13: baload
      14: sipush        255
      17: iand
      18: istore_2
      19: getstatic     #31                 // Field $assertionsDisabled:Z
      22: ifne          39
      25: iload_2
      26: bipush        32
      28: if_icmpge     39
      31: new           #32                 // class java/lang/AssertionError
      34: dup
      35: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: aload_0
      40: getfield      #7                  // Field bytes_:[B
      43: iload_1
      44: iload_2
      45: iconst_1
      46: ishr
      47: invokestatic  #5                  // Method readValue:([BII)I
      50: ireturn

  public long getUniqueValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos_:I
       4: istore_1
       5: iload_1
       6: ifge          11
       9: lconst_0
      10: lreturn
      11: aload_0
      12: getfield      #7                  // Field bytes_:[B
      15: iload_1
      16: aload_0
      17: getfield      #10                 // Field remainingMatchLength_:I
      20: iadd
      21: iconst_1
      22: iadd
      23: lconst_0
      24: invokestatic  #34                 // Method findUniqueValue:([BIJ)J
      27: lstore_2
      28: lload_2
      29: bipush        31
      31: lshl
      32: bipush        31
      34: lshr
      35: lreturn

  public int getNextBytes(java.lang.Appendable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field pos_:I
       4: istore_2
       5: iload_2
       6: ifge          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #10                 // Field remainingMatchLength_:I
      15: iflt          34
      18: aload_1
      19: aload_0
      20: getfield      #7                  // Field bytes_:[B
      23: iload_2
      24: baload
      25: sipush        255
      28: iand
      29: invokestatic  #35                 // Method append:(Ljava/lang/Appendable;I)V
      32: iconst_1
      33: ireturn
      34: aload_0
      35: getfield      #7                  // Field bytes_:[B
      38: iload_2
      39: iinc          2, 1
      42: baload
      43: sipush        255
      46: iand
      47: istore_3
      48: iload_3
      49: bipush        32
      51: if_icmplt     102
      54: iload_3
      55: iconst_1
      56: iand
      57: ifeq          62
      60: iconst_0
      61: ireturn
      62: iload_2
      63: iload_3
      64: invokestatic  #4                  // Method skipValue:(II)I
      67: istore_2
      68: aload_0
      69: getfield      #7                  // Field bytes_:[B
      72: iload_2
      73: iinc          2, 1
      76: baload
      77: sipush        255
      80: iand
      81: istore_3
      82: getstatic     #31                 // Field $assertionsDisabled:Z
      85: ifne          102
      88: iload_3
      89: bipush        32
      91: if_icmplt     102
      94: new           #32                 // class java/lang/AssertionError
      97: dup
      98: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
     101: athrow
     102: iload_3
     103: bipush        16
     105: if_icmpge     141
     108: iload_3
     109: ifne          126
     112: aload_0
     113: getfield      #7                  // Field bytes_:[B
     116: iload_2
     117: iinc          2, 1
     120: baload
     121: sipush        255
     124: iand
     125: istore_3
     126: aload_0
     127: getfield      #7                  // Field bytes_:[B
     130: iload_2
     131: iinc          3, 1
     134: iload_3
     135: aload_1
     136: invokestatic  #36                 // Method getNextBranchBytes:([BIILjava/lang/Appendable;)V
     139: iload_3
     140: ireturn
     141: aload_1
     142: aload_0
     143: getfield      #7                  // Field bytes_:[B
     146: iload_2
     147: baload
     148: sipush        255
     151: iand
     152: invokestatic  #35                 // Method append:(Ljava/lang/Appendable;I)V
     155: iconst_1
     156: ireturn

  public com.ibm.icu.util.BytesTrie$Iterator iterator();
    Code:
       0: new           #37                 // class com/ibm/icu/util/BytesTrie$Iterator
       3: dup
       4: aload_0
       5: getfield      #7                  // Field bytes_:[B
       8: aload_0
       9: getfield      #9                  // Field pos_:I
      12: aload_0
      13: getfield      #10                 // Field remainingMatchLength_:I
      16: iconst_0
      17: aconst_null
      18: invokespecial #38                 // Method com/ibm/icu/util/BytesTrie$Iterator."<init>":([BIIILcom/ibm/icu/util/BytesTrie$1;)V
      21: areturn

  public com.ibm.icu.util.BytesTrie$Iterator iterator(int);
    Code:
       0: new           #37                 // class com/ibm/icu/util/BytesTrie$Iterator
       3: dup
       4: aload_0
       5: getfield      #7                  // Field bytes_:[B
       8: aload_0
       9: getfield      #9                  // Field pos_:I
      12: aload_0
      13: getfield      #10                 // Field remainingMatchLength_:I
      16: iload_1
      17: aconst_null
      18: invokespecial #38                 // Method com/ibm/icu/util/BytesTrie$Iterator."<init>":([BIIILcom/ibm/icu/util/BytesTrie$1;)V
      21: areturn

  public static com.ibm.icu.util.BytesTrie$Iterator iterator(byte[], int, int);
    Code:
       0: new           #37                 // class com/ibm/icu/util/BytesTrie$Iterator
       3: dup
       4: aload_0
       5: iload_1
       6: iconst_m1
       7: iload_2
       8: aconst_null
       9: invokespecial #38                 // Method com/ibm/icu/util/BytesTrie$Iterator."<init>":([BIIILcom/ibm/icu/util/BytesTrie$1;)V
      12: areturn

  private void stop();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #9                  // Field pos_:I
       5: return

  private static int readValue(byte[], int, int);
    Code:
       0: iload_2
       1: bipush        81
       3: if_icmpge     14
       6: iload_2
       7: bipush        16
       9: isub
      10: istore_3
      11: goto          163
      14: iload_2
      15: bipush        108
      17: if_icmpge     39
      20: iload_2
      21: bipush        81
      23: isub
      24: bipush        8
      26: ishl
      27: aload_0
      28: iload_1
      29: baload
      30: sipush        255
      33: iand
      34: ior
      35: istore_3
      36: goto          163
      39: iload_2
      40: bipush        126
      42: if_icmpge     77
      45: iload_2
      46: bipush        108
      48: isub
      49: bipush        16
      51: ishl
      52: aload_0
      53: iload_1
      54: baload
      55: sipush        255
      58: iand
      59: bipush        8
      61: ishl
      62: ior
      63: aload_0
      64: iload_1
      65: iconst_1
      66: iadd
      67: baload
      68: sipush        255
      71: iand
      72: ior
      73: istore_3
      74: goto          163
      77: iload_2
      78: bipush        126
      80: if_icmpne     120
      83: aload_0
      84: iload_1
      85: baload
      86: sipush        255
      89: iand
      90: bipush        16
      92: ishl
      93: aload_0
      94: iload_1
      95: iconst_1
      96: iadd
      97: baload
      98: sipush        255
     101: iand
     102: bipush        8
     104: ishl
     105: ior
     106: aload_0
     107: iload_1
     108: iconst_2
     109: iadd
     110: baload
     111: sipush        255
     114: iand
     115: ior
     116: istore_3
     117: goto          163
     120: aload_0
     121: iload_1
     122: baload
     123: bipush        24
     125: ishl
     126: aload_0
     127: iload_1
     128: iconst_1
     129: iadd
     130: baload
     131: sipush        255
     134: iand
     135: bipush        16
     137: ishl
     138: ior
     139: aload_0
     140: iload_1
     141: iconst_2
     142: iadd
     143: baload
     144: sipush        255
     147: iand
     148: bipush        8
     150: ishl
     151: ior
     152: aload_0
     153: iload_1
     154: iconst_3
     155: iadd
     156: baload
     157: sipush        255
     160: iand
     161: ior
     162: istore_3
     163: iload_3
     164: ireturn

  private static int skipValue(int, int);
    Code:
       0: getstatic     #31                 // Field $assertionsDisabled:Z
       3: ifne          20
       6: iload_1
       7: bipush        32
       9: if_icmpge     20
      12: new           #32                 // class java/lang/AssertionError
      15: dup
      16: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: iload_1
      21: sipush        162
      24: if_icmplt     63
      27: iload_1
      28: sipush        216
      31: if_icmpge     40
      34: iinc          0, 1
      37: goto          63
      40: iload_1
      41: sipush        252
      44: if_icmpge     53
      47: iinc          0, 2
      50: goto          63
      53: iload_0
      54: iconst_3
      55: iload_1
      56: iconst_1
      57: ishr
      58: iconst_1
      59: iand
      60: iadd
      61: iadd
      62: istore_0
      63: iload_0
      64: ireturn

  private static int skipValue(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iinc          1, 1
       5: baload
       6: sipush        255
       9: iand
      10: istore_2
      11: iload_1
      12: iload_2
      13: invokestatic  #4                  // Method skipValue:(II)I
      16: ireturn

  private static int jumpByDelta(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iinc          1, 1
       5: baload
       6: sipush        255
       9: iand
      10: istore_2
      11: iload_2
      12: sipush        192
      15: if_icmpge     21
      18: goto          187
      21: iload_2
      22: sipush        240
      25: if_icmpge     51
      28: iload_2
      29: sipush        192
      32: isub
      33: bipush        8
      35: ishl
      36: aload_0
      37: iload_1
      38: iinc          1, 1
      41: baload
      42: sipush        255
      45: iand
      46: ior
      47: istore_2
      48: goto          187
      51: iload_2
      52: sipush        254
      55: if_icmpge     94
      58: iload_2
      59: sipush        240
      62: isub
      63: bipush        16
      65: ishl
      66: aload_0
      67: iload_1
      68: baload
      69: sipush        255
      72: iand
      73: bipush        8
      75: ishl
      76: ior
      77: aload_0
      78: iload_1
      79: iconst_1
      80: iadd
      81: baload
      82: sipush        255
      85: iand
      86: ior
      87: istore_2
      88: iinc          1, 2
      91: goto          187
      94: iload_2
      95: sipush        254
      98: if_icmpne     141
     101: aload_0
     102: iload_1
     103: baload
     104: sipush        255
     107: iand
     108: bipush        16
     110: ishl
     111: aload_0
     112: iload_1
     113: iconst_1
     114: iadd
     115: baload
     116: sipush        255
     119: iand
     120: bipush        8
     122: ishl
     123: ior
     124: aload_0
     125: iload_1
     126: iconst_2
     127: iadd
     128: baload
     129: sipush        255
     132: iand
     133: ior
     134: istore_2
     135: iinc          1, 3
     138: goto          187
     141: aload_0
     142: iload_1
     143: baload
     144: bipush        24
     146: ishl
     147: aload_0
     148: iload_1
     149: iconst_1
     150: iadd
     151: baload
     152: sipush        255
     155: iand
     156: bipush        16
     158: ishl
     159: ior
     160: aload_0
     161: iload_1
     162: iconst_2
     163: iadd
     164: baload
     165: sipush        255
     168: iand
     169: bipush        8
     171: ishl
     172: ior
     173: aload_0
     174: iload_1
     175: iconst_3
     176: iadd
     177: baload
     178: sipush        255
     181: iand
     182: ior
     183: istore_2
     184: iinc          1, 4
     187: iload_1
     188: iload_2
     189: iadd
     190: ireturn

  private static int skipDelta(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iinc          1, 1
       5: baload
       6: sipush        255
       9: iand
      10: istore_2
      11: iload_2
      12: sipush        192
      15: if_icmplt     52
      18: iload_2
      19: sipush        240
      22: if_icmpge     31
      25: iinc          1, 1
      28: goto          52
      31: iload_2
      32: sipush        254
      35: if_icmpge     44
      38: iinc          1, 2
      41: goto          52
      44: iload_1
      45: iconst_3
      46: iload_2
      47: iconst_1
      48: iand
      49: iadd
      50: iadd
      51: istore_1
      52: iload_1
      53: ireturn

  private com.ibm.icu.util.BytesTrie$Result branchNext(int, int, int);
    Code:
       0: iload_2
       1: ifne          18
       4: aload_0
       5: getfield      #7                  // Field bytes_:[B
       8: iload_1
       9: iinc          1, 1
      12: baload
      13: sipush        255
      16: iand
      17: istore_2
      18: iinc          2, 1
      21: iload_2
      22: iconst_5
      23: if_icmple     77
      26: iload_3
      27: aload_0
      28: getfield      #7                  // Field bytes_:[B
      31: iload_1
      32: iinc          1, 1
      35: baload
      36: sipush        255
      39: iand
      40: if_icmpge     59
      43: iload_2
      44: iconst_1
      45: ishr
      46: istore_2
      47: aload_0
      48: getfield      #7                  // Field bytes_:[B
      51: iload_1
      52: invokestatic  #2                  // Method jumpByDelta:([BI)I
      55: istore_1
      56: goto          21
      59: iload_2
      60: iload_2
      61: iconst_1
      62: ishr
      63: isub
      64: istore_2
      65: aload_0
      66: getfield      #7                  // Field bytes_:[B
      69: iload_1
      70: invokestatic  #3                  // Method skipDelta:([BI)I
      73: istore_1
      74: goto          21
      77: iload_3
      78: aload_0
      79: getfield      #7                  // Field bytes_:[B
      82: iload_1
      83: iinc          1, 1
      86: baload
      87: sipush        255
      90: iand
      91: if_icmpne     416
      94: aload_0
      95: getfield      #7                  // Field bytes_:[B
      98: iload_1
      99: baload
     100: sipush        255
     103: iand
     104: istore        5
     106: getstatic     #31                 // Field $assertionsDisabled:Z
     109: ifne          127
     112: iload         5
     114: bipush        32
     116: if_icmpge     127
     119: new           #32                 // class java/lang/AssertionError
     122: dup
     123: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
     126: athrow
     127: iload         5
     129: iconst_1
     130: iand
     131: ifeq          142
     134: getstatic     #30                 // Field com/ibm/icu/util/BytesTrie$Result.FINAL_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
     137: astore        4
     139: goto          408
     142: iinc          1, 1
     145: iload         5
     147: iconst_1
     148: ishr
     149: istore        5
     151: iload         5
     153: bipush        81
     155: if_icmpge     168
     158: iload         5
     160: bipush        16
     162: isub
     163: istore        6
     165: goto          368
     168: iload         5
     170: bipush        108
     172: if_icmpge     202
     175: iload         5
     177: bipush        81
     179: isub
     180: bipush        8
     182: ishl
     183: aload_0
     184: getfield      #7                  // Field bytes_:[B
     187: iload_1
     188: iinc          1, 1
     191: baload
     192: sipush        255
     195: iand
     196: ior
     197: istore        6
     199: goto          368
     202: iload         5
     204: bipush        126
     206: if_icmpge     252
     209: iload         5
     211: bipush        108
     213: isub
     214: bipush        16
     216: ishl
     217: aload_0
     218: getfield      #7                  // Field bytes_:[B
     221: iload_1
     222: baload
     223: sipush        255
     226: iand
     227: bipush        8
     229: ishl
     230: ior
     231: aload_0
     232: getfield      #7                  // Field bytes_:[B
     235: iload_1
     236: iconst_1
     237: iadd
     238: baload
     239: sipush        255
     242: iand
     243: ior
     244: istore        6
     246: iinc          1, 2
     249: goto          368
     252: iload         5
     254: bipush        126
     256: if_icmpne     309
     259: aload_0
     260: getfield      #7                  // Field bytes_:[B
     263: iload_1
     264: baload
     265: sipush        255
     268: iand
     269: bipush        16
     271: ishl
     272: aload_0
     273: getfield      #7                  // Field bytes_:[B
     276: iload_1
     277: iconst_1
     278: iadd
     279: baload
     280: sipush        255
     283: iand
     284: bipush        8
     286: ishl
     287: ior
     288: aload_0
     289: getfield      #7                  // Field bytes_:[B
     292: iload_1
     293: iconst_2
     294: iadd
     295: baload
     296: sipush        255
     299: iand
     300: ior
     301: istore        6
     303: iinc          1, 3
     306: goto          368
     309: aload_0
     310: getfield      #7                  // Field bytes_:[B
     313: iload_1
     314: baload
     315: bipush        24
     317: ishl
     318: aload_0
     319: getfield      #7                  // Field bytes_:[B
     322: iload_1
     323: iconst_1
     324: iadd
     325: baload
     326: sipush        255
     329: iand
     330: bipush        16
     332: ishl
     333: ior
     334: aload_0
     335: getfield      #7                  // Field bytes_:[B
     338: iload_1
     339: iconst_2
     340: iadd
     341: baload
     342: sipush        255
     345: iand
     346: bipush        8
     348: ishl
     349: ior
     350: aload_0
     351: getfield      #7                  // Field bytes_:[B
     354: iload_1
     355: iconst_3
     356: iadd
     357: baload
     358: sipush        255
     361: iand
     362: ior
     363: istore        6
     365: iinc          1, 4
     368: iload_1
     369: iload         6
     371: iadd
     372: istore_1
     373: aload_0
     374: getfield      #7                  // Field bytes_:[B
     377: iload_1
     378: baload
     379: sipush        255
     382: iand
     383: istore        5
     385: iload         5
     387: bipush        32
     389: if_icmplt     403
     392: getstatic     #24                 // Field valueResults_:[Lcom/ibm/icu/util/BytesTrie$Result;
     395: iload         5
     397: iconst_1
     398: iand
     399: aaload
     400: goto          406
     403: getstatic     #25                 // Field com/ibm/icu/util/BytesTrie$Result.NO_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
     406: astore        4
     408: aload_0
     409: iload_1
     410: putfield      #9                  // Field pos_:I
     413: aload         4
     415: areturn
     416: iinc          2, -1
     419: aload_0
     420: getfield      #7                  // Field bytes_:[B
     423: iload_1
     424: invokestatic  #39                 // Method skipValue:([BI)I
     427: istore_1
     428: iload_2
     429: iconst_1
     430: if_icmpgt     77
     433: iload_3
     434: aload_0
     435: getfield      #7                  // Field bytes_:[B
     438: iload_1
     439: iinc          1, 1
     442: baload
     443: sipush        255
     446: iand
     447: if_icmpne     489
     450: aload_0
     451: iload_1
     452: putfield      #9                  // Field pos_:I
     455: aload_0
     456: getfield      #7                  // Field bytes_:[B
     459: iload_1
     460: baload
     461: sipush        255
     464: iand
     465: istore        4
     467: iload         4
     469: bipush        32
     471: if_icmplt     485
     474: getstatic     #24                 // Field valueResults_:[Lcom/ibm/icu/util/BytesTrie$Result;
     477: iload         4
     479: iconst_1
     480: iand
     481: aaload
     482: goto          488
     485: getstatic     #25                 // Field com/ibm/icu/util/BytesTrie$Result.NO_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
     488: areturn
     489: aload_0
     490: invokespecial #27                 // Method stop:()V
     493: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     496: areturn

  private com.ibm.icu.util.BytesTrie$Result nextImpl(int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bytes_:[B
       4: iload_1
       5: iinc          1, 1
       8: baload
       9: sipush        255
      12: iand
      13: istore_3
      14: iload_3
      15: bipush        16
      17: if_icmpge     28
      20: aload_0
      21: iload_1
      22: iload_3
      23: iload_2
      24: invokespecial #29                 // Method branchNext:(III)Lcom/ibm/icu/util/BytesTrie$Result;
      27: areturn
      28: iload_3
      29: bipush        32
      31: if_icmpge     107
      34: iload_3
      35: bipush        16
      37: isub
      38: istore        4
      40: iload_2
      41: aload_0
      42: getfield      #7                  // Field bytes_:[B
      45: iload_1
      46: iinc          1, 1
      49: baload
      50: sipush        255
      53: iand
      54: if_icmpne     154
      57: aload_0
      58: iinc          4, -1
      61: iload         4
      63: putfield      #10                 // Field remainingMatchLength_:I
      66: aload_0
      67: iload_1
      68: putfield      #9                  // Field pos_:I
      71: iload         4
      73: ifge          103
      76: aload_0
      77: getfield      #7                  // Field bytes_:[B
      80: iload_1
      81: baload
      82: sipush        255
      85: iand
      86: dup
      87: istore_3
      88: bipush        32
      90: if_icmplt     103
      93: getstatic     #24                 // Field valueResults_:[Lcom/ibm/icu/util/BytesTrie$Result;
      96: iload_3
      97: iconst_1
      98: iand
      99: aaload
     100: goto          106
     103: getstatic     #25                 // Field com/ibm/icu/util/BytesTrie$Result.NO_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
     106: areturn
     107: iload_3
     108: iconst_1
     109: iand
     110: ifeq          116
     113: goto          154
     116: iload_1
     117: iload_3
     118: invokestatic  #4                  // Method skipValue:(II)I
     121: istore_1
     122: getstatic     #31                 // Field $assertionsDisabled:Z
     125: ifne          151
     128: aload_0
     129: getfield      #7                  // Field bytes_:[B
     132: iload_1
     133: baload
     134: sipush        255
     137: iand
     138: bipush        32
     140: if_icmplt     151
     143: new           #32                 // class java/lang/AssertionError
     146: dup
     147: invokespecial #33                 // Method java/lang/AssertionError."<init>":()V
     150: athrow
     151: goto          0
     154: aload_0
     155: invokespecial #27                 // Method stop:()V
     158: getstatic     #23                 // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     161: areturn

  private static long findUniqueValueFromBranch(byte[], int, int, long);
    Code:
       0: iload_2
       1: iconst_5
       2: if_icmple     45
       5: iinc          1, 1
       8: aload_0
       9: aload_0
      10: iload_1
      11: invokestatic  #2                  // Method jumpByDelta:([BI)I
      14: iload_2
      15: iconst_1
      16: ishr
      17: lload_3
      18: invokestatic  #40                 // Method findUniqueValueFromBranch:([BIIJ)J
      21: lstore_3
      22: lload_3
      23: lconst_0
      24: lcmp
      25: ifne          30
      28: lconst_0
      29: lreturn
      30: iload_2
      31: iload_2
      32: iconst_1
      33: ishr
      34: isub
      35: istore_2
      36: aload_0
      37: iload_1
      38: invokestatic  #3                  // Method skipDelta:([BI)I
      41: istore_1
      42: goto          0
      45: iinc          1, 1
      48: aload_0
      49: iload_1
      50: iinc          1, 1
      53: baload
      54: sipush        255
      57: iand
      58: istore        5
      60: iload         5
      62: iconst_1
      63: iand
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: istore        6
      74: aload_0
      75: iload_1
      76: iload         5
      78: iconst_1
      79: ishr
      80: invokestatic  #5                  // Method readValue:([BII)I
      83: istore        7
      85: iload_1
      86: iload         5
      88: invokestatic  #4                  // Method skipValue:(II)I
      91: istore_1
      92: iload         6
      94: ifeq          125
      97: lload_3
      98: lconst_0
      99: lcmp
     100: ifeq          114
     103: iload         7
     105: lload_3
     106: iconst_1
     107: lshr
     108: l2i
     109: if_icmpeq     143
     112: lconst_0
     113: lreturn
     114: iload         7
     116: i2l
     117: iconst_1
     118: lshl
     119: lconst_1
     120: lor
     121: lstore_3
     122: goto          143
     125: aload_0
     126: iload_1
     127: iload         7
     129: iadd
     130: lload_3
     131: invokestatic  #34                 // Method findUniqueValue:([BIJ)J
     134: lstore_3
     135: lload_3
     136: lconst_0
     137: lcmp
     138: ifne          143
     141: lconst_0
     142: lreturn
     143: iinc          2, -1
     146: iload_2
     147: iconst_1
     148: if_icmpgt     45
     151: iload_1
     152: iconst_1
     153: iadd
     154: i2l
     155: bipush        33
     157: lshl
     158: lload_3
     159: ldc2_w        #41                 // long 8589934591l
     162: land
     163: lor
     164: lreturn

  private static long findUniqueValue(byte[], int, long);
    Code:
       0: aload_0
       1: iload_1
       2: iinc          1, 1
       5: baload
       6: sipush        255
       9: iand
      10: istore        4
      12: iload         4
      14: bipush        16
      16: if_icmpge     64
      19: iload         4
      21: ifne          36
      24: aload_0
      25: iload_1
      26: iinc          1, 1
      29: baload
      30: sipush        255
      33: iand
      34: istore        4
      36: aload_0
      37: iload_1
      38: iload         4
      40: iconst_1
      41: iadd
      42: lload_2
      43: invokestatic  #40                 // Method findUniqueValueFromBranch:([BIIJ)J
      46: lstore_2
      47: lload_2
      48: lconst_0
      49: lcmp
      50: ifne          55
      53: lconst_0
      54: lreturn
      55: lload_2
      56: bipush        33
      58: lushr
      59: l2i
      60: istore_1
      61: goto          148
      64: iload         4
      66: bipush        32
      68: if_icmpge     84
      71: iload_1
      72: iload         4
      74: bipush        16
      76: isub
      77: iconst_1
      78: iadd
      79: iadd
      80: istore_1
      81: goto          148
      84: iload         4
      86: iconst_1
      87: iand
      88: ifeq          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: istore        5
      98: aload_0
      99: iload_1
     100: iload         4
     102: iconst_1
     103: ishr
     104: invokestatic  #5                  // Method readValue:([BII)I
     107: istore        6
     109: lload_2
     110: lconst_0
     111: lcmp
     112: ifeq          126
     115: iload         6
     117: lload_2
     118: iconst_1
     119: lshr
     120: l2i
     121: if_icmpeq     134
     124: lconst_0
     125: lreturn
     126: iload         6
     128: i2l
     129: iconst_1
     130: lshl
     131: lconst_1
     132: lor
     133: lstore_2
     134: iload         5
     136: ifeq          141
     139: lload_2
     140: lreturn
     141: iload_1
     142: iload         4
     144: invokestatic  #4                  // Method skipValue:(II)I
     147: istore_1
     148: goto          0

  private static void getNextBranchBytes(byte[], int, int, java.lang.Appendable);
    Code:
       0: iload_2
       1: iconst_5
       2: if_icmple     36
       5: iinc          1, 1
       8: aload_0
       9: aload_0
      10: iload_1
      11: invokestatic  #2                  // Method jumpByDelta:([BI)I
      14: iload_2
      15: iconst_1
      16: ishr
      17: aload_3
      18: invokestatic  #36                 // Method getNextBranchBytes:([BIILjava/lang/Appendable;)V
      21: iload_2
      22: iload_2
      23: iconst_1
      24: ishr
      25: isub
      26: istore_2
      27: aload_0
      28: iload_1
      29: invokestatic  #3                  // Method skipDelta:([BI)I
      32: istore_1
      33: goto          0
      36: aload_3
      37: aload_0
      38: iload_1
      39: iinc          1, 1
      42: baload
      43: sipush        255
      46: iand
      47: invokestatic  #35                 // Method append:(Ljava/lang/Appendable;I)V
      50: aload_0
      51: iload_1
      52: invokestatic  #39                 // Method skipValue:([BI)I
      55: istore_1
      56: iinc          2, -1
      59: iload_2
      60: iconst_1
      61: if_icmpgt     36
      64: aload_3
      65: aload_0
      66: iload_1
      67: baload
      68: sipush        255
      71: iand
      72: invokestatic  #35                 // Method append:(Ljava/lang/Appendable;I)V
      75: return

  private static void append(java.lang.Appendable, int);
    Code:
       0: aload_0
       1: iload_1
       2: i2c
       3: invokeinterface #43,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
       8: pop
       9: goto          22
      12: astore_2
      13: new           #45                 // class com/ibm/icu/util/ICUUncheckedIOException
      16: dup
      17: aload_2
      18: invokespecial #46                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
      21: athrow
      22: return
    Exception table:
       from    to  target type
           0     9    12   Class java/io/IOException

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method iterator:()Lcom/ibm/icu/util/BytesTrie$Iterator;
       4: areturn

  static int access$900(byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #5                  // Method readValue:([BII)I
       6: ireturn

  static int access$1100(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #4                  // Method skipValue:(II)I
       5: ireturn

  static int access$1200(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #3                  // Method skipDelta:([BI)I
       5: ireturn

  static int access$1300(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method jumpByDelta:([BI)I
       5: ireturn

  static {};
    Code:
       0: ldc           #1                  // class com/ibm/icu/util/BytesTrie
       2: invokevirtual #48                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #31                 // Field $assertionsDisabled:Z
      16: iconst_2
      17: anewarray     #49                 // class com/ibm/icu/util/BytesTrie$Result
      20: dup
      21: iconst_0
      22: getstatic     #50                 // Field com/ibm/icu/util/BytesTrie$Result.INTERMEDIATE_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
      25: aastore
      26: dup
      27: iconst_1
      28: getstatic     #30                 // Field com/ibm/icu/util/BytesTrie$Result.FINAL_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
      31: aastore
      32: putstatic     #24                 // Field valueResults_:[Lcom/ibm/icu/util/BytesTrie$Result;
      35: return
}
