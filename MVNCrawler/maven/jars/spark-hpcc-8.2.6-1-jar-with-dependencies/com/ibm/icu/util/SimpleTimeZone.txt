Compiled from "SimpleTimeZone.java"
public class com.ibm.icu.util.SimpleTimeZone extends com.ibm.icu.util.BasicTimeZone {
  private static final long serialVersionUID;

  public static final int WALL_TIME;

  public static final int STANDARD_TIME;

  public static final int UTC_TIME;

  private static final byte[] staticMonthLength;

  private static final int DOM_MODE;

  private static final int DOW_IN_MONTH_MODE;

  private static final int DOW_GE_DOM_MODE;

  private static final int DOW_LE_DOM_MODE;

  private int raw;

  private int dst;

  private com.ibm.icu.util.STZInfo xinfo;

  private int startMonth;

  private int startDay;

  private int startDayOfWeek;

  private int startTime;

  private int startTimeMode;

  private int endTimeMode;

  private int endMonth;

  private int endDay;

  private int endDayOfWeek;

  private int endTime;

  private int startYear;

  private boolean useDaylight;

  private int startMode;

  private int endMode;

  private transient boolean transitionRulesInitialized;

  private transient com.ibm.icu.util.InitialTimeZoneRule initialRule;

  private transient com.ibm.icu.util.TimeZoneTransition firstTransition;

  private transient com.ibm.icu.util.AnnualTimeZoneRule stdRule;

  private transient com.ibm.icu.util.AnnualTimeZoneRule dstRule;

  private volatile transient boolean isFrozen;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.util.SimpleTimeZone(int, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/ibm/icu/util/BasicTimeZone."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: ldc           #2                  // int 3600000
       8: putfield      #3                  // Field dst:I
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field isFrozen:Z
      21: aload_0
      22: iload_1
      23: iconst_0
      24: iconst_0
      25: iconst_0
      26: iconst_0
      27: iconst_0
      28: iconst_0
      29: iconst_0
      30: iconst_0
      31: iconst_0
      32: iconst_0
      33: ldc           #2                  // int 3600000
      35: invokespecial #8                  // Method construct:(IIIIIIIIIIII)V
      38: return

  public com.ibm.icu.util.SimpleTimeZone(int, java.lang.String, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/ibm/icu/util/BasicTimeZone."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: ldc           #2                  // int 3600000
       8: putfield      #3                  // Field dst:I
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field isFrozen:Z
      21: aload_0
      22: iload_1
      23: iload_3
      24: iload         4
      26: iload         5
      28: iload         6
      30: iconst_0
      31: iload         7
      33: iload         8
      35: iload         9
      37: iload         10
      39: iconst_0
      40: ldc           #2                  // int 3600000
      42: invokespecial #8                  // Method construct:(IIIIIIIIIIII)V
      45: return

  public com.ibm.icu.util.SimpleTimeZone(int, java.lang.String, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/ibm/icu/util/BasicTimeZone."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: ldc           #2                  // int 3600000
       8: putfield      #3                  // Field dst:I
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field isFrozen:Z
      21: aload_0
      22: iload_1
      23: iload_3
      24: iload         4
      26: iload         5
      28: iload         6
      30: iload         7
      32: iload         8
      34: iload         9
      36: iload         10
      38: iload         11
      40: iload         12
      42: iload         13
      44: invokespecial #8                  // Method construct:(IIIIIIIIIIII)V
      47: return

  public com.ibm.icu.util.SimpleTimeZone(int, java.lang.String, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/ibm/icu/util/BasicTimeZone."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: ldc           #2                  // int 3600000
       8: putfield      #3                  // Field dst:I
      11: aload_0
      12: aconst_null
      13: putfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field isFrozen:Z
      21: aload_0
      22: iload_1
      23: iload_3
      24: iload         4
      26: iload         5
      28: iload         6
      30: iconst_0
      31: iload         7
      33: iload         8
      35: iload         9
      37: iload         10
      39: iconst_0
      40: iload         11
      42: invokespecial #8                  // Method construct:(IIIIIIIIIIII)V
      45: return

  public void setID(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokespecial #13                 // Method com/ibm/icu/util/BasicTimeZone.setID:(Ljava/lang/String;)V
      22: aload_0
      23: iconst_0
      24: putfield      #14                 // Field transitionRulesInitialized:Z
      27: return

  public void setRawOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iload_1
      19: putfield      #15                 // Field raw:I
      22: aload_0
      23: iconst_0
      24: putfield      #14                 // Field transitionRulesInitialized:Z
      27: return

  public int getRawOffset();
    Code:
       0: aload_0
       1: getfield      #15                 // Field raw:I
       4: ireturn

  public void setStartYear(int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #16                 // Method getSTZInfo:()Lcom/ibm/icu/util/STZInfo;
      21: iload_1
      22: putfield      #17                 // Field com/ibm/icu/util/STZInfo.sy:I
      25: aload_0
      26: iload_1
      27: putfield      #18                 // Field startYear:I
      30: aload_0
      31: iconst_0
      32: putfield      #14                 // Field transitionRulesInitialized:Z
      35: return

  public void setStartRule(int, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #16                 // Method getSTZInfo:()Lcom/ibm/icu/util/STZInfo;
      21: iload_1
      22: iload_2
      23: iload_3
      24: iload         4
      26: iconst_m1
      27: iconst_0
      28: invokevirtual #19                 // Method com/ibm/icu/util/STZInfo.setStart:(IIIIIZ)V
      31: aload_0
      32: iload_1
      33: iload_2
      34: iload_3
      35: iload         4
      37: iconst_0
      38: invokespecial #20                 // Method setStartRule:(IIIII)V
      41: return

  private void setStartRule(int, int, int, int, int);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #9                  // Method isFrozen:()Z
      10: ifeq          21
      13: new           #22                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #24                 // Field startMonth:I
      26: aload_0
      27: iload_2
      28: putfield      #25                 // Field startDay:I
      31: aload_0
      32: iload_3
      33: putfield      #26                 // Field startDayOfWeek:I
      36: aload_0
      37: iload         4
      39: putfield      #27                 // Field startTime:I
      42: aload_0
      43: iload         5
      45: putfield      #28                 // Field startTimeMode:I
      48: aload_0
      49: invokespecial #29                 // Method decodeStartRule:()V
      52: aload_0
      53: iconst_0
      54: putfield      #14                 // Field transitionRulesInitialized:Z
      57: return

  public void setStartRule(int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #16                 // Method getSTZInfo:()Lcom/ibm/icu/util/STZInfo;
      21: iload_1
      22: iconst_m1
      23: iconst_m1
      24: iload_3
      25: iload_2
      26: iconst_0
      27: invokevirtual #19                 // Method com/ibm/icu/util/STZInfo.setStart:(IIIIIZ)V
      30: aload_0
      31: iload_1
      32: iload_2
      33: iconst_0
      34: iload_3
      35: iconst_0
      36: invokespecial #20                 // Method setStartRule:(IIIII)V
      39: return

  public void setStartRule(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #16                 // Method getSTZInfo:()Lcom/ibm/icu/util/STZInfo;
      21: iload_1
      22: iconst_m1
      23: iload_3
      24: iload         4
      26: iload_2
      27: iload         5
      29: invokevirtual #19                 // Method com/ibm/icu/util/STZInfo.setStart:(IIIIIZ)V
      32: aload_0
      33: iload_1
      34: iload         5
      36: ifeq          43
      39: iload_2
      40: goto          45
      43: iload_2
      44: ineg
      45: iload_3
      46: ineg
      47: iload         4
      49: iconst_0
      50: invokespecial #20                 // Method setStartRule:(IIIII)V
      53: return

  public void setEndRule(int, int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #16                 // Method getSTZInfo:()Lcom/ibm/icu/util/STZInfo;
      21: iload_1
      22: iload_2
      23: iload_3
      24: iload         4
      26: iconst_m1
      27: iconst_0
      28: invokevirtual #30                 // Method com/ibm/icu/util/STZInfo.setEnd:(IIIIIZ)V
      31: aload_0
      32: iload_1
      33: iload_2
      34: iload_3
      35: iload         4
      37: iconst_0
      38: invokespecial #31                 // Method setEndRule:(IIIII)V
      41: return

  public void setEndRule(int, int, int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #16                 // Method getSTZInfo:()Lcom/ibm/icu/util/STZInfo;
      21: iload_1
      22: iconst_m1
      23: iconst_m1
      24: iload_3
      25: iload_2
      26: iconst_0
      27: invokevirtual #30                 // Method com/ibm/icu/util/STZInfo.setEnd:(IIIIIZ)V
      30: aload_0
      31: iload_1
      32: iload_2
      33: iconst_0
      34: iload_3
      35: invokevirtual #32                 // Method setEndRule:(IIII)V
      38: return

  public void setEndRule(int, int, int, int, boolean);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokespecial #16                 // Method getSTZInfo:()Lcom/ibm/icu/util/STZInfo;
      21: iload_1
      22: iconst_m1
      23: iload_3
      24: iload         4
      26: iload_2
      27: iload         5
      29: invokevirtual #30                 // Method com/ibm/icu/util/STZInfo.setEnd:(IIIIIZ)V
      32: aload_0
      33: iload_1
      34: iload_2
      35: iload_3
      36: iload         4
      38: iconst_0
      39: iload         5
      41: invokespecial #33                 // Method setEndRule:(IIIIIZ)V
      44: return

  private void setEndRule(int, int, int, int, int, boolean);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #9                  // Method isFrozen:()Z
      10: ifeq          21
      13: new           #22                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: iload         6
      25: ifeq          32
      28: iload_2
      29: goto          34
      32: iload_2
      33: ineg
      34: iload_3
      35: ineg
      36: iload         4
      38: iload         5
      40: invokespecial #31                 // Method setEndRule:(IIIII)V
      43: return

  private void setEndRule(int, int, int, int, int);
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #9                  // Method isFrozen:()Z
      10: ifeq          21
      13: new           #22                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #23                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #34                 // Field endMonth:I
      26: aload_0
      27: iload_2
      28: putfield      #35                 // Field endDay:I
      31: aload_0
      32: iload_3
      33: putfield      #36                 // Field endDayOfWeek:I
      36: aload_0
      37: iload         4
      39: putfield      #37                 // Field endTime:I
      42: aload_0
      43: iload         5
      45: putfield      #38                 // Field endTimeMode:I
      48: aload_0
      49: invokespecial #39                 // Method decodeEndRule:()V
      52: aload_0
      53: iconst_0
      54: putfield      #14                 // Field transitionRulesInitialized:Z
      57: return

  public void setDSTSavings(int);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          17
       7: new           #10                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #11                 // String Attempt to modify a frozen SimpleTimeZone instance.
      13: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_1
      18: ifne          29
      21: new           #40                 // class java/lang/IllegalArgumentException
      24: dup
      25: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
      28: athrow
      29: aload_0
      30: iload_1
      31: putfield      #3                  // Field dst:I
      34: aload_0
      35: iconst_0
      36: putfield      #14                 // Field transitionRulesInitialized:Z
      39: return

  public int getDSTSavings();
    Code:
       0: aload_0
       1: getfield      #3                  // Field dst:I
       4: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #42                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: getfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
       8: ifnull        19
      11: aload_0
      12: getfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
      15: aload_0
      16: invokevirtual #43                 // Method com/ibm/icu/util/STZInfo.applyTo:(Lcom/ibm/icu/util/SimpleTimeZone;)V
      19: return

  public java.lang.String toString();
    Code:
       0: new           #44                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #46                 // String SimpleTimeZone:
       9: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #48                 // Method getID:()Ljava/lang/String;
      16: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  private com.ibm.icu.util.STZInfo getSTZInfo();
    Code:
       0: aload_0
       1: getfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
       4: ifnonnull     18
       7: aload_0
       8: new           #50                 // class com/ibm/icu/util/STZInfo
      11: dup
      12: invokespecial #51                 // Method com/ibm/icu/util/STZInfo."<init>":()V
      15: putfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
      18: aload_0
      19: getfield      #4                  // Field xinfo:Lcom/ibm/icu/util/STZInfo;
      22: areturn

  public int getOffset(int, int, int, int, int, int);
    Code:
       0: iload_3
       1: iflt          10
       4: iload_3
       5: bipush        11
       7: if_icmple     18
      10: new           #40                 // class java/lang/IllegalArgumentException
      13: dup
      14: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
      17: athrow
      18: aload_0
      19: iload_1
      20: iload_2
      21: iload_3
      22: iload         4
      24: iload         5
      26: iload         6
      28: iload_2
      29: iload_3
      30: invokestatic  #53                 // Method com/ibm/icu/impl/Grego.monthLength:(II)I
      33: invokevirtual #54                 // Method getOffset:(IIIIIII)I
      36: ireturn

  public int getOffset(int, int, int, int, int, int, int);
    Code:
       0: iload_3
       1: iflt          10
       4: iload_3
       5: bipush        11
       7: if_icmple     18
      10: new           #40                 // class java/lang/IllegalArgumentException
      13: dup
      14: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
      17: athrow
      18: aload_0
      19: iload_1
      20: iload_2
      21: iload_3
      22: iload         4
      24: iload         5
      26: iload         6
      28: iload_2
      29: iload_3
      30: invokestatic  #53                 // Method com/ibm/icu/impl/Grego.monthLength:(II)I
      33: iload_2
      34: iload_3
      35: invokestatic  #55                 // Method com/ibm/icu/impl/Grego.previousMonthLength:(II)I
      38: invokespecial #56                 // Method getOffset:(IIIIIIII)I
      41: ireturn

  private int getOffset(int, int, int, int, int, int, int, int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpeq     9
       5: iload_1
       6: ifne          85
       9: iload_3
      10: iflt          85
      13: iload_3
      14: bipush        11
      16: if_icmpgt     85
      19: iload         4
      21: iconst_1
      22: if_icmplt     85
      25: iload         4
      27: iload         7
      29: if_icmpgt     85
      32: iload         5
      34: iconst_1
      35: if_icmplt     85
      38: iload         5
      40: bipush        7
      42: if_icmpgt     85
      45: iload         6
      47: iflt          85
      50: iload         6
      52: ldc           #58                 // int 86400000
      54: if_icmpge     85
      57: iload         7
      59: bipush        28
      61: if_icmplt     85
      64: iload         7
      66: bipush        31
      68: if_icmpgt     85
      71: iload         8
      73: bipush        28
      75: if_icmplt     85
      78: iload         8
      80: bipush        31
      82: if_icmple     93
      85: new           #40                 // class java/lang/IllegalArgumentException
      88: dup
      89: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
      92: athrow
      93: aload_0
      94: getfield      #15                 // Field raw:I
      97: istore        9
      99: aload_0
     100: getfield      #59                 // Field useDaylight:Z
     103: ifeq          119
     106: iload_2
     107: aload_0
     108: getfield      #18                 // Field startYear:I
     111: if_icmplt     119
     114: iload_1
     115: iconst_1
     116: if_icmpeq     122
     119: iload         9
     121: ireturn
     122: aload_0
     123: getfield      #24                 // Field startMonth:I
     126: aload_0
     127: getfield      #34                 // Field endMonth:I
     130: if_icmple     137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: istore        10
     140: aload_0
     141: iload_3
     142: iload         7
     144: iload         8
     146: iload         4
     148: iload         5
     150: iload         6
     152: aload_0
     153: getfield      #28                 // Field startTimeMode:I
     156: iconst_2
     157: if_icmpne     168
     160: aload_0
     161: getfield      #15                 // Field raw:I
     164: ineg
     165: goto          169
     168: iconst_0
     169: aload_0
     170: getfield      #60                 // Field startMode:I
     173: aload_0
     174: getfield      #24                 // Field startMonth:I
     177: aload_0
     178: getfield      #26                 // Field startDayOfWeek:I
     181: aload_0
     182: getfield      #25                 // Field startDay:I
     185: aload_0
     186: getfield      #27                 // Field startTime:I
     189: invokespecial #61                 // Method compareToRule:(IIIIIIIIIIII)I
     192: istore        11
     194: iconst_0
     195: istore        12
     197: iload         10
     199: iload         11
     201: iflt          208
     204: iconst_1
     205: goto          209
     208: iconst_0
     209: if_icmpeq     280
     212: aload_0
     213: iload_3
     214: iload         7
     216: iload         8
     218: iload         4
     220: iload         5
     222: iload         6
     224: aload_0
     225: getfield      #38                 // Field endTimeMode:I
     228: ifne          238
     231: aload_0
     232: getfield      #3                  // Field dst:I
     235: goto          255
     238: aload_0
     239: getfield      #38                 // Field endTimeMode:I
     242: iconst_2
     243: if_icmpne     254
     246: aload_0
     247: getfield      #15                 // Field raw:I
     250: ineg
     251: goto          255
     254: iconst_0
     255: aload_0
     256: getfield      #62                 // Field endMode:I
     259: aload_0
     260: getfield      #34                 // Field endMonth:I
     263: aload_0
     264: getfield      #36                 // Field endDayOfWeek:I
     267: aload_0
     268: getfield      #35                 // Field endDay:I
     271: aload_0
     272: getfield      #37                 // Field endTime:I
     275: invokespecial #61                 // Method compareToRule:(IIIIIIIIIIII)I
     278: istore        12
     280: iload         10
     282: ifne          295
     285: iload         11
     287: iflt          295
     290: iload         12
     292: iflt          310
     295: iload         10
     297: ifeq          319
     300: iload         11
     302: ifge          310
     305: iload         12
     307: ifge          319
     310: iload         9
     312: aload_0
     313: getfield      #3                  // Field dst:I
     316: iadd
     317: istore        9
     319: iload         9
     321: ireturn

  public void getOffsetFromLocal(long, int, int, int[]);
    Code:
       0: aload         5
       2: iconst_0
       3: aload_0
       4: invokevirtual #63                 // Method getRawOffset:()I
       7: iastore
       8: bipush        6
      10: newarray       int
      12: astore        6
      14: lload_1
      15: aload         6
      17: invokestatic  #64                 // Method com/ibm/icu/impl/Grego.timeToFields:(J[I)[I
      20: pop
      21: aload         5
      23: iconst_1
      24: aload_0
      25: iconst_1
      26: aload         6
      28: iconst_0
      29: iaload
      30: aload         6
      32: iconst_1
      33: iaload
      34: aload         6
      36: iconst_2
      37: iaload
      38: aload         6
      40: iconst_3
      41: iaload
      42: aload         6
      44: iconst_5
      45: iaload
      46: invokevirtual #65                 // Method getOffset:(IIIIII)I
      49: aload         5
      51: iconst_0
      52: iaload
      53: isub
      54: iastore
      55: iconst_0
      56: istore        7
      58: aload         5
      60: iconst_1
      61: iaload
      62: ifle          102
      65: iload_3
      66: iconst_3
      67: iand
      68: iconst_1
      69: if_icmpeq     88
      72: iload_3
      73: iconst_3
      74: iand
      75: iconst_3
      76: if_icmpeq     138
      79: iload_3
      80: bipush        12
      82: iand
      83: bipush        12
      85: if_icmpeq     138
      88: lload_1
      89: aload_0
      90: invokevirtual #67                 // Method getDSTSavings:()I
      93: i2l
      94: lsub
      95: lstore_1
      96: iconst_1
      97: istore        7
      99: goto          138
     102: iload         4
     104: iconst_3
     105: iand
     106: iconst_3
     107: if_icmpeq     127
     110: iload         4
     112: iconst_3
     113: iand
     114: iconst_1
     115: if_icmpeq     138
     118: iload         4
     120: bipush        12
     122: iand
     123: iconst_4
     124: if_icmpne     138
     127: lload_1
     128: aload_0
     129: invokevirtual #67                 // Method getDSTSavings:()I
     132: i2l
     133: lsub
     134: lstore_1
     135: iconst_1
     136: istore        7
     138: iload         7
     140: ifeq          184
     143: lload_1
     144: aload         6
     146: invokestatic  #64                 // Method com/ibm/icu/impl/Grego.timeToFields:(J[I)[I
     149: pop
     150: aload         5
     152: iconst_1
     153: aload_0
     154: iconst_1
     155: aload         6
     157: iconst_0
     158: iaload
     159: aload         6
     161: iconst_1
     162: iaload
     163: aload         6
     165: iconst_2
     166: iaload
     167: aload         6
     169: iconst_3
     170: iaload
     171: aload         6
     173: iconst_5
     174: iaload
     175: invokevirtual #65                 // Method getOffset:(IIIIII)I
     178: aload         5
     180: iconst_0
     181: iaload
     182: isub
     183: iastore
     184: return

  private int compareToRule(int, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: iload         6
       2: iload         7
       4: iadd
       5: istore        6
       7: iload         6
       9: ldc           #58                 // int 86400000
      11: if_icmplt     48
      14: iload         6
      16: ldc           #58                 // int 86400000
      18: isub
      19: istore        6
      21: iinc          4, 1
      24: iconst_1
      25: iload         5
      27: bipush        7
      29: irem
      30: iadd
      31: istore        5
      33: iload         4
      35: iload_2
      36: if_icmple     7
      39: iconst_1
      40: istore        4
      42: iinc          1, 1
      45: goto          7
      48: iload         6
      50: ifge          89
      53: iinc          4, -1
      56: iconst_1
      57: iload         5
      59: iconst_5
      60: iadd
      61: bipush        7
      63: irem
      64: iadd
      65: istore        5
      67: iload         4
      69: iconst_1
      70: if_icmpge     79
      73: iload_3
      74: istore        4
      76: iinc          1, -1
      79: iload         6
      81: ldc           #58                 // int 86400000
      83: iadd
      84: istore        6
      86: goto          48
      89: iload_1
      90: iload         9
      92: if_icmpge     97
      95: iconst_m1
      96: ireturn
      97: iload_1
      98: iload         9
     100: if_icmple     105
     103: iconst_1
     104: ireturn
     105: iconst_0
     106: istore        13
     108: iload         11
     110: iload_2
     111: if_icmple     117
     114: iload_2
     115: istore        11
     117: iload         8
     119: tableswitch   { // 1 to 4
                     1: 148
                     2: 155
                     3: 222
                     4: 247
               default: 269
          }
     148: iload         11
     150: istore        13
     152: goto          269
     155: iload         11
     157: ifle          191
     160: iconst_1
     161: iload         11
     163: iconst_1
     164: isub
     165: bipush        7
     167: imul
     168: iadd
     169: bipush        7
     171: iload         10
     173: iadd
     174: iload         5
     176: iload         4
     178: isub
     179: iconst_1
     180: iadd
     181: isub
     182: bipush        7
     184: irem
     185: iadd
     186: istore        13
     188: goto          269
     191: iload_2
     192: iload         11
     194: iconst_1
     195: iadd
     196: bipush        7
     198: imul
     199: iadd
     200: bipush        7
     202: iload         5
     204: iload_2
     205: iadd
     206: iload         4
     208: isub
     209: iadd
     210: iload         10
     212: isub
     213: bipush        7
     215: irem
     216: isub
     217: istore        13
     219: goto          269
     222: iload         11
     224: bipush        49
     226: iload         10
     228: iadd
     229: iload         11
     231: isub
     232: iload         5
     234: isub
     235: iload         4
     237: iadd
     238: bipush        7
     240: irem
     241: iadd
     242: istore        13
     244: goto          269
     247: iload         11
     249: bipush        49
     251: iload         10
     253: isub
     254: iload         11
     256: iadd
     257: iload         5
     259: iadd
     260: iload         4
     262: isub
     263: bipush        7
     265: irem
     266: isub
     267: istore        13
     269: iload         4
     271: iload         13
     273: if_icmpge     278
     276: iconst_m1
     277: ireturn
     278: iload         4
     280: iload         13
     282: if_icmple     287
     285: iconst_1
     286: ireturn
     287: iload         6
     289: iload         12
     291: if_icmpge     296
     294: iconst_m1
     295: ireturn
     296: iload         6
     298: iload         12
     300: if_icmple     305
     303: iconst_1
     304: ireturn
     305: iconst_0
     306: ireturn

  public boolean useDaylightTime();
    Code:
       0: aload_0
       1: getfield      #59                 // Field useDaylight:Z
       4: ireturn

  public boolean observesDaylightTime();
    Code:
       0: aload_0
       1: getfield      #59                 // Field useDaylight:Z
       4: ireturn

  public boolean inDaylightTime(java.util.Date);
    Code:
       0: new           #57                 // class com/ibm/icu/util/GregorianCalendar
       3: dup
       4: aload_0
       5: invokespecial #68                 // Method com/ibm/icu/util/GregorianCalendar."<init>":(Lcom/ibm/icu/util/TimeZone;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokevirtual #69                 // Method com/ibm/icu/util/GregorianCalendar.setTime:(Ljava/util/Date;)V
      14: aload_2
      15: invokevirtual #70                 // Method com/ibm/icu/util/GregorianCalendar.inDaylightTime:()Z
      18: ireturn

  private void construct(int, int, int, int, int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field raw:I
       5: aload_0
       6: iload_2
       7: putfield      #24                 // Field startMonth:I
      10: aload_0
      11: iload_3
      12: putfield      #25                 // Field startDay:I
      15: aload_0
      16: iload         4
      18: putfield      #26                 // Field startDayOfWeek:I
      21: aload_0
      22: iload         5
      24: putfield      #27                 // Field startTime:I
      27: aload_0
      28: iload         6
      30: putfield      #28                 // Field startTimeMode:I
      33: aload_0
      34: iload         7
      36: putfield      #34                 // Field endMonth:I
      39: aload_0
      40: iload         8
      42: putfield      #35                 // Field endDay:I
      45: aload_0
      46: iload         9
      48: putfield      #36                 // Field endDayOfWeek:I
      51: aload_0
      52: iload         10
      54: putfield      #37                 // Field endTime:I
      57: aload_0
      58: iload         11
      60: putfield      #38                 // Field endTimeMode:I
      63: aload_0
      64: iload         12
      66: putfield      #3                  // Field dst:I
      69: aload_0
      70: iconst_0
      71: putfield      #18                 // Field startYear:I
      74: aload_0
      75: iconst_1
      76: putfield      #60                 // Field startMode:I
      79: aload_0
      80: iconst_1
      81: putfield      #62                 // Field endMode:I
      84: aload_0
      85: invokespecial #71                 // Method decodeRules:()V
      88: iload         12
      90: ifne          101
      93: new           #40                 // class java/lang/IllegalArgumentException
      96: dup
      97: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     100: athrow
     101: return

  private void decodeRules();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method decodeStartRule:()V
       4: aload_0
       5: invokespecial #39                 // Method decodeEndRule:()V
       8: return

  private void decodeStartRule();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field startDay:I
       5: ifeq          19
       8: aload_0
       9: getfield      #35                 // Field endDay:I
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: putfield      #59                 // Field useDaylight:Z
      23: aload_0
      24: getfield      #59                 // Field useDaylight:Z
      27: ifeq          43
      30: aload_0
      31: getfield      #3                  // Field dst:I
      34: ifne          43
      37: aload_0
      38: ldc           #58                 // int 86400000
      40: putfield      #3                  // Field dst:I
      43: aload_0
      44: getfield      #25                 // Field startDay:I
      47: ifeq          262
      50: aload_0
      51: getfield      #24                 // Field startMonth:I
      54: iflt          66
      57: aload_0
      58: getfield      #24                 // Field startMonth:I
      61: bipush        11
      63: if_icmple     74
      66: new           #40                 // class java/lang/IllegalArgumentException
      69: dup
      70: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
      73: athrow
      74: aload_0
      75: getfield      #27                 // Field startTime:I
      78: iflt          105
      81: aload_0
      82: getfield      #27                 // Field startTime:I
      85: ldc           #58                 // int 86400000
      87: if_icmpgt     105
      90: aload_0
      91: getfield      #28                 // Field startTimeMode:I
      94: iflt          105
      97: aload_0
      98: getfield      #28                 // Field startTimeMode:I
     101: iconst_2
     102: if_icmple     113
     105: new           #40                 // class java/lang/IllegalArgumentException
     108: dup
     109: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     112: athrow
     113: aload_0
     114: getfield      #26                 // Field startDayOfWeek:I
     117: ifne          128
     120: aload_0
     121: iconst_1
     122: putfield      #60                 // Field startMode:I
     125: goto          198
     128: aload_0
     129: getfield      #26                 // Field startDayOfWeek:I
     132: ifle          143
     135: aload_0
     136: iconst_2
     137: putfield      #60                 // Field startMode:I
     140: goto          181
     143: aload_0
     144: aload_0
     145: getfield      #26                 // Field startDayOfWeek:I
     148: ineg
     149: putfield      #26                 // Field startDayOfWeek:I
     152: aload_0
     153: getfield      #25                 // Field startDay:I
     156: ifle          167
     159: aload_0
     160: iconst_3
     161: putfield      #60                 // Field startMode:I
     164: goto          181
     167: aload_0
     168: aload_0
     169: getfield      #25                 // Field startDay:I
     172: ineg
     173: putfield      #25                 // Field startDay:I
     176: aload_0
     177: iconst_4
     178: putfield      #60                 // Field startMode:I
     181: aload_0
     182: getfield      #26                 // Field startDayOfWeek:I
     185: bipush        7
     187: if_icmple     198
     190: new           #40                 // class java/lang/IllegalArgumentException
     193: dup
     194: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     197: athrow
     198: aload_0
     199: getfield      #60                 // Field startMode:I
     202: iconst_2
     203: if_icmpne     231
     206: aload_0
     207: getfield      #25                 // Field startDay:I
     210: bipush        -5
     212: if_icmplt     223
     215: aload_0
     216: getfield      #25                 // Field startDay:I
     219: iconst_5
     220: if_icmple     262
     223: new           #40                 // class java/lang/IllegalArgumentException
     226: dup
     227: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     230: athrow
     231: aload_0
     232: getfield      #25                 // Field startDay:I
     235: iconst_1
     236: if_icmplt     254
     239: aload_0
     240: getfield      #25                 // Field startDay:I
     243: getstatic     #72                 // Field staticMonthLength:[B
     246: aload_0
     247: getfield      #24                 // Field startMonth:I
     250: baload
     251: if_icmple     262
     254: new           #40                 // class java/lang/IllegalArgumentException
     257: dup
     258: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     261: athrow
     262: return

  private void decodeEndRule();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #25                 // Field startDay:I
       5: ifeq          19
       8: aload_0
       9: getfield      #35                 // Field endDay:I
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: putfield      #59                 // Field useDaylight:Z
      23: aload_0
      24: getfield      #59                 // Field useDaylight:Z
      27: ifeq          43
      30: aload_0
      31: getfield      #3                  // Field dst:I
      34: ifne          43
      37: aload_0
      38: ldc           #58                 // int 86400000
      40: putfield      #3                  // Field dst:I
      43: aload_0
      44: getfield      #35                 // Field endDay:I
      47: ifeq          262
      50: aload_0
      51: getfield      #34                 // Field endMonth:I
      54: iflt          66
      57: aload_0
      58: getfield      #34                 // Field endMonth:I
      61: bipush        11
      63: if_icmple     74
      66: new           #40                 // class java/lang/IllegalArgumentException
      69: dup
      70: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
      73: athrow
      74: aload_0
      75: getfield      #37                 // Field endTime:I
      78: iflt          105
      81: aload_0
      82: getfield      #37                 // Field endTime:I
      85: ldc           #58                 // int 86400000
      87: if_icmpgt     105
      90: aload_0
      91: getfield      #38                 // Field endTimeMode:I
      94: iflt          105
      97: aload_0
      98: getfield      #38                 // Field endTimeMode:I
     101: iconst_2
     102: if_icmple     113
     105: new           #40                 // class java/lang/IllegalArgumentException
     108: dup
     109: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     112: athrow
     113: aload_0
     114: getfield      #36                 // Field endDayOfWeek:I
     117: ifne          128
     120: aload_0
     121: iconst_1
     122: putfield      #62                 // Field endMode:I
     125: goto          198
     128: aload_0
     129: getfield      #36                 // Field endDayOfWeek:I
     132: ifle          143
     135: aload_0
     136: iconst_2
     137: putfield      #62                 // Field endMode:I
     140: goto          181
     143: aload_0
     144: aload_0
     145: getfield      #36                 // Field endDayOfWeek:I
     148: ineg
     149: putfield      #36                 // Field endDayOfWeek:I
     152: aload_0
     153: getfield      #35                 // Field endDay:I
     156: ifle          167
     159: aload_0
     160: iconst_3
     161: putfield      #62                 // Field endMode:I
     164: goto          181
     167: aload_0
     168: aload_0
     169: getfield      #35                 // Field endDay:I
     172: ineg
     173: putfield      #35                 // Field endDay:I
     176: aload_0
     177: iconst_4
     178: putfield      #62                 // Field endMode:I
     181: aload_0
     182: getfield      #36                 // Field endDayOfWeek:I
     185: bipush        7
     187: if_icmple     198
     190: new           #40                 // class java/lang/IllegalArgumentException
     193: dup
     194: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     197: athrow
     198: aload_0
     199: getfield      #62                 // Field endMode:I
     202: iconst_2
     203: if_icmpne     231
     206: aload_0
     207: getfield      #35                 // Field endDay:I
     210: bipush        -5
     212: if_icmplt     223
     215: aload_0
     216: getfield      #35                 // Field endDay:I
     219: iconst_5
     220: if_icmple     262
     223: new           #40                 // class java/lang/IllegalArgumentException
     226: dup
     227: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     230: athrow
     231: aload_0
     232: getfield      #35                 // Field endDay:I
     235: iconst_1
     236: if_icmplt     254
     239: aload_0
     240: getfield      #35                 // Field endDay:I
     243: getstatic     #72                 // Field staticMonthLength:[B
     246: aload_0
     247: getfield      #34                 // Field endMonth:I
     250: baload
     251: if_icmple     262
     254: new           #40                 // class java/lang/IllegalArgumentException
     257: dup
     258: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":()V
     261: athrow
     262: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #6                  // class com/ibm/icu/util/SimpleTimeZone
      28: astore_2
      29: aload_0
      30: getfield      #15                 // Field raw:I
      33: aload_2
      34: getfield      #15                 // Field raw:I
      37: if_icmpne     231
      40: aload_0
      41: getfield      #59                 // Field useDaylight:Z
      44: aload_2
      45: getfield      #59                 // Field useDaylight:Z
      48: if_icmpne     231
      51: aload_0
      52: aload_0
      53: invokevirtual #48                 // Method getID:()Ljava/lang/String;
      56: aload_2
      57: invokevirtual #48                 // Method getID:()Ljava/lang/String;
      60: invokespecial #74                 // Method idEquals:(Ljava/lang/String;Ljava/lang/String;)Z
      63: ifeq          231
      66: aload_0
      67: getfield      #59                 // Field useDaylight:Z
      70: ifeq          227
      73: aload_0
      74: getfield      #3                  // Field dst:I
      77: aload_2
      78: getfield      #3                  // Field dst:I
      81: if_icmpne     231
      84: aload_0
      85: getfield      #60                 // Field startMode:I
      88: aload_2
      89: getfield      #60                 // Field startMode:I
      92: if_icmpne     231
      95: aload_0
      96: getfield      #24                 // Field startMonth:I
      99: aload_2
     100: getfield      #24                 // Field startMonth:I
     103: if_icmpne     231
     106: aload_0
     107: getfield      #25                 // Field startDay:I
     110: aload_2
     111: getfield      #25                 // Field startDay:I
     114: if_icmpne     231
     117: aload_0
     118: getfield      #26                 // Field startDayOfWeek:I
     121: aload_2
     122: getfield      #26                 // Field startDayOfWeek:I
     125: if_icmpne     231
     128: aload_0
     129: getfield      #27                 // Field startTime:I
     132: aload_2
     133: getfield      #27                 // Field startTime:I
     136: if_icmpne     231
     139: aload_0
     140: getfield      #28                 // Field startTimeMode:I
     143: aload_2
     144: getfield      #28                 // Field startTimeMode:I
     147: if_icmpne     231
     150: aload_0
     151: getfield      #62                 // Field endMode:I
     154: aload_2
     155: getfield      #62                 // Field endMode:I
     158: if_icmpne     231
     161: aload_0
     162: getfield      #34                 // Field endMonth:I
     165: aload_2
     166: getfield      #34                 // Field endMonth:I
     169: if_icmpne     231
     172: aload_0
     173: getfield      #35                 // Field endDay:I
     176: aload_2
     177: getfield      #35                 // Field endDay:I
     180: if_icmpne     231
     183: aload_0
     184: getfield      #36                 // Field endDayOfWeek:I
     187: aload_2
     188: getfield      #36                 // Field endDayOfWeek:I
     191: if_icmpne     231
     194: aload_0
     195: getfield      #37                 // Field endTime:I
     198: aload_2
     199: getfield      #37                 // Field endTime:I
     202: if_icmpne     231
     205: aload_0
     206: getfield      #38                 // Field endTimeMode:I
     209: aload_2
     210: getfield      #38                 // Field endTimeMode:I
     213: if_icmpne     231
     216: aload_0
     217: getfield      #18                 // Field startYear:I
     220: aload_2
     221: getfield      #18                 // Field startYear:I
     224: if_icmpne     231
     227: iconst_1
     228: goto          232
     231: iconst_0
     232: ireturn

  private boolean idEquals(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_2
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: ifnull        24
      14: aload_2
      15: ifnull        24
      18: aload_1
      19: aload_2
      20: invokevirtual #75                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #76                 // Method com/ibm/icu/util/BasicTimeZone.hashCode:()I
       4: aload_0
       5: getfield      #15                 // Field raw:I
       8: iadd
       9: aload_0
      10: getfield      #15                 // Field raw:I
      13: bipush        8
      15: iushr
      16: aload_0
      17: getfield      #59                 // Field useDaylight:Z
      20: ifeq          27
      23: iconst_0
      24: goto          28
      27: iconst_1
      28: iadd
      29: ixor
      30: istore_1
      31: aload_0
      32: getfield      #59                 // Field useDaylight:Z
      35: ifne          222
      38: iload_1
      39: aload_0
      40: getfield      #3                  // Field dst:I
      43: aload_0
      44: getfield      #3                  // Field dst:I
      47: bipush        10
      49: iushr
      50: aload_0
      51: getfield      #60                 // Field startMode:I
      54: iadd
      55: ixor
      56: aload_0
      57: getfield      #60                 // Field startMode:I
      60: bipush        11
      62: iushr
      63: aload_0
      64: getfield      #24                 // Field startMonth:I
      67: iadd
      68: ixor
      69: aload_0
      70: getfield      #24                 // Field startMonth:I
      73: bipush        12
      75: iushr
      76: aload_0
      77: getfield      #25                 // Field startDay:I
      80: iadd
      81: ixor
      82: aload_0
      83: getfield      #25                 // Field startDay:I
      86: bipush        13
      88: iushr
      89: aload_0
      90: getfield      #26                 // Field startDayOfWeek:I
      93: iadd
      94: ixor
      95: aload_0
      96: getfield      #26                 // Field startDayOfWeek:I
      99: bipush        14
     101: iushr
     102: aload_0
     103: getfield      #27                 // Field startTime:I
     106: iadd
     107: ixor
     108: aload_0
     109: getfield      #27                 // Field startTime:I
     112: bipush        15
     114: iushr
     115: aload_0
     116: getfield      #28                 // Field startTimeMode:I
     119: iadd
     120: ixor
     121: aload_0
     122: getfield      #28                 // Field startTimeMode:I
     125: bipush        16
     127: iushr
     128: aload_0
     129: getfield      #62                 // Field endMode:I
     132: iadd
     133: ixor
     134: aload_0
     135: getfield      #62                 // Field endMode:I
     138: bipush        17
     140: iushr
     141: aload_0
     142: getfield      #34                 // Field endMonth:I
     145: iadd
     146: ixor
     147: aload_0
     148: getfield      #34                 // Field endMonth:I
     151: bipush        18
     153: iushr
     154: aload_0
     155: getfield      #35                 // Field endDay:I
     158: iadd
     159: ixor
     160: aload_0
     161: getfield      #35                 // Field endDay:I
     164: bipush        19
     166: iushr
     167: aload_0
     168: getfield      #36                 // Field endDayOfWeek:I
     171: iadd
     172: ixor
     173: aload_0
     174: getfield      #36                 // Field endDayOfWeek:I
     177: bipush        20
     179: iushr
     180: aload_0
     181: getfield      #37                 // Field endTime:I
     184: iadd
     185: ixor
     186: aload_0
     187: getfield      #37                 // Field endTime:I
     190: bipush        21
     192: iushr
     193: aload_0
     194: getfield      #38                 // Field endTimeMode:I
     197: iadd
     198: ixor
     199: aload_0
     200: getfield      #38                 // Field endTimeMode:I
     203: bipush        22
     205: iushr
     206: aload_0
     207: getfield      #18                 // Field startYear:I
     210: iadd
     211: ixor
     212: aload_0
     213: getfield      #18                 // Field startYear:I
     216: bipush        23
     218: iushr
     219: ixor
     220: iadd
     221: istore_1
     222: iload_1
     223: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method isFrozen:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #77                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
      13: areturn

  public boolean hasSameRules(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #6                  // class com/ibm/icu/util/SimpleTimeZone
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #6                  // class com/ibm/icu/util/SimpleTimeZone
      20: astore_2
      21: aload_2
      22: ifnull        212
      25: aload_0
      26: getfield      #15                 // Field raw:I
      29: aload_2
      30: getfield      #15                 // Field raw:I
      33: if_icmpne     212
      36: aload_0
      37: getfield      #59                 // Field useDaylight:Z
      40: aload_2
      41: getfield      #59                 // Field useDaylight:Z
      44: if_icmpne     212
      47: aload_0
      48: getfield      #59                 // Field useDaylight:Z
      51: ifeq          208
      54: aload_0
      55: getfield      #3                  // Field dst:I
      58: aload_2
      59: getfield      #3                  // Field dst:I
      62: if_icmpne     212
      65: aload_0
      66: getfield      #60                 // Field startMode:I
      69: aload_2
      70: getfield      #60                 // Field startMode:I
      73: if_icmpne     212
      76: aload_0
      77: getfield      #24                 // Field startMonth:I
      80: aload_2
      81: getfield      #24                 // Field startMonth:I
      84: if_icmpne     212
      87: aload_0
      88: getfield      #25                 // Field startDay:I
      91: aload_2
      92: getfield      #25                 // Field startDay:I
      95: if_icmpne     212
      98: aload_0
      99: getfield      #26                 // Field startDayOfWeek:I
     102: aload_2
     103: getfield      #26                 // Field startDayOfWeek:I
     106: if_icmpne     212
     109: aload_0
     110: getfield      #27                 // Field startTime:I
     113: aload_2
     114: getfield      #27                 // Field startTime:I
     117: if_icmpne     212
     120: aload_0
     121: getfield      #28                 // Field startTimeMode:I
     124: aload_2
     125: getfield      #28                 // Field startTimeMode:I
     128: if_icmpne     212
     131: aload_0
     132: getfield      #62                 // Field endMode:I
     135: aload_2
     136: getfield      #62                 // Field endMode:I
     139: if_icmpne     212
     142: aload_0
     143: getfield      #34                 // Field endMonth:I
     146: aload_2
     147: getfield      #34                 // Field endMonth:I
     150: if_icmpne     212
     153: aload_0
     154: getfield      #35                 // Field endDay:I
     157: aload_2
     158: getfield      #35                 // Field endDay:I
     161: if_icmpne     212
     164: aload_0
     165: getfield      #36                 // Field endDayOfWeek:I
     168: aload_2
     169: getfield      #36                 // Field endDayOfWeek:I
     172: if_icmpne     212
     175: aload_0
     176: getfield      #37                 // Field endTime:I
     179: aload_2
     180: getfield      #37                 // Field endTime:I
     183: if_icmpne     212
     186: aload_0
     187: getfield      #38                 // Field endTimeMode:I
     190: aload_2
     191: getfield      #38                 // Field endTimeMode:I
     194: if_icmpne     212
     197: aload_0
     198: getfield      #18                 // Field startYear:I
     201: aload_2
     202: getfield      #18                 // Field startYear:I
     205: if_icmpne     212
     208: iconst_1
     209: goto          213
     212: iconst_0
     213: ireturn

  public com.ibm.icu.util.TimeZoneTransition getNextTransition(long, boolean);
    Code:
       0: aload_0
       1: getfield      #59                 // Field useDaylight:Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokespecial #78                 // Method initTransitionRules:()V
      13: aload_0
      14: getfield      #79                 // Field firstTransition:Lcom/ibm/icu/util/TimeZoneTransition;
      17: invokevirtual #80                 // Method com/ibm/icu/util/TimeZoneTransition.getTime:()J
      20: lstore        4
      22: lload_1
      23: lload         4
      25: lcmp
      26: iflt          40
      29: iload_3
      30: ifeq          45
      33: lload_1
      34: lload         4
      36: lcmp
      37: ifne          45
      40: aload_0
      41: getfield      #79                 // Field firstTransition:Lcom/ibm/icu/util/TimeZoneTransition;
      44: areturn
      45: aload_0
      46: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      49: lload_1
      50: aload_0
      51: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      54: invokevirtual #83                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getRawOffset:()I
      57: aload_0
      58: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      61: invokevirtual #84                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getDSTSavings:()I
      64: iload_3
      65: invokevirtual #85                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getNextStart:(JIIZ)Ljava/util/Date;
      68: astore        6
      70: aload_0
      71: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      74: lload_1
      75: aload_0
      76: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      79: invokevirtual #83                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getRawOffset:()I
      82: aload_0
      83: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      86: invokevirtual #84                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getDSTSavings:()I
      89: iload_3
      90: invokevirtual #85                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getNextStart:(JIIZ)Ljava/util/Date;
      93: astore        7
      95: aload         6
      97: ifnull        136
     100: aload         7
     102: ifnull        115
     105: aload         6
     107: aload         7
     109: invokevirtual #86                 // Method java/util/Date.before:(Ljava/util/Date;)Z
     112: ifeq          136
     115: new           #87                 // class com/ibm/icu/util/TimeZoneTransition
     118: dup
     119: aload         6
     121: invokevirtual #88                 // Method java/util/Date.getTime:()J
     124: aload_0
     125: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     128: aload_0
     129: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     132: invokespecial #89                 // Method com/ibm/icu/util/TimeZoneTransition."<init>":(JLcom/ibm/icu/util/TimeZoneRule;Lcom/ibm/icu/util/TimeZoneRule;)V
     135: areturn
     136: aload         7
     138: ifnull        177
     141: aload         6
     143: ifnull        156
     146: aload         7
     148: aload         6
     150: invokevirtual #86                 // Method java/util/Date.before:(Ljava/util/Date;)Z
     153: ifeq          177
     156: new           #87                 // class com/ibm/icu/util/TimeZoneTransition
     159: dup
     160: aload         7
     162: invokevirtual #88                 // Method java/util/Date.getTime:()J
     165: aload_0
     166: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     169: aload_0
     170: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     173: invokespecial #89                 // Method com/ibm/icu/util/TimeZoneTransition."<init>":(JLcom/ibm/icu/util/TimeZoneRule;Lcom/ibm/icu/util/TimeZoneRule;)V
     176: areturn
     177: aconst_null
     178: areturn

  public com.ibm.icu.util.TimeZoneTransition getPreviousTransition(long, boolean);
    Code:
       0: aload_0
       1: getfield      #59                 // Field useDaylight:Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: invokespecial #78                 // Method initTransitionRules:()V
      13: aload_0
      14: getfield      #79                 // Field firstTransition:Lcom/ibm/icu/util/TimeZoneTransition;
      17: invokevirtual #80                 // Method com/ibm/icu/util/TimeZoneTransition.getTime:()J
      20: lstore        4
      22: lload_1
      23: lload         4
      25: lcmp
      26: iflt          40
      29: iload_3
      30: ifne          42
      33: lload_1
      34: lload         4
      36: lcmp
      37: ifne          42
      40: aconst_null
      41: areturn
      42: aload_0
      43: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      46: lload_1
      47: aload_0
      48: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      51: invokevirtual #83                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getRawOffset:()I
      54: aload_0
      55: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      58: invokevirtual #84                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getDSTSavings:()I
      61: iload_3
      62: invokevirtual #90                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getPreviousStart:(JIIZ)Ljava/util/Date;
      65: astore        6
      67: aload_0
      68: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      71: lload_1
      72: aload_0
      73: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      76: invokevirtual #83                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getRawOffset:()I
      79: aload_0
      80: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      83: invokevirtual #84                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getDSTSavings:()I
      86: iload_3
      87: invokevirtual #90                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getPreviousStart:(JIIZ)Ljava/util/Date;
      90: astore        7
      92: aload         6
      94: ifnull        133
      97: aload         7
      99: ifnull        112
     102: aload         6
     104: aload         7
     106: invokevirtual #91                 // Method java/util/Date.after:(Ljava/util/Date;)Z
     109: ifeq          133
     112: new           #87                 // class com/ibm/icu/util/TimeZoneTransition
     115: dup
     116: aload         6
     118: invokevirtual #88                 // Method java/util/Date.getTime:()J
     121: aload_0
     122: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     125: aload_0
     126: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     129: invokespecial #89                 // Method com/ibm/icu/util/TimeZoneTransition."<init>":(JLcom/ibm/icu/util/TimeZoneRule;Lcom/ibm/icu/util/TimeZoneRule;)V
     132: areturn
     133: aload         7
     135: ifnull        174
     138: aload         6
     140: ifnull        153
     143: aload         7
     145: aload         6
     147: invokevirtual #91                 // Method java/util/Date.after:(Ljava/util/Date;)Z
     150: ifeq          174
     153: new           #87                 // class com/ibm/icu/util/TimeZoneTransition
     156: dup
     157: aload         7
     159: invokevirtual #88                 // Method java/util/Date.getTime:()J
     162: aload_0
     163: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     166: aload_0
     167: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     170: invokespecial #89                 // Method com/ibm/icu/util/TimeZoneTransition."<init>":(JLcom/ibm/icu/util/TimeZoneRule;Lcom/ibm/icu/util/TimeZoneRule;)V
     173: areturn
     174: aconst_null
     175: areturn

  public com.ibm.icu.util.TimeZoneRule[] getTimeZoneRules();
    Code:
       0: aload_0
       1: invokespecial #78                 // Method initTransitionRules:()V
       4: aload_0
       5: getfield      #59                 // Field useDaylight:Z
       8: ifeq          15
      11: iconst_3
      12: goto          16
      15: iconst_1
      16: istore_1
      17: iload_1
      18: anewarray     #92                 // class com/ibm/icu/util/TimeZoneRule
      21: astore_2
      22: aload_2
      23: iconst_0
      24: aload_0
      25: getfield      #93                 // Field initialRule:Lcom/ibm/icu/util/InitialTimeZoneRule;
      28: aastore
      29: aload_0
      30: getfield      #59                 // Field useDaylight:Z
      33: ifeq          50
      36: aload_2
      37: iconst_1
      38: aload_0
      39: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      42: aastore
      43: aload_2
      44: iconst_2
      45: aload_0
      46: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
      49: aastore
      50: aload_2
      51: areturn

  private synchronized void initTransitionRules();
    Code:
       0: aload_0
       1: getfield      #14                 // Field transitionRulesInitialized:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #59                 // Field useDaylight:Z
      12: ifeq          618
      15: aconst_null
      16: astore_1
      17: aload_0
      18: getfield      #28                 // Field startTimeMode:I
      21: iconst_1
      22: if_icmpne     29
      25: iconst_1
      26: goto          42
      29: aload_0
      30: getfield      #28                 // Field startTimeMode:I
      33: iconst_2
      34: if_icmpne     41
      37: iconst_2
      38: goto          42
      41: iconst_0
      42: istore_2
      43: aload_0
      44: getfield      #60                 // Field startMode:I
      47: tableswitch   { // 1 to 4
                     1: 76
                     2: 100
                     3: 128
                     4: 157
               default: 183
          }
      76: new           #94                 // class com/ibm/icu/util/DateTimeRule
      79: dup
      80: aload_0
      81: getfield      #24                 // Field startMonth:I
      84: aload_0
      85: getfield      #25                 // Field startDay:I
      88: aload_0
      89: getfield      #27                 // Field startTime:I
      92: iload_2
      93: invokespecial #95                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIII)V
      96: astore_1
      97: goto          183
     100: new           #94                 // class com/ibm/icu/util/DateTimeRule
     103: dup
     104: aload_0
     105: getfield      #24                 // Field startMonth:I
     108: aload_0
     109: getfield      #25                 // Field startDay:I
     112: aload_0
     113: getfield      #26                 // Field startDayOfWeek:I
     116: aload_0
     117: getfield      #27                 // Field startTime:I
     120: iload_2
     121: invokespecial #96                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIIII)V
     124: astore_1
     125: goto          183
     128: new           #94                 // class com/ibm/icu/util/DateTimeRule
     131: dup
     132: aload_0
     133: getfield      #24                 // Field startMonth:I
     136: aload_0
     137: getfield      #25                 // Field startDay:I
     140: aload_0
     141: getfield      #26                 // Field startDayOfWeek:I
     144: iconst_1
     145: aload_0
     146: getfield      #27                 // Field startTime:I
     149: iload_2
     150: invokespecial #97                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIIZII)V
     153: astore_1
     154: goto          183
     157: new           #94                 // class com/ibm/icu/util/DateTimeRule
     160: dup
     161: aload_0
     162: getfield      #24                 // Field startMonth:I
     165: aload_0
     166: getfield      #25                 // Field startDay:I
     169: aload_0
     170: getfield      #26                 // Field startDayOfWeek:I
     173: iconst_0
     174: aload_0
     175: getfield      #27                 // Field startTime:I
     178: iload_2
     179: invokespecial #97                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIIZII)V
     182: astore_1
     183: aload_0
     184: new           #98                 // class com/ibm/icu/util/AnnualTimeZoneRule
     187: dup
     188: new           #44                 // class java/lang/StringBuilder
     191: dup
     192: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     195: aload_0
     196: invokevirtual #48                 // Method getID:()Ljava/lang/String;
     199: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: ldc           #99                 // String (DST)
     204: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: aload_0
     211: invokevirtual #63                 // Method getRawOffset:()I
     214: aload_0
     215: invokevirtual #67                 // Method getDSTSavings:()I
     218: aload_1
     219: aload_0
     220: getfield      #18                 // Field startYear:I
     223: ldc           #100                // int 2147483647
     225: invokespecial #101                // Method com/ibm/icu/util/AnnualTimeZoneRule."<init>":(Ljava/lang/String;IILcom/ibm/icu/util/DateTimeRule;II)V
     228: putfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     231: aload_0
     232: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     235: aload_0
     236: invokevirtual #63                 // Method getRawOffset:()I
     239: iconst_0
     240: invokevirtual #102                // Method com/ibm/icu/util/AnnualTimeZoneRule.getFirstStart:(II)Ljava/util/Date;
     243: invokevirtual #88                 // Method java/util/Date.getTime:()J
     246: lstore        5
     248: aload_0
     249: getfield      #38                 // Field endTimeMode:I
     252: iconst_1
     253: if_icmpne     260
     256: iconst_1
     257: goto          273
     260: aload_0
     261: getfield      #38                 // Field endTimeMode:I
     264: iconst_2
     265: if_icmpne     272
     268: iconst_2
     269: goto          273
     272: iconst_0
     273: istore_2
     274: aload_0
     275: getfield      #62                 // Field endMode:I
     278: tableswitch   { // 1 to 4
                     1: 308
                     2: 332
                     3: 360
                     4: 389
               default: 415
          }
     308: new           #94                 // class com/ibm/icu/util/DateTimeRule
     311: dup
     312: aload_0
     313: getfield      #34                 // Field endMonth:I
     316: aload_0
     317: getfield      #35                 // Field endDay:I
     320: aload_0
     321: getfield      #37                 // Field endTime:I
     324: iload_2
     325: invokespecial #95                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIII)V
     328: astore_1
     329: goto          415
     332: new           #94                 // class com/ibm/icu/util/DateTimeRule
     335: dup
     336: aload_0
     337: getfield      #34                 // Field endMonth:I
     340: aload_0
     341: getfield      #35                 // Field endDay:I
     344: aload_0
     345: getfield      #36                 // Field endDayOfWeek:I
     348: aload_0
     349: getfield      #37                 // Field endTime:I
     352: iload_2
     353: invokespecial #96                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIIII)V
     356: astore_1
     357: goto          415
     360: new           #94                 // class com/ibm/icu/util/DateTimeRule
     363: dup
     364: aload_0
     365: getfield      #34                 // Field endMonth:I
     368: aload_0
     369: getfield      #35                 // Field endDay:I
     372: aload_0
     373: getfield      #36                 // Field endDayOfWeek:I
     376: iconst_1
     377: aload_0
     378: getfield      #37                 // Field endTime:I
     381: iload_2
     382: invokespecial #97                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIIZII)V
     385: astore_1
     386: goto          415
     389: new           #94                 // class com/ibm/icu/util/DateTimeRule
     392: dup
     393: aload_0
     394: getfield      #34                 // Field endMonth:I
     397: aload_0
     398: getfield      #35                 // Field endDay:I
     401: aload_0
     402: getfield      #36                 // Field endDayOfWeek:I
     405: iconst_0
     406: aload_0
     407: getfield      #37                 // Field endTime:I
     410: iload_2
     411: invokespecial #97                 // Method com/ibm/icu/util/DateTimeRule."<init>":(IIIZII)V
     414: astore_1
     415: aload_0
     416: new           #98                 // class com/ibm/icu/util/AnnualTimeZoneRule
     419: dup
     420: new           #44                 // class java/lang/StringBuilder
     423: dup
     424: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     427: aload_0
     428: invokevirtual #48                 // Method getID:()Ljava/lang/String;
     431: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     434: ldc           #103                // String (STD)
     436: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     439: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     442: aload_0
     443: invokevirtual #63                 // Method getRawOffset:()I
     446: iconst_0
     447: aload_1
     448: aload_0
     449: getfield      #18                 // Field startYear:I
     452: ldc           #100                // int 2147483647
     454: invokespecial #101                // Method com/ibm/icu/util/AnnualTimeZoneRule."<init>":(Ljava/lang/String;IILcom/ibm/icu/util/DateTimeRule;II)V
     457: putfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     460: aload_0
     461: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     464: aload_0
     465: invokevirtual #63                 // Method getRawOffset:()I
     468: aload_0
     469: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     472: invokevirtual #84                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getDSTSavings:()I
     475: invokevirtual #102                // Method com/ibm/icu/util/AnnualTimeZoneRule.getFirstStart:(II)Ljava/util/Date;
     478: invokevirtual #88                 // Method java/util/Date.getTime:()J
     481: lstore_3
     482: lload_3
     483: lload         5
     485: lcmp
     486: ifge          556
     489: aload_0
     490: new           #104                // class com/ibm/icu/util/InitialTimeZoneRule
     493: dup
     494: new           #44                 // class java/lang/StringBuilder
     497: dup
     498: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     501: aload_0
     502: invokevirtual #48                 // Method getID:()Ljava/lang/String;
     505: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     508: ldc           #99                 // String (DST)
     510: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     513: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     516: aload_0
     517: invokevirtual #63                 // Method getRawOffset:()I
     520: aload_0
     521: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     524: invokevirtual #84                 // Method com/ibm/icu/util/AnnualTimeZoneRule.getDSTSavings:()I
     527: invokespecial #105                // Method com/ibm/icu/util/InitialTimeZoneRule."<init>":(Ljava/lang/String;II)V
     530: putfield      #93                 // Field initialRule:Lcom/ibm/icu/util/InitialTimeZoneRule;
     533: aload_0
     534: new           #87                 // class com/ibm/icu/util/TimeZoneTransition
     537: dup
     538: lload_3
     539: aload_0
     540: getfield      #93                 // Field initialRule:Lcom/ibm/icu/util/InitialTimeZoneRule;
     543: aload_0
     544: getfield      #81                 // Field stdRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     547: invokespecial #89                 // Method com/ibm/icu/util/TimeZoneTransition."<init>":(JLcom/ibm/icu/util/TimeZoneRule;Lcom/ibm/icu/util/TimeZoneRule;)V
     550: putfield      #79                 // Field firstTransition:Lcom/ibm/icu/util/TimeZoneTransition;
     553: goto          615
     556: aload_0
     557: new           #104                // class com/ibm/icu/util/InitialTimeZoneRule
     560: dup
     561: new           #44                 // class java/lang/StringBuilder
     564: dup
     565: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     568: aload_0
     569: invokevirtual #48                 // Method getID:()Ljava/lang/String;
     572: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     575: ldc           #103                // String (STD)
     577: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     580: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     583: aload_0
     584: invokevirtual #63                 // Method getRawOffset:()I
     587: iconst_0
     588: invokespecial #105                // Method com/ibm/icu/util/InitialTimeZoneRule."<init>":(Ljava/lang/String;II)V
     591: putfield      #93                 // Field initialRule:Lcom/ibm/icu/util/InitialTimeZoneRule;
     594: aload_0
     595: new           #87                 // class com/ibm/icu/util/TimeZoneTransition
     598: dup
     599: lload         5
     601: aload_0
     602: getfield      #93                 // Field initialRule:Lcom/ibm/icu/util/InitialTimeZoneRule;
     605: aload_0
     606: getfield      #82                 // Field dstRule:Lcom/ibm/icu/util/AnnualTimeZoneRule;
     609: invokespecial #89                 // Method com/ibm/icu/util/TimeZoneTransition."<init>":(JLcom/ibm/icu/util/TimeZoneRule;Lcom/ibm/icu/util/TimeZoneRule;)V
     612: putfield      #79                 // Field firstTransition:Lcom/ibm/icu/util/TimeZoneTransition;
     615: goto          638
     618: aload_0
     619: new           #104                // class com/ibm/icu/util/InitialTimeZoneRule
     622: dup
     623: aload_0
     624: invokevirtual #48                 // Method getID:()Ljava/lang/String;
     627: aload_0
     628: invokevirtual #63                 // Method getRawOffset:()I
     631: iconst_0
     632: invokespecial #105                // Method com/ibm/icu/util/InitialTimeZoneRule."<init>":(Ljava/lang/String;II)V
     635: putfield      #93                 // Field initialRule:Lcom/ibm/icu/util/InitialTimeZoneRule;
     638: aload_0
     639: iconst_1
     640: putfield      #14                 // Field transitionRulesInitialized:Z
     643: return

  public boolean isFrozen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isFrozen:Z
       4: ireturn

  public com.ibm.icu.util.TimeZone freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field isFrozen:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.util.TimeZone cloneAsThawed();
    Code:
       0: aload_0
       1: invokespecial #106                // Method com/ibm/icu/util/BasicTimeZone.cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
       4: checkcast     #6                  // class com/ibm/icu/util/SimpleTimeZone
       7: astore_1
       8: aload_1
       9: iconst_0
      10: putfield      #5                  // Field isFrozen:Z
      13: aload_1
      14: areturn

  public java.lang.Object cloneAsThawed();
    Code:
       0: aload_0
       1: invokevirtual #77                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
       4: areturn

  public java.lang.Object freeze();
    Code:
       0: aload_0
       1: invokevirtual #107                // Method freeze:()Lcom/ibm/icu/util/TimeZone;
       4: areturn

  static {};
    Code:
       0: ldc           #6                  // class com/ibm/icu/util/SimpleTimeZone
       2: invokevirtual #108                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #21                 // Field $assertionsDisabled:Z
      16: bipush        12
      18: newarray       byte
      20: dup
      21: iconst_0
      22: bipush        31
      24: bastore
      25: dup
      26: iconst_1
      27: bipush        29
      29: bastore
      30: dup
      31: iconst_2
      32: bipush        31
      34: bastore
      35: dup
      36: iconst_3
      37: bipush        30
      39: bastore
      40: dup
      41: iconst_4
      42: bipush        31
      44: bastore
      45: dup
      46: iconst_5
      47: bipush        30
      49: bastore
      50: dup
      51: bipush        6
      53: bipush        31
      55: bastore
      56: dup
      57: bipush        7
      59: bipush        31
      61: bastore
      62: dup
      63: bipush        8
      65: bipush        30
      67: bastore
      68: dup
      69: bipush        9
      71: bipush        31
      73: bastore
      74: dup
      75: bipush        10
      77: bipush        30
      79: bastore
      80: dup
      81: bipush        11
      83: bipush        31
      85: bastore
      86: putstatic     #72                 // Field staticMonthLength:[B
      89: return
}
