Compiled from "CompactByteArray.java"
public final class com.ibm.icu.util.CompactByteArray implements java.lang.Cloneable {
  public static final int UNICODECOUNT;

  private static final int BLOCKSHIFT;

  private static final int BLOCKCOUNT;

  private static final int INDEXSHIFT;

  private static final int INDEXCOUNT;

  private static final int BLOCKMASK;

  private byte[] values;

  private char[] indices;

  private int[] hashes;

  private boolean isCompact;

  byte defaultValue;

  public com.ibm.icu.util.CompactByteArray();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #2                  // Method "<init>":(B)V
       5: return

  public com.ibm.icu.util.CompactByteArray(byte);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // int 65536
       7: newarray       byte
       9: putfield      #5                  // Field values:[B
      12: aload_0
      13: sipush        512
      16: newarray       char
      18: putfield      #6                  // Field indices:[C
      21: aload_0
      22: sipush        512
      25: newarray       int
      27: putfield      #7                  // Field hashes:[I
      30: iconst_0
      31: istore_2
      32: iload_2
      33: ldc           #4                  // int 65536
      35: if_icmpge     51
      38: aload_0
      39: getfield      #5                  // Field values:[B
      42: iload_2
      43: iload_1
      44: bastore
      45: iinc          2, 1
      48: goto          32
      51: iconst_0
      52: istore_2
      53: iload_2
      54: sipush        512
      57: if_icmpge     84
      60: aload_0
      61: getfield      #6                  // Field indices:[C
      64: iload_2
      65: iload_2
      66: bipush        7
      68: ishl
      69: i2c
      70: castore
      71: aload_0
      72: getfield      #7                  // Field hashes:[I
      75: iload_2
      76: iconst_0
      77: iastore
      78: iinc          2, 1
      81: goto          53
      84: aload_0
      85: iconst_0
      86: putfield      #8                  // Field isCompact:Z
      89: aload_0
      90: iload_1
      91: putfield      #9                  // Field defaultValue:B
      94: return

  public com.ibm.icu.util.CompactByteArray(char[], byte[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: arraylength
       6: sipush        512
       9: if_icmpeq     22
      12: new           #10                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #11                 // String Index out of bounds.
      18: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iconst_0
      23: istore_3
      24: iload_3
      25: sipush        512
      28: if_icmpge     63
      31: aload_1
      32: iload_3
      33: caload
      34: istore        4
      36: iload         4
      38: aload_2
      39: arraylength
      40: sipush        128
      43: iadd
      44: if_icmplt     57
      47: new           #10                 // class java/lang/IllegalArgumentException
      50: dup
      51: ldc           #11                 // String Index out of bounds.
      53: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iinc          3, 1
      60: goto          24
      63: aload_0
      64: aload_1
      65: putfield      #6                  // Field indices:[C
      68: aload_0
      69: aload_2
      70: putfield      #5                  // Field values:[B
      73: aload_0
      74: iconst_1
      75: putfield      #8                  // Field isCompact:Z
      78: return

  public com.ibm.icu.util.CompactByteArray(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/ibm/icu/impl/Utility.RLEStringToCharArray:(Ljava/lang/String;)[C
       5: aload_2
       6: invokestatic  #14                 // Method com/ibm/icu/impl/Utility.RLEStringToByteArray:(Ljava/lang/String;)[B
       9: invokespecial #15                 // Method "<init>":([C[B)V
      12: return

  public byte elementAt(char);
    Code:
       0: aload_0
       1: getfield      #5                  // Field values:[B
       4: aload_0
       5: getfield      #6                  // Field indices:[C
       8: iload_1
       9: bipush        7
      11: ishr
      12: caload
      13: ldc           #16                 // int 65535
      15: iand
      16: iload_1
      17: bipush        127
      19: iand
      20: iadd
      21: baload
      22: ireturn

  public void setElementAt(char, byte);
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #17                 // Method expand:()V
      11: aload_0
      12: getfield      #5                  // Field values:[B
      15: iload_1
      16: iload_2
      17: bastore
      18: aload_0
      19: iload_1
      20: bipush        7
      22: ishr
      23: iload_2
      24: invokespecial #18                 // Method touchBlock:(II)V
      27: return

  public void setElementAt(char, char, byte);
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #17                 // Method expand:()V
      11: iload_1
      12: istore        4
      14: iload         4
      16: iload_2
      17: if_icmpgt     44
      20: aload_0
      21: getfield      #5                  // Field values:[B
      24: iload         4
      26: iload_3
      27: bastore
      28: aload_0
      29: iload         4
      31: bipush        7
      33: ishr
      34: iload_3
      35: invokespecial #18                 // Method touchBlock:(II)V
      38: iinc          4, 1
      41: goto          14
      44: return

  public void compact();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #19                 // Method compact:(Z)V
       5: return

  public void compact(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifne          266
       7: iconst_0
       8: istore_2
       9: iconst_0
      10: istore_3
      11: ldc           #16                 // int 65535
      13: istore        4
      15: iconst_0
      16: istore        5
      18: iload         5
      20: aload_0
      21: getfield      #6                  // Field indices:[C
      24: arraylength
      25: if_icmpge     224
      28: aload_0
      29: getfield      #6                  // Field indices:[C
      32: iload         5
      34: ldc           #16                 // int 65535
      36: castore
      37: aload_0
      38: iload         5
      40: invokespecial #20                 // Method blockTouched:(I)Z
      43: istore        6
      45: iload         6
      47: ifne          69
      50: iload         4
      52: ldc           #16                 // int 65535
      54: if_icmpeq     69
      57: aload_0
      58: getfield      #6                  // Field indices:[C
      61: iload         5
      63: iload         4
      65: castore
      66: goto          212
      69: iconst_0
      70: istore        7
      72: iconst_0
      73: istore        8
      75: iconst_0
      76: istore        8
      78: iload         8
      80: iload_2
      81: if_icmpge     146
      84: aload_0
      85: getfield      #7                  // Field hashes:[I
      88: iload         5
      90: iaload
      91: aload_0
      92: getfield      #7                  // Field hashes:[I
      95: iload         8
      97: iaload
      98: if_icmpne     134
     101: aload_0
     102: getfield      #5                  // Field values:[B
     105: iload_3
     106: aload_0
     107: getfield      #5                  // Field values:[B
     110: iload         7
     112: sipush        128
     115: invokestatic  #21                 // Method arrayRegionMatches:([BI[BII)Z
     118: ifeq          134
     121: aload_0
     122: getfield      #6                  // Field indices:[C
     125: iload         5
     127: iload         7
     129: i2c
     130: castore
     131: goto          146
     134: iinc          8, 1
     137: iinc_w        7, 128
     143: goto          78
     146: aload_0
     147: getfield      #6                  // Field indices:[C
     150: iload         5
     152: caload
     153: ldc           #16                 // int 65535
     155: if_icmpne     212
     158: aload_0
     159: getfield      #5                  // Field values:[B
     162: iload_3
     163: aload_0
     164: getfield      #5                  // Field values:[B
     167: iload         7
     169: sipush        128
     172: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     175: aload_0
     176: getfield      #6                  // Field indices:[C
     179: iload         5
     181: iload         7
     183: i2c
     184: castore
     185: aload_0
     186: getfield      #7                  // Field hashes:[I
     189: iload         8
     191: aload_0
     192: getfield      #7                  // Field hashes:[I
     195: iload         5
     197: iaload
     198: iastore
     199: iinc          2, 1
     202: iload         6
     204: ifne          212
     207: iload         7
     209: i2c
     210: istore        4
     212: iinc          5, 1
     215: iinc_w        3, 128
     221: goto          18
     224: iload_2
     225: sipush        128
     228: imul
     229: istore        5
     231: iload         5
     233: newarray       byte
     235: astore        6
     237: aload_0
     238: getfield      #5                  // Field values:[B
     241: iconst_0
     242: aload         6
     244: iconst_0
     245: iload         5
     247: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     250: aload_0
     251: aload         6
     253: putfield      #5                  // Field values:[B
     256: aload_0
     257: iconst_1
     258: putfield      #8                  // Field isCompact:Z
     261: aload_0
     262: aconst_null
     263: putfield      #7                  // Field hashes:[I
     266: return

  static final boolean arrayRegionMatches(byte[], int, byte[], int, int);
    Code:
       0: iload_1
       1: iload         4
       3: iadd
       4: istore        5
       6: iload_3
       7: iload_1
       8: isub
       9: istore        6
      11: iload_1
      12: istore        7
      14: iload         7
      16: iload         5
      18: if_icmpge     43
      21: aload_0
      22: iload         7
      24: baload
      25: aload_2
      26: iload         7
      28: iload         6
      30: iadd
      31: baload
      32: if_icmpeq     37
      35: iconst_0
      36: ireturn
      37: iinc          7, 1
      40: goto          14
      43: iconst_1
      44: ireturn

  private final void touchBlock(int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field hashes:[I
       4: iload_1
       5: aload_0
       6: getfield      #7                  // Field hashes:[I
       9: iload_1
      10: iaload
      11: iload_2
      12: iconst_1
      13: ishl
      14: iadd
      15: iconst_1
      16: ior
      17: iastore
      18: return

  private final boolean blockTouched(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field hashes:[I
       4: iload_1
       5: iaload
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public char[] getIndexArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field indices:[C
       4: areturn

  public byte[] getValueArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field values:[B
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #1                  // class com/ibm/icu/util/CompactByteArray
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #5                  // Field values:[B
      13: invokevirtual #24                 // Method "[B".clone:()Ljava/lang/Object;
      16: checkcast     #25                 // class "[B"
      19: putfield      #5                  // Field values:[B
      22: aload_1
      23: aload_0
      24: getfield      #6                  // Field indices:[C
      27: invokevirtual #26                 // Method "[C".clone:()Ljava/lang/Object;
      30: checkcast     #27                 // class "[C"
      33: putfield      #6                  // Field indices:[C
      36: aload_0
      37: getfield      #7                  // Field hashes:[I
      40: ifnull        57
      43: aload_1
      44: aload_0
      45: getfield      #7                  // Field hashes:[I
      48: invokevirtual #28                 // Method "[I".clone:()Ljava/lang/Object;
      51: checkcast     #29                 // class "[I"
      54: putfield      #7                  // Field hashes:[I
      57: aload_1
      58: areturn
      59: astore_1
      60: new           #31                 // class com/ibm/icu/util/ICUCloneNotSupportedException
      63: dup
      64: aload_1
      65: invokespecial #32                 // Method com/ibm/icu/util/ICUCloneNotSupportedException."<init>":(Ljava/lang/Throwable;)V
      68: athrow
    Exception table:
       from    to  target type
           0    58    59   Class java/lang/CloneNotSupportedException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #1                  // class com/ibm/icu/util/CompactByteArray
      30: astore_2
      31: iconst_0
      32: istore_3
      33: iload_3
      34: ldc           #4                  // int 65536
      36: if_icmpge     62
      39: aload_0
      40: iload_3
      41: i2c
      42: invokevirtual #34                 // Method elementAt:(C)B
      45: aload_2
      46: iload_3
      47: i2c
      48: invokevirtual #34                 // Method elementAt:(C)B
      51: if_icmpeq     56
      54: iconst_0
      55: ireturn
      56: iinc          3, 1
      59: goto          33
      62: iconst_1
      63: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_3
       3: aload_0
       4: getfield      #5                  // Field values:[B
       7: arraylength
       8: bipush        16
      10: idiv
      11: invokestatic  #35                 // Method java/lang/Math.min:(II)I
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: aload_0
      19: getfield      #5                  // Field values:[B
      22: arraylength
      23: if_icmpge     45
      26: iload_1
      27: bipush        37
      29: imul
      30: aload_0
      31: getfield      #5                  // Field values:[B
      34: iload_3
      35: baload
      36: iadd
      37: istore_1
      38: iload_3
      39: iload_2
      40: iadd
      41: istore_3
      42: goto          17
      45: iload_1
      46: ireturn

  private void expand();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifeq          96
       7: aload_0
       8: sipush        512
      11: newarray       int
      13: putfield      #7                  // Field hashes:[I
      16: ldc           #4                  // int 65536
      18: newarray       byte
      20: astore_2
      21: iconst_0
      22: istore_1
      23: iload_1
      24: ldc           #4                  // int 65536
      26: if_icmpge     55
      29: aload_0
      30: iload_1
      31: i2c
      32: invokevirtual #34                 // Method elementAt:(C)B
      35: istore_3
      36: aload_2
      37: iload_1
      38: iload_3
      39: bastore
      40: aload_0
      41: iload_1
      42: bipush        7
      44: ishr
      45: iload_3
      46: invokespecial #18                 // Method touchBlock:(II)V
      49: iinc          1, 1
      52: goto          23
      55: iconst_0
      56: istore_1
      57: iload_1
      58: sipush        512
      61: if_icmpge     81
      64: aload_0
      65: getfield      #6                  // Field indices:[C
      68: iload_1
      69: iload_1
      70: bipush        7
      72: ishl
      73: i2c
      74: castore
      75: iinc          1, 1
      78: goto          57
      81: aload_0
      82: aconst_null
      83: putfield      #5                  // Field values:[B
      86: aload_0
      87: aload_2
      88: putfield      #5                  // Field values:[B
      91: aload_0
      92: iconst_0
      93: putfield      #8                  // Field isCompact:Z
      96: return
}
