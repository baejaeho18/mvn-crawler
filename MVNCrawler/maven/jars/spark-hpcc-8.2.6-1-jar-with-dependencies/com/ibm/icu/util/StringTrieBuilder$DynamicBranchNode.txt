Compiled from "StringTrieBuilder.java"
final class com.ibm.icu.util.StringTrieBuilder$DynamicBranchNode extends com.ibm.icu.util.StringTrieBuilder$ValueNode {
  private java.lang.StringBuilder chars;

  private java.util.ArrayList<com.ibm.icu.util.StringTrieBuilder$Node> equal;

  public com.ibm.icu.util.StringTrieBuilder$DynamicBranchNode();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/util/StringTrieBuilder$ValueNode."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field equal:Ljava/util/ArrayList;
      26: return

  public void add(char, com.ibm.icu.util.StringTrieBuilder$Node);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #8                  // Method find:(C)I
       5: istore_3
       6: aload_0
       7: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      10: iload_3
      11: iload_1
      12: invokevirtual #9                  // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
      15: pop
      16: aload_0
      17: getfield      #7                  // Field equal:Ljava/util/ArrayList;
      20: iload_3
      21: aload_2
      22: invokevirtual #10                 // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      25: return

  public com.ibm.icu.util.StringTrieBuilder$Node add(com.ibm.icu.util.StringTrieBuilder, java.lang.CharSequence, int, int);
    Code:
       0: iload_3
       1: aload_2
       2: invokeinterface #11,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       7: if_icmpne     35
      10: aload_0
      11: getfield      #12                 // Field hasValue:Z
      14: ifeq          27
      17: new           #13                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #14                 // String Duplicate string.
      23: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload         4
      30: invokevirtual #16                 // Method setValue:(I)V
      33: aload_0
      34: areturn
      35: aload_2
      36: iload_3
      37: iinc          3, 1
      40: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      45: istore        5
      47: aload_0
      48: iload         5
      50: invokespecial #8                  // Method find:(C)I
      53: istore        6
      55: iload         6
      57: aload_0
      58: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      61: invokevirtual #18                 // Method java/lang/StringBuilder.length:()I
      64: if_icmpge     114
      67: iload         5
      69: aload_0
      70: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      73: iload         6
      75: invokevirtual #19                 // Method java/lang/StringBuilder.charAt:(I)C
      78: if_icmpne     114
      81: aload_0
      82: getfield      #7                  // Field equal:Ljava/util/ArrayList;
      85: iload         6
      87: aload_0
      88: getfield      #7                  // Field equal:Ljava/util/ArrayList;
      91: iload         6
      93: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      96: checkcast     #21                 // class com/ibm/icu/util/StringTrieBuilder$Node
      99: aload_1
     100: aload_2
     101: iload_3
     102: iload         4
     104: invokevirtual #22                 // Method com/ibm/icu/util/StringTrieBuilder$Node.add:(Lcom/ibm/icu/util/StringTrieBuilder;Ljava/lang/CharSequence;II)Lcom/ibm/icu/util/StringTrieBuilder$Node;
     107: invokevirtual #23                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: goto          143
     114: aload_0
     115: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
     118: iload         6
     120: iload         5
     122: invokevirtual #9                  // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
     125: pop
     126: aload_0
     127: getfield      #7                  // Field equal:Ljava/util/ArrayList;
     130: iload         6
     132: aload_1
     133: aload_2
     134: iload_3
     135: iload         4
     137: invokestatic  #24                 // Method com/ibm/icu/util/StringTrieBuilder.access$100:(Lcom/ibm/icu/util/StringTrieBuilder;Ljava/lang/CharSequence;II)Lcom/ibm/icu/util/StringTrieBuilder$ValueNode;
     140: invokevirtual #10                 // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
     143: aload_0
     144: areturn

  public com.ibm.icu.util.StringTrieBuilder$Node register(com.ibm.icu.util.StringTrieBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_0
       4: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
       7: invokevirtual #18                 // Method java/lang/StringBuilder.length:()I
      10: invokespecial #25                 // Method register:(Lcom/ibm/icu/util/StringTrieBuilder;II)Lcom/ibm/icu/util/StringTrieBuilder$Node;
      13: astore_2
      14: new           #26                 // class com/ibm/icu/util/StringTrieBuilder$BranchHeadNode
      17: dup
      18: aload_0
      19: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      22: invokevirtual #18                 // Method java/lang/StringBuilder.length:()I
      25: aload_2
      26: invokespecial #27                 // Method com/ibm/icu/util/StringTrieBuilder$BranchHeadNode."<init>":(ILcom/ibm/icu/util/StringTrieBuilder$Node;)V
      29: astore_3
      30: aload_3
      31: astore        4
      33: aload_0
      34: getfield      #12                 // Field hasValue:Z
      37: ifeq          76
      40: aload_1
      41: invokevirtual #28                 // Method com/ibm/icu/util/StringTrieBuilder.matchNodesCanHaveValues:()Z
      44: ifeq          58
      47: aload_3
      48: aload_0
      49: getfield      #29                 // Field value:I
      52: invokevirtual #30                 // Method com/ibm/icu/util/StringTrieBuilder$BranchHeadNode.setValue:(I)V
      55: goto          76
      58: new           #31                 // class com/ibm/icu/util/StringTrieBuilder$IntermediateValueNode
      61: dup
      62: aload_0
      63: getfield      #29                 // Field value:I
      66: aload_1
      67: aload_3
      68: invokestatic  #32                 // Method com/ibm/icu/util/StringTrieBuilder.access$200:(Lcom/ibm/icu/util/StringTrieBuilder;Lcom/ibm/icu/util/StringTrieBuilder$Node;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
      71: invokespecial #33                 // Method com/ibm/icu/util/StringTrieBuilder$IntermediateValueNode."<init>":(ILcom/ibm/icu/util/StringTrieBuilder$Node;)V
      74: astore        4
      76: aload_1
      77: aload         4
      79: invokestatic  #32                 // Method com/ibm/icu/util/StringTrieBuilder.access$200:(Lcom/ibm/icu/util/StringTrieBuilder;Lcom/ibm/icu/util/StringTrieBuilder$Node;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
      82: areturn

  private com.ibm.icu.util.StringTrieBuilder$Node register(com.ibm.icu.util.StringTrieBuilder, int, int);
    Code:
       0: iload_3
       1: iload_2
       2: isub
       3: istore        4
       5: iload         4
       7: aload_1
       8: invokevirtual #34                 // Method com/ibm/icu/util/StringTrieBuilder.getMaxBranchLinearSubNodeLength:()I
      11: if_icmple     59
      14: iload_2
      15: iload         4
      17: iconst_2
      18: idiv
      19: iadd
      20: istore        5
      22: aload_1
      23: new           #35                 // class com/ibm/icu/util/StringTrieBuilder$SplitBranchNode
      26: dup
      27: aload_0
      28: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      31: iload         5
      33: invokevirtual #19                 // Method java/lang/StringBuilder.charAt:(I)C
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload         5
      41: invokespecial #25                 // Method register:(Lcom/ibm/icu/util/StringTrieBuilder;II)Lcom/ibm/icu/util/StringTrieBuilder$Node;
      44: aload_0
      45: aload_1
      46: iload         5
      48: iload_3
      49: invokespecial #25                 // Method register:(Lcom/ibm/icu/util/StringTrieBuilder;II)Lcom/ibm/icu/util/StringTrieBuilder$Node;
      52: invokespecial #36                 // Method com/ibm/icu/util/StringTrieBuilder$SplitBranchNode."<init>":(CLcom/ibm/icu/util/StringTrieBuilder$Node;Lcom/ibm/icu/util/StringTrieBuilder$Node;)V
      55: invokestatic  #32                 // Method com/ibm/icu/util/StringTrieBuilder.access$200:(Lcom/ibm/icu/util/StringTrieBuilder;Lcom/ibm/icu/util/StringTrieBuilder$Node;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
      58: areturn
      59: new           #37                 // class com/ibm/icu/util/StringTrieBuilder$ListBranchNode
      62: dup
      63: iload         4
      65: invokespecial #38                 // Method com/ibm/icu/util/StringTrieBuilder$ListBranchNode."<init>":(I)V
      68: astore        5
      70: aload_0
      71: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      74: iload_2
      75: invokevirtual #19                 // Method java/lang/StringBuilder.charAt:(I)C
      78: istore        6
      80: aload_0
      81: getfield      #7                  // Field equal:Ljava/util/ArrayList;
      84: iload_2
      85: invokevirtual #20                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      88: checkcast     #21                 // class com/ibm/icu/util/StringTrieBuilder$Node
      91: astore        7
      93: aload         7
      95: invokevirtual #39                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      98: ldc           #40                 // class com/ibm/icu/util/StringTrieBuilder$ValueNode
     100: if_acmpne     121
     103: aload         5
     105: iload         6
     107: aload         7
     109: checkcast     #40                 // class com/ibm/icu/util/StringTrieBuilder$ValueNode
     112: getfield      #41                 // Field com/ibm/icu/util/StringTrieBuilder$ValueNode.value:I
     115: invokevirtual #42                 // Method com/ibm/icu/util/StringTrieBuilder$ListBranchNode.add:(II)V
     118: goto          134
     121: aload         5
     123: iload         6
     125: aload         7
     127: aload_1
     128: invokevirtual #43                 // Method com/ibm/icu/util/StringTrieBuilder$Node.register:(Lcom/ibm/icu/util/StringTrieBuilder;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
     131: invokevirtual #44                 // Method com/ibm/icu/util/StringTrieBuilder$ListBranchNode.add:(ILcom/ibm/icu/util/StringTrieBuilder$Node;)V
     134: iinc          2, 1
     137: iload_2
     138: iload_3
     139: if_icmplt     70
     142: aload_1
     143: aload         5
     145: invokestatic  #32                 // Method com/ibm/icu/util/StringTrieBuilder.access$200:(Lcom/ibm/icu/util/StringTrieBuilder;Lcom/ibm/icu/util/StringTrieBuilder$Node;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
     148: areturn

  private int find(char);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
       6: invokevirtual #18                 // Method java/lang/StringBuilder.length:()I
       9: istore_3
      10: iload_2
      11: iload_3
      12: if_icmpge     62
      15: iload_2
      16: iload_3
      17: iadd
      18: iconst_2
      19: idiv
      20: istore        4
      22: aload_0
      23: getfield      #4                  // Field chars:Ljava/lang/StringBuilder;
      26: iload         4
      28: invokevirtual #19                 // Method java/lang/StringBuilder.charAt:(I)C
      31: istore        5
      33: iload_1
      34: iload         5
      36: if_icmpge     45
      39: iload         4
      41: istore_3
      42: goto          59
      45: iload_1
      46: iload         5
      48: if_icmpne     54
      51: iload         4
      53: ireturn
      54: iload         4
      56: iconst_1
      57: iadd
      58: istore_2
      59: goto          10
      62: iload_2
      63: ireturn
}
