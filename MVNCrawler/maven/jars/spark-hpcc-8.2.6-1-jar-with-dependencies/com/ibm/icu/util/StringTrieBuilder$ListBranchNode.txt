Compiled from "StringTrieBuilder.java"
final class com.ibm.icu.util.StringTrieBuilder$ListBranchNode extends com.ibm.icu.util.StringTrieBuilder$BranchNode {
  private com.ibm.icu.util.StringTrieBuilder$Node[] equal;

  private int length;

  private int[] values;

  private char[] units;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.util.StringTrieBuilder$ListBranchNode(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/util/StringTrieBuilder$BranchNode."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 165535188
       7: iload_1
       8: iadd
       9: putfield      #3                  // Field hash:I
      12: aload_0
      13: iload_1
      14: anewarray     #4                  // class com/ibm/icu/util/StringTrieBuilder$Node
      17: putfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      20: aload_0
      21: iload_1
      22: newarray       int
      24: putfield      #6                  // Field values:[I
      27: aload_0
      28: iload_1
      29: newarray       char
      31: putfield      #7                  // Field units:[C
      34: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #8                  // Method com/ibm/icu/util/StringTrieBuilder$BranchNode.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: checkcast     #9                  // class com/ibm/icu/util/StringTrieBuilder$ListBranchNode
      21: astore_2
      22: iconst_0
      23: istore_3
      24: iload_3
      25: aload_0
      26: getfield      #10                 // Field length:I
      29: if_icmpge     85
      32: aload_0
      33: getfield      #7                  // Field units:[C
      36: iload_3
      37: caload
      38: aload_2
      39: getfield      #7                  // Field units:[C
      42: iload_3
      43: caload
      44: if_icmpne     77
      47: aload_0
      48: getfield      #6                  // Field values:[I
      51: iload_3
      52: iaload
      53: aload_2
      54: getfield      #6                  // Field values:[I
      57: iload_3
      58: iaload
      59: if_icmpne     77
      62: aload_0
      63: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      66: iload_3
      67: aaload
      68: aload_2
      69: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      72: iload_3
      73: aaload
      74: if_acmpeq     79
      77: iconst_0
      78: ireturn
      79: iinc          3, 1
      82: goto          24
      85: iconst_1
      86: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method com/ibm/icu/util/StringTrieBuilder$BranchNode.hashCode:()I
       4: ireturn

  public int markRightEdgesFirst(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field offset:I
       4: ifne          55
       7: aload_0
       8: iload_1
       9: putfield      #13                 // Field firstEdgeNumber:I
      12: iconst_0
      13: istore_2
      14: aload_0
      15: getfield      #10                 // Field length:I
      18: istore_3
      19: aload_0
      20: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      23: iinc          3, -1
      26: iload_3
      27: aaload
      28: astore        4
      30: aload         4
      32: ifnull        44
      35: aload         4
      37: iload_1
      38: iload_2
      39: isub
      40: invokevirtual #14                 // Method com/ibm/icu/util/StringTrieBuilder$Node.markRightEdgesFirst:(I)I
      43: istore_1
      44: iconst_1
      45: istore_2
      46: iload_3
      47: ifgt          19
      50: aload_0
      51: iload_1
      52: putfield      #12                 // Field offset:I
      55: iload_1
      56: ireturn

  public void write(com.ibm.icu.util.StringTrieBuilder);
    Code:
       0: aload_0
       1: getfield      #10                 // Field length:I
       4: iconst_1
       5: isub
       6: istore_2
       7: aload_0
       8: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      11: iload_2
      12: aaload
      13: astore_3
      14: aload_3
      15: ifnonnull     25
      18: aload_0
      19: getfield      #13                 // Field firstEdgeNumber:I
      22: goto          29
      25: aload_3
      26: invokevirtual #15                 // Method com/ibm/icu/util/StringTrieBuilder$Node.getOffset:()I
      29: istore        4
      31: iinc          2, -1
      34: aload_0
      35: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      38: iload_2
      39: aaload
      40: ifnull        59
      43: aload_0
      44: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      47: iload_2
      48: aaload
      49: aload_0
      50: getfield      #13                 // Field firstEdgeNumber:I
      53: iload         4
      55: aload_1
      56: invokevirtual #16                 // Method com/ibm/icu/util/StringTrieBuilder$Node.writeUnlessInsideRightEdge:(IILcom/ibm/icu/util/StringTrieBuilder;)V
      59: iload_2
      60: ifgt          31
      63: aload_0
      64: getfield      #10                 // Field length:I
      67: iconst_1
      68: isub
      69: istore_2
      70: aload_3
      71: ifnonnull     89
      74: aload_1
      75: aload_0
      76: getfield      #6                  // Field values:[I
      79: iload_2
      80: iaload
      81: iconst_1
      82: invokevirtual #17                 // Method com/ibm/icu/util/StringTrieBuilder.writeValueAndFinal:(IZ)I
      85: pop
      86: goto          94
      89: aload_3
      90: aload_1
      91: invokevirtual #18                 // Method com/ibm/icu/util/StringTrieBuilder$Node.write:(Lcom/ibm/icu/util/StringTrieBuilder;)V
      94: aload_0
      95: aload_1
      96: aload_0
      97: getfield      #7                  // Field units:[C
     100: iload_2
     101: caload
     102: invokevirtual #19                 // Method com/ibm/icu/util/StringTrieBuilder.write:(I)I
     105: putfield      #12                 // Field offset:I
     108: iinc          2, -1
     111: iload_2
     112: iflt          209
     115: aload_0
     116: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
     119: iload_2
     120: aaload
     121: ifnonnull     138
     124: aload_0
     125: getfield      #6                  // Field values:[I
     128: iload_2
     129: iaload
     130: istore        5
     132: iconst_1
     133: istore        6
     135: goto          183
     138: getstatic     #20                 // Field $assertionsDisabled:Z
     141: ifne          164
     144: aload_0
     145: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
     148: iload_2
     149: aaload
     150: invokevirtual #15                 // Method com/ibm/icu/util/StringTrieBuilder$Node.getOffset:()I
     153: ifgt          164
     156: new           #21                 // class java/lang/AssertionError
     159: dup
     160: invokespecial #22                 // Method java/lang/AssertionError."<init>":()V
     163: athrow
     164: aload_0
     165: getfield      #12                 // Field offset:I
     168: aload_0
     169: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
     172: iload_2
     173: aaload
     174: invokevirtual #15                 // Method com/ibm/icu/util/StringTrieBuilder$Node.getOffset:()I
     177: isub
     178: istore        5
     180: iconst_0
     181: istore        6
     183: aload_1
     184: iload         5
     186: iload         6
     188: invokevirtual #17                 // Method com/ibm/icu/util/StringTrieBuilder.writeValueAndFinal:(IZ)I
     191: pop
     192: aload_0
     193: aload_1
     194: aload_0
     195: getfield      #7                  // Field units:[C
     198: iload_2
     199: caload
     200: invokevirtual #19                 // Method com/ibm/icu/util/StringTrieBuilder.write:(I)I
     203: putfield      #12                 // Field offset:I
     206: goto          108
     209: return

  public void add(int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field units:[C
       4: aload_0
       5: getfield      #10                 // Field length:I
       8: iload_1
       9: i2c
      10: castore
      11: aload_0
      12: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      15: aload_0
      16: getfield      #10                 // Field length:I
      19: aconst_null
      20: aastore
      21: aload_0
      22: getfield      #6                  // Field values:[I
      25: aload_0
      26: getfield      #10                 // Field length:I
      29: iload_2
      30: iastore
      31: aload_0
      32: dup
      33: getfield      #10                 // Field length:I
      36: iconst_1
      37: iadd
      38: putfield      #10                 // Field length:I
      41: aload_0
      42: aload_0
      43: getfield      #3                  // Field hash:I
      46: bipush        37
      48: imul
      49: iload_1
      50: iadd
      51: bipush        37
      53: imul
      54: iload_2
      55: iadd
      56: putfield      #3                  // Field hash:I
      59: return

  public void add(int, com.ibm.icu.util.StringTrieBuilder$Node);
    Code:
       0: aload_0
       1: getfield      #7                  // Field units:[C
       4: aload_0
       5: getfield      #10                 // Field length:I
       8: iload_1
       9: i2c
      10: castore
      11: aload_0
      12: getfield      #5                  // Field equal:[Lcom/ibm/icu/util/StringTrieBuilder$Node;
      15: aload_0
      16: getfield      #10                 // Field length:I
      19: aload_2
      20: aastore
      21: aload_0
      22: getfield      #6                  // Field values:[I
      25: aload_0
      26: getfield      #10                 // Field length:I
      29: iconst_0
      30: iastore
      31: aload_0
      32: dup
      33: getfield      #10                 // Field length:I
      36: iconst_1
      37: iadd
      38: putfield      #10                 // Field length:I
      41: aload_0
      42: aload_0
      43: getfield      #3                  // Field hash:I
      46: bipush        37
      48: imul
      49: iload_1
      50: iadd
      51: bipush        37
      53: imul
      54: aload_2
      55: invokevirtual #23                 // Method com/ibm/icu/util/StringTrieBuilder$Node.hashCode:()I
      58: iadd
      59: putfield      #3                  // Field hash:I
      62: return

  static {};
    Code:
       0: ldc           #24                 // class com/ibm/icu/util/StringTrieBuilder
       2: invokevirtual #25                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #20                 // Field $assertionsDisabled:Z
      16: return
}
