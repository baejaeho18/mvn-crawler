Compiled from "CompactCharArray.java"
public final class com.ibm.icu.util.CompactCharArray implements java.lang.Cloneable {
  public static final int UNICODECOUNT;

  public static final int BLOCKSHIFT;

  static final int BLOCKCOUNT;

  static final int INDEXSHIFT;

  static final int INDEXCOUNT;

  static final int BLOCKMASK;

  private char[] values;

  private char[] indices;

  private int[] hashes;

  private boolean isCompact;

  char defaultValue;

  public com.ibm.icu.util.CompactCharArray();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #2                  // Method "<init>":(C)V
       5: return

  public com.ibm.icu.util.CompactCharArray(char);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #4                  // int 65536
       7: newarray       char
       9: putfield      #5                  // Field values:[C
      12: aload_0
      13: sipush        2048
      16: newarray       char
      18: putfield      #6                  // Field indices:[C
      21: aload_0
      22: sipush        2048
      25: newarray       int
      27: putfield      #7                  // Field hashes:[I
      30: iconst_0
      31: istore_2
      32: iload_2
      33: ldc           #4                  // int 65536
      35: if_icmpge     51
      38: aload_0
      39: getfield      #5                  // Field values:[C
      42: iload_2
      43: iload_1
      44: castore
      45: iinc          2, 1
      48: goto          32
      51: iconst_0
      52: istore_2
      53: iload_2
      54: sipush        2048
      57: if_icmpge     83
      60: aload_0
      61: getfield      #6                  // Field indices:[C
      64: iload_2
      65: iload_2
      66: iconst_5
      67: ishl
      68: i2c
      69: castore
      70: aload_0
      71: getfield      #7                  // Field hashes:[I
      74: iload_2
      75: iconst_0
      76: iastore
      77: iinc          2, 1
      80: goto          53
      83: aload_0
      84: iconst_0
      85: putfield      #8                  // Field isCompact:Z
      88: aload_0
      89: iload_1
      90: putfield      #9                  // Field defaultValue:C
      93: return

  public com.ibm.icu.util.CompactCharArray(char[], char[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: arraylength
       6: sipush        2048
       9: if_icmpeq     22
      12: new           #10                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #11                 // String Index out of bounds.
      18: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iconst_0
      23: istore_3
      24: iload_3
      25: sipush        2048
      28: if_icmpge     62
      31: aload_1
      32: iload_3
      33: caload
      34: istore        4
      36: iload         4
      38: aload_2
      39: arraylength
      40: bipush        32
      42: iadd
      43: if_icmplt     56
      46: new           #10                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc           #11                 // String Index out of bounds.
      52: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: iinc          3, 1
      59: goto          24
      62: aload_0
      63: aload_1
      64: putfield      #6                  // Field indices:[C
      67: aload_0
      68: aload_2
      69: putfield      #5                  // Field values:[C
      72: aload_0
      73: iconst_1
      74: putfield      #8                  // Field isCompact:Z
      77: return

  public com.ibm.icu.util.CompactCharArray(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method com/ibm/icu/impl/Utility.RLEStringToCharArray:(Ljava/lang/String;)[C
       5: aload_2
       6: invokestatic  #13                 // Method com/ibm/icu/impl/Utility.RLEStringToCharArray:(Ljava/lang/String;)[C
       9: invokespecial #14                 // Method "<init>":([C[C)V
      12: return

  public char elementAt(char);
    Code:
       0: aload_0
       1: getfield      #6                  // Field indices:[C
       4: iload_1
       5: iconst_5
       6: ishr
       7: caload
       8: ldc           #15                 // int 65535
      10: iand
      11: iload_1
      12: bipush        31
      14: iand
      15: iadd
      16: istore_2
      17: iload_2
      18: aload_0
      19: getfield      #5                  // Field values:[C
      22: arraylength
      23: if_icmplt     33
      26: aload_0
      27: getfield      #9                  // Field defaultValue:C
      30: goto          39
      33: aload_0
      34: getfield      #5                  // Field values:[C
      37: iload_2
      38: caload
      39: ireturn

  public void setElementAt(char, char);
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #16                 // Method expand:()V
      11: aload_0
      12: getfield      #5                  // Field values:[C
      15: iload_1
      16: iload_2
      17: castore
      18: aload_0
      19: iload_1
      20: iconst_5
      21: ishr
      22: iload_2
      23: invokespecial #17                 // Method touchBlock:(II)V
      26: return

  public void setElementAt(char, char, char);
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #16                 // Method expand:()V
      11: iload_1
      12: istore        4
      14: iload         4
      16: iload_2
      17: if_icmpgt     43
      20: aload_0
      21: getfield      #5                  // Field values:[C
      24: iload         4
      26: iload_3
      27: castore
      28: aload_0
      29: iload         4
      31: iconst_5
      32: ishr
      33: iload_3
      34: invokespecial #17                 // Method touchBlock:(II)V
      37: iinc          4, 1
      40: goto          14
      43: return

  public void compact();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #18                 // Method compact:(Z)V
       5: return

  public void compact(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifne          303
       7: iconst_0
       8: istore_2
       9: ldc           #15                 // int 65535
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload_1
      16: ifeq          26
      19: ldc           #4                  // int 65536
      21: newarray       char
      23: goto          30
      26: aload_0
      27: getfield      #5                  // Field values:[C
      30: astore        5
      32: iconst_0
      33: istore        6
      35: iload         6
      37: aload_0
      38: getfield      #6                  // Field indices:[C
      41: arraylength
      42: if_icmpge     270
      45: aload_0
      46: getfield      #6                  // Field indices:[C
      49: iload         6
      51: ldc           #15                 // int 65535
      53: castore
      54: aload_0
      55: iload         6
      57: invokespecial #19                 // Method blockTouched:(I)Z
      60: istore        7
      62: iload         7
      64: ifne          84
      67: iload_3
      68: ldc           #15                 // int 65535
      70: if_icmpeq     84
      73: aload_0
      74: getfield      #6                  // Field indices:[C
      77: iload         6
      79: iload_3
      80: castore
      81: goto          261
      84: iconst_0
      85: istore        8
      87: iconst_0
      88: istore        9
      90: iload         9
      92: iload         6
      94: if_icmpge     156
      97: aload_0
      98: getfield      #7                  // Field hashes:[I
     101: iload         6
     103: iaload
     104: aload_0
     105: getfield      #7                  // Field hashes:[I
     108: iload         9
     110: iaload
     111: if_icmpne     147
     114: aload_0
     115: getfield      #5                  // Field values:[C
     118: iload_2
     119: aload_0
     120: getfield      #5                  // Field values:[C
     123: iload         8
     125: bipush        32
     127: invokestatic  #20                 // Method arrayRegionMatches:([CI[CII)Z
     130: ifeq          147
     133: aload_0
     134: getfield      #6                  // Field indices:[C
     137: iload         6
     139: aload_0
     140: getfield      #6                  // Field indices:[C
     143: iload         9
     145: caload
     146: castore
     147: iinc          9, 1
     150: iinc          8, 32
     153: goto          90
     156: aload_0
     157: getfield      #6                  // Field indices:[C
     160: iload         6
     162: caload
     163: ldc           #15                 // int 65535
     165: if_icmpne     261
     168: iload_1
     169: ifeq          186
     172: aload_0
     173: iload_2
     174: aload         5
     176: iload         4
     178: invokespecial #21                 // Method FindOverlappingPosition:(I[CI)I
     181: istore        9
     183: goto          190
     186: iload         4
     188: istore        9
     190: iload         9
     192: bipush        32
     194: iadd
     195: istore        10
     197: iload         10
     199: iload         4
     201: if_icmple     242
     204: iload         4
     206: istore        11
     208: iload         11
     210: iload         10
     212: if_icmpge     238
     215: aload         5
     217: iload         11
     219: aload_0
     220: getfield      #5                  // Field values:[C
     223: iload_2
     224: iload         11
     226: iadd
     227: iload         9
     229: isub
     230: caload
     231: castore
     232: iinc          11, 1
     235: goto          208
     238: iload         10
     240: istore        4
     242: aload_0
     243: getfield      #6                  // Field indices:[C
     246: iload         6
     248: iload         9
     250: i2c
     251: castore
     252: iload         7
     254: ifne          261
     257: iload         8
     259: i2c
     260: istore_3
     261: iinc          6, 1
     264: iinc          2, 32
     267: goto          35
     270: iload         4
     272: newarray       char
     274: astore        6
     276: aload         5
     278: iconst_0
     279: aload         6
     281: iconst_0
     282: iload         4
     284: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     287: aload_0
     288: aload         6
     290: putfield      #5                  // Field values:[C
     293: aload_0
     294: iconst_1
     295: putfield      #8                  // Field isCompact:Z
     298: aload_0
     299: aconst_null
     300: putfield      #7                  // Field hashes:[I
     303: return

  private int FindOverlappingPosition(int, char[], int);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_3
       6: if_icmpge     53
       9: bipush        32
      11: istore        5
      13: iload         4
      15: bipush        32
      17: iadd
      18: iload_3
      19: if_icmple     28
      22: iload_3
      23: iload         4
      25: isub
      26: istore        5
      28: aload_0
      29: getfield      #5                  // Field values:[C
      32: iload_1
      33: aload_2
      34: iload         4
      36: iload         5
      38: invokestatic  #20                 // Method arrayRegionMatches:([CI[CII)Z
      41: ifeq          47
      44: iload         4
      46: ireturn
      47: iinc          4, 1
      50: goto          3
      53: iload_3
      54: ireturn

  static final boolean arrayRegionMatches(char[], int, char[], int, int);
    Code:
       0: iload_1
       1: iload         4
       3: iadd
       4: istore        5
       6: iload_3
       7: iload_1
       8: isub
       9: istore        6
      11: iload_1
      12: istore        7
      14: iload         7
      16: iload         5
      18: if_icmpge     43
      21: aload_0
      22: iload         7
      24: caload
      25: aload_2
      26: iload         7
      28: iload         6
      30: iadd
      31: caload
      32: if_icmpeq     37
      35: iconst_0
      36: ireturn
      37: iinc          7, 1
      40: goto          14
      43: iconst_1
      44: ireturn

  private final void touchBlock(int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field hashes:[I
       4: iload_1
       5: aload_0
       6: getfield      #7                  // Field hashes:[I
       9: iload_1
      10: iaload
      11: iload_2
      12: iconst_1
      13: ishl
      14: iadd
      15: iconst_1
      16: ior
      17: iastore
      18: return

  private final boolean blockTouched(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field hashes:[I
       4: iload_1
       5: iaload
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public char[] getIndexArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field indices:[C
       4: areturn

  public char[] getValueArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field values:[C
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #1                  // class com/ibm/icu/util/CompactCharArray
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #5                  // Field values:[C
      13: invokevirtual #24                 // Method "[C".clone:()Ljava/lang/Object;
      16: checkcast     #25                 // class "[C"
      19: putfield      #5                  // Field values:[C
      22: aload_1
      23: aload_0
      24: getfield      #6                  // Field indices:[C
      27: invokevirtual #26                 // Method "[C".clone:()Ljava/lang/Object;
      30: checkcast     #25                 // class "[C"
      33: putfield      #6                  // Field indices:[C
      36: aload_0
      37: getfield      #7                  // Field hashes:[I
      40: ifnull        57
      43: aload_1
      44: aload_0
      45: getfield      #7                  // Field hashes:[I
      48: invokevirtual #27                 // Method "[I".clone:()Ljava/lang/Object;
      51: checkcast     #28                 // class "[I"
      54: putfield      #7                  // Field hashes:[I
      57: aload_1
      58: areturn
      59: astore_1
      60: new           #30                 // class com/ibm/icu/util/ICUCloneNotSupportedException
      63: dup
      64: aload_1
      65: invokespecial #31                 // Method com/ibm/icu/util/ICUCloneNotSupportedException."<init>":(Ljava/lang/Throwable;)V
      68: athrow
    Exception table:
       from    to  target type
           0    58    59   Class java/lang/CloneNotSupportedException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #32                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #1                  // class com/ibm/icu/util/CompactCharArray
      30: astore_2
      31: iconst_0
      32: istore_3
      33: iload_3
      34: ldc           #4                  // int 65536
      36: if_icmpge     62
      39: aload_0
      40: iload_3
      41: i2c
      42: invokevirtual #33                 // Method elementAt:(C)C
      45: aload_2
      46: iload_3
      47: i2c
      48: invokevirtual #33                 // Method elementAt:(C)C
      51: if_icmpeq     56
      54: iconst_0
      55: ireturn
      56: iinc          3, 1
      59: goto          33
      62: iconst_1
      63: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_3
       3: aload_0
       4: getfield      #5                  // Field values:[C
       7: arraylength
       8: bipush        16
      10: idiv
      11: invokestatic  #34                 // Method java/lang/Math.min:(II)I
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: aload_0
      19: getfield      #5                  // Field values:[C
      22: arraylength
      23: if_icmpge     45
      26: iload_1
      27: bipush        37
      29: imul
      30: aload_0
      31: getfield      #5                  // Field values:[C
      34: iload_3
      35: caload
      36: iadd
      37: istore_1
      38: iload_3
      39: iload_2
      40: iadd
      41: istore_3
      42: goto          17
      45: iload_1
      46: ireturn

  private void expand();
    Code:
       0: aload_0
       1: getfield      #8                  // Field isCompact:Z
       4: ifeq          84
       7: aload_0
       8: sipush        2048
      11: newarray       int
      13: putfield      #7                  // Field hashes:[I
      16: ldc           #4                  // int 65536
      18: newarray       char
      20: astore_2
      21: iconst_0
      22: istore_1
      23: iload_1
      24: ldc           #4                  // int 65536
      26: if_icmpge     44
      29: aload_2
      30: iload_1
      31: aload_0
      32: iload_1
      33: i2c
      34: invokevirtual #33                 // Method elementAt:(C)C
      37: castore
      38: iinc          1, 1
      41: goto          23
      44: iconst_0
      45: istore_1
      46: iload_1
      47: sipush        2048
      50: if_icmpge     69
      53: aload_0
      54: getfield      #6                  // Field indices:[C
      57: iload_1
      58: iload_1
      59: iconst_5
      60: ishl
      61: i2c
      62: castore
      63: iinc          1, 1
      66: goto          46
      69: aload_0
      70: aconst_null
      71: putfield      #5                  // Field values:[C
      74: aload_0
      75: aload_2
      76: putfield      #5                  // Field values:[C
      79: aload_0
      80: iconst_0
      81: putfield      #8                  // Field isCompact:Z
      84: return
}
