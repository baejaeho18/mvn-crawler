Compiled from "StringTrieBuilder.java"
final class com.ibm.icu.util.StringTrieBuilder$BranchHeadNode extends com.ibm.icu.util.StringTrieBuilder$ValueNode {
  private int length;

  private com.ibm.icu.util.StringTrieBuilder$Node next;

  public com.ibm.icu.util.StringTrieBuilder$BranchHeadNode(int, com.ibm.icu.util.StringTrieBuilder$Node);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/util/StringTrieBuilder$ValueNode."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field length:I
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      14: return

  public int hashCode();
    Code:
       0: ldc           #4                  // int 248302782
       2: aload_0
       3: getfield      #2                  // Field length:I
       6: iadd
       7: bipush        37
       9: imul
      10: aload_0
      11: getfield      #3                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      14: invokevirtual #5                  // Method com/ibm/icu/util/StringTrieBuilder$Node.hashCode:()I
      17: iadd
      18: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #6                  // Method com/ibm/icu/util/StringTrieBuilder$ValueNode.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: checkcast     #7                  // class com/ibm/icu/util/StringTrieBuilder$BranchHeadNode
      21: astore_2
      22: aload_0
      23: getfield      #2                  // Field length:I
      26: aload_2
      27: getfield      #2                  // Field length:I
      30: if_icmpne     48
      33: aload_0
      34: getfield      #3                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      37: aload_2
      38: getfield      #3                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      41: if_acmpne     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  public int markRightEdgesFirst(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field offset:I
       4: ifne          21
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      12: iload_1
      13: invokevirtual #9                  // Method com/ibm/icu/util/StringTrieBuilder$Node.markRightEdgesFirst:(I)I
      16: dup
      17: istore_1
      18: putfield      #8                  // Field offset:I
      21: iload_1
      22: ireturn

  public void write(com.ibm.icu.util.StringTrieBuilder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
       4: aload_1
       5: invokevirtual #10                 // Method com/ibm/icu/util/StringTrieBuilder$Node.write:(Lcom/ibm/icu/util/StringTrieBuilder;)V
       8: aload_0
       9: getfield      #2                  // Field length:I
      12: aload_1
      13: invokevirtual #11                 // Method com/ibm/icu/util/StringTrieBuilder.getMinLinearMatch:()I
      16: if_icmpgt     44
      19: aload_0
      20: aload_1
      21: aload_0
      22: getfield      #12                 // Field hasValue:Z
      25: aload_0
      26: getfield      #13                 // Field value:I
      29: aload_0
      30: getfield      #2                  // Field length:I
      33: iconst_1
      34: isub
      35: invokevirtual #14                 // Method com/ibm/icu/util/StringTrieBuilder.writeValueAndType:(ZII)I
      38: putfield      #8                  // Field offset:I
      41: goto          72
      44: aload_1
      45: aload_0
      46: getfield      #2                  // Field length:I
      49: iconst_1
      50: isub
      51: invokevirtual #15                 // Method com/ibm/icu/util/StringTrieBuilder.write:(I)I
      54: pop
      55: aload_0
      56: aload_1
      57: aload_0
      58: getfield      #12                 // Field hasValue:Z
      61: aload_0
      62: getfield      #13                 // Field value:I
      65: iconst_0
      66: invokevirtual #14                 // Method com/ibm/icu/util/StringTrieBuilder.writeValueAndType:(ZII)I
      69: putfield      #8                  // Field offset:I
      72: return
}
