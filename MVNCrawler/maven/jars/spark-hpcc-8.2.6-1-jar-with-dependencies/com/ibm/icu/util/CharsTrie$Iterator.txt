Compiled from "CharsTrie.java"
public final class com.ibm.icu.util.CharsTrie$Iterator implements java.util.Iterator<com.ibm.icu.util.CharsTrie$Entry> {
  private java.lang.CharSequence chars_;

  private int pos_;

  private int initialPos_;

  private int remainingMatchLength_;

  private int initialRemainingMatchLength_;

  private boolean skipValue_;

  private java.lang.StringBuilder str_;

  private int maxLength_;

  private com.ibm.icu.util.CharsTrie$Entry entry_;

  private java.util.ArrayList<java.lang.Long> stack_;

  private com.ibm.icu.util.CharsTrie$Iterator(java.lang.CharSequence, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #6                  // Field str_:Ljava/lang/StringBuilder;
      15: aload_0
      16: new           #7                  // class com/ibm/icu/util/CharsTrie$Entry
      19: dup
      20: aconst_null
      21: invokespecial #8                  // Method com/ibm/icu/util/CharsTrie$Entry."<init>":(Lcom/ibm/icu/util/CharsTrie$1;)V
      24: putfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
      27: aload_0
      28: new           #10                 // class java/util/ArrayList
      31: dup
      32: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      35: putfield      #12                 // Field stack_:Ljava/util/ArrayList;
      38: aload_0
      39: aload_1
      40: putfield      #13                 // Field chars_:Ljava/lang/CharSequence;
      43: aload_0
      44: aload_0
      45: iload_2
      46: dup_x1
      47: putfield      #14                 // Field initialPos_:I
      50: putfield      #15                 // Field pos_:I
      53: aload_0
      54: aload_0
      55: iload_3
      56: dup_x1
      57: putfield      #16                 // Field initialRemainingMatchLength_:I
      60: putfield      #17                 // Field remainingMatchLength_:I
      63: aload_0
      64: iload         4
      66: putfield      #18                 // Field maxLength_:I
      69: aload_0
      70: getfield      #17                 // Field remainingMatchLength_:I
      73: istore        5
      75: iload         5
      77: iflt          150
      80: iinc          5, 1
      83: aload_0
      84: getfield      #18                 // Field maxLength_:I
      87: ifle          105
      90: iload         5
      92: aload_0
      93: getfield      #18                 // Field maxLength_:I
      96: if_icmple     105
      99: aload_0
     100: getfield      #18                 // Field maxLength_:I
     103: istore        5
     105: aload_0
     106: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     109: aload_0
     110: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     113: aload_0
     114: getfield      #15                 // Field pos_:I
     117: aload_0
     118: getfield      #15                 // Field pos_:I
     121: iload         5
     123: iadd
     124: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     127: pop
     128: aload_0
     129: dup
     130: getfield      #15                 // Field pos_:I
     133: iload         5
     135: iadd
     136: putfield      #15                 // Field pos_:I
     139: aload_0
     140: dup
     141: getfield      #17                 // Field remainingMatchLength_:I
     144: iload         5
     146: isub
     147: putfield      #17                 // Field remainingMatchLength_:I
     150: return

  public com.ibm.icu.util.CharsTrie$Iterator reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #14                 // Field initialPos_:I
       5: putfield      #15                 // Field pos_:I
       8: aload_0
       9: aload_0
      10: getfield      #16                 // Field initialRemainingMatchLength_:I
      13: putfield      #17                 // Field remainingMatchLength_:I
      16: aload_0
      17: iconst_0
      18: putfield      #20                 // Field skipValue_:Z
      21: aload_0
      22: getfield      #17                 // Field remainingMatchLength_:I
      25: iconst_1
      26: iadd
      27: istore_1
      28: aload_0
      29: getfield      #18                 // Field maxLength_:I
      32: ifle          48
      35: iload_1
      36: aload_0
      37: getfield      #18                 // Field maxLength_:I
      40: if_icmple     48
      43: aload_0
      44: getfield      #18                 // Field maxLength_:I
      47: istore_1
      48: aload_0
      49: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
      52: iload_1
      53: invokevirtual #21                 // Method java/lang/StringBuilder.setLength:(I)V
      56: aload_0
      57: dup
      58: getfield      #15                 // Field pos_:I
      61: iload_1
      62: iadd
      63: putfield      #15                 // Field pos_:I
      66: aload_0
      67: dup
      68: getfield      #17                 // Field remainingMatchLength_:I
      71: iload_1
      72: isub
      73: putfield      #17                 // Field remainingMatchLength_:I
      76: aload_0
      77: getfield      #12                 // Field stack_:Ljava/util/ArrayList;
      80: invokevirtual #22                 // Method java/util/ArrayList.clear:()V
      83: aload_0
      84: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #15                 // Field pos_:I
       4: ifge          17
       7: aload_0
       8: getfield      #12                 // Field stack_:Ljava/util/ArrayList;
      11: invokevirtual #23                 // Method java/util/ArrayList.isEmpty:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public com.ibm.icu.util.CharsTrie$Entry next();
    Code:
       0: aload_0
       1: getfield      #15                 // Field pos_:I
       4: istore_1
       5: iload_1
       6: ifge          123
       9: aload_0
      10: getfield      #12                 // Field stack_:Ljava/util/ArrayList;
      13: invokevirtual #23                 // Method java/util/ArrayList.isEmpty:()Z
      16: ifeq          27
      19: new           #24                 // class java/util/NoSuchElementException
      22: dup
      23: invokespecial #25                 // Method java/util/NoSuchElementException."<init>":()V
      26: athrow
      27: aload_0
      28: getfield      #12                 // Field stack_:Ljava/util/ArrayList;
      31: aload_0
      32: getfield      #12                 // Field stack_:Ljava/util/ArrayList;
      35: invokevirtual #26                 // Method java/util/ArrayList.size:()I
      38: iconst_1
      39: isub
      40: invokevirtual #27                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;
      43: checkcast     #28                 // class java/lang/Long
      46: invokevirtual #29                 // Method java/lang/Long.longValue:()J
      49: lstore_2
      50: lload_2
      51: l2i
      52: istore        4
      54: lload_2
      55: bipush        32
      57: lshr
      58: l2i
      59: istore_1
      60: aload_0
      61: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
      64: iload         4
      66: ldc           #30                 // int 65535
      68: iand
      69: invokevirtual #21                 // Method java/lang/StringBuilder.setLength:(I)V
      72: iload         4
      74: bipush        16
      76: iushr
      77: istore        4
      79: iload         4
      81: iconst_1
      82: if_icmple     102
      85: aload_0
      86: iload_1
      87: iload         4
      89: invokespecial #31                 // Method branchNext:(II)I
      92: istore_1
      93: iload_1
      94: ifge          123
      97: aload_0
      98: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     101: areturn
     102: aload_0
     103: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     110: iload_1
     111: iinc          1, 1
     114: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     119: invokevirtual #33                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     122: pop
     123: aload_0
     124: getfield      #17                 // Field remainingMatchLength_:I
     127: iflt          135
     130: aload_0
     131: invokespecial #34                 // Method truncateAndStop:()Lcom/ibm/icu/util/CharsTrie$Entry;
     134: areturn
     135: aload_0
     136: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     139: iload_1
     140: iinc          1, 1
     143: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     148: istore_2
     149: iload_2
     150: bipush        64
     152: if_icmplt     298
     155: aload_0
     156: getfield      #20                 // Field skipValue_:Z
     159: ifeq          181
     162: iload_1
     163: iload_2
     164: invokestatic  #35                 // Method com/ibm/icu/util/CharsTrie.access$500:(II)I
     167: istore_1
     168: iload_2
     169: bipush        63
     171: iand
     172: istore_2
     173: aload_0
     174: iconst_0
     175: putfield      #20                 // Field skipValue_:Z
     178: goto          298
     181: iload_2
     182: ldc           #36                 // int 32768
     184: iand
     185: ifeq          192
     188: iconst_1
     189: goto          193
     192: iconst_0
     193: istore_3
     194: iload_3
     195: ifeq          221
     198: aload_0
     199: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     202: aload_0
     203: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     206: iload_1
     207: iload_2
     208: sipush        32767
     211: iand
     212: invokestatic  #37                 // Method com/ibm/icu/util/CharsTrie.access$600:(Ljava/lang/CharSequence;II)I
     215: putfield      #38                 // Field com/ibm/icu/util/CharsTrie$Entry.value:I
     218: goto          237
     221: aload_0
     222: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     225: aload_0
     226: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     229: iload_1
     230: iload_2
     231: invokestatic  #39                 // Method com/ibm/icu/util/CharsTrie.access$700:(Ljava/lang/CharSequence;II)I
     234: putfield      #38                 // Field com/ibm/icu/util/CharsTrie$Entry.value:I
     237: iload_3
     238: ifne          262
     241: aload_0
     242: getfield      #18                 // Field maxLength_:I
     245: ifle          270
     248: aload_0
     249: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     252: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     255: aload_0
     256: getfield      #18                 // Field maxLength_:I
     259: if_icmpne     270
     262: aload_0
     263: iconst_m1
     264: putfield      #15                 // Field pos_:I
     267: goto          282
     270: aload_0
     271: iload_1
     272: iconst_1
     273: isub
     274: putfield      #15                 // Field pos_:I
     277: aload_0
     278: iconst_1
     279: putfield      #20                 // Field skipValue_:Z
     282: aload_0
     283: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     286: aload_0
     287: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     290: putfield      #41                 // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
     293: aload_0
     294: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     297: areturn
     298: aload_0
     299: getfield      #18                 // Field maxLength_:I
     302: ifle          324
     305: aload_0
     306: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     309: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     312: aload_0
     313: getfield      #18                 // Field maxLength_:I
     316: if_icmpne     324
     319: aload_0
     320: invokespecial #34                 // Method truncateAndStop:()Lcom/ibm/icu/util/CharsTrie$Entry;
     323: areturn
     324: iload_2
     325: bipush        48
     327: if_icmpge     366
     330: iload_2
     331: ifne          348
     334: aload_0
     335: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     338: iload_1
     339: iinc          1, 1
     342: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     347: istore_2
     348: aload_0
     349: iload_1
     350: iload_2
     351: iconst_1
     352: iadd
     353: invokespecial #31                 // Method branchNext:(II)I
     356: istore_1
     357: iload_1
     358: ifge          448
     361: aload_0
     362: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     365: areturn
     366: iload_2
     367: bipush        48
     369: isub
     370: iconst_1
     371: iadd
     372: istore_3
     373: aload_0
     374: getfield      #18                 // Field maxLength_:I
     377: ifle          428
     380: aload_0
     381: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     384: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     387: iload_3
     388: iadd
     389: aload_0
     390: getfield      #18                 // Field maxLength_:I
     393: if_icmple     428
     396: aload_0
     397: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     400: aload_0
     401: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     404: iload_1
     405: iload_1
     406: aload_0
     407: getfield      #18                 // Field maxLength_:I
     410: iadd
     411: aload_0
     412: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     415: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     418: isub
     419: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     422: pop
     423: aload_0
     424: invokespecial #34                 // Method truncateAndStop:()Lcom/ibm/icu/util/CharsTrie$Entry;
     427: areturn
     428: aload_0
     429: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     432: aload_0
     433: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     436: iload_1
     437: iload_1
     438: iload_3
     439: iadd
     440: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     443: pop
     444: iload_1
     445: iload_3
     446: iadd
     447: istore_1
     448: goto          135

  public void remove();
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private com.ibm.icu.util.CharsTrie$Entry truncateAndStop();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #15                 // Field pos_:I
       5: aload_0
       6: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
       9: aload_0
      10: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
      13: putfield      #41                 // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
      16: aload_0
      17: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
      20: iconst_m1
      21: putfield      #38                 // Field com/ibm/icu/util/CharsTrie$Entry.value:I
      24: aload_0
      25: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
      28: areturn

  private int branchNext(int, int);
    Code:
       0: iload_2
       1: iconst_5
       2: if_icmple     66
       5: iinc          1, 1
       8: aload_0
       9: getfield      #12                 // Field stack_:Ljava/util/ArrayList;
      12: aload_0
      13: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
      16: iload_1
      17: invokestatic  #44                 // Method com/ibm/icu/util/CharsTrie.access$800:(Ljava/lang/CharSequence;I)I
      20: i2l
      21: bipush        32
      23: lshl
      24: iload_2
      25: iload_2
      26: iconst_1
      27: ishr
      28: isub
      29: bipush        16
      31: ishl
      32: i2l
      33: lor
      34: aload_0
      35: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
      38: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
      41: i2l
      42: lor
      43: invokestatic  #45                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      46: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      49: pop
      50: iload_2
      51: iconst_1
      52: ishr
      53: istore_2
      54: aload_0
      55: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
      58: iload_1
      59: invokestatic  #47                 // Method com/ibm/icu/util/CharsTrie.access$900:(Ljava/lang/CharSequence;I)I
      62: istore_1
      63: goto          0
      66: aload_0
      67: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
      70: iload_1
      71: iinc          1, 1
      74: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      79: istore_3
      80: aload_0
      81: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
      84: iload_1
      85: iinc          1, 1
      88: invokeinterface #32,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      93: istore        4
      95: iload         4
      97: ldc           #36                 // int 32768
      99: iand
     100: ifeq          107
     103: iconst_1
     104: goto          108
     107: iconst_0
     108: istore        5
     110: aload_0
     111: getfield      #13                 // Field chars_:Ljava/lang/CharSequence;
     114: iload_1
     115: iload         4
     117: sipush        32767
     120: iand
     121: dup
     122: istore        4
     124: invokestatic  #37                 // Method com/ibm/icu/util/CharsTrie.access$600:(Ljava/lang/CharSequence;II)I
     127: istore        6
     129: iload_1
     130: iload         4
     132: invokestatic  #48                 // Method com/ibm/icu/util/CharsTrie.access$1000:(II)I
     135: istore_1
     136: aload_0
     137: getfield      #12                 // Field stack_:Ljava/util/ArrayList;
     140: iload_1
     141: i2l
     142: bipush        32
     144: lshl
     145: iload_2
     146: iconst_1
     147: isub
     148: bipush        16
     150: ishl
     151: i2l
     152: lor
     153: aload_0
     154: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     157: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     160: i2l
     161: lor
     162: invokestatic  #45                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     165: invokevirtual #46                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     168: pop
     169: aload_0
     170: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     173: iload_3
     174: invokevirtual #33                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     177: pop
     178: iload         5
     180: ifeq          210
     183: aload_0
     184: iconst_m1
     185: putfield      #15                 // Field pos_:I
     188: aload_0
     189: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     192: aload_0
     193: getfield      #6                  // Field str_:Ljava/lang/StringBuilder;
     196: putfield      #41                 // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
     199: aload_0
     200: getfield      #9                  // Field entry_:Lcom/ibm/icu/util/CharsTrie$Entry;
     203: iload         6
     205: putfield      #38                 // Field com/ibm/icu/util/CharsTrie$Entry.value:I
     208: iconst_m1
     209: ireturn
     210: iload_1
     211: iload         6
     213: iadd
     214: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method next:()Lcom/ibm/icu/util/CharsTrie$Entry;
       4: areturn

  com.ibm.icu.util.CharsTrie$Iterator(java.lang.CharSequence, int, int, int, com.ibm.icu.util.CharsTrie$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #2                  // Method "<init>":(Ljava/lang/CharSequence;III)V
       9: return
}
