Compiled from "TimeZone.java"
public abstract class com.ibm.icu.util.TimeZone implements java.io.Serializable, java.lang.Cloneable, com.ibm.icu.util.Freezable<com.ibm.icu.util.TimeZone> {
  private static final java.util.logging.Logger LOGGER;

  private static final long serialVersionUID;

  public static final int TIMEZONE_ICU;

  public static final int TIMEZONE_JDK;

  public static final int SHORT;

  public static final int LONG;

  public static final int SHORT_GENERIC;

  public static final int LONG_GENERIC;

  public static final int SHORT_GMT;

  public static final int LONG_GMT;

  public static final int SHORT_COMMONLY_USED;

  public static final int GENERIC_LOCATION;

  public static final java.lang.String UNKNOWN_ZONE_ID;

  static final java.lang.String GMT_ZONE_ID;

  public static final com.ibm.icu.util.TimeZone UNKNOWN_ZONE;

  public static final com.ibm.icu.util.TimeZone GMT_ZONE;

  private java.lang.String ID;

  private static volatile com.ibm.icu.util.TimeZone defaultZone;

  private static int TZ_IMPL;

  private static final java.lang.String TZIMPL_CONFIG_KEY;

  private static final java.lang.String TZIMPL_CONFIG_ICU;

  private static final java.lang.String TZIMPL_CONFIG_JDK;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.util.TimeZone();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected com.ibm.icu.util.TimeZone(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     16
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: invokespecial #3                  // Method java/lang/NullPointerException."<init>":()V
      15: athrow
      16: aload_0
      17: aload_1
      18: putfield      #4                  // Field ID:Ljava/lang/String;
      21: return

  public abstract int getOffset(int, int, int, int, int, int);

  public int getOffset(long);
    Code:
       0: iconst_2
       1: newarray       int
       3: astore_3
       4: aload_0
       5: lload_1
       6: iconst_0
       7: aload_3
       8: invokevirtual #5                  // Method getOffset:(JZ[I)V
      11: aload_3
      12: iconst_0
      13: iaload
      14: aload_3
      15: iconst_1
      16: iaload
      17: iadd
      18: ireturn

  public void getOffset(long, boolean, int[]);
    Code:
       0: aload         4
       2: iconst_0
       3: aload_0
       4: invokevirtual #6                  // Method getRawOffset:()I
       7: iastore
       8: iload_3
       9: ifne          20
      12: lload_1
      13: aload         4
      15: iconst_0
      16: iaload
      17: i2l
      18: ladd
      19: lstore_1
      20: bipush        6
      22: newarray       int
      24: astore        5
      26: iconst_0
      27: istore        6
      29: lload_1
      30: aload         5
      32: invokestatic  #7                  // Method com/ibm/icu/impl/Grego.timeToFields:(J[I)[I
      35: pop
      36: aload         4
      38: iconst_1
      39: aload_0
      40: iconst_1
      41: aload         5
      43: iconst_0
      44: iaload
      45: aload         5
      47: iconst_1
      48: iaload
      49: aload         5
      51: iconst_2
      52: iaload
      53: aload         5
      55: iconst_3
      56: iaload
      57: aload         5
      59: iconst_5
      60: iaload
      61: invokevirtual #9                  // Method getOffset:(IIIIII)I
      64: aload         4
      66: iconst_0
      67: iaload
      68: isub
      69: iastore
      70: iload         6
      72: ifne          103
      75: iload_3
      76: ifeq          103
      79: aload         4
      81: iconst_1
      82: iaload
      83: ifne          89
      86: goto          103
      89: lload_1
      90: aload         4
      92: iconst_1
      93: iaload
      94: i2l
      95: lsub
      96: lstore_1
      97: iinc          6, 1
     100: goto          29
     103: return

  public abstract void setRawOffset(int);

  public abstract int getRawOffset();

  public java.lang.String getID();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ID:Ljava/lang/String;
       4: areturn

  public void setID(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: invokespecial #3                  // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: invokevirtual #10                 // Method isFrozen:()Z
      16: ifeq          29
      19: new           #11                 // class java/lang/UnsupportedOperationException
      22: dup
      23: ldc           #12                 // String Attempt to modify a frozen TimeZone instance.
      25: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #4                  // Field ID:Ljava/lang/String;
      34: return

  public final java.lang.String getDisplayName();
    Code:
       0: aload_0
       1: iconst_3
       2: iconst_0
       3: getstatic     #15                 // Field com/ibm/icu/util/ULocale$Category.DISPLAY:Lcom/ibm/icu/util/ULocale$Category;
       6: invokestatic  #16                 // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
       9: invokespecial #17                 // Method _getDisplayName:(IZLcom/ibm/icu/util/ULocale;)Ljava/lang/String;
      12: areturn

  public final java.lang.String getDisplayName(java.util.Locale);
    Code:
       0: aload_0
       1: iconst_3
       2: iconst_0
       3: aload_1
       4: invokestatic  #18                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       7: invokespecial #17                 // Method _getDisplayName:(IZLcom/ibm/icu/util/ULocale;)Ljava/lang/String;
      10: areturn

  public final java.lang.String getDisplayName(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: iconst_3
       2: iconst_0
       3: aload_1
       4: invokespecial #17                 // Method _getDisplayName:(IZLcom/ibm/icu/util/ULocale;)Ljava/lang/String;
       7: areturn

  public final java.lang.String getDisplayName(boolean, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: getstatic     #15                 // Field com/ibm/icu/util/ULocale$Category.DISPLAY:Lcom/ibm/icu/util/ULocale$Category;
       6: invokestatic  #16                 // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
       9: invokevirtual #19                 // Method getDisplayName:(ZILcom/ibm/icu/util/ULocale;)Ljava/lang/String;
      12: areturn

  public java.lang.String getDisplayName(boolean, int, java.util.Locale);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #18                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       7: invokevirtual #19                 // Method getDisplayName:(ZILcom/ibm/icu/util/ULocale;)Ljava/lang/String;
      10: areturn

  public java.lang.String getDisplayName(boolean, int, com.ibm.icu.util.ULocale);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: bipush        7
       7: if_icmple     37
      10: new           #20                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #21                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #23                 // String Illegal style:
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_2
      27: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: iload_2
      39: iload_1
      40: aload_3
      41: invokespecial #17                 // Method _getDisplayName:(IZLcom/ibm/icu/util/ULocale;)Ljava/lang/String;
      44: areturn

  private java.lang.String _getDisplayName(int, boolean, com.ibm.icu.util.ULocale);
    Code:
       0: aload_3
       1: ifnonnull     14
       4: new           #2                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #28                 // String locale is null
      10: invokespecial #29                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aconst_null
      15: astore        4
      17: iload_1
      18: bipush        7
      20: if_icmpeq     33
      23: iload_1
      24: iconst_3
      25: if_icmpeq     33
      28: iload_1
      29: iconst_2
      30: if_icmpne     222
      33: aload_3
      34: invokestatic  #30                 // Method com/ibm/icu/text/TimeZoneFormat.getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/TimeZoneFormat;
      37: astore        5
      39: invokestatic  #31                 // Method java/lang/System.currentTimeMillis:()J
      42: lstore        6
      44: new           #32                 // class com/ibm/icu/util/Output
      47: dup
      48: getstatic     #33                 // Field com/ibm/icu/text/TimeZoneFormat$TimeType.UNKNOWN:Lcom/ibm/icu/text/TimeZoneFormat$TimeType;
      51: invokespecial #34                 // Method com/ibm/icu/util/Output."<init>":(Ljava/lang/Object;)V
      54: astore        8
      56: iload_1
      57: lookupswitch  { // 3
                     2: 128
                     3: 110
                     7: 92
               default: 143
          }
      92: aload         5
      94: getstatic     #35                 // Field com/ibm/icu/text/TimeZoneFormat$Style.GENERIC_LOCATION:Lcom/ibm/icu/text/TimeZoneFormat$Style;
      97: aload_0
      98: lload         6
     100: aload         8
     102: invokevirtual #36                 // Method com/ibm/icu/text/TimeZoneFormat.format:(Lcom/ibm/icu/text/TimeZoneFormat$Style;Lcom/ibm/icu/util/TimeZone;JLcom/ibm/icu/util/Output;)Ljava/lang/String;
     105: astore        4
     107: goto          143
     110: aload         5
     112: getstatic     #37                 // Field com/ibm/icu/text/TimeZoneFormat$Style.GENERIC_LONG:Lcom/ibm/icu/text/TimeZoneFormat$Style;
     115: aload_0
     116: lload         6
     118: aload         8
     120: invokevirtual #36                 // Method com/ibm/icu/text/TimeZoneFormat.format:(Lcom/ibm/icu/text/TimeZoneFormat$Style;Lcom/ibm/icu/util/TimeZone;JLcom/ibm/icu/util/Output;)Ljava/lang/String;
     123: astore        4
     125: goto          143
     128: aload         5
     130: getstatic     #38                 // Field com/ibm/icu/text/TimeZoneFormat$Style.GENERIC_SHORT:Lcom/ibm/icu/text/TimeZoneFormat$Style;
     133: aload_0
     134: lload         6
     136: aload         8
     138: invokevirtual #36                 // Method com/ibm/icu/text/TimeZoneFormat.format:(Lcom/ibm/icu/text/TimeZoneFormat$Style;Lcom/ibm/icu/util/TimeZone;JLcom/ibm/icu/util/Output;)Ljava/lang/String;
     141: astore        4
     143: iload_2
     144: ifeq          158
     147: aload         8
     149: getfield      #39                 // Field com/ibm/icu/util/Output.value:Ljava/lang/Object;
     152: getstatic     #40                 // Field com/ibm/icu/text/TimeZoneFormat$TimeType.STANDARD:Lcom/ibm/icu/text/TimeZoneFormat$TimeType;
     155: if_acmpeq     173
     158: iload_2
     159: ifne          219
     162: aload         8
     164: getfield      #39                 // Field com/ibm/icu/util/Output.value:Ljava/lang/Object;
     167: getstatic     #41                 // Field com/ibm/icu/text/TimeZoneFormat$TimeType.DAYLIGHT:Lcom/ibm/icu/text/TimeZoneFormat$TimeType;
     170: if_acmpne     219
     173: iload_2
     174: ifeq          189
     177: aload_0
     178: invokevirtual #6                  // Method getRawOffset:()I
     181: aload_0
     182: invokevirtual #42                 // Method getDSTSavings:()I
     185: iadd
     186: goto          193
     189: aload_0
     190: invokevirtual #6                  // Method getRawOffset:()I
     193: istore        9
     195: iload_1
     196: iconst_2
     197: if_icmpne     210
     200: aload         5
     202: iload         9
     204: invokevirtual #43                 // Method com/ibm/icu/text/TimeZoneFormat.formatOffsetShortLocalizedGMT:(I)Ljava/lang/String;
     207: goto          217
     210: aload         5
     212: iload         9
     214: invokevirtual #44                 // Method com/ibm/icu/text/TimeZoneFormat.formatOffsetLocalizedGMT:(I)Ljava/lang/String;
     217: astore        4
     219: goto          512
     222: iload_1
     223: iconst_5
     224: if_icmpeq     232
     227: iload_1
     228: iconst_4
     229: if_icmpne     323
     232: aload_3
     233: invokestatic  #30                 // Method com/ibm/icu/text/TimeZoneFormat.getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/TimeZoneFormat;
     236: astore        5
     238: iload_2
     239: ifeq          261
     242: aload_0
     243: invokevirtual #45                 // Method useDaylightTime:()Z
     246: ifeq          261
     249: aload_0
     250: invokevirtual #6                  // Method getRawOffset:()I
     253: aload_0
     254: invokevirtual #42                 // Method getDSTSavings:()I
     257: iadd
     258: goto          265
     261: aload_0
     262: invokevirtual #6                  // Method getRawOffset:()I
     265: istore        6
     267: iload_1
     268: lookupswitch  { // 2
                     4: 308
                     5: 296
               default: 320
          }
     296: aload         5
     298: iload         6
     300: invokevirtual #44                 // Method com/ibm/icu/text/TimeZoneFormat.formatOffsetLocalizedGMT:(I)Ljava/lang/String;
     303: astore        4
     305: goto          320
     308: aload         5
     310: iload         6
     312: iconst_0
     313: iconst_0
     314: iconst_0
     315: invokevirtual #46                 // Method com/ibm/icu/text/TimeZoneFormat.formatOffsetISO8601Basic:(IZZZ)Ljava/lang/String;
     318: astore        4
     320: goto          512
     323: getstatic     #47                 // Field $assertionsDisabled:Z
     326: ifne          352
     329: iload_1
     330: iconst_1
     331: if_icmpeq     352
     334: iload_1
     335: ifeq          352
     338: iload_1
     339: bipush        6
     341: if_icmpeq     352
     344: new           #48                 // class java/lang/AssertionError
     347: dup
     348: invokespecial #49                 // Method java/lang/AssertionError."<init>":()V
     351: athrow
     352: invokestatic  #31                 // Method java/lang/System.currentTimeMillis:()J
     355: lstore        5
     357: aload_3
     358: invokestatic  #50                 // Method com/ibm/icu/text/TimeZoneNames.getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/TimeZoneNames;
     361: astore        7
     363: aconst_null
     364: astore        8
     366: iload_1
     367: lookupswitch  { // 3
                     0: 418
                     1: 400
                     6: 418
               default: 433
          }
     400: iload_2
     401: ifeq          410
     404: getstatic     #51                 // Field com/ibm/icu/text/TimeZoneNames$NameType.LONG_DAYLIGHT:Lcom/ibm/icu/text/TimeZoneNames$NameType;
     407: goto          413
     410: getstatic     #52                 // Field com/ibm/icu/text/TimeZoneNames$NameType.LONG_STANDARD:Lcom/ibm/icu/text/TimeZoneNames$NameType;
     413: astore        8
     415: goto          433
     418: iload_2
     419: ifeq          428
     422: getstatic     #53                 // Field com/ibm/icu/text/TimeZoneNames$NameType.SHORT_DAYLIGHT:Lcom/ibm/icu/text/TimeZoneNames$NameType;
     425: goto          431
     428: getstatic     #54                 // Field com/ibm/icu/text/TimeZoneNames$NameType.SHORT_STANDARD:Lcom/ibm/icu/text/TimeZoneNames$NameType;
     431: astore        8
     433: aload         7
     435: aload_0
     436: invokestatic  #55                 // Method com/ibm/icu/impl/ZoneMeta.getCanonicalCLDRID:(Lcom/ibm/icu/util/TimeZone;)Ljava/lang/String;
     439: aload         8
     441: lload         5
     443: invokevirtual #56                 // Method com/ibm/icu/text/TimeZoneNames.getDisplayName:(Ljava/lang/String;Lcom/ibm/icu/text/TimeZoneNames$NameType;J)Ljava/lang/String;
     446: astore        4
     448: aload         4
     450: ifnonnull     512
     453: aload_3
     454: invokestatic  #30                 // Method com/ibm/icu/text/TimeZoneFormat.getInstance:(Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/TimeZoneFormat;
     457: astore        9
     459: iload_2
     460: ifeq          482
     463: aload_0
     464: invokevirtual #45                 // Method useDaylightTime:()Z
     467: ifeq          482
     470: aload_0
     471: invokevirtual #6                  // Method getRawOffset:()I
     474: aload_0
     475: invokevirtual #42                 // Method getDSTSavings:()I
     478: iadd
     479: goto          486
     482: aload_0
     483: invokevirtual #6                  // Method getRawOffset:()I
     486: istore        10
     488: iload_1
     489: iconst_1
     490: if_icmpne     503
     493: aload         9
     495: iload         10
     497: invokevirtual #44                 // Method com/ibm/icu/text/TimeZoneFormat.formatOffsetLocalizedGMT:(I)Ljava/lang/String;
     500: goto          510
     503: aload         9
     505: iload         10
     507: invokevirtual #43                 // Method com/ibm/icu/text/TimeZoneFormat.formatOffsetShortLocalizedGMT:(I)Ljava/lang/String;
     510: astore        4
     512: getstatic     #47                 // Field $assertionsDisabled:Z
     515: ifne          531
     518: aload         4
     520: ifnonnull     531
     523: new           #48                 // class java/lang/AssertionError
     526: dup
     527: invokespecial #49                 // Method java/lang/AssertionError."<init>":()V
     530: athrow
     531: aload         4
     533: areturn

  public int getDSTSavings();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method useDaylightTime:()Z
       4: ifeq          10
       7: ldc           #57                 // int 3600000
       9: ireturn
      10: iconst_0
      11: ireturn

  public abstract boolean useDaylightTime();

  public boolean observesDaylightTime();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method useDaylightTime:()Z
       4: ifne          21
       7: aload_0
       8: new           #58                 // class java/util/Date
      11: dup
      12: invokespecial #59                 // Method java/util/Date."<init>":()V
      15: invokevirtual #60                 // Method inDaylightTime:(Ljava/util/Date;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public abstract boolean inDaylightTime(java.util.Date);

  public static com.ibm.icu.util.TimeZone getTimeZone(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #61                 // Field TZ_IMPL:I
       4: iconst_0
       5: invokestatic  #62                 // Method getTimeZone:(Ljava/lang/String;IZ)Lcom/ibm/icu/util/TimeZone;
       8: areturn

  public static com.ibm.icu.util.TimeZone getFrozenTimeZone(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #61                 // Field TZ_IMPL:I
       4: iconst_1
       5: invokestatic  #62                 // Method getTimeZone:(Ljava/lang/String;IZ)Lcom/ibm/icu/util/TimeZone;
       8: areturn

  public static com.ibm.icu.util.TimeZone getTimeZone(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #62                 // Method getTimeZone:(Ljava/lang/String;IZ)Lcom/ibm/icu/util/TimeZone;
       6: areturn

  private static com.ibm.icu.util.TimeZone getTimeZone(java.lang.String, int, boolean);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     36
       5: aload_0
       6: invokestatic  #63                 // Method com/ibm/icu/impl/JavaTimeZone.createTimeZone:(Ljava/lang/String;)Lcom/ibm/icu/impl/JavaTimeZone;
       9: astore_3
      10: aload_3
      11: ifnull        27
      14: iload_2
      15: ifeq          25
      18: aload_3
      19: invokevirtual #64                 // Method freeze:()Lcom/ibm/icu/util/TimeZone;
      22: goto          26
      25: aload_3
      26: areturn
      27: aload_0
      28: iconst_0
      29: invokestatic  #65                 // Method getFrozenICUTimeZone:(Ljava/lang/String;Z)Lcom/ibm/icu/util/BasicTimeZone;
      32: astore_3
      33: goto          42
      36: aload_0
      37: iconst_1
      38: invokestatic  #65                 // Method getFrozenICUTimeZone:(Ljava/lang/String;Z)Lcom/ibm/icu/util/BasicTimeZone;
      41: astore_3
      42: aload_3
      43: ifnonnull     80
      46: getstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
      49: new           #21                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #67                 // String \"
      58: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_0
      62: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #68                 // String \" is a bogus id so timezone is falling back to Etc/Unknown(GMT).
      67: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokevirtual #69                 // Method java/util/logging/Logger.fine:(Ljava/lang/String;)V
      76: getstatic     #70                 // Field UNKNOWN_ZONE:Lcom/ibm/icu/util/TimeZone;
      79: astore_3
      80: iload_2
      81: ifeq          88
      84: aload_3
      85: goto          92
      88: aload_3
      89: invokevirtual #71                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
      92: areturn

  static com.ibm.icu.util.BasicTimeZone getFrozenICUTimeZone(java.lang.String, boolean);
    Code:
       0: aconst_null
       1: astore_2
       2: iload_1
       3: ifeq          11
       6: aload_0
       7: invokestatic  #72                 // Method com/ibm/icu/impl/ZoneMeta.getSystemTimeZone:(Ljava/lang/String;)Lcom/ibm/icu/impl/OlsonTimeZone;
      10: astore_2
      11: aload_2
      12: ifnonnull     20
      15: aload_0
      16: invokestatic  #73                 // Method com/ibm/icu/impl/ZoneMeta.getCustomTimeZone:(Ljava/lang/String;)Lcom/ibm/icu/util/SimpleTimeZone;
      19: astore_2
      20: aload_2
      21: areturn

  public static synchronized void setDefaultTimeZoneType(int);
    Code:
       0: iload_0
       1: ifeq          19
       4: iload_0
       5: iconst_1
       6: if_icmpeq     19
       9: new           #20                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #74                 // String Invalid timezone type
      15: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: iload_0
      20: putstatic     #61                 // Field TZ_IMPL:I
      23: return

  public static int getDefaultTimeZoneType();
    Code:
       0: getstatic     #61                 // Field TZ_IMPL:I
       3: ireturn

  public static java.util.Set<java.lang.String> getAvailableIDs(com.ibm.icu.util.TimeZone$SystemTimeZoneType, java.lang.String, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #75                 // Method com/ibm/icu/impl/ZoneMeta.getAvailableIDs:(Lcom/ibm/icu/util/TimeZone$SystemTimeZoneType;Ljava/lang/String;Ljava/lang/Integer;)Ljava/util/Set;
       6: areturn

  public static java.lang.String[] getAvailableIDs(int);
    Code:
       0: getstatic     #76                 // Field com/ibm/icu/util/TimeZone$SystemTimeZoneType.ANY:Lcom/ibm/icu/util/TimeZone$SystemTimeZoneType;
       3: aconst_null
       4: iload_0
       5: invokestatic  #77                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: invokestatic  #78                 // Method getAvailableIDs:(Lcom/ibm/icu/util/TimeZone$SystemTimeZoneType;Ljava/lang/String;Ljava/lang/Integer;)Ljava/util/Set;
      11: astore_1
      12: aload_1
      13: iconst_0
      14: anewarray     #79                 // class java/lang/String
      17: invokeinterface #80,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      22: checkcast     #81                 // class "[Ljava/lang/String;"
      25: areturn

  public static java.lang.String[] getAvailableIDs(java.lang.String);
    Code:
       0: getstatic     #76                 // Field com/ibm/icu/util/TimeZone$SystemTimeZoneType.ANY:Lcom/ibm/icu/util/TimeZone$SystemTimeZoneType;
       3: aload_0
       4: aconst_null
       5: invokestatic  #78                 // Method getAvailableIDs:(Lcom/ibm/icu/util/TimeZone$SystemTimeZoneType;Ljava/lang/String;Ljava/lang/Integer;)Ljava/util/Set;
       8: astore_1
       9: aload_1
      10: iconst_0
      11: anewarray     #79                 // class java/lang/String
      14: invokeinterface #80,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: checkcast     #81                 // class "[Ljava/lang/String;"
      22: areturn

  public static java.lang.String[] getAvailableIDs();
    Code:
       0: getstatic     #76                 // Field com/ibm/icu/util/TimeZone$SystemTimeZoneType.ANY:Lcom/ibm/icu/util/TimeZone$SystemTimeZoneType;
       3: aconst_null
       4: aconst_null
       5: invokestatic  #78                 // Method getAvailableIDs:(Lcom/ibm/icu/util/TimeZone$SystemTimeZoneType;Ljava/lang/String;Ljava/lang/Integer;)Ljava/util/Set;
       8: astore_0
       9: aload_0
      10: iconst_0
      11: anewarray     #79                 // class java/lang/String
      14: invokeinterface #80,  2           // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: checkcast     #81                 // class "[Ljava/lang/String;"
      22: areturn

  public static int countEquivalentIDs(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #82                 // Method com/ibm/icu/impl/ZoneMeta.countEquivalentIDs:(Ljava/lang/String;)I
       4: ireturn

  public static java.lang.String getEquivalentID(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #83                 // Method com/ibm/icu/impl/ZoneMeta.getEquivalentID:(Ljava/lang/String;I)Ljava/lang/String;
       5: areturn

  public static com.ibm.icu.util.TimeZone getDefault();
    Code:
       0: getstatic     #84                 // Field defaultZone:Lcom/ibm/icu/util/TimeZone;
       3: astore_0
       4: aload_0
       5: ifnonnull     84
       8: ldc           #85                 // class java/util/TimeZone
      10: dup
      11: astore_1
      12: monitorenter
      13: ldc           #14                 // class com/ibm/icu/util/TimeZone
      15: dup
      16: astore_2
      17: monitorenter
      18: getstatic     #84                 // Field defaultZone:Lcom/ibm/icu/util/TimeZone;
      21: astore_0
      22: aload_0
      23: ifnonnull     60
      26: getstatic     #61                 // Field TZ_IMPL:I
      29: iconst_1
      30: if_icmpne     44
      33: new           #86                 // class com/ibm/icu/impl/JavaTimeZone
      36: dup
      37: invokespecial #87                 // Method com/ibm/icu/impl/JavaTimeZone."<init>":()V
      40: astore_0
      41: goto          56
      44: invokestatic  #88                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      47: astore_3
      48: aload_3
      49: invokevirtual #89                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      52: invokestatic  #90                 // Method getFrozenTimeZone:(Ljava/lang/String;)Lcom/ibm/icu/util/TimeZone;
      55: astore_0
      56: aload_0
      57: putstatic     #84                 // Field defaultZone:Lcom/ibm/icu/util/TimeZone;
      60: aload_2
      61: monitorexit
      62: goto          72
      65: astore        4
      67: aload_2
      68: monitorexit
      69: aload         4
      71: athrow
      72: aload_1
      73: monitorexit
      74: goto          84
      77: astore        5
      79: aload_1
      80: monitorexit
      81: aload         5
      83: athrow
      84: aload_0
      85: invokevirtual #71                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
      88: areturn
    Exception table:
       from    to  target type
          18    62    65   any
          65    69    65   any
          13    74    77   any
          77    81    77   any

  public static synchronized void setDefault(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: invokestatic  #91                 // Method setICUDefault:(Lcom/ibm/icu/util/TimeZone;)V
       4: aload_0
       5: ifnull        92
       8: aconst_null
       9: astore_1
      10: aload_0
      11: instanceof    #86                 // class com/ibm/icu/impl/JavaTimeZone
      14: ifeq          28
      17: aload_0
      18: checkcast     #86                 // class com/ibm/icu/impl/JavaTimeZone
      21: invokevirtual #92                 // Method com/ibm/icu/impl/JavaTimeZone.unwrap:()Ljava/util/TimeZone;
      24: astore_1
      25: goto          79
      28: aload_0
      29: instanceof    #93                 // class com/ibm/icu/impl/OlsonTimeZone
      32: ifeq          79
      35: aload_0
      36: invokevirtual #94                 // Method getID:()Ljava/lang/String;
      39: astore_2
      40: aload_2
      41: invokestatic  #95                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      44: astore_1
      45: aload_2
      46: aload_1
      47: invokevirtual #89                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      50: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      53: ifne          79
      56: aload_2
      57: invokestatic  #97                 // Method getCanonicalID:(Ljava/lang/String;)Ljava/lang/String;
      60: astore_2
      61: aload_2
      62: invokestatic  #95                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      65: astore_1
      66: aload_2
      67: aload_1
      68: invokevirtual #89                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      71: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifne          79
      77: aconst_null
      78: astore_1
      79: aload_1
      80: ifnonnull     88
      83: aload_0
      84: invokestatic  #98                 // Method com/ibm/icu/impl/TimeZoneAdapter.wrap:(Lcom/ibm/icu/util/TimeZone;)Ljava/util/TimeZone;
      87: astore_1
      88: aload_1
      89: invokestatic  #99                 // Method java/util/TimeZone.setDefault:(Ljava/util/TimeZone;)V
      92: return

  public static synchronized void setICUDefault(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: ifnonnull     11
       4: aconst_null
       5: putstatic     #84                 // Field defaultZone:Lcom/ibm/icu/util/TimeZone;
       8: goto          38
      11: aload_0
      12: invokevirtual #10                 // Method isFrozen:()Z
      15: ifeq          25
      18: aload_0
      19: putstatic     #84                 // Field defaultZone:Lcom/ibm/icu/util/TimeZone;
      22: goto          38
      25: aload_0
      26: invokevirtual #100                // Method clone:()Ljava/lang/Object;
      29: checkcast     #14                 // class com/ibm/icu/util/TimeZone
      32: invokevirtual #64                 // Method freeze:()Lcom/ibm/icu/util/TimeZone;
      35: putstatic     #84                 // Field defaultZone:Lcom/ibm/icu/util/TimeZone;
      38: return

  public boolean hasSameRules(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_1
       1: ifnull        30
       4: aload_0
       5: invokevirtual #6                  // Method getRawOffset:()I
       8: aload_1
       9: invokevirtual #6                  // Method getRawOffset:()I
      12: if_icmpne     30
      15: aload_0
      16: invokevirtual #45                 // Method useDaylightTime:()Z
      19: aload_1
      20: invokevirtual #45                 // Method useDaylightTime:()Z
      23: if_icmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isFrozen:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #71                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
      13: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #101                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #101                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #4                  // Field ID:Ljava/lang/String;
      28: aload_1
      29: checkcast     #14                 // class com/ibm/icu/util/TimeZone
      32: getfield      #4                  // Field ID:Ljava/lang/String;
      35: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      38: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ID:Ljava/lang/String;
       4: invokevirtual #102                // Method java/lang/String.hashCode:()I
       7: ireturn

  public static java.lang.String getTZDataVersion();
    Code:
       0: invokestatic  #103                // Method com/ibm/icu/util/VersionInfo.getTZDataVersion:()Ljava/lang/String;
       3: areturn

  public static java.lang.String getCanonicalID(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #104                // Method getCanonicalID:(Ljava/lang/String;[Z)Ljava/lang/String;
       5: areturn

  public static java.lang.String getCanonicalID(java.lang.String, boolean[]);
    Code:
       0: aconst_null
       1: astore_2
       2: iconst_0
       3: istore_3
       4: aload_0
       5: ifnull        51
       8: aload_0
       9: invokevirtual #105                // Method java/lang/String.length:()I
      12: ifeq          51
      15: aload_0
      16: ldc           #106                // String Etc/Unknown
      18: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          32
      24: ldc           #106                // String Etc/Unknown
      26: astore_2
      27: iconst_0
      28: istore_3
      29: goto          51
      32: aload_0
      33: invokestatic  #107                // Method com/ibm/icu/impl/ZoneMeta.getCanonicalCLDRID:(Ljava/lang/String;)Ljava/lang/String;
      36: astore_2
      37: aload_2
      38: ifnull        46
      41: iconst_1
      42: istore_3
      43: goto          51
      46: aload_0
      47: invokestatic  #108                // Method com/ibm/icu/impl/ZoneMeta.getCustomID:(Ljava/lang/String;)Ljava/lang/String;
      50: astore_2
      51: aload_1
      52: ifnull        59
      55: aload_1
      56: iconst_0
      57: iload_3
      58: bastore
      59: aload_2
      60: areturn

  public static java.lang.String getRegion(java.lang.String);
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: ldc           #106                // String Etc/Unknown
       5: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifne          16
      11: aload_0
      12: invokestatic  #109                // Method com/ibm/icu/impl/ZoneMeta.getRegion:(Ljava/lang/String;)Ljava/lang/String;
      15: astore_1
      16: aload_1
      17: ifnonnull     47
      20: new           #20                 // class java/lang/IllegalArgumentException
      23: dup
      24: new           #21                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #110                // String Unknown system zone id:
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_1
      48: areturn

  public static java.lang.String getWindowsID(java.lang.String);
    Code:
       0: iconst_1
       1: newarray       boolean
       3: dup
       4: iconst_0
       5: iconst_0
       6: bastore
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokestatic  #104                // Method getCanonicalID:(Ljava/lang/String;[Z)Ljava/lang/String;
      13: astore_0
      14: aload_1
      15: iconst_0
      16: baload
      17: ifne          22
      20: aconst_null
      21: areturn
      22: ldc           #112                // String com/ibm/icu/impl/data/icudt61b
      24: ldc           #113                // String windowsZones
      26: getstatic     #114                // Field com/ibm/icu/impl/ICUResourceBundle.ICU_DATA_CLASS_LOADER:Ljava/lang/ClassLoader;
      29: invokestatic  #115                // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Lcom/ibm/icu/util/UResourceBundle;
      32: astore_2
      33: aload_2
      34: ldc           #116                // String mapTimezones
      36: invokevirtual #117                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      39: astore_3
      40: aload_3
      41: invokevirtual #118                // Method com/ibm/icu/util/UResourceBundle.getIterator:()Lcom/ibm/icu/util/UResourceBundleIterator;
      44: astore        4
      46: aload         4
      48: invokevirtual #119                // Method com/ibm/icu/util/UResourceBundleIterator.hasNext:()Z
      51: ifeq          171
      54: aload         4
      56: invokevirtual #120                // Method com/ibm/icu/util/UResourceBundleIterator.next:()Lcom/ibm/icu/util/UResourceBundle;
      59: astore        5
      61: aload         5
      63: invokevirtual #121                // Method com/ibm/icu/util/UResourceBundle.getType:()I
      66: iconst_2
      67: if_icmpeq     73
      70: goto          46
      73: aload         5
      75: invokevirtual #118                // Method com/ibm/icu/util/UResourceBundle.getIterator:()Lcom/ibm/icu/util/UResourceBundleIterator;
      78: astore        6
      80: aload         6
      82: invokevirtual #119                // Method com/ibm/icu/util/UResourceBundleIterator.hasNext:()Z
      85: ifeq          168
      88: aload         6
      90: invokevirtual #120                // Method com/ibm/icu/util/UResourceBundleIterator.next:()Lcom/ibm/icu/util/UResourceBundle;
      93: astore        7
      95: aload         7
      97: invokevirtual #121                // Method com/ibm/icu/util/UResourceBundle.getType:()I
     100: ifeq          106
     103: goto          80
     106: aload         7
     108: invokevirtual #123                // Method com/ibm/icu/util/UResourceBundle.getString:()Ljava/lang/String;
     111: ldc           #124                // String
     113: invokevirtual #125                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     116: astore        8
     118: aload         8
     120: astore        9
     122: aload         9
     124: arraylength
     125: istore        10
     127: iconst_0
     128: istore        11
     130: iload         11
     132: iload         10
     134: if_icmpge     165
     137: aload         9
     139: iload         11
     141: aaload
     142: astore        12
     144: aload         12
     146: aload_0
     147: invokevirtual #96                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     150: ifeq          159
     153: aload         5
     155: invokevirtual #126                // Method com/ibm/icu/util/UResourceBundle.getKey:()Ljava/lang/String;
     158: areturn
     159: iinc          11, 1
     162: goto          130
     165: goto          80
     168: goto          46
     171: aconst_null
     172: areturn

  public static java.lang.String getIDForWindowsID(java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: ldc           #112                // String com/ibm/icu/impl/data/icudt61b
       4: ldc           #113                // String windowsZones
       6: getstatic     #114                // Field com/ibm/icu/impl/ICUResourceBundle.ICU_DATA_CLASS_LOADER:Ljava/lang/ClassLoader;
       9: invokestatic  #115                // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Lcom/ibm/icu/util/UResourceBundle;
      12: astore_3
      13: aload_3
      14: ldc           #116                // String mapTimezones
      16: invokevirtual #117                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      19: astore        4
      21: aload         4
      23: aload_0
      24: invokevirtual #117                // Method com/ibm/icu/util/UResourceBundle.get:(Ljava/lang/String;)Lcom/ibm/icu/util/UResourceBundle;
      27: astore        5
      29: aload_1
      30: ifnull        70
      33: aload         5
      35: aload_1
      36: invokevirtual #127                // Method com/ibm/icu/util/UResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      39: astore_2
      40: aload_2
      41: ifnull        65
      44: aload_2
      45: bipush        32
      47: invokevirtual #128                // Method java/lang/String.indexOf:(I)I
      50: istore        6
      52: iload         6
      54: ifle          65
      57: aload_2
      58: iconst_0
      59: iload         6
      61: invokevirtual #129                // Method java/lang/String.substring:(II)Ljava/lang/String;
      64: astore_2
      65: goto          70
      68: astore        6
      70: aload_2
      71: ifnonnull     82
      74: aload         5
      76: ldc           #131                // String 001
      78: invokevirtual #127                // Method com/ibm/icu/util/UResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      81: astore_2
      82: goto          87
      85: astore        5
      87: aload_2
      88: areturn
    Exception table:
       from    to  target type
          33    65    68   Class java/util/MissingResourceException
          21    82    85   Class java/util/MissingResourceException

  public boolean isFrozen();
    Code:
       0: iconst_0
       1: ireturn

  public com.ibm.icu.util.TimeZone freeze();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #132                // String Needs to be implemented by the subclass.
       6: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public com.ibm.icu.util.TimeZone cloneAsThawed();
    Code:
       0: aload_0
       1: invokespecial #133                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #14                 // class com/ibm/icu/util/TimeZone
       7: astore_1
       8: aload_1
       9: areturn
      10: astore_1
      11: new           #135                // class com/ibm/icu/util/ICUCloneNotSupportedException
      14: dup
      15: aload_1
      16: invokespecial #136                // Method com/ibm/icu/util/ICUCloneNotSupportedException."<init>":(Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/CloneNotSupportedException

  public java.lang.Object cloneAsThawed();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
       4: areturn

  public java.lang.Object freeze();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method freeze:()Lcom/ibm/icu/util/TimeZone;
       4: areturn

  static {};
    Code:
       0: ldc           #14                 // class com/ibm/icu/util/TimeZone
       2: invokevirtual #137                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #47                 // Field $assertionsDisabled:Z
      16: ldc           #138                // String com.ibm.icu.util.TimeZone
      18: invokestatic  #139                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      21: putstatic     #66                 // Field LOGGER:Ljava/util/logging/Logger;
      24: new           #140                // class com/ibm/icu/util/TimeZone$ConstantZone
      27: dup
      28: iconst_0
      29: ldc           #106                // String Etc/Unknown
      31: aconst_null
      32: invokespecial #141                // Method com/ibm/icu/util/TimeZone$ConstantZone."<init>":(ILjava/lang/String;Lcom/ibm/icu/util/TimeZone$1;)V
      35: invokevirtual #142                // Method com/ibm/icu/util/TimeZone$ConstantZone.freeze:()Lcom/ibm/icu/util/TimeZone;
      38: putstatic     #70                 // Field UNKNOWN_ZONE:Lcom/ibm/icu/util/TimeZone;
      41: new           #140                // class com/ibm/icu/util/TimeZone$ConstantZone
      44: dup
      45: iconst_0
      46: ldc           #143                // String Etc/GMT
      48: aconst_null
      49: invokespecial #141                // Method com/ibm/icu/util/TimeZone$ConstantZone."<init>":(ILjava/lang/String;Lcom/ibm/icu/util/TimeZone$1;)V
      52: invokevirtual #142                // Method com/ibm/icu/util/TimeZone$ConstantZone.freeze:()Lcom/ibm/icu/util/TimeZone;
      55: putstatic     #144                // Field GMT_ZONE:Lcom/ibm/icu/util/TimeZone;
      58: aconst_null
      59: putstatic     #84                 // Field defaultZone:Lcom/ibm/icu/util/TimeZone;
      62: iconst_0
      63: putstatic     #61                 // Field TZ_IMPL:I
      66: ldc           #145                // String com.ibm.icu.util.TimeZone.DefaultTimeZoneType
      68: ldc           #146                // String ICU
      70: invokestatic  #147                // Method com/ibm/icu/impl/ICUConfig.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      73: astore_0
      74: aload_0
      75: ldc           #148                // String JDK
      77: invokevirtual #149                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      80: ifeq          87
      83: iconst_1
      84: putstatic     #61                 // Field TZ_IMPL:I
      87: return
}
