Compiled from "StringTrieBuilder.java"
final class com.ibm.icu.util.StringTrieBuilder$LinearMatchNode extends com.ibm.icu.util.StringTrieBuilder$ValueNode {
  private java.lang.CharSequence strings;

  private int stringOffset;

  private int length;

  private com.ibm.icu.util.StringTrieBuilder$Node next;

  private int hash;

  public com.ibm.icu.util.StringTrieBuilder$LinearMatchNode(java.lang.CharSequence, int, int, com.ibm.icu.util.StringTrieBuilder$Node);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/util/StringTrieBuilder$ValueNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field strings:Ljava/lang/CharSequence;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field stringOffset:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field length:I
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      25: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hash:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #7                  // Method com/ibm/icu/util/StringTrieBuilder$ValueNode.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: checkcast     #8                  // class com/ibm/icu/util/StringTrieBuilder$LinearMatchNode
      21: astore_2
      22: aload_0
      23: getfield      #4                  // Field length:I
      26: aload_2
      27: getfield      #4                  // Field length:I
      30: if_icmpne     44
      33: aload_0
      34: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      37: aload_2
      38: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      41: if_acmpeq     46
      44: iconst_0
      45: ireturn
      46: aload_0
      47: getfield      #3                  // Field stringOffset:I
      50: istore_3
      51: aload_2
      52: getfield      #3                  // Field stringOffset:I
      55: istore        4
      57: aload_0
      58: getfield      #3                  // Field stringOffset:I
      61: aload_0
      62: getfield      #4                  // Field length:I
      65: iadd
      66: istore        5
      68: iload_3
      69: iload         5
      71: if_icmpge     109
      74: aload_0
      75: getfield      #2                  // Field strings:Ljava/lang/CharSequence;
      78: iload_3
      79: invokeinterface #9,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      84: aload_0
      85: getfield      #2                  // Field strings:Ljava/lang/CharSequence;
      88: iload         4
      90: invokeinterface #9,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      95: if_icmpeq     100
      98: iconst_0
      99: ireturn
     100: iinc          3, 1
     103: iinc          4, 1
     106: goto          68
     109: iconst_1
     110: ireturn

  public com.ibm.icu.util.StringTrieBuilder$Node add(com.ibm.icu.util.StringTrieBuilder, java.lang.CharSequence, int, int);
    Code:
       0: iload_3
       1: aload_2
       2: invokeinterface #10,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       7: if_icmpne     35
      10: aload_0
      11: getfield      #11                 // Field hasValue:Z
      14: ifeq          27
      17: new           #12                 // class java/lang/IllegalArgumentException
      20: dup
      21: ldc           #13                 // String Duplicate string.
      23: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: iload         4
      30: invokevirtual #15                 // Method setValue:(I)V
      33: aload_0
      34: areturn
      35: aload_0
      36: getfield      #3                  // Field stringOffset:I
      39: aload_0
      40: getfield      #4                  // Field length:I
      43: iadd
      44: istore        5
      46: aload_0
      47: getfield      #3                  // Field stringOffset:I
      50: istore        6
      52: iload         6
      54: iload         5
      56: if_icmpge     376
      59: iload_3
      60: aload_2
      61: invokeinterface #10,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      66: if_icmpne     125
      69: iload         6
      71: aload_0
      72: getfield      #3                  // Field stringOffset:I
      75: isub
      76: istore        7
      78: new           #8                  // class com/ibm/icu/util/StringTrieBuilder$LinearMatchNode
      81: dup
      82: aload_0
      83: getfield      #2                  // Field strings:Ljava/lang/CharSequence;
      86: iload         6
      88: aload_0
      89: getfield      #4                  // Field length:I
      92: iload         7
      94: isub
      95: aload_0
      96: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      99: invokespecial #16                 // Method "<init>":(Ljava/lang/CharSequence;IILcom/ibm/icu/util/StringTrieBuilder$Node;)V
     102: astore        8
     104: aload         8
     106: iload         4
     108: invokevirtual #15                 // Method setValue:(I)V
     111: aload_0
     112: iload         7
     114: putfield      #4                  // Field length:I
     117: aload_0
     118: aload         8
     120: putfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     123: aload_0
     124: areturn
     125: aload_0
     126: getfield      #2                  // Field strings:Ljava/lang/CharSequence;
     129: iload         6
     131: invokeinterface #9,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     136: istore        7
     138: aload_2
     139: iload_3
     140: invokeinterface #9,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     145: istore        8
     147: iload         7
     149: iload         8
     151: if_icmpeq     367
     154: new           #17                 // class com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode
     157: dup
     158: invokespecial #18                 // Method com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode."<init>":()V
     161: astore        9
     163: iload         6
     165: aload_0
     166: getfield      #3                  // Field stringOffset:I
     169: if_icmpne     242
     172: aload_0
     173: getfield      #11                 // Field hasValue:Z
     176: ifeq          198
     179: aload         9
     181: aload_0
     182: getfield      #19                 // Field value:I
     185: invokevirtual #20                 // Method com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode.setValue:(I)V
     188: aload_0
     189: iconst_0
     190: putfield      #19                 // Field value:I
     193: aload_0
     194: iconst_0
     195: putfield      #11                 // Field hasValue:Z
     198: aload_0
     199: dup
     200: getfield      #3                  // Field stringOffset:I
     203: iconst_1
     204: iadd
     205: putfield      #3                  // Field stringOffset:I
     208: aload_0
     209: dup
     210: getfield      #4                  // Field length:I
     213: iconst_1
     214: isub
     215: putfield      #4                  // Field length:I
     218: aload_0
     219: getfield      #4                  // Field length:I
     222: ifle          229
     225: aload_0
     226: goto          233
     229: aload_0
     230: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     233: astore        11
     235: aload         9
     237: astore        10
     239: goto          334
     242: iload         6
     244: iload         5
     246: iconst_1
     247: isub
     248: if_icmpne     279
     251: aload_0
     252: dup
     253: getfield      #4                  // Field length:I
     256: iconst_1
     257: isub
     258: putfield      #4                  // Field length:I
     261: aload_0
     262: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     265: astore        11
     267: aload_0
     268: aload         9
     270: putfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     273: aload_0
     274: astore        10
     276: goto          334
     279: iload         6
     281: aload_0
     282: getfield      #3                  // Field stringOffset:I
     285: isub
     286: istore        12
     288: iinc          6, 1
     291: new           #8                  // class com/ibm/icu/util/StringTrieBuilder$LinearMatchNode
     294: dup
     295: aload_0
     296: getfield      #2                  // Field strings:Ljava/lang/CharSequence;
     299: iload         6
     301: aload_0
     302: getfield      #4                  // Field length:I
     305: iload         12
     307: iconst_1
     308: iadd
     309: isub
     310: aload_0
     311: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     314: invokespecial #16                 // Method "<init>":(Ljava/lang/CharSequence;IILcom/ibm/icu/util/StringTrieBuilder$Node;)V
     317: astore        11
     319: aload_0
     320: iload         12
     322: putfield      #4                  // Field length:I
     325: aload_0
     326: aload         9
     328: putfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     331: aload_0
     332: astore        10
     334: aload_1
     335: aload_2
     336: iload_3
     337: iconst_1
     338: iadd
     339: iload         4
     341: invokestatic  #21                 // Method com/ibm/icu/util/StringTrieBuilder.access$100:(Lcom/ibm/icu/util/StringTrieBuilder;Ljava/lang/CharSequence;II)Lcom/ibm/icu/util/StringTrieBuilder$ValueNode;
     344: astore        12
     346: aload         9
     348: iload         7
     350: aload         11
     352: invokevirtual #22                 // Method com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode.add:(CLcom/ibm/icu/util/StringTrieBuilder$Node;)V
     355: aload         9
     357: iload         8
     359: aload         12
     361: invokevirtual #22                 // Method com/ibm/icu/util/StringTrieBuilder$DynamicBranchNode.add:(CLcom/ibm/icu/util/StringTrieBuilder$Node;)V
     364: aload         10
     366: areturn
     367: iinc          6, 1
     370: iinc          3, 1
     373: goto          52
     376: aload_0
     377: aload_0
     378: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     381: aload_1
     382: aload_2
     383: iload_3
     384: iload         4
     386: invokevirtual #23                 // Method com/ibm/icu/util/StringTrieBuilder$Node.add:(Lcom/ibm/icu/util/StringTrieBuilder;Ljava/lang/CharSequence;II)Lcom/ibm/icu/util/StringTrieBuilder$Node;
     389: putfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
     392: aload_0
     393: areturn

  public com.ibm.icu.util.StringTrieBuilder$Node register(com.ibm.icu.util.StringTrieBuilder);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
       5: aload_1
       6: invokevirtual #24                 // Method com/ibm/icu/util/StringTrieBuilder$Node.register:(Lcom/ibm/icu/util/StringTrieBuilder;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
       9: putfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      12: aload_1
      13: invokevirtual #25                 // Method com/ibm/icu/util/StringTrieBuilder.getMaxLinearMatchLength:()I
      16: istore_2
      17: aload_0
      18: getfield      #4                  // Field length:I
      21: iload_2
      22: if_icmple     84
      25: aload_0
      26: getfield      #3                  // Field stringOffset:I
      29: aload_0
      30: getfield      #4                  // Field length:I
      33: iadd
      34: iload_2
      35: isub
      36: istore_3
      37: aload_0
      38: dup
      39: getfield      #4                  // Field length:I
      42: iload_2
      43: isub
      44: putfield      #4                  // Field length:I
      47: new           #8                  // class com/ibm/icu/util/StringTrieBuilder$LinearMatchNode
      50: dup
      51: aload_0
      52: getfield      #2                  // Field strings:Ljava/lang/CharSequence;
      55: iload_3
      56: iload_2
      57: aload_0
      58: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      61: invokespecial #16                 // Method "<init>":(Ljava/lang/CharSequence;IILcom/ibm/icu/util/StringTrieBuilder$Node;)V
      64: astore        4
      66: aload         4
      68: invokespecial #26                 // Method setHashCode:()V
      71: aload_0
      72: aload_1
      73: aload         4
      75: invokestatic  #27                 // Method com/ibm/icu/util/StringTrieBuilder.access$200:(Lcom/ibm/icu/util/StringTrieBuilder;Lcom/ibm/icu/util/StringTrieBuilder$Node;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
      78: putfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      81: goto          17
      84: aload_0
      85: getfield      #11                 // Field hasValue:Z
      88: ifeq          136
      91: aload_1
      92: invokevirtual #28                 // Method com/ibm/icu/util/StringTrieBuilder.matchNodesCanHaveValues:()Z
      95: ifne          136
      98: aload_0
      99: getfield      #19                 // Field value:I
     102: istore        4
     104: aload_0
     105: iconst_0
     106: putfield      #19                 // Field value:I
     109: aload_0
     110: iconst_0
     111: putfield      #11                 // Field hasValue:Z
     114: aload_0
     115: invokespecial #26                 // Method setHashCode:()V
     118: new           #29                 // class com/ibm/icu/util/StringTrieBuilder$IntermediateValueNode
     121: dup
     122: iload         4
     124: aload_1
     125: aload_0
     126: invokestatic  #27                 // Method com/ibm/icu/util/StringTrieBuilder.access$200:(Lcom/ibm/icu/util/StringTrieBuilder;Lcom/ibm/icu/util/StringTrieBuilder$Node;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
     129: invokespecial #30                 // Method com/ibm/icu/util/StringTrieBuilder$IntermediateValueNode."<init>":(ILcom/ibm/icu/util/StringTrieBuilder$Node;)V
     132: astore_3
     133: goto          142
     136: aload_0
     137: invokespecial #26                 // Method setHashCode:()V
     140: aload_0
     141: astore_3
     142: aload_1
     143: aload_3
     144: invokestatic  #27                 // Method com/ibm/icu/util/StringTrieBuilder.access$200:(Lcom/ibm/icu/util/StringTrieBuilder;Lcom/ibm/icu/util/StringTrieBuilder$Node;)Lcom/ibm/icu/util/StringTrieBuilder$Node;
     147: areturn

  public int markRightEdgesFirst(int);
    Code:
       0: aload_0
       1: getfield      #31                 // Field offset:I
       4: ifne          21
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      12: iload_1
      13: invokevirtual #32                 // Method com/ibm/icu/util/StringTrieBuilder$Node.markRightEdgesFirst:(I)I
      16: dup
      17: istore_1
      18: putfield      #31                 // Field offset:I
      21: iload_1
      22: ireturn

  public void write(com.ibm.icu.util.StringTrieBuilder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
       4: aload_1
       5: invokevirtual #33                 // Method com/ibm/icu/util/StringTrieBuilder$Node.write:(Lcom/ibm/icu/util/StringTrieBuilder;)V
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field stringOffset:I
      13: aload_0
      14: getfield      #4                  // Field length:I
      17: invokevirtual #34                 // Method com/ibm/icu/util/StringTrieBuilder.write:(II)I
      20: pop
      21: aload_0
      22: aload_1
      23: aload_0
      24: getfield      #11                 // Field hasValue:Z
      27: aload_0
      28: getfield      #19                 // Field value:I
      31: aload_1
      32: invokevirtual #35                 // Method com/ibm/icu/util/StringTrieBuilder.getMinLinearMatch:()I
      35: aload_0
      36: getfield      #4                  // Field length:I
      39: iadd
      40: iconst_1
      41: isub
      42: invokevirtual #36                 // Method com/ibm/icu/util/StringTrieBuilder.writeValueAndType:(ZII)I
      45: putfield      #31                 // Field offset:I
      48: return

  private void setHashCode();
    Code:
       0: aload_0
       1: ldc           #37                 // int 124151391
       3: aload_0
       4: getfield      #4                  // Field length:I
       7: iadd
       8: bipush        37
      10: imul
      11: aload_0
      12: getfield      #5                  // Field next:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      15: invokevirtual #38                 // Method com/ibm/icu/util/StringTrieBuilder$Node.hashCode:()I
      18: iadd
      19: putfield      #6                  // Field hash:I
      22: aload_0
      23: getfield      #11                 // Field hasValue:Z
      26: ifeq          45
      29: aload_0
      30: aload_0
      31: getfield      #6                  // Field hash:I
      34: bipush        37
      36: imul
      37: aload_0
      38: getfield      #19                 // Field value:I
      41: iadd
      42: putfield      #6                  // Field hash:I
      45: aload_0
      46: getfield      #3                  // Field stringOffset:I
      49: istore_1
      50: aload_0
      51: getfield      #3                  // Field stringOffset:I
      54: aload_0
      55: getfield      #4                  // Field length:I
      58: iadd
      59: istore_2
      60: iload_1
      61: iload_2
      62: if_icmpge     93
      65: aload_0
      66: aload_0
      67: getfield      #6                  // Field hash:I
      70: bipush        37
      72: imul
      73: aload_0
      74: getfield      #2                  // Field strings:Ljava/lang/CharSequence;
      77: iload_1
      78: invokeinterface #9,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      83: iadd
      84: putfield      #6                  // Field hash:I
      87: iinc          1, 1
      90: goto          60
      93: return
}
