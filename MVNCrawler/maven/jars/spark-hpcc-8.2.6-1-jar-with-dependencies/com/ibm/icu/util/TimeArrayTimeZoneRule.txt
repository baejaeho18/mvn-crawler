Compiled from "TimeArrayTimeZoneRule.java"
public class com.ibm.icu.util.TimeArrayTimeZoneRule extends com.ibm.icu.util.TimeZoneRule {
  private static final long serialVersionUID;

  private final long[] startTimes;

  private final int timeType;

  public com.ibm.icu.util.TimeArrayTimeZoneRule(java.lang.String, int, int, long[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #1                  // Method com/ibm/icu/util/TimeZoneRule."<init>":(Ljava/lang/String;II)V
       7: aload         4
       9: ifnull        18
      12: aload         4
      14: arraylength
      15: ifne          28
      18: new           #2                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #3                  // String No start times are specified.
      24: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: aload         4
      31: invokevirtual #5                  // Method "[J".clone:()Ljava/lang/Object;
      34: checkcast     #6                  // class "[J"
      37: putfield      #7                  // Field startTimes:[J
      40: aload_0
      41: getfield      #7                  // Field startTimes:[J
      44: invokestatic  #8                  // Method java/util/Arrays.sort:([J)V
      47: aload_0
      48: iload         5
      50: putfield      #9                  // Field timeType:I
      53: return

  public long[] getStartTimes();
    Code:
       0: aload_0
       1: getfield      #7                  // Field startTimes:[J
       4: invokevirtual #10                 // Method "[J".clone:()Ljava/lang/Object;
       7: checkcast     #6                  // class "[J"
      10: areturn

  public int getTimeType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field timeType:I
       4: ireturn

  public java.util.Date getFirstStart(int, int);
    Code:
       0: new           #11                 // class java/util/Date
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #7                  // Field startTimes:[J
       9: iconst_0
      10: laload
      11: iload_1
      12: iload_2
      13: invokespecial #12                 // Method getUTC:(JII)J
      16: invokespecial #13                 // Method java/util/Date."<init>":(J)V
      19: areturn

  public java.util.Date getFinalStart(int, int);
    Code:
       0: new           #11                 // class java/util/Date
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #7                  // Field startTimes:[J
       9: aload_0
      10: getfield      #7                  // Field startTimes:[J
      13: arraylength
      14: iconst_1
      15: isub
      16: laload
      17: iload_1
      18: iload_2
      19: invokespecial #12                 // Method getUTC:(JII)J
      22: invokespecial #13                 // Method java/util/Date."<init>":(J)V
      25: areturn

  public java.util.Date getNextStart(long, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field startTimes:[J
       4: arraylength
       5: iconst_1
       6: isub
       7: istore        6
       9: iload         6
      11: iflt          58
      14: aload_0
      15: aload_0
      16: getfield      #7                  // Field startTimes:[J
      19: iload         6
      21: laload
      22: iload_3
      23: iload         4
      25: invokespecial #12                 // Method getUTC:(JII)J
      28: lstore        7
      30: lload         7
      32: lload_1
      33: lcmp
      34: iflt          58
      37: iload         5
      39: ifne          52
      42: lload         7
      44: lload_1
      45: lcmp
      46: ifne          52
      49: goto          58
      52: iinc          6, -1
      55: goto          9
      58: iload         6
      60: aload_0
      61: getfield      #7                  // Field startTimes:[J
      64: arraylength
      65: iconst_1
      66: isub
      67: if_icmpne     72
      70: aconst_null
      71: areturn
      72: new           #11                 // class java/util/Date
      75: dup
      76: aload_0
      77: aload_0
      78: getfield      #7                  // Field startTimes:[J
      81: iload         6
      83: iconst_1
      84: iadd
      85: laload
      86: iload_3
      87: iload         4
      89: invokespecial #12                 // Method getUTC:(JII)J
      92: invokespecial #13                 // Method java/util/Date."<init>":(J)V
      95: areturn

  public java.util.Date getPreviousStart(long, int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field startTimes:[J
       4: arraylength
       5: iconst_1
       6: isub
       7: istore        6
       9: iload         6
      11: iflt          65
      14: aload_0
      15: aload_0
      16: getfield      #7                  // Field startTimes:[J
      19: iload         6
      21: laload
      22: iload_3
      23: iload         4
      25: invokespecial #12                 // Method getUTC:(JII)J
      28: lstore        7
      30: lload         7
      32: lload_1
      33: lcmp
      34: iflt          49
      37: iload         5
      39: ifeq          59
      42: lload         7
      44: lload_1
      45: lcmp
      46: ifne          59
      49: new           #11                 // class java/util/Date
      52: dup
      53: lload         7
      55: invokespecial #13                 // Method java/util/Date."<init>":(J)V
      58: areturn
      59: iinc          6, -1
      62: goto          9
      65: aconst_null
      66: areturn

  public boolean isEquivalentTo(com.ibm.icu.util.TimeZoneRule);
    Code:
       0: aload_1
       1: instanceof    #14                 // class com/ibm/icu/util/TimeArrayTimeZoneRule
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #9                  // Field timeType:I
      13: aload_1
      14: checkcast     #14                 // class com/ibm/icu/util/TimeArrayTimeZoneRule
      17: getfield      #9                  // Field timeType:I
      20: if_icmpne     46
      23: aload_0
      24: getfield      #7                  // Field startTimes:[J
      27: aload_1
      28: checkcast     #14                 // class com/ibm/icu/util/TimeArrayTimeZoneRule
      31: getfield      #7                  // Field startTimes:[J
      34: invokestatic  #15                 // Method java/util/Arrays.equals:([J[J)Z
      37: ifeq          46
      40: aload_0
      41: aload_1
      42: invokespecial #16                 // Method com/ibm/icu/util/TimeZoneRule.isEquivalentTo:(Lcom/ibm/icu/util/TimeZoneRule;)Z
      45: ireturn
      46: iconst_0
      47: ireturn

  public boolean isTransitionRule();
    Code:
       0: iconst_1
       1: ireturn

  private long getUTC(long, int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field timeType:I
       4: iconst_2
       5: if_icmpeq     13
       8: lload_1
       9: iload_3
      10: i2l
      11: lsub
      12: lstore_1
      13: aload_0
      14: getfield      #9                  // Field timeType:I
      17: ifne          26
      20: lload_1
      21: iload         4
      23: i2l
      24: lsub
      25: lstore_1
      26: lload_1
      27: lreturn

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokespecial #20                 // Method com/ibm/icu/util/TimeZoneRule.toString:()Ljava/lang/String;
      13: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #22                 // String , timeType=
      20: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #9                  // Field timeType:I
      29: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: ldc           #24                 // String , startTimes=[
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: iconst_0
      41: istore_2
      42: iload_2
      43: aload_0
      44: getfield      #7                  // Field startTimes:[J
      47: arraylength
      48: if_icmpge     82
      51: iload_2
      52: ifeq          62
      55: aload_1
      56: ldc           #25                 // String ,
      58: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: aload_1
      63: aload_0
      64: getfield      #7                  // Field startTimes:[J
      67: iload_2
      68: laload
      69: invokestatic  #26                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      72: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: iinc          2, 1
      79: goto          42
      82: aload_1
      83: ldc           #27                 // String ]
      85: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: aload_1
      90: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: areturn
}
