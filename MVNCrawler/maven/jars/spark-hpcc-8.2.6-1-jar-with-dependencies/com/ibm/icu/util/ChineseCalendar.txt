Compiled from "ChineseCalendar.java"
public class com.ibm.icu.util.ChineseCalendar extends com.ibm.icu.util.Calendar {
  private static final long serialVersionUID;

  private int epochYear;

  private com.ibm.icu.util.TimeZone zoneAstro;

  private transient com.ibm.icu.impl.CalendarAstronomer astro;

  private transient com.ibm.icu.impl.CalendarCache winterSolsticeCache;

  private transient com.ibm.icu.impl.CalendarCache newYearCache;

  private transient boolean isLeapYear;

  private static final int[][] LIMITS;

  static final int[][][] CHINESE_DATE_PRECEDENCE;

  private static final int CHINESE_EPOCH_YEAR;

  private static final com.ibm.icu.util.TimeZone CHINA_ZONE;

  private static final int SYNODIC_GAP;

  public com.ibm.icu.util.ChineseCalendar();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: sipush        -2636
      13: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      16: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      19: return

  public com.ibm.icu.util.ChineseCalendar(java.util.Date);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: sipush        -2636
      13: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      16: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #7                  // Method setTime:(Ljava/util/Date;)V
      24: return

  public com.ibm.icu.util.ChineseCalendar(int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iconst_0
       7: iconst_0
       8: iconst_0
       9: invokespecial #8                  // Method "<init>":(IIIIIII)V
      12: return

  public com.ibm.icu.util.ChineseCalendar(int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: sipush        -2636
      13: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      16: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      19: aload_0
      20: bipush        14
      22: iconst_0
      23: invokevirtual #10                 // Method set:(II)V
      26: aload_0
      27: iconst_1
      28: iload_1
      29: invokevirtual #10                 // Method set:(II)V
      32: aload_0
      33: iconst_2
      34: iload_2
      35: invokevirtual #10                 // Method set:(II)V
      38: aload_0
      39: bipush        22
      41: iload_3
      42: invokevirtual #10                 // Method set:(II)V
      45: aload_0
      46: iconst_5
      47: iload         4
      49: invokevirtual #10                 // Method set:(II)V
      52: aload_0
      53: bipush        11
      55: iload         5
      57: invokevirtual #10                 // Method set:(II)V
      60: aload_0
      61: bipush        12
      63: iload         6
      65: invokevirtual #10                 // Method set:(II)V
      68: aload_0
      69: bipush        13
      71: iload         7
      73: invokevirtual #10                 // Method set:(II)V
      76: return

  public com.ibm.icu.util.ChineseCalendar(int, int, int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: iconst_0
       9: iconst_0
      10: iconst_0
      11: invokespecial #11                 // Method "<init>":(IIIIIIII)V
      14: return

  public com.ibm.icu.util.ChineseCalendar(int, int, int, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: sipush        -2636
      13: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      16: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      19: aload_0
      20: bipush        14
      22: iconst_0
      23: invokevirtual #10                 // Method set:(II)V
      26: aload_0
      27: iconst_0
      28: iload_1
      29: invokevirtual #10                 // Method set:(II)V
      32: aload_0
      33: iconst_1
      34: iload_2
      35: invokevirtual #10                 // Method set:(II)V
      38: aload_0
      39: iconst_2
      40: iload_3
      41: invokevirtual #10                 // Method set:(II)V
      44: aload_0
      45: bipush        22
      47: iload         4
      49: invokevirtual #10                 // Method set:(II)V
      52: aload_0
      53: iconst_5
      54: iload         5
      56: invokevirtual #10                 // Method set:(II)V
      59: aload_0
      60: bipush        11
      62: iload         6
      64: invokevirtual #10                 // Method set:(II)V
      67: aload_0
      68: bipush        12
      70: iload         7
      72: invokevirtual #10                 // Method set:(II)V
      75: aload_0
      76: bipush        13
      78: iload         8
      80: invokevirtual #10                 // Method set:(II)V
      83: return

  public com.ibm.icu.util.ChineseCalendar(java.util.Locale);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: aload_1
       5: invokestatic  #12                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       8: sipush        -2636
      11: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      14: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      17: return

  public com.ibm.icu.util.ChineseCalendar(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       5: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
       8: sipush        -2636
      11: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      14: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      17: return

  public com.ibm.icu.util.ChineseCalendar(com.ibm.icu.util.TimeZone, java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #12                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       6: sipush        -2636
       9: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      12: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      15: return

  public com.ibm.icu.util.ChineseCalendar(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: aload_1
       5: sipush        -2636
       8: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      11: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      14: return

  public com.ibm.icu.util.ChineseCalendar(com.ibm.icu.util.TimeZone, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: sipush        -2636
       6: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
       9: invokespecial #6                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/util/TimeZone;)V
      12: return

  protected com.ibm.icu.util.ChineseCalendar(com.ibm.icu.util.TimeZone, com.ibm.icu.util.ULocale, int, com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
       6: aload_0
       7: new           #14                 // class com/ibm/icu/impl/CalendarAstronomer
      10: dup
      11: invokespecial #15                 // Method com/ibm/icu/impl/CalendarAstronomer."<init>":()V
      14: putfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
      17: aload_0
      18: new           #17                 // class com/ibm/icu/impl/CalendarCache
      21: dup
      22: invokespecial #18                 // Method com/ibm/icu/impl/CalendarCache."<init>":()V
      25: putfield      #19                 // Field winterSolsticeCache:Lcom/ibm/icu/impl/CalendarCache;
      28: aload_0
      29: new           #17                 // class com/ibm/icu/impl/CalendarCache
      32: dup
      33: invokespecial #18                 // Method com/ibm/icu/impl/CalendarCache."<init>":()V
      36: putfield      #20                 // Field newYearCache:Lcom/ibm/icu/impl/CalendarCache;
      39: aload_0
      40: iload_3
      41: putfield      #21                 // Field epochYear:I
      44: aload_0
      45: aload         4
      47: putfield      #22                 // Field zoneAstro:Lcom/ibm/icu/util/TimeZone;
      50: aload_0
      51: invokestatic  #23                 // Method java/lang/System.currentTimeMillis:()J
      54: invokevirtual #24                 // Method setTimeInMillis:(J)V
      57: return

  protected int handleGetLimit(int, int);
    Code:
       0: getstatic     #25                 // Field LIMITS:[[I
       3: iload_1
       4: aaload
       5: iload_2
       6: iaload
       7: ireturn

  protected int handleGetExtendedYear();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: iconst_0
       4: invokevirtual #26                 // Method newestStamp:(III)I
       7: aload_0
       8: bipush        19
      10: invokevirtual #27                 // Method getStamp:(I)I
      13: if_icmpgt     27
      16: aload_0
      17: bipush        19
      19: iconst_1
      20: invokevirtual #28                 // Method internalGet:(II)I
      23: istore_1
      24: goto          57
      27: aload_0
      28: iconst_0
      29: iconst_1
      30: invokevirtual #28                 // Method internalGet:(II)I
      33: iconst_1
      34: isub
      35: istore_2
      36: iload_2
      37: bipush        60
      39: imul
      40: aload_0
      41: iconst_1
      42: iconst_1
      43: invokevirtual #28                 // Method internalGet:(II)I
      46: iadd
      47: aload_0
      48: getfield      #21                 // Field epochYear:I
      51: sipush        -2636
      54: isub
      55: isub
      56: istore_1
      57: iload_1
      58: ireturn

  protected int handleGetMonthLength(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_1
       4: invokevirtual #29                 // Method handleComputeMonthStart:(IIZ)I
       7: ldc           #30                 // int 2440588
       9: isub
      10: iconst_1
      11: iadd
      12: istore_3
      13: aload_0
      14: iload_3
      15: bipush        25
      17: iadd
      18: iconst_1
      19: invokespecial #31                 // Method newMoonNear:(IZ)I
      22: istore        4
      24: iload         4
      26: iload_3
      27: isub
      28: ireturn

  protected com.ibm.icu.text.DateFormat handleGetDateFormat(java.lang.String, java.lang.String, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #32                 // Method com/ibm/icu/util/Calendar.handleGetDateFormat:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/text/DateFormat;
       7: areturn

  protected int[][][] getFieldResolutionTable();
    Code:
       0: getstatic     #33                 // Field CHINESE_DATE_PRECEDENCE:[[[I
       3: areturn

  private void offsetMonth(int, int, int);
    Code:
       0: iload_1
       1: ldc2_w        #34                 // double 29.530588853d
       4: iload_3
       5: i2d
       6: ldc2_w        #36                 // double 0.5d
       9: dsub
      10: dmul
      11: d2i
      12: iadd
      13: istore_1
      14: aload_0
      15: iload_1
      16: iconst_1
      17: invokespecial #31                 // Method newMoonNear:(IZ)I
      20: istore_1
      21: iload_1
      22: ldc           #30                 // int 2440588
      24: iadd
      25: iconst_1
      26: isub
      27: iload_2
      28: iadd
      29: istore        4
      31: iload_2
      32: bipush        29
      34: if_icmple     71
      37: aload_0
      38: bipush        20
      40: iload         4
      42: iconst_1
      43: isub
      44: invokevirtual #10                 // Method set:(II)V
      47: aload_0
      48: invokevirtual #38                 // Method complete:()V
      51: aload_0
      52: iconst_5
      53: invokevirtual #39                 // Method getActualMaximum:(I)I
      56: iload_2
      57: if_icmplt     79
      60: aload_0
      61: bipush        20
      63: iload         4
      65: invokevirtual #10                 // Method set:(II)V
      68: goto          79
      71: aload_0
      72: bipush        20
      74: iload         4
      76: invokevirtual #10                 // Method set:(II)V
      79: return

  public void add(int, int);
    Code:
       0: iload_1
       1: lookupswitch  { // 1
                     2: 20
               default: 60
          }
      20: iload_2
      21: ifeq          66
      24: aload_0
      25: iconst_5
      26: invokevirtual #40                 // Method get:(I)I
      29: istore_3
      30: aload_0
      31: bipush        20
      33: invokevirtual #40                 // Method get:(I)I
      36: ldc           #30                 // int 2440588
      38: isub
      39: istore        4
      41: iload         4
      43: iload_3
      44: isub
      45: iconst_1
      46: iadd
      47: istore        5
      49: aload_0
      50: iload         5
      52: iload_3
      53: iload_2
      54: invokespecial #41                 // Method offsetMonth:(III)V
      57: goto          66
      60: aload_0
      61: iload_1
      62: iload_2
      63: invokespecial #42                 // Method com/ibm/icu/util/Calendar.add:(II)V
      66: return

  public void roll(int, int);
    Code:
       0: iload_1
       1: lookupswitch  { // 1
                     2: 20
               default: 178
          }
      20: iload_2
      21: ifeq          184
      24: aload_0
      25: iconst_5
      26: invokevirtual #40                 // Method get:(I)I
      29: istore_3
      30: aload_0
      31: bipush        20
      33: invokevirtual #40                 // Method get:(I)I
      36: ldc           #30                 // int 2440588
      38: isub
      39: istore        4
      41: iload         4
      43: iload_3
      44: isub
      45: iconst_1
      46: iadd
      47: istore        5
      49: aload_0
      50: iconst_2
      51: invokevirtual #40                 // Method get:(I)I
      54: istore        6
      56: aload_0
      57: getfield      #43                 // Field isLeapYear:Z
      60: ifeq          119
      63: aload_0
      64: bipush        22
      66: invokevirtual #40                 // Method get:(I)I
      69: iconst_1
      70: if_icmpne     79
      73: iinc          6, 1
      76: goto          119
      79: iload         5
      81: ldc2_w        #34                 // double 29.530588853d
      84: iload         6
      86: i2d
      87: ldc2_w        #36                 // double 0.5d
      90: dsub
      91: dmul
      92: d2i
      93: isub
      94: istore        7
      96: aload_0
      97: iload         7
      99: iconst_1
     100: invokespecial #31                 // Method newMoonNear:(IZ)I
     103: istore        7
     105: aload_0
     106: iload         7
     108: iload         5
     110: invokespecial #44                 // Method isLeapMonthBetween:(II)Z
     113: ifeq          119
     116: iinc          6, 1
     119: aload_0
     120: getfield      #43                 // Field isLeapYear:Z
     123: ifeq          131
     126: bipush        13
     128: goto          133
     131: bipush        12
     133: istore        7
     135: iload         6
     137: iload_2
     138: iadd
     139: iload         7
     141: irem
     142: istore        8
     144: iload         8
     146: ifge          156
     149: iload         8
     151: iload         7
     153: iadd
     154: istore        8
     156: iload         8
     158: iload         6
     160: if_icmpeq     175
     163: aload_0
     164: iload         5
     166: iload_3
     167: iload         8
     169: iload         6
     171: isub
     172: invokespecial #41                 // Method offsetMonth:(III)V
     175: goto          184
     178: aload_0
     179: iload_1
     180: iload_2
     181: invokespecial #45                 // Method com/ibm/icu/util/Calendar.roll:(II)V
     184: return

  private final long daysToMillis(int);
    Code:
       0: iload_1
       1: i2l
       2: ldc2_w        #46                 // long 86400000l
       5: lmul
       6: lstore_2
       7: lload_2
       8: aload_0
       9: getfield      #22                 // Field zoneAstro:Lcom/ibm/icu/util/TimeZone;
      12: lload_2
      13: invokevirtual #48                 // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
      16: i2l
      17: lsub
      18: lreturn

  private final int millisToDays(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #22                 // Field zoneAstro:Lcom/ibm/icu/util/TimeZone;
       5: lload_1
       6: invokevirtual #48                 // Method com/ibm/icu/util/TimeZone.getOffset:(J)I
       9: i2l
      10: ladd
      11: ldc2_w        #46                 // long 86400000l
      14: invokestatic  #49                 // Method floorDivide:(JJ)J
      17: l2i
      18: ireturn

  private int winterSolstice(int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field winterSolsticeCache:Lcom/ibm/icu/impl/CalendarCache;
       4: iload_1
       5: i2l
       6: invokevirtual #50                 // Method com/ibm/icu/impl/CalendarCache.get:(J)J
       9: lstore_2
      10: lload_2
      11: getstatic     #51                 // Field com/ibm/icu/impl/CalendarCache.EMPTY:J
      14: lcmp
      15: ifne          76
      18: aload_0
      19: aload_0
      20: iload_1
      21: bipush        11
      23: invokevirtual #52                 // Method computeGregorianMonthStart:(II)I
      26: iconst_1
      27: iadd
      28: ldc           #30                 // int 2440588
      30: isub
      31: invokespecial #53                 // Method daysToMillis:(I)J
      34: lstore        4
      36: aload_0
      37: getfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
      40: lload         4
      42: invokevirtual #54                 // Method com/ibm/icu/impl/CalendarAstronomer.setTime:(J)V
      45: aload_0
      46: getfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
      49: getstatic     #55                 // Field com/ibm/icu/impl/CalendarAstronomer.WINTER_SOLSTICE:Lcom/ibm/icu/impl/CalendarAstronomer$SolarLongitude;
      52: iconst_1
      53: invokevirtual #56                 // Method com/ibm/icu/impl/CalendarAstronomer.getSunTime:(Lcom/ibm/icu/impl/CalendarAstronomer$SolarLongitude;Z)J
      56: lstore        6
      58: aload_0
      59: lload         6
      61: invokespecial #57                 // Method millisToDays:(J)I
      64: i2l
      65: lstore_2
      66: aload_0
      67: getfield      #19                 // Field winterSolsticeCache:Lcom/ibm/icu/impl/CalendarCache;
      70: iload_1
      71: i2l
      72: lload_2
      73: invokevirtual #58                 // Method com/ibm/icu/impl/CalendarCache.put:(JJ)V
      76: lload_2
      77: l2i
      78: ireturn

  private int newMoonNear(int, boolean);
    Code:
       0: aload_0
       1: getfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
       4: aload_0
       5: iload_1
       6: invokespecial #53                 // Method daysToMillis:(I)J
       9: invokevirtual #54                 // Method com/ibm/icu/impl/CalendarAstronomer.setTime:(J)V
      12: aload_0
      13: getfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
      16: getstatic     #59                 // Field com/ibm/icu/impl/CalendarAstronomer.NEW_MOON:Lcom/ibm/icu/impl/CalendarAstronomer$MoonAge;
      19: iload_2
      20: invokevirtual #60                 // Method com/ibm/icu/impl/CalendarAstronomer.getMoonTime:(Lcom/ibm/icu/impl/CalendarAstronomer$MoonAge;Z)J
      23: lstore_3
      24: aload_0
      25: lload_3
      26: invokespecial #57                 // Method millisToDays:(J)I
      29: ireturn

  private int synodicMonthsBetween(int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: i2d
       4: ldc2_w        #34                 // double 29.530588853d
       7: ddiv
       8: invokestatic  #61                 // Method java/lang/Math.round:(D)J
      11: l2i
      12: ireturn

  private int majorSolarTerm(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
       4: aload_0
       5: iload_1
       6: invokespecial #53                 // Method daysToMillis:(I)J
       9: invokevirtual #54                 // Method com/ibm/icu/impl/CalendarAstronomer.setTime:(J)V
      12: ldc2_w        #62                 // double 6.0d
      15: aload_0
      16: getfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
      19: invokevirtual #64                 // Method com/ibm/icu/impl/CalendarAstronomer.getSunLongitude:()D
      22: dmul
      23: ldc2_w        #66                 // double 3.141592653589793d
      26: ddiv
      27: invokestatic  #68                 // Method java/lang/Math.floor:(D)D
      30: d2i
      31: iconst_2
      32: iadd
      33: bipush        12
      35: irem
      36: istore_2
      37: iload_2
      38: iconst_1
      39: if_icmpge     45
      42: iinc          2, 12
      45: iload_2
      46: ireturn

  private boolean hasNoMajorSolarTerm(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #69                 // Method majorSolarTerm:(I)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: bipush        25
      10: iadd
      11: iconst_1
      12: invokespecial #31                 // Method newMoonNear:(IZ)I
      15: istore_3
      16: aload_0
      17: iload_3
      18: invokespecial #69                 // Method majorSolarTerm:(I)I
      21: istore        4
      23: iload_2
      24: iload         4
      26: if_icmpne     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  private boolean isLeapMonthBetween(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #70                 // Method synodicMonthsBetween:(II)I
       6: bipush        50
       8: if_icmplt     52
      11: new           #71                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #72                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #73                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #74                 // String isLeapMonthBetween(
      24: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: iload_1
      28: invokevirtual #76                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #77                 // String ,
      33: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: iload_2
      37: invokevirtual #76                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: ldc           #78                 // String ): Invalid parameters
      42: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #80                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_2
      53: iload_1
      54: if_icmplt     86
      57: aload_0
      58: iload_1
      59: aload_0
      60: iload_2
      61: bipush        25
      63: isub
      64: iconst_0
      65: invokespecial #31                 // Method newMoonNear:(IZ)I
      68: invokespecial #44                 // Method isLeapMonthBetween:(II)Z
      71: ifne          82
      74: aload_0
      75: iload_2
      76: invokespecial #81                 // Method hasNoMajorSolarTerm:(I)Z
      79: ifeq          86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ireturn

  protected void handleComputeFields(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #30                 // int 2440588
       4: isub
       5: aload_0
       6: invokevirtual #82                 // Method getGregorianYear:()I
       9: aload_0
      10: invokevirtual #83                 // Method getGregorianMonth:()I
      13: iconst_1
      14: invokespecial #84                 // Method computeChineseFields:(IIIZ)V
      17: return

  private void computeChineseFields(int, int, int, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #85                 // Method winterSolstice:(I)I
       5: istore        6
       7: iload_1
       8: iload         6
      10: if_icmpge     25
      13: aload_0
      14: iload_2
      15: iconst_1
      16: isub
      17: invokespecial #85                 // Method winterSolstice:(I)I
      20: istore        5
      22: goto          38
      25: iload         6
      27: istore        5
      29: aload_0
      30: iload_2
      31: iconst_1
      32: iadd
      33: invokespecial #85                 // Method winterSolstice:(I)I
      36: istore        6
      38: aload_0
      39: iload         5
      41: iconst_1
      42: iadd
      43: iconst_1
      44: invokespecial #31                 // Method newMoonNear:(IZ)I
      47: istore        7
      49: aload_0
      50: iload         6
      52: iconst_1
      53: iadd
      54: iconst_0
      55: invokespecial #31                 // Method newMoonNear:(IZ)I
      58: istore        8
      60: aload_0
      61: iload_1
      62: iconst_1
      63: iadd
      64: iconst_0
      65: invokespecial #31                 // Method newMoonNear:(IZ)I
      68: istore        9
      70: aload_0
      71: aload_0
      72: iload         7
      74: iload         8
      76: invokespecial #70                 // Method synodicMonthsBetween:(II)I
      79: bipush        12
      81: if_icmpne     88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: putfield      #43                 // Field isLeapYear:Z
      92: aload_0
      93: iload         7
      95: iload         9
      97: invokespecial #70                 // Method synodicMonthsBetween:(II)I
     100: istore        10
     102: aload_0
     103: getfield      #43                 // Field isLeapYear:Z
     106: ifeq          123
     109: aload_0
     110: iload         7
     112: iload         9
     114: invokespecial #44                 // Method isLeapMonthBetween:(II)Z
     117: ifeq          123
     120: iinc          10, -1
     123: iload         10
     125: iconst_1
     126: if_icmpge     132
     129: iinc          10, 12
     132: aload_0
     133: getfield      #43                 // Field isLeapYear:Z
     136: ifeq          171
     139: aload_0
     140: iload         9
     142: invokespecial #81                 // Method hasNoMajorSolarTerm:(I)Z
     145: ifeq          171
     148: aload_0
     149: iload         7
     151: aload_0
     152: iload         9
     154: bipush        25
     156: isub
     157: iconst_0
     158: invokespecial #31                 // Method newMoonNear:(IZ)I
     161: invokespecial #44                 // Method isLeapMonthBetween:(II)Z
     164: ifne          171
     167: iconst_1
     168: goto          172
     171: iconst_0
     172: istore        11
     174: aload_0
     175: iconst_2
     176: iload         10
     178: iconst_1
     179: isub
     180: invokevirtual #86                 // Method internalSet:(II)V
     183: aload_0
     184: bipush        22
     186: iload         11
     188: ifeq          195
     191: iconst_1
     192: goto          196
     195: iconst_0
     196: invokevirtual #86                 // Method internalSet:(II)V
     199: iload         4
     201: ifeq          333
     204: iload_2
     205: aload_0
     206: getfield      #21                 // Field epochYear:I
     209: isub
     210: istore        12
     212: iload_2
     213: sipush        -2636
     216: isub
     217: istore        13
     219: iload         10
     221: bipush        11
     223: if_icmplt     232
     226: iload_3
     227: bipush        6
     229: if_icmplt     238
     232: iinc          12, 1
     235: iinc          13, 1
     238: iload_1
     239: iload         9
     241: isub
     242: iconst_1
     243: iadd
     244: istore        14
     246: aload_0
     247: bipush        19
     249: iload         12
     251: invokevirtual #86                 // Method internalSet:(II)V
     254: iconst_1
     255: newarray       int
     257: astore        15
     259: iload         13
     261: iconst_1
     262: isub
     263: bipush        60
     265: aload         15
     267: invokestatic  #87                 // Method floorDivide:(II[I)I
     270: istore        16
     272: aload_0
     273: iconst_0
     274: iload         16
     276: iconst_1
     277: iadd
     278: invokevirtual #86                 // Method internalSet:(II)V
     281: aload_0
     282: iconst_1
     283: aload         15
     285: iconst_0
     286: iaload
     287: iconst_1
     288: iadd
     289: invokevirtual #86                 // Method internalSet:(II)V
     292: aload_0
     293: iconst_5
     294: iload         14
     296: invokevirtual #86                 // Method internalSet:(II)V
     299: aload_0
     300: iload_2
     301: invokespecial #88                 // Method newYear:(I)I
     304: istore        17
     306: iload_1
     307: iload         17
     309: if_icmpge     321
     312: aload_0
     313: iload_2
     314: iconst_1
     315: isub
     316: invokespecial #88                 // Method newYear:(I)I
     319: istore        17
     321: aload_0
     322: bipush        6
     324: iload_1
     325: iload         17
     327: isub
     328: iconst_1
     329: iadd
     330: invokevirtual #86                 // Method internalSet:(II)V
     333: return

  private int newYear(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field newYearCache:Lcom/ibm/icu/impl/CalendarCache;
       4: iload_1
       5: i2l
       6: invokevirtual #50                 // Method com/ibm/icu/impl/CalendarCache.get:(J)J
       9: lstore_2
      10: lload_2
      11: getstatic     #51                 // Field com/ibm/icu/impl/CalendarCache.EMPTY:J
      14: lcmp
      15: ifne          128
      18: aload_0
      19: iload_1
      20: iconst_1
      21: isub
      22: invokespecial #85                 // Method winterSolstice:(I)I
      25: istore        4
      27: aload_0
      28: iload_1
      29: invokespecial #85                 // Method winterSolstice:(I)I
      32: istore        5
      34: aload_0
      35: iload         4
      37: iconst_1
      38: iadd
      39: iconst_1
      40: invokespecial #31                 // Method newMoonNear:(IZ)I
      43: istore        6
      45: aload_0
      46: iload         6
      48: bipush        25
      50: iadd
      51: iconst_1
      52: invokespecial #31                 // Method newMoonNear:(IZ)I
      55: istore        7
      57: aload_0
      58: iload         5
      60: iconst_1
      61: iadd
      62: iconst_0
      63: invokespecial #31                 // Method newMoonNear:(IZ)I
      66: istore        8
      68: aload_0
      69: iload         6
      71: iload         8
      73: invokespecial #70                 // Method synodicMonthsBetween:(II)I
      76: bipush        12
      78: if_icmpne     114
      81: aload_0
      82: iload         6
      84: invokespecial #81                 // Method hasNoMajorSolarTerm:(I)Z
      87: ifne          99
      90: aload_0
      91: iload         7
      93: invokespecial #81                 // Method hasNoMajorSolarTerm:(I)Z
      96: ifeq          114
      99: aload_0
     100: iload         7
     102: bipush        25
     104: iadd
     105: iconst_1
     106: invokespecial #31                 // Method newMoonNear:(IZ)I
     109: i2l
     110: lstore_2
     111: goto          118
     114: iload         7
     116: i2l
     117: lstore_2
     118: aload_0
     119: getfield      #20                 // Field newYearCache:Lcom/ibm/icu/impl/CalendarCache;
     122: iload_1
     123: i2l
     124: lload_2
     125: invokevirtual #58                 // Method com/ibm/icu/impl/CalendarCache.put:(JJ)V
     128: lload_2
     129: l2i
     130: ireturn

  protected int handleComputeMonthStart(int, int, boolean);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: bipush        11
       7: if_icmple     31
      10: iconst_1
      11: newarray       int
      13: astore        4
      15: iload_1
      16: iload_2
      17: bipush        12
      19: aload         4
      21: invokestatic  #87                 // Method floorDivide:(II[I)I
      24: iadd
      25: istore_1
      26: aload         4
      28: iconst_0
      29: iaload
      30: istore_2
      31: iload_1
      32: aload_0
      33: getfield      #21                 // Field epochYear:I
      36: iadd
      37: iconst_1
      38: isub
      39: istore        4
      41: aload_0
      42: iload         4
      44: invokespecial #88                 // Method newYear:(I)I
      47: istore        5
      49: aload_0
      50: iload         5
      52: iload_2
      53: bipush        29
      55: imul
      56: iadd
      57: iconst_1
      58: invokespecial #31                 // Method newMoonNear:(IZ)I
      61: istore        6
      63: iload         6
      65: ldc           #30                 // int 2440588
      67: iadd
      68: istore        7
      70: aload_0
      71: iconst_2
      72: invokevirtual #89                 // Method internalGet:(I)I
      75: istore        8
      77: aload_0
      78: bipush        22
      80: invokevirtual #89                 // Method internalGet:(I)I
      83: istore        9
      85: iload_3
      86: ifeq          94
      89: iload         9
      91: goto          95
      94: iconst_0
      95: istore        10
      97: aload_0
      98: iload         7
     100: invokevirtual #90                 // Method computeGregorianFields:(I)V
     103: aload_0
     104: iload         6
     106: aload_0
     107: invokevirtual #82                 // Method getGregorianYear:()I
     110: aload_0
     111: invokevirtual #83                 // Method getGregorianMonth:()I
     114: iconst_0
     115: invokespecial #84                 // Method computeChineseFields:(IIIZ)V
     118: iload_2
     119: aload_0
     120: iconst_2
     121: invokevirtual #89                 // Method internalGet:(I)I
     124: if_icmpne     138
     127: iload         10
     129: aload_0
     130: bipush        22
     132: invokevirtual #89                 // Method internalGet:(I)I
     135: if_icmpeq     157
     138: aload_0
     139: iload         6
     141: bipush        25
     143: iadd
     144: iconst_1
     145: invokespecial #31                 // Method newMoonNear:(IZ)I
     148: istore        6
     150: iload         6
     152: ldc           #30                 // int 2440588
     154: iadd
     155: istore        7
     157: aload_0
     158: iconst_2
     159: iload         8
     161: invokevirtual #86                 // Method internalSet:(II)V
     164: aload_0
     165: bipush        22
     167: iload         9
     169: invokevirtual #86                 // Method internalSet:(II)V
     172: iload         7
     174: iconst_1
     175: isub
     176: ireturn

  public java.lang.String getType();
    Code:
       0: ldc           #91                 // String chinese
       2: areturn

  public boolean haveDefaultCentury();
    Code:
       0: iconst_0
       1: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: sipush        -2636
       4: putfield      #21                 // Field epochYear:I
       7: aload_0
       8: getstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
      11: putfield      #22                 // Field zoneAstro:Lcom/ibm/icu/util/TimeZone;
      14: aload_1
      15: invokevirtual #92                 // Method java/io/ObjectInputStream.defaultReadObject:()V
      18: aload_0
      19: new           #14                 // class com/ibm/icu/impl/CalendarAstronomer
      22: dup
      23: invokespecial #15                 // Method com/ibm/icu/impl/CalendarAstronomer."<init>":()V
      26: putfield      #16                 // Field astro:Lcom/ibm/icu/impl/CalendarAstronomer;
      29: aload_0
      30: new           #17                 // class com/ibm/icu/impl/CalendarCache
      33: dup
      34: invokespecial #18                 // Method com/ibm/icu/impl/CalendarCache."<init>":()V
      37: putfield      #19                 // Field winterSolsticeCache:Lcom/ibm/icu/impl/CalendarCache;
      40: aload_0
      41: new           #17                 // class com/ibm/icu/impl/CalendarCache
      44: dup
      45: invokespecial #18                 // Method com/ibm/icu/impl/CalendarCache."<init>":()V
      48: putfield      #20                 // Field newYearCache:Lcom/ibm/icu/impl/CalendarCache;
      51: return

  static {};
    Code:
       0: bipush        23
       2: anewarray     #93                 // class "[I"
       5: dup
       6: iconst_0
       7: iconst_4
       8: newarray       int
      10: dup
      11: iconst_0
      12: iconst_1
      13: iastore
      14: dup
      15: iconst_1
      16: iconst_1
      17: iastore
      18: dup
      19: iconst_2
      20: ldc           #94                 // int 83333
      22: iastore
      23: dup
      24: iconst_3
      25: ldc           #94                 // int 83333
      27: iastore
      28: aastore
      29: dup
      30: iconst_1
      31: iconst_4
      32: newarray       int
      34: dup
      35: iconst_0
      36: iconst_1
      37: iastore
      38: dup
      39: iconst_1
      40: iconst_1
      41: iastore
      42: dup
      43: iconst_2
      44: bipush        60
      46: iastore
      47: dup
      48: iconst_3
      49: bipush        60
      51: iastore
      52: aastore
      53: dup
      54: iconst_2
      55: iconst_4
      56: newarray       int
      58: dup
      59: iconst_0
      60: iconst_0
      61: iastore
      62: dup
      63: iconst_1
      64: iconst_0
      65: iastore
      66: dup
      67: iconst_2
      68: bipush        11
      70: iastore
      71: dup
      72: iconst_3
      73: bipush        11
      75: iastore
      76: aastore
      77: dup
      78: iconst_3
      79: iconst_4
      80: newarray       int
      82: dup
      83: iconst_0
      84: iconst_1
      85: iastore
      86: dup
      87: iconst_1
      88: iconst_1
      89: iastore
      90: dup
      91: iconst_2
      92: bipush        50
      94: iastore
      95: dup
      96: iconst_3
      97: bipush        55
      99: iastore
     100: aastore
     101: dup
     102: iconst_4
     103: iconst_0
     104: newarray       int
     106: aastore
     107: dup
     108: iconst_5
     109: iconst_4
     110: newarray       int
     112: dup
     113: iconst_0
     114: iconst_1
     115: iastore
     116: dup
     117: iconst_1
     118: iconst_1
     119: iastore
     120: dup
     121: iconst_2
     122: bipush        29
     124: iastore
     125: dup
     126: iconst_3
     127: bipush        30
     129: iastore
     130: aastore
     131: dup
     132: bipush        6
     134: iconst_4
     135: newarray       int
     137: dup
     138: iconst_0
     139: iconst_1
     140: iastore
     141: dup
     142: iconst_1
     143: iconst_1
     144: iastore
     145: dup
     146: iconst_2
     147: sipush        353
     150: iastore
     151: dup
     152: iconst_3
     153: sipush        385
     156: iastore
     157: aastore
     158: dup
     159: bipush        7
     161: iconst_0
     162: newarray       int
     164: aastore
     165: dup
     166: bipush        8
     168: iconst_4
     169: newarray       int
     171: dup
     172: iconst_0
     173: iconst_m1
     174: iastore
     175: dup
     176: iconst_1
     177: iconst_m1
     178: iastore
     179: dup
     180: iconst_2
     181: iconst_5
     182: iastore
     183: dup
     184: iconst_3
     185: iconst_5
     186: iastore
     187: aastore
     188: dup
     189: bipush        9
     191: iconst_0
     192: newarray       int
     194: aastore
     195: dup
     196: bipush        10
     198: iconst_0
     199: newarray       int
     201: aastore
     202: dup
     203: bipush        11
     205: iconst_0
     206: newarray       int
     208: aastore
     209: dup
     210: bipush        12
     212: iconst_0
     213: newarray       int
     215: aastore
     216: dup
     217: bipush        13
     219: iconst_0
     220: newarray       int
     222: aastore
     223: dup
     224: bipush        14
     226: iconst_0
     227: newarray       int
     229: aastore
     230: dup
     231: bipush        15
     233: iconst_0
     234: newarray       int
     236: aastore
     237: dup
     238: bipush        16
     240: iconst_0
     241: newarray       int
     243: aastore
     244: dup
     245: bipush        17
     247: iconst_4
     248: newarray       int
     250: dup
     251: iconst_0
     252: ldc           #95                 // int -5000000
     254: iastore
     255: dup
     256: iconst_1
     257: ldc           #95                 // int -5000000
     259: iastore
     260: dup
     261: iconst_2
     262: ldc           #96                 // int 5000000
     264: iastore
     265: dup
     266: iconst_3
     267: ldc           #96                 // int 5000000
     269: iastore
     270: aastore
     271: dup
     272: bipush        18
     274: iconst_0
     275: newarray       int
     277: aastore
     278: dup
     279: bipush        19
     281: iconst_4
     282: newarray       int
     284: dup
     285: iconst_0
     286: ldc           #95                 // int -5000000
     288: iastore
     289: dup
     290: iconst_1
     291: ldc           #95                 // int -5000000
     293: iastore
     294: dup
     295: iconst_2
     296: ldc           #96                 // int 5000000
     298: iastore
     299: dup
     300: iconst_3
     301: ldc           #96                 // int 5000000
     303: iastore
     304: aastore
     305: dup
     306: bipush        20
     308: iconst_0
     309: newarray       int
     311: aastore
     312: dup
     313: bipush        21
     315: iconst_0
     316: newarray       int
     318: aastore
     319: dup
     320: bipush        22
     322: iconst_4
     323: newarray       int
     325: dup
     326: iconst_0
     327: iconst_0
     328: iastore
     329: dup
     330: iconst_1
     331: iconst_0
     332: iastore
     333: dup
     334: iconst_2
     335: iconst_1
     336: iastore
     337: dup
     338: iconst_3
     339: iconst_1
     340: iastore
     341: aastore
     342: putstatic     #25                 // Field LIMITS:[[I
     345: iconst_2
     346: anewarray     #97                 // class "[[I"
     349: dup
     350: iconst_0
     351: bipush        9
     353: anewarray     #93                 // class "[I"
     356: dup
     357: iconst_0
     358: iconst_1
     359: newarray       int
     361: dup
     362: iconst_0
     363: iconst_5
     364: iastore
     365: aastore
     366: dup
     367: iconst_1
     368: iconst_2
     369: newarray       int
     371: dup
     372: iconst_0
     373: iconst_3
     374: iastore
     375: dup
     376: iconst_1
     377: bipush        7
     379: iastore
     380: aastore
     381: dup
     382: iconst_2
     383: iconst_2
     384: newarray       int
     386: dup
     387: iconst_0
     388: iconst_4
     389: iastore
     390: dup
     391: iconst_1
     392: bipush        7
     394: iastore
     395: aastore
     396: dup
     397: iconst_3
     398: iconst_2
     399: newarray       int
     401: dup
     402: iconst_0
     403: bipush        8
     405: iastore
     406: dup
     407: iconst_1
     408: bipush        7
     410: iastore
     411: aastore
     412: dup
     413: iconst_4
     414: iconst_2
     415: newarray       int
     417: dup
     418: iconst_0
     419: iconst_3
     420: iastore
     421: dup
     422: iconst_1
     423: bipush        18
     425: iastore
     426: aastore
     427: dup
     428: iconst_5
     429: iconst_2
     430: newarray       int
     432: dup
     433: iconst_0
     434: iconst_4
     435: iastore
     436: dup
     437: iconst_1
     438: bipush        18
     440: iastore
     441: aastore
     442: dup
     443: bipush        6
     445: iconst_2
     446: newarray       int
     448: dup
     449: iconst_0
     450: bipush        8
     452: iastore
     453: dup
     454: iconst_1
     455: bipush        18
     457: iastore
     458: aastore
     459: dup
     460: bipush        7
     462: iconst_1
     463: newarray       int
     465: dup
     466: iconst_0
     467: bipush        6
     469: iastore
     470: aastore
     471: dup
     472: bipush        8
     474: iconst_2
     475: newarray       int
     477: dup
     478: iconst_0
     479: bipush        37
     481: iastore
     482: dup
     483: iconst_1
     484: bipush        22
     486: iastore
     487: aastore
     488: aastore
     489: dup
     490: iconst_1
     491: iconst_5
     492: anewarray     #93                 // class "[I"
     495: dup
     496: iconst_0
     497: iconst_1
     498: newarray       int
     500: dup
     501: iconst_0
     502: iconst_3
     503: iastore
     504: aastore
     505: dup
     506: iconst_1
     507: iconst_1
     508: newarray       int
     510: dup
     511: iconst_0
     512: iconst_4
     513: iastore
     514: aastore
     515: dup
     516: iconst_2
     517: iconst_1
     518: newarray       int
     520: dup
     521: iconst_0
     522: bipush        8
     524: iastore
     525: aastore
     526: dup
     527: iconst_3
     528: iconst_2
     529: newarray       int
     531: dup
     532: iconst_0
     533: bipush        40
     535: iastore
     536: dup
     537: iconst_1
     538: bipush        7
     540: iastore
     541: aastore
     542: dup
     543: iconst_4
     544: iconst_2
     545: newarray       int
     547: dup
     548: iconst_0
     549: bipush        40
     551: iastore
     552: dup
     553: iconst_1
     554: bipush        18
     556: iastore
     557: aastore
     558: aastore
     559: putstatic     #33                 // Field CHINESE_DATE_PRECEDENCE:[[[I
     562: new           #98                 // class com/ibm/icu/util/SimpleTimeZone
     565: dup
     566: ldc           #99                 // int 28800000
     568: ldc           #100                // String CHINA_ZONE
     570: invokespecial #101                // Method com/ibm/icu/util/SimpleTimeZone."<init>":(ILjava/lang/String;)V
     573: invokevirtual #102                // Method com/ibm/icu/util/SimpleTimeZone.freeze:()Lcom/ibm/icu/util/TimeZone;
     576: putstatic     #5                  // Field CHINA_ZONE:Lcom/ibm/icu/util/TimeZone;
     579: return
}
