Compiled from "StringTrieBuilder.java"
final class com.ibm.icu.util.StringTrieBuilder$SplitBranchNode extends com.ibm.icu.util.StringTrieBuilder$BranchNode {
  private char unit;

  private com.ibm.icu.util.StringTrieBuilder$Node lessThan;

  private com.ibm.icu.util.StringTrieBuilder$Node greaterOrEqual;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.util.StringTrieBuilder$SplitBranchNode(char, com.ibm.icu.util.StringTrieBuilder$Node, com.ibm.icu.util.StringTrieBuilder$Node);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/util/StringTrieBuilder$BranchNode."<init>":()V
       4: aload_0
       5: ldc           #2                  // int 206918985
       7: iload_1
       8: iadd
       9: bipush        37
      11: imul
      12: aload_2
      13: invokevirtual #3                  // Method com/ibm/icu/util/StringTrieBuilder$Node.hashCode:()I
      16: iadd
      17: bipush        37
      19: imul
      20: aload_3
      21: invokevirtual #3                  // Method com/ibm/icu/util/StringTrieBuilder$Node.hashCode:()I
      24: iadd
      25: putfield      #4                  // Field hash:I
      28: aload_0
      29: iload_1
      30: putfield      #5                  // Field unit:C
      33: aload_0
      34: aload_2
      35: putfield      #6                  // Field lessThan:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      38: aload_0
      39: aload_3
      40: putfield      #7                  // Field greaterOrEqual:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      43: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: aload_1
       9: invokespecial #8                  // Method com/ibm/icu/util/StringTrieBuilder$BranchNode.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: checkcast     #9                  // class com/ibm/icu/util/StringTrieBuilder$SplitBranchNode
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field unit:C
      26: aload_2
      27: getfield      #5                  // Field unit:C
      30: if_icmpne     59
      33: aload_0
      34: getfield      #6                  // Field lessThan:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      37: aload_2
      38: getfield      #6                  // Field lessThan:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      41: if_acmpne     59
      44: aload_0
      45: getfield      #7                  // Field greaterOrEqual:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      48: aload_2
      49: getfield      #7                  // Field greaterOrEqual:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      52: if_acmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method com/ibm/icu/util/StringTrieBuilder$BranchNode.hashCode:()I
       4: ireturn

  public int markRightEdgesFirst(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field offset:I
       4: ifne          37
       7: aload_0
       8: iload_1
       9: putfield      #12                 // Field firstEdgeNumber:I
      12: aload_0
      13: getfield      #7                  // Field greaterOrEqual:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      16: iload_1
      17: invokevirtual #13                 // Method com/ibm/icu/util/StringTrieBuilder$Node.markRightEdgesFirst:(I)I
      20: istore_1
      21: aload_0
      22: aload_0
      23: getfield      #6                  // Field lessThan:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      26: iload_1
      27: iconst_1
      28: isub
      29: invokevirtual #13                 // Method com/ibm/icu/util/StringTrieBuilder$Node.markRightEdgesFirst:(I)I
      32: dup
      33: istore_1
      34: putfield      #11                 // Field offset:I
      37: iload_1
      38: ireturn

  public void write(com.ibm.icu.util.StringTrieBuilder);
    Code:
       0: aload_0
       1: getfield      #6                  // Field lessThan:Lcom/ibm/icu/util/StringTrieBuilder$Node;
       4: aload_0
       5: getfield      #12                 // Field firstEdgeNumber:I
       8: aload_0
       9: getfield      #7                  // Field greaterOrEqual:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      12: invokevirtual #14                 // Method com/ibm/icu/util/StringTrieBuilder$Node.getOffset:()I
      15: aload_1
      16: invokevirtual #15                 // Method com/ibm/icu/util/StringTrieBuilder$Node.writeUnlessInsideRightEdge:(IILcom/ibm/icu/util/StringTrieBuilder;)V
      19: aload_0
      20: getfield      #7                  // Field greaterOrEqual:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      23: aload_1
      24: invokevirtual #16                 // Method com/ibm/icu/util/StringTrieBuilder$Node.write:(Lcom/ibm/icu/util/StringTrieBuilder;)V
      27: getstatic     #17                 // Field $assertionsDisabled:Z
      30: ifne          51
      33: aload_0
      34: getfield      #6                  // Field lessThan:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      37: invokevirtual #14                 // Method com/ibm/icu/util/StringTrieBuilder$Node.getOffset:()I
      40: ifgt          51
      43: new           #18                 // class java/lang/AssertionError
      46: dup
      47: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      50: athrow
      51: aload_1
      52: aload_0
      53: getfield      #6                  // Field lessThan:Lcom/ibm/icu/util/StringTrieBuilder$Node;
      56: invokevirtual #14                 // Method com/ibm/icu/util/StringTrieBuilder$Node.getOffset:()I
      59: invokevirtual #20                 // Method com/ibm/icu/util/StringTrieBuilder.writeDeltaTo:(I)I
      62: pop
      63: aload_0
      64: aload_1
      65: aload_0
      66: getfield      #5                  // Field unit:C
      69: invokevirtual #21                 // Method com/ibm/icu/util/StringTrieBuilder.write:(I)I
      72: putfield      #11                 // Field offset:I
      75: return

  static {};
    Code:
       0: ldc           #22                 // class com/ibm/icu/util/StringTrieBuilder
       2: invokevirtual #23                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #17                 // Field $assertionsDisabled:Z
      16: return
}
