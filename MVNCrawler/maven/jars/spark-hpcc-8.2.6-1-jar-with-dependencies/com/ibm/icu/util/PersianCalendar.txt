Compiled from "PersianCalendar.java"
public class com.ibm.icu.util.PersianCalendar extends com.ibm.icu.util.Calendar {
  private static final long serialVersionUID;

  private static final int[][] MONTH_COUNT;

  private static final int PERSIAN_EPOCH;

  private static final int[][] LIMITS;

  public com.ibm.icu.util.PersianCalendar();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #4                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: return

  public com.ibm.icu.util.PersianCalendar(com.ibm.icu.util.TimeZone);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       5: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
       8: invokespecial #4                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      11: return

  public com.ibm.icu.util.PersianCalendar(java.util.Locale);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: aload_1
       5: invokespecial #5                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Ljava/util/Locale;)V
       8: return

  public com.ibm.icu.util.PersianCalendar(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: aload_1
       5: invokespecial #4                  // Method "<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
       8: return

  public com.ibm.icu.util.PersianCalendar(com.ibm.icu.util.TimeZone, java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #6                  // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Ljava/util/Locale;)V
       6: aload_0
       7: invokestatic  #7                  // Method java/lang/System.currentTimeMillis:()J
      10: invokevirtual #8                  // Method setTimeInMillis:(J)V
      13: return

  public com.ibm.icu.util.PersianCalendar(com.ibm.icu.util.TimeZone, com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #9                  // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
       6: aload_0
       7: invokestatic  #7                  // Method java/lang/System.currentTimeMillis:()J
      10: invokevirtual #8                  // Method setTimeInMillis:(J)V
      13: return

  public com.ibm.icu.util.PersianCalendar(java.util.Date);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #9                  // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: aload_0
      14: aload_1
      15: invokevirtual #10                 // Method setTime:(Ljava/util/Date;)V
      18: return

  public com.ibm.icu.util.PersianCalendar(int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #9                  // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: aload_0
      14: iconst_1
      15: iload_1
      16: invokevirtual #12                 // Method set:(II)V
      19: aload_0
      20: iconst_2
      21: iload_2
      22: invokevirtual #12                 // Method set:(II)V
      25: aload_0
      26: iconst_5
      27: iload_3
      28: invokevirtual #12                 // Method set:(II)V
      31: return

  public com.ibm.icu.util.PersianCalendar(int, int, int, int, int, int);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method com/ibm/icu/util/TimeZone.getDefault:()Lcom/ibm/icu/util/TimeZone;
       4: getstatic     #2                  // Field com/ibm/icu/util/ULocale$Category.FORMAT:Lcom/ibm/icu/util/ULocale$Category;
       7: invokestatic  #3                  // Method com/ibm/icu/util/ULocale.getDefault:(Lcom/ibm/icu/util/ULocale$Category;)Lcom/ibm/icu/util/ULocale;
      10: invokespecial #9                  // Method com/ibm/icu/util/Calendar."<init>":(Lcom/ibm/icu/util/TimeZone;Lcom/ibm/icu/util/ULocale;)V
      13: aload_0
      14: iconst_1
      15: iload_1
      16: invokevirtual #12                 // Method set:(II)V
      19: aload_0
      20: iconst_2
      21: iload_2
      22: invokevirtual #12                 // Method set:(II)V
      25: aload_0
      26: iconst_5
      27: iload_3
      28: invokevirtual #12                 // Method set:(II)V
      31: aload_0
      32: bipush        11
      34: iload         4
      36: invokevirtual #12                 // Method set:(II)V
      39: aload_0
      40: bipush        12
      42: iload         5
      44: invokevirtual #12                 // Method set:(II)V
      47: aload_0
      48: bipush        13
      50: iload         6
      52: invokevirtual #12                 // Method set:(II)V
      55: return

  protected int handleGetLimit(int, int);
    Code:
       0: getstatic     #13                 // Field LIMITS:[[I
       3: iload_1
       4: aaload
       5: iload_2
       6: iaload
       7: ireturn

  private static final boolean isLeapYear(int);
    Code:
       0: iconst_1
       1: newarray       int
       3: astore_1
       4: bipush        25
       6: iload_0
       7: imul
       8: bipush        11
      10: iadd
      11: bipush        33
      13: aload_1
      14: invokestatic  #14                 // Method floorDivide:(II[I)I
      17: pop
      18: aload_1
      19: iconst_0
      20: iaload
      21: bipush        8
      23: if_icmpge     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  protected int handleGetMonthLength(int, int);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: bipush        11
       7: if_icmple     28
      10: iconst_1
      11: newarray       int
      13: astore_3
      14: iload_1
      15: iload_2
      16: bipush        12
      18: aload_3
      19: invokestatic  #14                 // Method floorDivide:(II[I)I
      22: iadd
      23: istore_1
      24: aload_3
      25: iconst_0
      26: iaload
      27: istore_2
      28: getstatic     #15                 // Field MONTH_COUNT:[[I
      31: iload_2
      32: aaload
      33: iload_1
      34: invokestatic  #16                 // Method isLeapYear:(I)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: iaload
      46: ireturn

  protected int handleGetYearLength(int);
    Code:
       0: iload_1
       1: invokestatic  #16                 // Method isLeapYear:(I)Z
       4: ifeq          13
       7: sipush        366
      10: goto          16
      13: sipush        365
      16: ireturn

  protected int handleComputeMonthStart(int, int, boolean);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: bipush        11
       7: if_icmple     31
      10: iconst_1
      11: newarray       int
      13: astore        4
      15: iload_1
      16: iload_2
      17: bipush        12
      19: aload         4
      21: invokestatic  #14                 // Method floorDivide:(II[I)I
      24: iadd
      25: istore_1
      26: aload         4
      28: iconst_0
      29: iaload
      30: istore_2
      31: ldc           #18                 // int 1948319
      33: sipush        365
      36: iload_1
      37: iconst_1
      38: isub
      39: imul
      40: iadd
      41: bipush        8
      43: iload_1
      44: imul
      45: bipush        21
      47: iadd
      48: bipush        33
      50: invokestatic  #19                 // Method floorDivide:(II)I
      53: iadd
      54: istore        4
      56: iload_2
      57: ifeq          72
      60: iload         4
      62: getstatic     #15                 // Field MONTH_COUNT:[[I
      65: iload_2
      66: aaload
      67: iconst_2
      68: iaload
      69: iadd
      70: istore        4
      72: iload         4
      74: ireturn

  protected int handleGetExtendedYear();
    Code:
       0: aload_0
       1: bipush        19
       3: iconst_1
       4: invokevirtual #20                 // Method newerField:(II)I
       7: bipush        19
       9: if_icmpne     23
      12: aload_0
      13: bipush        19
      15: iconst_1
      16: invokevirtual #21                 // Method internalGet:(II)I
      19: istore_1
      20: goto          30
      23: aload_0
      24: iconst_1
      25: iconst_1
      26: invokevirtual #21                 // Method internalGet:(II)I
      29: istore_1
      30: iload_1
      31: ireturn

  protected void handleComputeFields(int);
    Code:
       0: iload_1
       1: ldc           #22                 // int 1948320
       3: isub
       4: i2l
       5: lstore        6
       7: iconst_1
       8: ldc2_w        #23                 // long 33l
      11: lload         6
      13: lmul
      14: ldc2_w        #25                 // long 3l
      17: ladd
      18: ldc2_w        #27                 // long 12053l
      21: invokestatic  #29                 // Method floorDivide:(JJ)J
      24: l2i
      25: iadd
      26: istore_2
      27: ldc2_w        #30                 // long 365l
      30: iload_2
      31: i2l
      32: lconst_1
      33: lsub
      34: lmul
      35: ldc2_w        #32                 // long 8l
      38: iload_2
      39: i2l
      40: lmul
      41: ldc2_w        #34                 // long 21l
      44: ladd
      45: ldc2_w        #23                 // long 33l
      48: invokestatic  #29                 // Method floorDivide:(JJ)J
      51: ladd
      52: lstore        8
      54: lload         6
      56: lload         8
      58: lsub
      59: l2i
      60: istore        5
      62: iload         5
      64: sipush        216
      67: if_icmpge     79
      70: iload         5
      72: bipush        31
      74: idiv
      75: istore_3
      76: goto          88
      79: iload         5
      81: bipush        6
      83: isub
      84: bipush        30
      86: idiv
      87: istore_3
      88: iload         5
      90: getstatic     #15                 // Field MONTH_COUNT:[[I
      93: iload_3
      94: aaload
      95: iconst_2
      96: iaload
      97: isub
      98: iconst_1
      99: iadd
     100: istore        4
     102: iinc          5, 1
     105: aload_0
     106: iconst_0
     107: iconst_0
     108: invokevirtual #36                 // Method internalSet:(II)V
     111: aload_0
     112: iconst_1
     113: iload_2
     114: invokevirtual #36                 // Method internalSet:(II)V
     117: aload_0
     118: bipush        19
     120: iload_2
     121: invokevirtual #36                 // Method internalSet:(II)V
     124: aload_0
     125: iconst_2
     126: iload_3
     127: invokevirtual #36                 // Method internalSet:(II)V
     130: aload_0
     131: iconst_5
     132: iload         4
     134: invokevirtual #36                 // Method internalSet:(II)V
     137: aload_0
     138: bipush        6
     140: iload         5
     142: invokevirtual #36                 // Method internalSet:(II)V
     145: return

  public java.lang.String getType();
    Code:
       0: ldc           #37                 // String persian
       2: areturn

  static {};
    Code:
       0: bipush        12
       2: anewarray     #38                 // class "[I"
       5: dup
       6: iconst_0
       7: iconst_3
       8: newarray       int
      10: dup
      11: iconst_0
      12: bipush        31
      14: iastore
      15: dup
      16: iconst_1
      17: bipush        31
      19: iastore
      20: dup
      21: iconst_2
      22: iconst_0
      23: iastore
      24: aastore
      25: dup
      26: iconst_1
      27: iconst_3
      28: newarray       int
      30: dup
      31: iconst_0
      32: bipush        31
      34: iastore
      35: dup
      36: iconst_1
      37: bipush        31
      39: iastore
      40: dup
      41: iconst_2
      42: bipush        31
      44: iastore
      45: aastore
      46: dup
      47: iconst_2
      48: iconst_3
      49: newarray       int
      51: dup
      52: iconst_0
      53: bipush        31
      55: iastore
      56: dup
      57: iconst_1
      58: bipush        31
      60: iastore
      61: dup
      62: iconst_2
      63: bipush        62
      65: iastore
      66: aastore
      67: dup
      68: iconst_3
      69: iconst_3
      70: newarray       int
      72: dup
      73: iconst_0
      74: bipush        31
      76: iastore
      77: dup
      78: iconst_1
      79: bipush        31
      81: iastore
      82: dup
      83: iconst_2
      84: bipush        93
      86: iastore
      87: aastore
      88: dup
      89: iconst_4
      90: iconst_3
      91: newarray       int
      93: dup
      94: iconst_0
      95: bipush        31
      97: iastore
      98: dup
      99: iconst_1
     100: bipush        31
     102: iastore
     103: dup
     104: iconst_2
     105: bipush        124
     107: iastore
     108: aastore
     109: dup
     110: iconst_5
     111: iconst_3
     112: newarray       int
     114: dup
     115: iconst_0
     116: bipush        31
     118: iastore
     119: dup
     120: iconst_1
     121: bipush        31
     123: iastore
     124: dup
     125: iconst_2
     126: sipush        155
     129: iastore
     130: aastore
     131: dup
     132: bipush        6
     134: iconst_3
     135: newarray       int
     137: dup
     138: iconst_0
     139: bipush        30
     141: iastore
     142: dup
     143: iconst_1
     144: bipush        30
     146: iastore
     147: dup
     148: iconst_2
     149: sipush        186
     152: iastore
     153: aastore
     154: dup
     155: bipush        7
     157: iconst_3
     158: newarray       int
     160: dup
     161: iconst_0
     162: bipush        30
     164: iastore
     165: dup
     166: iconst_1
     167: bipush        30
     169: iastore
     170: dup
     171: iconst_2
     172: sipush        216
     175: iastore
     176: aastore
     177: dup
     178: bipush        8
     180: iconst_3
     181: newarray       int
     183: dup
     184: iconst_0
     185: bipush        30
     187: iastore
     188: dup
     189: iconst_1
     190: bipush        30
     192: iastore
     193: dup
     194: iconst_2
     195: sipush        246
     198: iastore
     199: aastore
     200: dup
     201: bipush        9
     203: iconst_3
     204: newarray       int
     206: dup
     207: iconst_0
     208: bipush        30
     210: iastore
     211: dup
     212: iconst_1
     213: bipush        30
     215: iastore
     216: dup
     217: iconst_2
     218: sipush        276
     221: iastore
     222: aastore
     223: dup
     224: bipush        10
     226: iconst_3
     227: newarray       int
     229: dup
     230: iconst_0
     231: bipush        30
     233: iastore
     234: dup
     235: iconst_1
     236: bipush        30
     238: iastore
     239: dup
     240: iconst_2
     241: sipush        306
     244: iastore
     245: aastore
     246: dup
     247: bipush        11
     249: iconst_3
     250: newarray       int
     252: dup
     253: iconst_0
     254: bipush        29
     256: iastore
     257: dup
     258: iconst_1
     259: bipush        30
     261: iastore
     262: dup
     263: iconst_2
     264: sipush        336
     267: iastore
     268: aastore
     269: putstatic     #15                 // Field MONTH_COUNT:[[I
     272: bipush        22
     274: anewarray     #38                 // class "[I"
     277: dup
     278: iconst_0
     279: iconst_4
     280: newarray       int
     282: dup
     283: iconst_0
     284: iconst_0
     285: iastore
     286: dup
     287: iconst_1
     288: iconst_0
     289: iastore
     290: dup
     291: iconst_2
     292: iconst_0
     293: iastore
     294: dup
     295: iconst_3
     296: iconst_0
     297: iastore
     298: aastore
     299: dup
     300: iconst_1
     301: iconst_4
     302: newarray       int
     304: dup
     305: iconst_0
     306: ldc           #39                 // int -5000000
     308: iastore
     309: dup
     310: iconst_1
     311: ldc           #39                 // int -5000000
     313: iastore
     314: dup
     315: iconst_2
     316: ldc           #40                 // int 5000000
     318: iastore
     319: dup
     320: iconst_3
     321: ldc           #40                 // int 5000000
     323: iastore
     324: aastore
     325: dup
     326: iconst_2
     327: iconst_4
     328: newarray       int
     330: dup
     331: iconst_0
     332: iconst_0
     333: iastore
     334: dup
     335: iconst_1
     336: iconst_0
     337: iastore
     338: dup
     339: iconst_2
     340: bipush        11
     342: iastore
     343: dup
     344: iconst_3
     345: bipush        11
     347: iastore
     348: aastore
     349: dup
     350: iconst_3
     351: iconst_4
     352: newarray       int
     354: dup
     355: iconst_0
     356: iconst_1
     357: iastore
     358: dup
     359: iconst_1
     360: iconst_1
     361: iastore
     362: dup
     363: iconst_2
     364: bipush        52
     366: iastore
     367: dup
     368: iconst_3
     369: bipush        53
     371: iastore
     372: aastore
     373: dup
     374: iconst_4
     375: iconst_0
     376: newarray       int
     378: aastore
     379: dup
     380: iconst_5
     381: iconst_4
     382: newarray       int
     384: dup
     385: iconst_0
     386: iconst_1
     387: iastore
     388: dup
     389: iconst_1
     390: iconst_1
     391: iastore
     392: dup
     393: iconst_2
     394: bipush        29
     396: iastore
     397: dup
     398: iconst_3
     399: bipush        31
     401: iastore
     402: aastore
     403: dup
     404: bipush        6
     406: iconst_4
     407: newarray       int
     409: dup
     410: iconst_0
     411: iconst_1
     412: iastore
     413: dup
     414: iconst_1
     415: iconst_1
     416: iastore
     417: dup
     418: iconst_2
     419: sipush        365
     422: iastore
     423: dup
     424: iconst_3
     425: sipush        366
     428: iastore
     429: aastore
     430: dup
     431: bipush        7
     433: iconst_0
     434: newarray       int
     436: aastore
     437: dup
     438: bipush        8
     440: iconst_4
     441: newarray       int
     443: dup
     444: iconst_0
     445: iconst_m1
     446: iastore
     447: dup
     448: iconst_1
     449: iconst_m1
     450: iastore
     451: dup
     452: iconst_2
     453: iconst_5
     454: iastore
     455: dup
     456: iconst_3
     457: iconst_5
     458: iastore
     459: aastore
     460: dup
     461: bipush        9
     463: iconst_0
     464: newarray       int
     466: aastore
     467: dup
     468: bipush        10
     470: iconst_0
     471: newarray       int
     473: aastore
     474: dup
     475: bipush        11
     477: iconst_0
     478: newarray       int
     480: aastore
     481: dup
     482: bipush        12
     484: iconst_0
     485: newarray       int
     487: aastore
     488: dup
     489: bipush        13
     491: iconst_0
     492: newarray       int
     494: aastore
     495: dup
     496: bipush        14
     498: iconst_0
     499: newarray       int
     501: aastore
     502: dup
     503: bipush        15
     505: iconst_0
     506: newarray       int
     508: aastore
     509: dup
     510: bipush        16
     512: iconst_0
     513: newarray       int
     515: aastore
     516: dup
     517: bipush        17
     519: iconst_4
     520: newarray       int
     522: dup
     523: iconst_0
     524: ldc           #39                 // int -5000000
     526: iastore
     527: dup
     528: iconst_1
     529: ldc           #39                 // int -5000000
     531: iastore
     532: dup
     533: iconst_2
     534: ldc           #40                 // int 5000000
     536: iastore
     537: dup
     538: iconst_3
     539: ldc           #40                 // int 5000000
     541: iastore
     542: aastore
     543: dup
     544: bipush        18
     546: iconst_0
     547: newarray       int
     549: aastore
     550: dup
     551: bipush        19
     553: iconst_4
     554: newarray       int
     556: dup
     557: iconst_0
     558: ldc           #39                 // int -5000000
     560: iastore
     561: dup
     562: iconst_1
     563: ldc           #39                 // int -5000000
     565: iastore
     566: dup
     567: iconst_2
     568: ldc           #40                 // int 5000000
     570: iastore
     571: dup
     572: iconst_3
     573: ldc           #40                 // int 5000000
     575: iastore
     576: aastore
     577: dup
     578: bipush        20
     580: iconst_0
     581: newarray       int
     583: aastore
     584: dup
     585: bipush        21
     587: iconst_0
     588: newarray       int
     590: aastore
     591: putstatic     #13                 // Field LIMITS:[[I
     594: return
}
