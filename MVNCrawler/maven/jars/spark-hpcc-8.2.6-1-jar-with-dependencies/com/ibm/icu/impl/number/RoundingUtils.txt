Compiled from "RoundingUtils.java"
public class com.ibm.icu.impl.number.RoundingUtils {
  public static final int SECTION_LOWER;

  public static final int SECTION_MIDPOINT;

  public static final int SECTION_UPPER;

  public static final java.math.RoundingMode DEFAULT_ROUNDING_MODE;

  public static final int MAX_INT_FRAC_SIG;

  private static final java.math.MathContext[] MATH_CONTEXT_BY_ROUNDING_MODE_UNLIMITED;

  private static final java.math.MathContext[] MATH_CONTEXT_BY_ROUNDING_MODE_34_DIGITS;

  public com.ibm.icu.impl.number.RoundingUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static boolean getRoundingDirection(boolean, boolean, int, int, java.lang.Object);
    Code:
       0: iload_3
       1: tableswitch   { // 0 to 6
                     0: 44
                     1: 46
                     2: 48
                     3: 50
                     4: 60
                     5: 97
                     6: 133
               default: 166
          }
      44: iconst_0
      45: ireturn
      46: iconst_1
      47: ireturn
      48: iload_1
      49: ireturn
      50: iload_1
      51: ifne          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn
      60: iload_2
      61: tableswitch   { // 1 to 3
                     1: 90
                     2: 88
                     3: 92
               default: 94
          }
      88: iconst_0
      89: ireturn
      90: iconst_1
      91: ireturn
      92: iconst_0
      93: ireturn
      94: goto          166
      97: iload_2
      98: tableswitch   { // 1 to 3
                     1: 126
                     2: 124
                     3: 128
               default: 130
          }
     124: iconst_1
     125: ireturn
     126: iconst_1
     127: ireturn
     128: iconst_0
     129: ireturn
     130: goto          166
     133: iload_2
     134: tableswitch   { // 1 to 3
                     1: 162
                     2: 160
                     3: 164
               default: 166
          }
     160: iload_0
     161: ireturn
     162: iconst_1
     163: ireturn
     164: iconst_0
     165: ireturn
     166: new           #2                  // class java/lang/ArithmeticException
     169: dup
     170: new           #3                  // class java/lang/StringBuilder
     173: dup
     174: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     177: ldc           #5                  // String Rounding is required on
     179: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload         4
     184: invokevirtual #7                  // Method java/lang/Object.toString:()Ljava/lang/String;
     187: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     193: invokespecial #9                  // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     196: athrow

  public static boolean roundsAtMidpoint(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 32
                     2: 32
                     3: 32
               default: 34
          }
      32: iconst_0
      33: ireturn
      34: iconst_1
      35: ireturn

  public static java.math.MathContext getMathContextOrUnlimited(com.ibm.icu.impl.number.DecimalFormatProperties);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method com/ibm/icu/impl/number/DecimalFormatProperties.getMathContext:()Ljava/math/MathContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     31
       9: aload_0
      10: invokevirtual #11                 // Method com/ibm/icu/impl/number/DecimalFormatProperties.getRoundingMode:()Ljava/math/RoundingMode;
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: getstatic     #12                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
      21: astore_2
      22: getstatic     #13                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_UNLIMITED:[Ljava/math/MathContext;
      25: aload_2
      26: invokevirtual #14                 // Method java/math/RoundingMode.ordinal:()I
      29: aaload
      30: astore_1
      31: aload_1
      32: areturn

  public static java.math.MathContext getMathContextOr34Digits(com.ibm.icu.impl.number.DecimalFormatProperties);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method com/ibm/icu/impl/number/DecimalFormatProperties.getMathContext:()Ljava/math/MathContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     31
       9: aload_0
      10: invokevirtual #11                 // Method com/ibm/icu/impl/number/DecimalFormatProperties.getRoundingMode:()Ljava/math/RoundingMode;
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: getstatic     #12                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
      21: astore_2
      22: getstatic     #15                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_34_DIGITS:[Ljava/math/MathContext;
      25: aload_2
      26: invokevirtual #14                 // Method java/math/RoundingMode.ordinal:()I
      29: aaload
      30: astore_1
      31: aload_1
      32: areturn

  public static java.math.MathContext mathContextUnlimited(java.math.RoundingMode);
    Code:
       0: getstatic     #13                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_UNLIMITED:[Ljava/math/MathContext;
       3: aload_0
       4: invokevirtual #14                 // Method java/math/RoundingMode.ordinal:()I
       7: aaload
       8: areturn

  static {};
    Code:
       0: getstatic     #12                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
       3: putstatic     #16                 // Field DEFAULT_ROUNDING_MODE:Ljava/math/RoundingMode;
       6: invokestatic  #17                 // Method java/math/RoundingMode.values:()[Ljava/math/RoundingMode;
       9: arraylength
      10: anewarray     #18                 // class java/math/MathContext
      13: putstatic     #13                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_UNLIMITED:[Ljava/math/MathContext;
      16: invokestatic  #17                 // Method java/math/RoundingMode.values:()[Ljava/math/RoundingMode;
      19: arraylength
      20: anewarray     #18                 // class java/math/MathContext
      23: putstatic     #15                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_34_DIGITS:[Ljava/math/MathContext;
      26: iconst_0
      27: istore_0
      28: iload_0
      29: getstatic     #15                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_34_DIGITS:[Ljava/math/MathContext;
      32: arraylength
      33: if_icmpge     73
      36: getstatic     #13                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_UNLIMITED:[Ljava/math/MathContext;
      39: iload_0
      40: new           #18                 // class java/math/MathContext
      43: dup
      44: iconst_0
      45: iload_0
      46: invokestatic  #19                 // Method java/math/RoundingMode.valueOf:(I)Ljava/math/RoundingMode;
      49: invokespecial #20                 // Method java/math/MathContext."<init>":(ILjava/math/RoundingMode;)V
      52: aastore
      53: getstatic     #15                 // Field MATH_CONTEXT_BY_ROUNDING_MODE_34_DIGITS:[Ljava/math/MathContext;
      56: iload_0
      57: new           #18                 // class java/math/MathContext
      60: dup
      61: bipush        34
      63: invokespecial #21                 // Method java/math/MathContext."<init>":(I)V
      66: aastore
      67: iinc          0, 1
      70: goto          28
      73: return
}
