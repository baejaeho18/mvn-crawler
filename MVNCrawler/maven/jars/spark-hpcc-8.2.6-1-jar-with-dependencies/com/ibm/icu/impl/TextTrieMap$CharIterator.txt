Compiled from "TextTrieMap.java"
public class com.ibm.icu.impl.TextTrieMap$CharIterator implements java.util.Iterator<java.lang.Character> {
  private boolean _ignoreCase;

  private java.lang.CharSequence _text;

  private int _nextIdx;

  private int _startIdx;

  private java.lang.Character _remainingChar;

  com.ibm.icu.impl.TextTrieMap$CharIterator(java.lang.CharSequence, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _text:Ljava/lang/CharSequence;
       9: aload_0
      10: aload_0
      11: iload_2
      12: dup_x1
      13: putfield      #3                  // Field _startIdx:I
      16: putfield      #4                  // Field _nextIdx:I
      19: aload_0
      20: iload_3
      21: putfield      #5                  // Field _ignoreCase:Z
      24: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _nextIdx:I
       4: aload_0
       5: getfield      #2                  // Field _text:Ljava/lang/CharSequence;
       8: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      13: if_icmpne     25
      16: aload_0
      17: getfield      #7                  // Field _remainingChar:Ljava/lang/Character;
      20: ifnonnull     25
      23: iconst_0
      24: ireturn
      25: iconst_1
      26: ireturn

  public java.lang.Character next();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _nextIdx:I
       4: aload_0
       5: getfield      #2                  // Field _text:Ljava/lang/CharSequence;
       8: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      13: if_icmpne     25
      16: aload_0
      17: getfield      #7                  // Field _remainingChar:Ljava/lang/Character;
      20: ifnonnull     25
      23: aconst_null
      24: areturn
      25: aload_0
      26: getfield      #7                  // Field _remainingChar:Ljava/lang/Character;
      29: ifnull        45
      32: aload_0
      33: getfield      #7                  // Field _remainingChar:Ljava/lang/Character;
      36: astore_1
      37: aload_0
      38: aconst_null
      39: putfield      #7                  // Field _remainingChar:Ljava/lang/Character;
      42: goto          139
      45: aload_0
      46: getfield      #5                  // Field _ignoreCase:Z
      49: ifeq          112
      52: aload_0
      53: getfield      #2                  // Field _text:Ljava/lang/CharSequence;
      56: aload_0
      57: getfield      #4                  // Field _nextIdx:I
      60: invokestatic  #8                  // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      63: iconst_1
      64: invokestatic  #9                  // Method com/ibm/icu/lang/UCharacter.foldCase:(IZ)I
      67: istore_2
      68: aload_0
      69: aload_0
      70: getfield      #4                  // Field _nextIdx:I
      73: iload_2
      74: invokestatic  #10                 // Method java/lang/Character.charCount:(I)I
      77: iadd
      78: putfield      #4                  // Field _nextIdx:I
      81: iload_2
      82: invokestatic  #11                 // Method java/lang/Character.toChars:(I)[C
      85: astore_3
      86: aload_3
      87: iconst_0
      88: caload
      89: invokestatic  #12                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      92: astore_1
      93: aload_3
      94: arraylength
      95: iconst_2
      96: if_icmpne     109
      99: aload_0
     100: aload_3
     101: iconst_1
     102: caload
     103: invokestatic  #12                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     106: putfield      #7                  // Field _remainingChar:Ljava/lang/Character;
     109: goto          139
     112: aload_0
     113: getfield      #2                  // Field _text:Ljava/lang/CharSequence;
     116: aload_0
     117: getfield      #4                  // Field _nextIdx:I
     120: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     125: invokestatic  #12                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     128: astore_1
     129: aload_0
     130: dup
     131: getfield      #4                  // Field _nextIdx:I
     134: iconst_1
     135: iadd
     136: putfield      #4                  // Field _nextIdx:I
     139: aload_1
     140: areturn

  public void remove();
    Code:
       0: new           #14                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #15                 // String remove() not supproted
       6: invokespecial #16                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public int nextIndex();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _nextIdx:I
       4: ireturn

  public int processedLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field _remainingChar:Ljava/lang/Character;
       4: ifnull        17
       7: new           #17                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #18                 // String In the middle of surrogate pair
      13: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field _nextIdx:I
      21: aload_0
      22: getfield      #3                  // Field _startIdx:I
      25: isub
      26: ireturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method next:()Ljava/lang/Character;
       4: areturn
}
