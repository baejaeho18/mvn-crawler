Compiled from "CollationKeys.java"
final class com.ibm.icu.impl.coll.CollationKeys$SortKeyLevel {
  private static final int INITIAL_CAPACITY;

  byte[] buffer;

  int len;

  static final boolean $assertionsDisabled;

  com.ibm.icu.impl.coll.CollationKeys$SortKeyLevel();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        40
       7: newarray       byte
       9: putfield      #3                  // Field buffer:[B
      12: aload_0
      13: iconst_0
      14: putfield      #4                  // Field len:I
      17: return

  boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field len:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  int length();
    Code:
       0: aload_0
       1: getfield      #4                  // Field len:I
       4: ireturn

  byte getAt(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: iload_1
       5: baload
       6: ireturn

  byte[] data();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:[B
       4: areturn

  void appendByte(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field len:I
       4: aload_0
       5: getfield      #3                  // Field buffer:[B
       8: arraylength
       9: if_icmplt     20
      12: aload_0
      13: iconst_1
      14: invokespecial #5                  // Method ensureCapacity:(I)Z
      17: ifeq          38
      20: aload_0
      21: getfield      #3                  // Field buffer:[B
      24: aload_0
      25: dup
      26: getfield      #4                  // Field len:I
      29: dup_x1
      30: iconst_1
      31: iadd
      32: putfield      #4                  // Field len:I
      35: iload_1
      36: i2b
      37: bastore
      38: return

  void appendWeight16(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: iload_1
       7: ldc           #7                  // int 65535
       9: iand
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: bipush        8
      24: iushr
      25: i2b
      26: istore_2
      27: iload_1
      28: i2b
      29: istore_3
      30: iload_3
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_2
      39: istore        4
      41: aload_0
      42: getfield      #4                  // Field len:I
      45: iload         4
      47: iadd
      48: aload_0
      49: getfield      #3                  // Field buffer:[B
      52: arraylength
      53: if_icmple     65
      56: aload_0
      57: iload         4
      59: invokespecial #5                  // Method ensureCapacity:(I)Z
      62: ifeq          103
      65: aload_0
      66: getfield      #3                  // Field buffer:[B
      69: aload_0
      70: dup
      71: getfield      #4                  // Field len:I
      74: dup_x1
      75: iconst_1
      76: iadd
      77: putfield      #4                  // Field len:I
      80: iload_2
      81: bastore
      82: iload_3
      83: ifeq          103
      86: aload_0
      87: getfield      #3                  // Field buffer:[B
      90: aload_0
      91: dup
      92: getfield      #4                  // Field len:I
      95: dup_x1
      96: iconst_1
      97: iadd
      98: putfield      #4                  // Field len:I
     101: iload_3
     102: bastore
     103: return

  void appendWeight32(long);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: lload_1
       7: lconst_0
       8: lcmp
       9: ifne          20
      12: new           #8                  // class java/lang/AssertionError
      15: dup
      16: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: iconst_4
      21: newarray       byte
      23: dup
      24: iconst_0
      25: lload_1
      26: bipush        24
      28: lushr
      29: l2i
      30: i2b
      31: bastore
      32: dup
      33: iconst_1
      34: lload_1
      35: bipush        16
      37: lushr
      38: l2i
      39: i2b
      40: bastore
      41: dup
      42: iconst_2
      43: lload_1
      44: bipush        8
      46: lushr
      47: l2i
      48: i2b
      49: bastore
      50: dup
      51: iconst_3
      52: lload_1
      53: l2i
      54: i2b
      55: bastore
      56: astore_3
      57: aload_3
      58: iconst_1
      59: baload
      60: ifne          67
      63: iconst_1
      64: goto          88
      67: aload_3
      68: iconst_2
      69: baload
      70: ifne          77
      73: iconst_2
      74: goto          88
      77: aload_3
      78: iconst_3
      79: baload
      80: ifne          87
      83: iconst_3
      84: goto          88
      87: iconst_4
      88: istore        4
      90: aload_0
      91: getfield      #4                  // Field len:I
      94: iload         4
      96: iadd
      97: aload_0
      98: getfield      #3                  // Field buffer:[B
     101: arraylength
     102: if_icmple     114
     105: aload_0
     106: iload         4
     108: invokespecial #5                  // Method ensureCapacity:(I)Z
     111: ifeq          208
     114: aload_0
     115: getfield      #3                  // Field buffer:[B
     118: aload_0
     119: dup
     120: getfield      #4                  // Field len:I
     123: dup_x1
     124: iconst_1
     125: iadd
     126: putfield      #4                  // Field len:I
     129: aload_3
     130: iconst_0
     131: baload
     132: bastore
     133: aload_3
     134: iconst_1
     135: baload
     136: ifeq          208
     139: aload_0
     140: getfield      #3                  // Field buffer:[B
     143: aload_0
     144: dup
     145: getfield      #4                  // Field len:I
     148: dup_x1
     149: iconst_1
     150: iadd
     151: putfield      #4                  // Field len:I
     154: aload_3
     155: iconst_1
     156: baload
     157: bastore
     158: aload_3
     159: iconst_2
     160: baload
     161: ifeq          208
     164: aload_0
     165: getfield      #3                  // Field buffer:[B
     168: aload_0
     169: dup
     170: getfield      #4                  // Field len:I
     173: dup_x1
     174: iconst_1
     175: iadd
     176: putfield      #4                  // Field len:I
     179: aload_3
     180: iconst_2
     181: baload
     182: bastore
     183: aload_3
     184: iconst_3
     185: baload
     186: ifeq          208
     189: aload_0
     190: getfield      #3                  // Field buffer:[B
     193: aload_0
     194: dup
     195: getfield      #4                  // Field len:I
     198: dup_x1
     199: iconst_1
     200: iadd
     201: putfield      #4                  // Field len:I
     204: aload_3
     205: iconst_3
     206: baload
     207: bastore
     208: return

  void appendReverseWeight16(int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: iload_1
       7: ldc           #7                  // int 65535
       9: iand
      10: ifne          21
      13: new           #8                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iload_1
      22: bipush        8
      24: iushr
      25: i2b
      26: istore_2
      27: iload_1
      28: i2b
      29: istore_3
      30: iload_3
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_2
      39: istore        4
      41: aload_0
      42: getfield      #4                  // Field len:I
      45: iload         4
      47: iadd
      48: aload_0
      49: getfield      #3                  // Field buffer:[B
      52: arraylength
      53: if_icmple     65
      56: aload_0
      57: iload         4
      59: invokespecial #5                  // Method ensureCapacity:(I)Z
      62: ifeq          121
      65: iload_3
      66: ifne          89
      69: aload_0
      70: getfield      #3                  // Field buffer:[B
      73: aload_0
      74: dup
      75: getfield      #4                  // Field len:I
      78: dup_x1
      79: iconst_1
      80: iadd
      81: putfield      #4                  // Field len:I
      84: iload_2
      85: bastore
      86: goto          121
      89: aload_0
      90: getfield      #3                  // Field buffer:[B
      93: aload_0
      94: getfield      #4                  // Field len:I
      97: iload_3
      98: bastore
      99: aload_0
     100: getfield      #3                  // Field buffer:[B
     103: aload_0
     104: getfield      #4                  // Field len:I
     107: iconst_1
     108: iadd
     109: iload_2
     110: bastore
     111: aload_0
     112: dup
     113: getfield      #4                  // Field len:I
     116: iconst_2
     117: iadd
     118: putfield      #4                  // Field len:I
     121: return

  void appendTo(com.ibm.icu.impl.coll.CollationKeys$SortKeyByteSink);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          36
       6: aload_0
       7: getfield      #4                  // Field len:I
      10: ifle          28
      13: aload_0
      14: getfield      #3                  // Field buffer:[B
      17: aload_0
      18: getfield      #4                  // Field len:I
      21: iconst_1
      22: isub
      23: baload
      24: iconst_1
      25: if_icmpeq     36
      28: new           #8                  // class java/lang/AssertionError
      31: dup
      32: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: aload_1
      37: aload_0
      38: getfield      #3                  // Field buffer:[B
      41: aload_0
      42: getfield      #4                  // Field len:I
      45: iconst_1
      46: isub
      47: invokevirtual #10                 // Method com/ibm/icu/impl/coll/CollationKeys$SortKeyByteSink.Append:([BI)V
      50: return

  private boolean ensureCapacity(int);
    Code:
       0: iconst_2
       1: aload_0
       2: getfield      #3                  // Field buffer:[B
       5: arraylength
       6: imul
       7: istore_2
       8: aload_0
       9: getfield      #4                  // Field len:I
      12: iconst_2
      13: iload_1
      14: imul
      15: iadd
      16: istore_3
      17: iload_2
      18: iload_3
      19: if_icmpge     24
      22: iload_3
      23: istore_2
      24: iload_2
      25: sipush        200
      28: if_icmpge     35
      31: sipush        200
      34: istore_2
      35: iload_2
      36: newarray       byte
      38: astore        4
      40: aload_0
      41: getfield      #3                  // Field buffer:[B
      44: iconst_0
      45: aload         4
      47: iconst_0
      48: aload_0
      49: getfield      #4                  // Field len:I
      52: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      55: aload_0
      56: aload         4
      58: putfield      #3                  // Field buffer:[B
      61: iconst_1
      62: ireturn

  static {};
    Code:
       0: ldc           #12                 // class com/ibm/icu/impl/coll/CollationKeys
       2: invokevirtual #13                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: return
}
