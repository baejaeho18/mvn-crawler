Compiled from "CollationDataBuilder.java"
final class com.ibm.icu.impl.coll.CollationDataBuilder$DataBuilderCollationIterator extends com.ibm.icu.impl.coll.CollationIterator {
  protected final com.ibm.icu.impl.coll.CollationDataBuilder builder;

  protected final com.ibm.icu.impl.coll.CollationData builderData;

  protected final int[] jamoCE32s;

  protected java.lang.CharSequence s;

  protected int pos;

  static final boolean $assertionsDisabled;

  com.ibm.icu.impl.coll.CollationDataBuilder$DataBuilderCollationIterator(com.ibm.icu.impl.coll.CollationDataBuilder, com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: aload_2
       2: iconst_0
       3: invokespecial #2                  // Method com/ibm/icu/impl/coll/CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;Z)V
       6: aload_0
       7: bipush        67
       9: newarray       int
      11: putfield      #4                  // Field jamoCE32s:[I
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      19: aload_0
      20: aload_2
      21: putfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
      24: aload_0
      25: getfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
      28: aload_0
      29: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      32: getfield      #7                  // Field com/ibm/icu/impl/coll/CollationDataBuilder.base:Lcom/ibm/icu/impl/coll/CollationData;
      35: putfield      #8                  // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
      38: iconst_0
      39: istore_3
      40: iload_3
      41: bipush        67
      43: if_icmpge     75
      46: iload_3
      47: invokestatic  #9                  // Method com/ibm/icu/impl/coll/CollationDataBuilder.jamoCpFromIndex:(I)I
      50: istore        4
      52: aload_0
      53: getfield      #4                  // Field jamoCE32s:[I
      56: iload_3
      57: bipush        7
      59: iload         4
      61: invokestatic  #11                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
      64: sipush        256
      67: ior
      68: iastore
      69: iinc          3, 1
      72: goto          40
      75: aload_0
      76: getfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
      79: aload_0
      80: getfield      #4                  // Field jamoCE32s:[I
      83: putfield      #12                 // Field com/ibm/icu/impl/coll/CollationData.jamoCE32s:[I
      86: return

  int fetchCEs(java.lang.CharSequence, int, long[], int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
       4: aload_0
       5: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
       8: getfield      #13                 // Field com/ibm/icu/impl/coll/CollationDataBuilder.ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      11: invokevirtual #14                 // Method com/ibm/icu/impl/coll/UVector32.getBuffer:()[I
      14: putfield      #15                 // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
      17: aload_0
      18: getfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
      21: aload_0
      22: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      25: getfield      #16                 // Field com/ibm/icu/impl/coll/CollationDataBuilder.ce64s:Lcom/ibm/icu/impl/coll/UVector64;
      28: invokevirtual #17                 // Method com/ibm/icu/impl/coll/UVector64.getBuffer:()[J
      31: putfield      #18                 // Field com/ibm/icu/impl/coll/CollationData.ces:[J
      34: aload_0
      35: getfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
      38: aload_0
      39: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      42: getfield      #19                 // Field com/ibm/icu/impl/coll/CollationDataBuilder.contexts:Ljava/lang/StringBuilder;
      45: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: putfield      #21                 // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
      51: aload_0
      52: invokevirtual #22                 // Method reset:()V
      55: aload_0
      56: aload_1
      57: putfield      #23                 // Field s:Ljava/lang/CharSequence;
      60: aload_0
      61: iload_2
      62: putfield      #24                 // Field pos:I
      65: aload_0
      66: getfield      #24                 // Field pos:I
      69: aload_0
      70: getfield      #23                 // Field s:Ljava/lang/CharSequence;
      73: invokeinterface #25,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      78: if_icmpge     229
      81: aload_0
      82: invokevirtual #26                 // Method clearCEs:()V
      85: aload_0
      86: getfield      #23                 // Field s:Ljava/lang/CharSequence;
      89: aload_0
      90: getfield      #24                 // Field pos:I
      93: invokestatic  #27                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      96: istore        5
      98: aload_0
      99: dup
     100: getfield      #24                 // Field pos:I
     103: iload         5
     105: invokestatic  #28                 // Method java/lang/Character.charCount:(I)I
     108: iadd
     109: putfield      #24                 // Field pos:I
     112: aload_0
     113: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
     116: getfield      #29                 // Field com/ibm/icu/impl/coll/CollationDataBuilder.trie:Lcom/ibm/icu/impl/Trie2Writable;
     119: iload         5
     121: invokevirtual #30                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
     124: istore        6
     126: iload         6
     128: sipush        192
     131: if_icmpne     160
     134: aload_0
     135: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
     138: getfield      #7                  // Field com/ibm/icu/impl/coll/CollationDataBuilder.base:Lcom/ibm/icu/impl/coll/CollationData;
     141: astore        7
     143: aload_0
     144: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
     147: getfield      #7                  // Field com/ibm/icu/impl/coll/CollationDataBuilder.base:Lcom/ibm/icu/impl/coll/CollationData;
     150: iload         5
     152: invokevirtual #31                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     155: istore        6
     157: goto          166
     160: aload_0
     161: getfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
     164: astore        7
     166: aload_0
     167: aload         7
     169: iload         5
     171: iload         6
     173: iconst_1
     174: invokevirtual #32                 // Method appendCEsFromCE32:(Lcom/ibm/icu/impl/coll/CollationData;IIZ)V
     177: iconst_0
     178: istore        8
     180: iload         8
     182: aload_0
     183: invokevirtual #33                 // Method getCEsLength:()I
     186: if_icmpge     226
     189: aload_0
     190: iload         8
     192: invokevirtual #34                 // Method getCE:(I)J
     195: lstore        9
     197: lload         9
     199: lconst_0
     200: lcmp
     201: ifeq          220
     204: iload         4
     206: bipush        31
     208: if_icmpge     217
     211: aload_3
     212: iload         4
     214: lload         9
     216: lastore
     217: iinc          4, 1
     220: iinc          8, 1
     223: goto          180
     226: goto          65
     229: iload         4
     231: ireturn

  public void resetToOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method reset:()V
       4: aload_0
       5: iload_1
       6: putfield      #24                 // Field pos:I
       9: return

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pos:I
       4: ireturn

  public int nextCodePoint();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pos:I
       4: aload_0
       5: getfield      #23                 // Field s:Ljava/lang/CharSequence;
       8: invokeinterface #25,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      13: if_icmpne     18
      16: iconst_m1
      17: ireturn
      18: aload_0
      19: getfield      #23                 // Field s:Ljava/lang/CharSequence;
      22: aload_0
      23: getfield      #24                 // Field pos:I
      26: invokestatic  #27                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      29: istore_1
      30: aload_0
      31: dup
      32: getfield      #24                 // Field pos:I
      35: iload_1
      36: invokestatic  #28                 // Method java/lang/Character.charCount:(I)I
      39: iadd
      40: putfield      #24                 // Field pos:I
      43: iload_1
      44: ireturn

  public int previousCodePoint();
    Code:
       0: aload_0
       1: getfield      #24                 // Field pos:I
       4: ifne          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #23                 // Field s:Ljava/lang/CharSequence;
      13: aload_0
      14: getfield      #24                 // Field pos:I
      17: invokestatic  #35                 // Method java/lang/Character.codePointBefore:(Ljava/lang/CharSequence;I)I
      20: istore_1
      21: aload_0
      22: dup
      23: getfield      #24                 // Field pos:I
      26: iload_1
      27: invokestatic  #28                 // Method java/lang/Character.charCount:(I)I
      30: isub
      31: putfield      #24                 // Field pos:I
      34: iload_1
      35: ireturn

  protected void forwardNumCodePoints(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field s:Ljava/lang/CharSequence;
       5: aload_0
       6: getfield      #24                 // Field pos:I
       9: iload_1
      10: invokestatic  #36                 // Method java/lang/Character.offsetByCodePoints:(Ljava/lang/CharSequence;II)I
      13: putfield      #24                 // Field pos:I
      16: return

  protected void backwardNumCodePoints(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #23                 // Field s:Ljava/lang/CharSequence;
       5: aload_0
       6: getfield      #24                 // Field pos:I
       9: iload_1
      10: ineg
      11: invokestatic  #36                 // Method java/lang/Character.offsetByCodePoints:(Ljava/lang/CharSequence;II)I
      14: putfield      #24                 // Field pos:I
      17: return

  protected int getDataCE32(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
       4: getfield      #29                 // Field com/ibm/icu/impl/coll/CollationDataBuilder.trie:Lcom/ibm/icu/impl/Trie2Writable;
       7: iload_1
       8: invokevirtual #30                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      11: ireturn

  protected int getCE32FromBuilderData(int);
    Code:
       0: getstatic     #37                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: iload_1
       7: bipush        7
       9: invokestatic  #38                 // Method com/ibm/icu/impl/coll/Collation.hasCE32Tag:(II)Z
      12: ifne          23
      15: new           #39                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #40                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: iload_1
      24: sipush        256
      27: iand
      28: ifeq          48
      31: iload_1
      32: invokestatic  #41                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
      35: istore_2
      36: aload_0
      37: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      40: getfield      #29                 // Field com/ibm/icu/impl/coll/CollationDataBuilder.trie:Lcom/ibm/icu/impl/Trie2Writable;
      43: iload_2
      44: invokevirtual #30                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      47: ireturn
      48: aload_0
      49: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      52: iload_1
      53: invokevirtual #42                 // Method com/ibm/icu/impl/coll/CollationDataBuilder.getConditionalCE32ForCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
      56: astore_2
      57: aload_2
      58: getfield      #43                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.builtCE32:I
      61: iconst_1
      62: if_icmpne     117
      65: aload_2
      66: aload_0
      67: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      70: aload_2
      71: invokevirtual #44                 // Method com/ibm/icu/impl/coll/CollationDataBuilder.buildContext:(Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;)I
      74: putfield      #43                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.builtCE32:I
      77: goto          100
      80: astore_3
      81: aload_0
      82: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      85: invokevirtual #46                 // Method com/ibm/icu/impl/coll/CollationDataBuilder.clearContexts:()V
      88: aload_2
      89: aload_0
      90: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
      93: aload_2
      94: invokevirtual #44                 // Method com/ibm/icu/impl/coll/CollationDataBuilder.buildContext:(Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;)I
      97: putfield      #43                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.builtCE32:I
     100: aload_0
     101: getfield      #6                  // Field builderData:Lcom/ibm/icu/impl/coll/CollationData;
     104: aload_0
     105: getfield      #5                  // Field builder:Lcom/ibm/icu/impl/coll/CollationDataBuilder;
     108: getfield      #19                 // Field com/ibm/icu/impl/coll/CollationDataBuilder.contexts:Ljava/lang/StringBuilder;
     111: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: putfield      #21                 // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
     117: aload_2
     118: getfield      #43                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.builtCE32:I
     121: ireturn
    Exception table:
       from    to  target type
          65    77    80   Class java/lang/IndexOutOfBoundsException

  static {};
    Code:
       0: ldc           #1                  // class com/ibm/icu/impl/coll/CollationDataBuilder
       2: invokevirtual #47                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #37                 // Field $assertionsDisabled:Z
      16: return
}
