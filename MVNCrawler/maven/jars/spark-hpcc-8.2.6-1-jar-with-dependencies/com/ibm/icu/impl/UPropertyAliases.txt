Compiled from "UPropertyAliases.java"
public final class com.ibm.icu.impl.UPropertyAliases {
  private static final int IX_VALUE_MAPS_OFFSET;

  private static final int IX_BYTE_TRIES_OFFSET;

  private static final int IX_NAME_GROUPS_OFFSET;

  private static final int IX_RESERVED3_OFFSET;

  private int[] valueMaps;

  private byte[] bytesTries;

  private java.lang.String nameGroups;

  private static final com.ibm.icu.impl.UPropertyAliases$IsAcceptable IS_ACCEPTABLE;

  private static final int DATA_FORMAT;

  public static final com.ibm.icu.impl.UPropertyAliases INSTANCE;

  private void load(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #2                  // int 1886282093
       3: getstatic     #3                  // Field IS_ACCEPTABLE:Lcom/ibm/icu/impl/UPropertyAliases$IsAcceptable;
       6: invokestatic  #4                  // Method com/ibm/icu/impl/ICUBinary.readHeader:(Ljava/nio/ByteBuffer;ILcom/ibm/icu/impl/ICUBinary$Authenticate;)I
       9: pop
      10: aload_1
      11: invokevirtual #5                  // Method java/nio/ByteBuffer.getInt:()I
      14: iconst_4
      15: idiv
      16: istore_2
      17: iload_2
      18: bipush        8
      20: if_icmpge     33
      23: new           #6                  // class java/io/IOException
      26: dup
      27: ldc           #7                  // String pnames.icu: not enough indexes
      29: invokespecial #8                  // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: iload_2
      34: newarray       int
      36: astore_3
      37: aload_3
      38: iconst_0
      39: iload_2
      40: iconst_4
      41: imul
      42: iastore
      43: iconst_1
      44: istore        4
      46: iload         4
      48: iload_2
      49: if_icmpge     66
      52: aload_3
      53: iload         4
      55: aload_1
      56: invokevirtual #5                  // Method java/nio/ByteBuffer.getInt:()I
      59: iastore
      60: iinc          4, 1
      63: goto          46
      66: aload_3
      67: iconst_0
      68: iaload
      69: istore        4
      71: aload_3
      72: iconst_1
      73: iaload
      74: istore        5
      76: iload         5
      78: iload         4
      80: isub
      81: iconst_4
      82: idiv
      83: istore        6
      85: aload_0
      86: aload_1
      87: iload         6
      89: iconst_0
      90: invokestatic  #9                  // Method com/ibm/icu/impl/ICUBinary.getInts:(Ljava/nio/ByteBuffer;II)[I
      93: putfield      #10                 // Field valueMaps:[I
      96: iload         5
      98: istore        4
     100: aload_3
     101: iconst_2
     102: iaload
     103: istore        5
     105: iload         5
     107: iload         4
     109: isub
     110: istore        7
     112: aload_0
     113: iload         7
     115: newarray       byte
     117: putfield      #11                 // Field bytesTries:[B
     120: aload_1
     121: aload_0
     122: getfield      #11                 // Field bytesTries:[B
     125: invokevirtual #12                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     128: pop
     129: iload         5
     131: istore        4
     133: aload_3
     134: iconst_3
     135: iaload
     136: istore        5
     138: iload         5
     140: iload         4
     142: isub
     143: istore        7
     145: new           #13                 // class java/lang/StringBuilder
     148: dup
     149: iload         7
     151: invokespecial #14                 // Method java/lang/StringBuilder."<init>":(I)V
     154: astore        8
     156: iconst_0
     157: istore        9
     159: iload         9
     161: iload         7
     163: if_icmpge     183
     166: aload         8
     168: aload_1
     169: invokevirtual #15                 // Method java/nio/ByteBuffer.get:()B
     172: i2c
     173: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     176: pop
     177: iinc          9, 1
     180: goto          159
     183: aload_0
     184: aload         8
     186: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     189: putfield      #18                 // Field nameGroups:Ljava/lang/String;
     192: return

  private com.ibm.icu.impl.UPropertyAliases() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: ldc           #20                 // String pnames.icu
       6: invokestatic  #21                 // Method com/ibm/icu/impl/ICUBinary.getRequiredData:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokespecial #22                 // Method load:(Ljava/nio/ByteBuffer;)V
      15: return

  private int findProperty(int);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #10                 // Field valueMaps:[I
       6: iconst_0
       7: iaload
       8: istore_3
       9: iload_3
      10: ifle          74
      13: aload_0
      14: getfield      #10                 // Field valueMaps:[I
      17: iload_2
      18: iaload
      19: istore        4
      21: aload_0
      22: getfield      #10                 // Field valueMaps:[I
      25: iload_2
      26: iconst_1
      27: iadd
      28: iaload
      29: istore        5
      31: iinc          2, 2
      34: iload_1
      35: iload         4
      37: if_icmpge     43
      40: goto          74
      43: iload_1
      44: iload         5
      46: if_icmpge     58
      49: iload_2
      50: iload_1
      51: iload         4
      53: isub
      54: iconst_2
      55: imul
      56: iadd
      57: ireturn
      58: iload_2
      59: iload         5
      61: iload         4
      63: isub
      64: iconst_2
      65: imul
      66: iadd
      67: istore_2
      68: iinc          3, -1
      71: goto          9
      74: iconst_0
      75: ireturn

  private int findPropertyValueNameGroup(int, int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iinc          1, 1
       9: aload_0
      10: getfield      #10                 // Field valueMaps:[I
      13: iload_1
      14: iinc          1, 1
      17: iaload
      18: istore_3
      19: iload_3
      20: bipush        16
      22: if_icmpge     91
      25: iload_3
      26: ifle          147
      29: aload_0
      30: getfield      #10                 // Field valueMaps:[I
      33: iload_1
      34: iaload
      35: istore        4
      37: aload_0
      38: getfield      #10                 // Field valueMaps:[I
      41: iload_1
      42: iconst_1
      43: iadd
      44: iaload
      45: istore        5
      47: iinc          1, 2
      50: iload_2
      51: iload         4
      53: if_icmpge     59
      56: goto          147
      59: iload_2
      60: iload         5
      62: if_icmpge     77
      65: aload_0
      66: getfield      #10                 // Field valueMaps:[I
      69: iload_1
      70: iload_2
      71: iadd
      72: iload         4
      74: isub
      75: iaload
      76: ireturn
      77: iload_1
      78: iload         5
      80: iload         4
      82: isub
      83: iadd
      84: istore_1
      85: iinc          3, -1
      88: goto          25
      91: iload_1
      92: istore        4
      94: iload_1
      95: iload_3
      96: iadd
      97: bipush        16
      99: isub
     100: istore        5
     102: aload_0
     103: getfield      #10                 // Field valueMaps:[I
     106: iload_1
     107: iaload
     108: istore        6
     110: iload_2
     111: iload         6
     113: if_icmpge     119
     116: goto          147
     119: iload_2
     120: iload         6
     122: if_icmpne     138
     125: aload_0
     126: getfield      #10                 // Field valueMaps:[I
     129: iload         5
     131: iload_1
     132: iadd
     133: iload         4
     135: isub
     136: iaload
     137: ireturn
     138: iinc          1, 1
     141: iload_1
     142: iload         5
     144: if_icmplt     102
     147: iconst_0
     148: ireturn

  private java.lang.String getName(int, int);
    Code:
       0: aload_0
       1: getfield      #18                 // Field nameGroups:Ljava/lang/String;
       4: iload_1
       5: iinc          1, 1
       8: invokevirtual #23                 // Method java/lang/String.charAt:(I)C
      11: istore_3
      12: iload_2
      13: iflt          21
      16: iload_3
      17: iload_2
      18: if_icmpgt     31
      21: new           #24                 // class com/ibm/icu/impl/IllegalIcuArgumentException
      24: dup
      25: ldc           #25                 // String Invalid property (value) name choice
      27: invokespecial #26                 // Method com/ibm/icu/impl/IllegalIcuArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_2
      32: ifle          59
      35: iconst_0
      36: aload_0
      37: getfield      #18                 // Field nameGroups:Ljava/lang/String;
      40: iload_1
      41: iinc          1, 1
      44: invokevirtual #23                 // Method java/lang/String.charAt:(I)C
      47: if_icmpeq     53
      50: goto          35
      53: iinc          2, -1
      56: goto          31
      59: iload_1
      60: istore        4
      62: iconst_0
      63: aload_0
      64: getfield      #18                 // Field nameGroups:Ljava/lang/String;
      67: iload_1
      68: invokevirtual #23                 // Method java/lang/String.charAt:(I)C
      71: if_icmpeq     80
      74: iinc          1, 1
      77: goto          62
      80: iload         4
      82: iload_1
      83: if_icmpne     88
      86: aconst_null
      87: areturn
      88: aload_0
      89: getfield      #18                 // Field nameGroups:Ljava/lang/String;
      92: iload         4
      94: iload_1
      95: invokevirtual #27                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      98: areturn

  private static int asciiToLowercase(int);
    Code:
       0: bipush        65
       2: iload_0
       3: if_icmpgt     19
       6: iload_0
       7: bipush        90
       9: if_icmpgt     19
      12: iload_0
      13: bipush        32
      15: iadd
      16: goto          20
      19: iload_0
      20: ireturn

  private boolean containsName(com.ibm.icu.util.BytesTrie, java.lang.CharSequence);
    Code:
       0: getstatic     #28                 // Field com/ibm/icu/util/BytesTrie$Result.NO_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: aload_2
      10: invokeinterface #29,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      15: if_icmpge     95
      18: aload_2
      19: iload         4
      21: invokeinterface #30,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      26: istore        5
      28: iload         5
      30: bipush        45
      32: if_icmpeq     89
      35: iload         5
      37: bipush        95
      39: if_icmpeq     89
      42: iload         5
      44: bipush        32
      46: if_icmpeq     89
      49: bipush        9
      51: iload         5
      53: if_icmpgt     66
      56: iload         5
      58: bipush        13
      60: if_icmpgt     66
      63: goto          89
      66: aload_3
      67: invokevirtual #31                 // Method com/ibm/icu/util/BytesTrie$Result.hasNext:()Z
      70: ifne          75
      73: iconst_0
      74: ireturn
      75: iload         5
      77: invokestatic  #32                 // Method asciiToLowercase:(I)I
      80: istore        5
      82: aload_1
      83: iload         5
      85: invokevirtual #33                 // Method com/ibm/icu/util/BytesTrie.next:(I)Lcom/ibm/icu/util/BytesTrie$Result;
      88: astore_3
      89: iinc          4, 1
      92: goto          7
      95: aload_3
      96: invokevirtual #34                 // Method com/ibm/icu/util/BytesTrie$Result.hasValue:()Z
      99: ireturn

  public java.lang.String getPropertyName(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #35                 // Method findProperty:(I)I
       5: istore_3
       6: iload_3
       7: ifne          54
      10: new           #36                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #13                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #38                 // String Invalid property enum
      23: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #41                 // String  (0x
      32: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_1
      36: invokestatic  #42                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #43                 // String )
      44: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: aload_0
      56: getfield      #10                 // Field valueMaps:[I
      59: iload_3
      60: iaload
      61: iload_2
      62: invokespecial #45                 // Method getName:(II)Ljava/lang/String;
      65: areturn

  public java.lang.String getPropertyValueName(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #35                 // Method findProperty:(I)I
       5: istore        4
       7: iload         4
       9: ifne          56
      12: new           #36                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #13                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #38                 // String Invalid property enum
      25: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_1
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #41                 // String  (0x
      34: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: iload_1
      38: invokestatic  #42                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      41: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #43                 // String )
      46: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_0
      58: getfield      #10                 // Field valueMaps:[I
      61: iload         4
      63: iconst_1
      64: iadd
      65: iaload
      66: iload_2
      67: invokespecial #46                 // Method findPropertyValueNameGroup:(II)I
      70: istore        5
      72: iload         5
      74: ifne          121
      77: new           #36                 // class java/lang/IllegalArgumentException
      80: dup
      81: new           #13                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #47                 // String Property
      90: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: iload_1
      94: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #41                 // String  (0x
      99: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: iload_1
     103: invokestatic  #42                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
     106: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #48                 // String ) does not have named values
     111: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: aload_0
     122: iload         5
     124: iload_3
     125: invokespecial #45                 // Method getName:(II)Ljava/lang/String;
     128: areturn

  private int getPropertyOrValueEnum(int, java.lang.CharSequence);
    Code:
       0: new           #49                 // class com/ibm/icu/util/BytesTrie
       3: dup
       4: aload_0
       5: getfield      #11                 // Field bytesTries:[B
       8: iload_1
       9: invokespecial #50                 // Method com/ibm/icu/util/BytesTrie."<init>":([BI)V
      12: astore_3
      13: aload_0
      14: aload_3
      15: aload_2
      16: invokespecial #51                 // Method containsName:(Lcom/ibm/icu/util/BytesTrie;Ljava/lang/CharSequence;)Z
      19: ifeq          27
      22: aload_3
      23: invokevirtual #52                 // Method com/ibm/icu/util/BytesTrie.getValue:()I
      26: ireturn
      27: iconst_m1
      28: ireturn

  public int getPropertyEnum(java.lang.CharSequence);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_1
       3: invokespecial #54                 // Method getPropertyOrValueEnum:(ILjava/lang/CharSequence;)I
       6: ireturn

  public int getPropertyValueEnum(int, java.lang.CharSequence);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #35                 // Method findProperty:(I)I
       5: istore_3
       6: iload_3
       7: ifne          54
      10: new           #36                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #13                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #38                 // String Invalid property enum
      23: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #41                 // String  (0x
      32: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_1
      36: invokestatic  #42                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #43                 // String )
      44: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_0
      55: getfield      #10                 // Field valueMaps:[I
      58: iload_3
      59: iconst_1
      60: iadd
      61: iaload
      62: istore_3
      63: iload_3
      64: ifne          111
      67: new           #36                 // class java/lang/IllegalArgumentException
      70: dup
      71: new           #13                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #47                 // String Property
      80: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: iload_1
      84: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      87: ldc           #41                 // String  (0x
      89: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: iload_1
      93: invokestatic  #42                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      96: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #48                 // String ) does not have named values
     101: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: aload_0
     112: aload_0
     113: getfield      #10                 // Field valueMaps:[I
     116: iload_3
     117: iaload
     118: aload_2
     119: invokespecial #54                 // Method getPropertyOrValueEnum:(ILjava/lang/CharSequence;)I
     122: ireturn

  public int getPropertyValueEnumNoThrow(int, java.lang.CharSequence);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #35                 // Method findProperty:(I)I
       5: istore_3
       6: iload_3
       7: ifne          12
      10: iconst_m1
      11: ireturn
      12: aload_0
      13: getfield      #10                 // Field valueMaps:[I
      16: iload_3
      17: iconst_1
      18: iadd
      19: iaload
      20: istore_3
      21: iload_3
      22: ifne          27
      25: iconst_m1
      26: ireturn
      27: aload_0
      28: aload_0
      29: getfield      #10                 // Field valueMaps:[I
      32: iload_3
      33: iaload
      34: aload_2
      35: invokespecial #54                 // Method getPropertyOrValueEnum:(ILjava/lang/CharSequence;)I
      38: ireturn

  public static int compare(java.lang.String, java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        5
       7: iconst_0
       8: istore        6
      10: iload_2
      11: aload_0
      12: invokevirtual #55                 // Method java/lang/String.length:()I
      15: if_icmpge     109
      18: aload_0
      19: iload_2
      20: invokevirtual #23                 // Method java/lang/String.charAt:(I)C
      23: istore        5
      25: iload         5
      27: lookupswitch  { // 8
                     9: 100
                    10: 100
                    11: 100
                    12: 100
                    13: 100
                    32: 100
                    45: 100
                    95: 100
               default: 106
          }
     100: iinc          2, 1
     103: goto          10
     106: goto          109
     109: iload_3
     110: aload_1
     111: invokevirtual #55                 // Method java/lang/String.length:()I
     114: if_icmpge     209
     117: aload_1
     118: iload_3
     119: invokevirtual #23                 // Method java/lang/String.charAt:(I)C
     122: istore        6
     124: iload         6
     126: lookupswitch  { // 8
                     9: 200
                    10: 200
                    11: 200
                    12: 200
                    13: 200
                    32: 200
                    45: 200
                    95: 200
               default: 206
          }
     200: iinc          3, 1
     203: goto          109
     206: goto          209
     209: iload_2
     210: aload_0
     211: invokevirtual #55                 // Method java/lang/String.length:()I
     214: if_icmpne     221
     217: iconst_1
     218: goto          222
     221: iconst_0
     222: istore        7
     224: iload_3
     225: aload_1
     226: invokevirtual #55                 // Method java/lang/String.length:()I
     229: if_icmpne     236
     232: iconst_1
     233: goto          237
     236: iconst_0
     237: istore        8
     239: iload         7
     241: ifeq          257
     244: iload         8
     246: ifeq          251
     249: iconst_0
     250: ireturn
     251: iconst_0
     252: istore        5
     254: goto          265
     257: iload         8
     259: ifeq          265
     262: iconst_0
     263: istore        6
     265: iload         5
     267: invokestatic  #32                 // Method asciiToLowercase:(I)I
     270: iload         6
     272: invokestatic  #32                 // Method asciiToLowercase:(I)I
     275: isub
     276: istore        4
     278: iload         4
     280: ifeq          286
     283: iload         4
     285: ireturn
     286: iinc          2, 1
     289: iinc          3, 1
     292: goto          10

  static {};
    Code:
       0: new           #56                 // class com/ibm/icu/impl/UPropertyAliases$IsAcceptable
       3: dup
       4: aconst_null
       5: invokespecial #57                 // Method com/ibm/icu/impl/UPropertyAliases$IsAcceptable."<init>":(Lcom/ibm/icu/impl/UPropertyAliases$1;)V
       8: putstatic     #3                  // Field IS_ACCEPTABLE:Lcom/ibm/icu/impl/UPropertyAliases$IsAcceptable;
      11: new           #1                  // class com/ibm/icu/impl/UPropertyAliases
      14: dup
      15: invokespecial #58                 // Method "<init>":()V
      18: putstatic     #59                 // Field INSTANCE:Lcom/ibm/icu/impl/UPropertyAliases;
      21: goto          47
      24: astore_0
      25: new           #60                 // class java/util/MissingResourceException
      28: dup
      29: ldc           #61                 // String Could not construct UPropertyAliases. Missing pnames.icu
      31: ldc           #62                 // String
      33: ldc           #62                 // String
      35: invokespecial #63                 // Method java/util/MissingResourceException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      38: astore_1
      39: aload_1
      40: aload_0
      41: invokevirtual #64                 // Method java/util/MissingResourceException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      44: pop
      45: aload_1
      46: athrow
      47: return
    Exception table:
       from    to  target type
          11    21    24   Class java/io/IOException
}
