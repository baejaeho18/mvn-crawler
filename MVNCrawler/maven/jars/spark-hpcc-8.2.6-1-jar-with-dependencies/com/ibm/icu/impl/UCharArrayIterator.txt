Compiled from "UCharArrayIterator.java"
public final class com.ibm.icu.impl.UCharArrayIterator extends com.ibm.icu.text.UCharacterIterator {
  private final char[] text;

  private final int start;

  private final int limit;

  private int pos;

  public com.ibm.icu.impl.UCharArrayIterator(char[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/text/UCharacterIterator."<init>":()V
       4: iload_2
       5: iflt          19
       8: iload_3
       9: aload_1
      10: arraylength
      11: if_icmpgt     19
      14: iload_2
      15: iload_3
      16: if_icmple     70
      19: new           #2                  // class java/lang/IllegalArgumentException
      22: dup
      23: new           #3                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #5                  // String start:
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #8                  // String  or limit:
      41: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_3
      45: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #9                  // String  out of range [0,
      50: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: arraylength
      55: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: ldc           #10                 // String )
      60: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: aload_0
      71: aload_1
      72: putfield      #13                 // Field text:[C
      75: aload_0
      76: iload_2
      77: putfield      #14                 // Field start:I
      80: aload_0
      81: iload_3
      82: putfield      #15                 // Field limit:I
      85: aload_0
      86: iload_2
      87: putfield      #16                 // Field pos:I
      90: return

  public int current();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pos:I
       4: aload_0
       5: getfield      #15                 // Field limit:I
       8: if_icmpge     23
      11: aload_0
      12: getfield      #13                 // Field text:[C
      15: aload_0
      16: getfield      #16                 // Field pos:I
      19: caload
      20: goto          24
      23: iconst_m1
      24: ireturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #15                 // Field limit:I
       4: aload_0
       5: getfield      #14                 // Field start:I
       8: isub
       9: ireturn

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pos:I
       4: aload_0
       5: getfield      #14                 // Field start:I
       8: isub
       9: ireturn

  public int next();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pos:I
       4: aload_0
       5: getfield      #15                 // Field limit:I
       8: if_icmpge     30
      11: aload_0
      12: getfield      #13                 // Field text:[C
      15: aload_0
      16: dup
      17: getfield      #16                 // Field pos:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #16                 // Field pos:I
      26: caload
      27: goto          31
      30: iconst_m1
      31: ireturn

  public int previous();
    Code:
       0: aload_0
       1: getfield      #16                 // Field pos:I
       4: aload_0
       5: getfield      #14                 // Field start:I
       8: if_icmple     30
      11: aload_0
      12: getfield      #13                 // Field text:[C
      15: aload_0
      16: dup
      17: getfield      #16                 // Field pos:I
      20: iconst_1
      21: isub
      22: dup_x1
      23: putfield      #16                 // Field pos:I
      26: caload
      27: goto          31
      30: iconst_m1
      31: ireturn

  public void setIndex(int);
    Code:
       0: iload_1
       1: iflt          17
       4: iload_1
       5: aload_0
       6: getfield      #15                 // Field limit:I
       9: aload_0
      10: getfield      #14                 // Field start:I
      13: isub
      14: if_icmple     66
      17: new           #18                 // class java/lang/IndexOutOfBoundsException
      20: dup
      21: new           #3                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #19                 // String index:
      30: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: iload_1
      34: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      37: ldc           #9                  // String  out of range [0,
      39: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #15                 // Field limit:I
      46: aload_0
      47: getfield      #14                 // Field start:I
      50: isub
      51: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: ldc           #10                 // String )
      56: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #20                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: aload_0
      68: getfield      #14                 // Field start:I
      71: iload_1
      72: iadd
      73: putfield      #16                 // Field pos:I
      76: return

  public int getText(char[], int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field limit:I
       4: aload_0
       5: getfield      #14                 // Field start:I
       8: isub
       9: istore_3
      10: aload_0
      11: getfield      #13                 // Field text:[C
      14: aload_0
      15: getfield      #14                 // Field start:I
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: iload_3
      25: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method com/ibm/icu/text/UCharacterIterator.clone:()Ljava/lang/Object;
       4: areturn
       5: astore_1
       6: aconst_null
       7: areturn
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/CloneNotSupportedException
}
