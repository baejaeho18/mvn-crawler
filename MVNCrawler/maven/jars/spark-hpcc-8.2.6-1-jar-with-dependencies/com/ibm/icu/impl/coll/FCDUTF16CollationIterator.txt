Compiled from "FCDUTF16CollationIterator.java"
public final class com.ibm.icu.impl.coll.FCDUTF16CollationIterator extends com.ibm.icu.impl.coll.UTF16CollationIterator {
  private java.lang.CharSequence rawSeq;

  private static final int rawStart;

  private int segmentStart;

  private int segmentLimit;

  private int rawLimit;

  private final com.ibm.icu.impl.Normalizer2Impl nfcImpl;

  private java.lang.StringBuilder normalized;

  private int checkDir;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.impl.coll.FCDUTF16CollationIterator(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/ibm/icu/impl/coll/UTF16CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;)V
       5: aload_0
       6: aload_1
       7: getfield      #2                  // Field com/ibm/icu/impl/coll/CollationData.nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      10: putfield      #3                  // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      13: return

  public com.ibm.icu.impl.coll.FCDUTF16CollationIterator(com.ibm.icu.impl.coll.CollationData, boolean, java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #4                  // Method com/ibm/icu/impl/coll/UTF16CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;ZLjava/lang/CharSequence;I)V
       9: aload_0
      10: aload_3
      11: putfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      14: aload_0
      15: iload         4
      17: putfield      #6                  // Field segmentStart:I
      20: aload_0
      21: aload_3
      22: invokeinterface #7,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      27: putfield      #8                  // Field rawLimit:I
      30: aload_0
      31: aload_1
      32: getfield      #2                  // Field com/ibm/icu/impl/coll/CollationData.nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      35: putfield      #3                  // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      38: aload_0
      39: iconst_1
      40: putfield      #9                  // Field checkDir:I
      43: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class com/ibm/icu/impl/coll/CollationIterator
       4: ifeq          22
       7: aload_0
       8: aload_1
       9: invokevirtual #11                 // Method com/ibm/icu/impl/coll/CollationIterator.equals:(Ljava/lang/Object;)Z
      12: ifeq          22
      15: aload_1
      16: instanceof    #12                 // class com/ibm/icu/impl/coll/FCDUTF16CollationIterator
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #12                 // class com/ibm/icu/impl/coll/FCDUTF16CollationIterator
      28: astore_2
      29: aload_0
      30: getfield      #9                  // Field checkDir:I
      33: aload_2
      34: getfield      #9                  // Field checkDir:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #9                  // Field checkDir:I
      46: ifne          86
      49: aload_0
      50: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      53: aload_0
      54: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      57: if_acmpne     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: aload_2
      66: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      69: aload_2
      70: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      73: if_acmpne     80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: if_icmpeq     86
      84: iconst_0
      85: ireturn
      86: aload_0
      87: getfield      #9                  // Field checkDir:I
      90: ifne          104
      93: aload_0
      94: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      97: aload_0
      98: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
     101: if_acmpne     125
     104: aload_0
     105: getfield      #14                 // Field pos:I
     108: iconst_0
     109: isub
     110: aload_2
     111: getfield      #14                 // Field pos:I
     114: iconst_0
     115: isub
     116: if_icmpne     123
     119: iconst_1
     120: goto          124
     123: iconst_0
     124: ireturn
     125: aload_0
     126: getfield      #6                  // Field segmentStart:I
     129: iconst_0
     130: isub
     131: aload_2
     132: getfield      #6                  // Field segmentStart:I
     135: iconst_0
     136: isub
     137: if_icmpne     165
     140: aload_0
     141: getfield      #14                 // Field pos:I
     144: aload_0
     145: getfield      #15                 // Field start:I
     148: isub
     149: aload_2
     150: getfield      #14                 // Field pos:I
     153: aload_2
     154: getfield      #15                 // Field start:I
     157: isub
     158: if_icmpne     165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: ireturn

  public int hashCode();
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          16
       6: new           #17                 // class java/lang/AssertionError
       9: dup
      10: ldc           #18                 // String hashCode not designed
      12: invokespecial #19                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      15: athrow
      16: bipush        42
      18: ireturn

  public void resetToOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method reset:()V
       4: aload_0
       5: aload_0
       6: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
       9: putfield      #13                 // Field seq:Ljava/lang/CharSequence;
      12: aload_0
      13: aload_0
      14: aload_0
      15: iconst_0
      16: iload_1
      17: iadd
      18: dup_x1
      19: putfield      #14                 // Field pos:I
      22: dup_x1
      23: putfield      #6                  // Field segmentStart:I
      26: putfield      #15                 // Field start:I
      29: aload_0
      30: aload_0
      31: getfield      #8                  // Field rawLimit:I
      34: putfield      #21                 // Field limit:I
      37: aload_0
      38: iconst_1
      39: putfield      #9                  // Field checkDir:I
      42: return

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #9                  // Field checkDir:I
       4: ifne          18
       7: aload_0
       8: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      11: aload_0
      12: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      15: if_acmpne     25
      18: aload_0
      19: getfield      #14                 // Field pos:I
      22: iconst_0
      23: isub
      24: ireturn
      25: aload_0
      26: getfield      #14                 // Field pos:I
      29: aload_0
      30: getfield      #15                 // Field start:I
      33: if_icmpne     43
      36: aload_0
      37: getfield      #6                  // Field segmentStart:I
      40: iconst_0
      41: isub
      42: ireturn
      43: aload_0
      44: getfield      #22                 // Field segmentLimit:I
      47: iconst_0
      48: isub
      49: ireturn

  public void setText(boolean, java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: invokespecial #23                 // Method com/ibm/icu/impl/coll/UTF16CollationIterator.setText:(ZLjava/lang/CharSequence;I)V
       7: aload_0
       8: aload_2
       9: putfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      12: aload_0
      13: iload_3
      14: putfield      #6                  // Field segmentStart:I
      17: aload_0
      18: aload_0
      19: aload_2
      20: invokeinterface #7,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      25: dup_x1
      26: putfield      #21                 // Field limit:I
      29: putfield      #8                  // Field rawLimit:I
      32: aload_0
      33: iconst_1
      34: putfield      #9                  // Field checkDir:I
      37: return

  public int nextCodePoint();
    Code:
       0: aload_0
       1: getfield      #9                  // Field checkDir:I
       4: ifle          123
       7: aload_0
       8: getfield      #14                 // Field pos:I
      11: aload_0
      12: getfield      #21                 // Field limit:I
      15: if_icmpne     20
      18: iconst_m1
      19: ireturn
      20: aload_0
      21: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      24: aload_0
      25: dup
      26: getfield      #14                 // Field pos:I
      29: dup_x1
      30: iconst_1
      31: iadd
      32: putfield      #14                 // Field pos:I
      35: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      40: istore_1
      41: iload_1
      42: invokestatic  #26                 // Method com/ibm/icu/impl/coll/CollationFCD.hasTccc:(I)Z
      45: ifeq          172
      48: iload_1
      49: invokestatic  #27                 // Method com/ibm/icu/impl/coll/CollationFCD.maybeTibetanCompositeVowel:(I)Z
      52: ifne          85
      55: aload_0
      56: getfield      #14                 // Field pos:I
      59: aload_0
      60: getfield      #21                 // Field limit:I
      63: if_icmpeq     172
      66: aload_0
      67: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      70: aload_0
      71: getfield      #14                 // Field pos:I
      74: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      79: invokestatic  #28                 // Method com/ibm/icu/impl/coll/CollationFCD.hasLccc:(I)Z
      82: ifeq          172
      85: aload_0
      86: dup
      87: getfield      #14                 // Field pos:I
      90: iconst_1
      91: isub
      92: putfield      #14                 // Field pos:I
      95: aload_0
      96: invokespecial #29                 // Method nextSegment:()V
      99: aload_0
     100: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     103: aload_0
     104: dup
     105: getfield      #14                 // Field pos:I
     108: dup_x1
     109: iconst_1
     110: iadd
     111: putfield      #14                 // Field pos:I
     114: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     119: istore_1
     120: goto          172
     123: aload_0
     124: getfield      #9                  // Field checkDir:I
     127: ifne          165
     130: aload_0
     131: getfield      #14                 // Field pos:I
     134: aload_0
     135: getfield      #21                 // Field limit:I
     138: if_icmpeq     165
     141: aload_0
     142: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     145: aload_0
     146: dup
     147: getfield      #14                 // Field pos:I
     150: dup_x1
     151: iconst_1
     152: iadd
     153: putfield      #14                 // Field pos:I
     156: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     161: istore_1
     162: goto          172
     165: aload_0
     166: invokespecial #30                 // Method switchToForward:()V
     169: goto          0
     172: iload_1
     173: invokestatic  #31                 // Method java/lang/Character.isHighSurrogate:(C)Z
     176: ifeq          227
     179: aload_0
     180: getfield      #14                 // Field pos:I
     183: aload_0
     184: getfield      #21                 // Field limit:I
     187: if_icmpeq     227
     190: aload_0
     191: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     194: aload_0
     195: getfield      #14                 // Field pos:I
     198: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     203: dup
     204: istore_2
     205: invokestatic  #32                 // Method java/lang/Character.isLowSurrogate:(C)Z
     208: ifeq          227
     211: aload_0
     212: dup
     213: getfield      #14                 // Field pos:I
     216: iconst_1
     217: iadd
     218: putfield      #14                 // Field pos:I
     221: iload_1
     222: iload_2
     223: invokestatic  #33                 // Method java/lang/Character.toCodePoint:(CC)I
     226: ireturn
     227: iload_1
     228: ireturn

  public int previousCodePoint();
    Code:
       0: aload_0
       1: getfield      #9                  // Field checkDir:I
       4: ifge          125
       7: aload_0
       8: getfield      #14                 // Field pos:I
      11: aload_0
      12: getfield      #15                 // Field start:I
      15: if_icmpne     20
      18: iconst_m1
      19: ireturn
      20: aload_0
      21: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      24: aload_0
      25: dup
      26: getfield      #14                 // Field pos:I
      29: iconst_1
      30: isub
      31: dup_x1
      32: putfield      #14                 // Field pos:I
      35: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      40: istore_1
      41: iload_1
      42: invokestatic  #28                 // Method com/ibm/icu/impl/coll/CollationFCD.hasLccc:(I)Z
      45: ifeq          174
      48: iload_1
      49: invokestatic  #27                 // Method com/ibm/icu/impl/coll/CollationFCD.maybeTibetanCompositeVowel:(I)Z
      52: ifne          87
      55: aload_0
      56: getfield      #14                 // Field pos:I
      59: aload_0
      60: getfield      #15                 // Field start:I
      63: if_icmpeq     174
      66: aload_0
      67: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      70: aload_0
      71: getfield      #14                 // Field pos:I
      74: iconst_1
      75: isub
      76: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      81: invokestatic  #26                 // Method com/ibm/icu/impl/coll/CollationFCD.hasTccc:(I)Z
      84: ifeq          174
      87: aload_0
      88: dup
      89: getfield      #14                 // Field pos:I
      92: iconst_1
      93: iadd
      94: putfield      #14                 // Field pos:I
      97: aload_0
      98: invokespecial #34                 // Method previousSegment:()V
     101: aload_0
     102: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     105: aload_0
     106: dup
     107: getfield      #14                 // Field pos:I
     110: iconst_1
     111: isub
     112: dup_x1
     113: putfield      #14                 // Field pos:I
     116: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     121: istore_1
     122: goto          174
     125: aload_0
     126: getfield      #9                  // Field checkDir:I
     129: ifne          167
     132: aload_0
     133: getfield      #14                 // Field pos:I
     136: aload_0
     137: getfield      #15                 // Field start:I
     140: if_icmpeq     167
     143: aload_0
     144: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     147: aload_0
     148: dup
     149: getfield      #14                 // Field pos:I
     152: iconst_1
     153: isub
     154: dup_x1
     155: putfield      #14                 // Field pos:I
     158: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     163: istore_1
     164: goto          174
     167: aload_0
     168: invokespecial #35                 // Method switchToBackward:()V
     171: goto          0
     174: iload_1
     175: invokestatic  #32                 // Method java/lang/Character.isLowSurrogate:(C)Z
     178: ifeq          231
     181: aload_0
     182: getfield      #14                 // Field pos:I
     185: aload_0
     186: getfield      #15                 // Field start:I
     189: if_icmpeq     231
     192: aload_0
     193: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     196: aload_0
     197: getfield      #14                 // Field pos:I
     200: iconst_1
     201: isub
     202: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     207: dup
     208: istore_2
     209: invokestatic  #31                 // Method java/lang/Character.isHighSurrogate:(C)Z
     212: ifeq          231
     215: aload_0
     216: dup
     217: getfield      #14                 // Field pos:I
     220: iconst_1
     221: isub
     222: putfield      #14                 // Field pos:I
     225: iload_2
     226: iload_1
     227: invokestatic  #33                 // Method java/lang/Character.toCodePoint:(CC)I
     230: ireturn
     231: iload_1
     232: ireturn

  protected long handleNextCE32();
    Code:
       0: aload_0
       1: getfield      #9                  // Field checkDir:I
       4: ifle          125
       7: aload_0
       8: getfield      #14                 // Field pos:I
      11: aload_0
      12: getfield      #21                 // Field limit:I
      15: if_icmpne     22
      18: ldc2_w        #36                 // long -4294967104l
      21: lreturn
      22: aload_0
      23: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      26: aload_0
      27: dup
      28: getfield      #14                 // Field pos:I
      31: dup_x1
      32: iconst_1
      33: iadd
      34: putfield      #14                 // Field pos:I
      37: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      42: istore_1
      43: iload_1
      44: invokestatic  #26                 // Method com/ibm/icu/impl/coll/CollationFCD.hasTccc:(I)Z
      47: ifeq          174
      50: iload_1
      51: invokestatic  #27                 // Method com/ibm/icu/impl/coll/CollationFCD.maybeTibetanCompositeVowel:(I)Z
      54: ifne          87
      57: aload_0
      58: getfield      #14                 // Field pos:I
      61: aload_0
      62: getfield      #21                 // Field limit:I
      65: if_icmpeq     174
      68: aload_0
      69: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      72: aload_0
      73: getfield      #14                 // Field pos:I
      76: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      81: invokestatic  #28                 // Method com/ibm/icu/impl/coll/CollationFCD.hasLccc:(I)Z
      84: ifeq          174
      87: aload_0
      88: dup
      89: getfield      #14                 // Field pos:I
      92: iconst_1
      93: isub
      94: putfield      #14                 // Field pos:I
      97: aload_0
      98: invokespecial #29                 // Method nextSegment:()V
     101: aload_0
     102: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     105: aload_0
     106: dup
     107: getfield      #14                 // Field pos:I
     110: dup_x1
     111: iconst_1
     112: iadd
     113: putfield      #14                 // Field pos:I
     116: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     121: istore_1
     122: goto          174
     125: aload_0
     126: getfield      #9                  // Field checkDir:I
     129: ifne          167
     132: aload_0
     133: getfield      #14                 // Field pos:I
     136: aload_0
     137: getfield      #21                 // Field limit:I
     140: if_icmpeq     167
     143: aload_0
     144: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     147: aload_0
     148: dup
     149: getfield      #14                 // Field pos:I
     152: dup_x1
     153: iconst_1
     154: iadd
     155: putfield      #14                 // Field pos:I
     158: invokeinterface #25,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     163: istore_1
     164: goto          174
     167: aload_0
     168: invokespecial #30                 // Method switchToForward:()V
     171: goto          0
     174: aload_0
     175: iload_1
     176: aload_0
     177: getfield      #38                 // Field trie:Lcom/ibm/icu/impl/Trie2_32;
     180: iload_1
     181: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2_32.getFromU16SingleLead:(C)I
     184: invokevirtual #40                 // Method makeCodePointAndCE32Pair:(II)J
     187: lreturn

  protected void forwardNumCodePoints(int);
    Code:
       0: iload_1
       1: ifle          17
       4: aload_0
       5: invokevirtual #41                 // Method nextCodePoint:()I
       8: iflt          17
      11: iinc          1, -1
      14: goto          0
      17: return

  protected void backwardNumCodePoints(int);
    Code:
       0: iload_1
       1: ifle          17
       4: aload_0
       5: invokevirtual #42                 // Method previousCodePoint:()I
       8: iflt          17
      11: iinc          1, -1
      14: goto          0
      17: return

  private void switchToForward();
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          50
       6: aload_0
       7: getfield      #9                  // Field checkDir:I
      10: ifge          24
      13: aload_0
      14: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      17: aload_0
      18: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      21: if_acmpeq     50
      24: aload_0
      25: getfield      #9                  // Field checkDir:I
      28: ifne          42
      31: aload_0
      32: getfield      #14                 // Field pos:I
      35: aload_0
      36: getfield      #21                 // Field limit:I
      39: if_icmpeq     50
      42: new           #17                 // class java/lang/AssertionError
      45: dup
      46: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
      49: athrow
      50: aload_0
      51: getfield      #9                  // Field checkDir:I
      54: ifge          105
      57: aload_0
      58: aload_0
      59: aload_0
      60: getfield      #14                 // Field pos:I
      63: dup_x1
      64: putfield      #6                  // Field segmentStart:I
      67: putfield      #15                 // Field start:I
      70: aload_0
      71: getfield      #14                 // Field pos:I
      74: aload_0
      75: getfield      #22                 // Field segmentLimit:I
      78: if_icmpne     97
      81: aload_0
      82: aload_0
      83: getfield      #8                  // Field rawLimit:I
      86: putfield      #21                 // Field limit:I
      89: aload_0
      90: iconst_1
      91: putfield      #9                  // Field checkDir:I
      94: goto          158
      97: aload_0
      98: iconst_0
      99: putfield      #9                  // Field checkDir:I
     102: goto          158
     105: aload_0
     106: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     109: aload_0
     110: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
     113: if_acmpne     119
     116: goto          145
     119: aload_0
     120: aload_0
     121: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
     124: putfield      #13                 // Field seq:Ljava/lang/CharSequence;
     127: aload_0
     128: aload_0
     129: aload_0
     130: aload_0
     131: getfield      #22                 // Field segmentLimit:I
     134: dup_x1
     135: putfield      #6                  // Field segmentStart:I
     138: dup_x1
     139: putfield      #15                 // Field start:I
     142: putfield      #14                 // Field pos:I
     145: aload_0
     146: aload_0
     147: getfield      #8                  // Field rawLimit:I
     150: putfield      #21                 // Field limit:I
     153: aload_0
     154: iconst_1
     155: putfield      #9                  // Field checkDir:I
     158: return

  private void nextSegment();
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          43
       6: aload_0
       7: getfield      #9                  // Field checkDir:I
      10: ifle          35
      13: aload_0
      14: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      17: aload_0
      18: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      21: if_acmpne     35
      24: aload_0
      25: getfield      #14                 // Field pos:I
      28: aload_0
      29: getfield      #21                 // Field limit:I
      32: if_icmpne     43
      35: new           #17                 // class java/lang/AssertionError
      38: dup
      39: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
      42: athrow
      43: aload_0
      44: getfield      #14                 // Field pos:I
      47: istore_1
      48: iconst_0
      49: istore_2
      50: iload_1
      51: istore_3
      52: aload_0
      53: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      56: iload_1
      57: invokestatic  #44                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      60: istore        4
      62: iload_1
      63: iload         4
      65: invokestatic  #45                 // Method java/lang/Character.charCount:(I)I
      68: iadd
      69: istore_1
      70: aload_0
      71: getfield      #3                  // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      74: iload         4
      76: invokevirtual #46                 // Method com/ibm/icu/impl/Normalizer2Impl.getFCD16:(I)I
      79: istore        5
      81: iload         5
      83: bipush        8
      85: ishr
      86: istore        6
      88: iload         6
      90: ifne          114
      93: iload_3
      94: aload_0
      95: getfield      #14                 // Field pos:I
      98: if_icmpeq     114
     101: aload_0
     102: aload_0
     103: iload_3
     104: dup_x1
     105: putfield      #22                 // Field segmentLimit:I
     108: putfield      #21                 // Field limit:I
     111: goto          234
     114: iload         6
     116: ifeq          199
     119: iload_2
     120: iload         6
     122: if_icmpgt     133
     125: iload         5
     127: invokestatic  #47                 // Method com/ibm/icu/impl/coll/CollationFCD.isFCD16OfTibetanCompositeVowel:(I)Z
     130: ifeq          199
     133: iload_1
     134: istore_3
     135: iload_1
     136: aload_0
     137: getfield      #8                  // Field rawLimit:I
     140: if_icmpne     146
     143: goto          179
     146: aload_0
     147: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     150: iload_1
     151: invokestatic  #44                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
     154: istore        4
     156: iload_1
     157: iload         4
     159: invokestatic  #45                 // Method java/lang/Character.charCount:(I)I
     162: iadd
     163: istore_1
     164: aload_0
     165: getfield      #3                  // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
     168: iload         4
     170: invokevirtual #46                 // Method com/ibm/icu/impl/Normalizer2Impl.getFCD16:(I)I
     173: sipush        255
     176: if_icmpgt     133
     179: aload_0
     180: aload_0
     181: getfield      #14                 // Field pos:I
     184: iload_3
     185: invokespecial #48                 // Method normalize:(II)V
     188: aload_0
     189: aload_0
     190: getfield      #15                 // Field start:I
     193: putfield      #14                 // Field pos:I
     196: goto          234
     199: iload         5
     201: sipush        255
     204: iand
     205: istore_2
     206: iload_1
     207: aload_0
     208: getfield      #8                  // Field rawLimit:I
     211: if_icmpeq     218
     214: iload_2
     215: ifne          231
     218: aload_0
     219: aload_0
     220: iload_1
     221: dup_x1
     222: putfield      #22                 // Field segmentLimit:I
     225: putfield      #21                 // Field limit:I
     228: goto          234
     231: goto          50
     234: getstatic     #16                 // Field $assertionsDisabled:Z
     237: ifne          259
     240: aload_0
     241: getfield      #14                 // Field pos:I
     244: aload_0
     245: getfield      #21                 // Field limit:I
     248: if_icmpne     259
     251: new           #17                 // class java/lang/AssertionError
     254: dup
     255: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
     258: athrow
     259: aload_0
     260: iconst_0
     261: putfield      #9                  // Field checkDir:I
     264: return

  private void switchToBackward();
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          50
       6: aload_0
       7: getfield      #9                  // Field checkDir:I
      10: ifle          24
      13: aload_0
      14: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      17: aload_0
      18: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      21: if_acmpeq     50
      24: aload_0
      25: getfield      #9                  // Field checkDir:I
      28: ifne          42
      31: aload_0
      32: getfield      #14                 // Field pos:I
      35: aload_0
      36: getfield      #15                 // Field start:I
      39: if_icmpeq     50
      42: new           #17                 // class java/lang/AssertionError
      45: dup
      46: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
      49: athrow
      50: aload_0
      51: getfield      #9                  // Field checkDir:I
      54: ifle          102
      57: aload_0
      58: aload_0
      59: aload_0
      60: getfield      #14                 // Field pos:I
      63: dup_x1
      64: putfield      #22                 // Field segmentLimit:I
      67: putfield      #21                 // Field limit:I
      70: aload_0
      71: getfield      #14                 // Field pos:I
      74: aload_0
      75: getfield      #6                  // Field segmentStart:I
      78: if_icmpne     94
      81: aload_0
      82: iconst_0
      83: putfield      #15                 // Field start:I
      86: aload_0
      87: iconst_m1
      88: putfield      #9                  // Field checkDir:I
      91: goto          152
      94: aload_0
      95: iconst_0
      96: putfield      #9                  // Field checkDir:I
      99: goto          152
     102: aload_0
     103: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     106: aload_0
     107: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
     110: if_acmpne     116
     113: goto          142
     116: aload_0
     117: aload_0
     118: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
     121: putfield      #13                 // Field seq:Ljava/lang/CharSequence;
     124: aload_0
     125: aload_0
     126: aload_0
     127: aload_0
     128: getfield      #6                  // Field segmentStart:I
     131: dup_x1
     132: putfield      #22                 // Field segmentLimit:I
     135: dup_x1
     136: putfield      #21                 // Field limit:I
     139: putfield      #14                 // Field pos:I
     142: aload_0
     143: iconst_0
     144: putfield      #15                 // Field start:I
     147: aload_0
     148: iconst_m1
     149: putfield      #9                  // Field checkDir:I
     152: return

  private void previousSegment();
    Code:
       0: getstatic     #16                 // Field $assertionsDisabled:Z
       3: ifne          43
       6: aload_0
       7: getfield      #9                  // Field checkDir:I
      10: ifge          35
      13: aload_0
      14: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      17: aload_0
      18: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      21: if_acmpne     35
      24: aload_0
      25: getfield      #14                 // Field pos:I
      28: aload_0
      29: getfield      #15                 // Field start:I
      32: if_icmpne     43
      35: new           #17                 // class java/lang/AssertionError
      38: dup
      39: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
      42: athrow
      43: aload_0
      44: getfield      #14                 // Field pos:I
      47: istore_1
      48: iconst_0
      49: istore_2
      50: iload_1
      51: istore_3
      52: aload_0
      53: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
      56: iload_1
      57: invokestatic  #49                 // Method java/lang/Character.codePointBefore:(Ljava/lang/CharSequence;I)I
      60: istore        4
      62: iload_1
      63: iload         4
      65: invokestatic  #45                 // Method java/lang/Character.charCount:(I)I
      68: isub
      69: istore_1
      70: aload_0
      71: getfield      #3                  // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      74: iload         4
      76: invokevirtual #46                 // Method com/ibm/icu/impl/Normalizer2Impl.getFCD16:(I)I
      79: istore        5
      81: iload         5
      83: sipush        255
      86: iand
      87: istore        6
      89: iload         6
      91: ifne          115
      94: iload_3
      95: aload_0
      96: getfield      #14                 // Field pos:I
      99: if_icmpeq     115
     102: aload_0
     103: aload_0
     104: iload_3
     105: dup_x1
     106: putfield      #6                  // Field segmentStart:I
     109: putfield      #15                 // Field start:I
     112: goto          238
     115: iload         6
     117: ifeq          208
     120: iload_2
     121: ifeq          130
     124: iload         6
     126: iload_2
     127: if_icmpgt     138
     130: iload         5
     132: invokestatic  #47                 // Method com/ibm/icu/impl/coll/CollationFCD.isFCD16OfTibetanCompositeVowel:(I)Z
     135: ifeq          208
     138: iload_1
     139: istore_3
     140: iload         5
     142: sipush        255
     145: if_icmple     188
     148: iload_1
     149: ifne          155
     152: goto          188
     155: aload_0
     156: getfield      #13                 // Field seq:Ljava/lang/CharSequence;
     159: iload_1
     160: invokestatic  #49                 // Method java/lang/Character.codePointBefore:(Ljava/lang/CharSequence;I)I
     163: istore        4
     165: iload_1
     166: iload         4
     168: invokestatic  #45                 // Method java/lang/Character.charCount:(I)I
     171: isub
     172: istore_1
     173: aload_0
     174: getfield      #3                  // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
     177: iload         4
     179: invokevirtual #46                 // Method com/ibm/icu/impl/Normalizer2Impl.getFCD16:(I)I
     182: dup
     183: istore        5
     185: ifne          138
     188: aload_0
     189: iload_3
     190: aload_0
     191: getfield      #14                 // Field pos:I
     194: invokespecial #48                 // Method normalize:(II)V
     197: aload_0
     198: aload_0
     199: getfield      #21                 // Field limit:I
     202: putfield      #14                 // Field pos:I
     205: goto          238
     208: iload         5
     210: bipush        8
     212: ishr
     213: istore_2
     214: iload_1
     215: ifeq          222
     218: iload_2
     219: ifne          235
     222: aload_0
     223: aload_0
     224: iload_1
     225: dup_x1
     226: putfield      #6                  // Field segmentStart:I
     229: putfield      #15                 // Field start:I
     232: goto          238
     235: goto          50
     238: getstatic     #16                 // Field $assertionsDisabled:Z
     241: ifne          263
     244: aload_0
     245: getfield      #14                 // Field pos:I
     248: aload_0
     249: getfield      #15                 // Field start:I
     252: if_icmpne     263
     255: new           #17                 // class java/lang/AssertionError
     258: dup
     259: invokespecial #43                 // Method java/lang/AssertionError."<init>":()V
     262: athrow
     263: aload_0
     264: iconst_0
     265: putfield      #9                  // Field checkDir:I
     268: return

  private void normalize(int, int);
    Code:
       0: aload_0
       1: getfield      #50                 // Field normalized:Ljava/lang/StringBuilder;
       4: ifnonnull     18
       7: aload_0
       8: new           #51                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      15: putfield      #50                 // Field normalized:Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #3                  // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      22: aload_0
      23: getfield      #5                  // Field rawSeq:Ljava/lang/CharSequence;
      26: iload_1
      27: iload_2
      28: aload_0
      29: getfield      #50                 // Field normalized:Ljava/lang/StringBuilder;
      32: iload_2
      33: iload_1
      34: isub
      35: invokevirtual #53                 // Method com/ibm/icu/impl/Normalizer2Impl.decompose:(Ljava/lang/CharSequence;IILjava/lang/StringBuilder;I)V
      38: aload_0
      39: iload_1
      40: putfield      #6                  // Field segmentStart:I
      43: aload_0
      44: iload_2
      45: putfield      #22                 // Field segmentLimit:I
      48: aload_0
      49: aload_0
      50: getfield      #50                 // Field normalized:Ljava/lang/StringBuilder;
      53: putfield      #13                 // Field seq:Ljava/lang/CharSequence;
      56: aload_0
      57: iconst_0
      58: putfield      #15                 // Field start:I
      61: aload_0
      62: aload_0
      63: getfield      #15                 // Field start:I
      66: aload_0
      67: getfield      #50                 // Field normalized:Ljava/lang/StringBuilder;
      70: invokevirtual #54                 // Method java/lang/StringBuilder.length:()I
      73: iadd
      74: putfield      #21                 // Field limit:I
      77: return

  static {};
    Code:
       0: ldc           #12                 // class com/ibm/icu/impl/coll/FCDUTF16CollationIterator
       2: invokevirtual #55                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #16                 // Field $assertionsDisabled:Z
      16: return
}
