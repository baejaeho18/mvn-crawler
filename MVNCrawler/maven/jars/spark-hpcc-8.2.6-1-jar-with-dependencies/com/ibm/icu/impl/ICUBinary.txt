Compiled from "ICUBinary.java"
public final class com.ibm.icu.impl.ICUBinary {
  private static final java.util.List<com.ibm.icu.impl.ICUBinary$DataFile> icuDataFiles;

  private static final byte MAGIC1;

  private static final byte MAGIC2;

  private static final byte CHAR_SET_;

  private static final byte CHAR_SIZE_;

  private static final java.lang.String MAGIC_NUMBER_AUTHENTICATION_FAILED_;

  private static final java.lang.String HEADER_AUTHENTICATION_FAILED_;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.impl.ICUBinary();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  private static void addDataFilesFromPath(java.lang.String, java.util.List<com.ibm.icu.impl.ICUBinary$DataFile>);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: invokevirtual #3                  // Method java/lang/String.length:()I
       7: if_icmpge     117
      10: aload_0
      11: getstatic     #4                  // Field java/io/File.pathSeparatorChar:C
      14: iload_2
      15: invokevirtual #5                  // Method java/lang/String.indexOf:(II)I
      18: istore_3
      19: iload_3
      20: iflt          29
      23: iload_3
      24: istore        4
      26: goto          35
      29: aload_0
      30: invokevirtual #3                  // Method java/lang/String.length:()I
      33: istore        4
      35: aload_0
      36: iload_2
      37: iload         4
      39: invokevirtual #6                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      42: invokevirtual #7                  // Method java/lang/String.trim:()Ljava/lang/String;
      45: astore        5
      47: aload         5
      49: getstatic     #8                  // Field java/io/File.separator:Ljava/lang/String;
      52: invokevirtual #9                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      55: ifeq          73
      58: aload         5
      60: iconst_0
      61: aload         5
      63: invokevirtual #3                  // Method java/lang/String.length:()I
      66: iconst_1
      67: isub
      68: invokevirtual #6                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      71: astore        5
      73: aload         5
      75: invokevirtual #3                  // Method java/lang/String.length:()I
      78: ifeq          103
      81: new           #10                 // class java/io/File
      84: dup
      85: aload         5
      87: invokespecial #11                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      90: new           #12                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      97: getstatic     #14                 // Field icuDataFiles:Ljava/util/List;
     100: invokestatic  #15                 // Method addDataFilesFromFolder:(Ljava/io/File;Ljava/lang/StringBuilder;Ljava/util/List;)V
     103: iload_3
     104: ifge          110
     107: goto          117
     110: iload_3
     111: iconst_1
     112: iadd
     113: istore_2
     114: goto          2
     117: return

  private static void addDataFilesFromFolder(java.io.File, java.lang.StringBuilder, java.util.List<com.ibm.icu.impl.ICUBinary$DataFile>);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method java/io/File.listFiles:()[Ljava/io/File;
       4: astore_3
       5: aload_3
       6: ifnull        14
       9: aload_3
      10: arraylength
      11: ifne          15
      14: return
      15: aload_1
      16: invokevirtual #17                 // Method java/lang/StringBuilder.length:()I
      19: istore        4
      21: iload         4
      23: ifle          36
      26: aload_1
      27: bipush        47
      29: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: pop
      33: iinc          4, 1
      36: aload_3
      37: astore        5
      39: aload         5
      41: arraylength
      42: istore        6
      44: iconst_0
      45: istore        7
      47: iload         7
      49: iload         6
      51: if_icmpge     191
      54: aload         5
      56: iload         7
      58: aaload
      59: astore        8
      61: aload         8
      63: invokevirtual #19                 // Method java/io/File.getName:()Ljava/lang/String;
      66: astore        9
      68: aload         9
      70: ldc           #20                 // String .txt
      72: invokevirtual #9                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      75: ifeq          81
      78: goto          185
      81: aload_1
      82: aload         9
      84: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload         8
      90: invokevirtual #22                 // Method java/io/File.isDirectory:()Z
      93: ifeq          106
      96: aload         8
      98: aload_1
      99: aload_2
     100: invokestatic  #15                 // Method addDataFilesFromFolder:(Ljava/io/File;Ljava/lang/StringBuilder;Ljava/util/List;)V
     103: goto          179
     106: aload         9
     108: ldc           #23                 // String .dat
     110: invokevirtual #9                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     113: ifeq          159
     116: aload         8
     118: invokestatic  #1                  // Method mapFile:(Ljava/io/File;)Ljava/nio/ByteBuffer;
     121: astore        10
     123: aload         10
     125: ifnull        156
     128: aload         10
     130: invokestatic  #24                 // Method com/ibm/icu/impl/ICUBinary$DatPackageReader.validate:(Ljava/nio/ByteBuffer;)Z
     133: ifeq          156
     136: aload_2
     137: new           #25                 // class com/ibm/icu/impl/ICUBinary$PackageDataFile
     140: dup
     141: aload_1
     142: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: aload         10
     147: invokespecial #27                 // Method com/ibm/icu/impl/ICUBinary$PackageDataFile."<init>":(Ljava/lang/String;Ljava/nio/ByteBuffer;)V
     150: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     155: pop
     156: goto          179
     159: aload_2
     160: new           #29                 // class com/ibm/icu/impl/ICUBinary$SingleDataFile
     163: dup
     164: aload_1
     165: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: aload         8
     170: invokespecial #30                 // Method com/ibm/icu/impl/ICUBinary$SingleDataFile."<init>":(Ljava/lang/String;Ljava/io/File;)V
     173: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     178: pop
     179: aload_1
     180: iload         4
     182: invokevirtual #31                 // Method java/lang/StringBuilder.setLength:(I)V
     185: iinc          7, 1
     188: goto          47
     191: return

  static int compareKeys(java.lang.CharSequence, java.nio.ByteBuffer, int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: iload_2
       4: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
       7: istore        4
       9: iload         4
      11: ifne          28
      14: iload_3
      15: aload_0
      16: invokeinterface #33,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      21: if_icmpne     26
      24: iconst_0
      25: ireturn
      26: iconst_1
      27: ireturn
      28: iload_3
      29: aload_0
      30: invokeinterface #33,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      35: if_icmpne     40
      38: iconst_m1
      39: ireturn
      40: aload_0
      41: iload_3
      42: invokeinterface #34,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      47: iload         4
      49: isub
      50: istore        5
      52: iload         5
      54: ifeq          60
      57: iload         5
      59: ireturn
      60: iinc          3, 1
      63: iinc          2, 1
      66: goto          2

  static int compareKeys(java.lang.CharSequence, byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_1
       3: iload_2
       4: baload
       5: istore        4
       7: iload         4
       9: ifne          26
      12: iload_3
      13: aload_0
      14: invokeinterface #33,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      19: if_icmpne     24
      22: iconst_0
      23: ireturn
      24: iconst_1
      25: ireturn
      26: iload_3
      27: aload_0
      28: invokeinterface #33,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      33: if_icmpne     38
      36: iconst_m1
      37: ireturn
      38: aload_0
      39: iload_3
      40: invokeinterface #34,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      45: iload         4
      47: isub
      48: istore        5
      50: iload         5
      52: ifeq          58
      55: iload         5
      57: ireturn
      58: iinc          3, 1
      61: iinc          2, 1
      64: goto          2

  public static java.nio.ByteBuffer getData(java.lang.String);
    Code:
       0: aconst_null
       1: aconst_null
       2: aload_0
       3: iconst_0
       4: invokestatic  #35                 // Method getData:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
       7: areturn

  public static java.nio.ByteBuffer getData(java.lang.ClassLoader, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #35                 // Method getData:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
       7: areturn

  public static java.nio.ByteBuffer getRequiredData(java.lang.String);
    Code:
       0: aconst_null
       1: aconst_null
       2: aload_0
       3: iconst_1
       4: invokestatic  #35                 // Method getData:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Z)Ljava/nio/ByteBuffer;
       7: areturn

  private static java.nio.ByteBuffer getData(java.lang.ClassLoader, java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_2
       1: invokestatic  #36                 // Method getDataFromFile:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
       4: astore        4
       6: aload         4
       8: ifnull        14
      11: aload         4
      13: areturn
      14: aload_0
      15: ifnonnull     24
      18: ldc           #37                 // class com/ibm/icu/impl/ICUData
      20: invokestatic  #38                 // Method com/ibm/icu/impl/ClassLoaderUtil.getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      23: astore_0
      24: aload_1
      25: ifnonnull     48
      28: new           #12                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #39                 // String com/ibm/icu/impl/data/icudt61b/
      37: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: astore_1
      48: aconst_null
      49: astore        5
      51: aload_0
      52: aload_1
      53: iload_3
      54: invokestatic  #40                 // Method com/ibm/icu/impl/ICUData.getStream:(Ljava/lang/ClassLoader;Ljava/lang/String;Z)Ljava/io/InputStream;
      57: astore        6
      59: aload         6
      61: ifnonnull     66
      64: aconst_null
      65: areturn
      66: aload         6
      68: invokestatic  #41                 // Method getByteBufferFromInputStreamAndCloseStream:(Ljava/io/InputStream;)Ljava/nio/ByteBuffer;
      71: astore        5
      73: goto          88
      76: astore        6
      78: new           #43                 // class com/ibm/icu/util/ICUUncheckedIOException
      81: dup
      82: aload         6
      84: invokespecial #44                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
      87: athrow
      88: aload         5
      90: areturn
    Exception table:
       from    to  target type
          51    65    76   Class java/io/IOException
          66    73    76   Class java/io/IOException

  private static java.nio.ByteBuffer getDataFromFile(java.lang.String);
    Code:
       0: getstatic     #14                 // Field icuDataFiles:Ljava/util/List;
       3: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_1
      19: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #48                 // class com/ibm/icu/impl/ICUBinary$DataFile
      27: astore_2
      28: aload_2
      29: aload_0
      30: invokevirtual #49                 // Method com/ibm/icu/impl/ICUBinary$DataFile.getData:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
      33: astore_3
      34: aload_3
      35: ifnull        40
      38: aload_3
      39: areturn
      40: goto          9
      43: aconst_null
      44: areturn

  private static java.nio.ByteBuffer mapFile(java.io.File);
    Code:
       0: new           #50                 // class java/io/FileInputStream
       3: dup
       4: aload_0
       5: invokespecial #51                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #52                 // Method java/io/FileInputStream.getChannel:()Ljava/nio/channels/FileChannel;
      13: astore_2
      14: aconst_null
      15: astore_3
      16: aload_2
      17: getstatic     #53                 // Field java/nio/channels/FileChannel$MapMode.READ_ONLY:Ljava/nio/channels/FileChannel$MapMode;
      20: lconst_0
      21: aload_2
      22: invokevirtual #54                 // Method java/nio/channels/FileChannel.size:()J
      25: invokevirtual #55                 // Method java/nio/channels/FileChannel.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;
      28: astore_3
      29: aload_1
      30: invokevirtual #56                 // Method java/io/FileInputStream.close:()V
      33: goto          45
      36: astore        4
      38: aload_1
      39: invokevirtual #56                 // Method java/io/FileInputStream.close:()V
      42: aload         4
      44: athrow
      45: aload_3
      46: areturn
      47: astore_2
      48: getstatic     #58                 // Field java/lang/System.err:Ljava/io/PrintStream;
      51: aload_2
      52: invokevirtual #59                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      55: goto          66
      58: astore_2
      59: getstatic     #58                 // Field java/lang/System.err:Ljava/io/PrintStream;
      62: aload_2
      63: invokevirtual #59                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
      66: aconst_null
      67: areturn
    Exception table:
       from    to  target type
          16    29    36   any
          36    38    36   any
           0    46    47   Class java/io/FileNotFoundException
           0    46    58   Class java/io/IOException

  public static void addBaseNamesInFileFolder(java.lang.String, java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: getstatic     #14                 // Field icuDataFiles:Ljava/util/List;
       3: invokeinterface #45,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          40
      18: aload_3
      19: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #48                 // class com/ibm/icu/impl/ICUBinary$DataFile
      27: astore        4
      29: aload         4
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokevirtual #60                 // Method com/ibm/icu/impl/ICUBinary$DataFile.addBaseNamesInFolder:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)V
      37: goto          9
      40: return

  public static com.ibm.icu.util.VersionInfo readHeaderAndDataVersion(java.nio.ByteBuffer, int, com.ibm.icu.impl.ICUBinary$Authenticate) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #61                 // Method readHeader:(Ljava/nio/ByteBuffer;ILcom/ibm/icu/impl/ICUBinary$Authenticate;)I
       6: invokestatic  #62                 // Method getVersionInfoFromCompactInt:(I)Lcom/ibm/icu/util/VersionInfo;
       9: areturn

  public static int readHeader(java.nio.ByteBuffer, int, com.ibm.icu.impl.ICUBinary$Authenticate) throws java.io.IOException;
    Code:
       0: getstatic     #63                 // Field $assertionsDisabled:Z
       3: ifne          25
       6: aload_0
       7: ifnull        17
      10: aload_0
      11: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
      14: ifeq          25
      17: new           #65                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_0
      26: iconst_2
      27: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
      30: istore_3
      31: aload_0
      32: iconst_3
      33: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
      36: istore        4
      38: iload_3
      39: bipush        -38
      41: if_icmpne     51
      44: iload         4
      46: bipush        39
      48: if_icmpeq     61
      51: new           #42                 // class java/io/IOException
      54: dup
      55: ldc           #68                 // String ICU data file error: Not an ICU data file
      57: invokespecial #69                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: bipush        8
      64: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
      67: istore        5
      69: aload_0
      70: bipush        9
      72: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
      75: istore        6
      77: aload_0
      78: bipush        10
      80: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
      83: istore        7
      85: iload         5
      87: iflt          107
      90: iconst_1
      91: iload         5
      93: if_icmplt     107
      96: iload         6
      98: ifne          107
     101: iload         7
     103: iconst_2
     104: if_icmpeq     117
     107: new           #42                 // class java/io/IOException
     110: dup
     111: ldc           #70                 // String ICU data file error: Header authentication failed, please check if you have a valid ICU data file
     113: invokespecial #69                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: aload_0
     118: iload         5
     120: ifeq          129
     123: getstatic     #71                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
     126: goto          132
     129: getstatic     #72                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     132: invokevirtual #73                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     135: pop
     136: aload_0
     137: iconst_0
     138: invokevirtual #74                 // Method java/nio/ByteBuffer.getChar:(I)C
     141: istore        8
     143: aload_0
     144: iconst_4
     145: invokevirtual #74                 // Method java/nio/ByteBuffer.getChar:(I)C
     148: istore        9
     150: iload         9
     152: bipush        20
     154: if_icmplt     166
     157: iload         8
     159: iload         9
     161: iconst_4
     162: iadd
     163: if_icmpge     176
     166: new           #42                 // class java/io/IOException
     169: dup
     170: ldc           #75                 // String Internal Error: Header size error
     172: invokespecial #69                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: iconst_4
     177: newarray       byte
     179: dup
     180: iconst_0
     181: aload_0
     182: bipush        16
     184: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     187: bastore
     188: dup
     189: iconst_1
     190: aload_0
     191: bipush        17
     193: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     196: bastore
     197: dup
     198: iconst_2
     199: aload_0
     200: bipush        18
     202: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     205: bastore
     206: dup
     207: iconst_3
     208: aload_0
     209: bipush        19
     211: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     214: bastore
     215: astore        10
     217: aload_0
     218: bipush        12
     220: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     223: iload_1
     224: bipush        24
     226: ishr
     227: i2b
     228: if_icmpne     285
     231: aload_0
     232: bipush        13
     234: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     237: iload_1
     238: bipush        16
     240: ishr
     241: i2b
     242: if_icmpne     285
     245: aload_0
     246: bipush        14
     248: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     251: iload_1
     252: bipush        8
     254: ishr
     255: i2b
     256: if_icmpne     285
     259: aload_0
     260: bipush        15
     262: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     265: iload_1
     266: i2b
     267: if_icmpne     285
     270: aload_2
     271: ifnull        427
     274: aload_2
     275: aload         10
     277: invokeinterface #76,  2           // InterfaceMethod com/ibm/icu/impl/ICUBinary$Authenticate.isDataVersionAcceptable:([B)Z
     282: ifne          427
     285: new           #42                 // class java/io/IOException
     288: dup
     289: new           #12                 // class java/lang/StringBuilder
     292: dup
     293: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     296: ldc           #70                 // String ICU data file error: Header authentication failed, please check if you have a valid ICU data file
     298: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     301: ldc           #77                 // String ; data format %02x%02x%02x%02x, format version %d.%d.%d.%d
     303: bipush        8
     305: anewarray     #78                 // class java/lang/Object
     308: dup
     309: iconst_0
     310: aload_0
     311: bipush        12
     313: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     316: invokestatic  #79                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     319: aastore
     320: dup
     321: iconst_1
     322: aload_0
     323: bipush        13
     325: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     328: invokestatic  #79                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     331: aastore
     332: dup
     333: iconst_2
     334: aload_0
     335: bipush        14
     337: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     340: invokestatic  #79                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     343: aastore
     344: dup
     345: iconst_3
     346: aload_0
     347: bipush        15
     349: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     352: invokestatic  #79                 // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
     355: aastore
     356: dup
     357: iconst_4
     358: aload         10
     360: iconst_0
     361: baload
     362: sipush        255
     365: iand
     366: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     369: aastore
     370: dup
     371: iconst_5
     372: aload         10
     374: iconst_1
     375: baload
     376: sipush        255
     379: iand
     380: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     383: aastore
     384: dup
     385: bipush        6
     387: aload         10
     389: iconst_2
     390: baload
     391: sipush        255
     394: iand
     395: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     398: aastore
     399: dup
     400: bipush        7
     402: aload         10
     404: iconst_3
     405: baload
     406: sipush        255
     409: iand
     410: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     413: aastore
     414: invokestatic  #81                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     417: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     420: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     423: invokespecial #69                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     426: athrow
     427: aload_0
     428: iload         8
     430: invokevirtual #82                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     433: pop
     434: aload_0
     435: bipush        20
     437: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     440: bipush        24
     442: ishl
     443: aload_0
     444: bipush        21
     446: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     449: sipush        255
     452: iand
     453: bipush        16
     455: ishl
     456: ior
     457: aload_0
     458: bipush        22
     460: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     463: sipush        255
     466: iand
     467: bipush        8
     469: ishl
     470: ior
     471: aload_0
     472: bipush        23
     474: invokevirtual #32                 // Method java/nio/ByteBuffer.get:(I)B
     477: sipush        255
     480: iand
     481: ior
     482: ireturn

  public static int writeHeader(int, int, int, java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_3
       1: bipush        32
       3: invokevirtual #83                 // Method java/io/DataOutputStream.writeChar:(I)V
       6: aload_3
       7: bipush        -38
       9: invokevirtual #84                 // Method java/io/DataOutputStream.writeByte:(I)V
      12: aload_3
      13: bipush        39
      15: invokevirtual #84                 // Method java/io/DataOutputStream.writeByte:(I)V
      18: aload_3
      19: bipush        20
      21: invokevirtual #83                 // Method java/io/DataOutputStream.writeChar:(I)V
      24: aload_3
      25: iconst_0
      26: invokevirtual #83                 // Method java/io/DataOutputStream.writeChar:(I)V
      29: aload_3
      30: iconst_1
      31: invokevirtual #84                 // Method java/io/DataOutputStream.writeByte:(I)V
      34: aload_3
      35: iconst_0
      36: invokevirtual #84                 // Method java/io/DataOutputStream.writeByte:(I)V
      39: aload_3
      40: iconst_2
      41: invokevirtual #84                 // Method java/io/DataOutputStream.writeByte:(I)V
      44: aload_3
      45: iconst_0
      46: invokevirtual #84                 // Method java/io/DataOutputStream.writeByte:(I)V
      49: aload_3
      50: iload_0
      51: invokevirtual #85                 // Method java/io/DataOutputStream.writeInt:(I)V
      54: aload_3
      55: iload_1
      56: invokevirtual #85                 // Method java/io/DataOutputStream.writeInt:(I)V
      59: aload_3
      60: iload_2
      61: invokevirtual #85                 // Method java/io/DataOutputStream.writeInt:(I)V
      64: aload_3
      65: lconst_0
      66: invokevirtual #86                 // Method java/io/DataOutputStream.writeLong:(J)V
      69: getstatic     #63                 // Field $assertionsDisabled:Z
      72: ifne          92
      75: aload_3
      76: invokevirtual #87                 // Method java/io/DataOutputStream.size:()I
      79: bipush        32
      81: if_icmpeq     92
      84: new           #65                 // class java/lang/AssertionError
      87: dup
      88: invokespecial #66                 // Method java/lang/AssertionError."<init>":()V
      91: athrow
      92: bipush        32
      94: ireturn

  public static void skipBytes(java.nio.ByteBuffer, int);
    Code:
       0: iload_1
       1: ifle          15
       4: aload_0
       5: aload_0
       6: invokevirtual #64                 // Method java/nio/ByteBuffer.position:()I
       9: iload_1
      10: iadd
      11: invokevirtual #82                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      14: pop
      15: return

  public static java.lang.String getString(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method java/nio/ByteBuffer.asCharBuffer:()Ljava/nio/CharBuffer;
       4: astore_3
       5: aload_3
       6: iconst_0
       7: iload_1
       8: invokeinterface #89,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      13: invokeinterface #90,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      18: astore        4
      20: aload_0
      21: iload_1
      22: iconst_2
      23: imul
      24: iload_2
      25: iadd
      26: invokestatic  #91                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
      29: aload         4
      31: areturn

  public static char[] getChars(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_1
       1: newarray       char
       3: astore_3
       4: aload_0
       5: invokevirtual #88                 // Method java/nio/ByteBuffer.asCharBuffer:()Ljava/nio/CharBuffer;
       8: aload_3
       9: invokevirtual #92                 // Method java/nio/CharBuffer.get:([C)Ljava/nio/CharBuffer;
      12: pop
      13: aload_0
      14: iload_1
      15: iconst_2
      16: imul
      17: iload_2
      18: iadd
      19: invokestatic  #91                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
      22: aload_3
      23: areturn

  public static short[] getShorts(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_1
       1: newarray       short
       3: astore_3
       4: aload_0
       5: invokevirtual #93                 // Method java/nio/ByteBuffer.asShortBuffer:()Ljava/nio/ShortBuffer;
       8: aload_3
       9: invokevirtual #94                 // Method java/nio/ShortBuffer.get:([S)Ljava/nio/ShortBuffer;
      12: pop
      13: aload_0
      14: iload_1
      15: iconst_2
      16: imul
      17: iload_2
      18: iadd
      19: invokestatic  #91                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
      22: aload_3
      23: areturn

  public static int[] getInts(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_1
       1: newarray       int
       3: astore_3
       4: aload_0
       5: invokevirtual #95                 // Method java/nio/ByteBuffer.asIntBuffer:()Ljava/nio/IntBuffer;
       8: aload_3
       9: invokevirtual #96                 // Method java/nio/IntBuffer.get:([I)Ljava/nio/IntBuffer;
      12: pop
      13: aload_0
      14: iload_1
      15: iconst_4
      16: imul
      17: iload_2
      18: iadd
      19: invokestatic  #91                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
      22: aload_3
      23: areturn

  public static long[] getLongs(java.nio.ByteBuffer, int, int);
    Code:
       0: iload_1
       1: newarray       long
       3: astore_3
       4: aload_0
       5: invokevirtual #97                 // Method java/nio/ByteBuffer.asLongBuffer:()Ljava/nio/LongBuffer;
       8: aload_3
       9: invokevirtual #98                 // Method java/nio/LongBuffer.get:([J)Ljava/nio/LongBuffer;
      12: pop
      13: aload_0
      14: iload_1
      15: bipush        8
      17: imul
      18: iload_2
      19: iadd
      20: invokestatic  #91                 // Method skipBytes:(Ljava/nio/ByteBuffer;I)V
      23: aload_3
      24: areturn

  public static java.nio.ByteBuffer sliceWithOrder(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
       4: astore_1
       5: aload_1
       6: aload_0
       7: invokevirtual #100                // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      10: invokevirtual #73                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      13: areturn

  public static java.nio.ByteBuffer getByteBufferFromInputStreamAndCloseStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #101                // Method java/io/InputStream.available:()I
       4: istore_2
       5: iload_2
       6: bipush        32
       8: if_icmple     18
      11: iload_2
      12: newarray       byte
      14: astore_1
      15: goto          24
      18: sipush        128
      21: newarray       byte
      23: astore_1
      24: iconst_0
      25: istore_3
      26: iload_3
      27: aload_1
      28: arraylength
      29: if_icmpge     60
      32: aload_0
      33: aload_1
      34: iload_3
      35: aload_1
      36: arraylength
      37: iload_3
      38: isub
      39: invokevirtual #102                // Method java/io/InputStream.read:([BII)I
      42: istore        4
      44: iload         4
      46: ifge          52
      49: goto          140
      52: iload_3
      53: iload         4
      55: iadd
      56: istore_3
      57: goto          26
      60: aload_0
      61: invokevirtual #103                // Method java/io/InputStream.read:()I
      64: istore        4
      66: iload         4
      68: ifge          74
      71: goto          140
      74: iconst_2
      75: aload_1
      76: arraylength
      77: imul
      78: istore        5
      80: iload         5
      82: sipush        128
      85: if_icmpge     96
      88: sipush        128
      91: istore        5
      93: goto          110
      96: iload         5
      98: sipush        16384
     101: if_icmpge     110
     104: iload         5
     106: iconst_2
     107: imul
     108: istore        5
     110: iload         5
     112: newarray       byte
     114: astore        6
     116: aload_1
     117: iconst_0
     118: aload         6
     120: iconst_0
     121: iload_3
     122: invokestatic  #104                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     125: aload         6
     127: astore_1
     128: aload_1
     129: iload_3
     130: iinc          3, 1
     133: iload         4
     135: i2b
     136: bastore
     137: goto          26
     140: aload_1
     141: iconst_0
     142: iload_3
     143: invokestatic  #105                // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     146: astore        4
     148: aload_0
     149: invokevirtual #106                // Method java/io/InputStream.close:()V
     152: aload         4
     154: areturn
     155: astore        7
     157: aload_0
     158: invokevirtual #106                // Method java/io/InputStream.close:()V
     161: aload         7
     163: athrow
    Exception table:
       from    to  target type
           0   148   155   any
         155   157   155   any

  public static com.ibm.icu.util.VersionInfo getVersionInfoFromCompactInt(int);
    Code:
       0: iload_0
       1: bipush        24
       3: iushr
       4: iload_0
       5: bipush        16
       7: ishr
       8: sipush        255
      11: iand
      12: iload_0
      13: bipush        8
      15: ishr
      16: sipush        255
      19: iand
      20: iload_0
      21: sipush        255
      24: iand
      25: invokestatic  #107                // Method com/ibm/icu/util/VersionInfo.getInstance:(IIII)Lcom/ibm/icu/util/VersionInfo;
      28: areturn

  public static byte[] getVersionByteArrayFromCompactInt(int);
    Code:
       0: iconst_4
       1: newarray       byte
       3: dup
       4: iconst_0
       5: iload_0
       6: bipush        24
       8: ishr
       9: i2b
      10: bastore
      11: dup
      12: iconst_1
      13: iload_0
      14: bipush        16
      16: ishr
      17: i2b
      18: bastore
      19: dup
      20: iconst_2
      21: iload_0
      22: bipush        8
      24: ishr
      25: i2b
      26: bastore
      27: dup
      28: iconst_3
      29: iload_0
      30: i2b
      31: bastore
      32: areturn

  static java.nio.ByteBuffer access$100(java.io.File);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method mapFile:(Ljava/io/File;)Ljava/nio/ByteBuffer;
       4: areturn

  static {};
    Code:
       0: ldc           #67                 // class com/ibm/icu/impl/ICUBinary
       2: invokevirtual #108                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #63                 // Field $assertionsDisabled:Z
      16: new           #109                // class java/util/ArrayList
      19: dup
      20: invokespecial #110                // Method java/util/ArrayList."<init>":()V
      23: putstatic     #14                 // Field icuDataFiles:Ljava/util/List;
      26: new           #12                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #67                 // class com/ibm/icu/impl/ICUBinary
      35: invokevirtual #111                // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #112                // String .dataPath
      43: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokestatic  #113                // Method com/ibm/icu/impl/ICUConfig.get:(Ljava/lang/String;)Ljava/lang/String;
      52: astore_0
      53: aload_0
      54: ifnull        64
      57: aload_0
      58: getstatic     #14                 // Field icuDataFiles:Ljava/util/List;
      61: invokestatic  #114                // Method addDataFilesFromPath:(Ljava/lang/String;Ljava/util/List;)V
      64: return
}
