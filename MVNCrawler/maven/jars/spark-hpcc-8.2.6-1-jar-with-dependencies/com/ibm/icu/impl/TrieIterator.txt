Compiled from "TrieIterator.java"
public class com.ibm.icu.impl.TrieIterator implements com.ibm.icu.util.RangeValueIterator {
  private static final int BMP_INDEX_LENGTH_;

  private static final int LEAD_SURROGATE_MIN_VALUE_;

  private static final int TRAIL_SURROGATE_MIN_VALUE_;

  private static final int TRAIL_SURROGATE_COUNT_;

  private static final int TRAIL_SURROGATE_INDEX_BLOCK_LENGTH_;

  private static final int DATA_BLOCK_LENGTH_;

  private com.ibm.icu.impl.Trie m_trie_;

  private int m_initialValue_;

  private int m_currentCodepoint_;

  private int m_nextCodepoint_;

  private int m_nextValue_;

  private int m_nextIndex_;

  private int m_nextBlock_;

  private int m_nextBlockIndex_;

  private int m_nextTrailIndexOffset_;

  public com.ibm.icu.impl.TrieIterator(com.ibm.icu.impl.Trie);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #4                  // String Argument trie cannot be null
      14: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      23: aload_0
      24: aload_0
      25: aload_0
      26: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      29: invokevirtual #7                  // Method com/ibm/icu/impl/Trie.getInitialValue:()I
      32: invokevirtual #8                  // Method extract:(I)I
      35: putfield      #9                  // Field m_initialValue_:I
      38: aload_0
      39: invokevirtual #10                 // Method reset:()V
      42: return

  public final boolean next(com.ibm.icu.util.RangeValueIterator$Element);
    Code:
       0: aload_0
       1: getfield      #11                 // Field m_nextCodepoint_:I
       4: ldc           #13                 // int 1114111
       6: if_icmple     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #11                 // Field m_nextCodepoint_:I
      15: ldc           #14                 // int 65536
      17: if_icmpge     30
      20: aload_0
      21: aload_1
      22: invokespecial #15                 // Method calculateNextBMPElement:(Lcom/ibm/icu/util/RangeValueIterator$Element;)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: aload_0
      31: aload_1
      32: invokespecial #16                 // Method calculateNextSupplementaryElement:(Lcom/ibm/icu/util/RangeValueIterator$Element;)V
      35: iconst_1
      36: ireturn

  public final void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #17                 // Field m_currentCodepoint_:I
       5: aload_0
       6: iconst_0
       7: putfield      #11                 // Field m_nextCodepoint_:I
      10: aload_0
      11: iconst_0
      12: putfield      #18                 // Field m_nextIndex_:I
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      20: getfield      #19                 // Field com/ibm/icu/impl/Trie.m_index_:[C
      23: iconst_0
      24: caload
      25: iconst_2
      26: ishl
      27: putfield      #20                 // Field m_nextBlock_:I
      30: aload_0
      31: getfield      #20                 // Field m_nextBlock_:I
      34: aload_0
      35: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      38: getfield      #21                 // Field com/ibm/icu/impl/Trie.m_dataOffset_:I
      41: if_icmpne     55
      44: aload_0
      45: aload_0
      46: getfield      #9                  // Field m_initialValue_:I
      49: putfield      #22                 // Field m_nextValue_:I
      52: goto          74
      55: aload_0
      56: aload_0
      57: aload_0
      58: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      61: aload_0
      62: getfield      #20                 // Field m_nextBlock_:I
      65: invokevirtual #23                 // Method com/ibm/icu/impl/Trie.getValue:(I)I
      68: invokevirtual #8                  // Method extract:(I)I
      71: putfield      #22                 // Field m_nextValue_:I
      74: aload_0
      75: iconst_0
      76: putfield      #24                 // Field m_nextBlockIndex_:I
      79: aload_0
      80: bipush        32
      82: putfield      #26                 // Field m_nextTrailIndexOffset_:I
      85: return

  protected int extract(int);
    Code:
       0: iload_1
       1: ireturn

  private final void setResult(com.ibm.icu.util.RangeValueIterator$Element, int, int, int);
    Code:
       0: aload_1
       1: iload_2
       2: putfield      #27                 // Field com/ibm/icu/util/RangeValueIterator$Element.start:I
       5: aload_1
       6: iload_3
       7: putfield      #28                 // Field com/ibm/icu/util/RangeValueIterator$Element.limit:I
      10: aload_1
      11: iload         4
      13: putfield      #29                 // Field com/ibm/icu/util/RangeValueIterator$Element.value:I
      16: return

  private final boolean calculateNextBMPElement(com.ibm.icu.util.RangeValueIterator$Element);
    Code:
       0: aload_0
       1: getfield      #22                 // Field m_nextValue_:I
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #11                 // Field m_nextCodepoint_:I
      10: putfield      #17                 // Field m_currentCodepoint_:I
      13: aload_0
      14: dup
      15: getfield      #11                 // Field m_nextCodepoint_:I
      18: iconst_1
      19: iadd
      20: putfield      #11                 // Field m_nextCodepoint_:I
      23: aload_0
      24: dup
      25: getfield      #24                 // Field m_nextBlockIndex_:I
      28: iconst_1
      29: iadd
      30: putfield      #24                 // Field m_nextBlockIndex_:I
      33: aload_0
      34: iload_2
      35: invokespecial #30                 // Method checkBlockDetail:(I)Z
      38: ifne          57
      41: aload_0
      42: aload_1
      43: aload_0
      44: getfield      #17                 // Field m_currentCodepoint_:I
      47: aload_0
      48: getfield      #11                 // Field m_nextCodepoint_:I
      51: iload_2
      52: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
      55: iconst_1
      56: ireturn
      57: aload_0
      58: getfield      #11                 // Field m_nextCodepoint_:I
      61: ldc           #14                 // int 65536
      63: if_icmpge     146
      66: aload_0
      67: getfield      #11                 // Field m_nextCodepoint_:I
      70: ldc           #32                 // int 55296
      72: if_icmpne     85
      75: aload_0
      76: sipush        2048
      79: putfield      #18                 // Field m_nextIndex_:I
      82: goto          117
      85: aload_0
      86: getfield      #11                 // Field m_nextCodepoint_:I
      89: ldc           #33                 // int 56320
      91: if_icmpne     107
      94: aload_0
      95: aload_0
      96: getfield      #11                 // Field m_nextCodepoint_:I
      99: iconst_5
     100: ishr
     101: putfield      #18                 // Field m_nextIndex_:I
     104: goto          117
     107: aload_0
     108: dup
     109: getfield      #18                 // Field m_nextIndex_:I
     112: iconst_1
     113: iadd
     114: putfield      #18                 // Field m_nextIndex_:I
     117: aload_0
     118: iconst_0
     119: putfield      #24                 // Field m_nextBlockIndex_:I
     122: aload_0
     123: iload_2
     124: invokespecial #34                 // Method checkBlock:(I)Z
     127: ifne          57
     130: aload_0
     131: aload_1
     132: aload_0
     133: getfield      #17                 // Field m_currentCodepoint_:I
     136: aload_0
     137: getfield      #11                 // Field m_nextCodepoint_:I
     140: iload_2
     141: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
     144: iconst_1
     145: ireturn
     146: aload_0
     147: dup
     148: getfield      #11                 // Field m_nextCodepoint_:I
     151: iconst_1
     152: isub
     153: putfield      #11                 // Field m_nextCodepoint_:I
     156: aload_0
     157: dup
     158: getfield      #24                 // Field m_nextBlockIndex_:I
     161: iconst_1
     162: isub
     163: putfield      #24                 // Field m_nextBlockIndex_:I
     166: iconst_0
     167: ireturn

  private final void calculateNextSupplementaryElement(com.ibm.icu.util.RangeValueIterator$Element);
    Code:
       0: aload_0
       1: getfield      #22                 // Field m_nextValue_:I
       4: istore_2
       5: aload_0
       6: dup
       7: getfield      #11                 // Field m_nextCodepoint_:I
      10: iconst_1
      11: iadd
      12: putfield      #11                 // Field m_nextCodepoint_:I
      15: aload_0
      16: dup
      17: getfield      #24                 // Field m_nextBlockIndex_:I
      20: iconst_1
      21: iadd
      22: putfield      #24                 // Field m_nextBlockIndex_:I
      25: aload_0
      26: getfield      #11                 // Field m_nextCodepoint_:I
      29: invokestatic  #35                 // Method com/ibm/icu/text/UTF16.getTrailSurrogate:(I)C
      32: ldc           #33                 // int 56320
      34: if_icmpeq     126
      37: aload_0
      38: invokespecial #37                 // Method checkNullNextTrailIndex:()Z
      41: ifne          75
      44: aload_0
      45: iload_2
      46: invokespecial #30                 // Method checkBlockDetail:(I)Z
      49: ifne          75
      52: aload_0
      53: aload_1
      54: aload_0
      55: getfield      #17                 // Field m_currentCodepoint_:I
      58: aload_0
      59: getfield      #11                 // Field m_nextCodepoint_:I
      62: iload_2
      63: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
      66: aload_0
      67: aload_0
      68: getfield      #11                 // Field m_nextCodepoint_:I
      71: putfield      #17                 // Field m_currentCodepoint_:I
      74: return
      75: aload_0
      76: dup
      77: getfield      #18                 // Field m_nextIndex_:I
      80: iconst_1
      81: iadd
      82: putfield      #18                 // Field m_nextIndex_:I
      85: aload_0
      86: dup
      87: getfield      #26                 // Field m_nextTrailIndexOffset_:I
      90: iconst_1
      91: iadd
      92: putfield      #26                 // Field m_nextTrailIndexOffset_:I
      95: aload_0
      96: iload_2
      97: invokespecial #38                 // Method checkTrailBlock:(I)Z
     100: ifne          126
     103: aload_0
     104: aload_1
     105: aload_0
     106: getfield      #17                 // Field m_currentCodepoint_:I
     109: aload_0
     110: getfield      #11                 // Field m_nextCodepoint_:I
     113: iload_2
     114: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
     117: aload_0
     118: aload_0
     119: getfield      #11                 // Field m_nextCodepoint_:I
     122: putfield      #17                 // Field m_currentCodepoint_:I
     125: return
     126: aload_0
     127: getfield      #11                 // Field m_nextCodepoint_:I
     130: invokestatic  #39                 // Method com/ibm/icu/text/UTF16.getLeadSurrogate:(I)C
     133: istore_3
     134: iload_3
     135: ldc           #33                 // int 56320
     137: if_icmpge     403
     140: aload_0
     141: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
     144: getfield      #19                 // Field com/ibm/icu/impl/Trie.m_index_:[C
     147: iload_3
     148: iconst_5
     149: ishr
     150: caload
     151: iconst_2
     152: ishl
     153: istore        4
     155: iload         4
     157: aload_0
     158: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
     161: getfield      #21                 // Field com/ibm/icu/impl/Trie.m_dataOffset_:I
     164: if_icmpne     234
     167: iload_2
     168: aload_0
     169: getfield      #9                  // Field m_initialValue_:I
     172: if_icmpeq     217
     175: aload_0
     176: aload_0
     177: getfield      #9                  // Field m_initialValue_:I
     180: putfield      #22                 // Field m_nextValue_:I
     183: aload_0
     184: iload         4
     186: putfield      #20                 // Field m_nextBlock_:I
     189: aload_0
     190: iconst_0
     191: putfield      #24                 // Field m_nextBlockIndex_:I
     194: aload_0
     195: aload_1
     196: aload_0
     197: getfield      #17                 // Field m_currentCodepoint_:I
     200: aload_0
     201: getfield      #11                 // Field m_nextCodepoint_:I
     204: iload_2
     205: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
     208: aload_0
     209: aload_0
     210: getfield      #11                 // Field m_nextCodepoint_:I
     213: putfield      #17                 // Field m_currentCodepoint_:I
     216: return
     217: iinc          3, 32
     220: aload_0
     221: iload_3
     222: i2c
     223: ldc           #33                 // int 56320
     225: invokestatic  #40                 // Method java/lang/Character.toCodePoint:(CC)I
     228: putfield      #11                 // Field m_nextCodepoint_:I
     231: goto          134
     234: aload_0
     235: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
     238: getfield      #41                 // Field com/ibm/icu/impl/Trie.m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
     241: ifnonnull     254
     244: new           #42                 // class java/lang/NullPointerException
     247: dup
     248: ldc           #43                 // String The field DataManipulate in this Trie is null
     250: invokespecial #44                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     253: athrow
     254: aload_0
     255: aload_0
     256: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
     259: getfield      #41                 // Field com/ibm/icu/impl/Trie.m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
     262: aload_0
     263: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
     266: iload         4
     268: iload_3
     269: bipush        31
     271: iand
     272: iadd
     273: invokevirtual #23                 // Method com/ibm/icu/impl/Trie.getValue:(I)I
     276: invokeinterface #45,  2           // InterfaceMethod com/ibm/icu/impl/Trie$DataManipulate.getFoldingOffset:(I)I
     281: putfield      #18                 // Field m_nextIndex_:I
     284: aload_0
     285: getfield      #18                 // Field m_nextIndex_:I
     288: ifgt          361
     291: iload_2
     292: aload_0
     293: getfield      #9                  // Field m_initialValue_:I
     296: if_icmpeq     346
     299: aload_0
     300: aload_0
     301: getfield      #9                  // Field m_initialValue_:I
     304: putfield      #22                 // Field m_nextValue_:I
     307: aload_0
     308: aload_0
     309: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
     312: getfield      #21                 // Field com/ibm/icu/impl/Trie.m_dataOffset_:I
     315: putfield      #20                 // Field m_nextBlock_:I
     318: aload_0
     319: iconst_0
     320: putfield      #24                 // Field m_nextBlockIndex_:I
     323: aload_0
     324: aload_1
     325: aload_0
     326: getfield      #17                 // Field m_currentCodepoint_:I
     329: aload_0
     330: getfield      #11                 // Field m_nextCodepoint_:I
     333: iload_2
     334: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
     337: aload_0
     338: aload_0
     339: getfield      #11                 // Field m_nextCodepoint_:I
     342: putfield      #17                 // Field m_currentCodepoint_:I
     345: return
     346: aload_0
     347: dup
     348: getfield      #11                 // Field m_nextCodepoint_:I
     351: sipush        1024
     354: iadd
     355: putfield      #11                 // Field m_nextCodepoint_:I
     358: goto          397
     361: aload_0
     362: iconst_0
     363: putfield      #26                 // Field m_nextTrailIndexOffset_:I
     366: aload_0
     367: iload_2
     368: invokespecial #38                 // Method checkTrailBlock:(I)Z
     371: ifne          397
     374: aload_0
     375: aload_1
     376: aload_0
     377: getfield      #17                 // Field m_currentCodepoint_:I
     380: aload_0
     381: getfield      #11                 // Field m_nextCodepoint_:I
     384: iload_2
     385: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
     388: aload_0
     389: aload_0
     390: getfield      #11                 // Field m_nextCodepoint_:I
     393: putfield      #17                 // Field m_currentCodepoint_:I
     396: return
     397: iinc          3, 1
     400: goto          134
     403: aload_0
     404: aload_1
     405: aload_0
     406: getfield      #17                 // Field m_currentCodepoint_:I
     409: ldc           #46                 // int 1114112
     411: iload_2
     412: invokespecial #31                 // Method setResult:(Lcom/ibm/icu/util/RangeValueIterator$Element;III)V
     415: return

  private final boolean checkBlockDetail(int);
    Code:
       0: aload_0
       1: getfield      #24                 // Field m_nextBlockIndex_:I
       4: bipush        32
       6: if_icmpge     66
       9: aload_0
      10: aload_0
      11: aload_0
      12: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      15: aload_0
      16: getfield      #20                 // Field m_nextBlock_:I
      19: aload_0
      20: getfield      #24                 // Field m_nextBlockIndex_:I
      23: iadd
      24: invokevirtual #23                 // Method com/ibm/icu/impl/Trie.getValue:(I)I
      27: invokevirtual #8                  // Method extract:(I)I
      30: putfield      #22                 // Field m_nextValue_:I
      33: aload_0
      34: getfield      #22                 // Field m_nextValue_:I
      37: iload_1
      38: if_icmpeq     43
      41: iconst_0
      42: ireturn
      43: aload_0
      44: dup
      45: getfield      #24                 // Field m_nextBlockIndex_:I
      48: iconst_1
      49: iadd
      50: putfield      #24                 // Field m_nextBlockIndex_:I
      53: aload_0
      54: dup
      55: getfield      #11                 // Field m_nextCodepoint_:I
      58: iconst_1
      59: iadd
      60: putfield      #11                 // Field m_nextCodepoint_:I
      63: goto          0
      66: iconst_1
      67: ireturn

  private final boolean checkBlock(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field m_nextBlock_:I
       4: istore_2
       5: aload_0
       6: aload_0
       7: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      10: getfield      #19                 // Field com/ibm/icu/impl/Trie.m_index_:[C
      13: aload_0
      14: getfield      #18                 // Field m_nextIndex_:I
      17: caload
      18: iconst_2
      19: ishl
      20: putfield      #20                 // Field m_nextBlock_:I
      23: aload_0
      24: getfield      #20                 // Field m_nextBlock_:I
      27: iload_2
      28: if_icmpne     59
      31: aload_0
      32: getfield      #11                 // Field m_nextCodepoint_:I
      35: aload_0
      36: getfield      #17                 // Field m_currentCodepoint_:I
      39: isub
      40: bipush        32
      42: if_icmplt     59
      45: aload_0
      46: dup
      47: getfield      #11                 // Field m_nextCodepoint_:I
      50: bipush        32
      52: iadd
      53: putfield      #11                 // Field m_nextCodepoint_:I
      56: goto          120
      59: aload_0
      60: getfield      #20                 // Field m_nextBlock_:I
      63: aload_0
      64: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      67: getfield      #21                 // Field com/ibm/icu/impl/Trie.m_dataOffset_:I
      70: if_icmpne     110
      73: iload_1
      74: aload_0
      75: getfield      #9                  // Field m_initialValue_:I
      78: if_icmpeq     96
      81: aload_0
      82: aload_0
      83: getfield      #9                  // Field m_initialValue_:I
      86: putfield      #22                 // Field m_nextValue_:I
      89: aload_0
      90: iconst_0
      91: putfield      #24                 // Field m_nextBlockIndex_:I
      94: iconst_0
      95: ireturn
      96: aload_0
      97: dup
      98: getfield      #11                 // Field m_nextCodepoint_:I
     101: bipush        32
     103: iadd
     104: putfield      #11                 // Field m_nextCodepoint_:I
     107: goto          120
     110: aload_0
     111: iload_1
     112: invokespecial #30                 // Method checkBlockDetail:(I)Z
     115: ifne          120
     118: iconst_0
     119: ireturn
     120: iconst_1
     121: ireturn

  private final boolean checkTrailBlock(int);
    Code:
       0: aload_0
       1: getfield      #26                 // Field m_nextTrailIndexOffset_:I
       4: bipush        32
       6: if_icmpge     47
       9: aload_0
      10: iconst_0
      11: putfield      #24                 // Field m_nextBlockIndex_:I
      14: aload_0
      15: iload_1
      16: invokespecial #34                 // Method checkBlock:(I)Z
      19: ifne          24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: dup
      26: getfield      #26                 // Field m_nextTrailIndexOffset_:I
      29: iconst_1
      30: iadd
      31: putfield      #26                 // Field m_nextTrailIndexOffset_:I
      34: aload_0
      35: dup
      36: getfield      #18                 // Field m_nextIndex_:I
      39: iconst_1
      40: iadd
      41: putfield      #18                 // Field m_nextIndex_:I
      44: goto          0
      47: iconst_1
      48: ireturn

  private final boolean checkNullNextTrailIndex();
    Code:
       0: aload_0
       1: getfield      #18                 // Field m_nextIndex_:I
       4: ifgt          108
       7: aload_0
       8: dup
       9: getfield      #11                 // Field m_nextCodepoint_:I
      12: sipush        1023
      15: iadd
      16: putfield      #11                 // Field m_nextCodepoint_:I
      19: aload_0
      20: getfield      #11                 // Field m_nextCodepoint_:I
      23: invokestatic  #39                 // Method com/ibm/icu/text/UTF16.getLeadSurrogate:(I)C
      26: istore_1
      27: aload_0
      28: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      31: getfield      #19                 // Field com/ibm/icu/impl/Trie.m_index_:[C
      34: iload_1
      35: iconst_5
      36: ishr
      37: caload
      38: iconst_2
      39: ishl
      40: istore_2
      41: aload_0
      42: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      45: getfield      #41                 // Field com/ibm/icu/impl/Trie.m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
      48: ifnonnull     61
      51: new           #42                 // class java/lang/NullPointerException
      54: dup
      55: ldc           #43                 // String The field DataManipulate in this Trie is null
      57: invokespecial #44                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: aload_0
      62: aload_0
      63: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      66: getfield      #41                 // Field com/ibm/icu/impl/Trie.m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
      69: aload_0
      70: getfield      #6                  // Field m_trie_:Lcom/ibm/icu/impl/Trie;
      73: iload_2
      74: iload_1
      75: bipush        31
      77: iand
      78: iadd
      79: invokevirtual #23                 // Method com/ibm/icu/impl/Trie.getValue:(I)I
      82: invokeinterface #45,  2           // InterfaceMethod com/ibm/icu/impl/Trie$DataManipulate.getFoldingOffset:(I)I
      87: putfield      #18                 // Field m_nextIndex_:I
      90: aload_0
      91: dup
      92: getfield      #18                 // Field m_nextIndex_:I
      95: iconst_1
      96: isub
      97: putfield      #18                 // Field m_nextIndex_:I
     100: aload_0
     101: bipush        32
     103: putfield      #24                 // Field m_nextBlockIndex_:I
     106: iconst_1
     107: ireturn
     108: iconst_0
     109: ireturn
}
