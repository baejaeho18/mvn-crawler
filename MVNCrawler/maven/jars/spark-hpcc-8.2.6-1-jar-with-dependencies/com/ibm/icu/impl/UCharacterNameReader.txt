Compiled from "UCharacterNameReader.java"
final class com.ibm.icu.impl.UCharacterNameReader implements com.ibm.icu.impl.ICUBinary$Authenticate {
  private java.nio.ByteBuffer m_byteBuffer_;

  private static final int GROUP_INFO_SIZE_;

  private int m_tokenstringindex_;

  private int m_groupindex_;

  private int m_groupstringindex_;

  private int m_algnamesindex_;

  private static final int ALG_INFO_SIZE_;

  private static final int DATA_FORMAT_ID_;

  public boolean isDataVersionAcceptable(byte[]);
    Code:
       0: aload_1
       1: iconst_0
       2: baload
       3: iconst_1
       4: if_icmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected com.ibm.icu.impl.UCharacterNameReader(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // int 1970168173
       7: aload_0
       8: invokestatic  #4                  // Method com/ibm/icu/impl/ICUBinary.readHeader:(Ljava/nio/ByteBuffer;ILcom/ibm/icu/impl/ICUBinary$Authenticate;)I
      11: pop
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      17: return

  protected void read(com.ibm.icu.impl.UCharacterName) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
       5: invokevirtual #6                  // Method java/nio/ByteBuffer.getInt:()I
       8: putfield      #7                  // Field m_tokenstringindex_:I
      11: aload_0
      12: aload_0
      13: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      16: invokevirtual #6                  // Method java/nio/ByteBuffer.getInt:()I
      19: putfield      #8                  // Field m_groupindex_:I
      22: aload_0
      23: aload_0
      24: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      27: invokevirtual #6                  // Method java/nio/ByteBuffer.getInt:()I
      30: putfield      #9                  // Field m_groupstringindex_:I
      33: aload_0
      34: aload_0
      35: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      38: invokevirtual #6                  // Method java/nio/ByteBuffer.getInt:()I
      41: putfield      #10                 // Field m_algnamesindex_:I
      44: aload_0
      45: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      48: invokevirtual #11                 // Method java/nio/ByteBuffer.getChar:()C
      51: istore_2
      52: aload_0
      53: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      56: iload_2
      57: iconst_0
      58: invokestatic  #12                 // Method com/ibm/icu/impl/ICUBinary.getChars:(Ljava/nio/ByteBuffer;II)[C
      61: astore_3
      62: aload_0
      63: getfield      #8                  // Field m_groupindex_:I
      66: aload_0
      67: getfield      #7                  // Field m_tokenstringindex_:I
      70: isub
      71: istore        4
      73: iload         4
      75: newarray       byte
      77: astore        5
      79: aload_0
      80: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      83: aload         5
      85: invokevirtual #13                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      88: pop
      89: aload_1
      90: aload_3
      91: aload         5
      93: invokevirtual #14                 // Method com/ibm/icu/impl/UCharacterName.setToken:([C[B)Z
      96: pop
      97: aload_0
      98: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
     101: invokevirtual #11                 // Method java/nio/ByteBuffer.getChar:()C
     104: istore_2
     105: aload_1
     106: iload_2
     107: iconst_3
     108: invokevirtual #15                 // Method com/ibm/icu/impl/UCharacterName.setGroupCountSize:(II)Z
     111: pop
     112: iload_2
     113: iconst_3
     114: imul
     115: istore_2
     116: aload_0
     117: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
     120: iload_2
     121: iconst_0
     122: invokestatic  #12                 // Method com/ibm/icu/impl/ICUBinary.getChars:(Ljava/nio/ByteBuffer;II)[C
     125: astore        6
     127: aload_0
     128: getfield      #10                 // Field m_algnamesindex_:I
     131: aload_0
     132: getfield      #9                  // Field m_groupstringindex_:I
     135: isub
     136: istore        4
     138: iload         4
     140: newarray       byte
     142: astore        7
     144: aload_0
     145: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
     148: aload         7
     150: invokevirtual #13                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     153: pop
     154: aload_1
     155: aload         6
     157: aload         7
     159: invokevirtual #16                 // Method com/ibm/icu/impl/UCharacterName.setGroup:([C[B)Z
     162: pop
     163: aload_0
     164: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
     167: invokevirtual #6                  // Method java/nio/ByteBuffer.getInt:()I
     170: istore_2
     171: iload_2
     172: anewarray     #17                 // class com/ibm/icu/impl/UCharacterName$AlgorithmName
     175: astore        8
     177: iconst_0
     178: istore        9
     180: iload         9
     182: iload_2
     183: if_icmpge     220
     186: aload_0
     187: invokespecial #18                 // Method readAlg:()Lcom/ibm/icu/impl/UCharacterName$AlgorithmName;
     190: astore        10
     192: aload         10
     194: ifnonnull     207
     197: new           #19                 // class java/io/IOException
     200: dup
     201: ldc           #20                 // String unames.icu read error: Algorithmic names creation error
     203: invokespecial #21                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     206: athrow
     207: aload         8
     209: iload         9
     211: aload         10
     213: aastore
     214: iinc          9, 1
     217: goto          180
     220: aload_1
     221: aload         8
     223: invokevirtual #22                 // Method com/ibm/icu/impl/UCharacterName.setAlgorithm:([Lcom/ibm/icu/impl/UCharacterName$AlgorithmName;)Z
     226: pop
     227: return

  protected boolean authenticate(byte[], byte[]);
    Code:
       0: ldc           #3                  // int 1970168173
       2: invokestatic  #23                 // Method com/ibm/icu/impl/ICUBinary.getVersionByteArrayFromCompactInt:(I)[B
       5: aload_1
       6: invokestatic  #24                 // Method java/util/Arrays.equals:([B[B)Z
       9: ifeq          24
      12: aload_0
      13: aload_2
      14: invokevirtual #25                 // Method isDataVersionAcceptable:([B)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private com.ibm.icu.impl.UCharacterName$AlgorithmName readAlg() throws java.io.IOException;
    Code:
       0: new           #17                 // class com/ibm/icu/impl/UCharacterName$AlgorithmName
       3: dup
       4: invokespecial #26                 // Method com/ibm/icu/impl/UCharacterName$AlgorithmName."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      12: invokevirtual #6                  // Method java/nio/ByteBuffer.getInt:()I
      15: istore_2
      16: aload_0
      17: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      20: invokevirtual #6                  // Method java/nio/ByteBuffer.getInt:()I
      23: istore_3
      24: aload_0
      25: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      28: invokevirtual #27                 // Method java/nio/ByteBuffer.get:()B
      31: istore        4
      33: aload_0
      34: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      37: invokevirtual #27                 // Method java/nio/ByteBuffer.get:()B
      40: istore        5
      42: aload_1
      43: iload_2
      44: iload_3
      45: iload         4
      47: iload         5
      49: invokevirtual #28                 // Method com/ibm/icu/impl/UCharacterName$AlgorithmName.setInfo:(IIBB)Z
      52: ifne          57
      55: aconst_null
      56: areturn
      57: aload_0
      58: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      61: invokevirtual #11                 // Method java/nio/ByteBuffer.getChar:()C
      64: istore        6
      66: iload         4
      68: iconst_1
      69: if_icmpne     100
      72: aload_0
      73: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
      76: iload         5
      78: iconst_0
      79: invokestatic  #12                 // Method com/ibm/icu/impl/ICUBinary.getChars:(Ljava/nio/ByteBuffer;II)[C
      82: astore        7
      84: aload_1
      85: aload         7
      87: invokevirtual #29                 // Method com/ibm/icu/impl/UCharacterName$AlgorithmName.setFactor:([C)Z
      90: pop
      91: iload         6
      93: iload         5
      95: iconst_1
      96: ishl
      97: isub
      98: istore        6
     100: new           #30                 // class java/lang/StringBuilder
     103: dup
     104: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     107: astore        7
     109: aload_0
     110: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
     113: invokevirtual #27                 // Method java/nio/ByteBuffer.get:()B
     116: sipush        255
     119: iand
     120: i2c
     121: istore        8
     123: iload         8
     125: ifeq          153
     128: aload         7
     130: iload         8
     132: invokevirtual #32                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     135: pop
     136: aload_0
     137: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
     140: invokevirtual #27                 // Method java/nio/ByteBuffer.get:()B
     143: sipush        255
     146: iand
     147: i2c
     148: istore        8
     150: goto          123
     153: aload_1
     154: aload         7
     156: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokevirtual #34                 // Method com/ibm/icu/impl/UCharacterName$AlgorithmName.setPrefix:(Ljava/lang/String;)Z
     162: pop
     163: iload         6
     165: bipush        12
     167: aload         7
     169: invokevirtual #35                 // Method java/lang/StringBuilder.length:()I
     172: iadd
     173: iconst_1
     174: iadd
     175: isub
     176: istore        6
     178: iload         6
     180: ifle          206
     183: iload         6
     185: newarray       byte
     187: astore        9
     189: aload_0
     190: getfield      #5                  // Field m_byteBuffer_:Ljava/nio/ByteBuffer;
     193: aload         9
     195: invokevirtual #13                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
     198: pop
     199: aload_1
     200: aload         9
     202: invokevirtual #36                 // Method com/ibm/icu/impl/UCharacterName$AlgorithmName.setFactorString:([B)Z
     205: pop
     206: aload_1
     207: areturn
}
