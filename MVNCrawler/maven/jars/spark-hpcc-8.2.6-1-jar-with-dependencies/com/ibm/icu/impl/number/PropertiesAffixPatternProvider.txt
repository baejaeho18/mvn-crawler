Compiled from "PropertiesAffixPatternProvider.java"
public class com.ibm.icu.impl.number.PropertiesAffixPatternProvider implements com.ibm.icu.impl.number.AffixPatternProvider {
  private final java.lang.String posPrefix;

  private final java.lang.String posSuffix;

  private final java.lang.String negPrefix;

  private final java.lang.String negSuffix;

  public com.ibm.icu.impl.number.PropertiesAffixPatternProvider(com.ibm.icu.impl.number.DecimalFormatProperties);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #2                  // Method com/ibm/icu/impl/number/DecimalFormatProperties.getPositivePrefix:()Ljava/lang/String;
       8: invokestatic  #3                  // Method com/ibm/icu/impl/number/AffixUtils.escape:(Ljava/lang/CharSequence;)Ljava/lang/String;
      11: astore_2
      12: aload_1
      13: invokevirtual #4                  // Method com/ibm/icu/impl/number/DecimalFormatProperties.getPositiveSuffix:()Ljava/lang/String;
      16: invokestatic  #3                  // Method com/ibm/icu/impl/number/AffixUtils.escape:(Ljava/lang/CharSequence;)Ljava/lang/String;
      19: astore_3
      20: aload_1
      21: invokevirtual #5                  // Method com/ibm/icu/impl/number/DecimalFormatProperties.getNegativePrefix:()Ljava/lang/String;
      24: invokestatic  #3                  // Method com/ibm/icu/impl/number/AffixUtils.escape:(Ljava/lang/CharSequence;)Ljava/lang/String;
      27: astore        4
      29: aload_1
      30: invokevirtual #6                  // Method com/ibm/icu/impl/number/DecimalFormatProperties.getNegativeSuffix:()Ljava/lang/String;
      33: invokestatic  #3                  // Method com/ibm/icu/impl/number/AffixUtils.escape:(Ljava/lang/CharSequence;)Ljava/lang/String;
      36: astore        5
      38: aload_1
      39: invokevirtual #7                  // Method com/ibm/icu/impl/number/DecimalFormatProperties.getPositivePrefixPattern:()Ljava/lang/String;
      42: astore        6
      44: aload_1
      45: invokevirtual #8                  // Method com/ibm/icu/impl/number/DecimalFormatProperties.getPositiveSuffixPattern:()Ljava/lang/String;
      48: astore        7
      50: aload_1
      51: invokevirtual #9                  // Method com/ibm/icu/impl/number/DecimalFormatProperties.getNegativePrefixPattern:()Ljava/lang/String;
      54: astore        8
      56: aload_1
      57: invokevirtual #10                 // Method com/ibm/icu/impl/number/DecimalFormatProperties.getNegativeSuffixPattern:()Ljava/lang/String;
      60: astore        9
      62: aload_2
      63: ifnull        74
      66: aload_0
      67: aload_2
      68: putfield      #11                 // Field posPrefix:Ljava/lang/String;
      71: goto          94
      74: aload         6
      76: ifnull        88
      79: aload_0
      80: aload         6
      82: putfield      #11                 // Field posPrefix:Ljava/lang/String;
      85: goto          94
      88: aload_0
      89: ldc           #12                 // String
      91: putfield      #11                 // Field posPrefix:Ljava/lang/String;
      94: aload_3
      95: ifnull        106
      98: aload_0
      99: aload_3
     100: putfield      #13                 // Field posSuffix:Ljava/lang/String;
     103: goto          126
     106: aload         7
     108: ifnull        120
     111: aload_0
     112: aload         7
     114: putfield      #13                 // Field posSuffix:Ljava/lang/String;
     117: goto          126
     120: aload_0
     121: ldc           #12                 // String
     123: putfield      #13                 // Field posSuffix:Ljava/lang/String;
     126: aload         4
     128: ifnull        140
     131: aload_0
     132: aload         4
     134: putfield      #14                 // Field negPrefix:Ljava/lang/String;
     137: goto          188
     140: aload         8
     142: ifnull        154
     145: aload_0
     146: aload         8
     148: putfield      #14                 // Field negPrefix:Ljava/lang/String;
     151: goto          188
     154: aload_0
     155: aload         6
     157: ifnonnull     165
     160: ldc           #15                 // String -
     162: goto          185
     165: new           #16                 // class java/lang/StringBuilder
     168: dup
     169: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     172: ldc           #15                 // String -
     174: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: aload         6
     179: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: putfield      #14                 // Field negPrefix:Ljava/lang/String;
     188: aload         5
     190: ifnull        202
     193: aload_0
     194: aload         5
     196: putfield      #20                 // Field negSuffix:Ljava/lang/String;
     199: goto          232
     202: aload         9
     204: ifnull        216
     207: aload_0
     208: aload         9
     210: putfield      #20                 // Field negSuffix:Ljava/lang/String;
     213: goto          232
     216: aload_0
     217: aload         7
     219: ifnonnull     227
     222: ldc           #12                 // String
     224: goto          229
     227: aload         7
     229: putfield      #20                 // Field negSuffix:Ljava/lang/String;
     232: return

  public char charAt(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #21                 // Method getString:(I)Ljava/lang/String;
       5: iload_2
       6: invokevirtual #22                 // Method java/lang/String.charAt:(I)C
       9: ireturn

  public int length(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #21                 // Method getString:(I)Ljava/lang/String;
       5: invokevirtual #23                 // Method java/lang/String.length:()I
       8: ireturn

  public java.lang.String getString(int);
    Code:
       0: iload_1
       1: sipush        256
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: istore_2
      14: iload_1
      15: sipush        512
      18: iand
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore_3
      28: iload_2
      29: ifeq          41
      32: iload_3
      33: ifeq          41
      36: aload_0
      37: getfield      #14                 // Field negPrefix:Ljava/lang/String;
      40: areturn
      41: iload_2
      42: ifeq          50
      45: aload_0
      46: getfield      #11                 // Field posPrefix:Ljava/lang/String;
      49: areturn
      50: iload_3
      51: ifeq          59
      54: aload_0
      55: getfield      #20                 // Field negSuffix:Ljava/lang/String;
      58: areturn
      59: aload_0
      60: getfield      #13                 // Field posSuffix:Ljava/lang/String;
      63: areturn

  public boolean positiveHasPlusSign();
    Code:
       0: aload_0
       1: getfield      #11                 // Field posPrefix:Ljava/lang/String;
       4: bipush        -2
       6: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
       9: ifne          24
      12: aload_0
      13: getfield      #13                 // Field posSuffix:Ljava/lang/String;
      16: bipush        -2
      18: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public boolean hasNegativeSubpattern();
    Code:
       0: iconst_1
       1: ireturn

  public boolean negativeHasMinusSign();
    Code:
       0: aload_0
       1: getfield      #14                 // Field negPrefix:Ljava/lang/String;
       4: iconst_m1
       5: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
       8: ifne          22
      11: aload_0
      12: getfield      #20                 // Field negSuffix:Ljava/lang/String;
      15: iconst_m1
      16: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean hasCurrencySign();
    Code:
       0: aload_0
       1: getfield      #11                 // Field posPrefix:Ljava/lang/String;
       4: invokestatic  #27                 // Method com/ibm/icu/impl/number/AffixUtils.hasCurrencySymbols:(Ljava/lang/CharSequence;)Z
       7: ifne          40
      10: aload_0
      11: getfield      #13                 // Field posSuffix:Ljava/lang/String;
      14: invokestatic  #27                 // Method com/ibm/icu/impl/number/AffixUtils.hasCurrencySymbols:(Ljava/lang/CharSequence;)Z
      17: ifne          40
      20: aload_0
      21: getfield      #14                 // Field negPrefix:Ljava/lang/String;
      24: invokestatic  #27                 // Method com/ibm/icu/impl/number/AffixUtils.hasCurrencySymbols:(Ljava/lang/CharSequence;)Z
      27: ifne          40
      30: aload_0
      31: getfield      #20                 // Field negSuffix:Ljava/lang/String;
      34: invokestatic  #27                 // Method com/ibm/icu/impl/number/AffixUtils.hasCurrencySymbols:(Ljava/lang/CharSequence;)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public boolean containsSymbolType(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field posPrefix:Ljava/lang/String;
       4: iload_1
       5: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
       8: ifne          44
      11: aload_0
      12: getfield      #13                 // Field posSuffix:Ljava/lang/String;
      15: iload_1
      16: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
      19: ifne          44
      22: aload_0
      23: getfield      #14                 // Field negPrefix:Ljava/lang/String;
      26: iload_1
      27: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
      30: ifne          44
      33: aload_0
      34: getfield      #20                 // Field negSuffix:Ljava/lang/String;
      37: iload_1
      38: invokestatic  #26                 // Method com/ibm/icu/impl/number/AffixUtils.containsType:(Ljava/lang/CharSequence;I)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn

  public boolean hasBody();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #29                 // String  {
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #11                 // Field posPrefix:Ljava/lang/String;
      23: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #30                 // String #
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #13                 // Field posSuffix:Ljava/lang/String;
      35: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #31                 // String ;
      40: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #14                 // Field negPrefix:Ljava/lang/String;
      47: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #30                 // String #
      52: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_0
      56: getfield      #20                 // Field negSuffix:Ljava/lang/String;
      59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #32                 // String }
      64: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn
}
