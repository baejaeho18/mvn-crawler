Compiled from "UTF16CollationIterator.java"
public class com.ibm.icu.impl.coll.UTF16CollationIterator extends com.ibm.icu.impl.coll.CollationIterator {
  protected java.lang.CharSequence seq;

  protected int start;

  protected int pos;

  protected int limit;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.impl.coll.UTF16CollationIterator(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/ibm/icu/impl/coll/CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;)V
       5: return

  public com.ibm.icu.impl.coll.UTF16CollationIterator(com.ibm.icu.impl.coll.CollationData, boolean, java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method com/ibm/icu/impl/coll/CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;Z)V
       6: aload_0
       7: aload_3
       8: putfield      #3                  // Field seq:Ljava/lang/CharSequence;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field start:I
      16: aload_0
      17: iload         4
      19: putfield      #5                  // Field pos:I
      22: aload_0
      23: aload_3
      24: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      29: putfield      #7                  // Field limit:I
      32: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method com/ibm/icu/impl/coll/CollationIterator.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: checkcast     #9                  // class com/ibm/icu/impl/coll/UTF16CollationIterator
      14: astore_2
      15: aload_0
      16: getfield      #5                  // Field pos:I
      19: aload_0
      20: getfield      #4                  // Field start:I
      23: isub
      24: aload_2
      25: getfield      #5                  // Field pos:I
      28: aload_2
      29: getfield      #4                  // Field start:I
      32: isub
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public int hashCode();
    Code:
       0: getstatic     #10                 // Field $assertionsDisabled:Z
       3: ifne          16
       6: new           #11                 // class java/lang/AssertionError
       9: dup
      10: ldc           #12                 // String hashCode not designed
      12: invokespecial #13                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      15: athrow
      16: bipush        42
      18: ireturn

  public void resetToOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method reset:()V
       4: aload_0
       5: aload_0
       6: getfield      #4                  // Field start:I
       9: iload_1
      10: iadd
      11: putfield      #5                  // Field pos:I
      14: return

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #4                  // Field start:I
       8: isub
       9: ireturn

  public void setText(boolean, java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #15                 // Method reset:(Z)V
       5: aload_0
       6: aload_2
       7: putfield      #3                  // Field seq:Ljava/lang/CharSequence;
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field start:I
      15: aload_0
      16: iload_3
      17: putfield      #5                  // Field pos:I
      20: aload_0
      21: aload_2
      22: invokeinterface #6,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      27: putfield      #7                  // Field limit:I
      30: return

  public int nextCodePoint();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #7                  // Field limit:I
       8: if_icmpne     13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      17: aload_0
      18: dup
      19: getfield      #5                  // Field pos:I
      22: dup_x1
      23: iconst_1
      24: iadd
      25: putfield      #5                  // Field pos:I
      28: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      33: istore_1
      34: iload_1
      35: invokestatic  #18                 // Method java/lang/Character.isHighSurrogate:(C)Z
      38: ifeq          89
      41: aload_0
      42: getfield      #5                  // Field pos:I
      45: aload_0
      46: getfield      #7                  // Field limit:I
      49: if_icmpeq     89
      52: aload_0
      53: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      56: aload_0
      57: getfield      #5                  // Field pos:I
      60: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      65: dup
      66: istore_2
      67: invokestatic  #19                 // Method java/lang/Character.isLowSurrogate:(C)Z
      70: ifeq          89
      73: aload_0
      74: dup
      75: getfield      #5                  // Field pos:I
      78: iconst_1
      79: iadd
      80: putfield      #5                  // Field pos:I
      83: iload_1
      84: iload_2
      85: invokestatic  #20                 // Method java/lang/Character.toCodePoint:(CC)I
      88: ireturn
      89: iload_1
      90: ireturn

  public int previousCodePoint();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #4                  // Field start:I
       8: if_icmpne     13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      17: aload_0
      18: dup
      19: getfield      #5                  // Field pos:I
      22: iconst_1
      23: isub
      24: dup_x1
      25: putfield      #5                  // Field pos:I
      28: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      33: istore_1
      34: iload_1
      35: invokestatic  #19                 // Method java/lang/Character.isLowSurrogate:(C)Z
      38: ifeq          91
      41: aload_0
      42: getfield      #5                  // Field pos:I
      45: aload_0
      46: getfield      #4                  // Field start:I
      49: if_icmpeq     91
      52: aload_0
      53: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      56: aload_0
      57: getfield      #5                  // Field pos:I
      60: iconst_1
      61: isub
      62: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      67: dup
      68: istore_2
      69: invokestatic  #18                 // Method java/lang/Character.isHighSurrogate:(C)Z
      72: ifeq          91
      75: aload_0
      76: dup
      77: getfield      #5                  // Field pos:I
      80: iconst_1
      81: isub
      82: putfield      #5                  // Field pos:I
      85: iload_2
      86: iload_1
      87: invokestatic  #20                 // Method java/lang/Character.toCodePoint:(CC)I
      90: ireturn
      91: iload_1
      92: ireturn

  protected long handleNextCE32();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #7                  // Field limit:I
       8: if_icmpne     15
      11: ldc2_w        #22                 // long -4294967104l
      14: lreturn
      15: aload_0
      16: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      19: aload_0
      20: dup
      21: getfield      #5                  // Field pos:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #5                  // Field pos:I
      30: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      35: istore_1
      36: aload_0
      37: iload_1
      38: aload_0
      39: getfield      #24                 // Field trie:Lcom/ibm/icu/impl/Trie2_32;
      42: iload_1
      43: invokevirtual #25                 // Method com/ibm/icu/impl/Trie2_32.getFromU16SingleLead:(C)I
      46: invokevirtual #26                 // Method makeCodePointAndCE32Pair:(II)J
      49: lreturn

  protected char handleGetTrailSurrogate();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pos:I
       4: aload_0
       5: getfield      #7                  // Field limit:I
       8: if_icmpne     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      17: aload_0
      18: getfield      #5                  // Field pos:I
      21: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      26: dup
      27: istore_1
      28: invokestatic  #19                 // Method java/lang/Character.isLowSurrogate:(C)Z
      31: ifeq          44
      34: aload_0
      35: dup
      36: getfield      #5                  // Field pos:I
      39: iconst_1
      40: iadd
      41: putfield      #5                  // Field pos:I
      44: iload_1
      45: ireturn

  protected void forwardNumCodePoints(int);
    Code:
       0: iload_1
       1: ifle          89
       4: aload_0
       5: getfield      #5                  // Field pos:I
       8: aload_0
       9: getfield      #7                  // Field limit:I
      12: if_icmpeq     89
      15: aload_0
      16: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      19: aload_0
      20: dup
      21: getfield      #5                  // Field pos:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #5                  // Field pos:I
      30: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      35: istore_2
      36: iinc          1, -1
      39: iload_2
      40: invokestatic  #18                 // Method java/lang/Character.isHighSurrogate:(C)Z
      43: ifeq          86
      46: aload_0
      47: getfield      #5                  // Field pos:I
      50: aload_0
      51: getfield      #7                  // Field limit:I
      54: if_icmpeq     86
      57: aload_0
      58: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      61: aload_0
      62: getfield      #5                  // Field pos:I
      65: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      70: invokestatic  #19                 // Method java/lang/Character.isLowSurrogate:(C)Z
      73: ifeq          86
      76: aload_0
      77: dup
      78: getfield      #5                  // Field pos:I
      81: iconst_1
      82: iadd
      83: putfield      #5                  // Field pos:I
      86: goto          0
      89: return

  protected void backwardNumCodePoints(int);
    Code:
       0: iload_1
       1: ifle          91
       4: aload_0
       5: getfield      #5                  // Field pos:I
       8: aload_0
       9: getfield      #4                  // Field start:I
      12: if_icmpeq     91
      15: aload_0
      16: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      19: aload_0
      20: dup
      21: getfield      #5                  // Field pos:I
      24: iconst_1
      25: isub
      26: dup_x1
      27: putfield      #5                  // Field pos:I
      30: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      35: istore_2
      36: iinc          1, -1
      39: iload_2
      40: invokestatic  #19                 // Method java/lang/Character.isLowSurrogate:(C)Z
      43: ifeq          88
      46: aload_0
      47: getfield      #5                  // Field pos:I
      50: aload_0
      51: getfield      #4                  // Field start:I
      54: if_icmpeq     88
      57: aload_0
      58: getfield      #3                  // Field seq:Ljava/lang/CharSequence;
      61: aload_0
      62: getfield      #5                  // Field pos:I
      65: iconst_1
      66: isub
      67: invokeinterface #17,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      72: invokestatic  #18                 // Method java/lang/Character.isHighSurrogate:(C)Z
      75: ifeq          88
      78: aload_0
      79: dup
      80: getfield      #5                  // Field pos:I
      83: iconst_1
      84: isub
      85: putfield      #5                  // Field pos:I
      88: goto          0
      91: return

  static {};
    Code:
       0: ldc           #9                  // class com/ibm/icu/impl/coll/UTF16CollationIterator
       2: invokevirtual #27                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #10                 // Field $assertionsDisabled:Z
      16: return
}
