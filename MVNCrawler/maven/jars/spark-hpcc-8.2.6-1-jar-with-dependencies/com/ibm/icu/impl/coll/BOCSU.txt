Compiled from "BOCSU.java"
public class com.ibm.icu.impl.coll.BOCSU {
  private static final int SLOPE_MIN_;

  private static final int SLOPE_MAX_;

  private static final int SLOPE_MIDDLE_;

  private static final int SLOPE_TAIL_COUNT_;

  private static final int SLOPE_MAX_BYTES_;

  private static final int SLOPE_SINGLE_;

  private static final int SLOPE_LEAD_2_;

  private static final int SLOPE_LEAD_3_;

  private static final int SLOPE_REACH_POS_1_;

  private static final int SLOPE_REACH_NEG_1_;

  private static final int SLOPE_REACH_POS_2_;

  private static final int SLOPE_REACH_NEG_2_;

  private static final int SLOPE_REACH_POS_3_;

  private static final int SLOPE_REACH_NEG_3_;

  private static final int SLOPE_START_POS_2_;

  private static final int SLOPE_START_POS_3_;

  private static final int SLOPE_START_NEG_2_;

  private static final int SLOPE_START_NEG_3_;

  public static int writeIdenticalLevelRun(int, java.lang.CharSequence, int, int, com.ibm.icu.util.ByteArrayWrapper);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpge     150
       5: aload         4
       7: bipush        16
       9: aload_1
      10: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      15: iconst_2
      16: imul
      17: invokestatic  #3                  // Method ensureAppendCapacity:(Lcom/ibm/icu/util/ByteArrayWrapper;II)V
      20: aload         4
      22: getfield      #4                  // Field com/ibm/icu/util/ByteArrayWrapper.bytes:[B
      25: astore        5
      27: aload         5
      29: arraylength
      30: istore        6
      32: aload         4
      34: getfield      #5                  // Field com/ibm/icu/util/ByteArrayWrapper.size:I
      37: istore        7
      39: iload         6
      41: iconst_4
      42: isub
      43: istore        8
      45: iload_2
      46: iload_3
      47: if_icmpge     140
      50: iload         7
      52: iload         8
      54: if_icmpgt     140
      57: iload_0
      58: sipush        19968
      61: if_icmplt     70
      64: iload_0
      65: ldc           #6                  // int 40960
      67: if_icmplt     81
      70: iload_0
      71: bipush        -128
      73: iand
      74: bipush        -80
      76: isub
      77: istore_0
      78: goto          85
      81: sipush        30292
      84: istore_0
      85: aload_1
      86: iload_2
      87: invokestatic  #7                  // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      90: istore        9
      92: iload_2
      93: iload         9
      95: invokestatic  #8                  // Method java/lang/Character.charCount:(I)I
      98: iadd
      99: istore_2
     100: iload         9
     102: ldc           #9                  // int 65534
     104: if_icmpne     121
     107: aload         5
     109: iload         7
     111: iinc          7, 1
     114: iconst_2
     115: bastore
     116: iconst_0
     117: istore_0
     118: goto          137
     121: iload         9
     123: iload_0
     124: isub
     125: aload         5
     127: iload         7
     129: invokestatic  #10                 // Method writeDiff:(I[BI)I
     132: istore        7
     134: iload         9
     136: istore_0
     137: goto          45
     140: aload         4
     142: iload         7
     144: putfield      #5                  // Field com/ibm/icu/util/ByteArrayWrapper.size:I
     147: goto          0
     150: iload_0
     151: ireturn

  private static void ensureAppendCapacity(com.ibm.icu.util.ByteArrayWrapper, int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field com/ibm/icu/util/ByteArrayWrapper.bytes:[B
       4: arraylength
       5: aload_0
       6: getfield      #5                  // Field com/ibm/icu/util/ByteArrayWrapper.size:I
       9: isub
      10: istore_3
      11: iload_3
      12: iload_1
      13: if_icmplt     17
      16: return
      17: iload_2
      18: iload_1
      19: if_icmpge     24
      22: iload_1
      23: istore_2
      24: aload_0
      25: aload_0
      26: getfield      #5                  // Field com/ibm/icu/util/ByteArrayWrapper.size:I
      29: iload_2
      30: iadd
      31: invokevirtual #11                 // Method com/ibm/icu/util/ByteArrayWrapper.ensureCapacity:(I)Lcom/ibm/icu/util/ByteArrayWrapper;
      34: pop
      35: return

  private com.ibm.icu.impl.coll.BOCSU();
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: return

  private static final long getNegDivMod(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: irem
       3: istore_2
       4: iload_0
       5: iload_1
       6: idiv
       7: i2l
       8: lstore_3
       9: iload_2
      10: ifge          21
      13: lload_3
      14: lconst_1
      15: lsub
      16: lstore_3
      17: iload_2
      18: iload_1
      19: iadd
      20: istore_2
      21: lload_3
      22: bipush        32
      24: lshl
      25: iload_2
      26: i2l
      27: lor
      28: lreturn

  private static final int writeDiff(int, byte[], int);
    Code:
       0: iload_0
       1: bipush        -80
       3: if_icmplt     185
       6: iload_0
       7: bipush        80
       9: if_icmpgt     27
      12: aload_1
      13: iload_2
      14: iinc          2, 1
      17: sipush        129
      20: iload_0
      21: iadd
      22: i2b
      23: bastore
      24: goto          372
      27: iload_0
      28: sipush        10667
      31: if_icmpgt     67
      34: aload_1
      35: iload_2
      36: iinc          2, 1
      39: sipush        210
      42: iload_0
      43: sipush        253
      46: idiv
      47: iadd
      48: i2b
      49: bastore
      50: aload_1
      51: iload_2
      52: iinc          2, 1
      55: iconst_3
      56: iload_0
      57: sipush        253
      60: irem
      61: iadd
      62: i2b
      63: bastore
      64: goto          372
      67: iload_0
      68: ldc           #13                 // int 192785
      70: if_icmpgt     124
      73: aload_1
      74: iload_2
      75: iconst_2
      76: iadd
      77: iconst_3
      78: iload_0
      79: sipush        253
      82: irem
      83: iadd
      84: i2b
      85: bastore
      86: iload_0
      87: sipush        253
      90: idiv
      91: istore_0
      92: aload_1
      93: iload_2
      94: iconst_1
      95: iadd
      96: iconst_3
      97: iload_0
      98: sipush        253
     101: irem
     102: iadd
     103: i2b
     104: bastore
     105: aload_1
     106: iload_2
     107: sipush        252
     110: iload_0
     111: sipush        253
     114: idiv
     115: iadd
     116: i2b
     117: bastore
     118: iinc          2, 3
     121: goto          372
     124: aload_1
     125: iload_2
     126: iconst_3
     127: iadd
     128: iconst_3
     129: iload_0
     130: sipush        253
     133: irem
     134: iadd
     135: i2b
     136: bastore
     137: iload_0
     138: sipush        253
     141: idiv
     142: istore_0
     143: aload_1
     144: iload_2
     145: iconst_2
     146: iadd
     147: iconst_3
     148: iload_0
     149: sipush        253
     152: irem
     153: iadd
     154: i2b
     155: bastore
     156: iload_0
     157: sipush        253
     160: idiv
     161: istore_0
     162: aload_1
     163: iload_2
     164: iconst_1
     165: iadd
     166: iconst_3
     167: iload_0
     168: sipush        253
     171: irem
     172: iadd
     173: i2b
     174: bastore
     175: aload_1
     176: iload_2
     177: iconst_m1
     178: bastore
     179: iinc          2, 4
     182: goto          372
     185: iload_0
     186: sipush        253
     189: invokestatic  #14                 // Method getNegDivMod:(II)J
     192: lstore_3
     193: lload_3
     194: l2i
     195: istore        5
     197: iload_0
     198: sipush        -10668
     201: if_icmplt     235
     204: lload_3
     205: bipush        32
     207: lshr
     208: l2i
     209: istore_0
     210: aload_1
     211: iload_2
     212: iinc          2, 1
     215: bipush        49
     217: iload_0
     218: iadd
     219: i2b
     220: bastore
     221: aload_1
     222: iload_2
     223: iinc          2, 1
     226: iconst_3
     227: iload         5
     229: iadd
     230: i2b
     231: bastore
     232: goto          372
     235: iload_0
     236: ldc           #15                 // int -192786
     238: if_icmplt     299
     241: aload_1
     242: iload_2
     243: iconst_2
     244: iadd
     245: iconst_3
     246: iload         5
     248: iadd
     249: i2b
     250: bastore
     251: lload_3
     252: bipush        32
     254: lshr
     255: l2i
     256: istore_0
     257: iload_0
     258: sipush        253
     261: invokestatic  #14                 // Method getNegDivMod:(II)J
     264: lstore_3
     265: lload_3
     266: l2i
     267: istore        5
     269: lload_3
     270: bipush        32
     272: lshr
     273: l2i
     274: istore_0
     275: aload_1
     276: iload_2
     277: iconst_1
     278: iadd
     279: iconst_3
     280: iload         5
     282: iadd
     283: i2b
     284: bastore
     285: aload_1
     286: iload_2
     287: bipush        7
     289: iload_0
     290: iadd
     291: i2b
     292: bastore
     293: iinc          2, 3
     296: goto          372
     299: aload_1
     300: iload_2
     301: iconst_3
     302: iadd
     303: iconst_3
     304: iload         5
     306: iadd
     307: i2b
     308: bastore
     309: lload_3
     310: bipush        32
     312: lshr
     313: l2i
     314: istore_0
     315: iload_0
     316: sipush        253
     319: invokestatic  #14                 // Method getNegDivMod:(II)J
     322: lstore_3
     323: lload_3
     324: l2i
     325: istore        5
     327: lload_3
     328: bipush        32
     330: lshr
     331: l2i
     332: istore_0
     333: aload_1
     334: iload_2
     335: iconst_2
     336: iadd
     337: iconst_3
     338: iload         5
     340: iadd
     341: i2b
     342: bastore
     343: iload_0
     344: sipush        253
     347: invokestatic  #14                 // Method getNegDivMod:(II)J
     350: lstore_3
     351: lload_3
     352: l2i
     353: istore        5
     355: aload_1
     356: iload_2
     357: iconst_1
     358: iadd
     359: iconst_3
     360: iload         5
     362: iadd
     363: i2b
     364: bastore
     365: aload_1
     366: iload_2
     367: iconst_3
     368: bastore
     369: iinc          2, 4
     372: iload_2
     373: ireturn
}
