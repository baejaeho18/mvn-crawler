Compiled from "SoftCache.java"
public abstract class com.ibm.icu.impl.SoftCache<K, V, D> extends com.ibm.icu.impl.CacheBase<K, V, D> {
  private java.util.concurrent.ConcurrentHashMap<K, java.lang.Object> map;

  public com.ibm.icu.impl.SoftCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/impl/CacheBase."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
      15: return

  public final V getInstance(K, D);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/concurrent/ConcurrentHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: ifnull        69
      13: aload_3
      14: instanceof    #6                  // class com/ibm/icu/impl/CacheValue
      17: ifne          22
      20: aload_3
      21: areturn
      22: aload_3
      23: checkcast     #6                  // class com/ibm/icu/impl/CacheValue
      26: astore        4
      28: aload         4
      30: invokevirtual #7                  // Method com/ibm/icu/impl/CacheValue.isNull:()Z
      33: ifeq          38
      36: aconst_null
      37: areturn
      38: aload         4
      40: invokevirtual #8                  // Method com/ibm/icu/impl/CacheValue.get:()Ljava/lang/Object;
      43: astore        5
      45: aload         5
      47: ifnull        53
      50: aload         5
      52: areturn
      53: aload_0
      54: aload_1
      55: aload_2
      56: invokevirtual #9                  // Method createInstance:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: astore        5
      61: aload         4
      63: aload         5
      65: invokevirtual #10                 // Method com/ibm/icu/impl/CacheValue.resetIfCleared:(Ljava/lang/Object;)Ljava/lang/Object;
      68: areturn
      69: aload_0
      70: aload_1
      71: aload_2
      72: invokevirtual #9                  // Method createInstance:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: astore        4
      77: aload         4
      79: ifnull        93
      82: invokestatic  #11                 // Method com/ibm/icu/impl/CacheValue.futureInstancesWillBeStrong:()Z
      85: ifeq          93
      88: aload         4
      90: goto          98
      93: aload         4
      95: invokestatic  #12                 // Method com/ibm/icu/impl/CacheValue.getInstance:(Ljava/lang/Object;)Lcom/ibm/icu/impl/CacheValue;
      98: astore_3
      99: aload_0
     100: getfield      #4                  // Field map:Ljava/util/concurrent/ConcurrentHashMap;
     103: aload_1
     104: aload_3
     105: invokevirtual #13                 // Method java/util/concurrent/ConcurrentHashMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: astore_3
     109: aload_3
     110: ifnonnull     116
     113: aload         4
     115: areturn
     116: aload_3
     117: instanceof    #6                  // class com/ibm/icu/impl/CacheValue
     120: ifne          125
     123: aload_3
     124: areturn
     125: aload_3
     126: checkcast     #6                  // class com/ibm/icu/impl/CacheValue
     129: astore        5
     131: aload         5
     133: aload         4
     135: invokevirtual #10                 // Method com/ibm/icu/impl/CacheValue.resetIfCleared:(Ljava/lang/Object;)Ljava/lang/Object;
     138: areturn
}
