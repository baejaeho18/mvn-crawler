Compiled from "StringPrepDataReader.java"
public final class com.ibm.icu.impl.StringPrepDataReader implements com.ibm.icu.impl.ICUBinary$Authenticate {
  private static final boolean debug;

  private java.nio.ByteBuffer byteBuffer;

  private int unicodeVersion;

  private static final int DATA_FORMAT_ID;

  private static final byte[] DATA_FORMAT_VERSION;

  public com.ibm.icu.impl.StringPrepDataReader(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field debug:Z
       7: ifeq          38
      10: getstatic     #3                  // Field java/lang/System.out:Ljava/io/PrintStream;
      13: new           #4                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #6                  // String Bytes in buffer
      22: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #8                  // Method java/nio/ByteBuffer.remaining:()I
      29: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      38: aload_0
      39: aload_1
      40: putfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      43: aload_0
      44: aload_0
      45: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      48: ldc           #14                 // int 1397772880
      50: aload_0
      51: invokestatic  #15                 // Method com/ibm/icu/impl/ICUBinary.readHeader:(Ljava/nio/ByteBuffer;ILcom/ibm/icu/impl/ICUBinary$Authenticate;)I
      54: putfield      #16                 // Field unicodeVersion:I
      57: getstatic     #2                  // Field debug:Z
      60: ifeq          94
      63: getstatic     #3                  // Field java/lang/System.out:Ljava/io/PrintStream;
      66: new           #4                  // class java/lang/StringBuilder
      69: dup
      70: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #17                 // String Bytes left in byteBuffer
      75: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_0
      79: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      82: invokevirtual #8                  // Method java/nio/ByteBuffer.remaining:()I
      85: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokevirtual #11                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      94: return

  public char[] read(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iconst_0
       6: invokestatic  #18                 // Method com/ibm/icu/impl/ICUBinary.getChars:(Ljava/nio/ByteBuffer;II)[C
       9: areturn

  public boolean isDataVersionAcceptable(byte[]);
    Code:
       0: aload_1
       1: iconst_0
       2: baload
       3: getstatic     #19                 // Field DATA_FORMAT_VERSION:[B
       6: iconst_0
       7: baload
       8: if_icmpne     37
      11: aload_1
      12: iconst_2
      13: baload
      14: getstatic     #19                 // Field DATA_FORMAT_VERSION:[B
      17: iconst_2
      18: baload
      19: if_icmpne     37
      22: aload_1
      23: iconst_3
      24: baload
      25: getstatic     #19                 // Field DATA_FORMAT_VERSION:[B
      28: iconst_3
      29: baload
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public int[] readIndexes(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: newarray       int
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     27
      11: aload_2
      12: iload_3
      13: aload_0
      14: getfield      #12                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      17: invokevirtual #20                 // Method java/nio/ByteBuffer.getInt:()I
      20: iastore
      21: iinc          3, 1
      24: goto          6
      27: aload_2
      28: areturn

  public byte[] getUnicodeVersion();
    Code:
       0: aload_0
       1: getfield      #16                 // Field unicodeVersion:I
       4: invokestatic  #21                 // Method com/ibm/icu/impl/ICUBinary.getVersionByteArrayFromCompactInt:(I)[B
       7: areturn

  static {};
    Code:
       0: ldc           #22                 // String NormalizerDataReader
       2: invokestatic  #23                 // Method com/ibm/icu/impl/ICUDebug.enabled:(Ljava/lang/String;)Z
       5: putstatic     #2                  // Field debug:Z
       8: iconst_4
       9: newarray       byte
      11: dup
      12: iconst_0
      13: iconst_3
      14: bastore
      15: dup
      16: iconst_1
      17: iconst_2
      18: bastore
      19: dup
      20: iconst_2
      21: iconst_5
      22: bastore
      23: dup
      24: iconst_3
      25: iconst_2
      26: bastore
      27: putstatic     #19                 // Field DATA_FORMAT_VERSION:[B
      30: return
}
