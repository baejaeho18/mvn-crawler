Compiled from "StringRange.java"
final class com.ibm.icu.impl.StringRange$Ranges implements java.lang.Comparable<com.ibm.icu.impl.StringRange$Ranges> {
  private final com.ibm.icu.impl.StringRange$Range[] ranges;

  public com.ibm.icu.impl.StringRange$Ranges(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #3                  // Method com/ibm/icu/lang/CharSequences.codePoints:(Ljava/lang/CharSequence;)[I
       8: astore_2
       9: aload_0
      10: aload_2
      11: arraylength
      12: anewarray     #4                  // class com/ibm/icu/impl/StringRange$Range
      15: putfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_2
      22: arraylength
      23: if_icmpge     51
      26: aload_0
      27: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      30: iload_3
      31: new           #4                  // class com/ibm/icu/impl/StringRange$Range
      34: dup
      35: aload_2
      36: iload_3
      37: iaload
      38: aload_2
      39: iload_3
      40: iaload
      41: invokespecial #6                  // Method com/ibm/icu/impl/StringRange$Range."<init>":(II)V
      44: aastore
      45: iinc          3, 1
      48: goto          20
      51: return

  public boolean merge(int, com.ibm.icu.impl.StringRange$Ranges);
    Code:
       0: aload_0
       1: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_3
       8: iload_3
       9: iflt          68
      12: iload_3
      13: iload_1
      14: if_icmpne     42
      17: aload_0
      18: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      21: iload_3
      22: aaload
      23: getfield      #7                  // Field com/ibm/icu/impl/StringRange$Range.max:I
      26: aload_2
      27: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      30: iload_3
      31: aaload
      32: getfield      #8                  // Field com/ibm/icu/impl/StringRange$Range.min:I
      35: iconst_1
      36: isub
      37: if_icmpeq     62
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      46: iload_3
      47: aaload
      48: aload_2
      49: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      52: iload_3
      53: aaload
      54: invokevirtual #9                  // Method com/ibm/icu/impl/StringRange$Range.equals:(Ljava/lang/Object;)Z
      57: ifne          62
      60: iconst_0
      61: ireturn
      62: iinc          3, -1
      65: goto          8
      68: aload_0
      69: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      72: iload_1
      73: aaload
      74: aload_2
      75: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      78: iload_1
      79: aaload
      80: getfield      #7                  // Field com/ibm/icu/impl/StringRange$Range.max:I
      83: putfield      #7                  // Field com/ibm/icu/impl/StringRange$Range.max:I
      86: iconst_1
      87: ireturn

  public java.lang.String start();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_0
      12: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      15: arraylength
      16: if_icmpge     39
      19: aload_1
      20: aload_0
      21: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      24: iload_2
      25: aaload
      26: getfield      #8                  // Field com/ibm/icu/impl/StringRange$Range.min:I
      29: invokevirtual #12                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      32: pop
      33: iinc          2, 1
      36: goto          10
      39: aload_1
      40: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  public java.lang.String end(boolean);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method firstDifference:()I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      10: arraylength
      11: if_icmpne     16
      14: aconst_null
      15: areturn
      16: new           #10                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      23: astore_3
      24: iload_1
      25: ifeq          32
      28: iload_2
      29: goto          33
      32: iconst_0
      33: istore        4
      35: iload         4
      37: aload_0
      38: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      41: arraylength
      42: if_icmpge     66
      45: aload_3
      46: aload_0
      47: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      50: iload         4
      52: aaload
      53: getfield      #7                  // Field com/ibm/icu/impl/StringRange$Range.max:I
      56: invokevirtual #12                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      59: pop
      60: iinc          4, 1
      63: goto          35
      66: aload_3
      67: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  public int firstDifference();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
       7: arraylength
       8: if_icmpge     40
      11: aload_0
      12: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      15: iload_1
      16: aaload
      17: getfield      #8                  // Field com/ibm/icu/impl/StringRange$Range.min:I
      20: aload_0
      21: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      24: iload_1
      25: aaload
      26: getfield      #7                  // Field com/ibm/icu/impl/StringRange$Range.max:I
      29: if_icmpeq     34
      32: iload_1
      33: ireturn
      34: iinc          1, 1
      37: goto          2
      40: aload_0
      41: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      44: arraylength
      45: ireturn

  public java.lang.Integer size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
       4: arraylength
       5: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       8: areturn

  public int compareTo(com.ibm.icu.impl.StringRange$Ranges);
    Code:
       0: aload_0
       1: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
       4: arraylength
       5: aload_1
       6: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
       9: arraylength
      10: isub
      11: istore_2
      12: iload_2
      13: ifeq          18
      16: iload_2
      17: ireturn
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_0
      22: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      25: arraylength
      26: if_icmpge     57
      29: aload_0
      30: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      33: iload_3
      34: aaload
      35: aload_1
      36: getfield      #5                  // Field ranges:[Lcom/ibm/icu/impl/StringRange$Range;
      39: iload_3
      40: aaload
      41: invokevirtual #16                 // Method com/ibm/icu/impl/StringRange$Range.compareTo:(Lcom/ibm/icu/impl/StringRange$Range;)I
      44: istore_2
      45: iload_2
      46: ifeq          51
      49: iload_2
      50: ireturn
      51: iinc          3, 1
      54: goto          20
      57: iconst_0
      58: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method start:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: iconst_0
       7: invokevirtual #18                 // Method end:(Z)Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnonnull     19
      15: aload_1
      16: goto          42
      19: new           #10                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_1
      27: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #20                 // String ~
      32: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class com/ibm/icu/impl/StringRange$Ranges
       5: invokevirtual #22                 // Method compareTo:(Lcom/ibm/icu/impl/StringRange$Ranges;)I
       8: ireturn
}
