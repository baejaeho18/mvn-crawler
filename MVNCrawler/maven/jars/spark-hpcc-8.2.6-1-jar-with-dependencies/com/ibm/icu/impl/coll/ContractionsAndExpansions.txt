Compiled from "ContractionsAndExpansions.java"
public final class com.ibm.icu.impl.coll.ContractionsAndExpansions {
  private com.ibm.icu.impl.coll.CollationData data;

  private com.ibm.icu.text.UnicodeSet contractions;

  private com.ibm.icu.text.UnicodeSet expansions;

  private com.ibm.icu.impl.coll.ContractionsAndExpansions$CESink sink;

  private boolean addPrefixes;

  private int checkTailored;

  private com.ibm.icu.text.UnicodeSet tailored;

  private com.ibm.icu.text.UnicodeSet ranges;

  private java.lang.StringBuilder unreversedPrefix;

  private java.lang.String suffix;

  private long[] ces;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.impl.coll.ContractionsAndExpansions(com.ibm.icu.text.UnicodeSet, com.ibm.icu.text.UnicodeSet, com.ibm.icu.impl.coll.ContractionsAndExpansions$CESink, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field checkTailored:I
       9: aload_0
      10: new           #3                  // class com/ibm/icu/text/UnicodeSet
      13: dup
      14: invokespecial #4                  // Method com/ibm/icu/text/UnicodeSet."<init>":()V
      17: putfield      #5                  // Field tailored:Lcom/ibm/icu/text/UnicodeSet;
      20: aload_0
      21: new           #6                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      28: putfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
      31: aload_0
      32: bipush        31
      34: newarray       long
      36: putfield      #10                 // Field ces:[J
      39: aload_0
      40: aload_1
      41: putfield      #11                 // Field contractions:Lcom/ibm/icu/text/UnicodeSet;
      44: aload_0
      45: aload_2
      46: putfield      #12                 // Field expansions:Lcom/ibm/icu/text/UnicodeSet;
      49: aload_0
      50: aload_3
      51: putfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
      54: aload_0
      55: iload         4
      57: putfield      #14                 // Field addPrefixes:Z
      60: return

  public void forData(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_1
       1: getfield      #15                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
       4: ifnull        12
       7: aload_0
       8: iconst_m1
       9: putfield      #2                  // Field checkTailored:I
      12: aload_0
      13: aload_1
      14: putfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      17: aload_0
      18: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      21: getfield      #17                 // Field com/ibm/icu/impl/coll/CollationData.trie:Lcom/ibm/icu/impl/Trie2_32;
      24: invokevirtual #18                 // Method com/ibm/icu/impl/Trie2_32.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          74
      37: aload_2
      38: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #21                 // class com/ibm/icu/impl/Trie2$Range
      46: dup
      47: astore_3
      48: getfield      #22                 // Field com/ibm/icu/impl/Trie2$Range.leadSurrogate:Z
      51: ifne          74
      54: aload_0
      55: aload_3
      56: getfield      #23                 // Field com/ibm/icu/impl/Trie2$Range.startCodePoint:I
      59: aload_3
      60: getfield      #24                 // Field com/ibm/icu/impl/Trie2$Range.endCodePoint:I
      63: aload_3
      64: getfield      #25                 // Field com/ibm/icu/impl/Trie2$Range.value:I
      67: aload_0
      68: invokespecial #26                 // Method enumCnERange:(IIILcom/ibm/icu/impl/coll/ContractionsAndExpansions;)V
      71: goto          28
      74: aload_1
      75: getfield      #15                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
      78: ifnonnull     82
      81: return
      82: aload_0
      83: getfield      #5                  // Field tailored:Lcom/ibm/icu/text/UnicodeSet;
      86: invokevirtual #27                 // Method com/ibm/icu/text/UnicodeSet.freeze:()Lcom/ibm/icu/text/UnicodeSet;
      89: pop
      90: aload_0
      91: iconst_1
      92: putfield      #2                  // Field checkTailored:I
      95: aload_0
      96: aload_1
      97: getfield      #15                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     100: putfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     103: aload_0
     104: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     107: getfield      #17                 // Field com/ibm/icu/impl/coll/CollationData.trie:Lcom/ibm/icu/impl/Trie2_32;
     110: invokevirtual #18                 // Method com/ibm/icu/impl/Trie2_32.iterator:()Ljava/util/Iterator;
     113: astore_2
     114: aload_2
     115: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     120: ifeq          160
     123: aload_2
     124: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #21                 // class com/ibm/icu/impl/Trie2$Range
     132: dup
     133: astore_3
     134: getfield      #22                 // Field com/ibm/icu/impl/Trie2$Range.leadSurrogate:Z
     137: ifne          160
     140: aload_0
     141: aload_3
     142: getfield      #23                 // Field com/ibm/icu/impl/Trie2$Range.startCodePoint:I
     145: aload_3
     146: getfield      #24                 // Field com/ibm/icu/impl/Trie2$Range.endCodePoint:I
     149: aload_3
     150: getfield      #25                 // Field com/ibm/icu/impl/Trie2$Range.value:I
     153: aload_0
     154: invokespecial #26                 // Method enumCnERange:(IIILcom/ibm/icu/impl/coll/ContractionsAndExpansions;)V
     157: goto          114
     160: return

  private void enumCnERange(int, int, int, com.ibm.icu.impl.coll.ContractionsAndExpansions);
    Code:
       0: aload         4
       2: getfield      #2                  // Field checkTailored:I
       5: ifne          11
       8: goto          163
      11: aload         4
      13: getfield      #2                  // Field checkTailored:I
      16: ifge          41
      19: iload_3
      20: sipush        192
      23: if_icmpne     27
      26: return
      27: aload         4
      29: getfield      #5                  // Field tailored:Lcom/ibm/icu/text/UnicodeSet;
      32: iload_1
      33: iload_2
      34: invokevirtual #28                 // Method com/ibm/icu/text/UnicodeSet.add:(II)Lcom/ibm/icu/text/UnicodeSet;
      37: pop
      38: goto          163
      41: iload_1
      42: iload_2
      43: if_icmpne     59
      46: aload         4
      48: getfield      #5                  // Field tailored:Lcom/ibm/icu/text/UnicodeSet;
      51: iload_1
      52: invokevirtual #29                 // Method com/ibm/icu/text/UnicodeSet.contains:(I)Z
      55: ifeq          163
      58: return
      59: aload         4
      61: getfield      #5                  // Field tailored:Lcom/ibm/icu/text/UnicodeSet;
      64: iload_1
      65: iload_2
      66: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.containsSome:(II)Z
      69: ifeq          163
      72: aload         4
      74: getfield      #31                 // Field ranges:Lcom/ibm/icu/text/UnicodeSet;
      77: ifnonnull     92
      80: aload         4
      82: new           #3                  // class com/ibm/icu/text/UnicodeSet
      85: dup
      86: invokespecial #4                  // Method com/ibm/icu/text/UnicodeSet."<init>":()V
      89: putfield      #31                 // Field ranges:Lcom/ibm/icu/text/UnicodeSet;
      92: aload         4
      94: getfield      #31                 // Field ranges:Lcom/ibm/icu/text/UnicodeSet;
      97: iload_1
      98: iload_2
      99: invokevirtual #32                 // Method com/ibm/icu/text/UnicodeSet.set:(II)Lcom/ibm/icu/text/UnicodeSet;
     102: aload         4
     104: getfield      #5                  // Field tailored:Lcom/ibm/icu/text/UnicodeSet;
     107: invokevirtual #33                 // Method com/ibm/icu/text/UnicodeSet.removeAll:(Lcom/ibm/icu/text/UnicodeSet;)Lcom/ibm/icu/text/UnicodeSet;
     110: pop
     111: aload         4
     113: getfield      #31                 // Field ranges:Lcom/ibm/icu/text/UnicodeSet;
     116: invokevirtual #34                 // Method com/ibm/icu/text/UnicodeSet.getRangeCount:()I
     119: istore        5
     121: iconst_0
     122: istore        6
     124: iload         6
     126: iload         5
     128: if_icmpge     163
     131: aload         4
     133: aload         4
     135: getfield      #31                 // Field ranges:Lcom/ibm/icu/text/UnicodeSet;
     138: iload         6
     140: invokevirtual #35                 // Method com/ibm/icu/text/UnicodeSet.getRangeStart:(I)I
     143: aload         4
     145: getfield      #31                 // Field ranges:Lcom/ibm/icu/text/UnicodeSet;
     148: iload         6
     150: invokevirtual #36                 // Method com/ibm/icu/text/UnicodeSet.getRangeEnd:(I)I
     153: iload_3
     154: invokespecial #37                 // Method handleCE32:(III)V
     157: iinc          6, 1
     160: goto          124
     163: aload         4
     165: iload_1
     166: iload_2
     167: iload_3
     168: invokespecial #37                 // Method handleCE32:(III)V
     171: return

  public void forCodePoint(com.ibm.icu.impl.coll.CollationData, int);
    Code:
       0: aload_1
       1: iload_2
       2: invokevirtual #38                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
       5: istore_3
       6: iload_3
       7: sipush        192
      10: if_icmpne     24
      13: aload_1
      14: getfield      #15                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
      17: astore_1
      18: aload_1
      19: iload_2
      20: invokevirtual #38                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      23: istore_3
      24: aload_0
      25: aload_1
      26: putfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      29: aload_0
      30: iload_2
      31: iload_2
      32: iload_3
      33: invokespecial #37                 // Method handleCE32:(III)V
      36: return

  private void handleCE32(int, int, int);
    Code:
       0: iload_3
       1: sipush        255
       4: iand
       5: sipush        192
       8: if_icmpge     32
      11: aload_0
      12: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
      15: ifnull        31
      18: aload_0
      19: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
      22: iload_3
      23: invokestatic  #39                 // Method com/ibm/icu/impl/coll/Collation.ceFromSimpleCE32:(I)J
      26: invokeinterface #40,  3           // InterfaceMethod com/ibm/icu/impl/coll/ContractionsAndExpansions$CESink.handleCE:(J)V
      31: return
      32: iload_3
      33: invokestatic  #41                 // Method com/ibm/icu/impl/coll/Collation.tagFromCE32:(I)I
      36: tableswitch   { // 0 to 15
                     0: 116
                     1: 151
                     2: 172
                     3: 117
                     4: 193
                     5: 252
                     6: 343
                     7: 117
                     8: 399
                     9: 407
                    10: 415
                    11: 431
                    12: 466
                    13: 117
                    14: 613
                    15: 614
               default: 615
          }
     116: return
     117: new           #42                 // class java/lang/AssertionError
     120: dup
     121: ldc           #43                 // String Unexpected CE32 tag type %d for ce32=0x%08x
     123: iconst_2
     124: anewarray     #44                 // class java/lang/Object
     127: dup
     128: iconst_0
     129: iload_3
     130: invokestatic  #41                 // Method com/ibm/icu/impl/coll/Collation.tagFromCE32:(I)I
     133: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     136: aastore
     137: dup
     138: iconst_1
     139: iload_3
     140: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     143: aastore
     144: invokestatic  #46                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     147: invokespecial #47                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     150: athrow
     151: aload_0
     152: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     155: ifnull        171
     158: aload_0
     159: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     162: iload_3
     163: invokestatic  #48                 // Method com/ibm/icu/impl/coll/Collation.ceFromLongPrimaryCE32:(I)J
     166: invokeinterface #40,  3           // InterfaceMethod com/ibm/icu/impl/coll/ContractionsAndExpansions$CESink.handleCE:(J)V
     171: return
     172: aload_0
     173: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     176: ifnull        192
     179: aload_0
     180: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     183: iload_3
     184: invokestatic  #49                 // Method com/ibm/icu/impl/coll/Collation.ceFromLongSecondaryCE32:(I)J
     187: invokeinterface #40,  3           // InterfaceMethod com/ibm/icu/impl/coll/ContractionsAndExpansions$CESink.handleCE:(J)V
     192: return
     193: aload_0
     194: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     197: ifnull        235
     200: aload_0
     201: getfield      #10                 // Field ces:[J
     204: iconst_0
     205: iload_3
     206: invokestatic  #50                 // Method com/ibm/icu/impl/coll/Collation.latinCE0FromCE32:(I)J
     209: lastore
     210: aload_0
     211: getfield      #10                 // Field ces:[J
     214: iconst_1
     215: iload_3
     216: invokestatic  #51                 // Method com/ibm/icu/impl/coll/Collation.latinCE1FromCE32:(I)J
     219: lastore
     220: aload_0
     221: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     224: aload_0
     225: getfield      #10                 // Field ces:[J
     228: iconst_0
     229: iconst_2
     230: invokeinterface #52,  4           // InterfaceMethod com/ibm/icu/impl/coll/ContractionsAndExpansions$CESink.handleExpansion:([JII)V
     235: aload_0
     236: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
     239: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
     242: ifne          251
     245: aload_0
     246: iload_1
     247: iload_2
     248: invokevirtual #54                 // Method addExpansions:(II)V
     251: return
     252: aload_0
     253: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     256: ifnull        326
     259: iload_3
     260: invokestatic  #55                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     263: istore        4
     265: iload_3
     266: invokestatic  #56                 // Method com/ibm/icu/impl/coll/Collation.lengthFromCE32:(I)I
     269: istore        5
     271: iconst_0
     272: istore        6
     274: iload         6
     276: iload         5
     278: if_icmpge     310
     281: aload_0
     282: getfield      #10                 // Field ces:[J
     285: iload         6
     287: aload_0
     288: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     291: getfield      #57                 // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     294: iload         4
     296: iload         6
     298: iadd
     299: iaload
     300: invokestatic  #58                 // Method com/ibm/icu/impl/coll/Collation.ceFromCE32:(I)J
     303: lastore
     304: iinc          6, 1
     307: goto          274
     310: aload_0
     311: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     314: aload_0
     315: getfield      #10                 // Field ces:[J
     318: iconst_0
     319: iload         5
     321: invokeinterface #52,  4           // InterfaceMethod com/ibm/icu/impl/coll/ContractionsAndExpansions$CESink.handleExpansion:([JII)V
     326: aload_0
     327: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
     330: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
     333: ifne          342
     336: aload_0
     337: iload_1
     338: iload_2
     339: invokevirtual #54                 // Method addExpansions:(II)V
     342: return
     343: aload_0
     344: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     347: ifnull        382
     350: iload_3
     351: invokestatic  #55                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     354: istore        4
     356: iload_3
     357: invokestatic  #56                 // Method com/ibm/icu/impl/coll/Collation.lengthFromCE32:(I)I
     360: istore        5
     362: aload_0
     363: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     366: aload_0
     367: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     370: getfield      #59                 // Field com/ibm/icu/impl/coll/CollationData.ces:[J
     373: iload         4
     375: iload         5
     377: invokeinterface #52,  4           // InterfaceMethod com/ibm/icu/impl/coll/ContractionsAndExpansions$CESink.handleExpansion:([JII)V
     382: aload_0
     383: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
     386: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
     389: ifne          398
     392: aload_0
     393: iload_1
     394: iload_2
     395: invokevirtual #54                 // Method addExpansions:(II)V
     398: return
     399: aload_0
     400: iload_1
     401: iload_2
     402: iload_3
     403: invokespecial #60                 // Method handlePrefixes:(III)V
     406: return
     407: aload_0
     408: iload_1
     409: iload_2
     410: iload_3
     411: invokevirtual #61                 // Method handleContractions:(III)V
     414: return
     415: aload_0
     416: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     419: getfield      #57                 // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     422: iload_3
     423: invokestatic  #55                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     426: iaload
     427: istore_3
     428: goto          615
     431: getstatic     #62                 // Field $assertionsDisabled:Z
     434: ifne          453
     437: iload_1
     438: ifne          445
     441: iload_2
     442: ifeq          453
     445: new           #42                 // class java/lang/AssertionError
     448: dup
     449: invokespecial #63                 // Method java/lang/AssertionError."<init>":()V
     452: athrow
     453: aload_0
     454: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     457: getfield      #57                 // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     460: iconst_0
     461: iaload
     462: istore_3
     463: goto          615
     466: aload_0
     467: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     470: ifnull        596
     473: new           #64                 // class com/ibm/icu/impl/coll/UTF16CollationIterator
     476: dup
     477: aload_0
     478: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     481: invokespecial #65                 // Method com/ibm/icu/impl/coll/UTF16CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;)V
     484: astore        4
     486: new           #6                  // class java/lang/StringBuilder
     489: dup
     490: iconst_1
     491: invokespecial #66                 // Method java/lang/StringBuilder."<init>":(I)V
     494: astore        5
     496: iload_1
     497: istore        6
     499: iload         6
     501: iload_2
     502: if_icmpgt     596
     505: aload         5
     507: iconst_0
     508: invokevirtual #67                 // Method java/lang/StringBuilder.setLength:(I)V
     511: aload         5
     513: iload         6
     515: invokevirtual #68                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
     518: pop
     519: aload         4
     521: iconst_0
     522: aload         5
     524: iconst_0
     525: invokevirtual #69                 // Method com/ibm/icu/impl/coll/UTF16CollationIterator.setText:(ZLjava/lang/CharSequence;I)V
     528: aload         4
     530: invokevirtual #70                 // Method com/ibm/icu/impl/coll/UTF16CollationIterator.fetchCEs:()I
     533: istore        7
     535: getstatic     #62                 // Field $assertionsDisabled:Z
     538: ifne          571
     541: iload         7
     543: iconst_2
     544: if_icmplt     563
     547: aload         4
     549: iload         7
     551: iconst_1
     552: isub
     553: invokevirtual #71                 // Method com/ibm/icu/impl/coll/UTF16CollationIterator.getCE:(I)J
     556: ldc2_w        #72                 // long 4311744768l
     559: lcmp
     560: ifeq          571
     563: new           #42                 // class java/lang/AssertionError
     566: dup
     567: invokespecial #63                 // Method java/lang/AssertionError."<init>":()V
     570: athrow
     571: aload_0
     572: getfield      #13                 // Field sink:Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;
     575: aload         4
     577: invokevirtual #74                 // Method com/ibm/icu/impl/coll/UTF16CollationIterator.getCEs:()[J
     580: iconst_0
     581: iload         7
     583: iconst_1
     584: isub
     585: invokeinterface #52,  4           // InterfaceMethod com/ibm/icu/impl/coll/ContractionsAndExpansions$CESink.handleExpansion:([JII)V
     590: iinc          6, 1
     593: goto          499
     596: aload_0
     597: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
     600: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
     603: ifne          612
     606: aload_0
     607: iload_1
     608: iload_2
     609: invokevirtual #54                 // Method addExpansions:(II)V
     612: return
     613: return
     614: return
     615: goto          0

  private void handlePrefixes(int, int, int);
    Code:
       0: iload_3
       1: invokestatic  #55                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
       4: istore        4
       6: aload_0
       7: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      10: iload         4
      12: invokevirtual #75                 // Method com/ibm/icu/impl/coll/CollationData.getCE32FromContexts:(I)I
      15: istore_3
      16: aload_0
      17: iload_1
      18: iload_2
      19: iload_3
      20: invokespecial #37                 // Method handleCE32:(III)V
      23: aload_0
      24: getfield      #14                 // Field addPrefixes:Z
      27: ifne          31
      30: return
      31: new           #76                 // class com/ibm/icu/util/CharsTrie
      34: dup
      35: aload_0
      36: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      39: getfield      #77                 // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
      42: iload         4
      44: iconst_2
      45: iadd
      46: invokespecial #78                 // Method com/ibm/icu/util/CharsTrie."<init>":(Ljava/lang/CharSequence;I)V
      49: invokevirtual #79                 // Method com/ibm/icu/util/CharsTrie.iterator:()Lcom/ibm/icu/util/CharsTrie$Iterator;
      52: astore        5
      54: aload         5
      56: invokevirtual #80                 // Method com/ibm/icu/util/CharsTrie$Iterator.hasNext:()Z
      59: ifeq          112
      62: aload         5
      64: invokevirtual #81                 // Method com/ibm/icu/util/CharsTrie$Iterator.next:()Lcom/ibm/icu/util/CharsTrie$Entry;
      67: astore        6
      69: aload_0
      70: aload         6
      72: getfield      #82                 // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
      75: invokespecial #83                 // Method setPrefix:(Ljava/lang/CharSequence;)V
      78: aload_0
      79: iload_1
      80: iload_2
      81: aload_0
      82: getfield      #11                 // Field contractions:Lcom/ibm/icu/text/UnicodeSet;
      85: invokevirtual #84                 // Method addStrings:(IILcom/ibm/icu/text/UnicodeSet;)V
      88: aload_0
      89: iload_1
      90: iload_2
      91: aload_0
      92: getfield      #12                 // Field expansions:Lcom/ibm/icu/text/UnicodeSet;
      95: invokevirtual #84                 // Method addStrings:(IILcom/ibm/icu/text/UnicodeSet;)V
      98: aload_0
      99: iload_1
     100: iload_2
     101: aload         6
     103: getfield      #85                 // Field com/ibm/icu/util/CharsTrie$Entry.value:I
     106: invokespecial #37                 // Method handleCE32:(III)V
     109: goto          54
     112: aload_0
     113: invokespecial #86                 // Method resetPrefix:()V
     116: return

  void handleContractions(int, int, int);
    Code:
       0: iload_3
       1: invokestatic  #55                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
       4: istore        4
       6: iload_3
       7: sipush        256
      10: iand
      11: ifeq          38
      14: getstatic     #62                 // Field $assertionsDisabled:Z
      17: ifne          76
      20: aload_0
      21: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
      24: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
      27: ifne          76
      30: new           #42                 // class java/lang/AssertionError
      33: dup
      34: invokespecial #63                 // Method java/lang/AssertionError."<init>":()V
      37: athrow
      38: aload_0
      39: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      42: iload         4
      44: invokevirtual #75                 // Method com/ibm/icu/impl/coll/CollationData.getCE32FromContexts:(I)I
      47: istore_3
      48: getstatic     #62                 // Field $assertionsDisabled:Z
      51: ifne          69
      54: iload_3
      55: invokestatic  #87                 // Method com/ibm/icu/impl/coll/Collation.isContractionCE32:(I)Z
      58: ifeq          69
      61: new           #42                 // class java/lang/AssertionError
      64: dup
      65: invokespecial #63                 // Method java/lang/AssertionError."<init>":()V
      68: athrow
      69: aload_0
      70: iload_1
      71: iload_2
      72: iload_3
      73: invokespecial #37                 // Method handleCE32:(III)V
      76: new           #76                 // class com/ibm/icu/util/CharsTrie
      79: dup
      80: aload_0
      81: getfield      #16                 // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      84: getfield      #77                 // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
      87: iload         4
      89: iconst_2
      90: iadd
      91: invokespecial #78                 // Method com/ibm/icu/util/CharsTrie."<init>":(Ljava/lang/CharSequence;I)V
      94: invokevirtual #79                 // Method com/ibm/icu/util/CharsTrie.iterator:()Lcom/ibm/icu/util/CharsTrie$Iterator;
      97: astore        5
      99: aload         5
     101: invokevirtual #80                 // Method com/ibm/icu/util/CharsTrie$Iterator.hasNext:()Z
     104: ifeq          172
     107: aload         5
     109: invokevirtual #81                 // Method com/ibm/icu/util/CharsTrie$Iterator.next:()Lcom/ibm/icu/util/CharsTrie$Entry;
     112: astore        6
     114: aload_0
     115: aload         6
     117: getfield      #82                 // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
     120: invokeinterface #88,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
     125: putfield      #89                 // Field suffix:Ljava/lang/String;
     128: aload_0
     129: iload_1
     130: iload_2
     131: aload_0
     132: getfield      #11                 // Field contractions:Lcom/ibm/icu/text/UnicodeSet;
     135: invokevirtual #84                 // Method addStrings:(IILcom/ibm/icu/text/UnicodeSet;)V
     138: aload_0
     139: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
     142: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
     145: ifeq          158
     148: aload_0
     149: iload_1
     150: iload_2
     151: aload_0
     152: getfield      #12                 // Field expansions:Lcom/ibm/icu/text/UnicodeSet;
     155: invokevirtual #84                 // Method addStrings:(IILcom/ibm/icu/text/UnicodeSet;)V
     158: aload_0
     159: iload_1
     160: iload_2
     161: aload         6
     163: getfield      #85                 // Field com/ibm/icu/util/CharsTrie$Entry.value:I
     166: invokespecial #37                 // Method handleCE32:(III)V
     169: goto          99
     172: aload_0
     173: aconst_null
     174: putfield      #89                 // Field suffix:Ljava/lang/String;
     177: return

  void addExpansions(int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
       4: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
       7: ifne          37
      10: aload_0
      11: getfield      #89                 // Field suffix:Ljava/lang/String;
      14: ifnonnull     37
      17: aload_0
      18: getfield      #12                 // Field expansions:Lcom/ibm/icu/text/UnicodeSet;
      21: ifnull        47
      24: aload_0
      25: getfield      #12                 // Field expansions:Lcom/ibm/icu/text/UnicodeSet;
      28: iload_1
      29: iload_2
      30: invokevirtual #28                 // Method com/ibm/icu/text/UnicodeSet.add:(II)Lcom/ibm/icu/text/UnicodeSet;
      33: pop
      34: goto          47
      37: aload_0
      38: iload_1
      39: iload_2
      40: aload_0
      41: getfield      #12                 // Field expansions:Lcom/ibm/icu/text/UnicodeSet;
      44: invokevirtual #84                 // Method addStrings:(IILcom/ibm/icu/text/UnicodeSet;)V
      47: return

  void addStrings(int, int, com.ibm.icu.text.UnicodeSet);
    Code:
       0: aload_3
       1: ifnonnull     5
       4: return
       5: new           #6                  // class java/lang/StringBuilder
       8: dup
       9: aload_0
      10: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
      13: invokespecial #90                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/CharSequence;)V
      16: astore        4
      18: aload         4
      20: iload_1
      21: invokevirtual #68                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: getfield      #89                 // Field suffix:Ljava/lang/String;
      29: ifnull        42
      32: aload         4
      34: aload_0
      35: getfield      #89                 // Field suffix:Ljava/lang/String;
      38: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: aload         4
      45: invokevirtual #92                 // Method com/ibm/icu/text/UnicodeSet.add:(Ljava/lang/CharSequence;)Lcom/ibm/icu/text/UnicodeSet;
      48: pop
      49: aload         4
      51: aload_0
      52: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
      55: invokevirtual #53                 // Method java/lang/StringBuilder.length:()I
      58: invokevirtual #67                 // Method java/lang/StringBuilder.setLength:(I)V
      61: iinc          1, 1
      64: iload_1
      65: iload_2
      66: if_icmple     18
      69: return

  private void setPrefix(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #67                 // Method java/lang/StringBuilder.setLength:(I)V
       8: aload_0
       9: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      16: invokevirtual #94                 // Method java/lang/StringBuilder.reverse:()Ljava/lang/StringBuilder;
      19: pop
      20: return

  private void resetPrefix();
    Code:
       0: aload_0
       1: getfield      #8                  // Field unreversedPrefix:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #67                 // Method java/lang/StringBuilder.setLength:(I)V
       8: return

  static {};
    Code:
       0: ldc           #95                 // class com/ibm/icu/impl/coll/ContractionsAndExpansions
       2: invokevirtual #96                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #62                 // Field $assertionsDisabled:Z
      16: return
}
