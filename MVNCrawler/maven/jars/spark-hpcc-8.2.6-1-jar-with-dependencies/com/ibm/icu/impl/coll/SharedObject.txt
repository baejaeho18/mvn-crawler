Compiled from "SharedObject.java"
public class com.ibm.icu.impl.coll.SharedObject implements java.lang.Cloneable {
  private java.util.concurrent.atomic.AtomicInteger refCount;

  public com.ibm.icu.impl.coll.SharedObject();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #4                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      15: return

  public com.ibm.icu.impl.coll.SharedObject clone();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #6                  // class com/ibm/icu/impl/coll/SharedObject
       7: astore_1
       8: goto          21
      11: astore_2
      12: new           #8                  // class com/ibm/icu/util/ICUCloneNotSupportedException
      15: dup
      16: aload_2
      17: invokespecial #9                  // Method com/ibm/icu/util/ICUCloneNotSupportedException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_1
      22: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      25: dup
      26: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      29: putfield      #4                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
      32: aload_1
      33: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/CloneNotSupportedException

  public final void addRef();
    Code:
       0: aload_0
       1: getfield      #4                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: pop
       8: return

  public final void removeRef();
    Code:
       0: aload_0
       1: getfield      #4                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: return

  public final int getRefCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field refCount:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public final void deleteIfZeroRefCount();
    Code:
       0: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method clone:()Lcom/ibm/icu/impl/coll/SharedObject;
       4: areturn
}
