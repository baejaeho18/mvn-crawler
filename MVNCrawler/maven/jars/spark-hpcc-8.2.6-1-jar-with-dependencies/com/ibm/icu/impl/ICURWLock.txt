Compiled from "ICURWLock.java"
public class com.ibm.icu.impl.ICURWLock {
  private java.util.concurrent.locks.ReentrantReadWriteLock rwl;

  private com.ibm.icu.impl.ICURWLock$Stats stats;

  public com.ibm.icu.impl.ICURWLock();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      15: aload_0
      16: aconst_null
      17: putfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      20: return

  public synchronized com.ibm.icu.impl.ICURWLock$Stats resetStats();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
       4: astore_1
       5: aload_0
       6: new           #6                  // class com/ibm/icu/impl/ICURWLock$Stats
       9: dup
      10: aconst_null
      11: invokespecial #7                  // Method com/ibm/icu/impl/ICURWLock$Stats."<init>":(Lcom/ibm/icu/impl/ICURWLock$1;)V
      14: putfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      17: aload_1
      18: areturn

  public synchronized com.ibm.icu.impl.ICURWLock$Stats clearStats();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      10: aload_1
      11: areturn

  public synchronized com.ibm.icu.impl.ICURWLock$Stats getStats();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
       4: ifnonnull     11
       7: aconst_null
       8: goto          23
      11: new           #6                  // class com/ibm/icu/impl/ICURWLock$Stats
      14: dup
      15: aload_0
      16: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      19: aconst_null
      20: invokespecial #8                  // Method com/ibm/icu/impl/ICURWLock$Stats."<init>":(Lcom/ibm/icu/impl/ICURWLock$Stats;Lcom/ibm/icu/impl/ICURWLock$1;)V
      23: areturn

  public void acquireRead();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
       4: ifnull        80
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      15: dup
      16: getfield      #9                  // Field com/ibm/icu/impl/ICURWLock$Stats._rc:I
      19: iconst_1
      20: iadd
      21: putfield      #9                  // Field com/ibm/icu/impl/ICURWLock$Stats._rc:I
      24: aload_0
      25: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      28: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.getReadLockCount:()I
      31: ifle          47
      34: aload_0
      35: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      38: dup
      39: getfield      #11                 // Field com/ibm/icu/impl/ICURWLock$Stats._mrc:I
      42: iconst_1
      43: iadd
      44: putfield      #11                 // Field com/ibm/icu/impl/ICURWLock$Stats._mrc:I
      47: aload_0
      48: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      51: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.isWriteLocked:()Z
      54: ifeq          70
      57: aload_0
      58: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      61: dup
      62: getfield      #13                 // Field com/ibm/icu/impl/ICURWLock$Stats._wrc:I
      65: iconst_1
      66: iadd
      67: putfield      #13                 // Field com/ibm/icu/impl/ICURWLock$Stats._wrc:I
      70: aload_1
      71: monitorexit
      72: goto          80
      75: astore_2
      76: aload_1
      77: monitorexit
      78: aload_2
      79: athrow
      80: aload_0
      81: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      84: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      87: invokevirtual #15                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      90: return
    Exception table:
       from    to  target type
          11    72    75   any
          75    78    75   any

  public void releaseRead();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #14                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       7: invokevirtual #16                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      10: return

  public void acquireWrite();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
       4: ifnull        67
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      15: dup
      16: getfield      #17                 // Field com/ibm/icu/impl/ICURWLock$Stats._wc:I
      19: iconst_1
      20: iadd
      21: putfield      #17                 // Field com/ibm/icu/impl/ICURWLock$Stats._wc:I
      24: aload_0
      25: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      28: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.getReadLockCount:()I
      31: ifgt          44
      34: aload_0
      35: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      38: invokevirtual #12                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.isWriteLocked:()Z
      41: ifeq          57
      44: aload_0
      45: getfield      #5                  // Field stats:Lcom/ibm/icu/impl/ICURWLock$Stats;
      48: dup
      49: getfield      #18                 // Field com/ibm/icu/impl/ICURWLock$Stats._wwc:I
      52: iconst_1
      53: iadd
      54: putfield      #18                 // Field com/ibm/icu/impl/ICURWLock$Stats._wwc:I
      57: aload_1
      58: monitorexit
      59: goto          67
      62: astore_2
      63: aload_1
      64: monitorexit
      65: aload_2
      66: athrow
      67: aload_0
      68: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      71: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      74: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      77: return
    Exception table:
       from    to  target type
          11    59    62   any
          62    65    62   any

  public void releaseWrite();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rwl:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
       4: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       7: invokevirtual #21                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      10: return
}
