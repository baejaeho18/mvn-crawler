Compiled from "Normalizer2Impl.java"
public final class com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer implements java.lang.Appendable {
  private final com.ibm.icu.impl.Normalizer2Impl impl;

  private final java.lang.Appendable app;

  private final java.lang.StringBuilder str;

  private final boolean appIsStringBuilder;

  private int reorderStart;

  private int lastCC;

  private int codePointStart;

  private int codePointLimit;

  public com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer(com.ibm.icu.impl.Normalizer2Impl, java.lang.Appendable, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field impl:Lcom/ibm/icu/impl/Normalizer2Impl;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field app:Ljava/lang/Appendable;
      14: aload_0
      15: getfield      #3                  // Field app:Ljava/lang/Appendable;
      18: instanceof    #4                  // class java/lang/StringBuilder
      21: ifeq          110
      24: aload_0
      25: iconst_1
      26: putfield      #5                  // Field appIsStringBuilder:Z
      29: aload_0
      30: aload_2
      31: checkcast     #4                  // class java/lang/StringBuilder
      34: putfield      #6                  // Field str:Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      41: iload_3
      42: invokevirtual #7                  // Method java/lang/StringBuilder.ensureCapacity:(I)V
      45: aload_0
      46: iconst_0
      47: putfield      #8                  // Field reorderStart:I
      50: aload_0
      51: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      54: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      57: ifne          68
      60: aload_0
      61: iconst_0
      62: putfield      #10                 // Field lastCC:I
      65: goto          136
      68: aload_0
      69: invokespecial #11                 // Method setIterator:()V
      72: aload_0
      73: aload_0
      74: invokespecial #12                 // Method previousCC:()I
      77: putfield      #10                 // Field lastCC:I
      80: aload_0
      81: getfield      #10                 // Field lastCC:I
      84: iconst_1
      85: if_icmple     99
      88: aload_0
      89: invokespecial #12                 // Method previousCC:()I
      92: iconst_1
      93: if_icmple     99
      96: goto          88
      99: aload_0
     100: aload_0
     101: getfield      #13                 // Field codePointLimit:I
     104: putfield      #8                  // Field reorderStart:I
     107: goto          136
     110: aload_0
     111: iconst_0
     112: putfield      #5                  // Field appIsStringBuilder:Z
     115: aload_0
     116: new           #4                  // class java/lang/StringBuilder
     119: dup
     120: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     123: putfield      #6                  // Field str:Ljava/lang/StringBuilder;
     126: aload_0
     127: iconst_0
     128: putfield      #8                  // Field reorderStart:I
     131: aload_0
     132: iconst_0
     133: putfield      #10                 // Field lastCC:I
     136: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
       7: ireturn

  public int getLastCC();
    Code:
       0: aload_0
       1: getfield      #10                 // Field lastCC:I
       4: ireturn

  public java.lang.StringBuilder getStringBuilder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: areturn

  public boolean equals(java.lang.CharSequence, int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: iconst_0
       5: aload_0
       6: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       9: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      12: aload_1
      13: iload_2
      14: iload_3
      15: invokestatic  #15                 // Method com/ibm/icu/impl/Normalizer2Impl$UTF16Plus.equal:(Ljava/lang/CharSequence;IILjava/lang/CharSequence;II)Z
      18: ireturn

  public void append(int, int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field lastCC:I
       4: iload_2
       5: if_icmple     12
       8: iload_2
       9: ifne          45
      12: aload_0
      13: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      16: iload_1
      17: invokevirtual #16                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      20: pop
      21: aload_0
      22: iload_2
      23: putfield      #10                 // Field lastCC:I
      26: iload_2
      27: iconst_1
      28: if_icmpgt     51
      31: aload_0
      32: aload_0
      33: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      36: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      39: putfield      #8                  // Field reorderStart:I
      42: goto          51
      45: aload_0
      46: iload_1
      47: iload_2
      48: invokespecial #17                 // Method insert:(II)V
      51: return

  public void append(java.lang.CharSequence, int, int, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpne     6
       5: return
       6: aload_0
       7: getfield      #10                 // Field lastCC:I
      10: iload         4
      12: if_icmple     20
      15: iload         4
      17: ifne          83
      20: iload         5
      22: iconst_1
      23: if_icmpgt     44
      26: aload_0
      27: aload_0
      28: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      31: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      34: iload_3
      35: iload_2
      36: isub
      37: iadd
      38: putfield      #8                  // Field reorderStart:I
      41: goto          63
      44: iload         4
      46: iconst_1
      47: if_icmpgt     63
      50: aload_0
      51: aload_0
      52: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      55: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      58: iconst_1
      59: iadd
      60: putfield      #8                  // Field reorderStart:I
      63: aload_0
      64: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      67: aload_1
      68: iload_2
      69: iload_3
      70: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      73: pop
      74: aload_0
      75: iload         5
      77: putfield      #10                 // Field lastCC:I
      80: goto          163
      83: aload_1
      84: iload_2
      85: invokestatic  #19                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      88: istore        6
      90: iload_2
      91: iload         6
      93: invokestatic  #20                 // Method java/lang/Character.charCount:(I)I
      96: iadd
      97: istore_2
      98: aload_0
      99: iload         6
     101: iload         4
     103: invokespecial #17                 // Method insert:(II)V
     106: iload_2
     107: iload_3
     108: if_icmpge     163
     111: aload_1
     112: iload_2
     113: invokestatic  #19                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
     116: istore        6
     118: iload_2
     119: iload         6
     121: invokestatic  #20                 // Method java/lang/Character.charCount:(I)I
     124: iadd
     125: istore_2
     126: iload_2
     127: iload_3
     128: if_icmpge     148
     131: aload_0
     132: getfield      #2                  // Field impl:Lcom/ibm/icu/impl/Normalizer2Impl;
     135: iload         6
     137: invokevirtual #21                 // Method com/ibm/icu/impl/Normalizer2Impl.getNorm16:(I)I
     140: invokestatic  #22                 // Method com/ibm/icu/impl/Normalizer2Impl.getCCFromYesOrMaybe:(I)I
     143: istore        4
     145: goto          152
     148: iload         5
     150: istore        4
     152: aload_0
     153: iload         6
     155: iload         4
     157: invokevirtual #23                 // Method append:(II)V
     160: goto          106
     163: return

  public com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer append(char);
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: iload_1
       5: invokevirtual #24                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       8: pop
       9: aload_0
      10: iconst_0
      11: putfield      #10                 // Field lastCC:I
      14: aload_0
      15: aload_0
      16: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      19: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      22: putfield      #8                  // Field reorderStart:I
      25: aload_0
      26: areturn

  public void appendZeroCC(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: iload_1
       5: invokevirtual #16                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
       8: pop
       9: aload_0
      10: iconst_0
      11: putfield      #10                 // Field lastCC:I
      14: aload_0
      15: aload_0
      16: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      19: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      22: putfield      #8                  // Field reorderStart:I
      25: return

  public com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer append(java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: ifeq          34
       9: aload_0
      10: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      17: pop
      18: aload_0
      19: iconst_0
      20: putfield      #10                 // Field lastCC:I
      23: aload_0
      24: aload_0
      25: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      28: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      31: putfield      #8                  // Field reorderStart:I
      34: aload_0
      35: areturn

  public com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer append(java.lang.CharSequence, int, int);
    Code:
       0: iload_2
       1: iload_3
       2: if_icmpeq     32
       5: aload_0
       6: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      15: pop
      16: aload_0
      17: iconst_0
      18: putfield      #10                 // Field lastCC:I
      21: aload_0
      22: aload_0
      23: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      26: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      29: putfield      #8                  // Field reorderStart:I
      32: aload_0
      33: areturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #5                  // Field appIsStringBuilder:Z
       4: ifeq          21
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      12: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      15: putfield      #8                  // Field reorderStart:I
      18: goto          61
      21: aload_0
      22: getfield      #3                  // Field app:Ljava/lang/Appendable;
      25: aload_0
      26: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      29: invokeinterface #27,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      34: pop
      35: aload_0
      36: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      39: iconst_0
      40: invokevirtual #28                 // Method java/lang/StringBuilder.setLength:(I)V
      43: aload_0
      44: iconst_0
      45: putfield      #8                  // Field reorderStart:I
      48: goto          61
      51: astore_1
      52: new           #30                 // class com/ibm/icu/util/ICUUncheckedIOException
      55: dup
      56: aload_1
      57: invokespecial #31                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
      60: athrow
      61: aload_0
      62: iconst_0
      63: putfield      #10                 // Field lastCC:I
      66: return
    Exception table:
       from    to  target type
          21    48    51   Class java/io/IOException

  public com.ibm.icu.impl.Normalizer2Impl$ReorderingBuffer flushAndAppendZeroCC(java.lang.CharSequence, int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field appIsStringBuilder:Z
       4: ifeq          32
       7: aload_0
       8: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      11: aload_1
      12: iload_2
      13: iload_3
      14: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      17: pop
      18: aload_0
      19: aload_0
      20: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      23: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      26: putfield      #8                  // Field reorderStart:I
      29: goto          82
      32: aload_0
      33: getfield      #3                  // Field app:Ljava/lang/Appendable;
      36: aload_0
      37: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      40: invokeinterface #27,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      45: aload_1
      46: iload_2
      47: iload_3
      48: invokeinterface #32,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
      53: pop
      54: aload_0
      55: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      58: iconst_0
      59: invokevirtual #28                 // Method java/lang/StringBuilder.setLength:(I)V
      62: aload_0
      63: iconst_0
      64: putfield      #8                  // Field reorderStart:I
      67: goto          82
      70: astore        4
      72: new           #30                 // class com/ibm/icu/util/ICUUncheckedIOException
      75: dup
      76: aload         4
      78: invokespecial #31                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
      81: athrow
      82: aload_0
      83: iconst_0
      84: putfield      #10                 // Field lastCC:I
      87: aload_0
      88: areturn
    Exception table:
       from    to  target type
          32    67    70   Class java/io/IOException

  public void remove();
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #28                 // Method java/lang/StringBuilder.setLength:(I)V
       8: aload_0
       9: iconst_0
      10: putfield      #10                 // Field lastCC:I
      13: aload_0
      14: iconst_0
      15: putfield      #8                  // Field reorderStart:I
      18: return

  public void removeSuffix(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       4: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
       7: istore_2
       8: aload_0
       9: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      12: iload_2
      13: iload_1
      14: isub
      15: iload_2
      16: invokevirtual #33                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      19: pop
      20: aload_0
      21: iconst_0
      22: putfield      #10                 // Field lastCC:I
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      30: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
      33: putfield      #8                  // Field reorderStart:I
      36: return

  private void insert(int, int);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method setIterator:()V
       4: aload_0
       5: invokespecial #34                 // Method skipPrevious:()V
       8: aload_0
       9: invokespecial #12                 // Method previousCC:()I
      12: iload_2
      13: if_icmple     19
      16: goto          8
      19: iload_1
      20: ldc           #35                 // int 65535
      22: if_icmpgt     57
      25: aload_0
      26: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #13                 // Field codePointLimit:I
      33: iload_1
      34: i2c
      35: invokevirtual #36                 // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
      38: pop
      39: iload_2
      40: iconst_1
      41: if_icmpgt     88
      44: aload_0
      45: aload_0
      46: getfield      #13                 // Field codePointLimit:I
      49: iconst_1
      50: iadd
      51: putfield      #8                  // Field reorderStart:I
      54: goto          88
      57: aload_0
      58: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      61: aload_0
      62: getfield      #13                 // Field codePointLimit:I
      65: iload_1
      66: invokestatic  #37                 // Method java/lang/Character.toChars:(I)[C
      69: invokevirtual #38                 // Method java/lang/StringBuilder.insert:(I[C)Ljava/lang/StringBuilder;
      72: pop
      73: iload_2
      74: iconst_1
      75: if_icmpgt     88
      78: aload_0
      79: aload_0
      80: getfield      #13                 // Field codePointLimit:I
      83: iconst_2
      84: iadd
      85: putfield      #8                  // Field reorderStart:I
      88: return

  private void setIterator();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
       5: invokevirtual #9                  // Method java/lang/StringBuilder.length:()I
       8: putfield      #39                 // Field codePointStart:I
      11: return

  private void skipPrevious();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #39                 // Field codePointStart:I
       5: putfield      #13                 // Field codePointLimit:I
       8: aload_0
       9: aload_0
      10: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #39                 // Field codePointStart:I
      17: iconst_m1
      18: invokevirtual #40                 // Method java/lang/StringBuilder.offsetByCodePoints:(II)I
      21: putfield      #39                 // Field codePointStart:I
      24: return

  private int previousCC();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #39                 // Field codePointStart:I
       5: putfield      #13                 // Field codePointLimit:I
       8: aload_0
       9: getfield      #8                  // Field reorderStart:I
      12: aload_0
      13: getfield      #39                 // Field codePointStart:I
      16: if_icmplt     21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #6                  // Field str:Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #39                 // Field codePointStart:I
      29: invokevirtual #41                 // Method java/lang/StringBuilder.codePointBefore:(I)I
      32: istore_1
      33: aload_0
      34: dup
      35: getfield      #39                 // Field codePointStart:I
      38: iload_1
      39: invokestatic  #20                 // Method java/lang/Character.charCount:(I)I
      42: isub
      43: putfield      #39                 // Field codePointStart:I
      46: aload_0
      47: getfield      #2                  // Field impl:Lcom/ibm/icu/impl/Normalizer2Impl;
      50: iload_1
      51: invokevirtual #42                 // Method com/ibm/icu/impl/Normalizer2Impl.getCCFromYesOrMaybeCP:(I)I
      54: ireturn

  public java.lang.Appendable append(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method append:(C)Lcom/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer;
       5: areturn

  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #44                 // Method append:(Ljava/lang/CharSequence;II)Lcom/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer;
       7: areturn

  public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method append:(Ljava/lang/CharSequence;)Lcom/ibm/icu/impl/Normalizer2Impl$ReorderingBuffer;
       5: areturn
}
