Compiled from "CaseMapImpl.java"
public final class com.ibm.icu.impl.CaseMapImpl$StringContextIterator implements com.ibm.icu.impl.UCaseProps$ContextIterator {
  protected java.lang.CharSequence s;

  protected int index;

  protected int limit;

  protected int cpStart;

  protected int cpLimit;

  protected int dir;

  public com.ibm.icu.impl.CaseMapImpl$StringContextIterator(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field s:Ljava/lang/CharSequence;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      16: putfield      #4                  // Field limit:I
      19: aload_0
      20: aload_0
      21: aload_0
      22: iconst_0
      23: dup_x1
      24: putfield      #5                  // Field index:I
      27: dup_x1
      28: putfield      #6                  // Field cpLimit:I
      31: putfield      #7                  // Field cpStart:I
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field dir:I
      39: return

  public com.ibm.icu.impl.CaseMapImpl$StringContextIterator(java.lang.CharSequence, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field s:Ljava/lang/CharSequence;
       9: aload_0
      10: iconst_0
      11: putfield      #5                  // Field index:I
      14: aload_0
      15: aload_1
      16: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      21: putfield      #4                  // Field limit:I
      24: aload_0
      25: iload_2
      26: putfield      #7                  // Field cpStart:I
      29: aload_0
      30: iload_3
      31: putfield      #6                  // Field cpLimit:I
      34: aload_0
      35: iconst_0
      36: putfield      #8                  // Field dir:I
      39: return

  public void setLimit(int);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpgt     26
       5: iload_1
       6: aload_0
       7: getfield      #2                  // Field s:Ljava/lang/CharSequence;
      10: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      15: if_icmpgt     26
      18: aload_0
      19: iload_1
      20: putfield      #4                  // Field limit:I
      23: goto          39
      26: aload_0
      27: aload_0
      28: getfield      #2                  // Field s:Ljava/lang/CharSequence;
      31: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      36: putfield      #4                  // Field limit:I
      39: return

  public void moveToLimit();
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #4                  // Field limit:I
       6: dup_x1
       7: putfield      #6                  // Field cpLimit:I
      10: putfield      #7                  // Field cpStart:I
      13: return

  public int nextCaseMapCP();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field cpLimit:I
       5: putfield      #7                  // Field cpStart:I
       8: aload_0
       9: getfield      #6                  // Field cpLimit:I
      12: aload_0
      13: getfield      #4                  // Field limit:I
      16: if_icmpge     46
      19: aload_0
      20: getfield      #2                  // Field s:Ljava/lang/CharSequence;
      23: aload_0
      24: getfield      #6                  // Field cpLimit:I
      27: invokestatic  #9                  // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      30: istore_1
      31: aload_0
      32: dup
      33: getfield      #6                  // Field cpLimit:I
      36: iload_1
      37: invokestatic  #10                 // Method java/lang/Character.charCount:(I)I
      40: iadd
      41: putfield      #6                  // Field cpLimit:I
      44: iload_1
      45: ireturn
      46: iconst_m1
      47: ireturn

  public void setCPStartAndLimit(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field cpStart:I
       5: aload_0
       6: iload_2
       7: putfield      #6                  // Field cpLimit:I
      10: aload_0
      11: iconst_0
      12: putfield      #8                  // Field dir:I
      15: return

  public int getCPStart();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cpStart:I
       4: ireturn

  public int getCPLimit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cpLimit:I
       4: ireturn

  public int getCPLength();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cpLimit:I
       4: aload_0
       5: getfield      #7                  // Field cpStart:I
       8: isub
       9: ireturn

  public void reset(int);
    Code:
       0: iload_1
       1: ifle          20
       4: aload_0
       5: iconst_1
       6: putfield      #8                  // Field dir:I
       9: aload_0
      10: aload_0
      11: getfield      #6                  // Field cpLimit:I
      14: putfield      #5                  // Field index:I
      17: goto          50
      20: iload_1
      21: ifge          40
      24: aload_0
      25: iconst_m1
      26: putfield      #8                  // Field dir:I
      29: aload_0
      30: aload_0
      31: getfield      #7                  // Field cpStart:I
      34: putfield      #5                  // Field index:I
      37: goto          50
      40: aload_0
      41: iconst_0
      42: putfield      #8                  // Field dir:I
      45: aload_0
      46: iconst_0
      47: putfield      #5                  // Field index:I
      50: return

  public int next();
    Code:
       0: aload_0
       1: getfield      #8                  // Field dir:I
       4: ifle          50
       7: aload_0
       8: getfield      #5                  // Field index:I
      11: aload_0
      12: getfield      #2                  // Field s:Ljava/lang/CharSequence;
      15: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      20: if_icmpge     50
      23: aload_0
      24: getfield      #2                  // Field s:Ljava/lang/CharSequence;
      27: aload_0
      28: getfield      #5                  // Field index:I
      31: invokestatic  #9                  // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      34: istore_1
      35: aload_0
      36: dup
      37: getfield      #5                  // Field index:I
      40: iload_1
      41: invokestatic  #10                 // Method java/lang/Character.charCount:(I)I
      44: iadd
      45: putfield      #5                  // Field index:I
      48: iload_1
      49: ireturn
      50: aload_0
      51: getfield      #8                  // Field dir:I
      54: ifge          91
      57: aload_0
      58: getfield      #5                  // Field index:I
      61: ifle          91
      64: aload_0
      65: getfield      #2                  // Field s:Ljava/lang/CharSequence;
      68: aload_0
      69: getfield      #5                  // Field index:I
      72: invokestatic  #11                 // Method java/lang/Character.codePointBefore:(Ljava/lang/CharSequence;I)I
      75: istore_1
      76: aload_0
      77: dup
      78: getfield      #5                  // Field index:I
      81: iload_1
      82: invokestatic  #10                 // Method java/lang/Character.charCount:(I)I
      85: isub
      86: putfield      #5                  // Field index:I
      89: iload_1
      90: ireturn
      91: iconst_m1
      92: ireturn
}
