Compiled from "DecimalFormatProperties.java"
public class com.ibm.icu.impl.number.DecimalFormatProperties implements java.lang.Cloneable,java.io.Serializable {
  private static final com.ibm.icu.impl.number.DecimalFormatProperties DEFAULT;

  private static final long serialVersionUID;

  private transient java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> compactCustomData;

  private transient com.ibm.icu.text.CompactDecimalFormat$CompactStyle compactStyle;

  private transient com.ibm.icu.util.Currency currency;

  private transient com.ibm.icu.text.CurrencyPluralInfo currencyPluralInfo;

  private transient com.ibm.icu.util.Currency$CurrencyUsage currencyUsage;

  private transient boolean decimalPatternMatchRequired;

  private transient boolean decimalSeparatorAlwaysShown;

  private transient boolean exponentSignAlwaysShown;

  private transient int formatWidth;

  private transient int groupingSize;

  private transient int magnitudeMultiplier;

  private transient java.math.MathContext mathContext;

  private transient int maximumFractionDigits;

  private transient int maximumIntegerDigits;

  private transient int maximumSignificantDigits;

  private transient int minimumExponentDigits;

  private transient int minimumFractionDigits;

  private transient int minimumGroupingDigits;

  private transient int minimumIntegerDigits;

  private transient int minimumSignificantDigits;

  private transient java.math.BigDecimal multiplier;

  private transient java.lang.String negativePrefix;

  private transient java.lang.String negativePrefixPattern;

  private transient java.lang.String negativeSuffix;

  private transient java.lang.String negativeSuffixPattern;

  private transient com.ibm.icu.impl.number.Padder$PadPosition padPosition;

  private transient java.lang.String padString;

  private transient boolean parseCaseSensitive;

  private transient boolean parseIntegerOnly;

  private transient com.ibm.icu.impl.number.parse.NumberParserImpl$ParseMode parseMode;

  private transient boolean parseNoExponent;

  private transient boolean parseToBigDecimal;

  private transient com.ibm.icu.text.PluralRules pluralRules;

  private transient java.lang.String positivePrefix;

  private transient java.lang.String positivePrefixPattern;

  private transient java.lang.String positiveSuffix;

  private transient java.lang.String positiveSuffixPattern;

  private transient java.math.BigDecimal roundingIncrement;

  private transient java.math.RoundingMode roundingMode;

  private transient int secondaryGroupingSize;

  private transient boolean signAlwaysShown;

  public com.ibm.icu.impl.number.DecimalFormatProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokevirtual #2                  // Method clear:()Lcom/ibm/icu/impl/number/DecimalFormatProperties;
       8: pop
       9: return

  private com.ibm.icu.impl.number.DecimalFormatProperties _clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field compactCustomData:Ljava/util/Map;
       5: aload_0
       6: aconst_null
       7: putfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      10: aload_0
      11: aconst_null
      12: putfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
      15: aload_0
      16: aconst_null
      17: putfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
      20: aload_0
      21: aconst_null
      22: putfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
      25: aload_0
      26: iconst_0
      27: putfield      #8                  // Field decimalPatternMatchRequired:Z
      30: aload_0
      31: iconst_0
      32: putfield      #9                  // Field decimalSeparatorAlwaysShown:Z
      35: aload_0
      36: iconst_0
      37: putfield      #10                 // Field exponentSignAlwaysShown:Z
      40: aload_0
      41: iconst_m1
      42: putfield      #11                 // Field formatWidth:I
      45: aload_0
      46: iconst_m1
      47: putfield      #12                 // Field groupingSize:I
      50: aload_0
      51: iconst_0
      52: putfield      #13                 // Field magnitudeMultiplier:I
      55: aload_0
      56: aconst_null
      57: putfield      #14                 // Field mathContext:Ljava/math/MathContext;
      60: aload_0
      61: iconst_m1
      62: putfield      #15                 // Field maximumFractionDigits:I
      65: aload_0
      66: iconst_m1
      67: putfield      #16                 // Field maximumIntegerDigits:I
      70: aload_0
      71: iconst_m1
      72: putfield      #17                 // Field maximumSignificantDigits:I
      75: aload_0
      76: iconst_m1
      77: putfield      #18                 // Field minimumExponentDigits:I
      80: aload_0
      81: iconst_m1
      82: putfield      #19                 // Field minimumFractionDigits:I
      85: aload_0
      86: iconst_m1
      87: putfield      #20                 // Field minimumGroupingDigits:I
      90: aload_0
      91: iconst_m1
      92: putfield      #21                 // Field minimumIntegerDigits:I
      95: aload_0
      96: iconst_m1
      97: putfield      #22                 // Field minimumSignificantDigits:I
     100: aload_0
     101: aconst_null
     102: putfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
     105: aload_0
     106: aconst_null
     107: putfield      #24                 // Field negativePrefix:Ljava/lang/String;
     110: aload_0
     111: aconst_null
     112: putfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
     115: aload_0
     116: aconst_null
     117: putfield      #26                 // Field negativeSuffix:Ljava/lang/String;
     120: aload_0
     121: aconst_null
     122: putfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
     125: aload_0
     126: aconst_null
     127: putfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
     130: aload_0
     131: aconst_null
     132: putfield      #29                 // Field padString:Ljava/lang/String;
     135: aload_0
     136: iconst_0
     137: putfield      #30                 // Field parseCaseSensitive:Z
     140: aload_0
     141: iconst_0
     142: putfield      #31                 // Field parseIntegerOnly:Z
     145: aload_0
     146: aconst_null
     147: putfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
     150: aload_0
     151: iconst_0
     152: putfield      #33                 // Field parseNoExponent:Z
     155: aload_0
     156: iconst_0
     157: putfield      #34                 // Field parseToBigDecimal:Z
     160: aload_0
     161: aconst_null
     162: putfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
     165: aload_0
     166: aconst_null
     167: putfield      #36                 // Field positivePrefix:Ljava/lang/String;
     170: aload_0
     171: aconst_null
     172: putfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
     175: aload_0
     176: aconst_null
     177: putfield      #38                 // Field positiveSuffix:Ljava/lang/String;
     180: aload_0
     181: aconst_null
     182: putfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
     185: aload_0
     186: aconst_null
     187: putfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
     190: aload_0
     191: aconst_null
     192: putfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
     195: aload_0
     196: iconst_m1
     197: putfield      #42                 // Field secondaryGroupingSize:I
     200: aload_0
     201: iconst_0
     202: putfield      #43                 // Field signAlwaysShown:Z
     205: aload_0
     206: areturn

  private com.ibm.icu.impl.number.DecimalFormatProperties _copyFrom(com.ibm.icu.impl.number.DecimalFormatProperties);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #3                  // Field compactCustomData:Ljava/util/Map;
       5: putfield      #3                  // Field compactCustomData:Ljava/util/Map;
       8: aload_0
       9: aload_1
      10: getfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      13: putfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      16: aload_0
      17: aload_1
      18: getfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
      21: putfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
      24: aload_0
      25: aload_1
      26: getfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
      29: putfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
      32: aload_0
      33: aload_1
      34: getfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
      37: putfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
      40: aload_0
      41: aload_1
      42: getfield      #8                  // Field decimalPatternMatchRequired:Z
      45: putfield      #8                  // Field decimalPatternMatchRequired:Z
      48: aload_0
      49: aload_1
      50: getfield      #9                  // Field decimalSeparatorAlwaysShown:Z
      53: putfield      #9                  // Field decimalSeparatorAlwaysShown:Z
      56: aload_0
      57: aload_1
      58: getfield      #10                 // Field exponentSignAlwaysShown:Z
      61: putfield      #10                 // Field exponentSignAlwaysShown:Z
      64: aload_0
      65: aload_1
      66: getfield      #11                 // Field formatWidth:I
      69: putfield      #11                 // Field formatWidth:I
      72: aload_0
      73: aload_1
      74: getfield      #12                 // Field groupingSize:I
      77: putfield      #12                 // Field groupingSize:I
      80: aload_0
      81: aload_1
      82: getfield      #13                 // Field magnitudeMultiplier:I
      85: putfield      #13                 // Field magnitudeMultiplier:I
      88: aload_0
      89: aload_1
      90: getfield      #14                 // Field mathContext:Ljava/math/MathContext;
      93: putfield      #14                 // Field mathContext:Ljava/math/MathContext;
      96: aload_0
      97: aload_1
      98: getfield      #15                 // Field maximumFractionDigits:I
     101: putfield      #15                 // Field maximumFractionDigits:I
     104: aload_0
     105: aload_1
     106: getfield      #16                 // Field maximumIntegerDigits:I
     109: putfield      #16                 // Field maximumIntegerDigits:I
     112: aload_0
     113: aload_1
     114: getfield      #17                 // Field maximumSignificantDigits:I
     117: putfield      #17                 // Field maximumSignificantDigits:I
     120: aload_0
     121: aload_1
     122: getfield      #18                 // Field minimumExponentDigits:I
     125: putfield      #18                 // Field minimumExponentDigits:I
     128: aload_0
     129: aload_1
     130: getfield      #19                 // Field minimumFractionDigits:I
     133: putfield      #19                 // Field minimumFractionDigits:I
     136: aload_0
     137: aload_1
     138: getfield      #20                 // Field minimumGroupingDigits:I
     141: putfield      #20                 // Field minimumGroupingDigits:I
     144: aload_0
     145: aload_1
     146: getfield      #21                 // Field minimumIntegerDigits:I
     149: putfield      #21                 // Field minimumIntegerDigits:I
     152: aload_0
     153: aload_1
     154: getfield      #22                 // Field minimumSignificantDigits:I
     157: putfield      #22                 // Field minimumSignificantDigits:I
     160: aload_0
     161: aload_1
     162: getfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
     165: putfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
     168: aload_0
     169: aload_1
     170: getfield      #24                 // Field negativePrefix:Ljava/lang/String;
     173: putfield      #24                 // Field negativePrefix:Ljava/lang/String;
     176: aload_0
     177: aload_1
     178: getfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
     181: putfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
     184: aload_0
     185: aload_1
     186: getfield      #26                 // Field negativeSuffix:Ljava/lang/String;
     189: putfield      #26                 // Field negativeSuffix:Ljava/lang/String;
     192: aload_0
     193: aload_1
     194: getfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
     197: putfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
     200: aload_0
     201: aload_1
     202: getfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
     205: putfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
     208: aload_0
     209: aload_1
     210: getfield      #29                 // Field padString:Ljava/lang/String;
     213: putfield      #29                 // Field padString:Ljava/lang/String;
     216: aload_0
     217: aload_1
     218: getfield      #30                 // Field parseCaseSensitive:Z
     221: putfield      #30                 // Field parseCaseSensitive:Z
     224: aload_0
     225: aload_1
     226: getfield      #31                 // Field parseIntegerOnly:Z
     229: putfield      #31                 // Field parseIntegerOnly:Z
     232: aload_0
     233: aload_1
     234: getfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
     237: putfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
     240: aload_0
     241: aload_1
     242: getfield      #33                 // Field parseNoExponent:Z
     245: putfield      #33                 // Field parseNoExponent:Z
     248: aload_0
     249: aload_1
     250: getfield      #34                 // Field parseToBigDecimal:Z
     253: putfield      #34                 // Field parseToBigDecimal:Z
     256: aload_0
     257: aload_1
     258: getfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
     261: putfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
     264: aload_0
     265: aload_1
     266: getfield      #36                 // Field positivePrefix:Ljava/lang/String;
     269: putfield      #36                 // Field positivePrefix:Ljava/lang/String;
     272: aload_0
     273: aload_1
     274: getfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
     277: putfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
     280: aload_0
     281: aload_1
     282: getfield      #38                 // Field positiveSuffix:Ljava/lang/String;
     285: putfield      #38                 // Field positiveSuffix:Ljava/lang/String;
     288: aload_0
     289: aload_1
     290: getfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
     293: putfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
     296: aload_0
     297: aload_1
     298: getfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
     301: putfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
     304: aload_0
     305: aload_1
     306: getfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
     309: putfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
     312: aload_0
     313: aload_1
     314: getfield      #42                 // Field secondaryGroupingSize:I
     317: putfield      #42                 // Field secondaryGroupingSize:I
     320: aload_0
     321: aload_1
     322: getfield      #43                 // Field signAlwaysShown:Z
     325: putfield      #43                 // Field signAlwaysShown:Z
     328: aload_0
     329: areturn

  private boolean _equals(com.ibm.icu.impl.number.DecimalFormatProperties);
    Code:
       0: iconst_1
       1: istore_2
       2: iload_2
       3: ifeq          25
       6: aload_0
       7: aload_0
       8: getfield      #3                  // Field compactCustomData:Ljava/util/Map;
      11: aload_1
      12: getfield      #3                  // Field compactCustomData:Ljava/util/Map;
      15: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_2
      27: iload_2
      28: ifeq          50
      31: aload_0
      32: aload_0
      33: getfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      36: aload_1
      37: getfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      40: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: istore_2
      52: iload_2
      53: ifeq          75
      56: aload_0
      57: aload_0
      58: getfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
      61: aload_1
      62: getfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
      65: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: istore_2
      77: iload_2
      78: ifeq          100
      81: aload_0
      82: aload_0
      83: getfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
      86: aload_1
      87: getfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
      90: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifeq          100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: istore_2
     102: iload_2
     103: ifeq          125
     106: aload_0
     107: aload_0
     108: getfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
     111: aload_1
     112: getfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
     115: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     118: ifeq          125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: istore_2
     127: iload_2
     128: ifeq          150
     131: aload_0
     132: aload_0
     133: getfield      #8                  // Field decimalPatternMatchRequired:Z
     136: aload_1
     137: getfield      #8                  // Field decimalPatternMatchRequired:Z
     140: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
     143: ifeq          150
     146: iconst_1
     147: goto          151
     150: iconst_0
     151: istore_2
     152: iload_2
     153: ifeq          175
     156: aload_0
     157: aload_0
     158: getfield      #9                  // Field decimalSeparatorAlwaysShown:Z
     161: aload_1
     162: getfield      #9                  // Field decimalSeparatorAlwaysShown:Z
     165: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
     168: ifeq          175
     171: iconst_1
     172: goto          176
     175: iconst_0
     176: istore_2
     177: iload_2
     178: ifeq          200
     181: aload_0
     182: aload_0
     183: getfield      #10                 // Field exponentSignAlwaysShown:Z
     186: aload_1
     187: getfield      #10                 // Field exponentSignAlwaysShown:Z
     190: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
     193: ifeq          200
     196: iconst_1
     197: goto          201
     200: iconst_0
     201: istore_2
     202: iload_2
     203: ifeq          225
     206: aload_0
     207: aload_0
     208: getfield      #11                 // Field formatWidth:I
     211: aload_1
     212: getfield      #11                 // Field formatWidth:I
     215: invokespecial #46                 // Method _equalsHelper:(II)Z
     218: ifeq          225
     221: iconst_1
     222: goto          226
     225: iconst_0
     226: istore_2
     227: iload_2
     228: ifeq          250
     231: aload_0
     232: aload_0
     233: getfield      #12                 // Field groupingSize:I
     236: aload_1
     237: getfield      #12                 // Field groupingSize:I
     240: invokespecial #46                 // Method _equalsHelper:(II)Z
     243: ifeq          250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: istore_2
     252: iload_2
     253: ifeq          275
     256: aload_0
     257: aload_0
     258: getfield      #13                 // Field magnitudeMultiplier:I
     261: aload_1
     262: getfield      #13                 // Field magnitudeMultiplier:I
     265: invokespecial #46                 // Method _equalsHelper:(II)Z
     268: ifeq          275
     271: iconst_1
     272: goto          276
     275: iconst_0
     276: istore_2
     277: iload_2
     278: ifeq          300
     281: aload_0
     282: aload_0
     283: getfield      #14                 // Field mathContext:Ljava/math/MathContext;
     286: aload_1
     287: getfield      #14                 // Field mathContext:Ljava/math/MathContext;
     290: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     293: ifeq          300
     296: iconst_1
     297: goto          301
     300: iconst_0
     301: istore_2
     302: iload_2
     303: ifeq          325
     306: aload_0
     307: aload_0
     308: getfield      #15                 // Field maximumFractionDigits:I
     311: aload_1
     312: getfield      #15                 // Field maximumFractionDigits:I
     315: invokespecial #46                 // Method _equalsHelper:(II)Z
     318: ifeq          325
     321: iconst_1
     322: goto          326
     325: iconst_0
     326: istore_2
     327: iload_2
     328: ifeq          350
     331: aload_0
     332: aload_0
     333: getfield      #16                 // Field maximumIntegerDigits:I
     336: aload_1
     337: getfield      #16                 // Field maximumIntegerDigits:I
     340: invokespecial #46                 // Method _equalsHelper:(II)Z
     343: ifeq          350
     346: iconst_1
     347: goto          351
     350: iconst_0
     351: istore_2
     352: iload_2
     353: ifeq          375
     356: aload_0
     357: aload_0
     358: getfield      #17                 // Field maximumSignificantDigits:I
     361: aload_1
     362: getfield      #17                 // Field maximumSignificantDigits:I
     365: invokespecial #46                 // Method _equalsHelper:(II)Z
     368: ifeq          375
     371: iconst_1
     372: goto          376
     375: iconst_0
     376: istore_2
     377: iload_2
     378: ifeq          400
     381: aload_0
     382: aload_0
     383: getfield      #18                 // Field minimumExponentDigits:I
     386: aload_1
     387: getfield      #18                 // Field minimumExponentDigits:I
     390: invokespecial #46                 // Method _equalsHelper:(II)Z
     393: ifeq          400
     396: iconst_1
     397: goto          401
     400: iconst_0
     401: istore_2
     402: iload_2
     403: ifeq          425
     406: aload_0
     407: aload_0
     408: getfield      #19                 // Field minimumFractionDigits:I
     411: aload_1
     412: getfield      #19                 // Field minimumFractionDigits:I
     415: invokespecial #46                 // Method _equalsHelper:(II)Z
     418: ifeq          425
     421: iconst_1
     422: goto          426
     425: iconst_0
     426: istore_2
     427: iload_2
     428: ifeq          450
     431: aload_0
     432: aload_0
     433: getfield      #20                 // Field minimumGroupingDigits:I
     436: aload_1
     437: getfield      #20                 // Field minimumGroupingDigits:I
     440: invokespecial #46                 // Method _equalsHelper:(II)Z
     443: ifeq          450
     446: iconst_1
     447: goto          451
     450: iconst_0
     451: istore_2
     452: iload_2
     453: ifeq          475
     456: aload_0
     457: aload_0
     458: getfield      #21                 // Field minimumIntegerDigits:I
     461: aload_1
     462: getfield      #21                 // Field minimumIntegerDigits:I
     465: invokespecial #46                 // Method _equalsHelper:(II)Z
     468: ifeq          475
     471: iconst_1
     472: goto          476
     475: iconst_0
     476: istore_2
     477: iload_2
     478: ifeq          500
     481: aload_0
     482: aload_0
     483: getfield      #22                 // Field minimumSignificantDigits:I
     486: aload_1
     487: getfield      #22                 // Field minimumSignificantDigits:I
     490: invokespecial #46                 // Method _equalsHelper:(II)Z
     493: ifeq          500
     496: iconst_1
     497: goto          501
     500: iconst_0
     501: istore_2
     502: iload_2
     503: ifeq          525
     506: aload_0
     507: aload_0
     508: getfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
     511: aload_1
     512: getfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
     515: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     518: ifeq          525
     521: iconst_1
     522: goto          526
     525: iconst_0
     526: istore_2
     527: iload_2
     528: ifeq          550
     531: aload_0
     532: aload_0
     533: getfield      #24                 // Field negativePrefix:Ljava/lang/String;
     536: aload_1
     537: getfield      #24                 // Field negativePrefix:Ljava/lang/String;
     540: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     543: ifeq          550
     546: iconst_1
     547: goto          551
     550: iconst_0
     551: istore_2
     552: iload_2
     553: ifeq          575
     556: aload_0
     557: aload_0
     558: getfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
     561: aload_1
     562: getfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
     565: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     568: ifeq          575
     571: iconst_1
     572: goto          576
     575: iconst_0
     576: istore_2
     577: iload_2
     578: ifeq          600
     581: aload_0
     582: aload_0
     583: getfield      #26                 // Field negativeSuffix:Ljava/lang/String;
     586: aload_1
     587: getfield      #26                 // Field negativeSuffix:Ljava/lang/String;
     590: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     593: ifeq          600
     596: iconst_1
     597: goto          601
     600: iconst_0
     601: istore_2
     602: iload_2
     603: ifeq          625
     606: aload_0
     607: aload_0
     608: getfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
     611: aload_1
     612: getfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
     615: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     618: ifeq          625
     621: iconst_1
     622: goto          626
     625: iconst_0
     626: istore_2
     627: iload_2
     628: ifeq          650
     631: aload_0
     632: aload_0
     633: getfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
     636: aload_1
     637: getfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
     640: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     643: ifeq          650
     646: iconst_1
     647: goto          651
     650: iconst_0
     651: istore_2
     652: iload_2
     653: ifeq          675
     656: aload_0
     657: aload_0
     658: getfield      #29                 // Field padString:Ljava/lang/String;
     661: aload_1
     662: getfield      #29                 // Field padString:Ljava/lang/String;
     665: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     668: ifeq          675
     671: iconst_1
     672: goto          676
     675: iconst_0
     676: istore_2
     677: iload_2
     678: ifeq          700
     681: aload_0
     682: aload_0
     683: getfield      #30                 // Field parseCaseSensitive:Z
     686: aload_1
     687: getfield      #30                 // Field parseCaseSensitive:Z
     690: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
     693: ifeq          700
     696: iconst_1
     697: goto          701
     700: iconst_0
     701: istore_2
     702: iload_2
     703: ifeq          725
     706: aload_0
     707: aload_0
     708: getfield      #31                 // Field parseIntegerOnly:Z
     711: aload_1
     712: getfield      #31                 // Field parseIntegerOnly:Z
     715: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
     718: ifeq          725
     721: iconst_1
     722: goto          726
     725: iconst_0
     726: istore_2
     727: iload_2
     728: ifeq          750
     731: aload_0
     732: aload_0
     733: getfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
     736: aload_1
     737: getfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
     740: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     743: ifeq          750
     746: iconst_1
     747: goto          751
     750: iconst_0
     751: istore_2
     752: iload_2
     753: ifeq          775
     756: aload_0
     757: aload_0
     758: getfield      #33                 // Field parseNoExponent:Z
     761: aload_1
     762: getfield      #33                 // Field parseNoExponent:Z
     765: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
     768: ifeq          775
     771: iconst_1
     772: goto          776
     775: iconst_0
     776: istore_2
     777: iload_2
     778: ifeq          800
     781: aload_0
     782: aload_0
     783: getfield      #34                 // Field parseToBigDecimal:Z
     786: aload_1
     787: getfield      #34                 // Field parseToBigDecimal:Z
     790: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
     793: ifeq          800
     796: iconst_1
     797: goto          801
     800: iconst_0
     801: istore_2
     802: iload_2
     803: ifeq          825
     806: aload_0
     807: aload_0
     808: getfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
     811: aload_1
     812: getfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
     815: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     818: ifeq          825
     821: iconst_1
     822: goto          826
     825: iconst_0
     826: istore_2
     827: iload_2
     828: ifeq          850
     831: aload_0
     832: aload_0
     833: getfield      #36                 // Field positivePrefix:Ljava/lang/String;
     836: aload_1
     837: getfield      #36                 // Field positivePrefix:Ljava/lang/String;
     840: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     843: ifeq          850
     846: iconst_1
     847: goto          851
     850: iconst_0
     851: istore_2
     852: iload_2
     853: ifeq          875
     856: aload_0
     857: aload_0
     858: getfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
     861: aload_1
     862: getfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
     865: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     868: ifeq          875
     871: iconst_1
     872: goto          876
     875: iconst_0
     876: istore_2
     877: iload_2
     878: ifeq          900
     881: aload_0
     882: aload_0
     883: getfield      #38                 // Field positiveSuffix:Ljava/lang/String;
     886: aload_1
     887: getfield      #38                 // Field positiveSuffix:Ljava/lang/String;
     890: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     893: ifeq          900
     896: iconst_1
     897: goto          901
     900: iconst_0
     901: istore_2
     902: iload_2
     903: ifeq          925
     906: aload_0
     907: aload_0
     908: getfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
     911: aload_1
     912: getfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
     915: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     918: ifeq          925
     921: iconst_1
     922: goto          926
     925: iconst_0
     926: istore_2
     927: iload_2
     928: ifeq          950
     931: aload_0
     932: aload_0
     933: getfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
     936: aload_1
     937: getfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
     940: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     943: ifeq          950
     946: iconst_1
     947: goto          951
     950: iconst_0
     951: istore_2
     952: iload_2
     953: ifeq          975
     956: aload_0
     957: aload_0
     958: getfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
     961: aload_1
     962: getfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
     965: invokespecial #44                 // Method _equalsHelper:(Ljava/lang/Object;Ljava/lang/Object;)Z
     968: ifeq          975
     971: iconst_1
     972: goto          976
     975: iconst_0
     976: istore_2
     977: iload_2
     978: ifeq          1000
     981: aload_0
     982: aload_0
     983: getfield      #42                 // Field secondaryGroupingSize:I
     986: aload_1
     987: getfield      #42                 // Field secondaryGroupingSize:I
     990: invokespecial #46                 // Method _equalsHelper:(II)Z
     993: ifeq          1000
     996: iconst_1
     997: goto          1001
    1000: iconst_0
    1001: istore_2
    1002: iload_2
    1003: ifeq          1025
    1006: aload_0
    1007: aload_0
    1008: getfield      #43                 // Field signAlwaysShown:Z
    1011: aload_1
    1012: getfield      #43                 // Field signAlwaysShown:Z
    1015: invokespecial #45                 // Method _equalsHelper:(ZZ)Z
    1018: ifeq          1025
    1021: iconst_1
    1022: goto          1026
    1025: iconst_0
    1026: istore_2
    1027: iload_2
    1028: ireturn

  private boolean _equalsHelper(boolean, boolean);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  private boolean _equalsHelper(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpne     9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: ireturn

  private boolean _equalsHelper(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: aload_2
      15: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      18: ireturn

  private int _hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: aload_0
       5: getfield      #3                  // Field compactCustomData:Ljava/util/Map;
       8: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
      11: ixor
      12: istore_1
      13: iload_1
      14: aload_0
      15: aload_0
      16: getfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      19: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
      22: ixor
      23: istore_1
      24: iload_1
      25: aload_0
      26: aload_0
      27: getfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
      30: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
      33: ixor
      34: istore_1
      35: iload_1
      36: aload_0
      37: aload_0
      38: getfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
      41: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
      44: ixor
      45: istore_1
      46: iload_1
      47: aload_0
      48: aload_0
      49: getfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
      52: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
      55: ixor
      56: istore_1
      57: iload_1
      58: aload_0
      59: aload_0
      60: getfield      #8                  // Field decimalPatternMatchRequired:Z
      63: invokespecial #49                 // Method _hashCodeHelper:(Z)I
      66: ixor
      67: istore_1
      68: iload_1
      69: aload_0
      70: aload_0
      71: getfield      #9                  // Field decimalSeparatorAlwaysShown:Z
      74: invokespecial #49                 // Method _hashCodeHelper:(Z)I
      77: ixor
      78: istore_1
      79: iload_1
      80: aload_0
      81: aload_0
      82: getfield      #10                 // Field exponentSignAlwaysShown:Z
      85: invokespecial #49                 // Method _hashCodeHelper:(Z)I
      88: ixor
      89: istore_1
      90: iload_1
      91: aload_0
      92: aload_0
      93: getfield      #11                 // Field formatWidth:I
      96: invokespecial #50                 // Method _hashCodeHelper:(I)I
      99: ixor
     100: istore_1
     101: iload_1
     102: aload_0
     103: aload_0
     104: getfield      #12                 // Field groupingSize:I
     107: invokespecial #50                 // Method _hashCodeHelper:(I)I
     110: ixor
     111: istore_1
     112: iload_1
     113: aload_0
     114: aload_0
     115: getfield      #13                 // Field magnitudeMultiplier:I
     118: invokespecial #50                 // Method _hashCodeHelper:(I)I
     121: ixor
     122: istore_1
     123: iload_1
     124: aload_0
     125: aload_0
     126: getfield      #14                 // Field mathContext:Ljava/math/MathContext;
     129: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     132: ixor
     133: istore_1
     134: iload_1
     135: aload_0
     136: aload_0
     137: getfield      #15                 // Field maximumFractionDigits:I
     140: invokespecial #50                 // Method _hashCodeHelper:(I)I
     143: ixor
     144: istore_1
     145: iload_1
     146: aload_0
     147: aload_0
     148: getfield      #16                 // Field maximumIntegerDigits:I
     151: invokespecial #50                 // Method _hashCodeHelper:(I)I
     154: ixor
     155: istore_1
     156: iload_1
     157: aload_0
     158: aload_0
     159: getfield      #17                 // Field maximumSignificantDigits:I
     162: invokespecial #50                 // Method _hashCodeHelper:(I)I
     165: ixor
     166: istore_1
     167: iload_1
     168: aload_0
     169: aload_0
     170: getfield      #18                 // Field minimumExponentDigits:I
     173: invokespecial #50                 // Method _hashCodeHelper:(I)I
     176: ixor
     177: istore_1
     178: iload_1
     179: aload_0
     180: aload_0
     181: getfield      #19                 // Field minimumFractionDigits:I
     184: invokespecial #50                 // Method _hashCodeHelper:(I)I
     187: ixor
     188: istore_1
     189: iload_1
     190: aload_0
     191: aload_0
     192: getfield      #20                 // Field minimumGroupingDigits:I
     195: invokespecial #50                 // Method _hashCodeHelper:(I)I
     198: ixor
     199: istore_1
     200: iload_1
     201: aload_0
     202: aload_0
     203: getfield      #21                 // Field minimumIntegerDigits:I
     206: invokespecial #50                 // Method _hashCodeHelper:(I)I
     209: ixor
     210: istore_1
     211: iload_1
     212: aload_0
     213: aload_0
     214: getfield      #22                 // Field minimumSignificantDigits:I
     217: invokespecial #50                 // Method _hashCodeHelper:(I)I
     220: ixor
     221: istore_1
     222: iload_1
     223: aload_0
     224: aload_0
     225: getfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
     228: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     231: ixor
     232: istore_1
     233: iload_1
     234: aload_0
     235: aload_0
     236: getfield      #24                 // Field negativePrefix:Ljava/lang/String;
     239: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     242: ixor
     243: istore_1
     244: iload_1
     245: aload_0
     246: aload_0
     247: getfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
     250: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     253: ixor
     254: istore_1
     255: iload_1
     256: aload_0
     257: aload_0
     258: getfield      #26                 // Field negativeSuffix:Ljava/lang/String;
     261: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     264: ixor
     265: istore_1
     266: iload_1
     267: aload_0
     268: aload_0
     269: getfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
     272: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     275: ixor
     276: istore_1
     277: iload_1
     278: aload_0
     279: aload_0
     280: getfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
     283: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     286: ixor
     287: istore_1
     288: iload_1
     289: aload_0
     290: aload_0
     291: getfield      #29                 // Field padString:Ljava/lang/String;
     294: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     297: ixor
     298: istore_1
     299: iload_1
     300: aload_0
     301: aload_0
     302: getfield      #30                 // Field parseCaseSensitive:Z
     305: invokespecial #49                 // Method _hashCodeHelper:(Z)I
     308: ixor
     309: istore_1
     310: iload_1
     311: aload_0
     312: aload_0
     313: getfield      #31                 // Field parseIntegerOnly:Z
     316: invokespecial #49                 // Method _hashCodeHelper:(Z)I
     319: ixor
     320: istore_1
     321: iload_1
     322: aload_0
     323: aload_0
     324: getfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
     327: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     330: ixor
     331: istore_1
     332: iload_1
     333: aload_0
     334: aload_0
     335: getfield      #33                 // Field parseNoExponent:Z
     338: invokespecial #49                 // Method _hashCodeHelper:(Z)I
     341: ixor
     342: istore_1
     343: iload_1
     344: aload_0
     345: aload_0
     346: getfield      #34                 // Field parseToBigDecimal:Z
     349: invokespecial #49                 // Method _hashCodeHelper:(Z)I
     352: ixor
     353: istore_1
     354: iload_1
     355: aload_0
     356: aload_0
     357: getfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
     360: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     363: ixor
     364: istore_1
     365: iload_1
     366: aload_0
     367: aload_0
     368: getfield      #36                 // Field positivePrefix:Ljava/lang/String;
     371: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     374: ixor
     375: istore_1
     376: iload_1
     377: aload_0
     378: aload_0
     379: getfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
     382: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     385: ixor
     386: istore_1
     387: iload_1
     388: aload_0
     389: aload_0
     390: getfield      #38                 // Field positiveSuffix:Ljava/lang/String;
     393: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     396: ixor
     397: istore_1
     398: iload_1
     399: aload_0
     400: aload_0
     401: getfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
     404: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     407: ixor
     408: istore_1
     409: iload_1
     410: aload_0
     411: aload_0
     412: getfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
     415: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     418: ixor
     419: istore_1
     420: iload_1
     421: aload_0
     422: aload_0
     423: getfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
     426: invokespecial #48                 // Method _hashCodeHelper:(Ljava/lang/Object;)I
     429: ixor
     430: istore_1
     431: iload_1
     432: aload_0
     433: aload_0
     434: getfield      #42                 // Field secondaryGroupingSize:I
     437: invokespecial #50                 // Method _hashCodeHelper:(I)I
     440: ixor
     441: istore_1
     442: iload_1
     443: aload_0
     444: aload_0
     445: getfield      #43                 // Field signAlwaysShown:Z
     448: invokespecial #49                 // Method _hashCodeHelper:(Z)I
     451: ixor
     452: istore_1
     453: iload_1
     454: ireturn

  private int _hashCodeHelper(boolean);
    Code:
       0: iload_1
       1: ifeq          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  private int _hashCodeHelper(int);
    Code:
       0: iload_1
       1: bipush        13
       3: imul
       4: ireturn

  private int _hashCodeHelper(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokevirtual #51                 // Method java/lang/Object.hashCode:()I
      10: ireturn

  public com.ibm.icu.impl.number.DecimalFormatProperties clear();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method _clear:()Lcom/ibm/icu/impl/number/DecimalFormatProperties;
       4: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties clone();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #54                 // class com/ibm/icu/impl/number/DecimalFormatProperties
       7: areturn
       8: astore_1
       9: new           #56                 // class java/lang/UnsupportedOperationException
      12: dup
      13: aload_1
      14: invokespecial #57                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public com.ibm.icu.impl.number.DecimalFormatProperties copyFrom(com.ibm.icu.impl.number.DecimalFormatProperties);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #58                 // Method _copyFrom:(Lcom/ibm/icu/impl/number/DecimalFormatProperties;)Lcom/ibm/icu/impl/number/DecimalFormatProperties;
       5: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: instanceof    #54                 // class com/ibm/icu/impl/number/DecimalFormatProperties
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: aload_1
      24: checkcast     #54                 // class com/ibm/icu/impl/number/DecimalFormatProperties
      27: invokespecial #59                 // Method _equals:(Lcom/ibm/icu/impl/number/DecimalFormatProperties;)Z
      30: ireturn

  public java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>> getCompactCustomData();
    Code:
       0: aload_0
       1: getfield      #3                  // Field compactCustomData:Ljava/util/Map;
       4: areturn

  public com.ibm.icu.text.CompactDecimalFormat$CompactStyle getCompactStyle();
    Code:
       0: aload_0
       1: getfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
       4: areturn

  public com.ibm.icu.util.Currency getCurrency();
    Code:
       0: aload_0
       1: getfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
       4: areturn

  public com.ibm.icu.text.CurrencyPluralInfo getCurrencyPluralInfo();
    Code:
       0: aload_0
       1: getfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
       4: areturn

  public com.ibm.icu.util.Currency$CurrencyUsage getCurrencyUsage();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
       4: areturn

  public boolean getDecimalPatternMatchRequired();
    Code:
       0: aload_0
       1: getfield      #8                  // Field decimalPatternMatchRequired:Z
       4: ireturn

  public boolean getDecimalSeparatorAlwaysShown();
    Code:
       0: aload_0
       1: getfield      #9                  // Field decimalSeparatorAlwaysShown:Z
       4: ireturn

  public boolean getExponentSignAlwaysShown();
    Code:
       0: aload_0
       1: getfield      #10                 // Field exponentSignAlwaysShown:Z
       4: ireturn

  public int getFormatWidth();
    Code:
       0: aload_0
       1: getfield      #11                 // Field formatWidth:I
       4: ireturn

  public int getGroupingSize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field groupingSize:I
       4: ireturn

  public int getMagnitudeMultiplier();
    Code:
       0: aload_0
       1: getfield      #13                 // Field magnitudeMultiplier:I
       4: ireturn

  public java.math.MathContext getMathContext();
    Code:
       0: aload_0
       1: getfield      #14                 // Field mathContext:Ljava/math/MathContext;
       4: areturn

  public int getMaximumFractionDigits();
    Code:
       0: aload_0
       1: getfield      #15                 // Field maximumFractionDigits:I
       4: ireturn

  public int getMaximumIntegerDigits();
    Code:
       0: aload_0
       1: getfield      #16                 // Field maximumIntegerDigits:I
       4: ireturn

  public int getMaximumSignificantDigits();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maximumSignificantDigits:I
       4: ireturn

  public int getMinimumExponentDigits();
    Code:
       0: aload_0
       1: getfield      #18                 // Field minimumExponentDigits:I
       4: ireturn

  public int getMinimumFractionDigits();
    Code:
       0: aload_0
       1: getfield      #19                 // Field minimumFractionDigits:I
       4: ireturn

  public int getMinimumGroupingDigits();
    Code:
       0: aload_0
       1: getfield      #20                 // Field minimumGroupingDigits:I
       4: ireturn

  public int getMinimumIntegerDigits();
    Code:
       0: aload_0
       1: getfield      #21                 // Field minimumIntegerDigits:I
       4: ireturn

  public int getMinimumSignificantDigits();
    Code:
       0: aload_0
       1: getfield      #22                 // Field minimumSignificantDigits:I
       4: ireturn

  public java.math.BigDecimal getMultiplier();
    Code:
       0: aload_0
       1: getfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
       4: areturn

  public java.lang.String getNegativePrefix();
    Code:
       0: aload_0
       1: getfield      #24                 // Field negativePrefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getNegativePrefixPattern();
    Code:
       0: aload_0
       1: getfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
       4: areturn

  public java.lang.String getNegativeSuffix();
    Code:
       0: aload_0
       1: getfield      #26                 // Field negativeSuffix:Ljava/lang/String;
       4: areturn

  public java.lang.String getNegativeSuffixPattern();
    Code:
       0: aload_0
       1: getfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
       4: areturn

  public com.ibm.icu.impl.number.Padder$PadPosition getPadPosition();
    Code:
       0: aload_0
       1: getfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
       4: areturn

  public java.lang.String getPadString();
    Code:
       0: aload_0
       1: getfield      #29                 // Field padString:Ljava/lang/String;
       4: areturn

  public boolean getParseCaseSensitive();
    Code:
       0: aload_0
       1: getfield      #30                 // Field parseCaseSensitive:Z
       4: ireturn

  public boolean getParseIntegerOnly();
    Code:
       0: aload_0
       1: getfield      #31                 // Field parseIntegerOnly:Z
       4: ireturn

  public com.ibm.icu.impl.number.parse.NumberParserImpl$ParseMode getParseMode();
    Code:
       0: aload_0
       1: getfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
       4: areturn

  public boolean getParseNoExponent();
    Code:
       0: aload_0
       1: getfield      #33                 // Field parseNoExponent:Z
       4: ireturn

  public boolean getParseToBigDecimal();
    Code:
       0: aload_0
       1: getfield      #34                 // Field parseToBigDecimal:Z
       4: ireturn

  public com.ibm.icu.text.PluralRules getPluralRules();
    Code:
       0: aload_0
       1: getfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
       4: areturn

  public java.lang.String getPositivePrefix();
    Code:
       0: aload_0
       1: getfield      #36                 // Field positivePrefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getPositivePrefixPattern();
    Code:
       0: aload_0
       1: getfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
       4: areturn

  public java.lang.String getPositiveSuffix();
    Code:
       0: aload_0
       1: getfield      #38                 // Field positiveSuffix:Ljava/lang/String;
       4: areturn

  public java.lang.String getPositiveSuffixPattern();
    Code:
       0: aload_0
       1: getfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
       4: areturn

  public java.math.BigDecimal getRoundingIncrement();
    Code:
       0: aload_0
       1: getfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
       4: areturn

  public java.math.RoundingMode getRoundingMode();
    Code:
       0: aload_0
       1: getfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
       4: areturn

  public int getSecondaryGroupingSize();
    Code:
       0: aload_0
       1: getfield      #42                 // Field secondaryGroupingSize:I
       4: ireturn

  public boolean getSignAlwaysShown();
    Code:
       0: aload_0
       1: getfield      #43                 // Field signAlwaysShown:Z
       4: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #60                 // Method _hashCode:()I
       4: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method readObjectImpl:(Ljava/io/ObjectInputStream;)V
       5: return

  void readObjectImpl(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: invokevirtual #2                  // Method clear:()Lcom/ibm/icu/impl/number/DecimalFormatProperties;
       8: pop
       9: aload_1
      10: invokevirtual #63                 // Method java/io/ObjectInputStream.readInt:()I
      13: pop
      14: aload_1
      15: invokevirtual #63                 // Method java/io/ObjectInputStream.readInt:()I
      18: istore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: iload_2
      23: if_icmpge     114
      26: aload_1
      27: invokevirtual #64                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      30: checkcast     #65                 // class java/lang/String
      33: astore        4
      35: aload_1
      36: invokevirtual #64                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      39: astore        5
      41: aconst_null
      42: astore        6
      44: ldc           #54                 // class com/ibm/icu/impl/number/DecimalFormatProperties
      46: aload         4
      48: invokevirtual #66                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      51: astore        6
      53: goto          73
      56: astore        7
      58: goto          108
      61: astore        7
      63: new           #69                 // class java/lang/AssertionError
      66: dup
      67: aload         7
      69: invokespecial #70                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      72: athrow
      73: aload         6
      75: aload_0
      76: aload         5
      78: invokevirtual #71                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      81: goto          108
      84: astore        7
      86: new           #69                 // class java/lang/AssertionError
      89: dup
      90: aload         7
      92: invokespecial #70                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      95: athrow
      96: astore        7
      98: new           #69                 // class java/lang/AssertionError
     101: dup
     102: aload         7
     104: invokespecial #70                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     107: athrow
     108: iinc          3, 1
     111: goto          21
     114: return
    Exception table:
       from    to  target type
          44    53    56   Class java/lang/NoSuchFieldException
          44    53    61   Class java/lang/SecurityException
          73    81    84   Class java/lang/IllegalArgumentException
          73    81    96   Class java/lang/IllegalAccessException

  public com.ibm.icu.impl.number.DecimalFormatProperties setCompactCustomData(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field compactCustomData:Ljava/util/Map;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setCompactStyle(com.ibm.icu.text.CompactDecimalFormat$CompactStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setCurrency(com.ibm.icu.util.Currency);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field currency:Lcom/ibm/icu/util/Currency;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setCurrencyPluralInfo(com.ibm.icu.text.CurrencyPluralInfo);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: invokevirtual #74                 // Method com/ibm/icu/text/CurrencyPluralInfo.clone:()Ljava/lang/Object;
       8: checkcast     #75                 // class com/ibm/icu/text/CurrencyPluralInfo
      11: astore_1
      12: aload_0
      13: aload_1
      14: putfield      #6                  // Field currencyPluralInfo:Lcom/ibm/icu/text/CurrencyPluralInfo;
      17: aload_0
      18: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setCurrencyUsage(com.ibm.icu.util.Currency$CurrencyUsage);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field currencyUsage:Lcom/ibm/icu/util/Currency$CurrencyUsage;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setDecimalPatternMatchRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field decimalPatternMatchRequired:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setDecimalSeparatorAlwaysShown(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field decimalSeparatorAlwaysShown:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setExponentSignAlwaysShown(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field exponentSignAlwaysShown:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setFormatWidth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field formatWidth:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setGroupingSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field groupingSize:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMagnitudeMultiplier(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field magnitudeMultiplier:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMathContext(java.math.MathContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field mathContext:Ljava/math/MathContext;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMaximumFractionDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field maximumFractionDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMaximumIntegerDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field maximumIntegerDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMaximumSignificantDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field maximumSignificantDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMinimumExponentDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field minimumExponentDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMinimumFractionDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field minimumFractionDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMinimumGroupingDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field minimumGroupingDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMinimumIntegerDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field minimumIntegerDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMinimumSignificantDigits(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field minimumSignificantDigits:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setMultiplier(java.math.BigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field multiplier:Ljava/math/BigDecimal;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setNegativePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field negativePrefix:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setNegativePrefixPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field negativePrefixPattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setNegativeSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field negativeSuffix:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setNegativeSuffixPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field negativeSuffixPattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setPadPosition(com.ibm.icu.impl.number.Padder$PadPosition);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field padPosition:Lcom/ibm/icu/impl/number/Padder$PadPosition;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setPadString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field padString:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setParseCaseSensitive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field parseCaseSensitive:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setParseIntegerOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field parseIntegerOnly:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setParseMode(com.ibm.icu.impl.number.parse.NumberParserImpl$ParseMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field parseMode:Lcom/ibm/icu/impl/number/parse/NumberParserImpl$ParseMode;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setParseNoExponent(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #33                 // Field parseNoExponent:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setParseToBigDecimal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #34                 // Field parseToBigDecimal:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setPluralRules(com.ibm.icu.text.PluralRules);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field pluralRules:Lcom/ibm/icu/text/PluralRules;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setPositivePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field positivePrefix:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setPositivePrefixPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field positivePrefixPattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setPositiveSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field positiveSuffix:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setPositiveSuffixPattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field positiveSuffixPattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setRoundingIncrement(java.math.BigDecimal);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field roundingIncrement:Ljava/math/BigDecimal;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setRoundingMode(java.math.RoundingMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field roundingMode:Ljava/math/RoundingMode;
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setSecondaryGroupingSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field secondaryGroupingSize:I
       5: aload_0
       6: areturn

  public com.ibm.icu.impl.number.DecimalFormatProperties setSignAlwaysShown(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field signAlwaysShown:Z
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #76                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #78                 // String <Properties
      11: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: aload_1
      17: invokevirtual #80                 // Method toStringBare:(Ljava/lang/StringBuilder;)V
      20: aload_1
      21: ldc           #81                 // String >
      23: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  public void toStringBare(java.lang.StringBuilder);
    Code:
       0: ldc           #54                 // class com/ibm/icu/impl/number/DecimalFormatProperties
       2: invokevirtual #83                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
       5: astore_2
       6: aload_2
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     187
      22: aload_3
      23: iload         5
      25: aaload
      26: astore        6
      28: aload         6
      30: aload_0
      31: invokevirtual #84                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      34: astore        7
      36: aload         6
      38: getstatic     #85                 // Field DEFAULT:Lcom/ibm/icu/impl/number/DecimalFormatProperties;
      41: invokevirtual #84                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: astore        8
      46: goto          69
      49: astore        9
      51: aload         9
      53: invokevirtual #86                 // Method java/lang/IllegalArgumentException.printStackTrace:()V
      56: goto          181
      59: astore        9
      61: aload         9
      63: invokevirtual #87                 // Method java/lang/IllegalAccessException.printStackTrace:()V
      66: goto          181
      69: aload         7
      71: ifnonnull     82
      74: aload         8
      76: ifnonnull     82
      79: goto          181
      82: aload         7
      84: ifnull        92
      87: aload         8
      89: ifnonnull     133
      92: aload_1
      93: new           #76                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #88                 // String
     102: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload         6
     107: invokevirtual #89                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     110: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #90                 // String :
     115: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload         7
     120: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     123: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: pop
     130: goto          181
     133: aload         7
     135: aload         8
     137: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     140: ifne          181
     143: aload_1
     144: new           #76                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #88                 // String
     153: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload         6
     158: invokevirtual #89                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     161: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: ldc           #90                 // String :
     166: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload         7
     171: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: pop
     181: iinc          5, 1
     184: goto          15
     187: return
    Exception table:
       from    to  target type
          28    46    49   Class java/lang/IllegalArgumentException
          28    46    59   Class java/lang/IllegalAccessException

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #92                 // Method writeObjectImpl:(Ljava/io/ObjectOutputStream;)V
       5: return

  void writeObjectImpl(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #93                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: iconst_0
       6: invokevirtual #94                 // Method java/io/ObjectOutputStream.writeInt:(I)V
       9: new           #95                 // class java/util/ArrayList
      12: dup
      13: invokespecial #96                 // Method java/util/ArrayList."<init>":()V
      16: astore_2
      17: new           #95                 // class java/util/ArrayList
      20: dup
      21: invokespecial #96                 // Method java/util/ArrayList."<init>":()V
      24: astore_3
      25: ldc           #54                 // class com/ibm/icu/impl/number/DecimalFormatProperties
      27: invokevirtual #83                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      30: astore        4
      32: aload         4
      34: astore        5
      36: aload         5
      38: arraylength
      39: istore        6
      41: iconst_0
      42: istore        7
      44: iload         7
      46: iload         6
      48: if_icmpge     155
      51: aload         5
      53: iload         7
      55: aaload
      56: astore        8
      58: aload         8
      60: invokevirtual #97                 // Method java/lang/reflect/Field.getModifiers:()I
      63: invokestatic  #98                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      66: ifeq          72
      69: goto          149
      72: aload         8
      74: aload_0
      75: invokevirtual #84                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      78: astore        9
      80: aload         9
      82: ifnonnull     88
      85: goto          149
      88: aload         8
      90: getstatic     #85                 // Field DEFAULT:Lcom/ibm/icu/impl/number/DecimalFormatProperties;
      93: invokevirtual #84                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      96: astore        10
      98: aload         9
     100: aload         10
     102: invokevirtual #47                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     105: ifne          122
     108: aload_2
     109: aload         8
     111: invokevirtual #99                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     114: pop
     115: aload_3
     116: aload         9
     118: invokevirtual #99                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     121: pop
     122: goto          149
     125: astore        9
     127: new           #69                 // class java/lang/AssertionError
     130: dup
     131: aload         9
     133: invokespecial #70                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     136: athrow
     137: astore        9
     139: new           #69                 // class java/lang/AssertionError
     142: dup
     143: aload         9
     145: invokespecial #70                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     148: athrow
     149: iinc          7, 1
     152: goto          44
     155: aload_2
     156: invokevirtual #100                // Method java/util/ArrayList.size:()I
     159: istore        5
     161: aload_1
     162: iload         5
     164: invokevirtual #94                 // Method java/io/ObjectOutputStream.writeInt:(I)V
     167: iconst_0
     168: istore        6
     170: iload         6
     172: iload         5
     174: if_icmpge     217
     177: aload_2
     178: iload         6
     180: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     183: checkcast     #102                // class java/lang/reflect/Field
     186: astore        7
     188: aload_3
     189: iload         6
     191: invokevirtual #101                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     194: astore        8
     196: aload_1
     197: aload         7
     199: invokevirtual #89                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     202: invokevirtual #103                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
     205: aload_1
     206: aload         8
     208: invokevirtual #103                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
     211: iinc          6, 1
     214: goto          170
     217: return
    Exception table:
       from    to  target type
          72    85   125   Class java/lang/IllegalArgumentException
          88   122   125   Class java/lang/IllegalArgumentException
          72    85   137   Class java/lang/IllegalAccessException
          88   122   137   Class java/lang/IllegalAccessException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #104                // Method clone:()Lcom/ibm/icu/impl/number/DecimalFormatProperties;
       4: areturn

  static {};
    Code:
       0: new           #54                 // class com/ibm/icu/impl/number/DecimalFormatProperties
       3: dup
       4: invokespecial #105                // Method "<init>":()V
       7: putstatic     #85                 // Field DEFAULT:Lcom/ibm/icu/impl/number/DecimalFormatProperties;
      10: return
}
