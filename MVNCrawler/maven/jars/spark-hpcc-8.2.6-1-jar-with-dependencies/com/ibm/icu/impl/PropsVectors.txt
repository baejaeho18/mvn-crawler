Compiled from "PropsVectors.java"
public class com.ibm.icu.impl.PropsVectors {
  private int[] v;

  private int columns;

  private int maxRows;

  private int rows;

  private int prevRow;

  private boolean isCompacted;

  public static final int FIRST_SPECIAL_CP;

  public static final int INITIAL_VALUE_CP;

  public static final int ERROR_VALUE_CP;

  public static final int MAX_CP;

  public static final int INITIAL_ROWS;

  public static final int MEDIUM_ROWS;

  public static final int MAX_ROWS;

  private boolean areElementsSame(int, int[], int, int);
    Code:
       0: iconst_0
       1: istore        5
       3: iload         5
       5: iload         4
       7: if_icmpge     36
      10: aload_0
      11: getfield      #2                  // Field v:[I
      14: iload_1
      15: iload         5
      17: iadd
      18: iaload
      19: aload_2
      20: iload_3
      21: iload         5
      23: iadd
      24: iaload
      25: if_icmpeq     30
      28: iconst_0
      29: ireturn
      30: iinc          5, 1
      33: goto          3
      36: iconst_1
      37: ireturn

  private int findRow(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #4                  // Field prevRow:I
       6: aload_0
       7: getfield      #3                  // Field columns:I
      10: imul
      11: istore_2
      12: iload_1
      13: aload_0
      14: getfield      #2                  // Field v:[I
      17: iload_2
      18: iaload
      19: if_icmplt     154
      22: iload_1
      23: aload_0
      24: getfield      #2                  // Field v:[I
      27: iload_2
      28: iconst_1
      29: iadd
      30: iaload
      31: if_icmpge     36
      34: iload_2
      35: ireturn
      36: iload_2
      37: aload_0
      38: getfield      #3                  // Field columns:I
      41: iadd
      42: istore_2
      43: iload_1
      44: aload_0
      45: getfield      #2                  // Field v:[I
      48: iload_2
      49: iconst_1
      50: iadd
      51: iaload
      52: if_icmpge     67
      55: aload_0
      56: dup
      57: getfield      #4                  // Field prevRow:I
      60: iconst_1
      61: iadd
      62: putfield      #4                  // Field prevRow:I
      65: iload_2
      66: ireturn
      67: iload_2
      68: aload_0
      69: getfield      #3                  // Field columns:I
      72: iadd
      73: istore_2
      74: iload_1
      75: aload_0
      76: getfield      #2                  // Field v:[I
      79: iload_2
      80: iconst_1
      81: iadd
      82: iaload
      83: if_icmpge     98
      86: aload_0
      87: dup
      88: getfield      #4                  // Field prevRow:I
      91: iconst_2
      92: iadd
      93: putfield      #4                  // Field prevRow:I
      96: iload_2
      97: ireturn
      98: iload_1
      99: aload_0
     100: getfield      #2                  // Field v:[I
     103: iload_2
     104: iconst_1
     105: iadd
     106: iaload
     107: isub
     108: bipush        10
     110: if_icmpge     171
     113: aload_0
     114: dup
     115: getfield      #4                  // Field prevRow:I
     118: iconst_2
     119: iadd
     120: putfield      #4                  // Field prevRow:I
     123: aload_0
     124: dup
     125: getfield      #4                  // Field prevRow:I
     128: iconst_1
     129: iadd
     130: putfield      #4                  // Field prevRow:I
     133: iload_2
     134: aload_0
     135: getfield      #3                  // Field columns:I
     138: iadd
     139: istore_2
     140: iload_1
     141: aload_0
     142: getfield      #2                  // Field v:[I
     145: iload_2
     146: iconst_1
     147: iadd
     148: iaload
     149: if_icmpge     123
     152: iload_2
     153: ireturn
     154: iload_1
     155: aload_0
     156: getfield      #2                  // Field v:[I
     159: iconst_1
     160: iaload
     161: if_icmpge     171
     164: aload_0
     165: iconst_0
     166: putfield      #4                  // Field prevRow:I
     169: iconst_0
     170: ireturn
     171: iconst_0
     172: istore_3
     173: iconst_0
     174: istore        4
     176: aload_0
     177: getfield      #5                  // Field rows:I
     180: istore        5
     182: iload_3
     183: iload         5
     185: iconst_1
     186: isub
     187: if_icmpge     249
     190: iload_3
     191: iload         5
     193: iadd
     194: iconst_2
     195: idiv
     196: istore        4
     198: aload_0
     199: getfield      #3                  // Field columns:I
     202: iload         4
     204: imul
     205: istore_2
     206: iload_1
     207: aload_0
     208: getfield      #2                  // Field v:[I
     211: iload_2
     212: iaload
     213: if_icmpge     223
     216: iload         4
     218: istore        5
     220: goto          182
     223: iload_1
     224: aload_0
     225: getfield      #2                  // Field v:[I
     228: iload_2
     229: iconst_1
     230: iadd
     231: iaload
     232: if_icmpge     243
     235: aload_0
     236: iload         4
     238: putfield      #4                  // Field prevRow:I
     241: iload_2
     242: ireturn
     243: iload         4
     245: istore_3
     246: goto          182
     249: aload_0
     250: iload_3
     251: putfield      #4                  // Field prevRow:I
     254: iload_3
     255: aload_0
     256: getfield      #3                  // Field columns:I
     259: imul
     260: istore_2
     261: iload_2
     262: ireturn

  public com.ibm.icu.impl.PropsVectors(int);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iconst_1
       6: if_icmpge     36
       9: new           #7                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #8                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #10                 // String numOfColumns need to be no less than 1; but it is
      22: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: iconst_2
      39: iadd
      40: putfield      #3                  // Field columns:I
      43: aload_0
      44: sipush        4096
      47: aload_0
      48: getfield      #3                  // Field columns:I
      51: imul
      52: newarray       int
      54: putfield      #2                  // Field v:[I
      57: aload_0
      58: sipush        4096
      61: putfield      #15                 // Field maxRows:I
      64: aload_0
      65: iconst_3
      66: putfield      #5                  // Field rows:I
      69: aload_0
      70: iconst_0
      71: putfield      #4                  // Field prevRow:I
      74: aload_0
      75: iconst_0
      76: putfield      #16                 // Field isCompacted:Z
      79: aload_0
      80: getfield      #2                  // Field v:[I
      83: iconst_0
      84: iconst_0
      85: iastore
      86: aload_0
      87: getfield      #2                  // Field v:[I
      90: iconst_1
      91: ldc           #17                 // int 1114112
      93: iastore
      94: aload_0
      95: getfield      #3                  // Field columns:I
      98: istore_2
      99: ldc           #17                 // int 1114112
     101: istore_3
     102: iload_3
     103: ldc           #18                 // int 1114113
     105: if_icmpgt     139
     108: aload_0
     109: getfield      #2                  // Field v:[I
     112: iload_2
     113: iload_3
     114: iastore
     115: aload_0
     116: getfield      #2                  // Field v:[I
     119: iload_2
     120: iconst_1
     121: iadd
     122: iload_3
     123: iconst_1
     124: iadd
     125: iastore
     126: iload_2
     127: aload_0
     128: getfield      #3                  // Field columns:I
     131: iadd
     132: istore_2
     133: iinc          3, 1
     136: goto          102
     139: return

  public void setValue(int, int, int, int, int);
    Code:
       0: iload_1
       1: iflt          29
       4: iload_1
       5: iload_2
       6: if_icmpgt     29
       9: iload_2
      10: ldc           #18                 // int 1114113
      12: if_icmpgt     29
      15: iload_3
      16: iflt          29
      19: iload_3
      20: aload_0
      21: getfield      #3                  // Field columns:I
      24: iconst_2
      25: isub
      26: if_icmplt     37
      29: new           #7                  // class java/lang/IllegalArgumentException
      32: dup
      33: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":()V
      36: athrow
      37: aload_0
      38: getfield      #16                 // Field isCompacted:Z
      41: ifeq          54
      44: new           #20                 // class java/lang/IllegalStateException
      47: dup
      48: ldc           #21                 // String Shouldn\'t be called aftercompact()!
      50: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: iload_2
      55: iconst_1
      56: iadd
      57: istore        8
      59: iinc          3, 2
      62: iload         4
      64: iload         5
      66: iand
      67: istore        4
      69: aload_0
      70: iload_1
      71: invokespecial #23                 // Method findRow:(I)I
      74: istore        6
      76: aload_0
      77: iload_2
      78: invokespecial #23                 // Method findRow:(I)I
      81: istore        7
      83: iload_1
      84: aload_0
      85: getfield      #2                  // Field v:[I
      88: iload         6
      90: iaload
      91: if_icmpeq     115
      94: iload         4
      96: aload_0
      97: getfield      #2                  // Field v:[I
     100: iload         6
     102: iload_3
     103: iadd
     104: iaload
     105: iload         5
     107: iand
     108: if_icmpeq     115
     111: iconst_1
     112: goto          116
     115: iconst_0
     116: istore        9
     118: iload         8
     120: aload_0
     121: getfield      #2                  // Field v:[I
     124: iload         7
     126: iconst_1
     127: iadd
     128: iaload
     129: if_icmpeq     153
     132: iload         4
     134: aload_0
     135: getfield      #2                  // Field v:[I
     138: iload         7
     140: iload_3
     141: iadd
     142: iaload
     143: iload         5
     145: iand
     146: if_icmpeq     153
     149: iconst_1
     150: goto          154
     153: iconst_0
     154: istore        10
     156: iload         9
     158: ifne          166
     161: iload         10
     163: ifeq          487
     166: iconst_0
     167: istore        11
     169: iload         9
     171: ifeq          177
     174: iinc          11, 1
     177: iload         10
     179: ifeq          185
     182: iinc          11, 1
     185: iconst_0
     186: istore        12
     188: aload_0
     189: getfield      #5                  // Field rows:I
     192: iload         11
     194: iadd
     195: aload_0
     196: getfield      #15                 // Field maxRows:I
     199: if_icmple     287
     202: aload_0
     203: getfield      #15                 // Field maxRows:I
     206: ldc           #24                 // int 65536
     208: if_icmpge     218
     211: ldc           #24                 // int 65536
     213: istore        12
     215: goto          244
     218: aload_0
     219: getfield      #15                 // Field maxRows:I
     222: ldc           #25                 // int 1114114
     224: if_icmpge     234
     227: ldc           #25                 // int 1114114
     229: istore        12
     231: goto          244
     234: new           #26                 // class java/lang/IndexOutOfBoundsException
     237: dup
     238: ldc           #27                 // String MAX_ROWS exceeded! Increase it to a higher valuein the implementation
     240: invokespecial #28                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     243: athrow
     244: iload         12
     246: aload_0
     247: getfield      #3                  // Field columns:I
     250: imul
     251: newarray       int
     253: astore        13
     255: aload_0
     256: getfield      #2                  // Field v:[I
     259: iconst_0
     260: aload         13
     262: iconst_0
     263: aload_0
     264: getfield      #5                  // Field rows:I
     267: aload_0
     268: getfield      #3                  // Field columns:I
     271: imul
     272: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     275: aload_0
     276: aload         13
     278: putfield      #2                  // Field v:[I
     281: aload_0
     282: iload         12
     284: putfield      #15                 // Field maxRows:I
     287: aload_0
     288: getfield      #5                  // Field rows:I
     291: aload_0
     292: getfield      #3                  // Field columns:I
     295: imul
     296: iload         7
     298: aload_0
     299: getfield      #3                  // Field columns:I
     302: iadd
     303: isub
     304: istore        13
     306: iload         13
     308: ifle          343
     311: aload_0
     312: getfield      #2                  // Field v:[I
     315: iload         7
     317: aload_0
     318: getfield      #3                  // Field columns:I
     321: iadd
     322: aload_0
     323: getfield      #2                  // Field v:[I
     326: iload         7
     328: iconst_1
     329: iload         11
     331: iadd
     332: aload_0
     333: getfield      #3                  // Field columns:I
     336: imul
     337: iadd
     338: iload         13
     340: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     343: aload_0
     344: dup
     345: getfield      #5                  // Field rows:I
     348: iload         11
     350: iadd
     351: putfield      #5                  // Field rows:I
     354: iload         9
     356: ifeq          434
     359: iload         7
     361: iload         6
     363: isub
     364: aload_0
     365: getfield      #3                  // Field columns:I
     368: iadd
     369: istore        13
     371: aload_0
     372: getfield      #2                  // Field v:[I
     375: iload         6
     377: aload_0
     378: getfield      #2                  // Field v:[I
     381: iload         6
     383: aload_0
     384: getfield      #3                  // Field columns:I
     387: iadd
     388: iload         13
     390: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     393: iload         7
     395: aload_0
     396: getfield      #3                  // Field columns:I
     399: iadd
     400: istore        7
     402: aload_0
     403: getfield      #2                  // Field v:[I
     406: iload         6
     408: iconst_1
     409: iadd
     410: aload_0
     411: getfield      #2                  // Field v:[I
     414: iload         6
     416: aload_0
     417: getfield      #3                  // Field columns:I
     420: iadd
     421: iload_1
     422: dup_x2
     423: iastore
     424: iastore
     425: iload         6
     427: aload_0
     428: getfield      #3                  // Field columns:I
     431: iadd
     432: istore        6
     434: iload         10
     436: ifeq          487
     439: aload_0
     440: getfield      #2                  // Field v:[I
     443: iload         7
     445: aload_0
     446: getfield      #2                  // Field v:[I
     449: iload         7
     451: aload_0
     452: getfield      #3                  // Field columns:I
     455: iadd
     456: aload_0
     457: getfield      #3                  // Field columns:I
     460: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     463: aload_0
     464: getfield      #2                  // Field v:[I
     467: iload         7
     469: iconst_1
     470: iadd
     471: aload_0
     472: getfield      #2                  // Field v:[I
     475: iload         7
     477: aload_0
     478: getfield      #3                  // Field columns:I
     481: iadd
     482: iload         8
     484: dup_x2
     485: iastore
     486: iastore
     487: aload_0
     488: iload         7
     490: aload_0
     491: getfield      #3                  // Field columns:I
     494: idiv
     495: putfield      #4                  // Field prevRow:I
     498: iload         6
     500: iload_3
     501: iadd
     502: istore        6
     504: iload         7
     506: iload_3
     507: iadd
     508: istore        7
     510: iload         5
     512: iconst_m1
     513: ixor
     514: istore        5
     516: aload_0
     517: getfield      #2                  // Field v:[I
     520: iload         6
     522: aload_0
     523: getfield      #2                  // Field v:[I
     526: iload         6
     528: iaload
     529: iload         5
     531: iand
     532: iload         4
     534: ior
     535: iastore
     536: iload         6
     538: iload         7
     540: if_icmpne     546
     543: goto          558
     546: iload         6
     548: aload_0
     549: getfield      #3                  // Field columns:I
     552: iadd
     553: istore        6
     555: goto          516
     558: return

  public int getValue(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifne          31
       7: iload_1
       8: iflt          31
      11: iload_1
      12: ldc           #18                 // int 1114113
      14: if_icmpgt     31
      17: iload_2
      18: iflt          31
      21: iload_2
      22: aload_0
      23: getfield      #3                  // Field columns:I
      26: iconst_2
      27: isub
      28: if_icmplt     33
      31: iconst_0
      32: ireturn
      33: aload_0
      34: iload_1
      35: invokespecial #23                 // Method findRow:(I)I
      38: istore_3
      39: aload_0
      40: getfield      #2                  // Field v:[I
      43: iload_3
      44: iconst_2
      45: iadd
      46: iload_2
      47: iadd
      48: iaload
      49: ireturn

  public int[] getRow(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifeq          17
       7: new           #20                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String Illegal Invocation of the method after compact()
      13: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_1
      18: iflt          29
      21: iload_1
      22: aload_0
      23: getfield      #5                  // Field rows:I
      26: if_icmple     39
      29: new           #7                  // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #31                 // String rowIndex out of bound!
      35: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #3                  // Field columns:I
      43: iconst_2
      44: isub
      45: newarray       int
      47: astore_2
      48: aload_0
      49: getfield      #2                  // Field v:[I
      52: iload_1
      53: aload_0
      54: getfield      #3                  // Field columns:I
      57: imul
      58: iconst_2
      59: iadd
      60: aload_2
      61: iconst_0
      62: aload_0
      63: getfield      #3                  // Field columns:I
      66: iconst_2
      67: isub
      68: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_2
      72: areturn

  public int getRowStart(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifeq          17
       7: new           #20                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String Illegal Invocation of the method after compact()
      13: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_1
      18: iflt          29
      21: iload_1
      22: aload_0
      23: getfield      #5                  // Field rows:I
      26: if_icmple     39
      29: new           #7                  // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #31                 // String rowIndex out of bound!
      35: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #2                  // Field v:[I
      43: iload_1
      44: aload_0
      45: getfield      #3                  // Field columns:I
      48: imul
      49: iaload
      50: ireturn

  public int getRowEnd(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifeq          17
       7: new           #20                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String Illegal Invocation of the method after compact()
      13: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_1
      18: iflt          29
      21: iload_1
      22: aload_0
      23: getfield      #5                  // Field rows:I
      26: if_icmple     39
      29: new           #7                  // class java/lang/IllegalArgumentException
      32: dup
      33: ldc           #31                 // String rowIndex out of bound!
      35: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #2                  // Field v:[I
      43: iload_1
      44: aload_0
      45: getfield      #3                  // Field columns:I
      48: imul
      49: iconst_1
      50: iadd
      51: iaload
      52: iconst_1
      53: isub
      54: ireturn

  public void compact(com.ibm.icu.impl.PropsVectors$CompactHandler);
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #16                 // Field isCompacted:Z
      13: aload_0
      14: getfield      #3                  // Field columns:I
      17: iconst_2
      18: isub
      19: istore_2
      20: aload_0
      21: getfield      #5                  // Field rows:I
      24: anewarray     #32                 // class java/lang/Integer
      27: astore_3
      28: iconst_0
      29: istore        4
      31: iload         4
      33: aload_0
      34: getfield      #5                  // Field rows:I
      37: if_icmpge     60
      40: aload_3
      41: iload         4
      43: aload_0
      44: getfield      #3                  // Field columns:I
      47: iload         4
      49: imul
      50: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: iinc          4, 1
      57: goto          31
      60: aload_3
      61: new           #34                 // class com/ibm/icu/impl/PropsVectors$1
      64: dup
      65: aload_0
      66: invokespecial #35                 // Method com/ibm/icu/impl/PropsVectors$1."<init>":(Lcom/ibm/icu/impl/PropsVectors;)V
      69: invokestatic  #36                 // Method java/util/Arrays.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V
      72: iload_2
      73: ineg
      74: istore        4
      76: iconst_0
      77: istore        5
      79: iload         5
      81: aload_0
      82: getfield      #5                  // Field rows:I
      85: if_icmpge     184
      88: aload_0
      89: getfield      #2                  // Field v:[I
      92: aload_3
      93: iload         5
      95: aaload
      96: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
      99: iaload
     100: istore        6
     102: iload         4
     104: iflt          139
     107: aload_0
     108: aload_3
     109: iload         5
     111: aaload
     112: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
     115: iconst_2
     116: iadd
     117: aload_0
     118: getfield      #2                  // Field v:[I
     121: aload_3
     122: iload         5
     124: iconst_1
     125: isub
     126: aaload
     127: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
     130: iconst_2
     131: iadd
     132: iload_2
     133: invokespecial #38                 // Method areElementsSame:(I[III)Z
     136: ifne          145
     139: iload         4
     141: iload_2
     142: iadd
     143: istore        4
     145: iload         6
     147: ldc           #17                 // int 1114112
     149: if_icmpne     163
     152: aload_1
     153: iload         4
     155: invokeinterface #39,  2           // InterfaceMethod com/ibm/icu/impl/PropsVectors$CompactHandler.setRowIndexForInitialValue:(I)V
     160: goto          178
     163: iload         6
     165: ldc           #18                 // int 1114113
     167: if_icmpne     178
     170: aload_1
     171: iload         4
     173: invokeinterface #40,  2           // InterfaceMethod com/ibm/icu/impl/PropsVectors$CompactHandler.setRowIndexForErrorValue:(I)V
     178: iinc          5, 1
     181: goto          79
     184: iload         4
     186: iload_2
     187: iadd
     188: istore        4
     190: aload_1
     191: iload         4
     193: invokeinterface #41,  2           // InterfaceMethod com/ibm/icu/impl/PropsVectors$CompactHandler.startRealValues:(I)V
     198: iload         4
     200: newarray       int
     202: astore        5
     204: iload_2
     205: ineg
     206: istore        4
     208: iconst_0
     209: istore        6
     211: iload         6
     213: aload_0
     214: getfield      #5                  // Field rows:I
     217: if_icmpge     330
     220: aload_0
     221: getfield      #2                  // Field v:[I
     224: aload_3
     225: iload         6
     227: aaload
     228: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
     231: iaload
     232: istore        7
     234: aload_0
     235: getfield      #2                  // Field v:[I
     238: aload_3
     239: iload         6
     241: aaload
     242: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
     245: iconst_1
     246: iadd
     247: iaload
     248: istore        8
     250: iload         4
     252: iflt          276
     255: aload_0
     256: aload_3
     257: iload         6
     259: aaload
     260: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
     263: iconst_2
     264: iadd
     265: aload         5
     267: iload         4
     269: iload_2
     270: invokespecial #38                 // Method areElementsSame:(I[III)Z
     273: ifne          303
     276: iload         4
     278: iload_2
     279: iadd
     280: istore        4
     282: aload_0
     283: getfield      #2                  // Field v:[I
     286: aload_3
     287: iload         6
     289: aaload
     290: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
     293: iconst_2
     294: iadd
     295: aload         5
     297: iload         4
     299: iload_2
     300: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     303: iload         7
     305: ldc           #17                 // int 1114112
     307: if_icmpge     324
     310: aload_1
     311: iload         7
     313: iload         8
     315: iconst_1
     316: isub
     317: iload         4
     319: invokeinterface #42,  4           // InterfaceMethod com/ibm/icu/impl/PropsVectors$CompactHandler.setRowIndexForRange:(III)V
     324: iinc          6, 1
     327: goto          211
     330: aload_0
     331: aload         5
     333: putfield      #2                  // Field v:[I
     336: aload_0
     337: iload         4
     339: iload_2
     340: idiv
     341: iconst_1
     342: iadd
     343: putfield      #5                  // Field rows:I
     346: return

  public int[] getCompactedArray();
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifne          17
       7: new           #20                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #43                 // String Illegal Invocation of the method before compact()
      13: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field v:[I
      21: areturn

  public int getCompactedRows();
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifne          17
       7: new           #20                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #43                 // String Illegal Invocation of the method before compact()
      13: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #5                  // Field rows:I
      21: ireturn

  public int getCompactedColumns();
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCompacted:Z
       4: ifne          17
       7: new           #20                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #43                 // String Illegal Invocation of the method before compact()
      13: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field columns:I
      21: iconst_2
      22: isub
      23: ireturn

  public com.ibm.icu.impl.IntTrie compactToTrieWithRowIndexes();
    Code:
       0: new           #44                 // class com/ibm/icu/impl/PVecToTrieCompactHandler
       3: dup
       4: invokespecial #45                 // Method com/ibm/icu/impl/PVecToTrieCompactHandler."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #46                 // Method compact:(Lcom/ibm/icu/impl/PropsVectors$CompactHandler;)V
      13: aload_1
      14: getfield      #47                 // Field com/ibm/icu/impl/PVecToTrieCompactHandler.builder:Lcom/ibm/icu/impl/IntTrieBuilder;
      17: new           #48                 // class com/ibm/icu/impl/PropsVectors$DefaultGetFoldedValue
      20: dup
      21: aload_1
      22: getfield      #47                 // Field com/ibm/icu/impl/PVecToTrieCompactHandler.builder:Lcom/ibm/icu/impl/IntTrieBuilder;
      25: invokespecial #49                 // Method com/ibm/icu/impl/PropsVectors$DefaultGetFoldedValue."<init>":(Lcom/ibm/icu/impl/IntTrieBuilder;)V
      28: new           #50                 // class com/ibm/icu/impl/PropsVectors$DefaultGetFoldingOffset
      31: dup
      32: aconst_null
      33: invokespecial #51                 // Method com/ibm/icu/impl/PropsVectors$DefaultGetFoldingOffset."<init>":(Lcom/ibm/icu/impl/PropsVectors$1;)V
      36: invokevirtual #52                 // Method com/ibm/icu/impl/IntTrieBuilder.serialize:(Lcom/ibm/icu/impl/TrieBuilder$DataManipulate;Lcom/ibm/icu/impl/Trie$DataManipulate;)Lcom/ibm/icu/impl/IntTrie;
      39: areturn

  static int access$000(com.ibm.icu.impl.PropsVectors);
    Code:
       0: aload_0
       1: getfield      #3                  // Field columns:I
       4: ireturn

  static int[] access$100(com.ibm.icu.impl.PropsVectors);
    Code:
       0: aload_0
       1: getfield      #2                  // Field v:[I
       4: areturn
}
