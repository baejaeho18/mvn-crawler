Compiled from "CompactData.java"
public class com.ibm.icu.impl.number.CompactData implements com.ibm.icu.impl.number.MultiplierProducer {
  private static final java.lang.String USE_FALLBACK;

  private final java.lang.String[] patterns;

  private final byte[] multipliers;

  private byte largestMagnitude;

  private boolean isEmpty;

  private static final int COMPACT_MAX_DIGITS;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.impl.number.CompactData();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        16
       7: getstatic     #9                  // Field com/ibm/icu/impl/StandardPlural.COUNT:I
      10: imul
      11: anewarray     #10                 // class java/lang/String
      14: putfield      #5                  // Field patterns:[Ljava/lang/String;
      17: aload_0
      18: bipush        16
      20: newarray       byte
      22: putfield      #6                  // Field multipliers:[B
      25: aload_0
      26: iconst_0
      27: putfield      #2                  // Field largestMagnitude:B
      30: aload_0
      31: iconst_1
      32: putfield      #1                  // Field isEmpty:Z
      35: return

  public void populate(com.ibm.icu.util.ULocale, java.lang.String, com.ibm.icu.text.CompactDecimalFormat$CompactStyle, com.ibm.icu.impl.number.CompactData$CompactType);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #1                  // Field isEmpty:Z
      10: ifne          21
      13: new           #12                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: new           #14                 // class com/ibm/icu/impl/number/CompactData$CompactDataSink
      24: dup
      25: aload_0
      26: invokespecial #15                 // Method com/ibm/icu/impl/number/CompactData$CompactDataSink."<init>":(Lcom/ibm/icu/impl/number/CompactData;)V
      29: astore        5
      31: ldc           #17                 // String com/ibm/icu/impl/data/icudt61b
      33: aload_1
      34: invokestatic  #18                 // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/UResourceBundle;
      37: checkcast     #19                 // class com/ibm/icu/impl/ICUResourceBundle
      40: astore        6
      42: aload_2
      43: ldc           #20                 // String latn
      45: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: istore        7
      50: aload_3
      51: getstatic     #22                 // Field com/ibm/icu/text/CompactDecimalFormat$CompactStyle.SHORT:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      54: if_acmpne     61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: istore        8
      64: new           #23                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      71: astore        9
      73: aload_2
      74: aload_3
      75: aload         4
      77: aload         9
      79: invokestatic  #25                 // Method getResourceBundleKey:(Ljava/lang/String;Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;Lcom/ibm/icu/impl/number/CompactData$CompactType;Ljava/lang/StringBuilder;)V
      82: aload         6
      84: aload         9
      86: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload         5
      91: invokevirtual #27                 // Method com/ibm/icu/impl/ICUResourceBundle.getAllItemsWithFallbackNoFail:(Ljava/lang/String;Lcom/ibm/icu/impl/UResource$Sink;)V
      94: aload_0
      95: getfield      #1                  // Field isEmpty:Z
      98: ifeq          128
     101: iload         7
     103: ifne          128
     106: ldc           #20                 // String latn
     108: aload_3
     109: aload         4
     111: aload         9
     113: invokestatic  #25                 // Method getResourceBundleKey:(Ljava/lang/String;Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;Lcom/ibm/icu/impl/number/CompactData$CompactType;Ljava/lang/StringBuilder;)V
     116: aload         6
     118: aload         9
     120: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: aload         5
     125: invokevirtual #27                 // Method com/ibm/icu/impl/ICUResourceBundle.getAllItemsWithFallbackNoFail:(Ljava/lang/String;Lcom/ibm/icu/impl/UResource$Sink;)V
     128: aload_0
     129: getfield      #1                  // Field isEmpty:Z
     132: ifeq          163
     135: iload         8
     137: ifne          163
     140: aload_2
     141: getstatic     #22                 // Field com/ibm/icu/text/CompactDecimalFormat$CompactStyle.SHORT:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
     144: aload         4
     146: aload         9
     148: invokestatic  #25                 // Method getResourceBundleKey:(Ljava/lang/String;Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;Lcom/ibm/icu/impl/number/CompactData$CompactType;Ljava/lang/StringBuilder;)V
     151: aload         6
     153: aload         9
     155: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: aload         5
     160: invokevirtual #27                 // Method com/ibm/icu/impl/ICUResourceBundle.getAllItemsWithFallbackNoFail:(Ljava/lang/String;Lcom/ibm/icu/impl/UResource$Sink;)V
     163: aload_0
     164: getfield      #1                  // Field isEmpty:Z
     167: ifeq          204
     170: iload         7
     172: ifne          204
     175: iload         8
     177: ifne          204
     180: ldc           #20                 // String latn
     182: getstatic     #22                 // Field com/ibm/icu/text/CompactDecimalFormat$CompactStyle.SHORT:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
     185: aload         4
     187: aload         9
     189: invokestatic  #25                 // Method getResourceBundleKey:(Ljava/lang/String;Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;Lcom/ibm/icu/impl/number/CompactData$CompactType;Ljava/lang/StringBuilder;)V
     192: aload         6
     194: aload         9
     196: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: aload         5
     201: invokevirtual #27                 // Method com/ibm/icu/impl/ICUResourceBundle.getAllItemsWithFallbackNoFail:(Ljava/lang/String;Lcom/ibm/icu/impl/UResource$Sink;)V
     204: aload_0
     205: getfield      #1                  // Field isEmpty:Z
     208: ifeq          238
     211: new           #28                 // class com/ibm/icu/util/ICUException
     214: dup
     215: new           #23                 // class java/lang/StringBuilder
     218: dup
     219: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     222: ldc           #29                 // String Could not load compact decimal data for locale
     224: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: aload_1
     228: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     231: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     234: invokespecial #32                 // Method com/ibm/icu/util/ICUException."<init>":(Ljava/lang/String;)V
     237: athrow
     238: return

  private static void getResourceBundleKey(java.lang.String, com.ibm.icu.text.CompactDecimalFormat$CompactStyle, com.ibm.icu.impl.number.CompactData$CompactType, java.lang.StringBuilder);
    Code:
       0: aload_3
       1: iconst_0
       2: invokevirtual #33                 // Method java/lang/StringBuilder.setLength:(I)V
       5: aload_3
       6: ldc           #34                 // String NumberElements/
       8: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: pop
      12: aload_3
      13: aload_0
      14: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: pop
      18: aload_3
      19: aload_1
      20: getstatic     #22                 // Field com/ibm/icu/text/CompactDecimalFormat$CompactStyle.SHORT:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      23: if_acmpne     31
      26: ldc           #35                 // String /patternsShort
      28: goto          33
      31: ldc           #36                 // String /patternsLong
      33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_3
      38: aload_2
      39: getstatic     #37                 // Field com/ibm/icu/impl/number/CompactData$CompactType.DECIMAL:Lcom/ibm/icu/impl/number/CompactData$CompactType;
      42: if_acmpne     50
      45: ldc           #38                 // String /decimalFormat
      47: goto          52
      50: ldc           #39                 // String /currencyFormat
      52: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: return

  public void populate(java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #1                  // Field isEmpty:Z
      10: ifne          21
      13: new           #12                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: invokeinterface #40,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      27: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          212
      42: aload_2
      43: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #44                 // class java/util/Map$Entry
      51: astore_3
      52: aload_3
      53: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: checkcast     #10                 // class java/lang/String
      61: invokevirtual #46                 // Method java/lang/String.length:()I
      64: iconst_1
      65: isub
      66: i2b
      67: istore        4
      69: aload_3
      70: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #48                 // class java/util/Map
      78: invokeinterface #40,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      83: invokeinterface #41,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      88: astore        5
      90: aload         5
      92: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      97: ifeq          209
     100: aload         5
     102: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: checkcast     #44                 // class java/util/Map$Entry
     110: astore        6
     112: aload         6
     114: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     119: checkcast     #10                 // class java/lang/String
     122: invokevirtual #49                 // Method java/lang/String.toString:()Ljava/lang/String;
     125: invokestatic  #50                 // Method com/ibm/icu/impl/StandardPlural.fromString:(Ljava/lang/CharSequence;)Lcom/ibm/icu/impl/StandardPlural;
     128: astore        7
     130: aload         6
     132: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     137: checkcast     #10                 // class java/lang/String
     140: invokevirtual #49                 // Method java/lang/String.toString:()Ljava/lang/String;
     143: astore        8
     145: aload_0
     146: getfield      #5                  // Field patterns:[Ljava/lang/String;
     149: iload         4
     151: aload         7
     153: invokestatic  #4                  // Method getIndex:(ILcom/ibm/icu/impl/StandardPlural;)I
     156: aload         8
     158: aastore
     159: aload         8
     161: invokestatic  #3                  // Method countZeros:(Ljava/lang/String;)I
     164: istore        9
     166: iload         9
     168: ifle          206
     171: aload_0
     172: getfield      #6                  // Field multipliers:[B
     175: iload         4
     177: iload         9
     179: iload         4
     181: isub
     182: iconst_1
     183: isub
     184: i2b
     185: bastore
     186: iload         4
     188: aload_0
     189: getfield      #2                  // Field largestMagnitude:B
     192: if_icmple     201
     195: aload_0
     196: iload         4
     198: putfield      #2                  // Field largestMagnitude:B
     201: aload_0
     202: iconst_0
     203: putfield      #1                  // Field isEmpty:Z
     206: goto          90
     209: goto          33
     212: return

  public int getMultiplier(int);
    Code:
       0: iload_1
       1: ifge          6
       4: iconst_0
       5: ireturn
       6: iload_1
       7: aload_0
       8: getfield      #2                  // Field largestMagnitude:B
      11: if_icmple     19
      14: aload_0
      15: getfield      #2                  // Field largestMagnitude:B
      18: istore_1
      19: aload_0
      20: getfield      #6                  // Field multipliers:[B
      23: iload_1
      24: baload
      25: ireturn

  public java.lang.String getPattern(int, com.ibm.icu.impl.StandardPlural);
    Code:
       0: iload_1
       1: ifge          6
       4: aconst_null
       5: areturn
       6: iload_1
       7: aload_0
       8: getfield      #2                  // Field largestMagnitude:B
      11: if_icmple     19
      14: aload_0
      15: getfield      #2                  // Field largestMagnitude:B
      18: istore_1
      19: aload_0
      20: getfield      #5                  // Field patterns:[Ljava/lang/String;
      23: iload_1
      24: aload_2
      25: invokestatic  #4                  // Method getIndex:(ILcom/ibm/icu/impl/StandardPlural;)I
      28: aaload
      29: astore_3
      30: aload_3
      31: ifnonnull     54
      34: aload_2
      35: getstatic     #51                 // Field com/ibm/icu/impl/StandardPlural.OTHER:Lcom/ibm/icu/impl/StandardPlural;
      38: if_acmpeq     54
      41: aload_0
      42: getfield      #5                  // Field patterns:[Ljava/lang/String;
      45: iload_1
      46: getstatic     #51                 // Field com/ibm/icu/impl/StandardPlural.OTHER:Lcom/ibm/icu/impl/StandardPlural;
      49: invokestatic  #4                  // Method getIndex:(ILcom/ibm/icu/impl/StandardPlural;)I
      52: aaload
      53: astore_3
      54: aload_3
      55: ldc           #52                 // String <USE FALLBACK>
      57: if_acmpne     62
      60: aconst_null
      61: astore_3
      62: aload_3
      63: areturn

  public void getUniquePatterns(java.util.Set<java.lang.String>);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: aload_1
       7: invokeinterface #53,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      12: ifne          23
      15: new           #12                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: aload_1
      24: aload_0
      25: getfield      #5                  // Field patterns:[Ljava/lang/String;
      28: invokestatic  #54                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      31: invokeinterface #55,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      36: pop
      37: aload_1
      38: ldc           #52                 // String <USE FALLBACK>
      40: invokeinterface #56,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      45: pop
      46: aload_1
      47: aconst_null
      48: invokeinterface #56,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      53: pop
      54: return

  private static final int getIndex(int, com.ibm.icu.impl.StandardPlural);
    Code:
       0: iload_0
       1: getstatic     #9                  // Field com/ibm/icu/impl/StandardPlural.COUNT:I
       4: imul
       5: aload_1
       6: invokevirtual #57                 // Method com/ibm/icu/impl/StandardPlural.ordinal:()I
       9: iadd
      10: ireturn

  private static final int countZeros(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: invokevirtual #46                 // Method java/lang/String.length:()I
       9: if_icmpge     41
      12: aload_0
      13: iload_2
      14: invokevirtual #58                 // Method java/lang/String.charAt:(I)C
      17: bipush        48
      19: if_icmpne     28
      22: iinc          1, 1
      25: goto          35
      28: iload_1
      29: ifle          35
      32: goto          41
      35: iinc          2, 1
      38: goto          4
      41: iload_1
      42: ireturn

  static byte[] access$000(com.ibm.icu.impl.number.CompactData);
    Code:
       0: aload_0
       1: getfield      #6                  // Field multipliers:[B
       4: areturn

  static java.lang.String[] access$100(com.ibm.icu.impl.number.CompactData);
    Code:
       0: aload_0
       1: getfield      #5                  // Field patterns:[Ljava/lang/String;
       4: areturn

  static int access$200(int, com.ibm.icu.impl.StandardPlural);
    Code:
       0: iload_0
       1: aload_1
       2: invokestatic  #4                  // Method getIndex:(ILcom/ibm/icu/impl/StandardPlural;)I
       5: ireturn

  static int access$300(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method countZeros:(Ljava/lang/String;)I
       4: ireturn

  static byte access$400(com.ibm.icu.impl.number.CompactData);
    Code:
       0: aload_0
       1: getfield      #2                  // Field largestMagnitude:B
       4: ireturn

  static byte access$402(com.ibm.icu.impl.number.CompactData, byte);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field largestMagnitude:B
       6: ireturn

  static boolean access$502(com.ibm.icu.impl.number.CompactData, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #1                  // Field isEmpty:Z
       6: ireturn

  static {};
    Code:
       0: ldc           #8                  // class com/ibm/icu/impl/number/CompactData
       2: invokevirtual #59                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #11                 // Field $assertionsDisabled:Z
      16: return
}
