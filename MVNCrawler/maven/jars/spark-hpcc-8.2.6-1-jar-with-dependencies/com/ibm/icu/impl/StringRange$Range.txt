Compiled from "StringRange.java"
final class com.ibm.icu.impl.StringRange$Range implements java.lang.Comparable<com.ibm.icu.impl.StringRange$Range> {
  int min;

  int max;

  public com.ibm.icu.impl.StringRange$Range(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field min:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field max:I
      14: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     27
       5: aload_1
       6: ifnull        31
       9: aload_1
      10: instanceof    #4                  // class com/ibm/icu/impl/StringRange$Range
      13: ifeq          31
      16: aload_0
      17: aload_1
      18: checkcast     #4                  // class com/ibm/icu/impl/StringRange$Range
      21: invokevirtual #5                  // Method compareTo:(Lcom/ibm/icu/impl/StringRange$Range;)I
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public int compareTo(com.ibm.icu.impl.StringRange$Range);
    Code:
       0: aload_0
       1: getfield      #2                  // Field min:I
       4: aload_1
       5: getfield      #2                  // Field min:I
       8: isub
       9: istore_2
      10: iload_2
      11: ifeq          16
      14: iload_2
      15: ireturn
      16: aload_0
      17: getfield      #3                  // Field max:I
      20: aload_1
      21: getfield      #3                  // Field max:I
      24: isub
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field min:I
       4: bipush        37
       6: imul
       7: aload_0
       8: getfield      #3                  // Field max:I
      11: iadd
      12: ireturn

  public java.lang.String toString();
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field min:I
      11: invokevirtual #8                  // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      14: astore_1
      15: aload_0
      16: getfield      #2                  // Field min:I
      19: aload_0
      20: getfield      #3                  // Field max:I
      23: if_icmpne     33
      26: aload_1
      27: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: goto          49
      33: aload_1
      34: bipush        126
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #3                  // Field max:I
      43: invokevirtual #8                  // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class com/ibm/icu/impl/StringRange$Range
       5: invokevirtual #5                  // Method compareTo:(Lcom/ibm/icu/impl/StringRange$Range;)I
       8: ireturn
}
