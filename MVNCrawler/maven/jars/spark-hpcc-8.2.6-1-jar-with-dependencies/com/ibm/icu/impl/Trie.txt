Compiled from "Trie.java"
public abstract class com.ibm.icu.impl.Trie {
  protected static final int LEAD_INDEX_OFFSET_;

  protected static final int INDEX_STAGE_1_SHIFT_;

  protected static final int INDEX_STAGE_2_SHIFT_;

  protected static final int DATA_BLOCK_LENGTH;

  protected static final int INDEX_STAGE_3_MASK_;

  protected static final int SURROGATE_BLOCK_BITS;

  protected static final int SURROGATE_BLOCK_COUNT;

  protected static final int BMP_INDEX_LENGTH;

  protected static final int SURROGATE_MASK_;

  protected char[] m_index_;

  protected com.ibm.icu.impl.Trie$DataManipulate m_dataManipulate_;

  protected int m_dataOffset_;

  protected int m_dataLength_;

  protected static final int HEADER_LENGTH_;

  protected static final int HEADER_OPTIONS_LATIN1_IS_LINEAR_MASK_;

  protected static final int HEADER_SIGNATURE_;

  private static final int HEADER_OPTIONS_SHIFT_MASK_;

  protected static final int HEADER_OPTIONS_INDEX_SHIFT_;

  protected static final int HEADER_OPTIONS_DATA_IS_32_BIT_;

  private boolean m_isLatin1Linear_;

  private int m_options_;

  static final boolean $assertionsDisabled;

  public final boolean isLatin1Linear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_isLatin1Linear_:Z
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class com/ibm/icu/impl/Trie
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #1                  // class com/ibm/icu/impl/Trie
      20: astore_2
      21: aload_0
      22: getfield      #2                  // Field m_isLatin1Linear_:Z
      25: aload_2
      26: getfield      #2                  // Field m_isLatin1Linear_:Z
      29: if_icmpne     72
      32: aload_0
      33: getfield      #3                  // Field m_options_:I
      36: aload_2
      37: getfield      #3                  // Field m_options_:I
      40: if_icmpne     72
      43: aload_0
      44: getfield      #4                  // Field m_dataLength_:I
      47: aload_2
      48: getfield      #4                  // Field m_dataLength_:I
      51: if_icmpne     72
      54: aload_0
      55: getfield      #5                  // Field m_index_:[C
      58: aload_2
      59: getfield      #5                  // Field m_index_:[C
      62: invokestatic  #6                  // Method java/util/Arrays.equals:([C[C)Z
      65: ifeq          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: ireturn

  public int hashCode();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          16
       6: new           #8                  // class java/lang/AssertionError
       9: dup
      10: ldc           #9                  // String hashCode not designed
      12: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      15: athrow
      16: bipush        42
      18: ireturn

  public int getSerializedDataSize();
    Code:
       0: bipush        16
       2: istore_1
       3: iload_1
       4: aload_0
       5: getfield      #11                 // Field m_dataOffset_:I
       8: iconst_1
       9: ishl
      10: iadd
      11: istore_1
      12: aload_0
      13: invokevirtual #12                 // Method isCharTrie:()Z
      16: ifeq          31
      19: iload_1
      20: aload_0
      21: getfield      #4                  // Field m_dataLength_:I
      24: iconst_1
      25: ishl
      26: iadd
      27: istore_1
      28: goto          47
      31: aload_0
      32: invokevirtual #13                 // Method isIntTrie:()Z
      35: ifeq          47
      38: iload_1
      39: aload_0
      40: getfield      #4                  // Field m_dataLength_:I
      43: iconst_2
      44: ishl
      45: iadd
      46: istore_1
      47: iload_1
      48: ireturn

  protected com.ibm.icu.impl.Trie(java.nio.ByteBuffer, com.ibm.icu.impl.Trie$DataManipulate);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #15                 // Method java/nio/ByteBuffer.getInt:()I
       8: istore_3
       9: aload_0
      10: aload_1
      11: invokevirtual #15                 // Method java/nio/ByteBuffer.getInt:()I
      14: putfield      #3                  // Field m_options_:I
      17: aload_0
      18: iload_3
      19: invokespecial #16                 // Method checkHeader:(I)Z
      22: ifne          35
      25: new           #17                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #18                 // String ICU data file error: Trie header authentication failed, please check if you have the most updated ICU data file
      31: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_2
      36: ifnull        47
      39: aload_0
      40: aload_2
      41: putfield      #20                 // Field m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
      44: goto          59
      47: aload_0
      48: new           #21                 // class com/ibm/icu/impl/Trie$DefaultGetFoldingOffset
      51: dup
      52: aconst_null
      53: invokespecial #22                 // Method com/ibm/icu/impl/Trie$DefaultGetFoldingOffset."<init>":(Lcom/ibm/icu/impl/Trie$1;)V
      56: putfield      #20                 // Field m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
      59: aload_0
      60: aload_0
      61: getfield      #3                  // Field m_options_:I
      64: sipush        512
      67: iand
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: putfield      #2                  // Field m_isLatin1Linear_:Z
      79: aload_0
      80: aload_1
      81: invokevirtual #15                 // Method java/nio/ByteBuffer.getInt:()I
      84: putfield      #11                 // Field m_dataOffset_:I
      87: aload_0
      88: aload_1
      89: invokevirtual #15                 // Method java/nio/ByteBuffer.getInt:()I
      92: putfield      #4                  // Field m_dataLength_:I
      95: aload_0
      96: aload_1
      97: invokevirtual #23                 // Method unserialize:(Ljava/nio/ByteBuffer;)V
     100: return

  protected com.ibm.icu.impl.Trie(char[], int, com.ibm.icu.impl.Trie$DataManipulate);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: putfield      #3                  // Field m_options_:I
       9: aload_3
      10: ifnull        21
      13: aload_0
      14: aload_3
      15: putfield      #20                 // Field m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
      18: goto          33
      21: aload_0
      22: new           #21                 // class com/ibm/icu/impl/Trie$DefaultGetFoldingOffset
      25: dup
      26: aconst_null
      27: invokespecial #22                 // Method com/ibm/icu/impl/Trie$DefaultGetFoldingOffset."<init>":(Lcom/ibm/icu/impl/Trie$1;)V
      30: putfield      #20                 // Field m_dataManipulate_:Lcom/ibm/icu/impl/Trie$DataManipulate;
      33: aload_0
      34: aload_0
      35: getfield      #3                  // Field m_options_:I
      38: sipush        512
      41: iand
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: putfield      #2                  // Field m_isLatin1Linear_:Z
      53: aload_0
      54: aload_1
      55: putfield      #5                  // Field m_index_:[C
      58: aload_0
      59: aload_0
      60: getfield      #5                  // Field m_index_:[C
      63: arraylength
      64: putfield      #11                 // Field m_dataOffset_:I
      67: return

  protected abstract int getSurrogateOffset(char, char);

  protected abstract int getValue(int);

  protected abstract int getInitialValue();

  protected final int getRawOffset(int, char);
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_index_:[C
       4: iload_1
       5: iload_2
       6: iconst_5
       7: ishr
       8: iadd
       9: caload
      10: iconst_2
      11: ishl
      12: iload_2
      13: bipush        31
      15: iand
      16: iadd
      17: ireturn

  protected final int getBMPOffset(char);
    Code:
       0: iload_1
       1: ldc           #25                 // int 55296
       3: if_icmplt     23
       6: iload_1
       7: ldc           #26                 // int 56319
       9: if_icmpgt     23
      12: aload_0
      13: sipush        320
      16: iload_1
      17: invokevirtual #27                 // Method getRawOffset:(IC)I
      20: goto          29
      23: aload_0
      24: iconst_0
      25: iload_1
      26: invokevirtual #27                 // Method getRawOffset:(IC)I
      29: ireturn

  protected final int getLeadOffset(char);
    Code:
       0: aload_0
       1: iconst_0
       2: iload_1
       3: invokevirtual #27                 // Method getRawOffset:(IC)I
       6: ireturn

  protected final int getCodePointOffset(int);
    Code:
       0: iload_1
       1: ifge          6
       4: iconst_m1
       5: ireturn
       6: iload_1
       7: ldc           #25                 // int 55296
       9: if_icmpge     20
      12: aload_0
      13: iconst_0
      14: iload_1
      15: i2c
      16: invokevirtual #27                 // Method getRawOffset:(IC)I
      19: ireturn
      20: iload_1
      21: ldc           #28                 // int 65536
      23: if_icmpge     33
      26: aload_0
      27: iload_1
      28: i2c
      29: invokevirtual #29                 // Method getBMPOffset:(C)I
      32: ireturn
      33: iload_1
      34: ldc           #31                 // int 1114111
      36: if_icmpgt     54
      39: aload_0
      40: iload_1
      41: invokestatic  #32                 // Method com/ibm/icu/text/UTF16.getLeadSurrogate:(I)C
      44: iload_1
      45: sipush        1023
      48: iand
      49: i2c
      50: invokevirtual #33                 // Method getSurrogateOffset:(CC)I
      53: ireturn
      54: iconst_m1
      55: ireturn

  protected void unserialize(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #11                 // Field m_dataOffset_:I
       6: iconst_0
       7: invokestatic  #34                 // Method com/ibm/icu/impl/ICUBinary.getChars:(Ljava/nio/ByteBuffer;II)[C
      10: putfield      #5                  // Field m_index_:[C
      13: return

  protected final boolean isIntTrie();
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_options_:I
       4: sipush        256
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  protected final boolean isCharTrie();
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_options_:I
       4: sipush        256
       7: iand
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private final boolean checkHeader(int);
    Code:
       0: iload_1
       1: ldc           #35                 // int 1416784229
       3: if_icmpeq     8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: getfield      #3                  // Field m_options_:I
      12: bipush        15
      14: iand
      15: iconst_5
      16: if_icmpne     32
      19: aload_0
      20: getfield      #3                  // Field m_options_:I
      23: iconst_4
      24: ishr
      25: bipush        15
      27: iand
      28: iconst_2
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: iconst_1
      35: ireturn

  static {};
    Code:
       0: ldc           #1                  // class com/ibm/icu/impl/Trie
       2: invokevirtual #36                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
