Compiled from "CacheValue.java"
final class com.ibm.icu.impl.CacheValue$SoftValue<V> extends com.ibm.icu.impl.CacheValue<V> {
  private volatile java.lang.ref.Reference<V> ref;

  com.ibm.icu.impl.CacheValue$SoftValue(V);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/impl/CacheValue."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/SoftReference
       8: dup
       9: aload_1
      10: invokespecial #3                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #4                  // Field ref:Ljava/lang/ref/Reference;
      16: return

  public V get();
    Code:
       0: aload_0
       1: getfield      #4                  // Field ref:Ljava/lang/ref/Reference;
       4: invokevirtual #5                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
       7: areturn

  public synchronized V resetIfCleared(V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ref:Ljava/lang/ref/Reference;
       4: invokevirtual #5                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
       7: astore_2
       8: aload_2
       9: ifnonnull     26
      12: aload_0
      13: new           #2                  // class java/lang/ref/SoftReference
      16: dup
      17: aload_1
      18: invokespecial #3                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      21: putfield      #4                  // Field ref:Ljava/lang/ref/Reference;
      24: aload_1
      25: areturn
      26: aload_2
      27: areturn
}
