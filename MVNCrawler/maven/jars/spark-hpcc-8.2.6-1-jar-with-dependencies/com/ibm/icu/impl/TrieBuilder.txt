Compiled from "TrieBuilder.java"
public class com.ibm.icu.impl.TrieBuilder {
  public static final int DATA_BLOCK_LENGTH;

  protected int[] m_index_;

  protected int m_indexLength_;

  protected int m_dataCapacity_;

  protected int m_dataLength_;

  protected boolean m_isLatin1Linear_;

  protected boolean m_isCompacted_;

  protected int[] m_map_;

  protected static final int SHIFT_;

  protected static final int MAX_INDEX_LENGTH_;

  protected static final int BMP_INDEX_LENGTH_;

  protected static final int SURROGATE_BLOCK_COUNT_;

  protected static final int MASK_;

  protected static final int INDEX_SHIFT_;

  protected static final int MAX_DATA_LENGTH_;

  protected static final int OPTIONS_INDEX_SHIFT_;

  protected static final int OPTIONS_DATA_IS_32_BIT_;

  protected static final int OPTIONS_LATIN1_IS_LINEAR_;

  protected static final int DATA_GRANULARITY_;

  private static final int MAX_BUILD_TIME_DATA_LENGTH_;

  public boolean isInZeroBlock(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_isCompacted_:Z
       4: ifne          17
       7: iload_1
       8: ldc           #5                  // int 1114111
      10: if_icmpgt     17
      13: iload_1
      14: ifge          19
      17: iconst_1
      18: ireturn
      19: aload_0
      20: getfield      #6                  // Field m_index_:[I
      23: iload_1
      24: iconst_5
      25: ishr
      26: iaload
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  protected com.ibm.icu.impl.TrieBuilder();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #8                  // int 34816
       7: newarray       int
       9: putfield      #6                  // Field m_index_:[I
      12: aload_0
      13: ldc           #9                  // int 34849
      15: newarray       int
      17: putfield      #10                 // Field m_map_:[I
      20: aload_0
      21: iconst_0
      22: putfield      #11                 // Field m_isLatin1Linear_:Z
      25: aload_0
      26: iconst_0
      27: putfield      #3                  // Field m_isCompacted_:Z
      30: aload_0
      31: ldc           #8                  // int 34816
      33: putfield      #12                 // Field m_indexLength_:I
      36: return

  protected com.ibm.icu.impl.TrieBuilder(com.ibm.icu.impl.TrieBuilder);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #8                  // int 34816
       7: newarray       int
       9: putfield      #6                  // Field m_index_:[I
      12: aload_0
      13: aload_1
      14: getfield      #12                 // Field m_indexLength_:I
      17: putfield      #12                 // Field m_indexLength_:I
      20: aload_1
      21: getfield      #6                  // Field m_index_:[I
      24: iconst_0
      25: aload_0
      26: getfield      #6                  // Field m_index_:[I
      29: iconst_0
      30: aload_0
      31: getfield      #12                 // Field m_indexLength_:I
      34: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload_0
      38: aload_1
      39: getfield      #14                 // Field m_dataCapacity_:I
      42: putfield      #14                 // Field m_dataCapacity_:I
      45: aload_0
      46: aload_1
      47: getfield      #15                 // Field m_dataLength_:I
      50: putfield      #15                 // Field m_dataLength_:I
      53: aload_0
      54: aload_1
      55: getfield      #10                 // Field m_map_:[I
      58: arraylength
      59: newarray       int
      61: putfield      #10                 // Field m_map_:[I
      64: aload_1
      65: getfield      #10                 // Field m_map_:[I
      68: iconst_0
      69: aload_0
      70: getfield      #10                 // Field m_map_:[I
      73: iconst_0
      74: aload_0
      75: getfield      #10                 // Field m_map_:[I
      78: arraylength
      79: invokestatic  #13                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      82: aload_0
      83: aload_1
      84: getfield      #11                 // Field m_isLatin1Linear_:Z
      87: putfield      #11                 // Field m_isLatin1Linear_:Z
      90: aload_0
      91: aload_1
      92: getfield      #3                  // Field m_isCompacted_:Z
      95: putfield      #3                  // Field m_isCompacted_:Z
      98: return

  protected static final boolean equal_int(int[], int, int, int);
    Code:
       0: iload_3
       1: ifle          25
       4: aload_0
       5: iload_1
       6: iaload
       7: aload_0
       8: iload_2
       9: iaload
      10: if_icmpne     25
      13: iinc          1, 1
      16: iinc          2, 1
      19: iinc          3, -1
      22: goto          0
      25: iload_3
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  protected void findUnusedBlocks();
    Code:
       0: aload_0
       1: getfield      #10                 // Field m_map_:[I
       4: sipush        255
       7: invokestatic  #16                 // Method java/util/Arrays.fill:([II)V
      10: iconst_0
      11: istore_1
      12: iload_1
      13: aload_0
      14: getfield      #12                 // Field m_indexLength_:I
      17: if_icmpge     43
      20: aload_0
      21: getfield      #10                 // Field m_map_:[I
      24: aload_0
      25: getfield      #6                  // Field m_index_:[I
      28: iload_1
      29: iaload
      30: invokestatic  #17                 // Method java/lang/Math.abs:(I)I
      33: iconst_5
      34: ishr
      35: iconst_0
      36: iastore
      37: iinc          1, 1
      40: goto          12
      43: aload_0
      44: getfield      #10                 // Field m_map_:[I
      47: iconst_0
      48: iconst_0
      49: iastore
      50: return

  protected static final int findSameIndexBlock(int[], int, int);
    Code:
       0: sipush        2048
       3: istore_3
       4: iload_3
       5: iload_1
       6: if_icmpge     28
       9: aload_0
      10: iload_3
      11: iload_2
      12: bipush        32
      14: invokestatic  #18                 // Method equal_int:([IIII)Z
      17: ifeq          22
      20: iload_3
      21: ireturn
      22: iinc          3, 32
      25: goto          4
      28: iload_1
      29: ireturn
}
