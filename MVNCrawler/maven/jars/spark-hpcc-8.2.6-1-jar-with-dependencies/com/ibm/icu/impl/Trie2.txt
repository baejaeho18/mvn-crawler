Compiled from "Trie2.java"
public abstract class com.ibm.icu.impl.Trie2 implements java.lang.Iterable<com.ibm.icu.impl.Trie2$Range> {
  private static com.ibm.icu.impl.Trie2$ValueMapper defaultValueMapper;

  com.ibm.icu.impl.Trie2$UTrie2Header header;

  char[] index;

  int data16;

  int[] data32;

  int indexLength;

  int dataLength;

  int index2NullOffset;

  int initialValue;

  int errorValue;

  int highStart;

  int highValueIndex;

  int dataNullOffset;

  int fHash;

  static final int UTRIE2_OPTIONS_VALUE_BITS_MASK;

  static final int UTRIE2_SHIFT_1;

  static final int UTRIE2_SHIFT_2;

  static final int UTRIE2_SHIFT_1_2;

  static final int UTRIE2_OMITTED_BMP_INDEX_1_LENGTH;

  static final int UTRIE2_CP_PER_INDEX_1_ENTRY;

  static final int UTRIE2_INDEX_2_BLOCK_LENGTH;

  static final int UTRIE2_INDEX_2_MASK;

  static final int UTRIE2_DATA_BLOCK_LENGTH;

  static final int UTRIE2_DATA_MASK;

  static final int UTRIE2_INDEX_SHIFT;

  static final int UTRIE2_DATA_GRANULARITY;

  static final int UTRIE2_INDEX_2_OFFSET;

  static final int UTRIE2_LSCP_INDEX_2_OFFSET;

  static final int UTRIE2_LSCP_INDEX_2_LENGTH;

  static final int UTRIE2_INDEX_2_BMP_LENGTH;

  static final int UTRIE2_UTF8_2B_INDEX_2_OFFSET;

  static final int UTRIE2_UTF8_2B_INDEX_2_LENGTH;

  static final int UTRIE2_INDEX_1_OFFSET;

  static final int UTRIE2_MAX_INDEX_1_LENGTH;

  static final int UTRIE2_BAD_UTF8_DATA_OFFSET;

  static final int UTRIE2_DATA_START_OFFSET;

  static final int UNEWTRIE2_INDEX_GAP_OFFSET;

  static final int UNEWTRIE2_INDEX_GAP_LENGTH;

  static final int UNEWTRIE2_MAX_INDEX_2_LENGTH;

  static final int UNEWTRIE2_INDEX_1_LENGTH;

  static final int UNEWTRIE2_MAX_DATA_LENGTH;

  public com.ibm.icu.impl.Trie2();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.ibm.icu.impl.Trie2 createFromSerialized(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
       4: astore_1
       5: new           #8                  // class com/ibm/icu/impl/Trie2$UTrie2Header
       8: dup
       9: invokespecial #9                  // Method com/ibm/icu/impl/Trie2$UTrie2Header."<init>":()V
      12: astore_2
      13: aload_2
      14: aload_0
      15: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:()I
      18: putfield      #11                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.signature:I
      21: aload_2
      22: getfield      #11                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.signature:I
      25: lookupswitch  { // 2
             845771348: 55
            1416784178: 52
               default: 95
          }
      52: goto          105
      55: aload_1
      56: getstatic     #12                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      59: if_acmpne     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: istore_3
      68: aload_0
      69: iload_3
      70: ifeq          79
      73: getstatic     #13                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      76: goto          82
      79: getstatic     #12                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      82: invokevirtual #14                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      85: pop
      86: aload_2
      87: ldc           #15                 // int 1416784178
      89: putfield      #11                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.signature:I
      92: goto          105
      95: new           #16                 // class java/lang/IllegalArgumentException
      98: dup
      99: ldc           #17                 // String Buffer does not contain a serialized UTrie2
     101: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_2
     106: aload_0
     107: invokevirtual #19                 // Method java/nio/ByteBuffer.getChar:()C
     110: putfield      #20                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.options:I
     113: aload_2
     114: aload_0
     115: invokevirtual #19                 // Method java/nio/ByteBuffer.getChar:()C
     118: putfield      #21                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.indexLength:I
     121: aload_2
     122: aload_0
     123: invokevirtual #19                 // Method java/nio/ByteBuffer.getChar:()C
     126: putfield      #22                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.shiftedDataLength:I
     129: aload_2
     130: aload_0
     131: invokevirtual #19                 // Method java/nio/ByteBuffer.getChar:()C
     134: putfield      #23                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.index2NullOffset:I
     137: aload_2
     138: aload_0
     139: invokevirtual #19                 // Method java/nio/ByteBuffer.getChar:()C
     142: putfield      #24                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.dataNullOffset:I
     145: aload_2
     146: aload_0
     147: invokevirtual #19                 // Method java/nio/ByteBuffer.getChar:()C
     150: putfield      #25                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.shiftedHighStart:I
     153: aload_2
     154: getfield      #20                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.options:I
     157: bipush        15
     159: iand
     160: iconst_1
     161: if_icmple     174
     164: new           #16                 // class java/lang/IllegalArgumentException
     167: dup
     168: ldc           #26                 // String UTrie2 serialized format error.
     170: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     173: athrow
     174: aload_2
     175: getfield      #20                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.options:I
     178: bipush        15
     180: iand
     181: ifne          200
     184: getstatic     #27                 // Field com/ibm/icu/impl/Trie2$ValueWidth.BITS_16:Lcom/ibm/icu/impl/Trie2$ValueWidth;
     187: astore_3
     188: new           #28                 // class com/ibm/icu/impl/Trie2_16
     191: dup
     192: invokespecial #29                 // Method com/ibm/icu/impl/Trie2_16."<init>":()V
     195: astore        4
     197: goto          213
     200: getstatic     #30                 // Field com/ibm/icu/impl/Trie2$ValueWidth.BITS_32:Lcom/ibm/icu/impl/Trie2$ValueWidth;
     203: astore_3
     204: new           #31                 // class com/ibm/icu/impl/Trie2_32
     207: dup
     208: invokespecial #32                 // Method com/ibm/icu/impl/Trie2_32."<init>":()V
     211: astore        4
     213: aload         4
     215: aload_2
     216: putfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
     219: aload         4
     221: aload_2
     222: getfield      #21                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.indexLength:I
     225: putfield      #34                 // Field indexLength:I
     228: aload         4
     230: aload_2
     231: getfield      #22                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.shiftedDataLength:I
     234: iconst_2
     235: ishl
     236: putfield      #35                 // Field dataLength:I
     239: aload         4
     241: aload_2
     242: getfield      #23                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.index2NullOffset:I
     245: putfield      #36                 // Field index2NullOffset:I
     248: aload         4
     250: aload_2
     251: getfield      #24                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.dataNullOffset:I
     254: putfield      #37                 // Field dataNullOffset:I
     257: aload         4
     259: aload_2
     260: getfield      #25                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.shiftedHighStart:I
     263: bipush        11
     265: ishl
     266: putfield      #38                 // Field highStart:I
     269: aload         4
     271: aload         4
     273: getfield      #35                 // Field dataLength:I
     276: iconst_4
     277: isub
     278: putfield      #39                 // Field highValueIndex:I
     281: aload_3
     282: getstatic     #27                 // Field com/ibm/icu/impl/Trie2$ValueWidth.BITS_16:Lcom/ibm/icu/impl/Trie2$ValueWidth;
     285: if_acmpne     303
     288: aload         4
     290: dup
     291: getfield      #39                 // Field highValueIndex:I
     294: aload         4
     296: getfield      #34                 // Field indexLength:I
     299: iadd
     300: putfield      #39                 // Field highValueIndex:I
     303: aload         4
     305: getfield      #34                 // Field indexLength:I
     308: istore        5
     310: aload_3
     311: getstatic     #27                 // Field com/ibm/icu/impl/Trie2$ValueWidth.BITS_16:Lcom/ibm/icu/impl/Trie2$ValueWidth;
     314: if_acmpne     327
     317: iload         5
     319: aload         4
     321: getfield      #35                 // Field dataLength:I
     324: iadd
     325: istore        5
     327: aload         4
     329: aload_0
     330: iload         5
     332: iconst_0
     333: invokestatic  #40                 // Method com/ibm/icu/impl/ICUBinary.getChars:(Ljava/nio/ByteBuffer;II)[C
     336: putfield      #41                 // Field index:[C
     339: aload_3
     340: getstatic     #27                 // Field com/ibm/icu/impl/Trie2$ValueWidth.BITS_16:Lcom/ibm/icu/impl/Trie2$ValueWidth;
     343: if_acmpne     359
     346: aload         4
     348: aload         4
     350: getfield      #34                 // Field indexLength:I
     353: putfield      #42                 // Field data16:I
     356: goto          374
     359: aload         4
     361: aload_0
     362: aload         4
     364: getfield      #35                 // Field dataLength:I
     367: iconst_0
     368: invokestatic  #43                 // Method com/ibm/icu/impl/ICUBinary.getInts:(Ljava/nio/ByteBuffer;II)[I
     371: putfield      #44                 // Field data32:[I
     374: getstatic     #45                 // Field com/ibm/icu/impl/Trie2$2.$SwitchMap$com$ibm$icu$impl$Trie2$ValueWidth:[I
     377: aload_3
     378: invokevirtual #46                 // Method com/ibm/icu/impl/Trie2$ValueWidth.ordinal:()I
     381: iaload
     382: lookupswitch  { // 2
                     1: 408
                     2: 453
               default: 492
          }
     408: aload         4
     410: aconst_null
     411: putfield      #44                 // Field data32:[I
     414: aload         4
     416: aload         4
     418: getfield      #41                 // Field index:[C
     421: aload         4
     423: getfield      #37                 // Field dataNullOffset:I
     426: caload
     427: putfield      #47                 // Field initialValue:I
     430: aload         4
     432: aload         4
     434: getfield      #41                 // Field index:[C
     437: aload         4
     439: getfield      #42                 // Field data16:I
     442: sipush        128
     445: iadd
     446: caload
     447: putfield      #48                 // Field errorValue:I
     450: goto          502
     453: aload         4
     455: iconst_0
     456: putfield      #42                 // Field data16:I
     459: aload         4
     461: aload         4
     463: getfield      #44                 // Field data32:[I
     466: aload         4
     468: getfield      #37                 // Field dataNullOffset:I
     471: iaload
     472: putfield      #47                 // Field initialValue:I
     475: aload         4
     477: aload         4
     479: getfield      #44                 // Field data32:[I
     482: sipush        128
     485: iaload
     486: putfield      #48                 // Field errorValue:I
     489: goto          502
     492: new           #16                 // class java/lang/IllegalArgumentException
     495: dup
     496: ldc           #26                 // String UTrie2 serialized format error.
     498: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     501: athrow
     502: aload         4
     504: astore        6
     506: aload_0
     507: aload_1
     508: invokevirtual #14                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     511: pop
     512: aload         6
     514: areturn
     515: astore        7
     517: aload_0
     518: aload_1
     519: invokevirtual #14                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     522: pop
     523: aload         7
     525: athrow
    Exception table:
       from    to  target type
           5   506   515   any
         515   517   515   any

  public static int getVersion(java.io.InputStream, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method java/io/InputStream.markSupported:()Z
       4: ifne          17
       7: new           #16                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #50                 // String Input stream must support mark().
      13: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_4
      19: invokevirtual #51                 // Method java/io/InputStream.mark:(I)V
      22: iconst_4
      23: newarray       byte
      25: astore_2
      26: aload_0
      27: aload_2
      28: invokevirtual #52                 // Method java/io/InputStream.read:([B)I
      31: istore_3
      32: aload_0
      33: invokevirtual #53                 // Method java/io/InputStream.reset:()V
      36: iload_3
      37: aload_2
      38: arraylength
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_2
      45: iconst_0
      46: baload
      47: bipush        84
      49: if_icmpne     78
      52: aload_2
      53: iconst_1
      54: baload
      55: bipush        114
      57: if_icmpne     78
      60: aload_2
      61: iconst_2
      62: baload
      63: bipush        105
      65: if_icmpne     78
      68: aload_2
      69: iconst_3
      70: baload
      71: bipush        101
      73: if_icmpne     78
      76: iconst_1
      77: ireturn
      78: aload_2
      79: iconst_0
      80: baload
      81: bipush        84
      83: if_icmpne     112
      86: aload_2
      87: iconst_1
      88: baload
      89: bipush        114
      91: if_icmpne     112
      94: aload_2
      95: iconst_2
      96: baload
      97: bipush        105
      99: if_icmpne     112
     102: aload_2
     103: iconst_3
     104: baload
     105: bipush        50
     107: if_icmpne     112
     110: iconst_2
     111: ireturn
     112: iload_1
     113: ifeq          184
     116: aload_2
     117: iconst_0
     118: baload
     119: bipush        101
     121: if_icmpne     150
     124: aload_2
     125: iconst_1
     126: baload
     127: bipush        105
     129: if_icmpne     150
     132: aload_2
     133: iconst_2
     134: baload
     135: bipush        114
     137: if_icmpne     150
     140: aload_2
     141: iconst_3
     142: baload
     143: bipush        84
     145: if_icmpne     150
     148: iconst_1
     149: ireturn
     150: aload_2
     151: iconst_0
     152: baload
     153: bipush        50
     155: if_icmpne     184
     158: aload_2
     159: iconst_1
     160: baload
     161: bipush        105
     163: if_icmpne     184
     166: aload_2
     167: iconst_2
     168: baload
     169: bipush        114
     171: if_icmpne     184
     174: aload_2
     175: iconst_3
     176: baload
     177: bipush        84
     179: if_icmpne     184
     182: iconst_2
     183: ireturn
     184: iconst_0
     185: ireturn

  public abstract int get(int);

  public abstract int getFromU16SingleLead(char);

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #1                  // class com/ibm/icu/impl/Trie2
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #1                  // class com/ibm/icu/impl/Trie2
      13: astore_2
      14: aload_2
      15: invokevirtual #54                 // Method iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload_0
      21: invokevirtual #54                 // Method iterator:()Ljava/util/Iterator;
      24: astore        5
      26: aload         5
      28: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          85
      36: aload         5
      38: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #57                 // class com/ibm/icu/impl/Trie2$Range
      46: astore        6
      48: aload         4
      50: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      55: ifne          60
      58: iconst_0
      59: ireturn
      60: aload         4
      62: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #57                 // class com/ibm/icu/impl/Trie2$Range
      70: astore_3
      71: aload         6
      73: aload_3
      74: invokevirtual #58                 // Method com/ibm/icu/impl/Trie2$Range.equals:(Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: goto          26
      85: aload         4
      87: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          97
      95: iconst_0
      96: ireturn
      97: aload_0
      98: getfield      #48                 // Field errorValue:I
     101: aload_2
     102: getfield      #48                 // Field errorValue:I
     105: if_icmpne     119
     108: aload_0
     109: getfield      #47                 // Field initialValue:I
     112: aload_2
     113: getfield      #47                 // Field initialValue:I
     116: if_icmpeq     121
     119: iconst_0
     120: ireturn
     121: iconst_1
     122: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #59                 // Field fHash:I
       4: ifne          58
       7: invokestatic  #5                  // Method initHash:()I
      10: istore_1
      11: aload_0
      12: invokevirtual #54                 // Method iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          47
      25: aload_2
      26: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #57                 // class com/ibm/icu/impl/Trie2$Range
      34: astore_3
      35: iload_1
      36: aload_3
      37: invokevirtual #60                 // Method com/ibm/icu/impl/Trie2$Range.hashCode:()I
      40: invokestatic  #3                  // Method hashInt:(II)I
      43: istore_1
      44: goto          16
      47: iload_1
      48: ifne          53
      51: iconst_1
      52: istore_1
      53: aload_0
      54: iload_1
      55: putfield      #59                 // Field fHash:I
      58: aload_0
      59: getfield      #59                 // Field fHash:I
      62: ireturn

  public java.util.Iterator<com.ibm.icu.impl.Trie2$Range> iterator();
    Code:
       0: aload_0
       1: getstatic     #61                 // Field defaultValueMapper:Lcom/ibm/icu/impl/Trie2$ValueMapper;
       4: invokevirtual #62                 // Method iterator:(Lcom/ibm/icu/impl/Trie2$ValueMapper;)Ljava/util/Iterator;
       7: areturn

  public java.util.Iterator<com.ibm.icu.impl.Trie2$Range> iterator(com.ibm.icu.impl.Trie2$ValueMapper);
    Code:
       0: new           #63                 // class com/ibm/icu/impl/Trie2$Trie2Iterator
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #64                 // Method com/ibm/icu/impl/Trie2$Trie2Iterator."<init>":(Lcom/ibm/icu/impl/Trie2;Lcom/ibm/icu/impl/Trie2$ValueMapper;)V
       9: areturn

  public java.util.Iterator<com.ibm.icu.impl.Trie2$Range> iteratorForLeadSurrogate(char, com.ibm.icu.impl.Trie2$ValueMapper);
    Code:
       0: new           #63                 // class com/ibm/icu/impl/Trie2$Trie2Iterator
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #65                 // Method com/ibm/icu/impl/Trie2$Trie2Iterator."<init>":(Lcom/ibm/icu/impl/Trie2;CLcom/ibm/icu/impl/Trie2$ValueMapper;)V
      10: areturn

  public java.util.Iterator<com.ibm.icu.impl.Trie2$Range> iteratorForLeadSurrogate(char);
    Code:
       0: new           #63                 // class com/ibm/icu/impl/Trie2$Trie2Iterator
       3: dup
       4: aload_0
       5: iload_1
       6: getstatic     #61                 // Field defaultValueMapper:Lcom/ibm/icu/impl/Trie2$ValueMapper;
       9: invokespecial #65                 // Method com/ibm/icu/impl/Trie2$Trie2Iterator."<init>":(Lcom/ibm/icu/impl/Trie2;CLcom/ibm/icu/impl/Trie2$ValueMapper;)V
      12: areturn

  protected int serializeHeader(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: aload_0
       4: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
       7: getfield      #11                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.signature:I
      10: invokevirtual #66                 // Method java/io/DataOutputStream.writeInt:(I)V
      13: aload_1
      14: aload_0
      15: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
      18: getfield      #20                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.options:I
      21: invokevirtual #67                 // Method java/io/DataOutputStream.writeShort:(I)V
      24: aload_1
      25: aload_0
      26: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
      29: getfield      #21                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.indexLength:I
      32: invokevirtual #67                 // Method java/io/DataOutputStream.writeShort:(I)V
      35: aload_1
      36: aload_0
      37: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
      40: getfield      #22                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.shiftedDataLength:I
      43: invokevirtual #67                 // Method java/io/DataOutputStream.writeShort:(I)V
      46: aload_1
      47: aload_0
      48: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
      51: getfield      #23                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.index2NullOffset:I
      54: invokevirtual #67                 // Method java/io/DataOutputStream.writeShort:(I)V
      57: aload_1
      58: aload_0
      59: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
      62: getfield      #24                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.dataNullOffset:I
      65: invokevirtual #67                 // Method java/io/DataOutputStream.writeShort:(I)V
      68: aload_1
      69: aload_0
      70: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
      73: getfield      #25                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.shiftedHighStart:I
      76: invokevirtual #67                 // Method java/io/DataOutputStream.writeShort:(I)V
      79: iinc          2, 16
      82: iconst_0
      83: istore_3
      84: iload_3
      85: aload_0
      86: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
      89: getfield      #21                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.indexLength:I
      92: if_icmpge     111
      95: aload_1
      96: aload_0
      97: getfield      #41                 // Field index:[C
     100: iload_3
     101: caload
     102: invokevirtual #68                 // Method java/io/DataOutputStream.writeChar:(I)V
     105: iinc          3, 1
     108: goto          84
     111: iload_2
     112: aload_0
     113: getfield      #33                 // Field header:Lcom/ibm/icu/impl/Trie2$UTrie2Header;
     116: getfield      #21                 // Field com/ibm/icu/impl/Trie2$UTrie2Header.indexLength:I
     119: iadd
     120: istore_2
     121: iload_2
     122: ireturn

  public com.ibm.icu.impl.Trie2$CharSequenceIterator charSequenceIterator(java.lang.CharSequence, int);
    Code:
       0: new           #69                 // class com/ibm/icu/impl/Trie2$CharSequenceIterator
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #70                 // Method com/ibm/icu/impl/Trie2$CharSequenceIterator."<init>":(Lcom/ibm/icu/impl/Trie2;Ljava/lang/CharSequence;I)V
      10: areturn

  int rangeEnd(int, int, int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field highStart:I
       4: iload_2
       5: invokestatic  #71                 // Method java/lang/Math.min:(II)I
       8: istore        5
      10: iload_1
      11: iconst_1
      12: iadd
      13: istore        4
      15: iload         4
      17: iload         5
      19: if_icmpge     41
      22: aload_0
      23: iload         4
      25: invokevirtual #72                 // Method get:(I)I
      28: iload_3
      29: if_icmpeq     35
      32: goto          41
      35: iinc          4, 1
      38: goto          15
      41: iload         4
      43: aload_0
      44: getfield      #38                 // Field highStart:I
      47: if_icmplt     53
      50: iload_2
      51: istore        4
      53: iload         4
      55: iconst_1
      56: isub
      57: ireturn

  private static int initHash();
    Code:
       0: ldc           #73                 // int -2128831035
       2: ireturn

  private static int hashByte(int, int);
    Code:
       0: iload_0
       1: ldc           #74                 // int 16777619
       3: imul
       4: istore_0
       5: iload_0
       6: iload_1
       7: ixor
       8: istore_0
       9: iload_0
      10: ireturn

  private static int hashUChar32(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: sipush        255
       5: iand
       6: invokestatic  #2                  // Method hashByte:(II)I
       9: istore_0
      10: iload_0
      11: iload_1
      12: bipush        8
      14: ishr
      15: sipush        255
      18: iand
      19: invokestatic  #2                  // Method hashByte:(II)I
      22: istore_0
      23: iload_0
      24: iload_1
      25: bipush        16
      27: ishr
      28: invokestatic  #2                  // Method hashByte:(II)I
      31: istore_0
      32: iload_0
      33: ireturn

  private static int hashInt(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: sipush        255
       5: iand
       6: invokestatic  #2                  // Method hashByte:(II)I
       9: istore_0
      10: iload_0
      11: iload_1
      12: bipush        8
      14: ishr
      15: sipush        255
      18: iand
      19: invokestatic  #2                  // Method hashByte:(II)I
      22: istore_0
      23: iload_0
      24: iload_1
      25: bipush        16
      27: ishr
      28: sipush        255
      31: iand
      32: invokestatic  #2                  // Method hashByte:(II)I
      35: istore_0
      36: iload_0
      37: iload_1
      38: bipush        24
      40: ishr
      41: sipush        255
      44: iand
      45: invokestatic  #2                  // Method hashByte:(II)I
      48: istore_0
      49: iload_0
      50: ireturn

  static int access$000();
    Code:
       0: invokestatic  #5                  // Method initHash:()I
       3: ireturn

  static int access$100(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #4                  // Method hashUChar32:(II)I
       5: ireturn

  static int access$200(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #3                  // Method hashInt:(II)I
       5: ireturn

  static int access$300(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #2                  // Method hashByte:(II)I
       5: ireturn

  static {};
    Code:
       0: new           #75                 // class com/ibm/icu/impl/Trie2$1
       3: dup
       4: invokespecial #76                 // Method com/ibm/icu/impl/Trie2$1."<init>":()V
       7: putstatic     #61                 // Field defaultValueMapper:Lcom/ibm/icu/impl/Trie2$ValueMapper;
      10: return
}
