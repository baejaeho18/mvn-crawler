Compiled from "JavaTimeZone.java"
public class com.ibm.icu.impl.JavaTimeZone extends com.ibm.icu.util.TimeZone {
  private static final long serialVersionUID;

  private static final java.util.TreeSet<java.lang.String> AVAILABLESET;

  private java.util.TimeZone javatz;

  private transient java.util.Calendar javacal;

  private static java.lang.reflect.Method mObservesDaylightTime;

  private volatile transient boolean isFrozen;

  public com.ibm.icu.impl.JavaTimeZone();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Ljava/util/TimeZone;Ljava/lang/String;)V
       8: return

  public com.ibm.icu.impl.JavaTimeZone(java.util.TimeZone, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method com/ibm/icu/util/TimeZone."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field isFrozen:Z
       9: aload_2
      10: ifnonnull     18
      13: aload_1
      14: invokevirtual #5                  // Method java/util/TimeZone.getID:()Ljava/lang/String;
      17: astore_2
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field javatz:Ljava/util/TimeZone;
      23: aload_0
      24: aload_2
      25: invokevirtual #7                  // Method setID:(Ljava/lang/String;)V
      28: aload_0
      29: new           #8                  // class java/util/GregorianCalendar
      32: dup
      33: aload_0
      34: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
      37: invokespecial #9                  // Method java/util/GregorianCalendar."<init>":(Ljava/util/TimeZone;)V
      40: putfield      #10                 // Field javacal:Ljava/util/Calendar;
      43: return

  public static com.ibm.icu.impl.JavaTimeZone createTimeZone(java.lang.String);
    Code:
       0: aconst_null
       1: astore_1
       2: getstatic     #11                 // Field AVAILABLESET:Ljava/util/TreeSet;
       5: aload_0
       6: invokevirtual #12                 // Method java/util/TreeSet.contains:(Ljava/lang/Object;)Z
       9: ifeq          17
      12: aload_0
      13: invokestatic  #13                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      16: astore_1
      17: aload_1
      18: ifnonnull     52
      21: iconst_1
      22: newarray       boolean
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokestatic  #14                 // Method com/ibm/icu/util/TimeZone.getCanonicalID:(Ljava/lang/String;[Z)Ljava/lang/String;
      30: astore_3
      31: aload_2
      32: iconst_0
      33: baload
      34: ifeq          52
      37: getstatic     #11                 // Field AVAILABLESET:Ljava/util/TreeSet;
      40: aload_3
      41: invokevirtual #12                 // Method java/util/TreeSet.contains:(Ljava/lang/Object;)Z
      44: ifeq          52
      47: aload_3
      48: invokestatic  #13                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
      51: astore_1
      52: aload_1
      53: ifnonnull     58
      56: aconst_null
      57: areturn
      58: new           #15                 // class com/ibm/icu/impl/JavaTimeZone
      61: dup
      62: aload_1
      63: aload_0
      64: invokespecial #2                  // Method "<init>":(Ljava/util/TimeZone;Ljava/lang/String;)V
      67: areturn

  public int getOffset(int, int, int, int, int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
       4: iload_1
       5: iload_2
       6: iload_3
       7: iload         4
       9: iload         5
      11: iload         6
      13: invokevirtual #16                 // Method java/util/TimeZone.getOffset:(IIIIII)I
      16: ireturn

  public void getOffset(long, boolean, int[]);
    Code:
       0: aload_0
       1: getfield      #10                 // Field javacal:Ljava/util/Calendar;
       4: dup
       5: astore        5
       7: monitorenter
       8: iload_3
       9: ifeq          301
      12: bipush        6
      14: newarray       int
      16: astore        6
      18: lload_1
      19: aload         6
      21: invokestatic  #17                 // Method com/ibm/icu/impl/Grego.timeToFields:(J[I)[I
      24: pop
      25: aload         6
      27: iconst_5
      28: iaload
      29: istore        11
      31: iload         11
      33: sipush        1000
      36: irem
      37: istore        10
      39: iload         11
      41: sipush        1000
      44: idiv
      45: istore        11
      47: iload         11
      49: bipush        60
      51: irem
      52: istore        9
      54: iload         11
      56: bipush        60
      58: idiv
      59: istore        11
      61: iload         11
      63: bipush        60
      65: irem
      66: istore        8
      68: iload         11
      70: bipush        60
      72: idiv
      73: istore        7
      75: aload_0
      76: getfield      #10                 // Field javacal:Ljava/util/Calendar;
      79: invokevirtual #18                 // Method java/util/Calendar.clear:()V
      82: aload_0
      83: getfield      #10                 // Field javacal:Ljava/util/Calendar;
      86: aload         6
      88: iconst_0
      89: iaload
      90: aload         6
      92: iconst_1
      93: iaload
      94: aload         6
      96: iconst_2
      97: iaload
      98: iload         7
     100: iload         8
     102: iload         9
     104: invokevirtual #19                 // Method java/util/Calendar.set:(IIIIII)V
     107: aload_0
     108: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     111: bipush        14
     113: iload         10
     115: invokevirtual #21                 // Method java/util/Calendar.set:(II)V
     118: aload_0
     119: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     122: bipush        6
     124: invokevirtual #22                 // Method java/util/Calendar.get:(I)I
     127: istore        12
     129: aload_0
     130: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     133: bipush        11
     135: invokevirtual #22                 // Method java/util/Calendar.get:(I)I
     138: istore        13
     140: aload_0
     141: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     144: bipush        12
     146: invokevirtual #22                 // Method java/util/Calendar.get:(I)I
     149: istore        14
     151: aload_0
     152: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     155: bipush        13
     157: invokevirtual #22                 // Method java/util/Calendar.get:(I)I
     160: istore        15
     162: aload_0
     163: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     166: bipush        14
     168: invokevirtual #22                 // Method java/util/Calendar.get:(I)I
     171: istore        16
     173: aload         6
     175: iconst_4
     176: iaload
     177: iload         12
     179: if_icmpne     210
     182: iload         7
     184: iload         13
     186: if_icmpne     210
     189: iload         8
     191: iload         14
     193: if_icmpne     210
     196: iload         9
     198: iload         15
     200: if_icmpne     210
     203: iload         10
     205: iload         16
     207: if_icmpeq     298
     210: iload         12
     212: aload         6
     214: iconst_4
     215: iaload
     216: isub
     217: invokestatic  #23                 // Method java/lang/Math.abs:(I)I
     220: iconst_1
     221: if_icmple     228
     224: iconst_1
     225: goto          235
     228: iload         12
     230: aload         6
     232: iconst_4
     233: iaload
     234: isub
     235: istore        17
     237: iload         17
     239: bipush        24
     241: imul
     242: iload         13
     244: iadd
     245: iload         7
     247: isub
     248: bipush        60
     250: imul
     251: iload         14
     253: iadd
     254: iload         8
     256: isub
     257: bipush        60
     259: imul
     260: iload         15
     262: iadd
     263: iload         9
     265: isub
     266: sipush        1000
     269: imul
     270: iload         16
     272: iadd
     273: iload         10
     275: isub
     276: istore        18
     278: aload_0
     279: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     282: aload_0
     283: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     286: invokevirtual #24                 // Method java/util/Calendar.getTimeInMillis:()J
     289: iload         18
     291: i2l
     292: lsub
     293: lconst_1
     294: lsub
     295: invokevirtual #25                 // Method java/util/Calendar.setTimeInMillis:(J)V
     298: goto          309
     301: aload_0
     302: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     305: lload_1
     306: invokevirtual #25                 // Method java/util/Calendar.setTimeInMillis:(J)V
     309: aload         4
     311: iconst_0
     312: aload_0
     313: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     316: bipush        15
     318: invokevirtual #22                 // Method java/util/Calendar.get:(I)I
     321: iastore
     322: aload         4
     324: iconst_1
     325: aload_0
     326: getfield      #10                 // Field javacal:Ljava/util/Calendar;
     329: bipush        16
     331: invokevirtual #22                 // Method java/util/Calendar.get:(I)I
     334: iastore
     335: aload         5
     337: monitorexit
     338: goto          349
     341: astore        19
     343: aload         5
     345: monitorexit
     346: aload         19
     348: athrow
     349: return
    Exception table:
       from    to  target type
           8   338   341   any
         341   346   341   any

  public int getRawOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
       4: invokevirtual #26                 // Method java/util/TimeZone.getRawOffset:()I
       7: ireturn

  public boolean inDaylightTime(java.util.Date);
    Code:
       0: aload_0
       1: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
       4: aload_1
       5: invokevirtual #27                 // Method java/util/TimeZone.inDaylightTime:(Ljava/util/Date;)Z
       8: ireturn

  public void setRawOffset(int);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isFrozen:()Z
       4: ifeq          17
       7: new           #29                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #30                 // String Attempt to modify a frozen JavaTimeZone instance.
      13: invokespecial #31                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
      21: iload_1
      22: invokevirtual #32                 // Method java/util/TimeZone.setRawOffset:(I)V
      25: return

  public boolean useDaylightTime();
    Code:
       0: aload_0
       1: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
       4: invokevirtual #33                 // Method java/util/TimeZone.useDaylightTime:()Z
       7: ireturn

  public boolean observesDaylightTime();
    Code:
       0: getstatic     #34                 // Field mObservesDaylightTime:Ljava/lang/reflect/Method;
       3: ifnull        36
       6: getstatic     #34                 // Field mObservesDaylightTime:Ljava/lang/reflect/Method;
       9: aload_0
      10: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
      13: aconst_null
      14: checkcast     #35                 // class "[Ljava/lang/Object;"
      17: invokevirtual #36                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #37                 // class java/lang/Boolean
      23: invokevirtual #38                 // Method java/lang/Boolean.booleanValue:()Z
      26: ireturn
      27: astore_1
      28: goto          36
      31: astore_1
      32: goto          36
      35: astore_1
      36: aload_0
      37: invokespecial #42                 // Method com/ibm/icu/util/TimeZone.observesDaylightTime:()Z
      40: ireturn
    Exception table:
       from    to  target type
           6    26    27   Class java/lang/IllegalAccessException
           6    26    31   Class java/lang/IllegalArgumentException
           6    26    35   Class java/lang/reflect/InvocationTargetException

  public int getDSTSavings();
    Code:
       0: aload_0
       1: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
       4: invokevirtual #43                 // Method java/util/TimeZone.getDSTSavings:()I
       7: ireturn

  public java.util.TimeZone unwrap();
    Code:
       0: aload_0
       1: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
       4: areturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isFrozen:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #44                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
      13: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #45                 // Method com/ibm/icu/util/TimeZone.hashCode:()I
       4: aload_0
       5: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
       8: invokevirtual #46                 // Method java/lang/Object.hashCode:()I
      11: iadd
      12: ireturn

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: new           #8                  // class java/util/GregorianCalendar
       8: dup
       9: aload_0
      10: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
      13: invokespecial #9                  // Method java/util/GregorianCalendar."<init>":(Ljava/util/TimeZone;)V
      16: putfield      #10                 // Field javacal:Ljava/util/Calendar;
      19: return

  public boolean isFrozen();
    Code:
       0: aload_0
       1: getfield      #4                  // Field isFrozen:Z
       4: ireturn

  public com.ibm.icu.util.TimeZone freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field isFrozen:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.util.TimeZone cloneAsThawed();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method com/ibm/icu/util/TimeZone.cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
       4: checkcast     #15                 // class com/ibm/icu/impl/JavaTimeZone
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
      13: invokevirtual #49                 // Method java/util/TimeZone.clone:()Ljava/lang/Object;
      16: checkcast     #50                 // class java/util/TimeZone
      19: putfield      #6                  // Field javatz:Ljava/util/TimeZone;
      22: aload_1
      23: new           #8                  // class java/util/GregorianCalendar
      26: dup
      27: aload_0
      28: getfield      #6                  // Field javatz:Ljava/util/TimeZone;
      31: invokespecial #9                  // Method java/util/GregorianCalendar."<init>":(Ljava/util/TimeZone;)V
      34: putfield      #10                 // Field javacal:Ljava/util/Calendar;
      37: aload_1
      38: iconst_0
      39: putfield      #4                  // Field isFrozen:Z
      42: aload_1
      43: areturn

  public java.lang.Object cloneAsThawed();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method cloneAsThawed:()Lcom/ibm/icu/util/TimeZone;
       4: areturn

  public java.lang.Object freeze();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method freeze:()Lcom/ibm/icu/util/TimeZone;
       4: areturn

  static {};
    Code:
       0: new           #52                 // class java/util/TreeSet
       3: dup
       4: invokespecial #53                 // Method java/util/TreeSet."<init>":()V
       7: putstatic     #11                 // Field AVAILABLESET:Ljava/util/TreeSet;
      10: invokestatic  #54                 // Method java/util/TimeZone.getAvailableIDs:()[Ljava/lang/String;
      13: astore_0
      14: iconst_0
      15: istore_1
      16: iload_1
      17: aload_0
      18: arraylength
      19: if_icmpge     38
      22: getstatic     #11                 // Field AVAILABLESET:Ljava/util/TreeSet;
      25: aload_0
      26: iload_1
      27: aaload
      28: invokevirtual #55                 // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
      31: pop
      32: iinc          1, 1
      35: goto          16
      38: ldc           #50                 // class java/util/TimeZone
      40: ldc           #56                 // String observesDaylightTime
      42: aconst_null
      43: checkcast     #57                 // class "[Ljava/lang/Class;"
      46: invokevirtual #58                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      49: putstatic     #34                 // Field mObservesDaylightTime:Ljava/lang/reflect/Method;
      52: goto          60
      55: astore_1
      56: goto          60
      59: astore_1
      60: return
    Exception table:
       from    to  target type
          38    52    55   Class java/lang/NoSuchMethodException
          38    52    59   Class java/lang/SecurityException
}
