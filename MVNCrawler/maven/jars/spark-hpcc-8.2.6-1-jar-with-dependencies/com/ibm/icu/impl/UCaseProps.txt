Compiled from "UCaseProps.java"
public final class com.ibm.icu.impl.UCaseProps {
  private static final byte[] flagsOffset;

  public static final int MAX_STRING_LENGTH;

  public static final int LOC_ROOT;

  static final int LOC_TURKISH;

  static final int LOC_LITHUANIAN;

  static final int LOC_GREEK;

  public static final int LOC_DUTCH;

  private static final java.lang.String iDot;

  private static final java.lang.String jDot;

  private static final java.lang.String iOgonekDot;

  private static final java.lang.String iDotGrave;

  private static final java.lang.String iDotAcute;

  private static final java.lang.String iDotTilde;

  static final int FOLD_CASE_OPTIONS_MASK;

  public static final java.lang.StringBuilder dummyStringBuilder;

  private int[] indexes;

  private java.lang.String exceptions;

  private char[] unfold;

  private com.ibm.icu.impl.Trie2_16 trie;

  private static final java.lang.String DATA_NAME;

  private static final java.lang.String DATA_TYPE;

  private static final java.lang.String DATA_FILE_NAME;

  private static final int FMT;

  private static final int IX_TRIE_SIZE;

  private static final int IX_EXC_LENGTH;

  private static final int IX_UNFOLD_LENGTH;

  private static final int IX_TOP;

  public static final int TYPE_MASK;

  public static final int NONE;

  public static final int LOWER;

  public static final int UPPER;

  public static final int TITLE;

  static final int IGNORABLE;

  private static final int SENSITIVE;

  private static final int EXCEPTION;

  private static final int DOT_MASK;

  private static final int SOFT_DOTTED;

  private static final int ABOVE;

  private static final int OTHER_ACCENT;

  private static final int DELTA_SHIFT;

  private static final int EXC_SHIFT;

  private static final int EXC_LOWER;

  private static final int EXC_FOLD;

  private static final int EXC_UPPER;

  private static final int EXC_TITLE;

  private static final int EXC_CLOSURE;

  private static final int EXC_FULL_MAPPINGS;

  private static final int EXC_DOUBLE_SLOTS;

  private static final int EXC_DOT_SHIFT;

  private static final int EXC_CONDITIONAL_SPECIAL;

  private static final int EXC_CONDITIONAL_FOLD;

  private static final int FULL_LOWER;

  private static final int CLOSURE_MAX_LENGTH;

  private static final int UNFOLD_ROWS;

  private static final int UNFOLD_ROW_WIDTH;

  private static final int UNFOLD_STRING_WIDTH;

  public static final com.ibm.icu.impl.UCaseProps INSTANCE;

  private com.ibm.icu.impl.UCaseProps() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: ldc           #3                  // String ucase.icu
       6: invokestatic  #4                  // Method com/ibm/icu/impl/ICUBinary.getRequiredData:(Ljava/lang/String;)Ljava/nio/ByteBuffer;
       9: astore_1
      10: aload_0
      11: aload_1
      12: invokespecial #5                  // Method readData:(Ljava/nio/ByteBuffer;)V
      15: return

  private final void readData(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #6                  // int 1665225541
       3: new           #7                  // class com/ibm/icu/impl/UCaseProps$IsAcceptable
       6: dup
       7: aconst_null
       8: invokespecial #8                  // Method com/ibm/icu/impl/UCaseProps$IsAcceptable."<init>":(Lcom/ibm/icu/impl/UCaseProps$1;)V
      11: invokestatic  #9                  // Method com/ibm/icu/impl/ICUBinary.readHeader:(Ljava/nio/ByteBuffer;ILcom/ibm/icu/impl/ICUBinary$Authenticate;)I
      14: pop
      15: aload_1
      16: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:()I
      19: istore_2
      20: iload_2
      21: bipush        16
      23: if_icmpge     36
      26: new           #11                 // class java/io/IOException
      29: dup
      30: ldc           #12                 // String indexes[0] too small in ucase.icu
      32: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_2
      38: newarray       int
      40: putfield      #14                 // Field indexes:[I
      43: aload_0
      44: getfield      #14                 // Field indexes:[I
      47: iconst_0
      48: iload_2
      49: iastore
      50: iconst_1
      51: istore_3
      52: iload_3
      53: iload_2
      54: if_icmpge     73
      57: aload_0
      58: getfield      #14                 // Field indexes:[I
      61: iload_3
      62: aload_1
      63: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:()I
      66: iastore
      67: iinc          3, 1
      70: goto          52
      73: aload_0
      74: aload_1
      75: invokestatic  #15                 // Method com/ibm/icu/impl/Trie2_16.createFromSerialized:(Ljava/nio/ByteBuffer;)Lcom/ibm/icu/impl/Trie2_16;
      78: putfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
      81: aload_0
      82: getfield      #14                 // Field indexes:[I
      85: iconst_2
      86: iaload
      87: istore_3
      88: aload_0
      89: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
      92: invokevirtual #17                 // Method com/ibm/icu/impl/Trie2_16.getSerializedLength:()I
      95: istore        4
      97: iload         4
      99: iload_3
     100: if_icmple     113
     103: new           #11                 // class java/io/IOException
     106: dup
     107: ldc           #18                 // String ucase.icu: not enough bytes for the trie
     109: invokespecial #13                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload_1
     114: iload_3
     115: iload         4
     117: isub
     118: invokestatic  #19                 // Method com/ibm/icu/impl/ICUBinary.skipBytes:(Ljava/nio/ByteBuffer;I)V
     121: aload_0
     122: getfield      #14                 // Field indexes:[I
     125: iconst_3
     126: iaload
     127: istore_2
     128: iload_2
     129: ifle          142
     132: aload_0
     133: aload_1
     134: iload_2
     135: iconst_0
     136: invokestatic  #20                 // Method com/ibm/icu/impl/ICUBinary.getString:(Ljava/nio/ByteBuffer;II)Ljava/lang/String;
     139: putfield      #21                 // Field exceptions:Ljava/lang/String;
     142: aload_0
     143: getfield      #14                 // Field indexes:[I
     146: iconst_4
     147: iaload
     148: istore_2
     149: iload_2
     150: ifle          163
     153: aload_0
     154: aload_1
     155: iload_2
     156: iconst_0
     157: invokestatic  #22                 // Method com/ibm/icu/impl/ICUBinary.getChars:(Ljava/nio/ByteBuffer;II)[C
     160: putfield      #23                 // Field unfold:[C
     163: return

  public final void addPropertyStarts(com.ibm.icu.text.UnicodeSet);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: invokevirtual #24                 // Method com/ibm/icu/impl/Trie2_16.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          46
      17: aload_2
      18: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #27                 // class com/ibm/icu/impl/Trie2$Range
      26: dup
      27: astore_3
      28: getfield      #28                 // Field com/ibm/icu/impl/Trie2$Range.leadSurrogate:Z
      31: ifne          46
      34: aload_1
      35: aload_3
      36: getfield      #29                 // Field com/ibm/icu/impl/Trie2$Range.startCodePoint:I
      39: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
      42: pop
      43: goto          8
      46: return

  private static final int getExceptionsOffset(int);
    Code:
       0: iload_0
       1: iconst_5
       2: ishr
       3: ireturn

  static final boolean propsHasException(int);
    Code:
       0: iload_0
       1: bipush        16
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static final boolean hasSlot(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: iload_1
       3: ishl
       4: iand
       5: ifeq          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static final byte slotOffset(int, int);
    Code:
       0: getstatic     #31                 // Field flagsOffset:[B
       3: iload_0
       4: iconst_1
       5: iload_1
       6: ishl
       7: iconst_1
       8: isub
       9: iand
      10: baload
      11: ireturn

  private final long getSlotValueAndOffset(int, int, int);
    Code:
       0: iload_1
       1: sipush        256
       4: iand
       5: ifne          30
       8: iload_3
       9: iload_1
      10: iload_2
      11: invokestatic  #32                 // Method slotOffset:(II)B
      14: iadd
      15: istore_3
      16: aload_0
      17: getfield      #21                 // Field exceptions:Ljava/lang/String;
      20: iload_3
      21: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      24: i2l
      25: lstore        4
      27: goto          71
      30: iload_3
      31: iconst_2
      32: iload_1
      33: iload_2
      34: invokestatic  #32                 // Method slotOffset:(II)B
      37: imul
      38: iadd
      39: istore_3
      40: aload_0
      41: getfield      #21                 // Field exceptions:Ljava/lang/String;
      44: iload_3
      45: iinc          3, 1
      48: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      51: i2l
      52: lstore        4
      54: lload         4
      56: bipush        16
      58: lshl
      59: aload_0
      60: getfield      #21                 // Field exceptions:Ljava/lang/String;
      63: iload_3
      64: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      67: i2l
      68: lor
      69: lstore        4
      71: lload         4
      73: iload_3
      74: i2l
      75: bipush        32
      77: lshl
      78: lor
      79: lreturn

  private final int getSlotValue(int, int, int);
    Code:
       0: iload_1
       1: sipush        256
       4: iand
       5: ifne          29
       8: iload_3
       9: iload_1
      10: iload_2
      11: invokestatic  #32                 // Method slotOffset:(II)B
      14: iadd
      15: istore_3
      16: aload_0
      17: getfield      #21                 // Field exceptions:Ljava/lang/String;
      20: iload_3
      21: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      24: istore        4
      26: goto          68
      29: iload_3
      30: iconst_2
      31: iload_1
      32: iload_2
      33: invokestatic  #32                 // Method slotOffset:(II)B
      36: imul
      37: iadd
      38: istore_3
      39: aload_0
      40: getfield      #21                 // Field exceptions:Ljava/lang/String;
      43: iload_3
      44: iinc          3, 1
      47: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      50: istore        4
      52: iload         4
      54: bipush        16
      56: ishl
      57: aload_0
      58: getfield      #21                 // Field exceptions:Ljava/lang/String;
      61: iload_3
      62: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      65: ior
      66: istore        4
      68: iload         4
      70: ireturn

  public final int tolower(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: istore_2
       9: iload_2
      10: invokestatic  #35                 // Method propsHasException:(I)Z
      13: ifne          33
      16: iload_2
      17: invokestatic  #36                 // Method isUpperOrTitleFromProps:(I)Z
      20: ifeq          69
      23: iload_1
      24: iload_2
      25: invokestatic  #37                 // Method getDelta:(I)I
      28: iadd
      29: istore_1
      30: goto          69
      33: iload_2
      34: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      37: istore_3
      38: aload_0
      39: getfield      #21                 // Field exceptions:Ljava/lang/String;
      42: iload_3
      43: iinc          3, 1
      46: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      49: istore        4
      51: iload         4
      53: iconst_0
      54: invokestatic  #39                 // Method hasSlot:(II)Z
      57: ifeq          69
      60: aload_0
      61: iload         4
      63: iconst_0
      64: iload_3
      65: invokespecial #40                 // Method getSlotValue:(III)I
      68: istore_1
      69: iload_1
      70: ireturn

  public final int toupper(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: istore_2
       9: iload_2
      10: invokestatic  #35                 // Method propsHasException:(I)Z
      13: ifne          34
      16: iload_2
      17: invokestatic  #41                 // Method getTypeFromProps:(I)I
      20: iconst_1
      21: if_icmpne     70
      24: iload_1
      25: iload_2
      26: invokestatic  #37                 // Method getDelta:(I)I
      29: iadd
      30: istore_1
      31: goto          70
      34: iload_2
      35: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      38: istore_3
      39: aload_0
      40: getfield      #21                 // Field exceptions:Ljava/lang/String;
      43: iload_3
      44: iinc          3, 1
      47: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      50: istore        4
      52: iload         4
      54: iconst_2
      55: invokestatic  #39                 // Method hasSlot:(II)Z
      58: ifeq          70
      61: aload_0
      62: iload         4
      64: iconst_2
      65: iload_3
      66: invokespecial #40                 // Method getSlotValue:(III)I
      69: istore_1
      70: iload_1
      71: ireturn

  public final int totitle(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: istore_2
       9: iload_2
      10: invokestatic  #35                 // Method propsHasException:(I)Z
      13: ifne          34
      16: iload_2
      17: invokestatic  #41                 // Method getTypeFromProps:(I)I
      20: iconst_1
      21: if_icmpne     94
      24: iload_1
      25: iload_2
      26: invokestatic  #37                 // Method getDelta:(I)I
      29: iadd
      30: istore_1
      31: goto          94
      34: iload_2
      35: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      38: istore_3
      39: aload_0
      40: getfield      #21                 // Field exceptions:Ljava/lang/String;
      43: iload_3
      44: iinc          3, 1
      47: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      50: istore        4
      52: iload         4
      54: iconst_3
      55: invokestatic  #39                 // Method hasSlot:(II)Z
      58: ifeq          67
      61: iconst_3
      62: istore        5
      64: goto          84
      67: iload         4
      69: iconst_2
      70: invokestatic  #39                 // Method hasSlot:(II)Z
      73: ifeq          82
      76: iconst_2
      77: istore        5
      79: goto          84
      82: iload_1
      83: ireturn
      84: aload_0
      85: iload         4
      87: iload         5
      89: iload_3
      90: invokespecial #40                 // Method getSlotValue:(III)I
      93: istore_1
      94: iload_1
      95: ireturn

  public final void addCaseClosure(int, com.ibm.icu.text.UnicodeSet);
    Code:
       0: iload_1
       1: lookupswitch  { // 4
                    73: 44
                   105: 52
                   304: 60
                   305: 68
               default: 69
          }
      44: aload_2
      45: bipush        105
      47: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
      50: pop
      51: return
      52: aload_2
      53: bipush        73
      55: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
      58: pop
      59: return
      60: aload_2
      61: ldc           #42                 // String i̇
      63: invokevirtual #43                 // Method com/ibm/icu/text/UnicodeSet.add:(Ljava/lang/CharSequence;)Lcom/ibm/icu/text/UnicodeSet;
      66: pop
      67: return
      68: return
      69: aload_0
      70: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
      73: iload_1
      74: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
      77: istore_3
      78: iload_3
      79: invokestatic  #35                 // Method propsHasException:(I)Z
      82: ifne          115
      85: iload_3
      86: invokestatic  #41                 // Method getTypeFromProps:(I)I
      89: ifeq          419
      92: iload_3
      93: invokestatic  #37                 // Method getDelta:(I)I
      96: istore        4
      98: iload         4
     100: ifeq          112
     103: aload_2
     104: iload_1
     105: iload         4
     107: iadd
     108: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     111: pop
     112: goto          419
     115: iload_3
     116: invokestatic  #38                 // Method getExceptionsOffset:(I)I
     119: istore        5
     121: aload_0
     122: getfield      #21                 // Field exceptions:Ljava/lang/String;
     125: iload         5
     127: iinc          5, 1
     130: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
     133: istore        7
     135: iload         5
     137: istore        4
     139: iconst_0
     140: istore        8
     142: iload         8
     144: iconst_3
     145: if_icmpgt     185
     148: iload         7
     150: iload         8
     152: invokestatic  #39                 // Method hasSlot:(II)Z
     155: ifeq          179
     158: iload         4
     160: istore        5
     162: aload_0
     163: iload         7
     165: iload         8
     167: iload         5
     169: invokespecial #40                 // Method getSlotValue:(III)I
     172: istore_1
     173: aload_2
     174: iload_1
     175: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     178: pop
     179: iinc          8, 1
     182: goto          142
     185: iload         7
     187: bipush        6
     189: invokestatic  #39                 // Method hasSlot:(II)Z
     192: ifeq          232
     195: iload         4
     197: istore        5
     199: aload_0
     200: iload         7
     202: bipush        6
     204: iload         5
     206: invokespecial #44                 // Method getSlotValueAndOffset:(III)J
     209: lstore        12
     211: lload         12
     213: l2i
     214: bipush        15
     216: iand
     217: istore        9
     219: lload         12
     221: bipush        32
     223: lshr
     224: l2i
     225: iconst_1
     226: iadd
     227: istore        6
     229: goto          238
     232: iconst_0
     233: istore        9
     235: iconst_0
     236: istore        6
     238: iload         7
     240: bipush        7
     242: invokestatic  #39                 // Method hasSlot:(II)Z
     245: ifeq          373
     248: iload         4
     250: istore        5
     252: aload_0
     253: iload         7
     255: bipush        7
     257: iload         5
     259: invokespecial #44                 // Method getSlotValueAndOffset:(III)J
     262: lstore        12
     264: lload         12
     266: l2i
     267: istore        10
     269: lload         12
     271: bipush        32
     273: lshr
     274: l2i
     275: iconst_1
     276: iadd
     277: istore        5
     279: iload         10
     281: ldc           #45                 // int 65535
     283: iand
     284: istore        10
     286: iload         5
     288: iload         10
     290: bipush        15
     292: iand
     293: iadd
     294: istore        5
     296: iload         10
     298: iconst_4
     299: ishr
     300: istore        10
     302: iload         10
     304: bipush        15
     306: iand
     307: istore        11
     309: iload         11
     311: ifeq          340
     314: aload_2
     315: aload_0
     316: getfield      #21                 // Field exceptions:Ljava/lang/String;
     319: iload         5
     321: iload         5
     323: iload         11
     325: iadd
     326: invokevirtual #46                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     329: invokevirtual #43                 // Method com/ibm/icu/text/UnicodeSet.add:(Ljava/lang/CharSequence;)Lcom/ibm/icu/text/UnicodeSet;
     332: pop
     333: iload         5
     335: iload         11
     337: iadd
     338: istore        5
     340: iload         10
     342: iconst_4
     343: ishr
     344: istore        10
     346: iload         5
     348: iload         10
     350: bipush        15
     352: iand
     353: iadd
     354: istore        5
     356: iload         10
     358: iconst_4
     359: ishr
     360: istore        10
     362: iload         5
     364: iload         10
     366: iadd
     367: istore        5
     369: iload         5
     371: istore        6
     373: iload         6
     375: iload         9
     377: iadd
     378: istore        12
     380: iload         6
     382: istore        8
     384: iload         8
     386: iload         12
     388: if_icmpge     419
     391: aload_0
     392: getfield      #21                 // Field exceptions:Ljava/lang/String;
     395: iload         8
     397: invokevirtual #47                 // Method java/lang/String.codePointAt:(I)I
     400: istore_1
     401: aload_2
     402: iload_1
     403: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     406: pop
     407: iload         8
     409: iload_1
     410: invokestatic  #48                 // Method com/ibm/icu/text/UTF16.getCharCount:(I)I
     413: iadd
     414: istore        8
     416: goto          384
     419: return

  private final int strcmpMax(java.lang.String, int, int);
    Code:
       0: aload_1
       1: invokevirtual #49                 // Method java/lang/String.length:()I
       4: istore        5
       6: iload_3
       7: iload         5
       9: isub
      10: istore_3
      11: iconst_0
      12: istore        4
      14: aload_1
      15: iload         4
      17: iinc          4, 1
      20: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      23: istore        6
      25: aload_0
      26: getfield      #23                 // Field unfold:[C
      29: iload_2
      30: iinc          2, 1
      33: caload
      34: istore        7
      36: iload         7
      38: ifne          43
      41: iconst_1
      42: ireturn
      43: iload         6
      45: iload         7
      47: isub
      48: istore        6
      50: iload         6
      52: ifeq          58
      55: iload         6
      57: ireturn
      58: iinc          5, -1
      61: iload         5
      63: ifgt          14
      66: iload_3
      67: ifeq          79
      70: aload_0
      71: getfield      #23                 // Field unfold:[C
      74: iload_2
      75: caload
      76: ifne          81
      79: iconst_0
      80: ireturn
      81: iload_3
      82: ineg
      83: ireturn

  public final boolean addStringCaseClosure(java.lang.String, com.ibm.icu.text.UnicodeSet);
    Code:
       0: aload_0
       1: getfield      #23                 // Field unfold:[C
       4: ifnull        11
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #49                 // Method java/lang/String.length:()I
      17: istore        4
      19: iload         4
      21: iconst_1
      22: if_icmpgt     27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: getfield      #23                 // Field unfold:[C
      31: iconst_0
      32: caload
      33: istore        9
      35: aload_0
      36: getfield      #23                 // Field unfold:[C
      39: iconst_1
      40: caload
      41: istore        10
      43: aload_0
      44: getfield      #23                 // Field unfold:[C
      47: iconst_2
      48: caload
      49: istore        11
      51: iload         4
      53: iload         11
      55: if_icmple     60
      58: iconst_0
      59: ireturn
      60: iconst_0
      61: istore        5
      63: iload         9
      65: istore        6
      67: iload         5
      69: iload         6
      71: if_icmpge     190
      74: iload         5
      76: iload         6
      78: iadd
      79: iconst_2
      80: idiv
      81: istore_3
      82: iload_3
      83: iconst_1
      84: iadd
      85: iload         10
      87: imul
      88: istore        8
      90: aload_0
      91: aload_1
      92: iload         8
      94: iload         11
      96: invokespecial #50                 // Method strcmpMax:(Ljava/lang/String;II)I
      99: istore        7
     101: iload         7
     103: ifne          171
     106: iload         11
     108: istore_3
     109: iload_3
     110: iload         10
     112: if_icmpge     169
     115: aload_0
     116: getfield      #23                 // Field unfold:[C
     119: iload         8
     121: iload_3
     122: iadd
     123: caload
     124: ifeq          169
     127: aload_0
     128: getfield      #23                 // Field unfold:[C
     131: iload         8
     133: aload_0
     134: getfield      #23                 // Field unfold:[C
     137: arraylength
     138: iload_3
     139: invokestatic  #51                 // Method com/ibm/icu/text/UTF16.charAt:([CIII)I
     142: istore        12
     144: aload_2
     145: iload         12
     147: invokevirtual #30                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     150: pop
     151: aload_0
     152: iload         12
     154: aload_2
     155: invokevirtual #52                 // Method addCaseClosure:(ILcom/ibm/icu/text/UnicodeSet;)V
     158: iload_3
     159: iload         12
     161: invokestatic  #48                 // Method com/ibm/icu/text/UTF16.getCharCount:(I)I
     164: iadd
     165: istore_3
     166: goto          109
     169: iconst_1
     170: ireturn
     171: iload         7
     173: ifge          182
     176: iload_3
     177: istore        6
     179: goto          67
     182: iload_3
     183: iconst_1
     184: iadd
     185: istore        5
     187: goto          67
     190: iconst_0
     191: ireturn

  public final int getType(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: invokestatic  #41                 // Method getTypeFromProps:(I)I
      11: ireturn

  public final int getTypeOrIgnorable(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: invokestatic  #53                 // Method getTypeAndIgnorableFromProps:(I)I
      11: ireturn

  public final int getDotType(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: istore_2
       9: iload_2
      10: invokestatic  #35                 // Method propsHasException:(I)Z
      13: ifne          21
      16: iload_2
      17: bipush        96
      19: iand
      20: ireturn
      21: aload_0
      22: getfield      #21                 // Field exceptions:Ljava/lang/String;
      25: iload_2
      26: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      29: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      32: bipush        7
      34: ishr
      35: bipush        96
      37: iand
      38: ireturn

  public final boolean isSoftDotted(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #54                 // Method getDotType:(I)I
       5: bipush        32
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final boolean isCaseSensitive(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: bipush        8
      10: iand
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public static final int getCaseLocale(java.util.Locale);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method java/util/Locale.getLanguage:()Ljava/lang/String;
       4: invokestatic  #56                 // Method getCaseLocale:(Ljava/lang/String;)I
       7: ireturn

  public static final int getCaseLocale(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method com/ibm/icu/util/ULocale.getLanguage:()Ljava/lang/String;
       4: invokestatic  #56                 // Method getCaseLocale:(Ljava/lang/String;)I
       7: ireturn

  private static final int getCaseLocale(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method java/lang/String.length:()I
       4: iconst_2
       5: if_icmpne     82
       8: aload_0
       9: ldc           #58                 // String en
      11: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifne          27
      17: aload_0
      18: iconst_0
      19: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      22: bipush        116
      24: if_icmple     29
      27: iconst_1
      28: ireturn
      29: aload_0
      30: ldc           #60                 // String tr
      32: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifne          47
      38: aload_0
      39: ldc           #61                 // String az
      41: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          49
      47: iconst_2
      48: ireturn
      49: aload_0
      50: ldc           #62                 // String el
      52: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          60
      58: iconst_4
      59: ireturn
      60: aload_0
      61: ldc           #63                 // String lt
      63: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          71
      69: iconst_3
      70: ireturn
      71: aload_0
      72: ldc           #64                 // String nl
      74: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          143
      80: iconst_5
      81: ireturn
      82: aload_0
      83: invokevirtual #49                 // Method java/lang/String.length:()I
      86: iconst_3
      87: if_icmpne     143
      90: aload_0
      91: ldc           #65                 // String tur
      93: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifne          108
      99: aload_0
     100: ldc           #66                 // String aze
     102: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     105: ifeq          110
     108: iconst_2
     109: ireturn
     110: aload_0
     111: ldc           #67                 // String ell
     113: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     116: ifeq          121
     119: iconst_4
     120: ireturn
     121: aload_0
     122: ldc           #68                 // String lit
     124: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     127: ifeq          132
     130: iconst_3
     131: ireturn
     132: aload_0
     133: ldc           #69                 // String nld
     135: invokevirtual #59                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     138: ifeq          143
     141: iconst_5
     142: ireturn
     143: iconst_1
     144: ireturn

  private final boolean isFollowedByCasedLetter(com.ibm.icu.impl.UCaseProps$ContextIterator, int);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: iload_2
       8: invokeinterface #70,  2           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.reset:(I)V
      13: aload_1
      14: invokeinterface #71,  1           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.next:()I
      19: dup
      20: istore_3
      21: iflt          53
      24: aload_0
      25: iload_3
      26: invokevirtual #72                 // Method getTypeOrIgnorable:(I)I
      29: istore        4
      31: iload         4
      33: iconst_4
      34: iand
      35: ifeq          41
      38: goto          50
      41: iload         4
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: iconst_0
      49: ireturn
      50: goto          13
      53: iconst_0
      54: ireturn

  private final boolean isPrecededBySoftDotted(com.ibm.icu.impl.UCaseProps$ContextIterator);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: iconst_m1
       8: invokeinterface #70,  2           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.reset:(I)V
      13: aload_1
      14: invokeinterface #71,  1           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.next:()I
      19: dup
      20: istore_2
      21: iflt          46
      24: aload_0
      25: iload_2
      26: invokevirtual #54                 // Method getDotType:(I)I
      29: istore_3
      30: iload_3
      31: bipush        32
      33: if_icmpne     38
      36: iconst_1
      37: ireturn
      38: iload_3
      39: bipush        96
      41: if_icmpeq     13
      44: iconst_0
      45: ireturn
      46: iconst_0
      47: ireturn

  private final boolean isPrecededBy_I(com.ibm.icu.impl.UCaseProps$ContextIterator);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: iconst_m1
       8: invokeinterface #70,  2           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.reset:(I)V
      13: aload_1
      14: invokeinterface #71,  1           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.next:()I
      19: dup
      20: istore_2
      21: iflt          46
      24: iload_2
      25: bipush        73
      27: if_icmpne     32
      30: iconst_1
      31: ireturn
      32: aload_0
      33: iload_2
      34: invokevirtual #54                 // Method getDotType:(I)I
      37: istore_3
      38: iload_3
      39: bipush        96
      41: if_icmpeq     13
      44: iconst_0
      45: ireturn
      46: iconst_0
      47: ireturn

  private final boolean isFollowedByMoreAbove(com.ibm.icu.impl.UCaseProps$ContextIterator);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: iconst_1
       8: invokeinterface #70,  2           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.reset:(I)V
      13: aload_1
      14: invokeinterface #71,  1           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.next:()I
      19: dup
      20: istore_2
      21: iflt          46
      24: aload_0
      25: iload_2
      26: invokevirtual #54                 // Method getDotType:(I)I
      29: istore_3
      30: iload_3
      31: bipush        64
      33: if_icmpne     38
      36: iconst_1
      37: ireturn
      38: iload_3
      39: bipush        96
      41: if_icmpeq     13
      44: iconst_0
      45: ireturn
      46: iconst_0
      47: ireturn

  private final boolean isFollowedByDotAbove(com.ibm.icu.impl.UCaseProps$ContextIterator);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: iconst_1
       8: invokeinterface #70,  2           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.reset:(I)V
      13: aload_1
      14: invokeinterface #71,  1           // InterfaceMethod com/ibm/icu/impl/UCaseProps$ContextIterator.next:()I
      19: dup
      20: istore_2
      21: iflt          47
      24: iload_2
      25: sipush        775
      28: if_icmpne     33
      31: iconst_1
      32: ireturn
      33: aload_0
      34: iload_2
      35: invokevirtual #54                 // Method getDotType:(I)I
      38: istore_3
      39: iload_3
      40: bipush        96
      42: if_icmpeq     13
      45: iconst_0
      46: ireturn
      47: iconst_0
      48: ireturn

  public final int toFullLower(int, com.ibm.icu.impl.UCaseProps$ContextIterator, java.lang.Appendable, int);
    Code:
       0: iload_1
       1: istore        5
       3: aload_0
       4: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       7: iload_1
       8: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
      11: istore        6
      13: iload         6
      15: invokestatic  #35                 // Method propsHasException:(I)Z
      18: ifne          41
      21: iload         6
      23: invokestatic  #36                 // Method isUpperOrTitleFromProps:(I)Z
      26: ifeq          488
      29: iload_1
      30: iload         6
      32: invokestatic  #37                 // Method getDelta:(I)I
      35: iadd
      36: istore        5
      38: goto          488
      41: iload         6
      43: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      46: istore        7
      48: aload_0
      49: getfield      #21                 // Field exceptions:Ljava/lang/String;
      52: iload         7
      54: iinc          7, 1
      57: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      60: istore        9
      62: iload         7
      64: istore        8
      66: iload         9
      68: sipush        16384
      71: iand
      72: ifeq          390
      75: iload         4
      77: iconst_3
      78: if_icmpne     268
      81: iload_1
      82: bipush        73
      84: if_icmpeq     100
      87: iload_1
      88: bipush        74
      90: if_icmpeq     100
      93: iload_1
      94: sipush        302
      97: if_icmpne     108
     100: aload_0
     101: aload_2
     102: invokespecial #73                 // Method isFollowedByMoreAbove:(Lcom/ibm/icu/impl/UCaseProps$ContextIterator;)Z
     105: ifne          129
     108: iload_1
     109: sipush        204
     112: if_icmpeq     129
     115: iload_1
     116: sipush        205
     119: if_icmpeq     129
     122: iload_1
     123: sipush        296
     126: if_icmpne     268
     129: iload_1
     130: lookupswitch  { // 6
                    73: 188
                    74: 199
                   204: 221
                   205: 232
                   296: 243
                   302: 210
               default: 254
          }
     188: aload_3
     189: ldc           #42                 // String i̇
     191: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     196: pop
     197: iconst_2
     198: ireturn
     199: aload_3
     200: ldc           #75                 // String j̇
     202: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     207: pop
     208: iconst_2
     209: ireturn
     210: aload_3
     211: ldc           #76                 // String į̇
     213: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     218: pop
     219: iconst_2
     220: ireturn
     221: aload_3
     222: ldc           #77                 // String i̇̀
     224: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     229: pop
     230: iconst_3
     231: ireturn
     232: aload_3
     233: ldc           #78                 // String i̇́
     235: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     240: pop
     241: iconst_3
     242: ireturn
     243: aload_3
     244: ldc           #79                 // String i̇̃
     246: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     251: pop
     252: iconst_3
     253: ireturn
     254: iconst_0
     255: ireturn
     256: astore        11
     258: new           #80                 // class com/ibm/icu/util/ICUUncheckedIOException
     261: dup
     262: aload         11
     264: invokespecial #81                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
     267: athrow
     268: iload         4
     270: iconst_2
     271: if_icmpne     284
     274: iload_1
     275: sipush        304
     278: if_icmpne     284
     281: bipush        105
     283: ireturn
     284: iload         4
     286: iconst_2
     287: if_icmpne     307
     290: iload_1
     291: sipush        775
     294: if_icmpne     307
     297: aload_0
     298: aload_2
     299: invokespecial #82                 // Method isPrecededBy_I:(Lcom/ibm/icu/impl/UCaseProps$ContextIterator;)Z
     302: ifeq          307
     305: iconst_0
     306: ireturn
     307: iload         4
     309: iconst_2
     310: if_icmpne     331
     313: iload_1
     314: bipush        73
     316: if_icmpne     331
     319: aload_0
     320: aload_2
     321: invokespecial #83                 // Method isFollowedByDotAbove:(Lcom/ibm/icu/impl/UCaseProps$ContextIterator;)Z
     324: ifne          331
     327: sipush        305
     330: ireturn
     331: iload_1
     332: sipush        304
     335: if_icmpne     361
     338: aload_3
     339: ldc           #42                 // String i̇
     341: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     346: pop
     347: iconst_2
     348: ireturn
     349: astore        11
     351: new           #80                 // class com/ibm/icu/util/ICUUncheckedIOException
     354: dup
     355: aload         11
     357: invokespecial #81                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
     360: athrow
     361: iload_1
     362: sipush        931
     365: if_icmpne     468
     368: aload_0
     369: aload_2
     370: iconst_1
     371: invokespecial #84                 // Method isFollowedByCasedLetter:(Lcom/ibm/icu/impl/UCaseProps$ContextIterator;I)Z
     374: ifne          468
     377: aload_0
     378: aload_2
     379: iconst_m1
     380: invokespecial #84                 // Method isFollowedByCasedLetter:(Lcom/ibm/icu/impl/UCaseProps$ContextIterator;I)Z
     383: ifeq          468
     386: sipush        962
     389: ireturn
     390: iload         9
     392: bipush        7
     394: invokestatic  #39                 // Method hasSlot:(II)Z
     397: ifeq          468
     400: aload_0
     401: iload         9
     403: bipush        7
     405: iload         7
     407: invokespecial #44                 // Method getSlotValueAndOffset:(III)J
     410: lstore        11
     412: lload         11
     414: l2i
     415: bipush        15
     417: iand
     418: istore        10
     420: iload         10
     422: ifeq          468
     425: lload         11
     427: bipush        32
     429: lshr
     430: l2i
     431: iconst_1
     432: iadd
     433: istore        7
     435: aload_3
     436: aload_0
     437: getfield      #21                 // Field exceptions:Ljava/lang/String;
     440: iload         7
     442: iload         7
     444: iload         10
     446: iadd
     447: invokeinterface #85,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     452: pop
     453: iload         10
     455: ireturn
     456: astore        13
     458: new           #80                 // class com/ibm/icu/util/ICUUncheckedIOException
     461: dup
     462: aload         13
     464: invokespecial #81                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
     467: athrow
     468: iload         9
     470: iconst_0
     471: invokestatic  #39                 // Method hasSlot:(II)Z
     474: ifeq          488
     477: aload_0
     478: iload         9
     480: iconst_0
     481: iload         8
     483: invokespecial #40                 // Method getSlotValue:(III)I
     486: istore        5
     488: iload         5
     490: iload_1
     491: if_icmpne     501
     494: iload         5
     496: iconst_m1
     497: ixor
     498: goto          503
     501: iload         5
     503: ireturn
    Exception table:
       from    to  target type
         129   198   256   Class java/io/IOException
         199   209   256   Class java/io/IOException
         210   220   256   Class java/io/IOException
         221   231   256   Class java/io/IOException
         232   242   256   Class java/io/IOException
         243   253   256   Class java/io/IOException
         254   255   256   Class java/io/IOException
         338   348   349   Class java/io/IOException
         435   455   456   Class java/io/IOException

  private final int toUpperOrTitle(int, com.ibm.icu.impl.UCaseProps$ContextIterator, java.lang.Appendable, int, boolean);
    Code:
       0: iload_1
       1: istore        6
       3: aload_0
       4: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       7: iload_1
       8: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
      11: istore        7
      13: iload         7
      15: invokestatic  #35                 // Method propsHasException:(I)Z
      18: ifne          42
      21: iload         7
      23: invokestatic  #41                 // Method getTypeFromProps:(I)I
      26: iconst_1
      27: if_icmpne     310
      30: iload_1
      31: iload         7
      33: invokestatic  #37                 // Method getDelta:(I)I
      36: iadd
      37: istore        6
      39: goto          310
      42: iload         7
      44: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      47: istore        8
      49: aload_0
      50: getfield      #21                 // Field exceptions:Ljava/lang/String;
      53: iload         8
      55: iinc          8, 1
      58: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      61: istore        10
      63: iload         8
      65: istore        9
      67: iload         10
      69: sipush        16384
      72: iand
      73: ifeq          115
      76: iload         4
      78: iconst_2
      79: if_icmpne     92
      82: iload_1
      83: bipush        105
      85: if_icmpne     92
      88: sipush        304
      91: ireturn
      92: iload         4
      94: iconst_3
      95: if_icmpne     259
      98: iload_1
      99: sipush        775
     102: if_icmpne     259
     105: aload_0
     106: aload_2
     107: invokespecial #86                 // Method isPrecededBySoftDotted:(Lcom/ibm/icu/impl/UCaseProps$ContextIterator;)Z
     110: ifeq          259
     113: iconst_0
     114: ireturn
     115: iload         10
     117: bipush        7
     119: invokestatic  #39                 // Method hasSlot:(II)Z
     122: ifeq          259
     125: aload_0
     126: iload         10
     128: bipush        7
     130: iload         8
     132: invokespecial #44                 // Method getSlotValueAndOffset:(III)J
     135: lstore        13
     137: lload         13
     139: l2i
     140: ldc           #45                 // int 65535
     142: iand
     143: istore        11
     145: lload         13
     147: bipush        32
     149: lshr
     150: l2i
     151: iconst_1
     152: iadd
     153: istore        8
     155: iload         8
     157: iload         11
     159: bipush        15
     161: iand
     162: iadd
     163: istore        8
     165: iload         11
     167: iconst_4
     168: ishr
     169: istore        11
     171: iload         8
     173: iload         11
     175: bipush        15
     177: iand
     178: iadd
     179: istore        8
     181: iload         11
     183: iconst_4
     184: ishr
     185: istore        11
     187: iload         5
     189: ifeq          202
     192: iload         11
     194: bipush        15
     196: iand
     197: istore        11
     199: goto          221
     202: iload         8
     204: iload         11
     206: bipush        15
     208: iand
     209: iadd
     210: istore        8
     212: iload         11
     214: iconst_4
     215: ishr
     216: bipush        15
     218: iand
     219: istore        11
     221: iload         11
     223: ifeq          259
     226: aload_3
     227: aload_0
     228: getfield      #21                 // Field exceptions:Ljava/lang/String;
     231: iload         8
     233: iload         8
     235: iload         11
     237: iadd
     238: invokeinterface #85,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     243: pop
     244: iload         11
     246: ireturn
     247: astore        15
     249: new           #80                 // class com/ibm/icu/util/ICUUncheckedIOException
     252: dup
     253: aload         15
     255: invokespecial #81                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
     258: athrow
     259: iload         5
     261: ifne          279
     264: iload         10
     266: iconst_3
     267: invokestatic  #39                 // Method hasSlot:(II)Z
     270: ifeq          279
     273: iconst_3
     274: istore        12
     276: goto          298
     279: iload         10
     281: iconst_2
     282: invokestatic  #39                 // Method hasSlot:(II)Z
     285: ifeq          294
     288: iconst_2
     289: istore        12
     291: goto          298
     294: iload_1
     295: iconst_m1
     296: ixor
     297: ireturn
     298: aload_0
     299: iload         10
     301: iload         12
     303: iload         9
     305: invokespecial #40                 // Method getSlotValue:(III)I
     308: istore        6
     310: iload         6
     312: iload_1
     313: if_icmpne     323
     316: iload         6
     318: iconst_m1
     319: ixor
     320: goto          325
     323: iload         6
     325: ireturn
    Exception table:
       from    to  target type
         226   246   247   Class java/io/IOException

  public final int toFullUpper(int, com.ibm.icu.impl.UCaseProps$ContextIterator, java.lang.Appendable, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iconst_1
       7: invokespecial #87                 // Method toUpperOrTitle:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;IZ)I
      10: ireturn

  public final int toFullTitle(int, com.ibm.icu.impl.UCaseProps$ContextIterator, java.lang.Appendable, int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iconst_0
       7: invokespecial #87                 // Method toUpperOrTitle:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;IZ)I
      10: ireturn

  public final int fold(int, int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       4: iload_1
       5: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
       8: istore_3
       9: iload_3
      10: invokestatic  #35                 // Method propsHasException:(I)Z
      13: ifne          33
      16: iload_3
      17: invokestatic  #36                 // Method isUpperOrTitleFromProps:(I)Z
      20: ifeq          149
      23: iload_1
      24: iload_3
      25: invokestatic  #37                 // Method getDelta:(I)I
      28: iadd
      29: istore_1
      30: goto          149
      33: iload_3
      34: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      37: istore        4
      39: aload_0
      40: getfield      #21                 // Field exceptions:Ljava/lang/String;
      43: iload         4
      45: iinc          4, 1
      48: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      51: istore        5
      53: iload         5
      55: ldc           #88                 // int 32768
      57: iand
      58: ifeq          106
      61: iload_2
      62: bipush        7
      64: iand
      65: ifne          86
      68: iload_1
      69: bipush        73
      71: if_icmpne     77
      74: bipush        105
      76: ireturn
      77: iload_1
      78: sipush        304
      81: if_icmpne     106
      84: iload_1
      85: ireturn
      86: iload_1
      87: bipush        73
      89: if_icmpne     96
      92: sipush        305
      95: ireturn
      96: iload_1
      97: sipush        304
     100: if_icmpne     106
     103: bipush        105
     105: ireturn
     106: iload         5
     108: iconst_1
     109: invokestatic  #39                 // Method hasSlot:(II)Z
     112: ifeq          121
     115: iconst_1
     116: istore        6
     118: goto          138
     121: iload         5
     123: iconst_0
     124: invokestatic  #39                 // Method hasSlot:(II)Z
     127: ifeq          136
     130: iconst_0
     131: istore        6
     133: goto          138
     136: iload_1
     137: ireturn
     138: aload_0
     139: iload         5
     141: iload         6
     143: iload         4
     145: invokespecial #40                 // Method getSlotValue:(III)I
     148: istore_1
     149: iload_1
     150: ireturn

  public final int toFullFolding(int, java.lang.Appendable, int);
    Code:
       0: iload_1
       1: istore        4
       3: aload_0
       4: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       7: iload_1
       8: invokevirtual #34                 // Method com/ibm/icu/impl/Trie2_16.get:(I)I
      11: istore        5
      13: iload         5
      15: invokestatic  #35                 // Method propsHasException:(I)Z
      18: ifne          41
      21: iload         5
      23: invokestatic  #36                 // Method isUpperOrTitleFromProps:(I)Z
      26: ifeq          283
      29: iload_1
      30: iload         5
      32: invokestatic  #37                 // Method getDelta:(I)I
      35: iadd
      36: istore        4
      38: goto          283
      41: iload         5
      43: invokestatic  #38                 // Method getExceptionsOffset:(I)I
      46: istore        6
      48: aload_0
      49: getfield      #21                 // Field exceptions:Ljava/lang/String;
      52: iload         6
      54: iinc          6, 1
      57: invokevirtual #33                 // Method java/lang/String.charAt:(I)C
      60: istore        8
      62: iload         6
      64: istore        7
      66: iload         8
      68: ldc           #88                 // int 32768
      70: iand
      71: ifeq          140
      74: iload_3
      75: bipush        7
      77: iand
      78: ifne          120
      81: iload_1
      82: bipush        73
      84: if_icmpne     90
      87: bipush        105
      89: ireturn
      90: iload_1
      91: sipush        304
      94: if_icmpne     237
      97: aload_2
      98: ldc           #42                 // String i̇
     100: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
     105: pop
     106: iconst_2
     107: ireturn
     108: astore        11
     110: new           #80                 // class com/ibm/icu/util/ICUUncheckedIOException
     113: dup
     114: aload         11
     116: invokespecial #81                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
     119: athrow
     120: iload_1
     121: bipush        73
     123: if_icmpne     130
     126: sipush        305
     129: ireturn
     130: iload_1
     131: sipush        304
     134: if_icmpne     237
     137: bipush        105
     139: ireturn
     140: iload         8
     142: bipush        7
     144: invokestatic  #39                 // Method hasSlot:(II)Z
     147: ifeq          237
     150: aload_0
     151: iload         8
     153: bipush        7
     155: iload         6
     157: invokespecial #44                 // Method getSlotValueAndOffset:(III)J
     160: lstore        11
     162: lload         11
     164: l2i
     165: ldc           #45                 // int 65535
     167: iand
     168: istore        9
     170: lload         11
     172: bipush        32
     174: lshr
     175: l2i
     176: iconst_1
     177: iadd
     178: istore        6
     180: iload         6
     182: iload         9
     184: bipush        15
     186: iand
     187: iadd
     188: istore        6
     190: iload         9
     192: iconst_4
     193: ishr
     194: bipush        15
     196: iand
     197: istore        9
     199: iload         9
     201: ifeq          237
     204: aload_2
     205: aload_0
     206: getfield      #21                 // Field exceptions:Ljava/lang/String;
     209: iload         6
     211: iload         6
     213: iload         9
     215: iadd
     216: invokeinterface #85,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
     221: pop
     222: iload         9
     224: ireturn
     225: astore        13
     227: new           #80                 // class com/ibm/icu/util/ICUUncheckedIOException
     230: dup
     231: aload         13
     233: invokespecial #81                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
     236: athrow
     237: iload         8
     239: iconst_1
     240: invokestatic  #39                 // Method hasSlot:(II)Z
     243: ifeq          252
     246: iconst_1
     247: istore        10
     249: goto          271
     252: iload         8
     254: iconst_0
     255: invokestatic  #39                 // Method hasSlot:(II)Z
     258: ifeq          267
     261: iconst_0
     262: istore        10
     264: goto          271
     267: iload_1
     268: iconst_m1
     269: ixor
     270: ireturn
     271: aload_0
     272: iload         8
     274: iload         10
     276: iload         7
     278: invokespecial #40                 // Method getSlotValue:(III)I
     281: istore        4
     283: iload         4
     285: iload_1
     286: if_icmpne     296
     289: iload         4
     291: iconst_m1
     292: ixor
     293: goto          298
     296: iload         4
     298: ireturn
    Exception table:
       from    to  target type
          97   107   108   Class java/io/IOException
         204   224   225   Class java/io/IOException

  public final boolean hasBinaryProperty(int, int);
    Code:
       0: iload_2
       1: tableswitch   { // 22 to 55
                    22: 152
                    23: 355
                    24: 355
                    25: 355
                    26: 355
                    27: 182
                    28: 355
                    29: 355
                    30: 167
                    31: 355
                    32: 355
                    33: 355
                    34: 188
                    35: 355
                    36: 355
                    37: 355
                    38: 355
                    39: 355
                    40: 355
                    41: 355
                    42: 355
                    43: 355
                    44: 355
                    45: 355
                    46: 355
                    47: 355
                    48: 355
                    49: 194
                    50: 209
                    51: 225
                    52: 251
                    53: 277
                    54: 355
                    55: 303
               default: 355
          }
     152: iconst_1
     153: aload_0
     154: iload_1
     155: invokevirtual #89                 // Method getType:(I)I
     158: if_icmpne     165
     161: iconst_1
     162: goto          166
     165: iconst_0
     166: ireturn
     167: iconst_2
     168: aload_0
     169: iload_1
     170: invokevirtual #89                 // Method getType:(I)I
     173: if_icmpne     180
     176: iconst_1
     177: goto          181
     180: iconst_0
     181: ireturn
     182: aload_0
     183: iload_1
     184: invokevirtual #90                 // Method isSoftDotted:(I)Z
     187: ireturn
     188: aload_0
     189: iload_1
     190: invokevirtual #91                 // Method isCaseSensitive:(I)Z
     193: ireturn
     194: iconst_0
     195: aload_0
     196: iload_1
     197: invokevirtual #89                 // Method getType:(I)I
     200: if_icmpeq     207
     203: iconst_1
     204: goto          208
     207: iconst_0
     208: ireturn
     209: aload_0
     210: iload_1
     211: invokevirtual #72                 // Method getTypeOrIgnorable:(I)I
     214: iconst_2
     215: ishr
     216: ifeq          223
     219: iconst_1
     220: goto          224
     223: iconst_0
     224: ireturn
     225: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     228: iconst_0
     229: invokevirtual #93                 // Method java/lang/StringBuilder.setLength:(I)V
     232: aload_0
     233: iload_1
     234: aconst_null
     235: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     238: iconst_1
     239: invokevirtual #94                 // Method toFullLower:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;I)I
     242: iflt          249
     245: iconst_1
     246: goto          250
     249: iconst_0
     250: ireturn
     251: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     254: iconst_0
     255: invokevirtual #93                 // Method java/lang/StringBuilder.setLength:(I)V
     258: aload_0
     259: iload_1
     260: aconst_null
     261: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     264: iconst_1
     265: invokevirtual #95                 // Method toFullUpper:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;I)I
     268: iflt          275
     271: iconst_1
     272: goto          276
     275: iconst_0
     276: ireturn
     277: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     280: iconst_0
     281: invokevirtual #93                 // Method java/lang/StringBuilder.setLength:(I)V
     284: aload_0
     285: iload_1
     286: aconst_null
     287: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     290: iconst_1
     291: invokevirtual #96                 // Method toFullTitle:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;I)I
     294: iflt          301
     297: iconst_1
     298: goto          302
     301: iconst_0
     302: ireturn
     303: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     306: iconst_0
     307: invokevirtual #93                 // Method java/lang/StringBuilder.setLength:(I)V
     310: aload_0
     311: iload_1
     312: aconst_null
     313: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     316: iconst_1
     317: invokevirtual #94                 // Method toFullLower:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;I)I
     320: ifge          349
     323: aload_0
     324: iload_1
     325: aconst_null
     326: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     329: iconst_1
     330: invokevirtual #95                 // Method toFullUpper:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;I)I
     333: ifge          349
     336: aload_0
     337: iload_1
     338: aconst_null
     339: getstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
     342: iconst_1
     343: invokevirtual #96                 // Method toFullTitle:(ILcom/ibm/icu/impl/UCaseProps$ContextIterator;Ljava/lang/Appendable;I)I
     346: iflt          353
     349: iconst_1
     350: goto          354
     353: iconst_0
     354: ireturn
     355: iconst_0
     356: ireturn

  static com.ibm.icu.impl.Trie2_16 getTrie();
    Code:
       0: getstatic     #97                 // Field INSTANCE:Lcom/ibm/icu/impl/UCaseProps;
       3: getfield      #16                 // Field trie:Lcom/ibm/icu/impl/Trie2_16;
       6: areturn

  static final int getTypeFromProps(int);
    Code:
       0: iload_0
       1: iconst_3
       2: iand
       3: ireturn

  private static final int getTypeAndIgnorableFromProps(int);
    Code:
       0: iload_0
       1: bipush        7
       3: iand
       4: ireturn

  static final boolean isUpperOrTitleFromProps(int);
    Code:
       0: iload_0
       1: iconst_2
       2: iand
       3: ifeq          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  static final int getDelta(int);
    Code:
       0: iload_0
       1: i2s
       2: bipush        7
       4: ishr
       5: ireturn

  static {};
    Code:
       0: sipush        256
       3: newarray       byte
       5: dup
       6: iconst_0
       7: iconst_0
       8: bastore
       9: dup
      10: iconst_1
      11: iconst_1
      12: bastore
      13: dup
      14: iconst_2
      15: iconst_1
      16: bastore
      17: dup
      18: iconst_3
      19: iconst_2
      20: bastore
      21: dup
      22: iconst_4
      23: iconst_1
      24: bastore
      25: dup
      26: iconst_5
      27: iconst_2
      28: bastore
      29: dup
      30: bipush        6
      32: iconst_2
      33: bastore
      34: dup
      35: bipush        7
      37: iconst_3
      38: bastore
      39: dup
      40: bipush        8
      42: iconst_1
      43: bastore
      44: dup
      45: bipush        9
      47: iconst_2
      48: bastore
      49: dup
      50: bipush        10
      52: iconst_2
      53: bastore
      54: dup
      55: bipush        11
      57: iconst_3
      58: bastore
      59: dup
      60: bipush        12
      62: iconst_2
      63: bastore
      64: dup
      65: bipush        13
      67: iconst_3
      68: bastore
      69: dup
      70: bipush        14
      72: iconst_3
      73: bastore
      74: dup
      75: bipush        15
      77: iconst_4
      78: bastore
      79: dup
      80: bipush        16
      82: iconst_1
      83: bastore
      84: dup
      85: bipush        17
      87: iconst_2
      88: bastore
      89: dup
      90: bipush        18
      92: iconst_2
      93: bastore
      94: dup
      95: bipush        19
      97: iconst_3
      98: bastore
      99: dup
     100: bipush        20
     102: iconst_2
     103: bastore
     104: dup
     105: bipush        21
     107: iconst_3
     108: bastore
     109: dup
     110: bipush        22
     112: iconst_3
     113: bastore
     114: dup
     115: bipush        23
     117: iconst_4
     118: bastore
     119: dup
     120: bipush        24
     122: iconst_2
     123: bastore
     124: dup
     125: bipush        25
     127: iconst_3
     128: bastore
     129: dup
     130: bipush        26
     132: iconst_3
     133: bastore
     134: dup
     135: bipush        27
     137: iconst_4
     138: bastore
     139: dup
     140: bipush        28
     142: iconst_3
     143: bastore
     144: dup
     145: bipush        29
     147: iconst_4
     148: bastore
     149: dup
     150: bipush        30
     152: iconst_4
     153: bastore
     154: dup
     155: bipush        31
     157: iconst_5
     158: bastore
     159: dup
     160: bipush        32
     162: iconst_1
     163: bastore
     164: dup
     165: bipush        33
     167: iconst_2
     168: bastore
     169: dup
     170: bipush        34
     172: iconst_2
     173: bastore
     174: dup
     175: bipush        35
     177: iconst_3
     178: bastore
     179: dup
     180: bipush        36
     182: iconst_2
     183: bastore
     184: dup
     185: bipush        37
     187: iconst_3
     188: bastore
     189: dup
     190: bipush        38
     192: iconst_3
     193: bastore
     194: dup
     195: bipush        39
     197: iconst_4
     198: bastore
     199: dup
     200: bipush        40
     202: iconst_2
     203: bastore
     204: dup
     205: bipush        41
     207: iconst_3
     208: bastore
     209: dup
     210: bipush        42
     212: iconst_3
     213: bastore
     214: dup
     215: bipush        43
     217: iconst_4
     218: bastore
     219: dup
     220: bipush        44
     222: iconst_3
     223: bastore
     224: dup
     225: bipush        45
     227: iconst_4
     228: bastore
     229: dup
     230: bipush        46
     232: iconst_4
     233: bastore
     234: dup
     235: bipush        47
     237: iconst_5
     238: bastore
     239: dup
     240: bipush        48
     242: iconst_2
     243: bastore
     244: dup
     245: bipush        49
     247: iconst_3
     248: bastore
     249: dup
     250: bipush        50
     252: iconst_3
     253: bastore
     254: dup
     255: bipush        51
     257: iconst_4
     258: bastore
     259: dup
     260: bipush        52
     262: iconst_3
     263: bastore
     264: dup
     265: bipush        53
     267: iconst_4
     268: bastore
     269: dup
     270: bipush        54
     272: iconst_4
     273: bastore
     274: dup
     275: bipush        55
     277: iconst_5
     278: bastore
     279: dup
     280: bipush        56
     282: iconst_3
     283: bastore
     284: dup
     285: bipush        57
     287: iconst_4
     288: bastore
     289: dup
     290: bipush        58
     292: iconst_4
     293: bastore
     294: dup
     295: bipush        59
     297: iconst_5
     298: bastore
     299: dup
     300: bipush        60
     302: iconst_4
     303: bastore
     304: dup
     305: bipush        61
     307: iconst_5
     308: bastore
     309: dup
     310: bipush        62
     312: iconst_5
     313: bastore
     314: dup
     315: bipush        63
     317: bipush        6
     319: bastore
     320: dup
     321: bipush        64
     323: iconst_1
     324: bastore
     325: dup
     326: bipush        65
     328: iconst_2
     329: bastore
     330: dup
     331: bipush        66
     333: iconst_2
     334: bastore
     335: dup
     336: bipush        67
     338: iconst_3
     339: bastore
     340: dup
     341: bipush        68
     343: iconst_2
     344: bastore
     345: dup
     346: bipush        69
     348: iconst_3
     349: bastore
     350: dup
     351: bipush        70
     353: iconst_3
     354: bastore
     355: dup
     356: bipush        71
     358: iconst_4
     359: bastore
     360: dup
     361: bipush        72
     363: iconst_2
     364: bastore
     365: dup
     366: bipush        73
     368: iconst_3
     369: bastore
     370: dup
     371: bipush        74
     373: iconst_3
     374: bastore
     375: dup
     376: bipush        75
     378: iconst_4
     379: bastore
     380: dup
     381: bipush        76
     383: iconst_3
     384: bastore
     385: dup
     386: bipush        77
     388: iconst_4
     389: bastore
     390: dup
     391: bipush        78
     393: iconst_4
     394: bastore
     395: dup
     396: bipush        79
     398: iconst_5
     399: bastore
     400: dup
     401: bipush        80
     403: iconst_2
     404: bastore
     405: dup
     406: bipush        81
     408: iconst_3
     409: bastore
     410: dup
     411: bipush        82
     413: iconst_3
     414: bastore
     415: dup
     416: bipush        83
     418: iconst_4
     419: bastore
     420: dup
     421: bipush        84
     423: iconst_3
     424: bastore
     425: dup
     426: bipush        85
     428: iconst_4
     429: bastore
     430: dup
     431: bipush        86
     433: iconst_4
     434: bastore
     435: dup
     436: bipush        87
     438: iconst_5
     439: bastore
     440: dup
     441: bipush        88
     443: iconst_3
     444: bastore
     445: dup
     446: bipush        89
     448: iconst_4
     449: bastore
     450: dup
     451: bipush        90
     453: iconst_4
     454: bastore
     455: dup
     456: bipush        91
     458: iconst_5
     459: bastore
     460: dup
     461: bipush        92
     463: iconst_4
     464: bastore
     465: dup
     466: bipush        93
     468: iconst_5
     469: bastore
     470: dup
     471: bipush        94
     473: iconst_5
     474: bastore
     475: dup
     476: bipush        95
     478: bipush        6
     480: bastore
     481: dup
     482: bipush        96
     484: iconst_2
     485: bastore
     486: dup
     487: bipush        97
     489: iconst_3
     490: bastore
     491: dup
     492: bipush        98
     494: iconst_3
     495: bastore
     496: dup
     497: bipush        99
     499: iconst_4
     500: bastore
     501: dup
     502: bipush        100
     504: iconst_3
     505: bastore
     506: dup
     507: bipush        101
     509: iconst_4
     510: bastore
     511: dup
     512: bipush        102
     514: iconst_4
     515: bastore
     516: dup
     517: bipush        103
     519: iconst_5
     520: bastore
     521: dup
     522: bipush        104
     524: iconst_3
     525: bastore
     526: dup
     527: bipush        105
     529: iconst_4
     530: bastore
     531: dup
     532: bipush        106
     534: iconst_4
     535: bastore
     536: dup
     537: bipush        107
     539: iconst_5
     540: bastore
     541: dup
     542: bipush        108
     544: iconst_4
     545: bastore
     546: dup
     547: bipush        109
     549: iconst_5
     550: bastore
     551: dup
     552: bipush        110
     554: iconst_5
     555: bastore
     556: dup
     557: bipush        111
     559: bipush        6
     561: bastore
     562: dup
     563: bipush        112
     565: iconst_3
     566: bastore
     567: dup
     568: bipush        113
     570: iconst_4
     571: bastore
     572: dup
     573: bipush        114
     575: iconst_4
     576: bastore
     577: dup
     578: bipush        115
     580: iconst_5
     581: bastore
     582: dup
     583: bipush        116
     585: iconst_4
     586: bastore
     587: dup
     588: bipush        117
     590: iconst_5
     591: bastore
     592: dup
     593: bipush        118
     595: iconst_5
     596: bastore
     597: dup
     598: bipush        119
     600: bipush        6
     602: bastore
     603: dup
     604: bipush        120
     606: iconst_4
     607: bastore
     608: dup
     609: bipush        121
     611: iconst_5
     612: bastore
     613: dup
     614: bipush        122
     616: iconst_5
     617: bastore
     618: dup
     619: bipush        123
     621: bipush        6
     623: bastore
     624: dup
     625: bipush        124
     627: iconst_5
     628: bastore
     629: dup
     630: bipush        125
     632: bipush        6
     634: bastore
     635: dup
     636: bipush        126
     638: bipush        6
     640: bastore
     641: dup
     642: bipush        127
     644: bipush        7
     646: bastore
     647: dup
     648: sipush        128
     651: iconst_1
     652: bastore
     653: dup
     654: sipush        129
     657: iconst_2
     658: bastore
     659: dup
     660: sipush        130
     663: iconst_2
     664: bastore
     665: dup
     666: sipush        131
     669: iconst_3
     670: bastore
     671: dup
     672: sipush        132
     675: iconst_2
     676: bastore
     677: dup
     678: sipush        133
     681: iconst_3
     682: bastore
     683: dup
     684: sipush        134
     687: iconst_3
     688: bastore
     689: dup
     690: sipush        135
     693: iconst_4
     694: bastore
     695: dup
     696: sipush        136
     699: iconst_2
     700: bastore
     701: dup
     702: sipush        137
     705: iconst_3
     706: bastore
     707: dup
     708: sipush        138
     711: iconst_3
     712: bastore
     713: dup
     714: sipush        139
     717: iconst_4
     718: bastore
     719: dup
     720: sipush        140
     723: iconst_3
     724: bastore
     725: dup
     726: sipush        141
     729: iconst_4
     730: bastore
     731: dup
     732: sipush        142
     735: iconst_4
     736: bastore
     737: dup
     738: sipush        143
     741: iconst_5
     742: bastore
     743: dup
     744: sipush        144
     747: iconst_2
     748: bastore
     749: dup
     750: sipush        145
     753: iconst_3
     754: bastore
     755: dup
     756: sipush        146
     759: iconst_3
     760: bastore
     761: dup
     762: sipush        147
     765: iconst_4
     766: bastore
     767: dup
     768: sipush        148
     771: iconst_3
     772: bastore
     773: dup
     774: sipush        149
     777: iconst_4
     778: bastore
     779: dup
     780: sipush        150
     783: iconst_4
     784: bastore
     785: dup
     786: sipush        151
     789: iconst_5
     790: bastore
     791: dup
     792: sipush        152
     795: iconst_3
     796: bastore
     797: dup
     798: sipush        153
     801: iconst_4
     802: bastore
     803: dup
     804: sipush        154
     807: iconst_4
     808: bastore
     809: dup
     810: sipush        155
     813: iconst_5
     814: bastore
     815: dup
     816: sipush        156
     819: iconst_4
     820: bastore
     821: dup
     822: sipush        157
     825: iconst_5
     826: bastore
     827: dup
     828: sipush        158
     831: iconst_5
     832: bastore
     833: dup
     834: sipush        159
     837: bipush        6
     839: bastore
     840: dup
     841: sipush        160
     844: iconst_2
     845: bastore
     846: dup
     847: sipush        161
     850: iconst_3
     851: bastore
     852: dup
     853: sipush        162
     856: iconst_3
     857: bastore
     858: dup
     859: sipush        163
     862: iconst_4
     863: bastore
     864: dup
     865: sipush        164
     868: iconst_3
     869: bastore
     870: dup
     871: sipush        165
     874: iconst_4
     875: bastore
     876: dup
     877: sipush        166
     880: iconst_4
     881: bastore
     882: dup
     883: sipush        167
     886: iconst_5
     887: bastore
     888: dup
     889: sipush        168
     892: iconst_3
     893: bastore
     894: dup
     895: sipush        169
     898: iconst_4
     899: bastore
     900: dup
     901: sipush        170
     904: iconst_4
     905: bastore
     906: dup
     907: sipush        171
     910: iconst_5
     911: bastore
     912: dup
     913: sipush        172
     916: iconst_4
     917: bastore
     918: dup
     919: sipush        173
     922: iconst_5
     923: bastore
     924: dup
     925: sipush        174
     928: iconst_5
     929: bastore
     930: dup
     931: sipush        175
     934: bipush        6
     936: bastore
     937: dup
     938: sipush        176
     941: iconst_3
     942: bastore
     943: dup
     944: sipush        177
     947: iconst_4
     948: bastore
     949: dup
     950: sipush        178
     953: iconst_4
     954: bastore
     955: dup
     956: sipush        179
     959: iconst_5
     960: bastore
     961: dup
     962: sipush        180
     965: iconst_4
     966: bastore
     967: dup
     968: sipush        181
     971: iconst_5
     972: bastore
     973: dup
     974: sipush        182
     977: iconst_5
     978: bastore
     979: dup
     980: sipush        183
     983: bipush        6
     985: bastore
     986: dup
     987: sipush        184
     990: iconst_4
     991: bastore
     992: dup
     993: sipush        185
     996: iconst_5
     997: bastore
     998: dup
     999: sipush        186
    1002: iconst_5
    1003: bastore
    1004: dup
    1005: sipush        187
    1008: bipush        6
    1010: bastore
    1011: dup
    1012: sipush        188
    1015: iconst_5
    1016: bastore
    1017: dup
    1018: sipush        189
    1021: bipush        6
    1023: bastore
    1024: dup
    1025: sipush        190
    1028: bipush        6
    1030: bastore
    1031: dup
    1032: sipush        191
    1035: bipush        7
    1037: bastore
    1038: dup
    1039: sipush        192
    1042: iconst_2
    1043: bastore
    1044: dup
    1045: sipush        193
    1048: iconst_3
    1049: bastore
    1050: dup
    1051: sipush        194
    1054: iconst_3
    1055: bastore
    1056: dup
    1057: sipush        195
    1060: iconst_4
    1061: bastore
    1062: dup
    1063: sipush        196
    1066: iconst_3
    1067: bastore
    1068: dup
    1069: sipush        197
    1072: iconst_4
    1073: bastore
    1074: dup
    1075: sipush        198
    1078: iconst_4
    1079: bastore
    1080: dup
    1081: sipush        199
    1084: iconst_5
    1085: bastore
    1086: dup
    1087: sipush        200
    1090: iconst_3
    1091: bastore
    1092: dup
    1093: sipush        201
    1096: iconst_4
    1097: bastore
    1098: dup
    1099: sipush        202
    1102: iconst_4
    1103: bastore
    1104: dup
    1105: sipush        203
    1108: iconst_5
    1109: bastore
    1110: dup
    1111: sipush        204
    1114: iconst_4
    1115: bastore
    1116: dup
    1117: sipush        205
    1120: iconst_5
    1121: bastore
    1122: dup
    1123: sipush        206
    1126: iconst_5
    1127: bastore
    1128: dup
    1129: sipush        207
    1132: bipush        6
    1134: bastore
    1135: dup
    1136: sipush        208
    1139: iconst_3
    1140: bastore
    1141: dup
    1142: sipush        209
    1145: iconst_4
    1146: bastore
    1147: dup
    1148: sipush        210
    1151: iconst_4
    1152: bastore
    1153: dup
    1154: sipush        211
    1157: iconst_5
    1158: bastore
    1159: dup
    1160: sipush        212
    1163: iconst_4
    1164: bastore
    1165: dup
    1166: sipush        213
    1169: iconst_5
    1170: bastore
    1171: dup
    1172: sipush        214
    1175: iconst_5
    1176: bastore
    1177: dup
    1178: sipush        215
    1181: bipush        6
    1183: bastore
    1184: dup
    1185: sipush        216
    1188: iconst_4
    1189: bastore
    1190: dup
    1191: sipush        217
    1194: iconst_5
    1195: bastore
    1196: dup
    1197: sipush        218
    1200: iconst_5
    1201: bastore
    1202: dup
    1203: sipush        219
    1206: bipush        6
    1208: bastore
    1209: dup
    1210: sipush        220
    1213: iconst_5
    1214: bastore
    1215: dup
    1216: sipush        221
    1219: bipush        6
    1221: bastore
    1222: dup
    1223: sipush        222
    1226: bipush        6
    1228: bastore
    1229: dup
    1230: sipush        223
    1233: bipush        7
    1235: bastore
    1236: dup
    1237: sipush        224
    1240: iconst_3
    1241: bastore
    1242: dup
    1243: sipush        225
    1246: iconst_4
    1247: bastore
    1248: dup
    1249: sipush        226
    1252: iconst_4
    1253: bastore
    1254: dup
    1255: sipush        227
    1258: iconst_5
    1259: bastore
    1260: dup
    1261: sipush        228
    1264: iconst_4
    1265: bastore
    1266: dup
    1267: sipush        229
    1270: iconst_5
    1271: bastore
    1272: dup
    1273: sipush        230
    1276: iconst_5
    1277: bastore
    1278: dup
    1279: sipush        231
    1282: bipush        6
    1284: bastore
    1285: dup
    1286: sipush        232
    1289: iconst_4
    1290: bastore
    1291: dup
    1292: sipush        233
    1295: iconst_5
    1296: bastore
    1297: dup
    1298: sipush        234
    1301: iconst_5
    1302: bastore
    1303: dup
    1304: sipush        235
    1307: bipush        6
    1309: bastore
    1310: dup
    1311: sipush        236
    1314: iconst_5
    1315: bastore
    1316: dup
    1317: sipush        237
    1320: bipush        6
    1322: bastore
    1323: dup
    1324: sipush        238
    1327: bipush        6
    1329: bastore
    1330: dup
    1331: sipush        239
    1334: bipush        7
    1336: bastore
    1337: dup
    1338: sipush        240
    1341: iconst_4
    1342: bastore
    1343: dup
    1344: sipush        241
    1347: iconst_5
    1348: bastore
    1349: dup
    1350: sipush        242
    1353: iconst_5
    1354: bastore
    1355: dup
    1356: sipush        243
    1359: bipush        6
    1361: bastore
    1362: dup
    1363: sipush        244
    1366: iconst_5
    1367: bastore
    1368: dup
    1369: sipush        245
    1372: bipush        6
    1374: bastore
    1375: dup
    1376: sipush        246
    1379: bipush        6
    1381: bastore
    1382: dup
    1383: sipush        247
    1386: bipush        7
    1388: bastore
    1389: dup
    1390: sipush        248
    1393: iconst_5
    1394: bastore
    1395: dup
    1396: sipush        249
    1399: bipush        6
    1401: bastore
    1402: dup
    1403: sipush        250
    1406: bipush        6
    1408: bastore
    1409: dup
    1410: sipush        251
    1413: bipush        7
    1415: bastore
    1416: dup
    1417: sipush        252
    1420: bipush        6
    1422: bastore
    1423: dup
    1424: sipush        253
    1427: bipush        7
    1429: bastore
    1430: dup
    1431: sipush        254
    1434: bipush        7
    1436: bastore
    1437: dup
    1438: sipush        255
    1441: bipush        8
    1443: bastore
    1444: putstatic     #31                 // Field flagsOffset:[B
    1447: new           #98                 // class java/lang/StringBuilder
    1450: dup
    1451: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
    1454: putstatic     #92                 // Field dummyStringBuilder:Ljava/lang/StringBuilder;
    1457: new           #1                  // class com/ibm/icu/impl/UCaseProps
    1460: dup
    1461: invokespecial #100                // Method "<init>":()V
    1464: putstatic     #97                 // Field INSTANCE:Lcom/ibm/icu/impl/UCaseProps;
    1467: goto          1480
    1470: astore_0
    1471: new           #80                 // class com/ibm/icu/util/ICUUncheckedIOException
    1474: dup
    1475: aload_0
    1476: invokespecial #81                 // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
    1479: athrow
    1480: return
    Exception table:
       from    to  target type
        1457  1467  1470   Class java/io/IOException
}
