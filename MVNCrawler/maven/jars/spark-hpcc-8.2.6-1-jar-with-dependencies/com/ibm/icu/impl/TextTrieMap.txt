Compiled from "TextTrieMap.java"
public class com.ibm.icu.impl.TextTrieMap<V> {
  private com.ibm.icu.impl.TextTrieMap<V>.Node _root;

  boolean _ignoreCase;

  public com.ibm.icu.impl.TextTrieMap(boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class com/ibm/icu/impl/TextTrieMap$Node
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #6                  // Method com/ibm/icu/impl/TextTrieMap$Node."<init>":(Lcom/ibm/icu/impl/TextTrieMap;Lcom/ibm/icu/impl/TextTrieMap$1;)V
      14: putfield      #7                  // Field _root:Lcom/ibm/icu/impl/TextTrieMap$Node;
      17: aload_0
      18: iload_1
      19: putfield      #8                  // Field _ignoreCase:Z
      22: return

  public com.ibm.icu.impl.TextTrieMap<V> put(java.lang.CharSequence, V);
    Code:
       0: new           #9                  // class com/ibm/icu/impl/TextTrieMap$CharIterator
       3: dup
       4: aload_1
       5: iconst_0
       6: aload_0
       7: getfield      #8                  // Field _ignoreCase:Z
      10: invokespecial #10                 // Method com/ibm/icu/impl/TextTrieMap$CharIterator."<init>":(Ljava/lang/CharSequence;IZ)V
      13: astore_3
      14: aload_0
      15: getfield      #7                  // Field _root:Lcom/ibm/icu/impl/TextTrieMap$Node;
      18: aload_3
      19: aload_2
      20: invokevirtual #11                 // Method com/ibm/icu/impl/TextTrieMap$Node.add:(Lcom/ibm/icu/impl/TextTrieMap$CharIterator;Ljava/lang/Object;)V
      23: aload_0
      24: areturn

  public java.util.Iterator<V> get(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #12                 // Method get:(Ljava/lang/CharSequence;I)Ljava/util/Iterator;
       6: areturn

  public java.util.Iterator<V> get(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokevirtual #13                 // Method get:(Ljava/lang/CharSequence;ILcom/ibm/icu/impl/TextTrieMap$Output;)Ljava/util/Iterator;
       7: areturn

  public java.util.Iterator<V> get(java.lang.CharSequence, int, com.ibm.icu.impl.TextTrieMap$Output);
    Code:
       0: new           #14                 // class com/ibm/icu/impl/TextTrieMap$LongestMatchHandler
       3: dup
       4: aconst_null
       5: invokespecial #15                 // Method com/ibm/icu/impl/TextTrieMap$LongestMatchHandler."<init>":(Lcom/ibm/icu/impl/TextTrieMap$1;)V
       8: astore        4
      10: aload_0
      11: aload_1
      12: iload_2
      13: aload         4
      15: aload_3
      16: invokespecial #16                 // Method find:(Ljava/lang/CharSequence;ILcom/ibm/icu/impl/TextTrieMap$ResultHandler;Lcom/ibm/icu/impl/TextTrieMap$Output;)V
      19: aload_3
      20: ifnull        32
      23: aload_3
      24: aload         4
      26: invokevirtual #17                 // Method com/ibm/icu/impl/TextTrieMap$LongestMatchHandler.getMatchLength:()I
      29: putfield      #18                 // Field com/ibm/icu/impl/TextTrieMap$Output.matchLength:I
      32: aload         4
      34: invokevirtual #19                 // Method com/ibm/icu/impl/TextTrieMap$LongestMatchHandler.getMatches:()Ljava/util/Iterator;
      37: areturn

  public void find(java.lang.CharSequence, com.ibm.icu.impl.TextTrieMap$ResultHandler<V>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: aconst_null
       5: invokespecial #16                 // Method find:(Ljava/lang/CharSequence;ILcom/ibm/icu/impl/TextTrieMap$ResultHandler;Lcom/ibm/icu/impl/TextTrieMap$Output;)V
       8: return

  public void find(java.lang.CharSequence, int, com.ibm.icu.impl.TextTrieMap$ResultHandler<V>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #16                 // Method find:(Ljava/lang/CharSequence;ILcom/ibm/icu/impl/TextTrieMap$ResultHandler;Lcom/ibm/icu/impl/TextTrieMap$Output;)V
       8: return

  private void find(java.lang.CharSequence, int, com.ibm.icu.impl.TextTrieMap$ResultHandler<V>, com.ibm.icu.impl.TextTrieMap$Output);
    Code:
       0: new           #9                  // class com/ibm/icu/impl/TextTrieMap$CharIterator
       3: dup
       4: aload_1
       5: iload_2
       6: aload_0
       7: getfield      #8                  // Field _ignoreCase:Z
      10: invokespecial #10                 // Method com/ibm/icu/impl/TextTrieMap$CharIterator."<init>":(Ljava/lang/CharSequence;IZ)V
      13: astore        5
      15: aload_0
      16: aload_0
      17: getfield      #7                  // Field _root:Lcom/ibm/icu/impl/TextTrieMap$Node;
      20: aload         5
      22: aload_3
      23: aload         4
      25: invokespecial #20                 // Method find:(Lcom/ibm/icu/impl/TextTrieMap$Node;Lcom/ibm/icu/impl/TextTrieMap$CharIterator;Lcom/ibm/icu/impl/TextTrieMap$ResultHandler;Lcom/ibm/icu/impl/TextTrieMap$Output;)V
      28: return

  private synchronized void find(com.ibm.icu.impl.TextTrieMap<V>.Node, com.ibm.icu.impl.TextTrieMap$CharIterator, com.ibm.icu.impl.TextTrieMap$ResultHandler<V>, com.ibm.icu.impl.TextTrieMap$Output);
    Code:
       0: aload_1
       1: invokevirtual #21                 // Method com/ibm/icu/impl/TextTrieMap$Node.values:()Ljava/util/Iterator;
       4: astore        5
       6: aload         5
       8: ifnull        27
      11: aload_3
      12: aload_2
      13: invokevirtual #22                 // Method com/ibm/icu/impl/TextTrieMap$CharIterator.processedLength:()I
      16: aload         5
      18: invokeinterface #23,  3           // InterfaceMethod com/ibm/icu/impl/TextTrieMap$ResultHandler.handlePrefixMatch:(ILjava/util/Iterator;)Z
      23: ifne          27
      26: return
      27: aload_1
      28: aload_2
      29: aload         4
      31: invokevirtual #24                 // Method com/ibm/icu/impl/TextTrieMap$Node.findMatch:(Lcom/ibm/icu/impl/TextTrieMap$CharIterator;Lcom/ibm/icu/impl/TextTrieMap$Output;)Lcom/ibm/icu/impl/TextTrieMap$Node;
      34: astore        6
      36: aload         6
      38: ifnull        51
      41: aload_0
      42: aload         6
      44: aload_2
      45: aload_3
      46: aload         4
      48: invokespecial #20                 // Method find:(Lcom/ibm/icu/impl/TextTrieMap$Node;Lcom/ibm/icu/impl/TextTrieMap$CharIterator;Lcom/ibm/icu/impl/TextTrieMap$ResultHandler;Lcom/ibm/icu/impl/TextTrieMap$Output;)V
      51: return

  public void putLeadCodePoints(com.ibm.icu.text.UnicodeSet);
    Code:
       0: aload_0
       1: getfield      #7                  // Field _root:Lcom/ibm/icu/impl/TextTrieMap$Node;
       4: aload_1
       5: invokevirtual #25                 // Method com/ibm/icu/impl/TextTrieMap$Node.putLeadCodePoints:(Lcom/ibm/icu/text/UnicodeSet;)V
       8: return

  private static char[] toCharArray(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: newarray       char
       8: astore_1
       9: iconst_0
      10: istore_2
      11: iload_2
      12: aload_1
      13: arraylength
      14: if_icmpge     33
      17: aload_1
      18: iload_2
      19: aload_0
      20: iload_2
      21: invokeinterface #27,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      26: castore
      27: iinc          2, 1
      30: goto          11
      33: aload_1
      34: areturn

  private static char[] subArray(char[], int);
    Code:
       0: iload_1
       1: ifne          6
       4: aload_0
       5: areturn
       6: aload_0
       7: arraylength
       8: iload_1
       9: isub
      10: newarray       char
      12: astore_2
      13: aload_0
      14: iload_1
      15: aload_2
      16: iconst_0
      17: aload_2
      18: arraylength
      19: invokestatic  #28                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: aload_2
      23: areturn

  private static char[] subArray(char[], int, int);
    Code:
       0: iload_1
       1: ifne          12
       4: iload_2
       5: aload_0
       6: arraylength
       7: if_icmpne     12
      10: aload_0
      11: areturn
      12: iload_2
      13: iload_1
      14: isub
      15: newarray       char
      17: astore_3
      18: aload_0
      19: iload_1
      20: aload_3
      21: iconst_0
      22: iload_2
      23: iload_1
      24: isub
      25: invokestatic  #28                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      28: aload_3
      29: areturn

  static char[] access$200(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method toCharArray:(Ljava/lang/CharSequence;)[C
       4: areturn

  static char[] access$300(char[], int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method subArray:([CI)[C
       5: areturn

  static char[] access$400(char[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #1                  // Method subArray:([CII)[C
       6: areturn
}
