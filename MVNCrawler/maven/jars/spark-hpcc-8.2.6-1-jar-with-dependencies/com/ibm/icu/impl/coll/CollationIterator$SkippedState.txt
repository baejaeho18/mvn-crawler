Compiled from "CollationIterator.java"
final class com.ibm.icu.impl.coll.CollationIterator$SkippedState {
  private final java.lang.StringBuilder oldBuffer;

  private final java.lang.StringBuilder newBuffer;

  private int pos;

  private int skipLengthAtMatch;

  private com.ibm.icu.util.CharsTrie$State state;

  static final boolean $assertionsDisabled;

  com.ibm.icu.impl.coll.CollationIterator$SkippedState();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: putfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
      15: aload_0
      16: new           #2                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      23: putfield      #5                  // Field newBuffer:Ljava/lang/StringBuilder;
      26: aload_0
      27: new           #6                  // class com/ibm/icu/util/CharsTrie$State
      30: dup
      31: invokespecial #7                  // Method com/ibm/icu/util/CharsTrie$State."<init>":()V
      34: putfield      #8                  // Field state:Lcom/ibm/icu/util/CharsTrie$State;
      37: return

  void clear();
    Code:
       0: aload_0
       1: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #9                  // Method java/lang/StringBuilder.setLength:(I)V
       8: aload_0
       9: iconst_0
      10: putfield      #10                 // Field pos:I
      13: return

  boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #10                 // Field pos:I
       4: aload_0
       5: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
       8: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
      11: if_icmpge     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  int next();
    Code:
       0: aload_0
       1: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
       4: aload_0
       5: getfield      #10                 // Field pos:I
       8: invokevirtual #12                 // Method java/lang/StringBuilder.codePointAt:(I)I
      11: istore_1
      12: aload_0
      13: dup
      14: getfield      #10                 // Field pos:I
      17: iload_1
      18: invokestatic  #13                 // Method java/lang/Character.charCount:(I)I
      21: iadd
      22: putfield      #10                 // Field pos:I
      25: iload_1
      26: ireturn

  void incBeyond();
    Code:
       0: getstatic     #14                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #15                 // Method hasNext:()Z
      10: ifeq          21
      13: new           #16                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #17                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: dup
      23: getfield      #10                 // Field pos:I
      26: iconst_1
      27: iadd
      28: putfield      #10                 // Field pos:I
      31: return

  int backwardNumCodePoints(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       7: istore_2
       8: aload_0
       9: getfield      #10                 // Field pos:I
      12: iload_2
      13: isub
      14: istore_3
      15: iload_3
      16: ifle          53
      19: iload_3
      20: iload_1
      21: if_icmplt     36
      24: aload_0
      25: dup
      26: getfield      #10                 // Field pos:I
      29: iload_1
      30: isub
      31: putfield      #10                 // Field pos:I
      34: iload_1
      35: ireturn
      36: aload_0
      37: aload_0
      38: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
      41: iload_2
      42: iload_3
      43: iload_1
      44: isub
      45: invokevirtual #18                 // Method java/lang/StringBuilder.offsetByCodePoints:(II)I
      48: putfield      #10                 // Field pos:I
      51: iload_3
      52: ireturn
      53: aload_0
      54: aload_0
      55: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #10                 // Field pos:I
      62: iload_1
      63: ineg
      64: invokevirtual #18                 // Method java/lang/StringBuilder.offsetByCodePoints:(II)I
      67: putfield      #10                 // Field pos:I
      70: iconst_0
      71: ireturn

  void setFirstSkipped(int);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #19                 // Field skipLengthAtMatch:I
       5: aload_0
       6: getfield      #5                  // Field newBuffer:Ljava/lang/StringBuilder;
       9: iconst_0
      10: invokevirtual #9                  // Method java/lang/StringBuilder.setLength:(I)V
      13: aload_0
      14: getfield      #5                  // Field newBuffer:Ljava/lang/StringBuilder;
      17: iload_1
      18: invokevirtual #20                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
      21: pop
      22: return

  void skip(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field newBuffer:Ljava/lang/StringBuilder;
       4: iload_1
       5: invokevirtual #20                 // Method java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;
       8: pop
       9: return

  void recordMatch();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field newBuffer:Ljava/lang/StringBuilder;
       5: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       8: putfield      #19                 // Field skipLengthAtMatch:I
      11: return

  void replaceMatch();
    Code:
       0: aload_0
       1: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
       4: invokevirtual #11                 // Method java/lang/StringBuilder.length:()I
       7: istore_1
       8: aload_0
       9: getfield      #10                 // Field pos:I
      12: iload_1
      13: if_icmple     21
      16: aload_0
      17: iload_1
      18: putfield      #10                 // Field pos:I
      21: aload_0
      22: getfield      #4                  // Field oldBuffer:Ljava/lang/StringBuilder;
      25: iconst_0
      26: aload_0
      27: getfield      #10                 // Field pos:I
      30: invokevirtual #21                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      33: iconst_0
      34: aload_0
      35: getfield      #5                  // Field newBuffer:Ljava/lang/StringBuilder;
      38: iconst_0
      39: aload_0
      40: getfield      #19                 // Field skipLengthAtMatch:I
      43: invokevirtual #22                 // Method java/lang/StringBuilder.insert:(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      46: pop
      47: aload_0
      48: iconst_0
      49: putfield      #10                 // Field pos:I
      52: return

  void saveTrieState(com.ibm.icu.util.CharsTrie);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field state:Lcom/ibm/icu/util/CharsTrie$State;
       5: invokevirtual #23                 // Method com/ibm/icu/util/CharsTrie.saveState:(Lcom/ibm/icu/util/CharsTrie$State;)Lcom/ibm/icu/util/CharsTrie;
       8: pop
       9: return

  void resetToTrieState(com.ibm.icu.util.CharsTrie);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field state:Lcom/ibm/icu/util/CharsTrie$State;
       5: invokevirtual #24                 // Method com/ibm/icu/util/CharsTrie.resetToState:(Lcom/ibm/icu/util/CharsTrie$State;)Lcom/ibm/icu/util/CharsTrie;
       8: pop
       9: return

  static {};
    Code:
       0: ldc           #25                 // class com/ibm/icu/impl/coll/CollationIterator
       2: invokevirtual #26                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #14                 // Field $assertionsDisabled:Z
      16: return
}
