Compiled from "SimpleFilteredSentenceBreakIterator.java"
public class com.ibm.icu.impl.SimpleFilteredSentenceBreakIterator extends com.ibm.icu.text.BreakIterator {
  private com.ibm.icu.text.BreakIterator delegate;

  private com.ibm.icu.text.UCharacterIterator text;

  private com.ibm.icu.util.CharsTrie backwardsTrie;

  private com.ibm.icu.util.CharsTrie forwardsPartialTrie;

  public com.ibm.icu.impl.SimpleFilteredSentenceBreakIterator(com.ibm.icu.text.BreakIterator, com.ibm.icu.util.CharsTrie, com.ibm.icu.util.CharsTrie);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/ibm/icu/text/BreakIterator."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field forwardsPartialTrie:Lcom/ibm/icu/util/CharsTrie;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      19: return

  private final void resetState();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       5: invokevirtual #5                  // Method com/ibm/icu/text/BreakIterator.getText:()Ljava/text/CharacterIterator;
       8: invokeinterface #6,  1            // InterfaceMethod java/text/CharacterIterator.clone:()Ljava/lang/Object;
      13: checkcast     #7                  // class java/text/CharacterIterator
      16: invokestatic  #8                  // Method com/ibm/icu/text/UCharacterIterator.getInstance:(Ljava/text/CharacterIterator;)Lcom/ibm/icu/text/UCharacterIterator;
      19: putfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      22: return

  private final boolean breakExceptionAt(int);
    Code:
       0: iconst_m1
       1: istore_2
       2: iconst_m1
       3: istore_3
       4: aload_0
       5: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
       8: iload_1
       9: invokevirtual #10                 // Method com/ibm/icu/text/UCharacterIterator.setIndex:(I)V
      12: aload_0
      13: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      16: invokevirtual #11                 // Method com/ibm/icu/util/CharsTrie.reset:()Lcom/ibm/icu/util/CharsTrie;
      19: pop
      20: aload_0
      21: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      24: invokevirtual #12                 // Method com/ibm/icu/text/UCharacterIterator.previousCodePoint:()I
      27: dup
      28: istore        4
      30: bipush        32
      32: if_icmpne     38
      35: goto          47
      38: aload_0
      39: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      42: invokevirtual #13                 // Method com/ibm/icu/text/UCharacterIterator.nextCodePoint:()I
      45: istore        4
      47: getstatic     #14                 // Field com/ibm/icu/util/BytesTrie$Result.INTERMEDIATE_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
      50: astore        5
      52: aload_0
      53: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      56: invokevirtual #12                 // Method com/ibm/icu/text/UCharacterIterator.previousCodePoint:()I
      59: dup
      60: istore        4
      62: iconst_m1
      63: if_icmpeq     111
      66: aload_0
      67: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      70: iload         4
      72: invokevirtual #16                 // Method com/ibm/icu/util/CharsTrie.nextForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
      75: dup
      76: astore        5
      78: invokevirtual #17                 // Method com/ibm/icu/util/BytesTrie$Result.hasNext:()Z
      81: ifeq          111
      84: aload         5
      86: invokevirtual #18                 // Method com/ibm/icu/util/BytesTrie$Result.hasValue:()Z
      89: ifeq          52
      92: aload_0
      93: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      96: invokevirtual #19                 // Method com/ibm/icu/text/UCharacterIterator.getIndex:()I
      99: istore_2
     100: aload_0
     101: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
     104: invokevirtual #20                 // Method com/ibm/icu/util/CharsTrie.getValue:()I
     107: istore_3
     108: goto          52
     111: aload         5
     113: invokevirtual #21                 // Method com/ibm/icu/util/BytesTrie$Result.matches:()Z
     116: ifeq          135
     119: aload_0
     120: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
     123: invokevirtual #20                 // Method com/ibm/icu/util/CharsTrie.getValue:()I
     126: istore_3
     127: aload_0
     128: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
     131: invokevirtual #19                 // Method com/ibm/icu/text/UCharacterIterator.getIndex:()I
     134: istore_2
     135: iload_2
     136: iflt          224
     139: iload_3
     140: iconst_2
     141: if_icmpne     146
     144: iconst_1
     145: ireturn
     146: iload_3
     147: iconst_1
     148: if_icmpne     224
     151: aload_0
     152: getfield      #3                  // Field forwardsPartialTrie:Lcom/ibm/icu/util/CharsTrie;
     155: ifnull        224
     158: aload_0
     159: getfield      #3                  // Field forwardsPartialTrie:Lcom/ibm/icu/util/CharsTrie;
     162: invokevirtual #11                 // Method com/ibm/icu/util/CharsTrie.reset:()Lcom/ibm/icu/util/CharsTrie;
     165: pop
     166: getstatic     #14                 // Field com/ibm/icu/util/BytesTrie$Result.INTERMEDIATE_VALUE:Lcom/ibm/icu/util/BytesTrie$Result;
     169: astore        6
     171: aload_0
     172: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
     175: iload_2
     176: invokevirtual #10                 // Method com/ibm/icu/text/UCharacterIterator.setIndex:(I)V
     179: aload_0
     180: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
     183: invokevirtual #13                 // Method com/ibm/icu/text/UCharacterIterator.nextCodePoint:()I
     186: dup
     187: istore        4
     189: iconst_m1
     190: if_icmpeq     214
     193: aload_0
     194: getfield      #3                  // Field forwardsPartialTrie:Lcom/ibm/icu/util/CharsTrie;
     197: iload         4
     199: invokevirtual #16                 // Method com/ibm/icu/util/CharsTrie.nextForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
     202: dup
     203: astore        6
     205: invokevirtual #17                 // Method com/ibm/icu/util/BytesTrie$Result.hasNext:()Z
     208: ifeq          214
     211: goto          179
     214: aload         6
     216: invokevirtual #21                 // Method com/ibm/icu/util/BytesTrie$Result.matches:()Z
     219: ifeq          224
     222: iconst_1
     223: ireturn
     224: iconst_0
     225: ireturn

  private final int internalNext(int);
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpeq     12
       5: aload_0
       6: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
       9: ifnonnull     14
      12: iload_1
      13: ireturn
      14: aload_0
      15: invokespecial #24                 // Method resetState:()V
      18: aload_0
      19: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      22: invokevirtual #25                 // Method com/ibm/icu/text/UCharacterIterator.getLength:()I
      25: istore_2
      26: iload_1
      27: iconst_m1
      28: if_icmpeq     57
      31: iload_1
      32: iload_2
      33: if_icmpeq     57
      36: aload_0
      37: iload_1
      38: invokespecial #26                 // Method breakExceptionAt:(I)Z
      41: ifeq          55
      44: aload_0
      45: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
      48: invokevirtual #27                 // Method com/ibm/icu/text/BreakIterator.next:()I
      51: istore_1
      52: goto          26
      55: iload_1
      56: ireturn
      57: iload_1
      58: ireturn

  private final int internalPrev(int);
    Code:
       0: iload_1
       1: ifeq          16
       4: iload_1
       5: iconst_m1
       6: if_icmpeq     16
       9: aload_0
      10: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      13: ifnonnull     18
      16: iload_1
      17: ireturn
      18: aload_0
      19: invokespecial #24                 // Method resetState:()V
      22: iload_1
      23: iconst_m1
      24: if_icmpeq     52
      27: iload_1
      28: ifeq          52
      31: aload_0
      32: iload_1
      33: invokespecial #26                 // Method breakExceptionAt:(I)Z
      36: ifeq          50
      39: aload_0
      40: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
      43: invokevirtual #28                 // Method com/ibm/icu/text/BreakIterator.previous:()I
      46: istore_1
      47: goto          22
      50: iload_1
      51: ireturn
      52: iload_1
      53: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: if_acmpne     13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #30                 // class com/ibm/icu/impl/SimpleFilteredSentenceBreakIterator
      30: astore_2
      31: aload_0
      32: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
      35: aload_2
      36: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
      39: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ifeq          91
      45: aload_0
      46: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      49: aload_2
      50: getfield      #9                  // Field text:Lcom/ibm/icu/text/UCharacterIterator;
      53: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      56: ifeq          91
      59: aload_0
      60: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      63: aload_2
      64: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      67: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      70: ifeq          91
      73: aload_0
      74: getfield      #3                  // Field forwardsPartialTrie:Lcom/ibm/icu/util/CharsTrie;
      77: aload_2
      78: getfield      #3                  // Field forwardsPartialTrie:Lcom/ibm/icu/util/CharsTrie;
      81: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      84: ifeq          91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field forwardsPartialTrie:Lcom/ibm/icu/util/CharsTrie;
       4: invokevirtual #32                 // Method java/lang/Object.hashCode:()I
       7: bipush        39
       9: imul
      10: aload_0
      11: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      14: invokevirtual #32                 // Method java/lang/Object.hashCode:()I
      17: bipush        11
      19: imul
      20: iadd
      21: aload_0
      22: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
      25: invokevirtual #32                 // Method java/lang/Object.hashCode:()I
      28: iadd
      29: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method com/ibm/icu/text/BreakIterator.clone:()Ljava/lang/Object;
       4: checkcast     #30                 // class com/ibm/icu/impl/SimpleFilteredSentenceBreakIterator
       7: astore_1
       8: aload_1
       9: areturn

  public int first();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       4: invokevirtual #34                 // Method com/ibm/icu/text/BreakIterator.first:()I
       7: ireturn

  public int preceding(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       5: iload_1
       6: invokevirtual #35                 // Method com/ibm/icu/text/BreakIterator.preceding:(I)I
       9: invokespecial #36                 // Method internalPrev:(I)I
      12: ireturn

  public int previous();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       5: invokevirtual #28                 // Method com/ibm/icu/text/BreakIterator.previous:()I
       8: invokespecial #36                 // Method internalPrev:(I)I
      11: ireturn

  public int current();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       4: invokevirtual #37                 // Method com/ibm/icu/text/BreakIterator.current:()I
       7: ireturn

  public boolean isBoundary(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       4: iload_1
       5: invokevirtual #38                 // Method com/ibm/icu/text/BreakIterator.isBoundary:(I)Z
       8: ifne          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #4                  // Field backwardsTrie:Lcom/ibm/icu/util/CharsTrie;
      17: ifnonnull     22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: invokespecial #24                 // Method resetState:()V
      26: aload_0
      27: iload_1
      28: invokespecial #26                 // Method breakExceptionAt:(I)Z
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  public int next();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       5: invokevirtual #27                 // Method com/ibm/icu/text/BreakIterator.next:()I
       8: invokespecial #39                 // Method internalNext:(I)I
      11: ireturn

  public int next(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       5: iload_1
       6: invokevirtual #40                 // Method com/ibm/icu/text/BreakIterator.next:(I)I
       9: invokespecial #39                 // Method internalNext:(I)I
      12: ireturn

  public int following(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       5: iload_1
       6: invokevirtual #41                 // Method com/ibm/icu/text/BreakIterator.following:(I)I
       9: invokespecial #39                 // Method internalNext:(I)I
      12: ireturn

  public int last();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       4: invokevirtual #42                 // Method com/ibm/icu/text/BreakIterator.last:()I
       7: ireturn

  public java.text.CharacterIterator getText();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       4: invokevirtual #5                  // Method com/ibm/icu/text/BreakIterator.getText:()Ljava/text/CharacterIterator;
       7: areturn

  public void setText(java.text.CharacterIterator);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lcom/ibm/icu/text/BreakIterator;
       4: aload_1
       5: invokevirtual #43                 // Method com/ibm/icu/text/BreakIterator.setText:(Ljava/text/CharacterIterator;)V
       8: return
}
