Compiled from "CollationIterator.java"
public abstract class com.ibm.icu.impl.coll.CollationIterator {
  protected static final long NO_CP_AND_CE32;

  protected final com.ibm.icu.impl.Trie2_32 trie;

  protected final com.ibm.icu.impl.coll.CollationData data;

  private com.ibm.icu.impl.coll.CollationIterator$CEBuffer ceBuffer;

  private int cesIndex;

  private com.ibm.icu.impl.coll.CollationIterator$SkippedState skipped;

  private int numCpFwd;

  private boolean isNumeric;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.impl.coll.CollationIterator(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #3                  // Field com/ibm/icu/impl/coll/CollationData.trie:Lcom/ibm/icu/impl/Trie2_32;
       9: putfield      #4                  // Field trie:Lcom/ibm/icu/impl/Trie2_32;
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      17: aload_0
      18: iconst_m1
      19: putfield      #6                  // Field numCpFwd:I
      22: aload_0
      23: iconst_0
      24: putfield      #7                  // Field isNumeric:Z
      27: aload_0
      28: aconst_null
      29: putfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      32: return

  public com.ibm.icu.impl.coll.CollationIterator(com.ibm.icu.impl.coll.CollationData, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #3                  // Field com/ibm/icu/impl/coll/CollationData.trie:Lcom/ibm/icu/impl/Trie2_32;
       9: putfield      #4                  // Field trie:Lcom/ibm/icu/impl/Trie2_32;
      12: aload_0
      13: aload_1
      14: putfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      17: aload_0
      18: iconst_m1
      19: putfield      #6                  // Field numCpFwd:I
      22: aload_0
      23: iload_2
      24: putfield      #7                  // Field isNumeric:Z
      27: aload_0
      28: new           #9                  // class com/ibm/icu/impl/coll/CollationIterator$CEBuffer
      31: dup
      32: invokespecial #10                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer."<init>":()V
      35: putfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      38: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #13                 // class com/ibm/icu/impl/coll/CollationIterator
      26: astore_2
      27: aload_0
      28: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      31: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      34: aload_2
      35: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      38: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      41: if_icmpne     77
      44: aload_0
      45: getfield      #15                 // Field cesIndex:I
      48: aload_2
      49: getfield      #15                 // Field cesIndex:I
      52: if_icmpne     77
      55: aload_0
      56: getfield      #6                  // Field numCpFwd:I
      59: aload_2
      60: getfield      #6                  // Field numCpFwd:I
      63: if_icmpne     77
      66: aload_0
      67: getfield      #7                  // Field isNumeric:Z
      70: aload_2
      71: getfield      #7                  // Field isNumeric:Z
      74: if_icmpeq     79
      77: iconst_0
      78: ireturn
      79: iconst_0
      80: istore_3
      81: iload_3
      82: aload_0
      83: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      86: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      89: if_icmpge     120
      92: aload_0
      93: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      96: iload_3
      97: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
     100: aload_2
     101: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     104: iload_3
     105: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
     108: lcmp
     109: ifeq          114
     112: iconst_0
     113: ireturn
     114: iinc          3, 1
     117: goto          81
     120: iconst_1
     121: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: ireturn

  public abstract void resetToOffset(int);

  public abstract int getOffset();

  public final long nextCE();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cesIndex:I
       4: aload_0
       5: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       8: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      11: if_icmpge     33
      14: aload_0
      15: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      18: aload_0
      19: dup
      20: getfield      #15                 // Field cesIndex:I
      23: dup_x1
      24: iconst_1
      25: iadd
      26: putfield      #15                 // Field cesIndex:I
      29: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
      32: lreturn
      33: getstatic     #17                 // Field $assertionsDisabled:Z
      36: ifne          61
      39: aload_0
      40: getfield      #15                 // Field cesIndex:I
      43: aload_0
      44: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      47: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      50: if_icmpeq     61
      53: new           #18                 // class java/lang/AssertionError
      56: dup
      57: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      60: athrow
      61: aload_0
      62: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      65: invokevirtual #20                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.incLength:()V
      68: aload_0
      69: invokevirtual #21                 // Method handleNextCE32:()J
      72: lstore_1
      73: lload_1
      74: bipush        32
      76: lshr
      77: l2i
      78: istore_3
      79: lload_1
      80: l2i
      81: istore        4
      83: iload         4
      85: sipush        255
      88: iand
      89: istore        5
      91: iload         5
      93: sipush        192
      96: if_icmpge     144
      99: aload_0
     100: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     103: aload_0
     104: dup
     105: getfield      #15                 // Field cesIndex:I
     108: dup_x1
     109: iconst_1
     110: iadd
     111: putfield      #15                 // Field cesIndex:I
     114: iload         4
     116: ldc           #22                 // int -65536
     118: iand
     119: i2l
     120: bipush        32
     122: lshl
     123: iload         4
     125: ldc           #23                 // int 65280
     127: iand
     128: i2l
     129: bipush        16
     131: lshl
     132: lor
     133: iload         5
     135: bipush        8
     137: ishl
     138: i2l
     139: lor
     140: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     143: lreturn
     144: iload         5
     146: sipush        192
     149: if_icmpne     256
     152: iload_3
     153: ifge          178
     156: aload_0
     157: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     160: aload_0
     161: dup
     162: getfield      #15                 // Field cesIndex:I
     165: dup_x1
     166: iconst_1
     167: iadd
     168: putfield      #15                 // Field cesIndex:I
     171: ldc2_w        #25                 // long 4311744768l
     174: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     177: lreturn
     178: aload_0
     179: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     182: getfield      #27                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     185: astore        6
     187: aload         6
     189: iload_3
     190: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     193: istore        4
     195: iload         4
     197: sipush        255
     200: iand
     201: istore        5
     203: iload         5
     205: sipush        192
     208: if_icmpge     262
     211: aload_0
     212: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     215: aload_0
     216: dup
     217: getfield      #15                 // Field cesIndex:I
     220: dup_x1
     221: iconst_1
     222: iadd
     223: putfield      #15                 // Field cesIndex:I
     226: iload         4
     228: ldc           #22                 // int -65536
     230: iand
     231: i2l
     232: bipush        32
     234: lshl
     235: iload         4
     237: ldc           #23                 // int 65280
     239: iand
     240: i2l
     241: bipush        16
     243: lshl
     244: lor
     245: iload         5
     247: bipush        8
     249: ishl
     250: i2l
     251: lor
     252: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     255: lreturn
     256: aload_0
     257: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     260: astore        6
     262: iload         5
     264: sipush        193
     267: if_icmpne     302
     270: aload_0
     271: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     274: aload_0
     275: dup
     276: getfield      #15                 // Field cesIndex:I
     279: dup_x1
     280: iconst_1
     281: iadd
     282: putfield      #15                 // Field cesIndex:I
     285: iload         4
     287: iload         5
     289: isub
     290: i2l
     291: bipush        32
     293: lshl
     294: ldc2_w        #29                 // long 83887360l
     297: lor
     298: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     301: lreturn
     302: aload_0
     303: aload         6
     305: iload_3
     306: iload         4
     308: invokespecial #31                 // Method nextCEFromCE32:(Lcom/ibm/icu/impl/coll/CollationData;II)J
     311: lreturn

  public final int fetchCEs();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method nextCE:()J
       4: ldc2_w        #25                 // long 4311744768l
       7: lcmp
       8: ifeq          25
      11: aload_0
      12: aload_0
      13: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      16: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      19: putfield      #15                 // Field cesIndex:I
      22: goto          0
      25: aload_0
      26: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      29: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      32: ireturn

  final void setCurrentCE(long);
    Code:
       0: getstatic     #17                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #15                 // Field cesIndex:I
      10: ifgt          21
      13: new           #18                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      25: aload_0
      26: getfield      #15                 // Field cesIndex:I
      29: iconst_1
      30: isub
      31: lload_1
      32: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
      35: pop2
      36: return

  public final long previousCE(com.ibm.icu.impl.coll.UVector32);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       4: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
       7: ifle          32
      10: aload_0
      11: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      14: aload_0
      15: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      18: dup
      19: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      22: iconst_1
      23: isub
      24: dup_x1
      25: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      28: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
      31: lreturn
      32: aload_1
      33: invokevirtual #33                 // Method com/ibm/icu/impl/coll/UVector32.removeAllElements:()V
      36: aload_0
      37: invokevirtual #34                 // Method getOffset:()I
      40: istore_2
      41: aload_0
      42: invokevirtual #35                 // Method previousCodePoint:()I
      45: istore_3
      46: iload_3
      47: ifge          54
      50: ldc2_w        #25                 // long 4311744768l
      53: lreturn
      54: aload_0
      55: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      58: iload_3
      59: aload_0
      60: getfield      #7                  // Field isNumeric:Z
      63: invokevirtual #36                 // Method com/ibm/icu/impl/coll/CollationData.isUnsafeBackward:(IZ)Z
      66: ifeq          76
      69: aload_0
      70: iload_3
      71: aload_1
      72: invokespecial #37                 // Method previousCEUnsafe:(ILcom/ibm/icu/impl/coll/UVector32;)J
      75: lreturn
      76: aload_0
      77: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      80: iload_3
      81: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      84: istore        4
      86: iload         4
      88: sipush        192
      91: if_icmpne     114
      94: aload_0
      95: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      98: getfield      #27                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     101: astore        5
     103: aload         5
     105: iload_3
     106: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     109: istore        4
     111: goto          120
     114: aload_0
     115: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     118: astore        5
     120: iload         4
     122: invokestatic  #38                 // Method com/ibm/icu/impl/coll/Collation.isSimpleOrLongCE32:(I)Z
     125: ifeq          134
     128: iload         4
     130: invokestatic  #39                 // Method com/ibm/icu/impl/coll/Collation.ceFromCE32:(I)J
     133: lreturn
     134: aload_0
     135: aload         5
     137: iload_3
     138: iload         4
     140: iconst_0
     141: invokevirtual #40                 // Method appendCEsFromCE32:(Lcom/ibm/icu/impl/coll/CollationData;IIZ)V
     144: aload_0
     145: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     148: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     151: iconst_1
     152: if_icmple     185
     155: aload_1
     156: aload_0
     157: invokevirtual #34                 // Method getOffset:()I
     160: invokevirtual #41                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     163: aload_1
     164: invokevirtual #42                 // Method com/ibm/icu/impl/coll/UVector32.size:()I
     167: aload_0
     168: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     171: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     174: if_icmpgt     185
     177: aload_1
     178: iload_2
     179: invokevirtual #41                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     182: goto          163
     185: aload_0
     186: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     189: aload_0
     190: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     193: dup
     194: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     197: iconst_1
     198: isub
     199: dup_x1
     200: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     203: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
     206: lreturn

  public final int getCEsLength();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       4: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
       7: ireturn

  public final long getCE(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       4: iload_1
       5: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
       8: lreturn

  public final long[] getCEs();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       4: invokevirtual #43                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.getCEs:()[J
       7: areturn

  final void clearCEs();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       5: iconst_0
       6: dup_x1
       7: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      10: putfield      #15                 // Field cesIndex:I
      13: return

  public final void clearCEsIfNoneRemaining();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cesIndex:I
       4: aload_0
       5: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       8: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      11: if_icmpne     18
      14: aload_0
      15: invokevirtual #44                 // Method clearCEs:()V
      18: return

  public abstract int nextCodePoint();

  public abstract int previousCodePoint();

  protected final void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       5: iconst_0
       6: dup_x1
       7: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      10: putfield      #15                 // Field cesIndex:I
      13: aload_0
      14: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      17: ifnull        27
      20: aload_0
      21: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      24: invokevirtual #46                 // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.clear:()V
      27: return

  protected final void reset(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       4: ifnonnull     18
       7: aload_0
       8: new           #9                  // class com/ibm/icu/impl/coll/CollationIterator$CEBuffer
      11: dup
      12: invokespecial #10                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer."<init>":()V
      15: putfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      18: aload_0
      19: invokevirtual #47                 // Method reset:()V
      22: aload_0
      23: iload_1
      24: putfield      #7                  // Field isNumeric:Z
      27: return

  protected long handleNextCE32();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method nextCodePoint:()I
       4: istore_1
       5: iload_1
       6: ifge          13
       9: ldc2_w        #49                 // long -4294967104l
      12: lreturn
      13: aload_0
      14: iload_1
      15: aload_0
      16: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      19: iload_1
      20: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      23: invokevirtual #51                 // Method makeCodePointAndCE32Pair:(II)J
      26: lreturn

  protected long makeCodePointAndCE32Pair(int, int);
    Code:
       0: iload_1
       1: i2l
       2: bipush        32
       4: lshl
       5: iload_2
       6: i2l
       7: ldc2_w        #52                 // long 4294967295l
      10: land
      11: lor
      12: lreturn

  protected char handleGetTrailSurrogate();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean forbidSurrogateCodePoints();
    Code:
       0: iconst_0
       1: ireturn

  protected abstract void forwardNumCodePoints(int);

  protected abstract void backwardNumCodePoints(int);

  protected int getDataCE32(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
       4: iload_1
       5: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
       8: ireturn

  protected int getCE32FromBuilderData(int);
    Code:
       0: new           #54                 // class com/ibm/icu/util/ICUException
       3: dup
       4: ldc           #55                 // String internal program error: should be unreachable
       6: invokespecial #56                 // Method com/ibm/icu/util/ICUException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected final void appendCEsFromCE32(com.ibm.icu.impl.coll.CollationData, int, int, boolean);
    Code:
       0: iload_3
       1: invokestatic  #57                 // Method com/ibm/icu/impl/coll/Collation.isSpecialCE32:(I)Z
       4: ifeq          942
       7: iload_3
       8: invokestatic  #58                 // Method com/ibm/icu/impl/coll/Collation.tagFromCE32:(I)I
      11: tableswitch   { // 0 to 15
                     0: 88
                     1: 98
                     2: 110
                     3: 88
                     4: 122
                     5: 184
                     6: 234
                     7: 281
                     8: 311
                     9: 341
                    10: 493
                    11: 521
                    12: 549
                    13: 742
                    14: 857
                    15: 889
               default: 939
          }
      88: new           #54                 // class com/ibm/icu/util/ICUException
      91: dup
      92: ldc           #55                 // String internal program error: should be unreachable
      94: invokespecial #56                 // Method com/ibm/icu/util/ICUException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     102: iload_3
     103: invokestatic  #59                 // Method com/ibm/icu/impl/coll/Collation.ceFromLongPrimaryCE32:(I)J
     106: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     109: return
     110: aload_0
     111: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     114: iload_3
     115: invokestatic  #61                 // Method com/ibm/icu/impl/coll/Collation.ceFromLongSecondaryCE32:(I)J
     118: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     121: return
     122: aload_0
     123: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     126: iconst_2
     127: invokevirtual #62                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.ensureAppendCapacity:(I)V
     130: aload_0
     131: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     134: aload_0
     135: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     138: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     141: iload_3
     142: invokestatic  #63                 // Method com/ibm/icu/impl/coll/Collation.latinCE0FromCE32:(I)J
     145: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     148: pop2
     149: aload_0
     150: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     153: aload_0
     154: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     157: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     160: iconst_1
     161: iadd
     162: iload_3
     163: invokestatic  #64                 // Method com/ibm/icu/impl/coll/Collation.latinCE1FromCE32:(I)J
     166: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     169: pop2
     170: aload_0
     171: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     174: dup
     175: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     178: iconst_2
     179: iadd
     180: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     183: return
     184: iload_3
     185: invokestatic  #65                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     188: istore        5
     190: iload_3
     191: invokestatic  #66                 // Method com/ibm/icu/impl/coll/Collation.lengthFromCE32:(I)I
     194: istore        6
     196: aload_0
     197: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     200: iload         6
     202: invokevirtual #62                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.ensureAppendCapacity:(I)V
     205: aload_0
     206: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     209: aload_1
     210: getfield      #67                 // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     213: iload         5
     215: iinc          5, 1
     218: iaload
     219: invokestatic  #39                 // Method com/ibm/icu/impl/coll/Collation.ceFromCE32:(I)J
     222: invokevirtual #68                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.appendUnsafe:(J)V
     225: iinc          6, -1
     228: iload         6
     230: ifgt          205
     233: return
     234: iload_3
     235: invokestatic  #65                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     238: istore        5
     240: iload_3
     241: invokestatic  #66                 // Method com/ibm/icu/impl/coll/Collation.lengthFromCE32:(I)I
     244: istore        6
     246: aload_0
     247: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     250: iload         6
     252: invokevirtual #62                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.ensureAppendCapacity:(I)V
     255: aload_0
     256: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     259: aload_1
     260: getfield      #69                 // Field com/ibm/icu/impl/coll/CollationData.ces:[J
     263: iload         5
     265: iinc          5, 1
     268: laload
     269: invokevirtual #68                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.appendUnsafe:(J)V
     272: iinc          6, -1
     275: iload         6
     277: ifgt          255
     280: return
     281: aload_0
     282: iload_3
     283: invokevirtual #70                 // Method getCE32FromBuilderData:(I)I
     286: istore_3
     287: iload_3
     288: sipush        192
     291: if_icmpne     939
     294: aload_0
     295: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     298: getfield      #27                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     301: astore_1
     302: aload_1
     303: iload_2
     304: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     307: istore_3
     308: goto          939
     311: iload         4
     313: ifeq          321
     316: aload_0
     317: iconst_1
     318: invokevirtual #71                 // Method backwardNumCodePoints:(I)V
     321: aload_0
     322: aload_1
     323: iload_3
     324: invokespecial #72                 // Method getCE32FromPrefix:(Lcom/ibm/icu/impl/coll/CollationData;I)I
     327: istore_3
     328: iload         4
     330: ifeq          939
     333: aload_0
     334: iconst_1
     335: invokevirtual #73                 // Method forwardNumCodePoints:(I)V
     338: goto          939
     341: iload_3
     342: invokestatic  #65                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     345: istore        5
     347: aload_1
     348: iload         5
     350: invokevirtual #74                 // Method com/ibm/icu/impl/coll/CollationData.getCE32FromContexts:(I)I
     353: istore        6
     355: iload         4
     357: ifne          366
     360: iload         6
     362: istore_3
     363: goto          939
     366: aload_0
     367: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     370: ifnonnull     424
     373: aload_0
     374: getfield      #6                  // Field numCpFwd:I
     377: ifge          424
     380: aload_0
     381: invokevirtual #48                 // Method nextCodePoint:()I
     384: istore        7
     386: iload         7
     388: ifge          397
     391: iload         6
     393: istore_3
     394: goto          939
     397: iload_3
     398: sipush        512
     401: iand
     402: ifeq          468
     405: iload         7
     407: invokestatic  #75                 // Method com/ibm/icu/impl/coll/CollationFCD.mayHaveLccc:(I)Z
     410: ifne          468
     413: aload_0
     414: iconst_1
     415: invokevirtual #71                 // Method backwardNumCodePoints:(I)V
     418: iload         6
     420: istore_3
     421: goto          939
     424: aload_0
     425: invokespecial #76                 // Method nextSkippedCodePoint:()I
     428: istore        7
     430: iload         7
     432: ifge          441
     435: iload         6
     437: istore_3
     438: goto          939
     441: iload_3
     442: sipush        512
     445: iand
     446: ifeq          468
     449: iload         7
     451: invokestatic  #75                 // Method com/ibm/icu/impl/coll/CollationFCD.mayHaveLccc:(I)Z
     454: ifne          468
     457: aload_0
     458: iconst_1
     459: invokespecial #77                 // Method backwardNumSkipped:(I)V
     462: iload         6
     464: istore_3
     465: goto          939
     468: aload_0
     469: aload_1
     470: iload_3
     471: aload_1
     472: getfield      #78                 // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
     475: iload         5
     477: iconst_2
     478: iadd
     479: iload         6
     481: iload         7
     483: invokespecial #79                 // Method nextCE32FromContraction:(Lcom/ibm/icu/impl/coll/CollationData;ILjava/lang/CharSequence;III)I
     486: istore_3
     487: iload_3
     488: iconst_1
     489: if_icmpne     939
     492: return
     493: aload_0
     494: getfield      #7                  // Field isNumeric:Z
     497: ifeq          508
     500: aload_0
     501: iload_3
     502: iload         4
     504: invokespecial #80                 // Method appendNumericCEs:(IZ)V
     507: return
     508: aload_1
     509: getfield      #67                 // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     512: iload_3
     513: invokestatic  #65                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     516: iaload
     517: istore_3
     518: goto          939
     521: getstatic     #17                 // Field $assertionsDisabled:Z
     524: ifne          539
     527: iload_2
     528: ifeq          539
     531: new           #18                 // class java/lang/AssertionError
     534: dup
     535: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     538: athrow
     539: aload_1
     540: getfield      #67                 // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     543: iconst_0
     544: iaload
     545: istore_3
     546: goto          939
     549: aload_1
     550: getfield      #81                 // Field com/ibm/icu/impl/coll/CollationData.jamoCE32s:[I
     553: astore        5
     555: iload_2
     556: ldc           #82                 // int 44032
     558: isub
     559: istore_2
     560: iload_2
     561: bipush        28
     563: irem
     564: istore        6
     566: iload_2
     567: bipush        28
     569: idiv
     570: istore_2
     571: iload_2
     572: bipush        21
     574: irem
     575: istore        7
     577: iload_2
     578: bipush        21
     580: idiv
     581: istore_2
     582: iload_3
     583: sipush        256
     586: iand
     587: ifeq          694
     590: aload_0
     591: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     594: iload         6
     596: ifne          603
     599: iconst_2
     600: goto          604
     603: iconst_3
     604: invokevirtual #62                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.ensureAppendCapacity:(I)V
     607: aload_0
     608: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     611: aload_0
     612: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     615: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     618: aload         5
     620: iload_2
     621: iaload
     622: invokestatic  #39                 // Method com/ibm/icu/impl/coll/Collation.ceFromCE32:(I)J
     625: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     628: pop2
     629: aload_0
     630: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     633: aload_0
     634: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     637: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     640: iconst_1
     641: iadd
     642: aload         5
     644: bipush        19
     646: iload         7
     648: iadd
     649: iaload
     650: invokestatic  #39                 // Method com/ibm/icu/impl/coll/Collation.ceFromCE32:(I)J
     653: invokevirtual #24                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.set:(IJ)J
     656: pop2
     657: aload_0
     658: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     661: dup
     662: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     665: iconst_2
     666: iadd
     667: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     670: iload         6
     672: ifeq          693
     675: aload_0
     676: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     679: aload         5
     681: bipush        39
     683: iload         6
     685: iadd
     686: iaload
     687: invokestatic  #39                 // Method com/ibm/icu/impl/coll/Collation.ceFromCE32:(I)J
     690: invokevirtual #68                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.appendUnsafe:(J)V
     693: return
     694: aload_0
     695: aload_1
     696: iconst_m1
     697: aload         5
     699: iload_2
     700: iaload
     701: iload         4
     703: invokevirtual #40                 // Method appendCEsFromCE32:(Lcom/ibm/icu/impl/coll/CollationData;IIZ)V
     706: aload_0
     707: aload_1
     708: iconst_m1
     709: aload         5
     711: bipush        19
     713: iload         7
     715: iadd
     716: iaload
     717: iload         4
     719: invokevirtual #40                 // Method appendCEsFromCE32:(Lcom/ibm/icu/impl/coll/CollationData;IIZ)V
     722: iload         6
     724: ifne          728
     727: return
     728: aload         5
     730: bipush        39
     732: iload         6
     734: iadd
     735: iaload
     736: istore_3
     737: iconst_m1
     738: istore_2
     739: goto          939
     742: getstatic     #17                 // Field $assertionsDisabled:Z
     745: ifne          761
     748: iload         4
     750: ifne          761
     753: new           #18                 // class java/lang/AssertionError
     756: dup
     757: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     760: athrow
     761: getstatic     #17                 // Field $assertionsDisabled:Z
     764: ifne          782
     767: iload_2
     768: invokestatic  #84                 // Method isLeadSurrogate:(I)Z
     771: ifne          782
     774: new           #18                 // class java/lang/AssertionError
     777: dup
     778: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     781: athrow
     782: aload_0
     783: invokevirtual #85                 // Method handleGetTrailSurrogate:()C
     786: dup
     787: istore        5
     789: invokestatic  #86                 // Method java/lang/Character.isLowSurrogate:(C)Z
     792: ifeq          852
     795: iload_2
     796: i2c
     797: iload         5
     799: invokestatic  #87                 // Method java/lang/Character.toCodePoint:(CC)I
     802: istore_2
     803: iload_3
     804: sipush        768
     807: iand
     808: istore_3
     809: iload_3
     810: ifne          818
     813: iconst_m1
     814: istore_3
     815: goto          939
     818: iload_3
     819: sipush        256
     822: if_icmpeq     838
     825: aload_1
     826: iload_2
     827: invokevirtual #88                 // Method com/ibm/icu/impl/coll/CollationData.getCE32FromSupplementary:(I)I
     830: dup
     831: istore_3
     832: sipush        192
     835: if_icmpne     939
     838: aload_1
     839: getfield      #27                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     842: astore_1
     843: aload_1
     844: iload_2
     845: invokevirtual #88                 // Method com/ibm/icu/impl/coll/CollationData.getCE32FromSupplementary:(I)I
     848: istore_3
     849: goto          939
     852: iconst_m1
     853: istore_3
     854: goto          939
     857: getstatic     #17                 // Field $assertionsDisabled:Z
     860: ifne          875
     863: iload_2
     864: ifge          875
     867: new           #18                 // class java/lang/AssertionError
     870: dup
     871: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     874: athrow
     875: aload_0
     876: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     879: aload_1
     880: iload_2
     881: iload_3
     882: invokevirtual #89                 // Method com/ibm/icu/impl/coll/CollationData.getCEFromOffsetCE32:(II)J
     885: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     888: return
     889: getstatic     #17                 // Field $assertionsDisabled:Z
     892: ifne          907
     895: iload_2
     896: ifge          907
     899: new           #18                 // class java/lang/AssertionError
     902: dup
     903: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     906: athrow
     907: iload_2
     908: invokestatic  #90                 // Method isSurrogate:(I)Z
     911: ifeq          927
     914: aload_0
     915: invokevirtual #91                 // Method forbidSurrogateCodePoints:()Z
     918: ifeq          927
     921: ldc           #92                 // int -195323
     923: istore_3
     924: goto          939
     927: aload_0
     928: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     931: iload_2
     932: invokestatic  #93                 // Method com/ibm/icu/impl/coll/Collation.unassignedCEFromCodePoint:(I)J
     935: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     938: return
     939: goto          0
     942: aload_0
     943: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     946: iload_3
     947: invokestatic  #94                 // Method com/ibm/icu/impl/coll/Collation.ceFromSimpleCE32:(I)J
     950: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     953: return

  private static final boolean isSurrogate(int);
    Code:
       0: iload_0
       1: sipush        -2048
       4: iand
       5: ldc           #95                 // int 55296
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected static final boolean isLeadSurrogate(int);
    Code:
       0: iload_0
       1: sipush        -1024
       4: iand
       5: ldc           #95                 // int 55296
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected static final boolean isTrailSurrogate(int);
    Code:
       0: iload_0
       1: sipush        -1024
       4: iand
       5: ldc           #96                 // int 56320
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private final long nextCEFromCE32(com.ibm.icu.impl.coll.CollationData, int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
       4: dup
       5: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
       8: iconst_1
       9: isub
      10: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      13: aload_0
      14: aload_1
      15: iload_2
      16: iload_3
      17: iconst_1
      18: invokevirtual #40                 // Method appendCEsFromCE32:(Lcom/ibm/icu/impl/coll/CollationData;IIZ)V
      21: aload_0
      22: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      25: aload_0
      26: dup
      27: getfield      #15                 // Field cesIndex:I
      30: dup_x1
      31: iconst_1
      32: iadd
      33: putfield      #15                 // Field cesIndex:I
      36: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
      39: lreturn

  private final int getCE32FromPrefix(com.ibm.icu.impl.coll.CollationData, int);
    Code:
       0: iload_2
       1: invokestatic  #65                 // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
       4: istore_3
       5: aload_1
       6: iload_3
       7: invokevirtual #74                 // Method com/ibm/icu/impl/coll/CollationData.getCE32FromContexts:(I)I
      10: istore_2
      11: iinc          3, 2
      14: iconst_0
      15: istore        4
      17: new           #97                 // class com/ibm/icu/util/CharsTrie
      20: dup
      21: aload_1
      22: getfield      #78                 // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
      25: iload_3
      26: invokespecial #98                 // Method com/ibm/icu/util/CharsTrie."<init>":(Ljava/lang/CharSequence;I)V
      29: astore        5
      31: aload_0
      32: invokevirtual #35                 // Method previousCodePoint:()I
      35: istore        6
      37: iload         6
      39: ifge          45
      42: goto          85
      45: iinc          4, 1
      48: aload         5
      50: iload         6
      52: invokevirtual #99                 // Method com/ibm/icu/util/CharsTrie.nextForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
      55: astore        7
      57: aload         7
      59: invokevirtual #100                // Method com/ibm/icu/util/BytesTrie$Result.hasValue:()Z
      62: ifeq          71
      65: aload         5
      67: invokevirtual #101                // Method com/ibm/icu/util/CharsTrie.getValue:()I
      70: istore_2
      71: aload         7
      73: invokevirtual #102                // Method com/ibm/icu/util/BytesTrie$Result.hasNext:()Z
      76: ifne          82
      79: goto          85
      82: goto          31
      85: aload_0
      86: iload         4
      88: invokevirtual #73                 // Method forwardNumCodePoints:(I)V
      91: iload_2
      92: ireturn

  private final int nextSkippedCodePoint();
    Code:
       0: aload_0
       1: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
       4: ifnull        25
       7: aload_0
       8: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      11: invokevirtual #103                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.hasNext:()Z
      14: ifeq          25
      17: aload_0
      18: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      21: invokevirtual #104                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.next:()I
      24: ireturn
      25: aload_0
      26: getfield      #6                  // Field numCpFwd:I
      29: ifne          34
      32: iconst_m1
      33: ireturn
      34: aload_0
      35: invokevirtual #48                 // Method nextCodePoint:()I
      38: istore_1
      39: aload_0
      40: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      43: ifnull        67
      46: aload_0
      47: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      50: invokevirtual #105                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.isEmpty:()Z
      53: ifne          67
      56: iload_1
      57: iflt          67
      60: aload_0
      61: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      64: invokevirtual #106                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.incBeyond:()V
      67: aload_0
      68: getfield      #6                  // Field numCpFwd:I
      71: ifle          88
      74: iload_1
      75: iflt          88
      78: aload_0
      79: dup
      80: getfield      #6                  // Field numCpFwd:I
      83: iconst_1
      84: isub
      85: putfield      #6                  // Field numCpFwd:I
      88: iload_1
      89: ireturn

  private final void backwardNumSkipped(int);
    Code:
       0: aload_0
       1: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
       4: ifnull        26
       7: aload_0
       8: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      11: invokevirtual #105                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.isEmpty:()Z
      14: ifne          26
      17: aload_0
      18: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      21: iload_1
      22: invokevirtual #107                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.backwardNumCodePoints:(I)I
      25: istore_1
      26: aload_0
      27: iload_1
      28: invokevirtual #71                 // Method backwardNumCodePoints:(I)V
      31: aload_0
      32: getfield      #6                  // Field numCpFwd:I
      35: iflt          48
      38: aload_0
      39: dup
      40: getfield      #6                  // Field numCpFwd:I
      43: iload_1
      44: iadd
      45: putfield      #6                  // Field numCpFwd:I
      48: return

  private final int nextCE32FromContraction(com.ibm.icu.impl.coll.CollationData, int, java.lang.CharSequence, int, int, int);
    Code:
       0: iconst_1
       1: istore        7
       3: iconst_1
       4: istore        8
       6: new           #97                 // class com/ibm/icu/util/CharsTrie
       9: dup
      10: aload_3
      11: iload         4
      13: invokespecial #98                 // Method com/ibm/icu/util/CharsTrie."<init>":(Ljava/lang/CharSequence;I)V
      16: astore        9
      18: aload_0
      19: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      22: ifnull        44
      25: aload_0
      26: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      29: invokevirtual #105                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.isEmpty:()Z
      32: ifne          44
      35: aload_0
      36: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      39: aload         9
      41: invokevirtual #108                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.saveTrieState:(Lcom/ibm/icu/util/CharsTrie;)V
      44: aload         9
      46: iload         6
      48: invokevirtual #109                // Method com/ibm/icu/util/CharsTrie.firstForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
      51: astore        10
      53: aload         10
      55: invokevirtual #100                // Method com/ibm/icu/util/BytesTrie$Result.hasValue:()Z
      58: ifeq          121
      61: aload         9
      63: invokevirtual #101                // Method com/ibm/icu/util/CharsTrie.getValue:()I
      66: istore        5
      68: aload         10
      70: invokevirtual #102                // Method com/ibm/icu/util/BytesTrie$Result.hasNext:()Z
      73: ifeq          86
      76: aload_0
      77: invokespecial #76                 // Method nextSkippedCodePoint:()I
      80: dup
      81: istore        6
      83: ifge          89
      86: iload         5
      88: ireturn
      89: aload_0
      90: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      93: ifnull        115
      96: aload_0
      97: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     100: invokevirtual #105                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.isEmpty:()Z
     103: ifne          115
     106: aload_0
     107: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     110: aload         9
     112: invokevirtual #108                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.saveTrieState:(Lcom/ibm/icu/util/CharsTrie;)V
     115: iconst_1
     116: istore        8
     118: goto          225
     121: aload         10
     123: getstatic     #110                // Field com/ibm/icu/util/BytesTrie$Result.NO_MATCH:Lcom/ibm/icu/util/BytesTrie$Result;
     126: if_acmpeq     139
     129: aload_0
     130: invokespecial #76                 // Method nextSkippedCodePoint:()I
     133: dup
     134: istore        11
     136: ifge          218
     139: iload_2
     140: sipush        1024
     143: iand
     144: ifeq          240
     147: iload_2
     148: sipush        256
     151: iand
     152: ifeq          162
     155: iload         8
     157: iload         7
     159: if_icmpge     240
     162: iload         8
     164: iconst_1
     165: if_icmple     192
     168: aload_0
     169: iload         8
     171: invokespecial #77                 // Method backwardNumSkipped:(I)V
     174: aload_0
     175: invokespecial #76                 // Method nextSkippedCodePoint:()I
     178: istore        6
     180: iload         7
     182: iload         8
     184: iconst_1
     185: isub
     186: isub
     187: istore        7
     189: iconst_1
     190: istore        8
     192: aload_1
     193: iload         6
     195: invokevirtual #111                // Method com/ibm/icu/impl/coll/CollationData.getFCD16:(I)I
     198: sipush        255
     201: if_icmple     240
     204: aload_0
     205: aload_1
     206: aload         9
     208: iload         5
     210: iload         7
     212: iload         6
     214: invokespecial #112                // Method nextCE32FromDiscontiguousContraction:(Lcom/ibm/icu/impl/coll/CollationData;Lcom/ibm/icu/util/CharsTrie;III)I
     217: ireturn
     218: iload         11
     220: istore        6
     222: iinc          8, 1
     225: iinc          7, 1
     228: aload         9
     230: iload         6
     232: invokevirtual #99                 // Method com/ibm/icu/util/CharsTrie.nextForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
     235: astore        10
     237: goto          53
     240: aload_0
     241: iload         8
     243: invokespecial #77                 // Method backwardNumSkipped:(I)V
     246: iload         5
     248: ireturn

  private final int nextCE32FromDiscontiguousContraction(com.ibm.icu.impl.coll.CollationData, com.ibm.icu.util.CharsTrie, int, int, int);
    Code:
       0: aload_1
       1: iload         5
       3: invokevirtual #111                // Method com/ibm/icu/impl/coll/CollationData.getFCD16:(I)I
       6: istore        6
       8: getstatic     #17                 // Field $assertionsDisabled:Z
      11: ifne          30
      14: iload         6
      16: sipush        255
      19: if_icmpgt     30
      22: new           #18                 // class java/lang/AssertionError
      25: dup
      26: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      29: athrow
      30: aload_0
      31: invokespecial #76                 // Method nextSkippedCodePoint:()I
      34: istore        7
      36: iload         7
      38: ifge          48
      41: aload_0
      42: iconst_1
      43: invokespecial #77                 // Method backwardNumSkipped:(I)V
      46: iload_3
      47: ireturn
      48: iinc          4, 1
      51: iload         6
      53: sipush        255
      56: iand
      57: istore        8
      59: aload_1
      60: iload         7
      62: invokevirtual #111                // Method com/ibm/icu/impl/coll/CollationData.getFCD16:(I)I
      65: istore        6
      67: iload         6
      69: sipush        255
      72: if_icmpgt     82
      75: aload_0
      76: iconst_2
      77: invokespecial #77                 // Method backwardNumSkipped:(I)V
      80: iload_3
      81: ireturn
      82: aload_0
      83: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      86: ifnull        99
      89: aload_0
      90: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
      93: invokevirtual #105                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.isEmpty:()Z
      96: ifeq          184
      99: aload_0
     100: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     103: ifnonnull     117
     106: aload_0
     107: new           #113                // class com/ibm/icu/impl/coll/CollationIterator$SkippedState
     110: dup
     111: invokespecial #114                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState."<init>":()V
     114: putfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     117: aload_2
     118: invokevirtual #115                // Method com/ibm/icu/util/CharsTrie.reset:()Lcom/ibm/icu/util/CharsTrie;
     121: pop
     122: iload         4
     124: iconst_2
     125: if_icmple     173
     128: aload_0
     129: iload         4
     131: invokevirtual #71                 // Method backwardNumCodePoints:(I)V
     134: aload_2
     135: aload_0
     136: invokevirtual #48                 // Method nextCodePoint:()I
     139: invokevirtual #109                // Method com/ibm/icu/util/CharsTrie.firstForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
     142: pop
     143: iconst_3
     144: istore        9
     146: iload         9
     148: iload         4
     150: if_icmpge     168
     153: aload_2
     154: aload_0
     155: invokevirtual #48                 // Method nextCodePoint:()I
     158: invokevirtual #99                 // Method com/ibm/icu/util/CharsTrie.nextForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
     161: pop
     162: iinc          9, 1
     165: goto          146
     168: aload_0
     169: iconst_2
     170: invokevirtual #73                 // Method forwardNumCodePoints:(I)V
     173: aload_0
     174: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     177: aload_2
     178: invokevirtual #108                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.saveTrieState:(Lcom/ibm/icu/util/CharsTrie;)V
     181: goto          192
     184: aload_0
     185: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     188: aload_2
     189: invokevirtual #116                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.resetToTrieState:(Lcom/ibm/icu/util/CharsTrie;)V
     192: aload_0
     193: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     196: iload         5
     198: invokevirtual #117                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.setFirstSkipped:(I)V
     201: iconst_2
     202: istore        9
     204: iload         7
     206: istore        5
     208: iload         8
     210: iload         6
     212: bipush        8
     214: ishr
     215: if_icmpge     270
     218: aload_2
     219: iload         5
     221: invokevirtual #99                 // Method com/ibm/icu/util/CharsTrie.nextForCodePoint:(I)Lcom/ibm/icu/util/BytesTrie$Result;
     224: dup
     225: astore        10
     227: invokevirtual #100                // Method com/ibm/icu/util/BytesTrie$Result.hasValue:()Z
     230: ifeq          270
     233: aload_2
     234: invokevirtual #101                // Method com/ibm/icu/util/CharsTrie.getValue:()I
     237: istore_3
     238: iconst_0
     239: istore        9
     241: aload_0
     242: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     245: invokevirtual #118                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.recordMatch:()V
     248: aload         10
     250: invokevirtual #102                // Method com/ibm/icu/util/BytesTrie$Result.hasNext:()Z
     253: ifne          259
     256: goto          330
     259: aload_0
     260: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     263: aload_2
     264: invokevirtual #108                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.saveTrieState:(Lcom/ibm/icu/util/CharsTrie;)V
     267: goto          295
     270: aload_0
     271: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     274: iload         5
     276: invokevirtual #119                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.skip:(I)V
     279: aload_0
     280: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     283: aload_2
     284: invokevirtual #116                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.resetToTrieState:(Lcom/ibm/icu/util/CharsTrie;)V
     287: iload         6
     289: sipush        255
     292: iand
     293: istore        8
     295: aload_0
     296: invokespecial #76                 // Method nextSkippedCodePoint:()I
     299: dup
     300: istore        5
     302: ifge          308
     305: goto          330
     308: iinc          9, 1
     311: aload_1
     312: iload         5
     314: invokevirtual #111                // Method com/ibm/icu/impl/coll/CollationData.getFCD16:(I)I
     317: istore        6
     319: iload         6
     321: sipush        255
     324: if_icmpgt     208
     327: goto          330
     330: aload_0
     331: iload         9
     333: invokespecial #77                 // Method backwardNumSkipped:(I)V
     336: aload_0
     337: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     340: invokevirtual #105                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.isEmpty:()Z
     343: istore        10
     345: aload_0
     346: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     349: invokevirtual #120                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.replaceMatch:()V
     352: iload         10
     354: ifeq          450
     357: aload_0
     358: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     361: invokevirtual #105                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.isEmpty:()Z
     364: ifne          450
     367: iconst_m1
     368: istore        5
     370: aload_0
     371: aload_1
     372: iload         5
     374: iload_3
     375: iconst_1
     376: invokevirtual #40                 // Method appendCEsFromCE32:(Lcom/ibm/icu/impl/coll/CollationData;IIZ)V
     379: aload_0
     380: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     383: invokevirtual #103                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.hasNext:()Z
     386: ifne          392
     389: goto          441
     392: aload_0
     393: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     396: invokevirtual #104                // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.next:()I
     399: istore        5
     401: aload_0
     402: iload         5
     404: invokevirtual #121                // Method getDataCE32:(I)I
     407: istore_3
     408: iload_3
     409: sipush        192
     412: if_icmpne     433
     415: aload_0
     416: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     419: getfield      #27                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     422: astore_1
     423: aload_1
     424: iload         5
     426: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     429: istore_3
     430: goto          370
     433: aload_0
     434: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     437: astore_1
     438: goto          370
     441: aload_0
     442: getfield      #45                 // Field skipped:Lcom/ibm/icu/impl/coll/CollationIterator$SkippedState;
     445: invokevirtual #46                 // Method com/ibm/icu/impl/coll/CollationIterator$SkippedState.clear:()V
     448: iconst_1
     449: istore_3
     450: iload_3
     451: ireturn

  private final long previousCEUnsafe(int, com.ibm.icu.impl.coll.UVector32);
    Code:
       0: iconst_1
       1: istore_3
       2: aload_0
       3: invokevirtual #35                 // Method previousCodePoint:()I
       6: dup
       7: istore_1
       8: iflt          32
      11: iinc          3, 1
      14: aload_0
      15: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      18: iload_1
      19: aload_0
      20: getfield      #7                  // Field isNumeric:Z
      23: invokevirtual #36                 // Method com/ibm/icu/impl/coll/CollationData.isUnsafeBackward:(IZ)Z
      26: ifne          2
      29: goto          32
      32: aload_0
      33: iload_3
      34: putfield      #6                  // Field numCpFwd:I
      37: aload_0
      38: iconst_0
      39: putfield      #15                 // Field cesIndex:I
      42: getstatic     #17                 // Field $assertionsDisabled:Z
      45: ifne          66
      48: aload_0
      49: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
      52: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
      55: ifeq          66
      58: new           #18                 // class java/lang/AssertionError
      61: dup
      62: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      65: athrow
      66: aload_0
      67: invokevirtual #34                 // Method getOffset:()I
      70: istore        4
      72: aload_0
      73: getfield      #6                  // Field numCpFwd:I
      76: ifle          205
      79: aload_0
      80: dup
      81: getfield      #6                  // Field numCpFwd:I
      84: iconst_1
      85: isub
      86: putfield      #6                  // Field numCpFwd:I
      89: aload_0
      90: invokevirtual #32                 // Method nextCE:()J
      93: pop2
      94: getstatic     #17                 // Field $assertionsDisabled:Z
      97: ifne          131
     100: aload_0
     101: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     104: aload_0
     105: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     108: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     111: iconst_1
     112: isub
     113: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
     116: ldc2_w        #25                 // long 4311744768l
     119: lcmp
     120: ifne          131
     123: new           #18                 // class java/lang/AssertionError
     126: dup
     127: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     130: athrow
     131: aload_0
     132: aload_0
     133: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     136: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     139: putfield      #15                 // Field cesIndex:I
     142: getstatic     #17                 // Field $assertionsDisabled:Z
     145: ifne          170
     148: aload_2
     149: invokevirtual #42                 // Method com/ibm/icu/impl/coll/UVector32.size:()I
     152: aload_0
     153: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     156: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     159: if_icmplt     170
     162: new           #18                 // class java/lang/AssertionError
     165: dup
     166: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     169: athrow
     170: aload_2
     171: iload         4
     173: invokevirtual #41                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     176: aload_0
     177: invokevirtual #34                 // Method getOffset:()I
     180: istore        4
     182: aload_2
     183: invokevirtual #42                 // Method com/ibm/icu/impl/coll/UVector32.size:()I
     186: aload_0
     187: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     190: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     193: if_icmpge     72
     196: aload_2
     197: iload         4
     199: invokevirtual #41                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     202: goto          182
     205: getstatic     #17                 // Field $assertionsDisabled:Z
     208: ifne          233
     211: aload_2
     212: invokevirtual #42                 // Method com/ibm/icu/impl/coll/UVector32.size:()I
     215: aload_0
     216: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     219: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     222: if_icmpeq     233
     225: new           #18                 // class java/lang/AssertionError
     228: dup
     229: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     232: athrow
     233: aload_2
     234: iload         4
     236: invokevirtual #41                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     239: aload_0
     240: iconst_m1
     241: putfield      #6                  // Field numCpFwd:I
     244: aload_0
     245: iload_3
     246: invokevirtual #71                 // Method backwardNumCodePoints:(I)V
     249: aload_0
     250: iconst_0
     251: putfield      #15                 // Field cesIndex:I
     254: aload_0
     255: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     258: aload_0
     259: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     262: dup
     263: getfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     266: iconst_1
     267: isub
     268: dup_x1
     269: putfield      #14                 // Field com/ibm/icu/impl/coll/CollationIterator$CEBuffer.length:I
     272: invokevirtual #16                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.get:(I)J
     275: lreturn

  private final void appendNumericCEs(int, boolean);
    Code:
       0: new           #122                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #123                // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: iload_2
       9: ifeq          116
      12: iload_1
      13: invokestatic  #124                // Method com/ibm/icu/impl/coll/Collation.digitFromCE32:(I)C
      16: istore        4
      18: aload_3
      19: iload         4
      21: invokevirtual #125                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: pop
      25: aload_0
      26: getfield      #6                  // Field numCpFwd:I
      29: ifne          35
      32: goto          198
      35: aload_0
      36: invokevirtual #48                 // Method nextCodePoint:()I
      39: istore        5
      41: iload         5
      43: ifge          49
      46: goto          198
      49: aload_0
      50: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      53: iload         5
      55: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      58: istore_1
      59: iload_1
      60: sipush        192
      63: if_icmpne     79
      66: aload_0
      67: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      70: getfield      #27                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
      73: iload         5
      75: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      78: istore_1
      79: iload_1
      80: bipush        10
      82: invokestatic  #126                // Method com/ibm/icu/impl/coll/Collation.hasCE32Tag:(II)Z
      85: ifne          96
      88: aload_0
      89: iconst_1
      90: invokevirtual #71                 // Method backwardNumCodePoints:(I)V
      93: goto          198
      96: aload_0
      97: getfield      #6                  // Field numCpFwd:I
     100: ifle          113
     103: aload_0
     104: dup
     105: getfield      #6                  // Field numCpFwd:I
     108: iconst_1
     109: isub
     110: putfield      #6                  // Field numCpFwd:I
     113: goto          12
     116: iload_1
     117: invokestatic  #124                // Method com/ibm/icu/impl/coll/Collation.digitFromCE32:(I)C
     120: istore        4
     122: aload_3
     123: iload         4
     125: invokevirtual #125                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     128: pop
     129: aload_0
     130: invokevirtual #35                 // Method previousCodePoint:()I
     133: istore        5
     135: iload         5
     137: ifge          143
     140: goto          193
     143: aload_0
     144: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     147: iload         5
     149: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     152: istore_1
     153: iload_1
     154: sipush        192
     157: if_icmpne     173
     160: aload_0
     161: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
     164: getfield      #27                 // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     167: iload         5
     169: invokevirtual #28                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     172: istore_1
     173: iload_1
     174: bipush        10
     176: invokestatic  #126                // Method com/ibm/icu/impl/coll/Collation.hasCE32Tag:(II)Z
     179: ifne          190
     182: aload_0
     183: iconst_1
     184: invokevirtual #73                 // Method forwardNumCodePoints:(I)V
     187: goto          193
     190: goto          116
     193: aload_3
     194: invokevirtual #127                // Method java/lang/StringBuilder.reverse:()Ljava/lang/StringBuilder;
     197: pop
     198: iconst_0
     199: istore        4
     201: iload         4
     203: aload_3
     204: invokevirtual #128                // Method java/lang/StringBuilder.length:()I
     207: iconst_1
     208: isub
     209: if_icmpge     227
     212: aload_3
     213: iload         4
     215: invokevirtual #129                // Method java/lang/StringBuilder.charAt:(I)C
     218: ifne          227
     221: iinc          4, 1
     224: goto          201
     227: aload_3
     228: invokevirtual #128                // Method java/lang/StringBuilder.length:()I
     231: iload         4
     233: isub
     234: istore        5
     236: iload         5
     238: sipush        254
     241: if_icmple     249
     244: sipush        254
     247: istore        5
     249: aload_0
     250: aload_3
     251: iload         4
     253: iload         4
     255: iload         5
     257: iadd
     258: invokevirtual #130                // Method java/lang/StringBuilder.subSequence:(II)Ljava/lang/CharSequence;
     261: invokespecial #131                // Method appendNumericSegmentCEs:(Ljava/lang/CharSequence;)V
     264: iload         4
     266: iload         5
     268: iadd
     269: istore        4
     271: iload         4
     273: aload_3
     274: invokevirtual #128                // Method java/lang/StringBuilder.length:()I
     277: if_icmplt     201
     280: return

  private final void appendNumericSegmentCEs(java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokeinterface #132,  1          // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_2
       7: getstatic     #17                 // Field $assertionsDisabled:Z
      10: ifne          33
      13: iconst_1
      14: iload_2
      15: if_icmpgt     25
      18: iload_2
      19: sipush        254
      22: if_icmple     33
      25: new           #18                 // class java/lang/AssertionError
      28: dup
      29: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      32: athrow
      33: getstatic     #17                 // Field $assertionsDisabled:Z
      36: ifne          62
      39: iload_2
      40: iconst_1
      41: if_icmpeq     62
      44: aload_1
      45: iconst_0
      46: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      51: ifne          62
      54: new           #18                 // class java/lang/AssertionError
      57: dup
      58: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
      61: athrow
      62: aload_0
      63: getfield      #5                  // Field data:Lcom/ibm/icu/impl/coll/CollationData;
      66: getfield      #134                // Field com/ibm/icu/impl/coll/CollationData.numericPrimary:J
      69: lstore_3
      70: iload_2
      71: bipush        7
      73: if_icmpgt     342
      76: aload_1
      77: iconst_0
      78: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      83: istore        5
      85: iconst_1
      86: istore        6
      88: iload         6
      90: iload_2
      91: if_icmpge     116
      94: iload         5
      96: bipush        10
      98: imul
      99: aload_1
     100: iload         6
     102: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     107: iadd
     108: istore        5
     110: iinc          6, 1
     113: goto          88
     116: iconst_2
     117: istore        6
     119: bipush        74
     121: istore        7
     123: iload         5
     125: iload         7
     127: if_icmpge     156
     130: lload_3
     131: iload         6
     133: iload         5
     135: iadd
     136: bipush        16
     138: ishl
     139: i2l
     140: lor
     141: lstore        8
     143: aload_0
     144: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     147: lload         8
     149: invokestatic  #135                // Method com/ibm/icu/impl/coll/Collation.makeCE:(J)J
     152: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     155: return
     156: iload         5
     158: iload         7
     160: isub
     161: istore        5
     163: iload         6
     165: iload         7
     167: iadd
     168: istore        6
     170: bipush        40
     172: istore        7
     174: iload         5
     176: iload         7
     178: sipush        254
     181: imul
     182: if_icmpge     228
     185: lload_3
     186: iload         6
     188: iload         5
     190: sipush        254
     193: idiv
     194: iadd
     195: bipush        16
     197: ishl
     198: i2l
     199: lor
     200: iconst_2
     201: iload         5
     203: sipush        254
     206: irem
     207: iadd
     208: bipush        8
     210: ishl
     211: i2l
     212: lor
     213: lstore        8
     215: aload_0
     216: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     219: lload         8
     221: invokestatic  #135                // Method com/ibm/icu/impl/coll/Collation.makeCE:(J)J
     224: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     227: return
     228: iload         5
     230: iload         7
     232: sipush        254
     235: imul
     236: isub
     237: istore        5
     239: iload         6
     241: iload         7
     243: iadd
     244: istore        6
     246: bipush        16
     248: istore        7
     250: iload         5
     252: iload         7
     254: sipush        254
     257: imul
     258: sipush        254
     261: imul
     262: if_icmpge     342
     265: lload_3
     266: iconst_2
     267: iload         5
     269: sipush        254
     272: irem
     273: iadd
     274: i2l
     275: lor
     276: lstore        8
     278: iload         5
     280: sipush        254
     283: idiv
     284: istore        5
     286: lload         8
     288: iconst_2
     289: iload         5
     291: sipush        254
     294: irem
     295: iadd
     296: bipush        8
     298: ishl
     299: i2l
     300: lor
     301: lstore        8
     303: iload         5
     305: sipush        254
     308: idiv
     309: istore        5
     311: lload         8
     313: iload         6
     315: iload         5
     317: sipush        254
     320: irem
     321: iadd
     322: bipush        16
     324: ishl
     325: i2l
     326: lor
     327: lstore        8
     329: aload_0
     330: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     333: lload         8
     335: invokestatic  #135                // Method com/ibm/icu/impl/coll/Collation.makeCE:(J)J
     338: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     341: return
     342: getstatic     #17                 // Field $assertionsDisabled:Z
     345: ifne          362
     348: iload_2
     349: bipush        7
     351: if_icmpge     362
     354: new           #18                 // class java/lang/AssertionError
     357: dup
     358: invokespecial #19                 // Method java/lang/AssertionError."<init>":()V
     361: athrow
     362: iload_2
     363: iconst_1
     364: iadd
     365: iconst_2
     366: idiv
     367: istore        5
     369: lload_3
     370: sipush        128
     373: iload         5
     375: iadd
     376: bipush        16
     378: ishl
     379: i2l
     380: lor
     381: lstore        6
     383: aload_1
     384: iload_2
     385: iconst_1
     386: isub
     387: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     392: ifne          413
     395: aload_1
     396: iload_2
     397: iconst_2
     398: isub
     399: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     404: ifne          413
     407: iinc          2, -2
     410: goto          383
     413: iload_2
     414: iconst_1
     415: iand
     416: ifeq          434
     419: aload_1
     420: iconst_0
     421: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     426: istore        8
     428: iconst_1
     429: istore        9
     431: goto          457
     434: aload_1
     435: iconst_0
     436: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     441: bipush        10
     443: imul
     444: aload_1
     445: iconst_1
     446: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     451: iadd
     452: istore        8
     454: iconst_2
     455: istore        9
     457: bipush        11
     459: iconst_2
     460: iload         8
     462: imul
     463: iadd
     464: istore        8
     466: bipush        8
     468: istore        10
     470: iload         9
     472: iload_2
     473: if_icmpge     560
     476: iload         10
     478: ifne          511
     481: lload         6
     483: iload         8
     485: i2l
     486: lor
     487: lstore        6
     489: aload_0
     490: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     493: lload         6
     495: invokestatic  #135                // Method com/ibm/icu/impl/coll/Collation.makeCE:(J)J
     498: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     501: lload_3
     502: lstore        6
     504: bipush        16
     506: istore        10
     508: goto          525
     511: lload         6
     513: iload         8
     515: iload         10
     517: ishl
     518: i2l
     519: lor
     520: lstore        6
     522: iinc          10, -8
     525: bipush        11
     527: iconst_2
     528: aload_1
     529: iload         9
     531: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     536: bipush        10
     538: imul
     539: aload_1
     540: iload         9
     542: iconst_1
     543: iadd
     544: invokeinterface #133,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     549: iadd
     550: imul
     551: iadd
     552: istore        8
     554: iinc          9, 2
     557: goto          470
     560: lload         6
     562: iload         8
     564: iconst_1
     565: isub
     566: iload         10
     568: ishl
     569: i2l
     570: lor
     571: lstore        6
     573: aload_0
     574: getfield      #8                  // Field ceBuffer:Lcom/ibm/icu/impl/coll/CollationIterator$CEBuffer;
     577: lload         6
     579: invokestatic  #135                // Method com/ibm/icu/impl/coll/Collation.makeCE:(J)J
     582: invokevirtual #60                 // Method com/ibm/icu/impl/coll/CollationIterator$CEBuffer.append:(J)V
     585: return

  static {};
    Code:
       0: ldc           #13                 // class com/ibm/icu/impl/coll/CollationIterator
       2: invokevirtual #136                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #17                 // Field $assertionsDisabled:Z
      16: return
}
