Compiled from "UnicodeSetStringSpan.java"
final class com.ibm.icu.impl.UnicodeSetStringSpan$OffsetList {
  private int[] list;

  private int length;

  private int start;

  static final boolean $assertionsDisabled;

  public com.ibm.icu.impl.UnicodeSetStringSpan$OffsetList();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        16
       7: newarray       int
       9: putfield      #2                  // Field list:[I
      12: return

  public void setMaxLength(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field list:[I
       5: arraylength
       6: if_icmple     16
       9: aload_0
      10: iload_1
      11: newarray       int
      13: putfield      #2                  // Field list:[I
      16: aload_0
      17: invokevirtual #3                  // Method clear:()V
      20: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field list:[I
       4: arraylength
       5: istore_1
       6: iload_1
       7: iinc          1, -1
      10: ifle          23
      13: aload_0
      14: getfield      #2                  // Field list:[I
      17: iload_1
      18: iconst_0
      19: iastore
      20: goto          6
      23: aload_0
      24: aload_0
      25: iconst_0
      26: dup_x1
      27: putfield      #4                  // Field length:I
      30: putfield      #5                  // Field start:I
      33: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void shift(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #2                  // Field list:[I
      12: arraylength
      13: if_icmplt     24
      16: iload_2
      17: aload_0
      18: getfield      #2                  // Field list:[I
      21: arraylength
      22: isub
      23: istore_2
      24: aload_0
      25: getfield      #2                  // Field list:[I
      28: iload_2
      29: iaload
      30: ifeq          50
      33: aload_0
      34: getfield      #2                  // Field list:[I
      37: iload_2
      38: iconst_0
      39: iastore
      40: aload_0
      41: dup
      42: getfield      #4                  // Field length:I
      45: iconst_1
      46: isub
      47: putfield      #4                  // Field length:I
      50: aload_0
      51: iload_2
      52: putfield      #5                  // Field start:I
      55: return

  public void addOffset(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #2                  // Field list:[I
      12: arraylength
      13: if_icmplt     24
      16: iload_2
      17: aload_0
      18: getfield      #2                  // Field list:[I
      21: arraylength
      22: isub
      23: istore_2
      24: getstatic     #6                  // Field $assertionsDisabled:Z
      27: ifne          47
      30: aload_0
      31: getfield      #2                  // Field list:[I
      34: iload_2
      35: iaload
      36: ifeq          47
      39: new           #7                  // class java/lang/AssertionError
      42: dup
      43: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      46: athrow
      47: aload_0
      48: getfield      #2                  // Field list:[I
      51: iload_2
      52: iconst_1
      53: iastore
      54: aload_0
      55: dup
      56: getfield      #4                  // Field length:I
      59: iconst_1
      60: iadd
      61: putfield      #4                  // Field length:I
      64: return

  public void addOffsetAndCount(int, int);
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_2
       7: ifgt          18
      10: new           #7                  // class java/lang/AssertionError
      13: dup
      14: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #5                  // Field start:I
      22: iload_1
      23: iadd
      24: istore_3
      25: iload_3
      26: aload_0
      27: getfield      #2                  // Field list:[I
      30: arraylength
      31: if_icmplt     42
      34: iload_3
      35: aload_0
      36: getfield      #2                  // Field list:[I
      39: arraylength
      40: isub
      41: istore_3
      42: aload_0
      43: getfield      #2                  // Field list:[I
      46: iload_3
      47: iaload
      48: ifne          71
      51: aload_0
      52: getfield      #2                  // Field list:[I
      55: iload_3
      56: iload_2
      57: iastore
      58: aload_0
      59: dup
      60: getfield      #4                  // Field length:I
      63: iconst_1
      64: iadd
      65: putfield      #4                  // Field length:I
      68: goto          88
      71: iload_2
      72: aload_0
      73: getfield      #2                  // Field list:[I
      76: iload_3
      77: iaload
      78: if_icmpge     88
      81: aload_0
      82: getfield      #2                  // Field list:[I
      85: iload_3
      86: iload_2
      87: iastore
      88: return

  public boolean containsOffset(int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #2                  // Field list:[I
      12: arraylength
      13: if_icmplt     24
      16: iload_2
      17: aload_0
      18: getfield      #2                  // Field list:[I
      21: arraylength
      22: isub
      23: istore_2
      24: aload_0
      25: getfield      #2                  // Field list:[I
      28: iload_2
      29: iaload
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public boolean hasCountAtOffset(int, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: iload_1
       5: iadd
       6: istore_3
       7: iload_3
       8: aload_0
       9: getfield      #2                  // Field list:[I
      12: arraylength
      13: if_icmplt     24
      16: iload_3
      17: aload_0
      18: getfield      #2                  // Field list:[I
      21: arraylength
      22: isub
      23: istore_3
      24: aload_0
      25: getfield      #2                  // Field list:[I
      28: iload_3
      29: iaload
      30: istore        4
      32: iload         4
      34: ifeq          47
      37: iload         4
      39: iload_2
      40: if_icmpgt     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public int popMinimum(com.ibm.icu.util.OutputInt);
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: istore_2
       5: iinc          2, 1
       8: iload_2
       9: aload_0
      10: getfield      #2                  // Field list:[I
      13: arraylength
      14: if_icmpge     74
      17: aload_0
      18: getfield      #2                  // Field list:[I
      21: iload_2
      22: iaload
      23: istore        4
      25: iload         4
      27: ifeq          71
      30: aload_0
      31: getfield      #2                  // Field list:[I
      34: iload_2
      35: iconst_0
      36: iastore
      37: aload_0
      38: dup
      39: getfield      #4                  // Field length:I
      42: iconst_1
      43: isub
      44: putfield      #4                  // Field length:I
      47: iload_2
      48: aload_0
      49: getfield      #5                  // Field start:I
      52: isub
      53: istore_3
      54: aload_0
      55: iload_2
      56: putfield      #5                  // Field start:I
      59: aload_1
      60: ifnull        69
      63: aload_1
      64: iload         4
      66: putfield      #9                  // Field com/ibm/icu/util/OutputInt.value:I
      69: iload_3
      70: ireturn
      71: goto          5
      74: aload_0
      75: getfield      #2                  // Field list:[I
      78: arraylength
      79: aload_0
      80: getfield      #5                  // Field start:I
      83: isub
      84: istore_3
      85: iconst_0
      86: istore_2
      87: aload_0
      88: getfield      #2                  // Field list:[I
      91: iload_2
      92: iaload
      93: dup
      94: istore        4
      96: ifne          105
      99: iinc          2, 1
     102: goto          87
     105: aload_0
     106: getfield      #2                  // Field list:[I
     109: iload_2
     110: iconst_0
     111: iastore
     112: aload_0
     113: dup
     114: getfield      #4                  // Field length:I
     117: iconst_1
     118: isub
     119: putfield      #4                  // Field length:I
     122: aload_0
     123: iload_2
     124: putfield      #5                  // Field start:I
     127: aload_1
     128: ifnull        137
     131: aload_1
     132: iload         4
     134: putfield      #9                  // Field com/ibm/icu/util/OutputInt.value:I
     137: iload_3
     138: iload_2
     139: iadd
     140: ireturn

  static {};
    Code:
       0: ldc           #10                 // class com/ibm/icu/impl/UnicodeSetStringSpan
       2: invokevirtual #11                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: return
}
