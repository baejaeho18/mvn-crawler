Compiled from "CollationDataBuilder.java"
final class com.ibm.icu.impl.coll.CollationDataBuilder {
  private static final int IS_BUILDER_JAMO_CE32;

  protected com.ibm.icu.impl.Normalizer2Impl nfcImpl;

  protected com.ibm.icu.impl.coll.CollationData base;

  protected com.ibm.icu.impl.coll.CollationSettings baseSettings;

  protected com.ibm.icu.impl.Trie2Writable trie;

  protected com.ibm.icu.impl.coll.UVector32 ce32s;

  protected com.ibm.icu.impl.coll.UVector64 ce64s;

  protected java.util.ArrayList<com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32> conditionalCE32s;

  protected com.ibm.icu.text.UnicodeSet contextChars;

  protected java.lang.StringBuilder contexts;

  protected com.ibm.icu.text.UnicodeSet unsafeBackwardSet;

  protected boolean modified;

  protected boolean fastLatinEnabled;

  protected com.ibm.icu.impl.coll.CollationFastLatinBuilder fastLatinBuilder;

  protected com.ibm.icu.impl.coll.CollationDataBuilder$DataBuilderCollationIterator collIter;

  static final boolean $assertionsDisabled;

  com.ibm.icu.impl.coll.CollationDataBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/ibm/icu/text/UnicodeSet
       8: dup
       9: invokespecial #3                  // Method com/ibm/icu/text/UnicodeSet."<init>":()V
      12: putfield      #4                  // Field contextChars:Lcom/ibm/icu/text/UnicodeSet;
      15: aload_0
      16: new           #5                  // class java/lang/StringBuilder
      19: dup
      20: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      23: putfield      #7                  // Field contexts:Ljava/lang/StringBuilder;
      26: aload_0
      27: new           #2                  // class com/ibm/icu/text/UnicodeSet
      30: dup
      31: invokespecial #3                  // Method com/ibm/icu/text/UnicodeSet."<init>":()V
      34: putfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
      37: aload_0
      38: invokestatic  #9                  // Method com/ibm/icu/impl/Norm2AllModes.getNFCInstance:()Lcom/ibm/icu/impl/Norm2AllModes;
      41: getfield      #10                 // Field com/ibm/icu/impl/Norm2AllModes.impl:Lcom/ibm/icu/impl/Normalizer2Impl;
      44: putfield      #11                 // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      47: aload_0
      48: aconst_null
      49: putfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      52: aload_0
      53: aconst_null
      54: putfield      #13                 // Field baseSettings:Lcom/ibm/icu/impl/coll/CollationSettings;
      57: aload_0
      58: aconst_null
      59: putfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      62: aload_0
      63: new           #15                 // class com/ibm/icu/impl/coll/UVector32
      66: dup
      67: invokespecial #16                 // Method com/ibm/icu/impl/coll/UVector32."<init>":()V
      70: putfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      73: aload_0
      74: new           #18                 // class com/ibm/icu/impl/coll/UVector64
      77: dup
      78: invokespecial #19                 // Method com/ibm/icu/impl/coll/UVector64."<init>":()V
      81: putfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
      84: aload_0
      85: new           #21                 // class java/util/ArrayList
      88: dup
      89: invokespecial #22                 // Method java/util/ArrayList."<init>":()V
      92: putfield      #23                 // Field conditionalCE32s:Ljava/util/ArrayList;
      95: aload_0
      96: iconst_0
      97: putfield      #24                 // Field modified:Z
     100: aload_0
     101: iconst_0
     102: putfield      #25                 // Field fastLatinEnabled:Z
     105: aload_0
     106: aconst_null
     107: putfield      #26                 // Field fastLatinBuilder:Lcom/ibm/icu/impl/coll/CollationFastLatinBuilder;
     110: aload_0
     111: aconst_null
     112: putfield      #27                 // Field collIter:Lcom/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator;
     115: aload_0
     116: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
     119: iconst_0
     120: invokevirtual #28                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     123: return

  void initForTailoring(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
       4: ifnull        17
       7: new           #29                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String attempt to reuse a CollationDataBuilder
      13: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ifnonnull     31
      21: new           #32                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #33                 // String null CollationData
      27: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: aload_1
      33: putfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      36: aload_0
      37: new           #35                 // class com/ibm/icu/impl/Trie2Writable
      40: dup
      41: sipush        192
      44: ldc           #37                 // int -195323
      46: invokespecial #38                 // Method com/ibm/icu/impl/Trie2Writable."<init>":(II)V
      49: putfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      52: sipush        192
      55: istore_2
      56: iload_2
      57: sipush        255
      60: if_icmpgt     81
      63: aload_0
      64: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      67: iload_2
      68: sipush        192
      71: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
      74: pop
      75: iinc          2, 1
      78: goto          56
      81: bipush        12
      83: iconst_0
      84: invokestatic  #40                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
      87: istore_2
      88: aload_0
      89: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      92: ldc           #42                 // int 44032
      94: ldc           #43                 // int 55203
      96: iload_2
      97: iconst_1
      98: invokevirtual #44                 // Method com/ibm/icu/impl/Trie2Writable.setRange:(IIIZ)Lcom/ibm/icu/impl/Trie2Writable;
     101: pop
     102: aload_0
     103: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     106: aload_1
     107: getfield      #45                 // Field com/ibm/icu/impl/coll/CollationData.unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     110: invokevirtual #46                 // Method com/ibm/icu/text/UnicodeSet.addAll:(Lcom/ibm/icu/text/UnicodeSet;)Lcom/ibm/icu/text/UnicodeSet;
     113: pop
     114: return

  boolean isCompressibleLeadByte(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
       4: iload_1
       5: invokevirtual #47                 // Method com/ibm/icu/impl/coll/CollationData.isCompressibleLeadByte:(I)Z
       8: ireturn

  boolean isCompressiblePrimary(long);
    Code:
       0: aload_0
       1: lload_1
       2: l2i
       3: bipush        24
       5: iushr
       6: invokevirtual #48                 // Method isCompressibleLeadByte:(I)Z
       9: ireturn

  boolean hasMappings();
    Code:
       0: aload_0
       1: getfield      #24                 // Field modified:Z
       4: ireturn

  boolean isAssigned(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
       4: iload_1
       5: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
       8: invokestatic  #50                 // Method com/ibm/icu/impl/coll/Collation.isAssignedCE32:(I)Z
      11: ireturn

  void add(java.lang.CharSequence, java.lang.CharSequence, long[], int);
    Code:
       0: aload_0
       1: aload_3
       2: iload         4
       4: invokevirtual #51                 // Method encodeCEs:([JI)I
       7: istore        5
       9: aload_0
      10: aload_1
      11: aload_2
      12: iload         5
      14: invokevirtual #52                 // Method addCE32:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)V
      17: return

  int encodeCEs(long[], int);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: bipush        31
       7: if_icmple     20
      10: new           #32                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #53                 // String mapping to too many CEs
      16: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokevirtual #54                 // Method isMutable:()Z
      24: ifne          37
      27: new           #29                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #55                 // String attempt to add mappings after build()
      33: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_2
      38: ifne          46
      41: lconst_0
      42: invokestatic  #56                 // Method encodeOneCEAsCE32:(J)I
      45: ireturn
      46: iload_2
      47: iconst_1
      48: if_icmpne     59
      51: aload_0
      52: aload_1
      53: iconst_0
      54: laload
      55: invokevirtual #57                 // Method encodeOneCE:(J)I
      58: ireturn
      59: iload_2
      60: iconst_2
      61: if_icmpne     140
      64: aload_1
      65: iconst_0
      66: laload
      67: lstore_3
      68: aload_1
      69: iconst_1
      70: laload
      71: lstore        5
      73: lload_3
      74: bipush        32
      76: lushr
      77: lstore        7
      79: lload_3
      80: ldc2_w        #58                 // long 72057594037862655l
      83: land
      84: ldc2_w        #60                 // long 83886080l
      87: lcmp
      88: ifne          140
      91: lload         5
      93: ldc2_w        #62                 // long -4278190081l
      96: land
      97: ldc2_w        #64                 // long 1280l
     100: lcmp
     101: ifne          140
     104: lload         7
     106: lconst_0
     107: lcmp
     108: ifeq          140
     111: lload         7
     113: l2i
     114: lload_3
     115: l2i
     116: ldc           #66                 // int 65280
     118: iand
     119: bipush        8
     121: ishl
     122: ior
     123: lload         5
     125: l2i
     126: bipush        16
     128: ishr
     129: ldc           #66                 // int 65280
     131: iand
     132: ior
     133: sipush        192
     136: ior
     137: iconst_4
     138: ior
     139: ireturn
     140: bipush        31
     142: newarray       int
     144: astore_3
     145: iconst_0
     146: istore        4
     148: iload         4
     150: iload_2
     151: if_icmpne     162
     154: aload_0
     155: aload_3
     156: iconst_0
     157: iload_2
     158: invokevirtual #67                 // Method encodeExpansion32:([III)I
     161: ireturn
     162: aload_1
     163: iload         4
     165: laload
     166: invokestatic  #56                 // Method encodeOneCEAsCE32:(J)I
     169: istore        5
     171: iload         5
     173: iconst_1
     174: if_icmpne     180
     177: goto          192
     180: aload_3
     181: iload         4
     183: iload         5
     185: iastore
     186: iinc          4, 1
     189: goto          148
     192: aload_0
     193: aload_1
     194: iconst_0
     195: iload_2
     196: invokevirtual #68                 // Method encodeExpansion:([JII)I
     199: ireturn

  void addCE32(java.lang.CharSequence, java.lang.CharSequence, int);
    Code:
       0: aload_2
       1: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: ifne          19
       9: new           #32                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #70                 // String mapping from empty string
      15: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokevirtual #54                 // Method isMutable:()Z
      23: ifne          36
      26: new           #29                 // class java/lang/IllegalStateException
      29: dup
      30: ldc           #55                 // String attempt to add mappings after build()
      32: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_2
      37: iconst_0
      38: invokestatic  #71                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I
      41: istore        4
      43: iload         4
      45: invokestatic  #72                 // Method java/lang/Character.charCount:(I)I
      48: istore        5
      50: aload_0
      51: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      54: iload         4
      56: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      59: istore        6
      61: aload_1
      62: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      67: ifne          81
      70: aload_2
      71: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      76: iload         5
      78: if_icmple     85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: istore        7
      88: iload         6
      90: sipush        192
      93: if_icmpne     150
      96: aload_0
      97: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     100: aload_0
     101: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     104: iload         4
     106: invokevirtual #73                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     109: invokevirtual #74                 // Method com/ibm/icu/impl/coll/CollationData.getFinalCE32:(I)I
     112: istore        8
     114: iload         7
     116: ifne          127
     119: iload         8
     121: invokestatic  #75                 // Method com/ibm/icu/impl/coll/Collation.ce32HasContext:(I)Z
     124: ifeq          150
     127: aload_0
     128: iload         4
     130: iload         8
     132: iconst_1
     133: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
     136: istore        6
     138: aload_0
     139: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     142: iload         4
     144: iload         6
     146: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     149: pop
     150: iload         7
     152: ifne          200
     155: iload         6
     157: invokestatic  #77                 // Method isBuilderContextCE32:(I)Z
     160: ifne          177
     163: aload_0
     164: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     167: iload         4
     169: iload_3
     170: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     173: pop
     174: goto          436
     177: aload_0
     178: iload         6
     180: invokevirtual #78                 // Method getConditionalCE32ForCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     183: astore        8
     185: aload         8
     187: iconst_1
     188: putfield      #79                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.builtCE32:I
     191: aload         8
     193: iload_3
     194: putfield      #80                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.ce32:I
     197: goto          436
     200: iload         6
     202: invokestatic  #77                 // Method isBuilderContextCE32:(I)Z
     205: ifne          258
     208: aload_0
     209: ldc           #81                 // String \u0000
     211: iload         6
     213: invokevirtual #82                 // Method addConditionalCE32:(Ljava/lang/String;I)I
     216: istore        9
     218: iload         9
     220: invokestatic  #83                 // Method makeBuilderContextCE32:(I)I
     223: istore        10
     225: aload_0
     226: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     229: iload         4
     231: iload         10
     233: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     236: pop
     237: aload_0
     238: getfield      #4                  // Field contextChars:Lcom/ibm/icu/text/UnicodeSet;
     241: iload         4
     243: invokevirtual #84                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     246: pop
     247: aload_0
     248: iload         9
     250: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     253: astore        8
     255: goto          272
     258: aload_0
     259: iload         6
     261: invokevirtual #78                 // Method getConditionalCE32ForCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     264: astore        8
     266: aload         8
     268: iconst_1
     269: putfield      #79                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.builtCE32:I
     272: aload_2
     273: iload         5
     275: aload_2
     276: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     281: invokeinterface #86,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
     286: astore        9
     288: new           #5                  // class java/lang/StringBuilder
     291: dup
     292: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     295: aload_1
     296: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     301: i2c
     302: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     305: aload_1
     306: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     309: aload         9
     311: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     314: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     317: astore        10
     319: aload_0
     320: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     323: aload         9
     325: invokevirtual #90                 // Method com/ibm/icu/text/UnicodeSet.addAll:(Ljava/lang/CharSequence;)Lcom/ibm/icu/text/UnicodeSet;
     328: pop
     329: aload         8
     331: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     334: istore        11
     336: iload         11
     338: ifge          360
     341: aload_0
     342: aload         10
     344: iload_3
     345: invokevirtual #82                 // Method addConditionalCE32:(Ljava/lang/String;I)I
     348: istore        12
     350: aload         8
     352: iload         12
     354: putfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     357: goto          436
     360: aload_0
     361: iload         11
     363: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     366: astore        12
     368: aload         10
     370: aload         12
     372: getfield      #92                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.context:Ljava/lang/String;
     375: invokevirtual #93                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
     378: istore        13
     380: iload         13
     382: ifge          415
     385: aload_0
     386: aload         10
     388: iload_3
     389: invokevirtual #82                 // Method addConditionalCE32:(Ljava/lang/String;I)I
     392: istore        14
     394: aload         8
     396: iload         14
     398: putfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     401: aload_0
     402: iload         14
     404: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     407: iload         11
     409: putfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     412: goto          436
     415: iload         13
     417: ifne          429
     420: aload         12
     422: iload_3
     423: putfield      #80                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.ce32:I
     426: goto          436
     429: aload         12
     431: astore        8
     433: goto          329
     436: aload_0
     437: iconst_1
     438: putfield      #24                 // Field modified:Z
     441: return

  void copyFrom(com.ibm.icu.impl.coll.CollationDataBuilder, com.ibm.icu.impl.coll.CollationDataBuilder$CEModifier);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method isMutable:()Z
       4: ifne          17
       7: new           #29                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #94                 // String attempt to copyFrom() after build()
      13: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: new           #95                 // class com/ibm/icu/impl/coll/CollationDataBuilder$CopyHelper
      20: dup
      21: aload_1
      22: aload_0
      23: aload_2
      24: invokespecial #96                 // Method com/ibm/icu/impl/coll/CollationDataBuilder$CopyHelper."<init>":(Lcom/ibm/icu/impl/coll/CollationDataBuilder;Lcom/ibm/icu/impl/coll/CollationDataBuilder;Lcom/ibm/icu/impl/coll/CollationDataBuilder$CEModifier;)V
      27: astore_3
      28: aload_1
      29: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      32: invokevirtual #97                 // Method com/ibm/icu/impl/Trie2Writable.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          88
      47: aload         4
      49: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #100                // class com/ibm/icu/impl/Trie2$Range
      57: dup
      58: astore        5
      60: getfield      #101                // Field com/ibm/icu/impl/Trie2$Range.leadSurrogate:Z
      63: ifne          88
      66: aload         5
      68: getfield      #102                // Field com/ibm/icu/impl/Trie2$Range.startCodePoint:I
      71: aload         5
      73: getfield      #103                // Field com/ibm/icu/impl/Trie2$Range.endCodePoint:I
      76: aload         5
      78: getfield      #104                // Field com/ibm/icu/impl/Trie2$Range.value:I
      81: aload_3
      82: invokestatic  #105                // Method enumRangeForCopy:(IIILcom/ibm/icu/impl/coll/CollationDataBuilder$CopyHelper;)V
      85: goto          37
      88: aload_0
      89: dup
      90: getfield      #24                 // Field modified:Z
      93: aload_1
      94: getfield      #24                 // Field modified:Z
      97: ior
      98: putfield      #24                 // Field modified:Z
     101: return

  void optimize(com.ibm.icu.text.UnicodeSet);
    Code:
       0: aload_1
       1: invokevirtual #106                // Method com/ibm/icu/text/UnicodeSet.isEmpty:()Z
       4: ifeq          8
       7: return
       8: new           #107                // class com/ibm/icu/text/UnicodeSetIterator
      11: dup
      12: aload_1
      13: invokespecial #108                // Method com/ibm/icu/text/UnicodeSetIterator."<init>":(Lcom/ibm/icu/text/UnicodeSet;)V
      16: astore_2
      17: aload_2
      18: invokevirtual #109                // Method com/ibm/icu/text/UnicodeSetIterator.next:()Z
      21: ifeq          98
      24: aload_2
      25: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      28: getstatic     #111                // Field com/ibm/icu/text/UnicodeSetIterator.IS_STRING:I
      31: if_icmpeq     98
      34: aload_2
      35: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      38: istore_3
      39: aload_0
      40: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      43: iload_3
      44: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      47: istore        4
      49: iload         4
      51: sipush        192
      54: if_icmpne     95
      57: aload_0
      58: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      61: aload_0
      62: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      65: iload_3
      66: invokevirtual #73                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      69: invokevirtual #74                 // Method com/ibm/icu/impl/coll/CollationData.getFinalCE32:(I)I
      72: istore        4
      74: aload_0
      75: iload_3
      76: iload         4
      78: iconst_1
      79: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
      82: istore        4
      84: aload_0
      85: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      88: iload_3
      89: iload         4
      91: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
      94: pop
      95: goto          17
      98: aload_0
      99: iconst_1
     100: putfield      #24                 // Field modified:Z
     103: return

  void suppressContractions(com.ibm.icu.text.UnicodeSet);
    Code:
       0: aload_1
       1: invokevirtual #106                // Method com/ibm/icu/text/UnicodeSet.isEmpty:()Z
       4: ifeq          8
       7: return
       8: new           #107                // class com/ibm/icu/text/UnicodeSetIterator
      11: dup
      12: aload_1
      13: invokespecial #108                // Method com/ibm/icu/text/UnicodeSetIterator."<init>":(Lcom/ibm/icu/text/UnicodeSet;)V
      16: astore_2
      17: aload_2
      18: invokevirtual #109                // Method com/ibm/icu/text/UnicodeSetIterator.next:()Z
      21: ifeq          148
      24: aload_2
      25: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      28: getstatic     #111                // Field com/ibm/icu/text/UnicodeSetIterator.IS_STRING:I
      31: if_icmpeq     148
      34: aload_2
      35: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      38: istore_3
      39: aload_0
      40: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      43: iload_3
      44: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      47: istore        4
      49: iload         4
      51: sipush        192
      54: if_icmpne     106
      57: aload_0
      58: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      61: aload_0
      62: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      65: iload_3
      66: invokevirtual #73                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      69: invokevirtual #74                 // Method com/ibm/icu/impl/coll/CollationData.getFinalCE32:(I)I
      72: istore        4
      74: iload         4
      76: invokestatic  #75                 // Method com/ibm/icu/impl/coll/Collation.ce32HasContext:(I)Z
      79: ifeq          145
      82: aload_0
      83: iload_3
      84: iload         4
      86: iconst_0
      87: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
      90: istore        4
      92: aload_0
      93: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      96: iload_3
      97: iload         4
      99: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     102: pop
     103: goto          145
     106: iload         4
     108: invokestatic  #77                 // Method isBuilderContextCE32:(I)Z
     111: ifeq          145
     114: aload_0
     115: iload         4
     117: invokevirtual #78                 // Method getConditionalCE32ForCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     120: getfield      #80                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.ce32:I
     123: istore        4
     125: aload_0
     126: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     129: iload_3
     130: iload         4
     132: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     135: pop
     136: aload_0
     137: getfield      #4                  // Field contextChars:Lcom/ibm/icu/text/UnicodeSet;
     140: iload_3
     141: invokevirtual #112                // Method com/ibm/icu/text/UnicodeSet.remove:(I)Lcom/ibm/icu/text/UnicodeSet;
     144: pop
     145: goto          17
     148: aload_0
     149: iconst_1
     150: putfield      #24                 // Field modified:Z
     153: return

  void enableFastLatin();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #25                 // Field fastLatinEnabled:Z
       5: return

  void build(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method buildMappings:(Lcom/ibm/icu/impl/coll/CollationData;)V
       5: aload_0
       6: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
       9: ifnull        67
      12: aload_1
      13: aload_0
      14: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      17: getfield      #114                // Field com/ibm/icu/impl/coll/CollationData.numericPrimary:J
      20: putfield      #114                // Field com/ibm/icu/impl/coll/CollationData.numericPrimary:J
      23: aload_1
      24: aload_0
      25: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      28: getfield      #115                // Field com/ibm/icu/impl/coll/CollationData.compressibleBytes:[Z
      31: putfield      #115                // Field com/ibm/icu/impl/coll/CollationData.compressibleBytes:[Z
      34: aload_1
      35: aload_0
      36: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      39: getfield      #116                // Field com/ibm/icu/impl/coll/CollationData.numScripts:I
      42: putfield      #116                // Field com/ibm/icu/impl/coll/CollationData.numScripts:I
      45: aload_1
      46: aload_0
      47: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      50: getfield      #117                // Field com/ibm/icu/impl/coll/CollationData.scriptsIndex:[C
      53: putfield      #117                // Field com/ibm/icu/impl/coll/CollationData.scriptsIndex:[C
      56: aload_1
      57: aload_0
      58: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      61: getfield      #118                // Field com/ibm/icu/impl/coll/CollationData.scriptStarts:[C
      64: putfield      #118                // Field com/ibm/icu/impl/coll/CollationData.scriptStarts:[C
      67: aload_0
      68: aload_1
      69: invokevirtual #119                // Method buildFastLatinTable:(Lcom/ibm/icu/impl/coll/CollationData;)V
      72: return

  int getCEs(java.lang.CharSequence, long[], int);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: iload_3
       5: invokevirtual #120                // Method getCEs:(Ljava/lang/CharSequence;I[JI)I
       8: ireturn

  int getCEs(java.lang.CharSequence, java.lang.CharSequence, long[], int);
    Code:
       0: aload_1
       1: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore        5
       8: iload         5
      10: ifne          23
      13: aload_0
      14: aload_2
      15: iconst_0
      16: aload_3
      17: iload         4
      19: invokevirtual #120                // Method getCEs:(Ljava/lang/CharSequence;I[JI)I
      22: ireturn
      23: aload_0
      24: new           #5                  // class java/lang/StringBuilder
      27: dup
      28: aload_1
      29: invokespecial #121                // Method java/lang/StringBuilder."<init>":(Ljava/lang/CharSequence;)V
      32: aload_2
      33: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      36: iload         5
      38: aload_3
      39: iload         4
      41: invokevirtual #120                // Method getCEs:(Ljava/lang/CharSequence;I[JI)I
      44: ireturn

  protected int getCE32FromOffsetCE32(boolean, int, int);
    Code:
       0: iload_3
       1: invokestatic  #122                // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
       4: istore        4
       6: iload_1
       7: ifeq          23
      10: aload_0
      11: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      14: getfield      #123                // Field com/ibm/icu/impl/coll/CollationData.ces:[J
      17: iload         4
      19: laload
      20: goto          32
      23: aload_0
      24: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
      27: iload         4
      29: invokevirtual #124                // Method com/ibm/icu/impl/coll/UVector64.elementAti:(I)J
      32: lstore        5
      34: iload_2
      35: lload         5
      37: invokestatic  #125                // Method com/ibm/icu/impl/coll/Collation.getThreeBytePrimaryForOffsetData:(IJ)J
      40: lstore        7
      42: lload         7
      44: invokestatic  #126                // Method com/ibm/icu/impl/coll/Collation.makeLongPrimaryCE32:(J)I
      47: ireturn

  protected int addCE(long);
    Code:
       0: aload_0
       1: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
       4: invokevirtual #127                // Method com/ibm/icu/impl/coll/UVector64.size:()I
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     40
      17: lload_1
      18: aload_0
      19: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
      22: iload         4
      24: invokevirtual #124                // Method com/ibm/icu/impl/coll/UVector64.elementAti:(I)J
      27: lcmp
      28: ifne          34
      31: iload         4
      33: ireturn
      34: iinc          4, 1
      37: goto          11
      40: aload_0
      41: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
      44: lload_1
      45: invokevirtual #128                // Method com/ibm/icu/impl/coll/UVector64.addElement:(J)V
      48: iload_3
      49: ireturn

  protected int addCE32(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
       4: invokevirtual #129                // Method com/ibm/icu/impl/coll/UVector32.size:()I
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     35
      15: iload_1
      16: aload_0
      17: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      20: iload_3
      21: invokevirtual #130                // Method com/ibm/icu/impl/coll/UVector32.elementAti:(I)I
      24: if_icmpne     29
      27: iload_3
      28: ireturn
      29: iinc          3, 1
      32: goto          10
      35: aload_0
      36: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      39: iload_1
      40: invokevirtual #28                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
      43: iload_2
      44: ireturn

  protected int addConditionalCE32(java.lang.String, int);
    Code:
       0: getstatic     #131                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: invokevirtual #132                // Method java/lang/String.length:()I
      10: ifne          21
      13: new           #133                // class java/lang/AssertionError
      16: dup
      17: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #23                 // Field conditionalCE32s:Ljava/util/ArrayList;
      25: invokevirtual #135                // Method java/util/ArrayList.size:()I
      28: istore_3
      29: iload_3
      30: ldc           #136                // int 524287
      32: if_icmple     45
      35: new           #137                // class java/lang/IndexOutOfBoundsException
      38: dup
      39: ldc           #138                // String too many context-sensitive mappings
      41: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: new           #140                // class com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32
      48: dup
      49: aload_1
      50: iload_2
      51: invokespecial #141                // Method com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32."<init>":(Ljava/lang/String;I)V
      54: astore        4
      56: aload_0
      57: getfield      #23                 // Field conditionalCE32s:Ljava/util/ArrayList;
      60: aload         4
      62: invokevirtual #142                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      65: pop
      66: iload_3
      67: ireturn

  protected com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32 getConditionalCE32(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field conditionalCE32s:Ljava/util/ArrayList;
       4: iload_1
       5: invokevirtual #143                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
       8: checkcast     #140                // class com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32
      11: areturn

  protected com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32 getConditionalCE32ForCE32(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #122                // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
       5: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
       8: areturn

  protected static int makeBuilderContextCE32(int);
    Code:
       0: bipush        7
       2: iload_0
       3: invokestatic  #40                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
       6: ireturn

  protected static boolean isBuilderContextCE32(int);
    Code:
       0: iload_0
       1: bipush        7
       3: invokestatic  #144                // Method com/ibm/icu/impl/coll/Collation.hasCE32Tag:(II)Z
       6: ireturn

  protected static int encodeOneCEAsCE32(long);
    Code:
       0: lload_0
       1: bipush        32
       3: lushr
       4: lstore_2
       5: lload_0
       6: l2i
       7: istore        4
       9: iload         4
      11: ldc           #145                // int 65535
      13: iand
      14: istore        5
      16: getstatic     #131                // Field $assertionsDisabled:Z
      19: ifne          40
      22: iload         5
      24: ldc           #146                // int 49152
      26: iand
      27: ldc           #146                // int 49152
      29: if_icmpne     40
      32: new           #133                // class java/lang/AssertionError
      35: dup
      36: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: lload_0
      41: ldc2_w        #147                // long 281470698455295l
      44: land
      45: lconst_0
      46: lcmp
      47: ifne          65
      50: lload_2
      51: l2i
      52: iload         4
      54: bipush        16
      56: iushr
      57: ior
      58: iload         5
      60: bipush        8
      62: ishr
      63: ior
      64: ireturn
      65: lload_0
      66: ldc2_w        #149                // long 1099511627775l
      69: land
      70: ldc2_w        #151                // long 83887360l
      73: lcmp
      74: ifne          82
      77: lload_2
      78: invokestatic  #126                // Method com/ibm/icu/impl/coll/Collation.makeLongPrimaryCE32:(J)I
      81: ireturn
      82: lload_2
      83: lconst_0
      84: lcmp
      85: ifne          103
      88: iload         5
      90: sipush        255
      93: iand
      94: ifne          103
      97: iload         4
      99: invokestatic  #153                // Method com/ibm/icu/impl/coll/Collation.makeLongSecondaryCE32:(I)I
     102: ireturn
     103: iconst_1
     104: ireturn

  protected int encodeOneCE(long);
    Code:
       0: lload_1
       1: invokestatic  #56                 // Method encodeOneCEAsCE32:(J)I
       4: istore_3
       5: iload_3
       6: iconst_1
       7: if_icmpeq     12
      10: iload_3
      11: ireturn
      12: aload_0
      13: lload_1
      14: invokevirtual #154                // Method addCE:(J)I
      17: istore        4
      19: iload         4
      21: ldc           #136                // int 524287
      23: if_icmple     36
      26: new           #137                // class java/lang/IndexOutOfBoundsException
      29: dup
      30: ldc           #155                // String too many mappings
      32: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: bipush        6
      38: iload         4
      40: iconst_1
      41: invokestatic  #156                // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagIndexAndLength:(III)I
      44: ireturn

  protected int encodeExpansion(long[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: laload
       3: lstore        4
       5: aload_0
       6: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
       9: invokevirtual #127                // Method com/ibm/icu/impl/coll/UVector64.size:()I
      12: iload_3
      13: isub
      14: istore        6
      16: iconst_0
      17: istore        7
      19: iload         7
      21: iload         6
      23: if_icmpgt     113
      26: lload         4
      28: aload_0
      29: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
      32: iload         7
      34: invokevirtual #124                // Method com/ibm/icu/impl/coll/UVector64.elementAti:(I)J
      37: lcmp
      38: ifne          107
      41: iload         7
      43: ldc           #136                // int 524287
      45: if_icmple     58
      48: new           #137                // class java/lang/IndexOutOfBoundsException
      51: dup
      52: ldc           #155                // String too many mappings
      54: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: iconst_1
      59: istore        8
      61: iload         8
      63: iload_3
      64: if_icmpne     76
      67: bipush        6
      69: iload         7
      71: iload_3
      72: invokestatic  #156                // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagIndexAndLength:(III)I
      75: ireturn
      76: aload_0
      77: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
      80: iload         7
      82: iload         8
      84: iadd
      85: invokevirtual #124                // Method com/ibm/icu/impl/coll/UVector64.elementAti:(I)J
      88: aload_1
      89: iload_2
      90: iload         8
      92: iadd
      93: laload
      94: lcmp
      95: ifeq          101
      98: goto          107
     101: iinc          8, 1
     104: goto          61
     107: iinc          7, 1
     110: goto          19
     113: aload_0
     114: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
     117: invokevirtual #127                // Method com/ibm/icu/impl/coll/UVector64.size:()I
     120: istore        7
     122: iload         7
     124: ldc           #136                // int 524287
     126: if_icmple     139
     129: new           #137                // class java/lang/IndexOutOfBoundsException
     132: dup
     133: ldc           #155                // String too many mappings
     135: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     138: athrow
     139: iconst_0
     140: istore        8
     142: iload         8
     144: iload_3
     145: if_icmpge     167
     148: aload_0
     149: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
     152: aload_1
     153: iload_2
     154: iload         8
     156: iadd
     157: laload
     158: invokevirtual #128                // Method com/ibm/icu/impl/coll/UVector64.addElement:(J)V
     161: iinc          8, 1
     164: goto          142
     167: bipush        6
     169: iload         7
     171: iload_3
     172: invokestatic  #156                // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagIndexAndLength:(III)I
     175: ireturn

  protected int encodeExpansion32(int[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: iaload
       3: istore        4
       5: aload_0
       6: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
       9: invokevirtual #129                // Method com/ibm/icu/impl/coll/UVector32.size:()I
      12: iload_3
      13: isub
      14: istore        5
      16: iconst_0
      17: istore        6
      19: iload         6
      21: iload         5
      23: if_icmpgt     110
      26: iload         4
      28: aload_0
      29: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      32: iload         6
      34: invokevirtual #130                // Method com/ibm/icu/impl/coll/UVector32.elementAti:(I)I
      37: if_icmpne     104
      40: iload         6
      42: ldc           #136                // int 524287
      44: if_icmple     57
      47: new           #137                // class java/lang/IndexOutOfBoundsException
      50: dup
      51: ldc           #155                // String too many mappings
      53: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iconst_1
      58: istore        7
      60: iload         7
      62: iload_3
      63: if_icmpne     74
      66: iconst_5
      67: iload         6
      69: iload_3
      70: invokestatic  #156                // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagIndexAndLength:(III)I
      73: ireturn
      74: aload_0
      75: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      78: iload         6
      80: iload         7
      82: iadd
      83: invokevirtual #130                // Method com/ibm/icu/impl/coll/UVector32.elementAti:(I)I
      86: aload_1
      87: iload_2
      88: iload         7
      90: iadd
      91: iaload
      92: if_icmpeq     98
      95: goto          104
      98: iinc          7, 1
     101: goto          60
     104: iinc          6, 1
     107: goto          19
     110: aload_0
     111: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
     114: invokevirtual #129                // Method com/ibm/icu/impl/coll/UVector32.size:()I
     117: istore        6
     119: iload         6
     121: ldc           #136                // int 524287
     123: if_icmple     136
     126: new           #137                // class java/lang/IndexOutOfBoundsException
     129: dup
     130: ldc           #155                // String too many mappings
     132: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     135: athrow
     136: iconst_0
     137: istore        7
     139: iload         7
     141: iload_3
     142: if_icmpge     164
     145: aload_0
     146: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
     149: aload_1
     150: iload_2
     151: iload         7
     153: iadd
     154: iaload
     155: invokevirtual #28                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     158: iinc          7, 1
     161: goto          139
     164: iconst_5
     165: iload         6
     167: iload_3
     168: invokestatic  #156                // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagIndexAndLength:(III)I
     171: ireturn

  protected int copyFromBaseCE32(int, int, boolean);
    Code:
       0: iload_2
       1: invokestatic  #157                // Method com/ibm/icu/impl/coll/Collation.isSpecialCE32:(I)Z
       4: ifne          9
       7: iload_2
       8: ireturn
       9: iload_2
      10: invokestatic  #158                // Method com/ibm/icu/impl/coll/Collation.tagFromCE32:(I)I
      13: tableswitch   { // 1 to 15
                     1: 88
                     2: 88
                     3: 529
                     4: 88
                     5: 91
                     6: 122
                     7: 529
                     8: 153
                     9: 413
                    10: 529
                    11: 529
                    12: 496
                    13: 529
                    14: 506
                    15: 517
               default: 529
          }
      88: goto          539
      91: iload_2
      92: invokestatic  #122                // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
      95: istore        4
      97: iload_2
      98: invokestatic  #159                // Method com/ibm/icu/impl/coll/Collation.lengthFromCE32:(I)I
     101: istore        5
     103: aload_0
     104: aload_0
     105: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     108: getfield      #160                // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     111: iload         4
     113: iload         5
     115: invokevirtual #67                 // Method encodeExpansion32:([III)I
     118: istore_2
     119: goto          539
     122: iload_2
     123: invokestatic  #122                // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     126: istore        4
     128: iload_2
     129: invokestatic  #159                // Method com/ibm/icu/impl/coll/Collation.lengthFromCE32:(I)I
     132: istore        5
     134: aload_0
     135: aload_0
     136: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     139: getfield      #123                // Field com/ibm/icu/impl/coll/CollationData.ces:[J
     142: iload         4
     144: iload         5
     146: invokevirtual #68                 // Method encodeExpansion:([JII)I
     149: istore_2
     150: goto          539
     153: iload_2
     154: invokestatic  #122                // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     157: istore        4
     159: aload_0
     160: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     163: iload         4
     165: invokevirtual #161                // Method com/ibm/icu/impl/coll/CollationData.getCE32FromContexts:(I)I
     168: istore_2
     169: iload_3
     170: ifne          181
     173: aload_0
     174: iload_1
     175: iload_2
     176: iconst_0
     177: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
     180: ireturn
     181: new           #140                // class com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32
     184: dup
     185: ldc           #162                // String
     187: iconst_0
     188: invokespecial #141                // Method com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32."<init>":(Ljava/lang/String;I)V
     191: astore        5
     193: new           #5                  // class java/lang/StringBuilder
     196: dup
     197: ldc           #81                 // String \u0000
     199: invokespecial #163                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     202: astore        6
     204: iload_2
     205: invokestatic  #164                // Method com/ibm/icu/impl/coll/Collation.isContractionCE32:(I)Z
     208: ifeq          226
     211: aload_0
     212: aload         6
     214: iload_1
     215: iload_2
     216: aload         5
     218: invokevirtual #165                // Method copyContractionsFromBaseCE32:(Ljava/lang/StringBuilder;IILcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;)I
     221: istore        7
     223: goto          252
     226: aload_0
     227: iload_1
     228: iload_2
     229: iconst_1
     230: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
     233: istore_2
     234: aload         5
     236: aload_0
     237: aload         6
     239: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     242: iload_2
     243: invokevirtual #82                 // Method addConditionalCE32:(Ljava/lang/String;I)I
     246: dup
     247: istore        7
     249: putfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     252: aload_0
     253: iload         7
     255: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     258: astore        8
     260: aload_0
     261: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     264: getfield      #166                // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
     267: iload         4
     269: iconst_2
     270: iadd
     271: iconst_0
     272: invokestatic  #167                // Method com/ibm/icu/util/CharsTrie.iterator:(Ljava/lang/CharSequence;II)Lcom/ibm/icu/util/CharsTrie$Iterator;
     275: astore        9
     277: aload         9
     279: invokevirtual #168                // Method com/ibm/icu/util/CharsTrie$Iterator.hasNext:()Z
     282: ifeq          392
     285: aload         9
     287: invokevirtual #169                // Method com/ibm/icu/util/CharsTrie$Iterator.next:()Lcom/ibm/icu/util/CharsTrie$Entry;
     290: astore        10
     292: aload         6
     294: iconst_0
     295: invokevirtual #170                // Method java/lang/StringBuilder.setLength:(I)V
     298: aload         6
     300: aload         10
     302: getfield      #171                // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
     305: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     308: invokevirtual #172                // Method java/lang/StringBuilder.reverse:()Ljava/lang/StringBuilder;
     311: iconst_0
     312: aload         10
     314: getfield      #171                // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
     317: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     322: i2c
     323: invokevirtual #173                // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
     326: pop
     327: aload         10
     329: getfield      #174                // Field com/ibm/icu/util/CharsTrie$Entry.value:I
     332: istore_2
     333: iload_2
     334: invokestatic  #164                // Method com/ibm/icu/impl/coll/Collation.isContractionCE32:(I)Z
     337: ifeq          355
     340: aload_0
     341: aload         6
     343: iload_1
     344: iload_2
     345: aload         8
     347: invokevirtual #165                // Method copyContractionsFromBaseCE32:(Ljava/lang/StringBuilder;IILcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;)I
     350: istore        7
     352: goto          381
     355: aload_0
     356: iload_1
     357: iload_2
     358: iconst_1
     359: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
     362: istore_2
     363: aload         8
     365: aload_0
     366: aload         6
     368: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     371: iload_2
     372: invokevirtual #82                 // Method addConditionalCE32:(Ljava/lang/String;I)I
     375: dup
     376: istore        7
     378: putfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     381: aload_0
     382: iload         7
     384: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     387: astore        8
     389: goto          277
     392: aload         5
     394: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     397: invokestatic  #83                 // Method makeBuilderContextCE32:(I)I
     400: istore_2
     401: aload_0
     402: getfield      #4                  // Field contextChars:Lcom/ibm/icu/text/UnicodeSet;
     405: iload_1
     406: invokevirtual #84                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     409: pop
     410: goto          539
     413: iload_3
     414: ifne          441
     417: iload_2
     418: invokestatic  #122                // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
     421: istore        4
     423: aload_0
     424: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     427: iload         4
     429: invokevirtual #161                // Method com/ibm/icu/impl/coll/CollationData.getCE32FromContexts:(I)I
     432: istore_2
     433: aload_0
     434: iload_1
     435: iload_2
     436: iconst_0
     437: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
     440: ireturn
     441: new           #140                // class com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32
     444: dup
     445: ldc           #162                // String
     447: iconst_0
     448: invokespecial #141                // Method com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32."<init>":(Ljava/lang/String;I)V
     451: astore        4
     453: new           #5                  // class java/lang/StringBuilder
     456: dup
     457: ldc           #81                 // String \u0000
     459: invokespecial #163                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     462: astore        5
     464: aload_0
     465: aload         5
     467: iload_1
     468: iload_2
     469: aload         4
     471: invokevirtual #165                // Method copyContractionsFromBaseCE32:(Ljava/lang/StringBuilder;IILcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;)I
     474: pop
     475: aload         4
     477: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     480: invokestatic  #83                 // Method makeBuilderContextCE32:(I)I
     483: istore_2
     484: aload_0
     485: getfield      #4                  // Field contextChars:Lcom/ibm/icu/text/UnicodeSet;
     488: iload_1
     489: invokevirtual #84                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     492: pop
     493: goto          539
     496: new           #175                // class java/lang/UnsupportedOperationException
     499: dup
     500: ldc           #176                // String We forbid tailoring of Hangul syllables.
     502: invokespecial #177                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     505: athrow
     506: aload_0
     507: iconst_1
     508: iload_1
     509: iload_2
     510: invokevirtual #178                // Method getCE32FromOffsetCE32:(ZII)I
     513: istore_2
     514: goto          539
     517: aload_0
     518: iload_1
     519: invokestatic  #179                // Method com/ibm/icu/impl/coll/Collation.unassignedCEFromCodePoint:(I)J
     522: invokevirtual #57                 // Method encodeOneCE:(J)I
     525: istore_2
     526: goto          539
     529: new           #133                // class java/lang/AssertionError
     532: dup
     533: ldc           #180                // String copyFromBaseCE32(c, ce32, withContext) requires ce32 == base.getFinalCE32(ce32)
     535: invokespecial #181                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     538: athrow
     539: iload_2
     540: ireturn

  protected int copyContractionsFromBaseCE32(java.lang.StringBuilder, int, int, com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32);
    Code:
       0: iload_3
       1: invokestatic  #122                // Method com/ibm/icu/impl/coll/Collation.indexFromCE32:(I)I
       4: istore        5
       6: iload_3
       7: sipush        256
      10: iand
      11: ifeq          42
      14: getstatic     #131                // Field $assertionsDisabled:Z
      17: ifne          36
      20: aload_1
      21: invokevirtual #182                // Method java/lang/StringBuilder.length:()I
      24: iconst_1
      25: if_icmpgt     36
      28: new           #133                // class java/lang/AssertionError
      31: dup
      32: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      35: athrow
      36: iconst_m1
      37: istore        6
      39: goto          106
      42: aload_0
      43: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      46: iload         5
      48: invokevirtual #161                // Method com/ibm/icu/impl/coll/CollationData.getCE32FromContexts:(I)I
      51: istore_3
      52: getstatic     #131                // Field $assertionsDisabled:Z
      55: ifne          73
      58: iload_3
      59: invokestatic  #164                // Method com/ibm/icu/impl/coll/Collation.isContractionCE32:(I)Z
      62: ifeq          73
      65: new           #133                // class java/lang/AssertionError
      68: dup
      69: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      72: athrow
      73: aload_0
      74: iload_2
      75: iload_3
      76: iconst_1
      77: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
      80: istore_3
      81: aload         4
      83: aload_0
      84: aload_1
      85: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: iload_3
      89: invokevirtual #82                 // Method addConditionalCE32:(Ljava/lang/String;I)I
      92: dup
      93: istore        6
      95: putfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
      98: aload_0
      99: iload         6
     101: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     104: astore        4
     106: aload_1
     107: invokevirtual #182                // Method java/lang/StringBuilder.length:()I
     110: istore        7
     112: aload_0
     113: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     116: getfield      #166                // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
     119: iload         5
     121: iconst_2
     122: iadd
     123: iconst_0
     124: invokestatic  #167                // Method com/ibm/icu/util/CharsTrie.iterator:(Ljava/lang/CharSequence;II)Lcom/ibm/icu/util/CharsTrie$Iterator;
     127: astore        8
     129: aload         8
     131: invokevirtual #168                // Method com/ibm/icu/util/CharsTrie$Iterator.hasNext:()Z
     134: ifeq          200
     137: aload         8
     139: invokevirtual #169                // Method com/ibm/icu/util/CharsTrie$Iterator.next:()Lcom/ibm/icu/util/CharsTrie$Entry;
     142: astore        9
     144: aload_1
     145: aload         9
     147: getfield      #171                // Field com/ibm/icu/util/CharsTrie$Entry.chars:Ljava/lang/CharSequence;
     150: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     153: pop
     154: aload_0
     155: iload_2
     156: aload         9
     158: getfield      #174                // Field com/ibm/icu/util/CharsTrie$Entry.value:I
     161: iconst_1
     162: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
     165: istore_3
     166: aload         4
     168: aload_0
     169: aload_1
     170: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: iload_3
     174: invokevirtual #82                 // Method addConditionalCE32:(Ljava/lang/String;I)I
     177: dup
     178: istore        6
     180: putfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     183: aload_0
     184: iload         6
     186: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     189: astore        4
     191: aload_1
     192: iload         7
     194: invokevirtual #170                // Method java/lang/StringBuilder.setLength:(I)V
     197: goto          129
     200: getstatic     #131                // Field $assertionsDisabled:Z
     203: ifne          219
     206: iload         6
     208: ifge          219
     211: new           #133                // class java/lang/AssertionError
     214: dup
     215: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
     218: athrow
     219: iload         6
     221: ireturn

  private static void enumRangeForCopy(int, int, int, com.ibm.icu.impl.coll.CollationDataBuilder$CopyHelper);
    Code:
       0: iload_2
       1: iconst_m1
       2: if_icmpeq     19
       5: iload_2
       6: sipush        192
       9: if_icmpeq     19
      12: aload_3
      13: iload_0
      14: iload_1
      15: iload_2
      16: invokevirtual #183                // Method com/ibm/icu/impl/coll/CollationDataBuilder$CopyHelper.copyRangeCE32:(III)V
      19: return

  protected boolean getJamoCE32s(int[]);
    Code:
       0: aload_0
       1: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_2
      13: iconst_0
      14: istore_3
      15: iconst_0
      16: istore        4
      18: iload         4
      20: bipush        67
      22: if_icmpge     267
      25: iload         4
      27: invokestatic  #185                // Method jamoCpFromIndex:(I)I
      30: istore        5
      32: iconst_0
      33: istore        6
      35: aload_0
      36: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      39: iload         5
      41: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      44: istore        7
      46: iload_2
      47: iload         7
      49: invokestatic  #50                 // Method com/ibm/icu/impl/coll/Collation.isAssignedCE32:(I)Z
      52: ior
      53: istore_2
      54: iload         7
      56: sipush        192
      59: if_icmpne     76
      62: iconst_1
      63: istore        6
      65: aload_0
      66: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      69: iload         5
      71: invokevirtual #73                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
      74: istore        7
      76: iload         7
      78: invokestatic  #157                // Method com/ibm/icu/impl/coll/Collation.isSpecialCE32:(I)Z
      81: ifeq          255
      84: iload         7
      86: invokestatic  #158                // Method com/ibm/icu/impl/coll/Collation.tagFromCE32:(I)I
      89: tableswitch   { // 0 to 15
                     0: 230
                     1: 168
                     2: 168
                     3: 230
                     4: 168
                     5: 171
                     6: 171
                     7: 230
                     8: 171
                     9: 171
                    10: 230
                    11: 230
                    12: 230
                    13: 230
                    14: 215
                    15: 186
               default: 255
          }
     168: goto          255
     171: iload         6
     173: ifeq          255
     176: sipush        192
     179: istore        7
     181: iconst_1
     182: istore_3
     183: goto          255
     186: getstatic     #131                // Field $assertionsDisabled:Z
     189: ifne          205
     192: iload         6
     194: ifne          205
     197: new           #133                // class java/lang/AssertionError
     200: dup
     201: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
     204: athrow
     205: sipush        192
     208: istore        7
     210: iconst_1
     211: istore_3
     212: goto          255
     215: aload_0
     216: iload         6
     218: iload         5
     220: iload         7
     222: invokevirtual #178                // Method getCE32FromOffsetCE32:(ZII)I
     225: istore        7
     227: goto          255
     230: new           #133                // class java/lang/AssertionError
     233: dup
     234: ldc           #186                // String unexpected special tag in ce32=0x%08x
     236: iconst_1
     237: anewarray     #187                // class java/lang/Object
     240: dup
     241: iconst_0
     242: iload         7
     244: invokestatic  #188                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     247: aastore
     248: invokestatic  #189                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     251: invokespecial #181                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     254: athrow
     255: aload_1
     256: iload         4
     258: iload         7
     260: iastore
     261: iinc          4, 1
     264: goto          18
     267: iload_2
     268: ifeq          328
     271: iload_3
     272: ifeq          328
     275: iconst_0
     276: istore        4
     278: iload         4
     280: bipush        67
     282: if_icmpge     328
     285: aload_1
     286: iload         4
     288: iaload
     289: sipush        192
     292: if_icmpne     322
     295: iload         4
     297: invokestatic  #185                // Method jamoCpFromIndex:(I)I
     300: istore        5
     302: aload_1
     303: iload         4
     305: aload_0
     306: iload         5
     308: aload_0
     309: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     312: iload         5
     314: invokevirtual #73                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     317: iconst_1
     318: invokevirtual #76                 // Method copyFromBaseCE32:(IIZ)I
     321: iastore
     322: iinc          4, 1
     325: goto          278
     328: iload_2
     329: ireturn

  protected void setDigitTags();
    Code:
       0: new           #2                  // class com/ibm/icu/text/UnicodeSet
       3: dup
       4: ldc           #190                // String [:Nd:]
       6: invokespecial #191                // Method com/ibm/icu/text/UnicodeSet."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: new           #107                // class com/ibm/icu/text/UnicodeSetIterator
      13: dup
      14: aload_1
      15: invokespecial #108                // Method com/ibm/icu/text/UnicodeSetIterator."<init>":(Lcom/ibm/icu/text/UnicodeSet;)V
      18: astore_2
      19: aload_2
      20: invokevirtual #109                // Method com/ibm/icu/text/UnicodeSetIterator.next:()Z
      23: ifeq          131
      26: getstatic     #131                // Field $assertionsDisabled:Z
      29: ifne          50
      32: aload_2
      33: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      36: getstatic     #111                // Field com/ibm/icu/text/UnicodeSetIterator.IS_STRING:I
      39: if_icmpne     50
      42: new           #133                // class java/lang/AssertionError
      45: dup
      46: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      49: athrow
      50: aload_2
      51: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      54: istore_3
      55: aload_0
      56: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      59: iload_3
      60: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      63: istore        4
      65: iload         4
      67: sipush        192
      70: if_icmpeq     128
      73: iload         4
      75: iconst_m1
      76: if_icmpeq     128
      79: aload_0
      80: iload         4
      82: invokevirtual #192                // Method addCE32:(I)I
      85: istore        5
      87: iload         5
      89: ldc           #136                // int 524287
      91: if_icmple     104
      94: new           #137                // class java/lang/IndexOutOfBoundsException
      97: dup
      98: ldc           #155                // String too many mappings
     100: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: bipush        10
     106: iload         5
     108: iload_3
     109: invokestatic  #193                // Method com/ibm/icu/lang/UCharacter.digit:(I)I
     112: invokestatic  #156                // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagIndexAndLength:(III)I
     115: istore        4
     117: aload_0
     118: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     121: iload_3
     122: iload         4
     124: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     127: pop
     128: goto          19
     131: return

  protected void setLeadSurrogates();
    Code:
       0: ldc           #194                // int 55296
       2: istore_1
       3: iload_1
       4: ldc           #195                // int 56320
       6: if_icmpge     133
       9: iconst_m1
      10: istore_2
      11: aload_0
      12: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      15: iload_1
      16: invokevirtual #196                // Method com/ibm/icu/impl/Trie2Writable.iteratorForLeadSurrogate:(C)Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          108
      29: aload_3
      30: invokeinterface #99,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #100                // class com/ibm/icu/impl/Trie2$Range
      38: astore        4
      40: aload         4
      42: getfield      #104                // Field com/ibm/icu/impl/Trie2$Range.value:I
      45: istore        5
      47: iload         5
      49: iconst_m1
      50: if_icmpne     59
      53: iconst_0
      54: istore        5
      56: goto          82
      59: iload         5
      61: sipush        192
      64: if_icmpne     75
      67: sipush        256
      70: istore        5
      72: goto          82
      75: sipush        512
      78: istore_2
      79: goto          108
      82: iload_2
      83: ifge          92
      86: iload         5
      88: istore_2
      89: goto          105
      92: iload_2
      93: iload         5
      95: if_icmpeq     105
      98: sipush        512
     101: istore_2
     102: goto          108
     105: goto          20
     108: aload_0
     109: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     112: iload_1
     113: bipush        13
     115: iconst_0
     116: invokestatic  #40                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
     119: iload_2
     120: ior
     121: invokevirtual #197                // Method com/ibm/icu/impl/Trie2Writable.setForLeadSurrogateCodeUnit:(CI)Lcom/ibm/icu/impl/Trie2Writable;
     124: pop
     125: iload_1
     126: iconst_1
     127: iadd
     128: i2c
     129: istore_1
     130: goto          3
     133: return

  protected void buildMappings(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method isMutable:()Z
       4: ifne          17
       7: new           #29                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #198                // String attempt to build() after build()
      13: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #199                // Method buildContexts:()V
      21: bipush        67
      23: newarray       int
      25: astore_2
      26: iconst_m1
      27: istore_3
      28: aload_0
      29: aload_2
      30: invokevirtual #200                // Method getJamoCE32s:([I)Z
      33: ifeq          194
      36: aload_0
      37: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      40: invokevirtual #129                // Method com/ibm/icu/impl/coll/UVector32.size:()I
      43: istore_3
      44: iconst_0
      45: istore        4
      47: iload         4
      49: bipush        67
      51: if_icmpge     71
      54: aload_0
      55: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
      58: aload_2
      59: iload         4
      61: iaload
      62: invokevirtual #28                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
      65: iinc          4, 1
      68: goto          47
      71: iconst_0
      72: istore        4
      74: bipush        19
      76: istore        5
      78: iload         5
      80: bipush        67
      82: if_icmpge     107
      85: aload_2
      86: iload         5
      88: iaload
      89: invokestatic  #157                // Method com/ibm/icu/impl/coll/Collation.isSpecialCE32:(I)Z
      92: ifeq          101
      95: iconst_1
      96: istore        4
      98: goto          107
     101: iinc          5, 1
     104: goto          78
     107: bipush        12
     109: iconst_0
     110: invokestatic  #40                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
     113: istore        5
     115: ldc           #42                 // int 44032
     117: istore        6
     119: iconst_0
     120: istore        7
     122: iload         7
     124: bipush        19
     126: if_icmpge     191
     129: iload         5
     131: istore        8
     133: iload         4
     135: ifne          156
     138: aload_2
     139: iload         7
     141: iaload
     142: invokestatic  #157                // Method com/ibm/icu/impl/coll/Collation.isSpecialCE32:(I)Z
     145: ifne          156
     148: iload         8
     150: sipush        256
     153: ior
     154: istore        8
     156: iload         6
     158: sipush        588
     161: iadd
     162: istore        9
     164: aload_0
     165: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     168: iload         6
     170: iload         9
     172: iconst_1
     173: isub
     174: iload         8
     176: iconst_1
     177: invokevirtual #44                 // Method com/ibm/icu/impl/Trie2Writable.setRange:(IIIZ)Lcom/ibm/icu/impl/Trie2Writable;
     180: pop
     181: iload         9
     183: istore        6
     185: iinc          7, 1
     188: goto          122
     191: goto          272
     194: ldc           #42                 // int 44032
     196: istore        4
     198: iload         4
     200: ldc           #201                // int 55204
     202: if_icmpge     272
     205: aload_0
     206: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     209: iload         4
     211: invokevirtual #73                 // Method com/ibm/icu/impl/coll/CollationData.getCE32:(I)I
     214: istore        5
     216: getstatic     #131                // Field $assertionsDisabled:Z
     219: ifne          240
     222: iload         5
     224: bipush        12
     226: invokestatic  #144                // Method com/ibm/icu/impl/coll/Collation.hasCE32Tag:(II)Z
     229: ifne          240
     232: new           #133                // class java/lang/AssertionError
     235: dup
     236: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
     239: athrow
     240: iload         4
     242: sipush        588
     245: iadd
     246: istore        6
     248: aload_0
     249: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     252: iload         4
     254: iload         6
     256: iconst_1
     257: isub
     258: iload         5
     260: iconst_1
     261: invokevirtual #44                 // Method com/ibm/icu/impl/Trie2Writable.setRange:(IIIZ)Lcom/ibm/icu/impl/Trie2Writable;
     264: pop
     265: iload         6
     267: istore        4
     269: goto          198
     272: aload_0
     273: invokevirtual #202                // Method setDigitTags:()V
     276: aload_0
     277: invokevirtual #203                // Method setLeadSurrogates:()V
     280: aload_0
     281: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
     284: aload_0
     285: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     288: iconst_0
     289: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
     292: iconst_0
     293: invokevirtual #204                // Method com/ibm/icu/impl/coll/UVector32.setElementAt:(II)V
     296: aload_0
     297: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     300: iconst_0
     301: bipush        11
     303: iconst_0
     304: invokestatic  #40                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
     307: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     310: pop
     311: aload_1
     312: aload_0
     313: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     316: invokevirtual #205                // Method com/ibm/icu/impl/Trie2Writable.toTrie2_32:()Lcom/ibm/icu/impl/Trie2_32;
     319: putfield      #206                // Field com/ibm/icu/impl/coll/CollationData.trie:Lcom/ibm/icu/impl/Trie2_32;
     322: ldc           #207                // int 65536
     324: istore        4
     326: ldc           #194                // int 55296
     328: istore        5
     330: iload         5
     332: ldc           #195                // int 56320
     334: if_icmpge     381
     337: aload_0
     338: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     341: iload         4
     343: iload         4
     345: sipush        1023
     348: iadd
     349: invokevirtual #208                // Method com/ibm/icu/text/UnicodeSet.containsSome:(II)Z
     352: ifeq          365
     355: aload_0
     356: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     359: iload         5
     361: invokevirtual #84                 // Method com/ibm/icu/text/UnicodeSet.add:(I)Lcom/ibm/icu/text/UnicodeSet;
     364: pop
     365: iload         5
     367: iconst_1
     368: iadd
     369: i2c
     370: istore        5
     372: iinc_w        4, 1024
     378: goto          330
     381: aload_0
     382: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     385: invokevirtual #209                // Method com/ibm/icu/text/UnicodeSet.freeze:()Lcom/ibm/icu/text/UnicodeSet;
     388: pop
     389: aload_1
     390: aload_0
     391: getfield      #17                 // Field ce32s:Lcom/ibm/icu/impl/coll/UVector32;
     394: invokevirtual #210                // Method com/ibm/icu/impl/coll/UVector32.getBuffer:()[I
     397: putfield      #160                // Field com/ibm/icu/impl/coll/CollationData.ce32s:[I
     400: aload_1
     401: aload_0
     402: getfield      #20                 // Field ce64s:Lcom/ibm/icu/impl/coll/UVector64;
     405: invokevirtual #211                // Method com/ibm/icu/impl/coll/UVector64.getBuffer:()[J
     408: putfield      #123                // Field com/ibm/icu/impl/coll/CollationData.ces:[J
     411: aload_1
     412: aload_0
     413: getfield      #7                  // Field contexts:Ljava/lang/StringBuilder;
     416: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     419: putfield      #166                // Field com/ibm/icu/impl/coll/CollationData.contexts:Ljava/lang/String;
     422: aload_1
     423: aload_0
     424: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     427: putfield      #212                // Field com/ibm/icu/impl/coll/CollationData.base:Lcom/ibm/icu/impl/coll/CollationData;
     430: iload_3
     431: iflt          442
     434: aload_1
     435: aload_2
     436: putfield      #213                // Field com/ibm/icu/impl/coll/CollationData.jamoCE32s:[I
     439: goto          453
     442: aload_1
     443: aload_0
     444: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
     447: getfield      #213                // Field com/ibm/icu/impl/coll/CollationData.jamoCE32s:[I
     450: putfield      #213                // Field com/ibm/icu/impl/coll/CollationData.jamoCE32s:[I
     453: aload_1
     454: aload_0
     455: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     458: putfield      #45                 // Field com/ibm/icu/impl/coll/CollationData.unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
     461: return

  protected void clearContexts();
    Code:
       0: aload_0
       1: getfield      #7                  // Field contexts:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #170                // Method java/lang/StringBuilder.setLength:(I)V
       8: new           #107                // class com/ibm/icu/text/UnicodeSetIterator
      11: dup
      12: aload_0
      13: getfield      #4                  // Field contextChars:Lcom/ibm/icu/text/UnicodeSet;
      16: invokespecial #108                // Method com/ibm/icu/text/UnicodeSetIterator."<init>":(Lcom/ibm/icu/text/UnicodeSet;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #109                // Method com/ibm/icu/text/UnicodeSetIterator.next:()Z
      24: ifeq          96
      27: getstatic     #131                // Field $assertionsDisabled:Z
      30: ifne          51
      33: aload_1
      34: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      37: getstatic     #111                // Field com/ibm/icu/text/UnicodeSetIterator.IS_STRING:I
      40: if_icmpne     51
      43: new           #133                // class java/lang/AssertionError
      46: dup
      47: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      50: athrow
      51: aload_0
      52: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      55: aload_1
      56: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      59: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      62: istore_2
      63: getstatic     #131                // Field $assertionsDisabled:Z
      66: ifne          84
      69: iload_2
      70: invokestatic  #77                 // Method isBuilderContextCE32:(I)Z
      73: ifne          84
      76: new           #133                // class java/lang/AssertionError
      79: dup
      80: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      83: athrow
      84: aload_0
      85: iload_2
      86: invokevirtual #78                 // Method getConditionalCE32ForCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
      89: iconst_1
      90: putfield      #79                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.builtCE32:I
      93: goto          20
      96: return

  protected void buildContexts();
    Code:
       0: aload_0
       1: getfield      #7                  // Field contexts:Ljava/lang/StringBuilder;
       4: iconst_0
       5: invokevirtual #170                // Method java/lang/StringBuilder.setLength:(I)V
       8: new           #107                // class com/ibm/icu/text/UnicodeSetIterator
      11: dup
      12: aload_0
      13: getfield      #4                  // Field contextChars:Lcom/ibm/icu/text/UnicodeSet;
      16: invokespecial #108                // Method com/ibm/icu/text/UnicodeSetIterator."<init>":(Lcom/ibm/icu/text/UnicodeSet;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #109                // Method com/ibm/icu/text/UnicodeSetIterator.next:()Z
      24: ifeq          109
      27: getstatic     #131                // Field $assertionsDisabled:Z
      30: ifne          51
      33: aload_1
      34: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      37: getstatic     #111                // Field com/ibm/icu/text/UnicodeSetIterator.IS_STRING:I
      40: if_icmpne     51
      43: new           #133                // class java/lang/AssertionError
      46: dup
      47: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      50: athrow
      51: aload_1
      52: getfield      #110                // Field com/ibm/icu/text/UnicodeSetIterator.codepoint:I
      55: istore_2
      56: aload_0
      57: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
      60: iload_2
      61: invokevirtual #49                 // Method com/ibm/icu/impl/Trie2Writable.get:(I)I
      64: istore_3
      65: iload_3
      66: invokestatic  #77                 // Method isBuilderContextCE32:(I)Z
      69: ifne          82
      72: new           #133                // class java/lang/AssertionError
      75: dup
      76: ldc           #214                // String Impossible: No context data for c in contextChars.
      78: invokespecial #181                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      81: athrow
      82: aload_0
      83: iload_3
      84: invokevirtual #78                 // Method getConditionalCE32ForCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
      87: astore        4
      89: aload_0
      90: aload         4
      92: invokevirtual #215                // Method buildContext:(Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;)I
      95: istore_3
      96: aload_0
      97: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
     100: iload_2
     101: iload_3
     102: invokevirtual #39                 // Method com/ibm/icu/impl/Trie2Writable.set:(II)Lcom/ibm/icu/impl/Trie2Writable;
     105: pop
     106: goto          20
     109: return

  protected int buildContext(com.ibm.icu.impl.coll.CollationDataBuilder$ConditionalCE32);
    Code:
       0: getstatic     #131                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: invokevirtual #216                // Method com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.hasContext:()Z
      10: ifeq          21
      13: new           #133                // class java/lang/AssertionError
      16: dup
      17: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #131                // Field $assertionsDisabled:Z
      24: ifne          42
      27: aload_1
      28: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
      31: ifge          42
      34: new           #133                // class java/lang/AssertionError
      37: dup
      38: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      41: athrow
      42: new           #217                // class com/ibm/icu/util/CharsTrieBuilder
      45: dup
      46: invokespecial #218                // Method com/ibm/icu/util/CharsTrieBuilder."<init>":()V
      49: astore_2
      50: new           #217                // class com/ibm/icu/util/CharsTrieBuilder
      53: dup
      54: invokespecial #218                // Method com/ibm/icu/util/CharsTrieBuilder."<init>":()V
      57: astore_3
      58: aload_1
      59: astore        4
      61: getstatic     #131                // Field $assertionsDisabled:Z
      64: ifne          89
      67: aload         4
      69: aload_1
      70: if_acmpeq     89
      73: aload         4
      75: invokevirtual #216                // Method com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.hasContext:()Z
      78: ifne          89
      81: new           #133                // class java/lang/AssertionError
      84: dup
      85: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
      88: athrow
      89: aload         4
      91: invokevirtual #219                // Method com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.prefixLength:()I
      94: istore        5
      96: new           #5                  // class java/lang/StringBuilder
      99: dup
     100: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
     103: aload         4
     105: getfield      #92                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.context:Ljava/lang/String;
     108: iconst_0
     109: iload         5
     111: iconst_1
     112: iadd
     113: invokevirtual #220                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
     116: astore        6
     118: aload         6
     120: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: astore        7
     125: aload         4
     127: astore        8
     129: aload         4
     131: astore        9
     133: aload         4
     135: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     138: iflt          171
     141: aload_0
     142: aload         4
     144: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     147: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     150: dup
     151: astore        4
     153: getfield      #92                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.context:Ljava/lang/String;
     156: aload         7
     158: invokevirtual #221                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     161: ifeq          171
     164: aload         4
     166: astore        9
     168: goto          133
     171: iload         5
     173: iconst_1
     174: iadd
     175: istore        11
     177: aload         9
     179: getfield      #92                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.context:Ljava/lang/String;
     182: invokevirtual #132                // Method java/lang/String.length:()I
     185: iload         11
     187: if_icmpne     225
     190: getstatic     #131                // Field $assertionsDisabled:Z
     193: ifne          211
     196: aload         8
     198: aload         9
     200: if_acmpeq     211
     203: new           #133                // class java/lang/AssertionError
     206: dup
     207: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
     210: athrow
     211: aload         9
     213: getfield      #80                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.ce32:I
     216: istore        10
     218: aload         9
     220: astore        4
     222: goto          521
     225: aload_3
     226: invokevirtual #222                // Method com/ibm/icu/util/CharsTrieBuilder.clear:()Lcom/ibm/icu/util/CharsTrieBuilder;
     229: pop
     230: iconst_1
     231: istore        12
     233: iconst_0
     234: istore        13
     236: aload         8
     238: getfield      #92                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.context:Ljava/lang/String;
     241: invokevirtual #132                // Method java/lang/String.length:()I
     244: iload         11
     246: if_icmpne     270
     249: aload         8
     251: getfield      #80                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.ce32:I
     254: istore        12
     256: aload_0
     257: aload         8
     259: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     262: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     265: astore        4
     267: goto          361
     270: iload         13
     272: sipush        256
     275: ior
     276: istore        13
     278: aload_1
     279: astore        4
     281: aload         4
     283: invokevirtual #219                // Method com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.prefixLength:()I
     286: istore        14
     288: iload         14
     290: iload         5
     292: if_icmpne     298
     295: goto          357
     298: aload         4
     300: getfield      #223                // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.defaultCE32:I
     303: iconst_1
     304: if_icmpeq     343
     307: iload         14
     309: ifeq          336
     312: aload         7
     314: aload         6
     316: invokevirtual #182                // Method java/lang/StringBuilder.length:()I
     319: iload         14
     321: isub
     322: aload         4
     324: getfield      #92                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.context:Ljava/lang/String;
     327: iconst_1
     328: iload         14
     330: invokevirtual #224                // Method java/lang/String.regionMatches:(ILjava/lang/String;II)Z
     333: ifeq          343
     336: aload         4
     338: getfield      #223                // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.defaultCE32:I
     341: istore        12
     343: aload_0
     344: aload         4
     346: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     349: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     352: astore        4
     354: goto          281
     357: aload         8
     359: astore        4
     361: iload         13
     363: sipush        512
     366: ior
     367: istore        13
     369: aload         4
     371: getfield      #92                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.context:Ljava/lang/String;
     374: iload         11
     376: invokevirtual #225                // Method java/lang/String.substring:(I)Ljava/lang/String;
     379: astore        14
     381: aload_0
     382: getfield      #11                 // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
     385: aload         14
     387: iconst_0
     388: invokevirtual #226                // Method java/lang/String.codePointAt:(I)I
     391: invokevirtual #227                // Method com/ibm/icu/impl/Normalizer2Impl.getFCD16:(I)I
     394: istore        15
     396: iload         15
     398: sipush        255
     401: if_icmpgt     412
     404: iload         13
     406: sipush        -513
     409: iand
     410: istore        13
     412: aload_0
     413: getfield      #11                 // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
     416: aload         14
     418: aload         14
     420: invokevirtual #132                // Method java/lang/String.length:()I
     423: invokevirtual #228                // Method java/lang/String.codePointBefore:(I)I
     426: invokevirtual #227                // Method com/ibm/icu/impl/Normalizer2Impl.getFCD16:(I)I
     429: istore        15
     431: iload         15
     433: sipush        255
     436: if_icmple     447
     439: iload         13
     441: sipush        1024
     444: ior
     445: istore        13
     447: aload_3
     448: aload         14
     450: aload         4
     452: getfield      #80                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.ce32:I
     455: invokevirtual #229                // Method com/ibm/icu/util/CharsTrieBuilder.add:(Ljava/lang/CharSequence;I)Lcom/ibm/icu/util/CharsTrieBuilder;
     458: pop
     459: aload         4
     461: aload         9
     463: if_acmpne     469
     466: goto          483
     469: aload_0
     470: aload         4
     472: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     475: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     478: astore        4
     480: goto          369
     483: aload_0
     484: iload         12
     486: aload_3
     487: invokevirtual #230                // Method addContextTrie:(ILcom/ibm/icu/util/CharsTrieBuilder;)I
     490: istore        14
     492: iload         14
     494: ldc           #136                // int 524287
     496: if_icmple     509
     499: new           #137                // class java/lang/IndexOutOfBoundsException
     502: dup
     503: ldc           #138                // String too many context-sensitive mappings
     505: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     508: athrow
     509: bipush        9
     511: iload         14
     513: invokestatic  #40                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
     516: iload         13
     518: ior
     519: istore        10
     521: getstatic     #131                // Field $assertionsDisabled:Z
     524: ifne          542
     527: aload         4
     529: aload         9
     531: if_acmpeq     542
     534: new           #133                // class java/lang/AssertionError
     537: dup
     538: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
     541: athrow
     542: aload         8
     544: iload         10
     546: putfield      #223                // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.defaultCE32:I
     549: iload         5
     551: ifne          565
     554: aload         4
     556: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     559: ifge          599
     562: iload         10
     564: ireturn
     565: aload         6
     567: iconst_0
     568: iconst_1
     569: invokevirtual #231                // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
     572: pop
     573: aload         6
     575: invokevirtual #172                // Method java/lang/StringBuilder.reverse:()Ljava/lang/StringBuilder;
     578: pop
     579: aload_2
     580: aload         6
     582: iload         10
     584: invokevirtual #229                // Method com/ibm/icu/util/CharsTrieBuilder.add:(Ljava/lang/CharSequence;I)Lcom/ibm/icu/util/CharsTrieBuilder;
     587: pop
     588: aload         4
     590: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     593: ifge          599
     596: goto          613
     599: aload_0
     600: aload         4
     602: getfield      #91                 // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.next:I
     605: invokevirtual #85                 // Method getConditionalCE32:(I)Lcom/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32;
     608: astore        4
     610: goto          61
     613: getstatic     #131                // Field $assertionsDisabled:Z
     616: ifne          635
     619: aload_1
     620: getfield      #223                // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.defaultCE32:I
     623: iconst_1
     624: if_icmpne     635
     627: new           #133                // class java/lang/AssertionError
     630: dup
     631: invokespecial #134                // Method java/lang/AssertionError."<init>":()V
     634: athrow
     635: aload_0
     636: aload_1
     637: getfield      #223                // Field com/ibm/icu/impl/coll/CollationDataBuilder$ConditionalCE32.defaultCE32:I
     640: aload_2
     641: invokevirtual #230                // Method addContextTrie:(ILcom/ibm/icu/util/CharsTrieBuilder;)I
     644: istore        4
     646: iload         4
     648: ldc           #136                // int 524287
     650: if_icmple     663
     653: new           #137                // class java/lang/IndexOutOfBoundsException
     656: dup
     657: ldc           #138                // String too many context-sensitive mappings
     659: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     662: athrow
     663: bipush        8
     665: iload         4
     667: invokestatic  #40                 // Method com/ibm/icu/impl/coll/Collation.makeCE32FromTagAndIndex:(II)I
     670: ireturn

  protected int addContextTrie(int, com.ibm.icu.util.CharsTrieBuilder);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_3
       9: iload_1
      10: bipush        16
      12: ishr
      13: i2c
      14: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      17: iload_1
      18: i2c
      19: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      22: pop
      23: aload_3
      24: aload_2
      25: getstatic     #232                // Field com/ibm/icu/util/StringTrieBuilder$Option.SMALL:Lcom/ibm/icu/util/StringTrieBuilder$Option;
      28: invokevirtual #233                // Method com/ibm/icu/util/CharsTrieBuilder.buildCharSequence:(Lcom/ibm/icu/util/StringTrieBuilder$Option;)Ljava/lang/CharSequence;
      31: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      34: pop
      35: aload_0
      36: getfield      #7                  // Field contexts:Ljava/lang/StringBuilder;
      39: aload_3
      40: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #234                // Method java/lang/StringBuilder.indexOf:(Ljava/lang/String;)I
      46: istore        4
      48: iload         4
      50: ifge          71
      53: aload_0
      54: getfield      #7                  // Field contexts:Ljava/lang/StringBuilder;
      57: invokevirtual #182                // Method java/lang/StringBuilder.length:()I
      60: istore        4
      62: aload_0
      63: getfield      #7                  // Field contexts:Ljava/lang/StringBuilder;
      66: aload_3
      67: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      70: pop
      71: iload         4
      73: ireturn

  protected void buildFastLatinTable(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: aload_0
       1: getfield      #25                 // Field fastLatinEnabled:Z
       4: ifne          8
       7: return
       8: aload_0
       9: new           #235                // class com/ibm/icu/impl/coll/CollationFastLatinBuilder
      12: dup
      13: invokespecial #236                // Method com/ibm/icu/impl/coll/CollationFastLatinBuilder."<init>":()V
      16: putfield      #26                 // Field fastLatinBuilder:Lcom/ibm/icu/impl/coll/CollationFastLatinBuilder;
      19: aload_0
      20: getfield      #26                 // Field fastLatinBuilder:Lcom/ibm/icu/impl/coll/CollationFastLatinBuilder;
      23: aload_1
      24: invokevirtual #237                // Method com/ibm/icu/impl/coll/CollationFastLatinBuilder.forData:(Lcom/ibm/icu/impl/coll/CollationData;)Z
      27: ifeq          115
      30: aload_0
      31: getfield      #26                 // Field fastLatinBuilder:Lcom/ibm/icu/impl/coll/CollationFastLatinBuilder;
      34: invokevirtual #238                // Method com/ibm/icu/impl/coll/CollationFastLatinBuilder.getHeader:()[C
      37: astore_2
      38: aload_0
      39: getfield      #26                 // Field fastLatinBuilder:Lcom/ibm/icu/impl/coll/CollationFastLatinBuilder;
      42: invokevirtual #239                // Method com/ibm/icu/impl/coll/CollationFastLatinBuilder.getTable:()[C
      45: astore_3
      46: aload_0
      47: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      50: ifnull        102
      53: aload_2
      54: aload_0
      55: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      58: getfield      #240                // Field com/ibm/icu/impl/coll/CollationData.fastLatinTableHeader:[C
      61: invokestatic  #241                // Method java/util/Arrays.equals:([C[C)Z
      64: ifeq          102
      67: aload_3
      68: aload_0
      69: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      72: getfield      #242                // Field com/ibm/icu/impl/coll/CollationData.fastLatinTable:[C
      75: invokestatic  #241                // Method java/util/Arrays.equals:([C[C)Z
      78: ifeq          102
      81: aload_0
      82: aconst_null
      83: putfield      #26                 // Field fastLatinBuilder:Lcom/ibm/icu/impl/coll/CollationFastLatinBuilder;
      86: aload_0
      87: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      90: getfield      #240                // Field com/ibm/icu/impl/coll/CollationData.fastLatinTableHeader:[C
      93: astore_2
      94: aload_0
      95: getfield      #12                 // Field base:Lcom/ibm/icu/impl/coll/CollationData;
      98: getfield      #242                // Field com/ibm/icu/impl/coll/CollationData.fastLatinTable:[C
     101: astore_3
     102: aload_1
     103: aload_2
     104: putfield      #240                // Field com/ibm/icu/impl/coll/CollationData.fastLatinTableHeader:[C
     107: aload_1
     108: aload_3
     109: putfield      #242                // Field com/ibm/icu/impl/coll/CollationData.fastLatinTable:[C
     112: goto          120
     115: aload_0
     116: aconst_null
     117: putfield      #26                 // Field fastLatinBuilder:Lcom/ibm/icu/impl/coll/CollationFastLatinBuilder;
     120: return

  protected int getCEs(java.lang.CharSequence, int, long[], int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field collIter:Lcom/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator;
       4: ifnonnull     39
       7: aload_0
       8: new           #243                // class com/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator
      11: dup
      12: aload_0
      13: new           #184                // class com/ibm/icu/impl/coll/CollationData
      16: dup
      17: aload_0
      18: getfield      #11                 // Field nfcImpl:Lcom/ibm/icu/impl/Normalizer2Impl;
      21: invokespecial #244                // Method com/ibm/icu/impl/coll/CollationData."<init>":(Lcom/ibm/icu/impl/Normalizer2Impl;)V
      24: invokespecial #245                // Method com/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationDataBuilder;Lcom/ibm/icu/impl/coll/CollationData;)V
      27: putfield      #27                 // Field collIter:Lcom/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator;
      30: aload_0
      31: getfield      #27                 // Field collIter:Lcom/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator;
      34: ifnonnull     39
      37: iconst_0
      38: ireturn
      39: aload_0
      40: getfield      #27                 // Field collIter:Lcom/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator;
      43: aload_1
      44: iload_2
      45: aload_3
      46: iload         4
      48: invokevirtual #246                // Method com/ibm/icu/impl/coll/CollationDataBuilder$DataBuilderCollationIterator.fetchCEs:(Ljava/lang/CharSequence;I[JI)I
      51: ireturn

  protected static int jamoCpFromIndex(int);
    Code:
       0: iload_0
       1: bipush        19
       3: if_icmpge     12
       6: sipush        4352
       9: iload_0
      10: iadd
      11: ireturn
      12: iinc          0, -19
      15: iload_0
      16: bipush        21
      18: if_icmpge     27
      21: sipush        4449
      24: iload_0
      25: iadd
      26: ireturn
      27: iinc          0, -21
      30: sipush        4520
      33: iload_0
      34: iadd
      35: ireturn

  protected final boolean isMutable();
    Code:
       0: aload_0
       1: getfield      #14                 // Field trie:Lcom/ibm/icu/impl/Trie2Writable;
       4: ifnull        28
       7: aload_0
       8: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
      11: ifnull        28
      14: aload_0
      15: getfield      #8                  // Field unsafeBackwardSet:Lcom/ibm/icu/text/UnicodeSet;
      18: invokevirtual #247                // Method com/ibm/icu/text/UnicodeSet.isFrozen:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  static {};
    Code:
       0: ldc           #248                // class com/ibm/icu/impl/coll/CollationDataBuilder
       2: invokevirtual #249                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #131                // Field $assertionsDisabled:Z
      16: return
}
