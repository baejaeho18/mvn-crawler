Compiled from "ICUBinary.java"
final class com.ibm.icu.impl.ICUBinary$DatPackageReader {
  private static final int DATA_FORMAT;

  private static final com.ibm.icu.impl.ICUBinary$DatPackageReader$IsAcceptable IS_ACCEPTABLE;

  static final boolean $assertionsDisabled;

  private com.ibm.icu.impl.ICUBinary$DatPackageReader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static boolean validate(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: ldc           #3                  // int 1131245124
       3: getstatic     #4                  // Field IS_ACCEPTABLE:Lcom/ibm/icu/impl/ICUBinary$DatPackageReader$IsAcceptable;
       6: invokestatic  #5                  // Method com/ibm/icu/impl/ICUBinary.readHeader:(Ljava/nio/ByteBuffer;ILcom/ibm/icu/impl/ICUBinary$Authenticate;)I
       9: pop
      10: goto          16
      13: astore_1
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_0
      18: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
      21: invokevirtual #8                  // Method java/nio/ByteBuffer.getInt:(I)I
      24: istore_1
      25: iload_1
      26: ifgt          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
      35: iconst_4
      36: iadd
      37: iload_1
      38: bipush        24
      40: imul
      41: iadd
      42: aload_0
      43: invokevirtual #9                  // Method java/nio/ByteBuffer.capacity:()I
      46: if_icmple     51
      49: iconst_0
      50: ireturn
      51: aload_0
      52: aload_0
      53: iconst_0
      54: invokestatic  #10                 // Method getNameOffset:(Ljava/nio/ByteBuffer;I)I
      57: invokestatic  #11                 // Method startsWithPackageName:(Ljava/nio/ByteBuffer;I)Z
      60: ifeq          77
      63: aload_0
      64: aload_0
      65: iload_1
      66: iconst_1
      67: isub
      68: invokestatic  #10                 // Method getNameOffset:(Ljava/nio/ByteBuffer;I)I
      71: invokestatic  #11                 // Method startsWithPackageName:(Ljava/nio/ByteBuffer;I)Z
      74: ifne          79
      77: iconst_0
      78: ireturn
      79: iconst_1
      80: ireturn
    Exception table:
       from    to  target type
           0    10    13   Class java/io/IOException

  private static boolean startsWithPackageName(java.nio.ByteBuffer, int);
    Code:
       0: ldc           #13                 // String icudt61b
       2: invokevirtual #14                 // Method java/lang/String.length:()I
       5: iconst_1
       6: isub
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     39
      15: aload_0
      16: iload_1
      17: iload_3
      18: iadd
      19: invokevirtual #15                 // Method java/nio/ByteBuffer.get:(I)B
      22: ldc           #13                 // String icudt61b
      24: iload_3
      25: invokevirtual #16                 // Method java/lang/String.charAt:(I)C
      28: if_icmpeq     33
      31: iconst_0
      32: ireturn
      33: iinc          3, 1
      36: goto          10
      39: aload_0
      40: iload_1
      41: iload_2
      42: iinc          2, 1
      45: iadd
      46: invokevirtual #15                 // Method java/nio/ByteBuffer.get:(I)B
      49: istore_3
      50: iload_3
      51: bipush        98
      53: if_icmpeq     62
      56: iload_3
      57: bipush        108
      59: if_icmpne     74
      62: aload_0
      63: iload_1
      64: iload_2
      65: iadd
      66: invokevirtual #15                 // Method java/nio/ByteBuffer.get:(I)B
      69: bipush        47
      71: if_icmpeq     76
      74: iconst_0
      75: ireturn
      76: iconst_1
      77: ireturn

  static java.nio.ByteBuffer getData(java.nio.ByteBuffer, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method binarySearch:(Ljava/nio/ByteBuffer;Ljava/lang/CharSequence;)I
       5: istore_2
       6: iload_2
       7: iflt          42
      10: aload_0
      11: invokevirtual #18                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      14: astore_3
      15: aload_3
      16: aload_0
      17: iload_2
      18: invokestatic  #19                 // Method getDataOffset:(Ljava/nio/ByteBuffer;I)I
      21: invokevirtual #20                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      24: pop
      25: aload_3
      26: aload_0
      27: iload_2
      28: iconst_1
      29: iadd
      30: invokestatic  #19                 // Method getDataOffset:(Ljava/nio/ByteBuffer;I)I
      33: invokevirtual #21                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_3
      38: invokestatic  #22                 // Method com/ibm/icu/impl/ICUBinary.sliceWithOrder:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      41: areturn
      42: aconst_null
      43: areturn

  static void addBaseNamesInFolder(java.nio.ByteBuffer, java.lang.String, java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #17                 // Method binarySearch:(Ljava/nio/ByteBuffer;Ljava/lang/CharSequence;)I
       5: istore        4
       7: iload         4
       9: ifge          18
      12: iload         4
      14: iconst_m1
      15: ixor
      16: istore        4
      18: aload_0
      19: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
      22: istore        5
      24: aload_0
      25: iload         5
      27: invokevirtual #8                  // Method java/nio/ByteBuffer.getInt:(I)I
      30: istore        6
      32: new           #23                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      39: astore        7
      41: iload         4
      43: iload         6
      45: if_icmpge     68
      48: aload_0
      49: iload         4
      51: aload_1
      52: aload_2
      53: aload         7
      55: aload_3
      56: invokestatic  #25                 // Method addBaseName:(Ljava/nio/ByteBuffer;ILjava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/util/Set;)Z
      59: ifeq          68
      62: iinc          4, 1
      65: goto          41
      68: return

  private static int binarySearch(java.nio.ByteBuffer, java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: invokevirtual #8                  // Method java/nio/ByteBuffer.getInt:(I)I
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload_3
      15: istore        5
      17: iload         4
      19: iload         5
      21: if_icmpge     94
      24: iload         4
      26: iload         5
      28: iadd
      29: iconst_1
      30: iushr
      31: istore        6
      33: aload_0
      34: iload         6
      36: invokestatic  #10                 // Method getNameOffset:(Ljava/nio/ByteBuffer;I)I
      39: istore        7
      41: iload         7
      43: ldc           #13                 // String icudt61b
      45: invokevirtual #14                 // Method java/lang/String.length:()I
      48: iconst_1
      49: iadd
      50: iadd
      51: istore        7
      53: aload_1
      54: aload_0
      55: iload         7
      57: invokestatic  #26                 // Method com/ibm/icu/impl/ICUBinary.compareKeys:(Ljava/lang/CharSequence;Ljava/nio/ByteBuffer;I)I
      60: istore        8
      62: iload         8
      64: ifge          74
      67: iload         6
      69: istore        5
      71: goto          91
      74: iload         8
      76: ifle          88
      79: iload         6
      81: iconst_1
      82: iadd
      83: istore        4
      85: goto          91
      88: iload         6
      90: ireturn
      91: goto          17
      94: iload         4
      96: iconst_m1
      97: ixor
      98: ireturn

  private static int getNameOffset(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: getstatic     #27                 // Field $assertionsDisabled:Z
       8: ifne          33
      11: iconst_0
      12: iload_1
      13: if_icmpgt     25
      16: iload_1
      17: aload_0
      18: iload_2
      19: invokevirtual #8                  // Method java/nio/ByteBuffer.getInt:(I)I
      22: if_icmplt     33
      25: new           #28                 // class java/lang/AssertionError
      28: dup
      29: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      32: athrow
      33: iload_2
      34: aload_0
      35: iload_2
      36: iconst_4
      37: iadd
      38: iload_1
      39: bipush        8
      41: imul
      42: iadd
      43: invokevirtual #8                  // Method java/nio/ByteBuffer.getInt:(I)I
      46: iadd
      47: ireturn

  private static int getDataOffset(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/nio/ByteBuffer.position:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: invokevirtual #8                  // Method java/nio/ByteBuffer.getInt:(I)I
      10: istore_3
      11: iload_1
      12: iload_3
      13: if_icmpne     21
      16: aload_0
      17: invokevirtual #9                  // Method java/nio/ByteBuffer.capacity:()I
      20: ireturn
      21: getstatic     #27                 // Field $assertionsDisabled:Z
      24: ifne          45
      27: iconst_0
      28: iload_1
      29: if_icmpgt     37
      32: iload_1
      33: iload_3
      34: if_icmplt     45
      37: new           #28                 // class java/lang/AssertionError
      40: dup
      41: invokespecial #29                 // Method java/lang/AssertionError."<init>":()V
      44: athrow
      45: iload_2
      46: aload_0
      47: iload_2
      48: iconst_4
      49: iadd
      50: iconst_4
      51: iadd
      52: iload_1
      53: bipush        8
      55: imul
      56: iadd
      57: invokevirtual #8                  // Method java/nio/ByteBuffer.getInt:(I)I
      60: iadd
      61: ireturn

  static boolean addBaseName(java.nio.ByteBuffer, int, java.lang.String, java.lang.String, java.lang.StringBuilder, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #10                 // Method getNameOffset:(Ljava/nio/ByteBuffer;I)I
       5: istore        6
       7: iload         6
       9: ldc           #13                 // String icudt61b
      11: invokevirtual #14                 // Method java/lang/String.length:()I
      14: iconst_1
      15: iadd
      16: iadd
      17: istore        6
      19: aload_2
      20: invokevirtual #14                 // Method java/lang/String.length:()I
      23: ifeq          80
      26: iconst_0
      27: istore        7
      29: iload         7
      31: aload_2
      32: invokevirtual #14                 // Method java/lang/String.length:()I
      35: if_icmpge     64
      38: aload_0
      39: iload         6
      41: invokevirtual #15                 // Method java/nio/ByteBuffer.get:(I)B
      44: aload_2
      45: iload         7
      47: invokevirtual #16                 // Method java/lang/String.charAt:(I)C
      50: if_icmpeq     55
      53: iconst_0
      54: ireturn
      55: iinc          7, 1
      58: iinc          6, 1
      61: goto          29
      64: aload_0
      65: iload         6
      67: iinc          6, 1
      70: invokevirtual #15                 // Method java/nio/ByteBuffer.get:(I)B
      73: bipush        47
      75: if_icmpeq     80
      78: iconst_0
      79: ireturn
      80: aload         4
      82: iconst_0
      83: invokevirtual #30                 // Method java/lang/StringBuilder.setLength:(I)V
      86: aload_0
      87: iload         6
      89: iinc          6, 1
      92: invokevirtual #15                 // Method java/nio/ByteBuffer.get:(I)B
      95: dup
      96: istore        7
      98: ifeq          126
     101: iload         7
     103: i2c
     104: istore        8
     106: iload         8
     108: bipush        47
     110: if_icmpne     115
     113: iconst_1
     114: ireturn
     115: aload         4
     117: iload         8
     119: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     122: pop
     123: goto          86
     126: aload         4
     128: invokevirtual #32                 // Method java/lang/StringBuilder.length:()I
     131: aload_3
     132: invokevirtual #14                 // Method java/lang/String.length:()I
     135: isub
     136: istore        8
     138: aload         4
     140: aload_3
     141: iload         8
     143: invokevirtual #33                 // Method java/lang/StringBuilder.lastIndexOf:(Ljava/lang/String;I)I
     146: iflt          165
     149: aload         5
     151: aload         4
     153: iconst_0
     154: iload         8
     156: invokevirtual #34                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;
     159: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     164: pop
     165: iconst_1
     166: ireturn

  static {};
    Code:
       0: ldc           #36                 // class com/ibm/icu/impl/ICUBinary
       2: invokevirtual #37                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #27                 // Field $assertionsDisabled:Z
      16: new           #38                 // class com/ibm/icu/impl/ICUBinary$DatPackageReader$IsAcceptable
      19: dup
      20: aconst_null
      21: invokespecial #39                 // Method com/ibm/icu/impl/ICUBinary$DatPackageReader$IsAcceptable."<init>":(Lcom/ibm/icu/impl/ICUBinary$1;)V
      24: putstatic     #4                  // Field IS_ACCEPTABLE:Lcom/ibm/icu/impl/ICUBinary$DatPackageReader$IsAcceptable;
      27: return
}
