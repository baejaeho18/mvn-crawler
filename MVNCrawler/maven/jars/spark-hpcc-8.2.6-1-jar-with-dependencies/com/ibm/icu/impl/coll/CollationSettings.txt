Compiled from "CollationSettings.java"
public final class com.ibm.icu.impl.coll.CollationSettings extends com.ibm.icu.impl.coll.SharedObject {
  public static final int CHECK_FCD;

  public static final int NUMERIC;

  static final int SHIFTED;

  static final int ALTERNATE_MASK;

  static final int MAX_VARIABLE_SHIFT;

  static final int MAX_VARIABLE_MASK;

  static final int UPPER_FIRST;

  public static final int CASE_FIRST;

  public static final int CASE_FIRST_AND_UPPER_MASK;

  public static final int CASE_LEVEL;

  public static final int BACKWARD_SECONDARY;

  static final int STRENGTH_SHIFT;

  static final int STRENGTH_MASK;

  static final int MAX_VAR_SPACE;

  static final int MAX_VAR_PUNCT;

  static final int MAX_VAR_SYMBOL;

  static final int MAX_VAR_CURRENCY;

  public int options;

  public long variableTop;

  public byte[] reorderTable;

  long minHighNoReorder;

  long[] reorderRanges;

  public int[] reorderCodes;

  private static final int[] EMPTY_INT_ARRAY;

  public int fastLatinOptions;

  public char[] fastLatinPrimaries;

  static final boolean $assertionsDisabled;

  com.ibm.icu.impl.coll.CollationSettings();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/ibm/icu/impl/coll/SharedObject."<init>":()V
       4: aload_0
       5: sipush        8208
       8: putfield      #4                  // Field options:I
      11: aload_0
      12: getstatic     #5                  // Field EMPTY_INT_ARRAY:[I
      15: putfield      #6                  // Field reorderCodes:[I
      18: aload_0
      19: iconst_m1
      20: putfield      #7                  // Field fastLatinOptions:I
      23: aload_0
      24: sipush        384
      27: newarray       char
      29: putfield      #8                  // Field fastLatinPrimaries:[C
      32: return

  public com.ibm.icu.impl.coll.CollationSettings clone();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method com/ibm/icu/impl/coll/SharedObject.clone:()Lcom/ibm/icu/impl/coll/SharedObject;
       4: checkcast     #1                  // class com/ibm/icu/impl/coll/CollationSettings
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field fastLatinPrimaries:[C
      13: invokevirtual #10                 // Method "[C".clone:()Ljava/lang/Object;
      16: checkcast     #11                 // class "[C"
      19: putfield      #8                  // Field fastLatinPrimaries:[C
      22: aload_1
      23: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: aload_1
      11: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #13                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifne          22
      20: iconst_0
      21: ireturn
      22: aload_1
      23: checkcast     #1                  // class com/ibm/icu/impl/coll/CollationSettings
      26: astore_2
      27: aload_0
      28: getfield      #4                  // Field options:I
      31: aload_2
      32: getfield      #4                  // Field options:I
      35: if_icmpeq     40
      38: iconst_0
      39: ireturn
      40: aload_0
      41: getfield      #4                  // Field options:I
      44: bipush        12
      46: iand
      47: ifeq          64
      50: aload_0
      51: getfield      #14                 // Field variableTop:J
      54: aload_2
      55: getfield      #14                 // Field variableTop:J
      58: lcmp
      59: ifeq          64
      62: iconst_0
      63: ireturn
      64: aload_0
      65: getfield      #6                  // Field reorderCodes:[I
      68: aload_2
      69: getfield      #6                  // Field reorderCodes:[I
      72: invokestatic  #15                 // Method java/util/Arrays.equals:([I[I)Z
      75: ifne          80
      78: iconst_0
      79: ireturn
      80: iconst_1
      81: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: bipush        8
       6: ishl
       7: istore_1
       8: aload_0
       9: getfield      #4                  // Field options:I
      12: bipush        12
      14: iand
      15: ifeq          27
      18: iload_1
      19: i2l
      20: aload_0
      21: getfield      #14                 // Field variableTop:J
      24: lxor
      25: l2i
      26: istore_1
      27: iload_1
      28: aload_0
      29: getfield      #6                  // Field reorderCodes:[I
      32: arraylength
      33: ixor
      34: istore_1
      35: iconst_0
      36: istore_2
      37: iload_2
      38: aload_0
      39: getfield      #6                  // Field reorderCodes:[I
      42: arraylength
      43: if_icmpge     63
      46: iload_1
      47: aload_0
      48: getfield      #6                  // Field reorderCodes:[I
      51: iload_2
      52: iaload
      53: iload_2
      54: ishl
      55: ixor
      56: istore_1
      57: iinc          2, 1
      60: goto          37
      63: iload_1
      64: ireturn

  public void resetReordering();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #16                 // Field reorderTable:[B
       5: aload_0
       6: lconst_0
       7: putfield      #17                 // Field minHighNoReorder:J
      10: aload_0
      11: aconst_null
      12: putfield      #18                 // Field reorderRanges:[J
      15: aload_0
      16: getstatic     #5                  // Field EMPTY_INT_ARRAY:[I
      19: putfield      #6                  // Field reorderCodes:[I
      22: return

  void aliasReordering(com.ibm.icu.impl.coll.CollationData, int[], int, byte[]);
    Code:
       0: iload_3
       1: aload_2
       2: arraylength
       3: if_icmpne     12
       6: aload_2
       7: astore        5
       9: goto          26
      12: iload_3
      13: newarray       int
      15: astore        5
      17: aload_2
      18: iconst_0
      19: aload         5
      21: iconst_0
      22: iload_3
      23: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: iload_3
      27: istore        6
      29: aload_2
      30: arraylength
      31: istore        7
      33: iload         7
      35: iload         6
      37: isub
      38: istore        8
      40: aload         4
      42: ifnull        225
      45: iload         8
      47: ifne          61
      50: aload         4
      52: invokestatic  #20                 // Method reorderTableHasSplitBytes:([B)Z
      55: ifne          225
      58: goto          89
      61: iload         8
      63: iconst_2
      64: if_icmplt     225
      67: aload_2
      68: iload         6
      70: iaload
      71: ldc           #21                 // int 65535
      73: iand
      74: ifne          225
      77: aload_2
      78: iload         7
      80: iconst_1
      81: isub
      82: iaload
      83: ldc           #21                 // int 65535
      85: iand
      86: ifeq          225
      89: aload_0
      90: aload         4
      92: putfield      #16                 // Field reorderTable:[B
      95: aload_0
      96: aload         5
      98: putfield      #6                  // Field reorderCodes:[I
     101: iload         6
     103: istore        9
     105: iload         9
     107: iload         7
     109: if_icmpge     128
     112: aload_2
     113: iload         9
     115: iaload
     116: ldc           #22                 // int 16711680
     118: iand
     119: ifne          128
     122: iinc          9, 1
     125: goto          105
     128: iload         9
     130: iload         7
     132: if_icmpne     170
     135: getstatic     #23                 // Field $assertionsDisabled:Z
     138: ifne          157
     141: aload         4
     143: invokestatic  #20                 // Method reorderTableHasSplitBytes:([B)Z
     146: ifeq          157
     149: new           #24                 // class java/lang/AssertionError
     152: dup
     153: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
     156: athrow
     157: aload_0
     158: lconst_0
     159: putfield      #17                 // Field minHighNoReorder:J
     162: aload_0
     163: aconst_null
     164: putfield      #18                 // Field reorderRanges:[J
     167: goto          224
     170: getstatic     #23                 // Field $assertionsDisabled:Z
     173: ifne          197
     176: aload         4
     178: aload_2
     179: iload         9
     181: iaload
     182: bipush        24
     184: iushr
     185: baload
     186: ifeq          197
     189: new           #24                 // class java/lang/AssertionError
     192: dup
     193: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
     196: athrow
     197: aload_0
     198: aload_2
     199: iload         7
     201: iconst_1
     202: isub
     203: iaload
     204: i2l
     205: ldc2_w        #26                 // long 4294901760l
     208: land
     209: putfield      #17                 // Field minHighNoReorder:J
     212: aload_0
     213: aload_2
     214: iload         9
     216: iload         7
     218: iload         9
     220: isub
     221: invokespecial #28                 // Method setReorderRanges:([III)V
     224: return
     225: aload_0
     226: aload_1
     227: aload         5
     229: invokevirtual #29                 // Method setReordering:(Lcom/ibm/icu/impl/coll/CollationData;[I)V
     232: return

  public void setReordering(com.ibm.icu.impl.coll.CollationData, int[]);
    Code:
       0: aload_2
       1: arraylength
       2: ifeq          19
       5: aload_2
       6: arraylength
       7: iconst_1
       8: if_icmpne     24
      11: aload_2
      12: iconst_0
      13: iaload
      14: bipush        103
      16: if_icmpne     24
      19: aload_0
      20: invokevirtual #31                 // Method resetReordering:()V
      23: return
      24: new           #32                 // class com/ibm/icu/impl/coll/UVector32
      27: dup
      28: invokespecial #33                 // Method com/ibm/icu/impl/coll/UVector32."<init>":()V
      31: astore_3
      32: aload_1
      33: aload_2
      34: aload_3
      35: invokevirtual #34                 // Method com/ibm/icu/impl/coll/CollationData.makeReorderRanges:([ILcom/ibm/icu/impl/coll/UVector32;)V
      38: aload_3
      39: invokevirtual #35                 // Method com/ibm/icu/impl/coll/UVector32.size:()I
      42: istore        4
      44: iload         4
      46: ifne          54
      49: aload_0
      50: invokevirtual #31                 // Method resetReordering:()V
      53: return
      54: aload_3
      55: invokevirtual #36                 // Method com/ibm/icu/impl/coll/UVector32.getBuffer:()[I
      58: astore        5
      60: getstatic     #23                 // Field $assertionsDisabled:Z
      63: ifne          80
      66: iload         4
      68: iconst_2
      69: if_icmpge     80
      72: new           #24                 // class java/lang/AssertionError
      75: dup
      76: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: getstatic     #23                 // Field $assertionsDisabled:Z
      83: ifne          117
      86: aload         5
      88: iconst_0
      89: iaload
      90: ldc           #21                 // int 65535
      92: iand
      93: ifne          109
      96: aload         5
      98: iload         4
     100: iconst_1
     101: isub
     102: iaload
     103: ldc           #21                 // int 65535
     105: iand
     106: ifne          117
     109: new           #24                 // class java/lang/AssertionError
     112: dup
     113: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
     116: athrow
     117: aload_0
     118: aload         5
     120: iload         4
     122: iconst_1
     123: isub
     124: iaload
     125: i2l
     126: ldc2_w        #26                 // long 4294901760l
     129: land
     130: putfield      #17                 // Field minHighNoReorder:J
     133: sipush        256
     136: newarray       byte
     138: astore        6
     140: iconst_0
     141: istore        7
     143: iconst_m1
     144: istore        8
     146: iconst_0
     147: istore        9
     149: iload         9
     151: iload         4
     153: if_icmpge     229
     156: aload         5
     158: iload         9
     160: iaload
     161: istore        10
     163: iload         10
     165: bipush        24
     167: iushr
     168: istore        11
     170: iload         7
     172: iload         11
     174: if_icmpge     194
     177: aload         6
     179: iload         7
     181: iload         7
     183: iload         10
     185: iadd
     186: i2b
     187: bastore
     188: iinc          7, 1
     191: goto          170
     194: iload         10
     196: ldc           #22                 // int 16711680
     198: iand
     199: ifeq          223
     202: aload         6
     204: iload         11
     206: iconst_0
     207: bastore
     208: iload         11
     210: iconst_1
     211: iadd
     212: istore        7
     214: iload         8
     216: ifge          223
     219: iload         9
     221: istore        8
     223: iinc          9, 1
     226: goto          149
     229: iload         7
     231: sipush        255
     234: if_icmpgt     251
     237: aload         6
     239: iload         7
     241: iload         7
     243: i2b
     244: bastore
     245: iinc          7, 1
     248: goto          229
     251: iload         8
     253: ifge          265
     256: iconst_0
     257: dup
     258: istore        4
     260: istore        9
     262: goto          276
     265: iload         8
     267: istore        9
     269: iload         4
     271: iload         8
     273: isub
     274: istore        4
     276: aload_0
     277: aload_2
     278: aload         5
     280: iload         9
     282: iload         4
     284: aload         6
     286: invokespecial #37                 // Method setReorderArrays:([I[III[B)V
     289: return

  private void setReorderArrays(int[], int[], int, int, byte[]);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #5                  // Field EMPTY_INT_ARRAY:[I
       7: astore_1
       8: getstatic     #23                 // Field $assertionsDisabled:Z
      11: ifne          45
      14: aload_1
      15: arraylength
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: aload         5
      26: ifnonnull     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: if_icmpeq     45
      37: new           #24                 // class java/lang/AssertionError
      40: dup
      41: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      44: athrow
      45: aload_0
      46: aload         5
      48: putfield      #16                 // Field reorderTable:[B
      51: aload_0
      52: aload_1
      53: putfield      #6                  // Field reorderCodes:[I
      56: aload_0
      57: aload_2
      58: iload_3
      59: iload         4
      61: invokespecial #28                 // Method setReorderRanges:([III)V
      64: return

  private void setReorderRanges(int[], int, int);
    Code:
       0: iload_3
       1: ifne          12
       4: aload_0
       5: aconst_null
       6: putfield      #18                 // Field reorderRanges:[J
       9: goto          49
      12: aload_0
      13: iload_3
      14: newarray       long
      16: putfield      #18                 // Field reorderRanges:[J
      19: iconst_0
      20: istore        4
      22: aload_0
      23: getfield      #18                 // Field reorderRanges:[J
      26: iload         4
      28: iinc          4, 1
      31: aload_1
      32: iload_2
      33: iinc          2, 1
      36: iaload
      37: i2l
      38: ldc2_w        #38                 // long 4294967295l
      41: land
      42: lastore
      43: iload         4
      45: iload_3
      46: if_icmplt     22
      49: return

  public void copyReorderingFrom(com.ibm.icu.impl.coll.CollationSettings);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method hasReordering:()Z
       4: ifne          12
       7: aload_0
       8: invokevirtual #31                 // Method resetReordering:()V
      11: return
      12: aload_0
      13: aload_1
      14: getfield      #17                 // Field minHighNoReorder:J
      17: putfield      #17                 // Field minHighNoReorder:J
      20: aload_0
      21: aload_1
      22: getfield      #16                 // Field reorderTable:[B
      25: putfield      #16                 // Field reorderTable:[B
      28: aload_0
      29: aload_1
      30: getfield      #18                 // Field reorderRanges:[J
      33: putfield      #18                 // Field reorderRanges:[J
      36: aload_0
      37: aload_1
      38: getfield      #6                  // Field reorderCodes:[I
      41: putfield      #6                  // Field reorderCodes:[I
      44: return

  public boolean hasReordering();
    Code:
       0: aload_0
       1: getfield      #16                 // Field reorderTable:[B
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static boolean reorderTableHasSplitBytes(byte[]);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          20
       6: aload_0
       7: iconst_0
       8: baload
       9: ifeq          20
      12: new           #24                 // class java/lang/AssertionError
      15: dup
      16: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      19: athrow
      20: iconst_1
      21: istore_1
      22: iload_1
      23: sipush        256
      26: if_icmpge     43
      29: aload_0
      30: iload_1
      31: baload
      32: ifne          37
      35: iconst_1
      36: ireturn
      37: iinc          1, 1
      40: goto          22
      43: iconst_0
      44: ireturn

  public long reorder(long);
    Code:
       0: aload_0
       1: getfield      #16                 // Field reorderTable:[B
       4: lload_1
       5: l2i
       6: bipush        24
       8: iushr
       9: baload
      10: istore_3
      11: iload_3
      12: ifne          21
      15: lload_1
      16: lconst_1
      17: lcmp
      18: ifgt          37
      21: iload_3
      22: i2l
      23: ldc2_w        #42                 // long 255l
      26: land
      27: bipush        24
      29: lshl
      30: lload_1
      31: ldc2_w        #44                 // long 16777215l
      34: land
      35: lor
      36: lreturn
      37: aload_0
      38: lload_1
      39: invokespecial #46                 // Method reorderEx:(J)J
      42: lreturn

  private long reorderEx(long);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          23
       6: aload_0
       7: getfield      #17                 // Field minHighNoReorder:J
      10: lconst_0
      11: lcmp
      12: ifgt          23
      15: new           #24                 // class java/lang/AssertionError
      18: dup
      19: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      22: athrow
      23: lload_1
      24: aload_0
      25: getfield      #17                 // Field minHighNoReorder:J
      28: lcmp
      29: iflt          34
      32: lload_1
      33: lreturn
      34: lload_1
      35: ldc2_w        #47                 // long 65535l
      38: lor
      39: lstore_3
      40: iconst_0
      41: istore        7
      43: lload_3
      44: aload_0
      45: getfield      #18                 // Field reorderRanges:[J
      48: iload         7
      50: laload
      51: dup2
      52: lstore        5
      54: lcmp
      55: iflt          64
      58: iinc          7, 1
      61: goto          43
      64: lload_1
      65: lload         5
      67: l2i
      68: i2s
      69: i2l
      70: bipush        24
      72: lshl
      73: ladd
      74: lreturn

  public void setStrength(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: ldc           #49                 // int -61441
       6: iand
       7: istore_2
       8: iload_1
       9: lookupswitch  { // 5
                     0: 60
                     1: 60
                     2: 60
                     3: 60
                    15: 60
               default: 73
          }
      60: aload_0
      61: iload_2
      62: iload_1
      63: bipush        12
      65: ishl
      66: ior
      67: putfield      #4                  // Field options:I
      70: goto          100
      73: new           #50                 // class java/lang/IllegalArgumentException
      76: dup
      77: new           #51                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #53                 // String illegal strength value
      86: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: iload_1
      90: invokevirtual #55                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: return

  public void setStrengthDefault(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: ldc           #49                 // int -61441
       6: iand
       7: istore_2
       8: aload_0
       9: iload_2
      10: iload_1
      11: ldc           #58                 // int 61440
      13: iand
      14: ior
      15: putfield      #4                  // Field options:I
      18: return

  static int getStrength(int);
    Code:
       0: iload_0
       1: bipush        12
       3: ishr
       4: ireturn

  public int getStrength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: invokestatic  #59                 // Method getStrength:(I)I
       7: ireturn

  public void setFlag(int, boolean);
    Code:
       0: iload_2
       1: ifeq          17
       4: aload_0
       5: dup
       6: getfield      #4                  // Field options:I
       9: iload_1
      10: ior
      11: putfield      #4                  // Field options:I
      14: goto          29
      17: aload_0
      18: dup
      19: getfield      #4                  // Field options:I
      22: iload_1
      23: iconst_m1
      24: ixor
      25: iand
      26: putfield      #4                  // Field options:I
      29: return

  public void setFlagDefault(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field options:I
       5: iload_1
       6: iconst_m1
       7: ixor
       8: iand
       9: iload_2
      10: iload_1
      11: iand
      12: ior
      13: putfield      #4                  // Field options:I
      16: return

  public boolean getFlag(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: iload_1
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public void setCaseFirst(int);
    Code:
       0: getstatic     #23                 // Field $assertionsDisabled:Z
       3: ifne          32
       6: iload_1
       7: ifeq          32
      10: iload_1
      11: sipush        512
      14: if_icmpeq     32
      17: iload_1
      18: sipush        768
      21: if_icmpeq     32
      24: new           #24                 // class java/lang/AssertionError
      27: dup
      28: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      31: athrow
      32: aload_0
      33: getfield      #4                  // Field options:I
      36: sipush        -769
      39: iand
      40: istore_2
      41: aload_0
      42: iload_2
      43: iload_1
      44: ior
      45: putfield      #4                  // Field options:I
      48: return

  public void setCaseFirstDefault(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: sipush        -769
       7: iand
       8: istore_2
       9: aload_0
      10: iload_2
      11: iload_1
      12: sipush        768
      15: iand
      16: ior
      17: putfield      #4                  // Field options:I
      20: return

  public int getCaseFirst();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: sipush        768
       7: iand
       8: ireturn

  public void setAlternateHandlingShifted(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: bipush        -13
       6: iand
       7: istore_2
       8: iload_1
       9: ifeq          22
      12: aload_0
      13: iload_2
      14: iconst_4
      15: ior
      16: putfield      #4                  // Field options:I
      19: goto          27
      22: aload_0
      23: iload_2
      24: putfield      #4                  // Field options:I
      27: return

  public void setAlternateHandlingDefault(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: bipush        -13
       6: iand
       7: istore_2
       8: aload_0
       9: iload_2
      10: iload_1
      11: bipush        12
      13: iand
      14: ior
      15: putfield      #4                  // Field options:I
      18: return

  public boolean getAlternateHandling();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: bipush        12
       6: iand
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void setMaxVariable(int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: bipush        -113
       6: iand
       7: istore_3
       8: iload_1
       9: tableswitch   { // -1 to 3
                    -1: 56
                     0: 44
                     1: 44
                     2: 44
                     3: 44
               default: 69
          }
      44: aload_0
      45: iload_3
      46: iload_1
      47: iconst_4
      48: ishl
      49: ior
      50: putfield      #4                  // Field options:I
      53: goto          96
      56: aload_0
      57: iload_3
      58: iload_2
      59: bipush        112
      61: iand
      62: ior
      63: putfield      #4                  // Field options:I
      66: goto          96
      69: new           #50                 // class java/lang/IllegalArgumentException
      72: dup
      73: new           #51                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #52                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #60                 // String illegal maxVariable value
      82: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: iload_1
      86: invokevirtual #55                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      89: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: return

  public int getMaxVariable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: bipush        112
       6: iand
       7: iconst_4
       8: ishr
       9: ireturn

  static boolean isTertiaryWithCaseBits(int);
    Code:
       0: iload_0
       1: sipush        1536
       4: iand
       5: sipush        512
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  static int getTertiaryMask(int);
    Code:
       0: iload_0
       1: invokestatic  #61                 // Method isTertiaryWithCaseBits:(I)Z
       4: ifeq          12
       7: ldc           #62                 // int 65343
       9: goto          15
      12: sipush        16191
      15: ireturn

  static boolean sortsTertiaryUpperCaseFirst(int);
    Code:
       0: iload_0
       1: sipush        1792
       4: iand
       5: sipush        768
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean dontCheckFCD();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: iconst_1
       5: iand
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  boolean hasBackwardSecondary();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: sipush        2048
       7: iand
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isNumeric();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:I
       4: iconst_2
       5: iand
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public com.ibm.icu.impl.coll.SharedObject clone();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lcom/ibm/icu/impl/coll/CollationSettings;
       4: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method clone:()Lcom/ibm/icu/impl/coll/CollationSettings;
       4: areturn

  static {};
    Code:
       0: ldc           #1                  // class com/ibm/icu/impl/coll/CollationSettings
       2: invokevirtual #64                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #23                 // Field $assertionsDisabled:Z
      16: iconst_0
      17: newarray       int
      19: putstatic     #5                  // Field EMPTY_INT_ARRAY:[I
      22: return
}
