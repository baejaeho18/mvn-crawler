Compiled from "Period.java"
public final class com.ibm.icu.impl.duration.Period {
  final byte timeLimit;

  final boolean inFuture;

  final int[] counts;

  public static com.ibm.icu.impl.duration.Period at(float, com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: fload_0
       1: invokestatic  #1                  // Method checkCount:(F)V
       4: new           #2                  // class com/ibm/icu/impl/duration/Period
       7: dup
       8: iconst_0
       9: iconst_0
      10: fload_0
      11: aload_1
      12: invokespecial #4                  // Method "<init>":(IZFLcom/ibm/icu/impl/duration/TimeUnit;)V
      15: areturn

  public static com.ibm.icu.impl.duration.Period moreThan(float, com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: fload_0
       1: invokestatic  #1                  // Method checkCount:(F)V
       4: new           #2                  // class com/ibm/icu/impl/duration/Period
       7: dup
       8: iconst_2
       9: iconst_0
      10: fload_0
      11: aload_1
      12: invokespecial #4                  // Method "<init>":(IZFLcom/ibm/icu/impl/duration/TimeUnit;)V
      15: areturn

  public static com.ibm.icu.impl.duration.Period lessThan(float, com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: fload_0
       1: invokestatic  #1                  // Method checkCount:(F)V
       4: new           #2                  // class com/ibm/icu/impl/duration/Period
       7: dup
       8: iconst_1
       9: iconst_0
      10: fload_0
      11: aload_1
      12: invokespecial #4                  // Method "<init>":(IZFLcom/ibm/icu/impl/duration/TimeUnit;)V
      15: areturn

  public com.ibm.icu.impl.duration.Period and(float, com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: fload_1
       1: invokestatic  #1                  // Method checkCount:(F)V
       4: aload_0
       5: aload_2
       6: fload_1
       7: invokespecial #5                  // Method setTimeUnitValue:(Lcom/ibm/icu/impl/duration/TimeUnit;F)Lcom/ibm/icu/impl/duration/Period;
      10: areturn

  public com.ibm.icu.impl.duration.Period omit(com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #6                  // Method setTimeUnitInternalValue:(Lcom/ibm/icu/impl/duration/TimeUnit;I)Lcom/ibm/icu/impl/duration/Period;
       6: areturn

  public com.ibm.icu.impl.duration.Period at();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #7                  // Method setTimeLimit:(B)Lcom/ibm/icu/impl/duration/Period;
       5: areturn

  public com.ibm.icu.impl.duration.Period moreThan();
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #7                  // Method setTimeLimit:(B)Lcom/ibm/icu/impl/duration/Period;
       5: areturn

  public com.ibm.icu.impl.duration.Period lessThan();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #7                  // Method setTimeLimit:(B)Lcom/ibm/icu/impl/duration/Period;
       5: areturn

  public com.ibm.icu.impl.duration.Period inFuture();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #8                  // Method setFuture:(Z)Lcom/ibm/icu/impl/duration/Period;
       5: areturn

  public com.ibm.icu.impl.duration.Period inPast();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #8                  // Method setFuture:(Z)Lcom/ibm/icu/impl/duration/Period;
       5: areturn

  public com.ibm.icu.impl.duration.Period inFuture(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #8                  // Method setFuture:(Z)Lcom/ibm/icu/impl/duration/Period;
       5: areturn

  public com.ibm.icu.impl.duration.Period inPast(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifne          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokespecial #8                  // Method setFuture:(Z)Lcom/ibm/icu/impl/duration/Period;
      13: areturn

  public boolean isSet();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #9                  // Field counts:[I
       7: arraylength
       8: if_icmpge     28
      11: aload_0
      12: getfield      #9                  // Field counts:[I
      15: iload_1
      16: iaload
      17: ifeq          22
      20: iconst_1
      21: ireturn
      22: iinc          1, 1
      25: goto          2
      28: iconst_0
      29: ireturn

  public boolean isSet(com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #9                  // Field counts:[I
       4: aload_1
       5: getfield      #10                 // Field com/ibm/icu/impl/duration/TimeUnit.ordinal:B
       8: iaload
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public float getCount(com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: aload_1
       1: getfield      #10                 // Field com/ibm/icu/impl/duration/TimeUnit.ordinal:B
       4: istore_2
       5: aload_0
       6: getfield      #9                  // Field counts:[I
       9: iload_2
      10: iaload
      11: ifne          16
      14: fconst_0
      15: freturn
      16: aload_0
      17: getfield      #9                  // Field counts:[I
      20: iload_2
      21: iaload
      22: iconst_1
      23: isub
      24: i2f
      25: ldc           #11                 // float 1000.0f
      27: fdiv
      28: freturn

  public boolean isInFuture();
    Code:
       0: aload_0
       1: getfield      #12                 // Field inFuture:Z
       4: ireturn

  public boolean isInPast();
    Code:
       0: aload_0
       1: getfield      #12                 // Field inFuture:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isMoreThan();
    Code:
       0: aload_0
       1: getfield      #13                 // Field timeLimit:B
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isLessThan();
    Code:
       0: aload_0
       1: getfield      #13                 // Field timeLimit:B
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class com/ibm/icu/impl/duration/Period
       5: invokevirtual #14                 // Method equals:(Lcom/ibm/icu/impl/duration/Period;)Z
       8: ireturn
       9: astore_2
      10: iconst_0
      11: ireturn
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/ClassCastException

  public boolean equals(com.ibm.icu.impl.duration.Period);
    Code:
       0: aload_1
       1: ifnull        62
       4: aload_0
       5: getfield      #13                 // Field timeLimit:B
       8: aload_1
       9: getfield      #13                 // Field timeLimit:B
      12: if_icmpne     62
      15: aload_0
      16: getfield      #12                 // Field inFuture:Z
      19: aload_1
      20: getfield      #12                 // Field inFuture:Z
      23: if_icmpne     62
      26: iconst_0
      27: istore_2
      28: iload_2
      29: aload_0
      30: getfield      #9                  // Field counts:[I
      33: arraylength
      34: if_icmpge     60
      37: aload_0
      38: getfield      #9                  // Field counts:[I
      41: iload_2
      42: iaload
      43: aload_1
      44: getfield      #9                  // Field counts:[I
      47: iload_2
      48: iaload
      49: if_icmpeq     54
      52: iconst_0
      53: ireturn
      54: iinc          2, 1
      57: goto          28
      60: iconst_1
      61: ireturn
      62: iconst_0
      63: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field timeLimit:B
       4: iconst_1
       5: ishl
       6: aload_0
       7: getfield      #12                 // Field inFuture:Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ior
      19: istore_1
      20: iconst_0
      21: istore_2
      22: iload_2
      23: aload_0
      24: getfield      #9                  // Field counts:[I
      27: arraylength
      28: if_icmpge     48
      31: iload_1
      32: iconst_2
      33: ishl
      34: aload_0
      35: getfield      #9                  // Field counts:[I
      38: iload_2
      39: iaload
      40: ixor
      41: istore_1
      42: iinc          2, 1
      45: goto          22
      48: iload_1
      49: ireturn

  private com.ibm.icu.impl.duration.Period(int, boolean, float, com.ibm.icu.impl.duration.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: i2b
       7: putfield      #13                 // Field timeLimit:B
      10: aload_0
      11: iload_2
      12: putfield      #12                 // Field inFuture:Z
      15: aload_0
      16: getstatic     #17                 // Field com/ibm/icu/impl/duration/TimeUnit.units:[Lcom/ibm/icu/impl/duration/TimeUnit;
      19: arraylength
      20: newarray       int
      22: putfield      #9                  // Field counts:[I
      25: aload_0
      26: getfield      #9                  // Field counts:[I
      29: aload         4
      31: getfield      #10                 // Field com/ibm/icu/impl/duration/TimeUnit.ordinal:B
      34: fload_3
      35: ldc           #11                 // float 1000.0f
      37: fmul
      38: f2i
      39: iconst_1
      40: iadd
      41: iastore
      42: return

  com.ibm.icu.impl.duration.Period(int, boolean, int[]);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: i2b
       7: putfield      #13                 // Field timeLimit:B
      10: aload_0
      11: iload_2
      12: putfield      #12                 // Field inFuture:Z
      15: aload_0
      16: aload_3
      17: putfield      #9                  // Field counts:[I
      20: return

  private com.ibm.icu.impl.duration.Period setTimeUnitValue(com.ibm.icu.impl.duration.TimeUnit, float);
    Code:
       0: fload_2
       1: fconst_0
       2: fcmpg
       3: ifge          33
       6: new           #18                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #19                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #21                 // String value:
      19: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: fload_2
      23: invokevirtual #23                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      26: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: aload_1
      35: fload_2
      36: ldc           #11                 // float 1000.0f
      38: fmul
      39: f2i
      40: iconst_1
      41: iadd
      42: invokespecial #6                  // Method setTimeUnitInternalValue:(Lcom/ibm/icu/impl/duration/TimeUnit;I)Lcom/ibm/icu/impl/duration/Period;
      45: areturn

  private com.ibm.icu.impl.duration.Period setTimeUnitInternalValue(com.ibm.icu.impl.duration.TimeUnit, int);
    Code:
       0: aload_1
       1: getfield      #10                 // Field com/ibm/icu/impl/duration/TimeUnit.ordinal:B
       4: istore_3
       5: aload_0
       6: getfield      #9                  // Field counts:[I
       9: iload_3
      10: iaload
      11: iload_2
      12: if_icmpeq     78
      15: aload_0
      16: getfield      #9                  // Field counts:[I
      19: arraylength
      20: newarray       int
      22: astore        4
      24: iconst_0
      25: istore        5
      27: iload         5
      29: aload_0
      30: getfield      #9                  // Field counts:[I
      33: arraylength
      34: if_icmpge     55
      37: aload         4
      39: iload         5
      41: aload_0
      42: getfield      #9                  // Field counts:[I
      45: iload         5
      47: iaload
      48: iastore
      49: iinc          5, 1
      52: goto          27
      55: aload         4
      57: iload_3
      58: iload_2
      59: iastore
      60: new           #2                  // class com/ibm/icu/impl/duration/Period
      63: dup
      64: aload_0
      65: getfield      #13                 // Field timeLimit:B
      68: aload_0
      69: getfield      #12                 // Field inFuture:Z
      72: aload         4
      74: invokespecial #26                 // Method "<init>":(IZ[I)V
      77: areturn
      78: aload_0
      79: areturn

  private com.ibm.icu.impl.duration.Period setFuture(boolean);
    Code:
       0: aload_0
       1: getfield      #12                 // Field inFuture:Z
       4: iload_1
       5: if_icmpeq     25
       8: new           #2                  // class com/ibm/icu/impl/duration/Period
      11: dup
      12: aload_0
      13: getfield      #13                 // Field timeLimit:B
      16: iload_1
      17: aload_0
      18: getfield      #9                  // Field counts:[I
      21: invokespecial #26                 // Method "<init>":(IZ[I)V
      24: areturn
      25: aload_0
      26: areturn

  private com.ibm.icu.impl.duration.Period setTimeLimit(byte);
    Code:
       0: aload_0
       1: getfield      #13                 // Field timeLimit:B
       4: iload_1
       5: if_icmpeq     25
       8: new           #2                  // class com/ibm/icu/impl/duration/Period
      11: dup
      12: iload_1
      13: aload_0
      14: getfield      #12                 // Field inFuture:Z
      17: aload_0
      18: getfield      #9                  // Field counts:[I
      21: invokespecial #26                 // Method "<init>":(IZ[I)V
      24: areturn
      25: aload_0
      26: areturn

  private static void checkCount(float);
    Code:
       0: fload_0
       1: fconst_0
       2: fcmpg
       3: ifge          38
       6: new           #18                 // class java/lang/IllegalArgumentException
       9: dup
      10: new           #19                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #27                 // String count (
      19: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: fload_0
      23: invokevirtual #23                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
      26: ldc           #28                 // String ) cannot be negative
      28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: return
}
