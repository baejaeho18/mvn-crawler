Compiled from "LocaleIDParser.java"
public final class com.ibm.icu.impl.LocaleIDParser {
  private char[] id;

  private int index;

  private java.lang.StringBuilder buffer;

  private boolean canonicalize;

  private boolean hadCountry;

  java.util.Map<java.lang.String, java.lang.String> keywords;

  java.lang.String baseName;

  private static final char KEYWORD_SEPARATOR;

  private static final char HYPHEN;

  private static final char KEYWORD_ASSIGN;

  private static final char COMMA;

  private static final char ITEM_SEPARATOR;

  private static final char DOT;

  private static final char UNDERSCORE;

  private static final char DONE;

  public com.ibm.icu.impl.LocaleIDParser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public com.ibm.icu.impl.LocaleIDParser(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/String.toCharArray:()[C
       9: putfield      #4                  // Field id:[C
      12: aload_0
      13: iconst_0
      14: putfield      #5                  // Field index:I
      17: aload_0
      18: new           #6                  // class java/lang/StringBuilder
      21: dup
      22: aload_0
      23: getfield      #4                  // Field id:[C
      26: arraylength
      27: iconst_5
      28: iadd
      29: invokespecial #7                  // Method java/lang/StringBuilder."<init>":(I)V
      32: putfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      35: aload_0
      36: iload_2
      37: putfield      #9                  // Field canonicalize:Z
      40: return

  private void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field index:I
       5: aload_0
       6: new           #6                  // class java/lang/StringBuilder
       9: dup
      10: aload_0
      11: getfield      #4                  // Field id:[C
      14: arraylength
      15: iconst_5
      16: iadd
      17: invokespecial #7                  // Method java/lang/StringBuilder."<init>":(I)V
      20: putfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      23: return

  private void append(char);
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       4: iload_1
       5: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       8: pop
       9: return

  private void addSeparator();
    Code:
       0: aload_0
       1: bipush        95
       3: invokespecial #12                 // Method append:(C)V
       6: return

  private java.lang.String getString(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       4: iload_1
       5: invokevirtual #13                 // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;
       8: areturn

  private void set(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       4: iload_1
       5: aload_0
       6: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       9: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
      12: invokevirtual #15                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
      15: pop
      16: aload_0
      17: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      20: iload_1
      21: aload_2
      22: invokevirtual #16                 // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: return

  private void append(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       4: aload_1
       5: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       8: pop
       9: return

  private char next();
    Code:
       0: aload_0
       1: getfield      #5                  // Field index:I
       4: aload_0
       5: getfield      #4                  // Field id:[C
       8: arraylength
       9: if_icmpne     25
      12: aload_0
      13: dup
      14: getfield      #5                  // Field index:I
      17: iconst_1
      18: iadd
      19: putfield      #5                  // Field index:I
      22: ldc           #18                 // int 65535
      24: ireturn
      25: aload_0
      26: getfield      #4                  // Field id:[C
      29: aload_0
      30: dup
      31: getfield      #5                  // Field index:I
      34: dup_x1
      35: iconst_1
      36: iadd
      37: putfield      #5                  // Field index:I
      40: caload
      41: ireturn

  private void skipUntilTerminatorOrIDSeparator();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #19                 // Method next:()C
       5: invokespecial #20                 // Method isTerminatorOrIDSeparator:(C)Z
       8: ifne          14
      11: goto          0
      14: aload_0
      15: dup
      16: getfield      #5                  // Field index:I
      19: iconst_1
      20: isub
      21: putfield      #5                  // Field index:I
      24: return

  private boolean atTerminator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field index:I
       4: aload_0
       5: getfield      #4                  // Field id:[C
       8: arraylength
       9: if_icmpge     28
      12: aload_0
      13: aload_0
      14: getfield      #4                  // Field id:[C
      17: aload_0
      18: getfield      #5                  // Field index:I
      21: caload
      22: invokespecial #21                 // Method isTerminator:(C)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private boolean isTerminator(char);
    Code:
       0: iload_1
       1: bipush        64
       3: if_icmpeq     18
       6: iload_1
       7: ldc           #18                 // int 65535
       9: if_icmpeq     18
      12: iload_1
      13: bipush        46
      15: if_icmpne     22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  private boolean isTerminatorOrIDSeparator(char);
    Code:
       0: iload_1
       1: bipush        95
       3: if_icmpeq     20
       6: iload_1
       7: bipush        45
       9: if_icmpeq     20
      12: aload_0
      13: iload_1
      14: invokespecial #21                 // Method isTerminator:(C)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean haveExperimentalLanguagePrefix();
    Code:
       0: aload_0
       1: getfield      #4                  // Field id:[C
       4: arraylength
       5: iconst_2
       6: if_icmple     65
       9: aload_0
      10: getfield      #4                  // Field id:[C
      13: iconst_1
      14: caload
      15: istore_1
      16: iload_1
      17: bipush        45
      19: if_icmpeq     28
      22: iload_1
      23: bipush        95
      25: if_icmpne     65
      28: aload_0
      29: getfield      #4                  // Field id:[C
      32: iconst_0
      33: caload
      34: istore_1
      35: iload_1
      36: bipush        120
      38: if_icmpeq     59
      41: iload_1
      42: bipush        88
      44: if_icmpeq     59
      47: iload_1
      48: bipush        105
      50: if_icmpeq     59
      53: iload_1
      54: bipush        73
      56: if_icmpne     63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn
      65: iconst_0
      66: ireturn

  private boolean haveKeywordAssign();
    Code:
       0: aload_0
       1: getfield      #5                  // Field index:I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #4                  // Field id:[C
      10: arraylength
      11: if_icmpge     33
      14: aload_0
      15: getfield      #4                  // Field id:[C
      18: iload_1
      19: caload
      20: bipush        61
      22: if_icmpne     27
      25: iconst_1
      26: ireturn
      27: iinc          1, 1
      30: goto          5
      33: iconst_0
      34: ireturn

  private int parseLanguage();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       4: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
       7: istore_1
       8: aload_0
       9: invokespecial #22                 // Method haveExperimentalLanguagePrefix:()Z
      12: ifeq          39
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field id:[C
      20: iconst_0
      21: caload
      22: invokestatic  #23                 // Method com/ibm/icu/impl/locale/AsciiUtil.toLower:(C)C
      25: invokespecial #12                 // Method append:(C)V
      28: aload_0
      29: bipush        45
      31: invokespecial #12                 // Method append:(C)V
      34: aload_0
      35: iconst_2
      36: putfield      #5                  // Field index:I
      39: aload_0
      40: aload_0
      41: invokespecial #19                 // Method next:()C
      44: dup
      45: istore_2
      46: invokespecial #20                 // Method isTerminatorOrIDSeparator:(C)Z
      49: ifne          63
      52: aload_0
      53: iload_2
      54: invokestatic  #23                 // Method com/ibm/icu/impl/locale/AsciiUtil.toLower:(C)C
      57: invokespecial #12                 // Method append:(C)V
      60: goto          39
      63: aload_0
      64: dup
      65: getfield      #5                  // Field index:I
      68: iconst_1
      69: isub
      70: putfield      #5                  // Field index:I
      73: aload_0
      74: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      77: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
      80: iload_1
      81: isub
      82: iconst_3
      83: if_icmpne     105
      86: aload_0
      87: iconst_0
      88: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      91: invokestatic  #25                 // Method com/ibm/icu/impl/LocaleIDs.threeToTwoLetterLanguage:(Ljava/lang/String;)Ljava/lang/String;
      94: astore_3
      95: aload_3
      96: ifnull        105
      99: aload_0
     100: iconst_0
     101: aload_3
     102: invokespecial #26                 // Method set:(ILjava/lang/String;)V
     105: iconst_0
     106: ireturn

  private void skipLanguage();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method haveExperimentalLanguagePrefix:()Z
       4: ifeq          12
       7: aload_0
       8: iconst_2
       9: putfield      #5                  // Field index:I
      12: aload_0
      13: invokespecial #27                 // Method skipUntilTerminatorOrIDSeparator:()V
      16: return

  private int parseScript();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method atTerminator:()Z
       4: ifne          136
       7: aload_0
       8: getfield      #5                  // Field index:I
      11: istore_1
      12: aload_0
      13: dup
      14: getfield      #5                  // Field index:I
      17: iconst_1
      18: iadd
      19: putfield      #5                  // Field index:I
      22: aload_0
      23: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      26: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
      29: istore_2
      30: iconst_1
      31: istore        4
      33: aload_0
      34: aload_0
      35: invokespecial #19                 // Method next:()C
      38: dup
      39: istore_3
      40: invokespecial #20                 // Method isTerminatorOrIDSeparator:(C)Z
      43: ifne          87
      46: iload_3
      47: invokestatic  #29                 // Method com/ibm/icu/impl/locale/AsciiUtil.isAlpha:(C)Z
      50: ifeq          87
      53: iload         4
      55: ifeq          76
      58: aload_0
      59: invokespecial #30                 // Method addSeparator:()V
      62: aload_0
      63: iload_3
      64: invokestatic  #31                 // Method com/ibm/icu/impl/locale/AsciiUtil.toUpper:(C)C
      67: invokespecial #12                 // Method append:(C)V
      70: iconst_0
      71: istore        4
      73: goto          33
      76: aload_0
      77: iload_3
      78: invokestatic  #23                 // Method com/ibm/icu/impl/locale/AsciiUtil.toLower:(C)C
      81: invokespecial #12                 // Method append:(C)V
      84: goto          33
      87: aload_0
      88: dup
      89: getfield      #5                  // Field index:I
      92: iconst_1
      93: isub
      94: putfield      #5                  // Field index:I
      97: aload_0
      98: getfield      #5                  // Field index:I
     101: iload_1
     102: isub
     103: iconst_5
     104: if_icmpeq     131
     107: aload_0
     108: iload_1
     109: putfield      #5                  // Field index:I
     112: aload_0
     113: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
     116: iload_2
     117: aload_0
     118: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
     121: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
     124: invokevirtual #15                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
     127: pop
     128: goto          134
     131: iinc          2, 1
     134: iload_2
     135: ireturn
     136: aload_0
     137: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
     140: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
     143: ireturn

  private void skipScript();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method atTerminator:()Z
       4: ifne          70
       7: aload_0
       8: getfield      #5                  // Field index:I
      11: istore_1
      12: aload_0
      13: dup
      14: getfield      #5                  // Field index:I
      17: iconst_1
      18: iadd
      19: putfield      #5                  // Field index:I
      22: aload_0
      23: aload_0
      24: invokespecial #19                 // Method next:()C
      27: dup
      28: istore_2
      29: invokespecial #20                 // Method isTerminatorOrIDSeparator:(C)Z
      32: ifne          45
      35: iload_2
      36: invokestatic  #29                 // Method com/ibm/icu/impl/locale/AsciiUtil.isAlpha:(C)Z
      39: ifeq          45
      42: goto          22
      45: aload_0
      46: dup
      47: getfield      #5                  // Field index:I
      50: iconst_1
      51: isub
      52: putfield      #5                  // Field index:I
      55: aload_0
      56: getfield      #5                  // Field index:I
      59: iload_1
      60: isub
      61: iconst_5
      62: if_icmpeq     70
      65: aload_0
      66: iload_1
      67: putfield      #5                  // Field index:I
      70: return

  private int parseCountry();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method atTerminator:()Z
       4: ifne          180
       7: aload_0
       8: getfield      #5                  // Field index:I
      11: istore_1
      12: aload_0
      13: dup
      14: getfield      #5                  // Field index:I
      17: iconst_1
      18: iadd
      19: putfield      #5                  // Field index:I
      22: aload_0
      23: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      26: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
      29: istore_2
      30: iconst_1
      31: istore        4
      33: aload_0
      34: aload_0
      35: invokespecial #19                 // Method next:()C
      38: dup
      39: istore_3
      40: invokespecial #20                 // Method isTerminatorOrIDSeparator:(C)Z
      43: ifne          77
      46: iload         4
      48: ifeq          66
      51: aload_0
      52: iconst_1
      53: putfield      #32                 // Field hadCountry:Z
      56: aload_0
      57: invokespecial #30                 // Method addSeparator:()V
      60: iinc          2, 1
      63: iconst_0
      64: istore        4
      66: aload_0
      67: iload_3
      68: invokestatic  #31                 // Method com/ibm/icu/impl/locale/AsciiUtil.toUpper:(C)C
      71: invokespecial #12                 // Method append:(C)V
      74: goto          33
      77: aload_0
      78: dup
      79: getfield      #5                  // Field index:I
      82: iconst_1
      83: isub
      84: putfield      #5                  // Field index:I
      87: aload_0
      88: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      91: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
      94: iload_2
      95: isub
      96: istore        5
      98: iload         5
     100: ifne          106
     103: goto          178
     106: iload         5
     108: iconst_2
     109: if_icmplt     118
     112: iload         5
     114: iconst_3
     115: if_icmple     150
     118: aload_0
     119: iload_1
     120: putfield      #5                  // Field index:I
     123: iinc          2, -1
     126: aload_0
     127: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
     130: iload_2
     131: aload_0
     132: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
     135: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
     138: invokevirtual #15                 // Method java/lang/StringBuilder.delete:(II)Ljava/lang/StringBuilder;
     141: pop
     142: aload_0
     143: iconst_0
     144: putfield      #32                 // Field hadCountry:Z
     147: goto          178
     150: iload         5
     152: iconst_3
     153: if_icmpne     178
     156: aload_0
     157: iload_2
     158: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
     161: invokestatic  #33                 // Method com/ibm/icu/impl/LocaleIDs.threeToTwoLetterRegion:(Ljava/lang/String;)Ljava/lang/String;
     164: astore        6
     166: aload         6
     168: ifnull        178
     171: aload_0
     172: iload_2
     173: aload         6
     175: invokespecial #26                 // Method set:(ILjava/lang/String;)V
     178: iload_2
     179: ireturn
     180: aload_0
     181: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
     184: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
     187: ireturn

  private void skipCountry();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method atTerminator:()Z
       4: ifne          76
       7: aload_0
       8: getfield      #4                  // Field id:[C
      11: aload_0
      12: getfield      #5                  // Field index:I
      15: caload
      16: bipush        95
      18: if_icmpeq     35
      21: aload_0
      22: getfield      #4                  // Field id:[C
      25: aload_0
      26: getfield      #5                  // Field index:I
      29: caload
      30: bipush        45
      32: if_icmpne     45
      35: aload_0
      36: dup
      37: getfield      #5                  // Field index:I
      40: iconst_1
      41: iadd
      42: putfield      #5                  // Field index:I
      45: aload_0
      46: getfield      #5                  // Field index:I
      49: istore_1
      50: aload_0
      51: invokespecial #27                 // Method skipUntilTerminatorOrIDSeparator:()V
      54: aload_0
      55: getfield      #5                  // Field index:I
      58: iload_1
      59: isub
      60: istore_2
      61: iload_2
      62: iconst_2
      63: if_icmplt     71
      66: iload_2
      67: iconst_3
      68: if_icmple     76
      71: aload_0
      72: iload_1
      73: putfield      #5                  // Field index:I
      76: return

  private int parseVariant();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       4: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
       7: istore_1
       8: iconst_1
       9: istore_2
      10: iconst_1
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iconst_1
      16: istore        6
      18: aload_0
      19: invokespecial #19                 // Method next:()C
      22: dup
      23: istore        5
      25: ldc           #18                 // int 65535
      27: if_icmpeq     184
      30: iload         5
      32: bipush        46
      34: if_icmpne     45
      37: iconst_0
      38: istore_2
      39: iconst_1
      40: istore        4
      42: goto          18
      45: iload         5
      47: bipush        64
      49: if_icmpne     72
      52: aload_0
      53: invokespecial #34                 // Method haveKeywordAssign:()Z
      56: ifeq          62
      59: goto          184
      62: iconst_0
      63: istore        4
      65: iconst_0
      66: istore_2
      67: iconst_1
      68: istore_3
      69: goto          18
      72: iload_2
      73: ifeq          105
      76: iconst_0
      77: istore_2
      78: iload         5
      80: bipush        95
      82: if_icmpeq     18
      85: iload         5
      87: bipush        45
      89: if_icmpeq     18
      92: aload_0
      93: dup
      94: getfield      #5                  // Field index:I
      97: iconst_1
      98: isub
      99: putfield      #5                  // Field index:I
     102: goto          18
     105: iload         4
     107: ifne          18
     110: iload_3
     111: ifeq          150
     114: iconst_0
     115: istore_3
     116: iload         6
     118: ifeq          135
     121: aload_0
     122: getfield      #32                 // Field hadCountry:Z
     125: ifne          135
     128: aload_0
     129: invokespecial #30                 // Method addSeparator:()V
     132: iinc          1, 1
     135: aload_0
     136: invokespecial #30                 // Method addSeparator:()V
     139: iload         6
     141: ifeq          150
     144: iinc          1, 1
     147: iconst_0
     148: istore        6
     150: iload         5
     152: invokestatic  #31                 // Method com/ibm/icu/impl/locale/AsciiUtil.toUpper:(C)C
     155: istore        5
     157: iload         5
     159: bipush        45
     161: if_icmpeq     171
     164: iload         5
     166: bipush        44
     168: if_icmpne     175
     171: bipush        95
     173: istore        5
     175: aload_0
     176: iload         5
     178: invokespecial #12                 // Method append:(C)V
     181: goto          18
     184: aload_0
     185: dup
     186: getfield      #5                  // Field index:I
     189: iconst_1
     190: isub
     191: putfield      #5                  // Field index:I
     194: iload_1
     195: ireturn

  public java.lang.String getLanguage();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method reset:()V
       4: aload_0
       5: aload_0
       6: invokespecial #36                 // Method parseLanguage:()I
       9: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      12: areturn

  public java.lang.String getScript();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method reset:()V
       4: aload_0
       5: invokespecial #37                 // Method skipLanguage:()V
       8: aload_0
       9: aload_0
      10: invokespecial #38                 // Method parseScript:()I
      13: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      16: areturn

  public java.lang.String getCountry();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method reset:()V
       4: aload_0
       5: invokespecial #37                 // Method skipLanguage:()V
       8: aload_0
       9: invokespecial #39                 // Method skipScript:()V
      12: aload_0
      13: aload_0
      14: invokespecial #40                 // Method parseCountry:()I
      17: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      20: areturn

  public java.lang.String getVariant();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method reset:()V
       4: aload_0
       5: invokespecial #37                 // Method skipLanguage:()V
       8: aload_0
       9: invokespecial #39                 // Method skipScript:()V
      12: aload_0
      13: invokespecial #41                 // Method skipCountry:()V
      16: aload_0
      17: aload_0
      18: invokespecial #42                 // Method parseVariant:()I
      21: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      24: areturn

  public java.lang.String[] getLanguageScriptCountryVariant();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method reset:()V
       4: iconst_4
       5: anewarray     #43                 // class java/lang/String
       8: dup
       9: iconst_0
      10: aload_0
      11: aload_0
      12: invokespecial #36                 // Method parseLanguage:()I
      15: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      18: aastore
      19: dup
      20: iconst_1
      21: aload_0
      22: aload_0
      23: invokespecial #38                 // Method parseScript:()I
      26: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_2
      32: aload_0
      33: aload_0
      34: invokespecial #40                 // Method parseCountry:()I
      37: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      40: aastore
      41: dup
      42: iconst_3
      43: aload_0
      44: aload_0
      45: invokespecial #42                 // Method parseVariant:()I
      48: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      51: aastore
      52: areturn

  public void setBaseName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field baseName:Ljava/lang/String;
       5: return

  public void parseBaseName();
    Code:
       0: aload_0
       1: getfield      #44                 // Field baseName:Ljava/lang/String;
       4: ifnull        19
       7: aload_0
       8: iconst_0
       9: aload_0
      10: getfield      #44                 // Field baseName:Ljava/lang/String;
      13: invokespecial #26                 // Method set:(ILjava/lang/String;)V
      16: goto          81
      19: aload_0
      20: invokespecial #35                 // Method reset:()V
      23: aload_0
      24: invokespecial #36                 // Method parseLanguage:()I
      27: pop
      28: aload_0
      29: invokespecial #38                 // Method parseScript:()I
      32: pop
      33: aload_0
      34: invokespecial #40                 // Method parseCountry:()I
      37: pop
      38: aload_0
      39: invokespecial #42                 // Method parseVariant:()I
      42: pop
      43: aload_0
      44: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      47: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
      50: istore_1
      51: iload_1
      52: ifle          81
      55: aload_0
      56: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      59: iload_1
      60: iconst_1
      61: isub
      62: invokevirtual #45                 // Method java/lang/StringBuilder.charAt:(I)C
      65: bipush        95
      67: if_icmpne     81
      70: aload_0
      71: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
      74: iload_1
      75: iconst_1
      76: isub
      77: invokevirtual #46                 // Method java/lang/StringBuilder.deleteCharAt:(I)Ljava/lang/StringBuilder;
      80: pop
      81: return

  public java.lang.String getBaseName();
    Code:
       0: aload_0
       1: getfield      #44                 // Field baseName:Ljava/lang/String;
       4: ifnull        12
       7: aload_0
       8: getfield      #44                 // Field baseName:Ljava/lang/String;
      11: areturn
      12: aload_0
      13: invokevirtual #47                 // Method parseBaseName:()V
      16: aload_0
      17: iconst_0
      18: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      21: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method parseBaseName:()V
       4: aload_0
       5: invokespecial #48                 // Method parseKeywords:()I
       8: pop
       9: aload_0
      10: iconst_0
      11: invokespecial #24                 // Method getString:(I)Ljava/lang/String;
      14: areturn

  private boolean setToKeywordStart();
    Code:
       0: aload_0
       1: getfield      #5                  // Field index:I
       4: istore_1
       5: iload_1
       6: aload_0
       7: getfield      #4                  // Field id:[C
      10: arraylength
      11: if_icmpge     98
      14: aload_0
      15: getfield      #4                  // Field id:[C
      18: iload_1
      19: caload
      20: bipush        64
      22: if_icmpne     92
      25: aload_0
      26: getfield      #9                  // Field canonicalize:Z
      29: ifeq          73
      32: iinc          1, 1
      35: iload_1
      36: istore_2
      37: iload_2
      38: aload_0
      39: getfield      #4                  // Field id:[C
      42: arraylength
      43: if_icmpge     70
      46: aload_0
      47: getfield      #4                  // Field id:[C
      50: iload_2
      51: caload
      52: bipush        61
      54: if_icmpne     64
      57: aload_0
      58: iload_1
      59: putfield      #5                  // Field index:I
      62: iconst_1
      63: ireturn
      64: iinc          2, 1
      67: goto          37
      70: goto          98
      73: iinc          1, 1
      76: iload_1
      77: aload_0
      78: getfield      #4                  // Field id:[C
      81: arraylength
      82: if_icmpge     98
      85: aload_0
      86: iload_1
      87: putfield      #5                  // Field index:I
      90: iconst_1
      91: ireturn
      92: iinc          1, 1
      95: goto          5
      98: iconst_0
      99: ireturn

  private static boolean isDoneOrKeywordAssign(char);
    Code:
       0: iload_0
       1: ldc           #18                 // int 65535
       3: if_icmpeq     12
       6: iload_0
       7: bipush        61
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static boolean isDoneOrItemSeparator(char);
    Code:
       0: iload_0
       1: ldc           #18                 // int 65535
       3: if_icmpeq     12
       6: iload_0
       7: bipush        59
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private java.lang.String getKeyword();
    Code:
       0: aload_0
       1: getfield      #5                  // Field index:I
       4: istore_1
       5: aload_0
       6: invokespecial #19                 // Method next:()C
       9: invokestatic  #49                 // Method isDoneOrKeywordAssign:(C)Z
      12: ifne          18
      15: goto          5
      18: aload_0
      19: dup
      20: getfield      #5                  // Field index:I
      23: iconst_1
      24: isub
      25: putfield      #5                  // Field index:I
      28: new           #43                 // class java/lang/String
      31: dup
      32: aload_0
      33: getfield      #4                  // Field id:[C
      36: iload_1
      37: aload_0
      38: getfield      #5                  // Field index:I
      41: iload_1
      42: isub
      43: invokespecial #50                 // Method java/lang/String."<init>":([CII)V
      46: invokevirtual #51                 // Method java/lang/String.trim:()Ljava/lang/String;
      49: invokestatic  #52                 // Method com/ibm/icu/impl/locale/AsciiUtil.toLowerString:(Ljava/lang/String;)Ljava/lang/String;
      52: areturn

  private java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field index:I
       4: istore_1
       5: aload_0
       6: invokespecial #19                 // Method next:()C
       9: invokestatic  #53                 // Method isDoneOrItemSeparator:(C)Z
      12: ifne          18
      15: goto          5
      18: aload_0
      19: dup
      20: getfield      #5                  // Field index:I
      23: iconst_1
      24: isub
      25: putfield      #5                  // Field index:I
      28: new           #43                 // class java/lang/String
      31: dup
      32: aload_0
      33: getfield      #4                  // Field id:[C
      36: iload_1
      37: aload_0
      38: getfield      #5                  // Field index:I
      41: iload_1
      42: isub
      43: invokespecial #50                 // Method java/lang/String."<init>":([CII)V
      46: invokevirtual #51                 // Method java/lang/String.trim:()Ljava/lang/String;
      49: areturn

  private java.util.Comparator<java.lang.String> getKeyComparator();
    Code:
       0: new           #54                 // class com/ibm/icu/impl/LocaleIDParser$1
       3: dup
       4: aload_0
       5: invokespecial #55                 // Method com/ibm/icu/impl/LocaleIDParser$1."<init>":(Lcom/ibm/icu/impl/LocaleIDParser;)V
       8: astore_1
       9: aload_1
      10: areturn

  public java.util.Map<java.lang.String, java.lang.String> getKeywordMap();
    Code:
       0: aload_0
       1: getfield      #56                 // Field keywords:Ljava/util/Map;
       4: ifnonnull     130
       7: aconst_null
       8: astore_1
       9: aload_0
      10: invokespecial #57                 // Method setToKeywordStart:()Z
      13: ifeq          115
      16: aload_0
      17: invokespecial #58                 // Method getKeyword:()Ljava/lang/String;
      20: astore_2
      21: aload_2
      22: invokevirtual #59                 // Method java/lang/String.length:()I
      25: ifne          31
      28: goto          115
      31: aload_0
      32: invokespecial #19                 // Method next:()C
      35: istore_3
      36: iload_3
      37: bipush        61
      39: if_icmpeq     51
      42: iload_3
      43: ldc           #18                 // int 65535
      45: if_icmpne     106
      48: goto          115
      51: aload_0
      52: invokespecial #60                 // Method getValue:()Ljava/lang/String;
      55: astore        4
      57: aload         4
      59: invokevirtual #59                 // Method java/lang/String.length:()I
      62: ifne          68
      65: goto          106
      68: aload_1
      69: ifnonnull     87
      72: new           #61                 // class java/util/TreeMap
      75: dup
      76: aload_0
      77: invokespecial #62                 // Method getKeyComparator:()Ljava/util/Comparator;
      80: invokespecial #63                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      83: astore_1
      84: goto          98
      87: aload_1
      88: aload_2
      89: invokevirtual #64                 // Method java/util/TreeMap.containsKey:(Ljava/lang/Object;)Z
      92: ifeq          98
      95: goto          106
      98: aload_1
      99: aload_2
     100: aload         4
     102: invokevirtual #65                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: aload_0
     107: invokespecial #19                 // Method next:()C
     110: bipush        59
     112: if_icmpeq     16
     115: aload_0
     116: aload_1
     117: ifnull        124
     120: aload_1
     121: goto          127
     124: invokestatic  #66                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     127: putfield      #56                 // Field keywords:Ljava/util/Map;
     130: aload_0
     131: getfield      #56                 // Field keywords:Ljava/util/Map;
     134: areturn

  private int parseKeywords();
    Code:
       0: aload_0
       1: getfield      #8                  // Field buffer:Ljava/lang/StringBuilder;
       4: invokevirtual #14                 // Method java/lang/StringBuilder.length:()I
       7: istore_1
       8: aload_0
       9: invokevirtual #67                 // Method getKeywordMap:()Ljava/util/Map;
      12: astore_2
      13: aload_2
      14: invokeinterface #68,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      19: ifne          120
      22: iconst_1
      23: istore_3
      24: aload_2
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      30: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          113
      47: aload         4
      49: invokeinterface #72,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #73                 // class java/util/Map$Entry
      57: astore        5
      59: aload_0
      60: iload_3
      61: ifeq          69
      64: bipush        64
      66: goto          71
      69: bipush        59
      71: invokespecial #12                 // Method append:(C)V
      74: iconst_0
      75: istore_3
      76: aload_0
      77: aload         5
      79: invokeinterface #74,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      84: checkcast     #43                 // class java/lang/String
      87: invokespecial #75                 // Method append:(Ljava/lang/String;)V
      90: aload_0
      91: bipush        61
      93: invokespecial #12                 // Method append:(C)V
      96: aload_0
      97: aload         5
      99: invokeinterface #76,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     104: checkcast     #43                 // class java/lang/String
     107: invokespecial #75                 // Method append:(Ljava/lang/String;)V
     110: goto          37
     113: iload_3
     114: ifne          120
     117: iinc          1, 1
     120: iload_1
     121: ireturn

  public java.util.Iterator<java.lang.String> getKeywords();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getKeywordMap:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: invokeinterface #68,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      11: ifeq          18
      14: aconst_null
      15: goto          29
      18: aload_1
      19: invokeinterface #77,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      24: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: areturn

  public java.lang.String getKeywordValue(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getKeywordMap:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: invokeinterface #68,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      11: ifeq          18
      14: aconst_null
      15: goto          34
      18: aload_2
      19: aload_1
      20: invokevirtual #51                 // Method java/lang/String.trim:()Ljava/lang/String;
      23: invokestatic  #52                 // Method com/ibm/icu/impl/locale/AsciiUtil.toLowerString:(Ljava/lang/String;)Ljava/lang/String;
      26: invokeinterface #78,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #43                 // class java/lang/String
      34: areturn

  public void defaultKeywordValue(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #79                 // Method setKeywordValue:(Ljava/lang/String;Ljava/lang/String;Z)V
       7: return

  public void setKeywordValue(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #79                 // Method setKeywordValue:(Ljava/lang/String;Ljava/lang/String;Z)V
       7: return

  private void setKeywordValue(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_1
       1: ifnonnull     18
       4: iload_3
       5: ifeq          180
       8: aload_0
       9: invokestatic  #66                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      12: putfield      #56                 // Field keywords:Ljava/util/Map;
      15: goto          180
      18: aload_1
      19: invokevirtual #51                 // Method java/lang/String.trim:()Ljava/lang/String;
      22: invokestatic  #52                 // Method com/ibm/icu/impl/locale/AsciiUtil.toLowerString:(Ljava/lang/String;)Ljava/lang/String;
      25: astore_1
      26: aload_1
      27: invokevirtual #59                 // Method java/lang/String.length:()I
      30: ifne          43
      33: new           #80                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #81                 // String keyword must not be empty
      39: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_2
      44: ifnull        69
      47: aload_2
      48: invokevirtual #51                 // Method java/lang/String.trim:()Ljava/lang/String;
      51: astore_2
      52: aload_2
      53: invokevirtual #59                 // Method java/lang/String.length:()I
      56: ifne          69
      59: new           #80                 // class java/lang/IllegalArgumentException
      62: dup
      63: ldc           #83                 // String value must not be empty
      65: invokespecial #82                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: aload_0
      70: invokevirtual #67                 // Method getKeywordMap:()Ljava/util/Map;
      73: astore        4
      75: aload         4
      77: invokeinterface #68,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      82: ifeq          122
      85: aload_2
      86: ifnull        180
      89: aload_0
      90: new           #61                 // class java/util/TreeMap
      93: dup
      94: aload_0
      95: invokespecial #62                 // Method getKeyComparator:()Ljava/util/Comparator;
      98: invokespecial #63                 // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
     101: putfield      #56                 // Field keywords:Ljava/util/Map;
     104: aload_0
     105: getfield      #56                 // Field keywords:Ljava/util/Map;
     108: aload_1
     109: aload_2
     110: invokevirtual #51                 // Method java/lang/String.trim:()Ljava/lang/String;
     113: invokeinterface #84,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     118: pop
     119: goto          180
     122: iload_3
     123: ifne          137
     126: aload         4
     128: aload_1
     129: invokeinterface #85,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     134: ifne          180
     137: aload_2
     138: ifnull        154
     141: aload         4
     143: aload_1
     144: aload_2
     145: invokeinterface #84,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: goto          180
     154: aload         4
     156: aload_1
     157: invokeinterface #86,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     162: pop
     163: aload         4
     165: invokeinterface #68,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     170: ifeq          180
     173: aload_0
     174: invokestatic  #66                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     177: putfield      #56                 // Field keywords:Ljava/util/Map;
     180: return
}
