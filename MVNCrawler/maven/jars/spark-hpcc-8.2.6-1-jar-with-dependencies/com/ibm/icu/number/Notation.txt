Compiled from "Notation.java"
public class com.ibm.icu.number.Notation {
  private static final com.ibm.icu.number.ScientificNotation SCIENTIFIC;

  private static final com.ibm.icu.number.ScientificNotation ENGINEERING;

  private static final com.ibm.icu.number.CompactNotation COMPACT_SHORT;

  private static final com.ibm.icu.number.CompactNotation COMPACT_LONG;

  private static final com.ibm.icu.number.SimpleNotation SIMPLE;

  com.ibm.icu.number.Notation();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static com.ibm.icu.number.ScientificNotation scientific();
    Code:
       0: getstatic     #2                  // Field SCIENTIFIC:Lcom/ibm/icu/number/ScientificNotation;
       3: areturn

  public static com.ibm.icu.number.ScientificNotation engineering();
    Code:
       0: getstatic     #3                  // Field ENGINEERING:Lcom/ibm/icu/number/ScientificNotation;
       3: areturn

  public static com.ibm.icu.number.CompactNotation compactShort();
    Code:
       0: getstatic     #4                  // Field COMPACT_SHORT:Lcom/ibm/icu/number/CompactNotation;
       3: areturn

  public static com.ibm.icu.number.CompactNotation compactLong();
    Code:
       0: getstatic     #5                  // Field COMPACT_LONG:Lcom/ibm/icu/number/CompactNotation;
       3: areturn

  public static com.ibm.icu.number.SimpleNotation simple();
    Code:
       0: getstatic     #6                  // Field SIMPLE:Lcom/ibm/icu/number/SimpleNotation;
       3: areturn

  static {};
    Code:
       0: new           #7                  // class com/ibm/icu/number/ScientificNotation
       3: dup
       4: iconst_1
       5: iconst_0
       6: iconst_1
       7: getstatic     #8                  // Field com/ibm/icu/number/NumberFormatter$SignDisplay.AUTO:Lcom/ibm/icu/number/NumberFormatter$SignDisplay;
      10: invokespecial #9                  // Method com/ibm/icu/number/ScientificNotation."<init>":(IZILcom/ibm/icu/number/NumberFormatter$SignDisplay;)V
      13: putstatic     #2                  // Field SCIENTIFIC:Lcom/ibm/icu/number/ScientificNotation;
      16: new           #7                  // class com/ibm/icu/number/ScientificNotation
      19: dup
      20: iconst_3
      21: iconst_0
      22: iconst_1
      23: getstatic     #8                  // Field com/ibm/icu/number/NumberFormatter$SignDisplay.AUTO:Lcom/ibm/icu/number/NumberFormatter$SignDisplay;
      26: invokespecial #9                  // Method com/ibm/icu/number/ScientificNotation."<init>":(IZILcom/ibm/icu/number/NumberFormatter$SignDisplay;)V
      29: putstatic     #3                  // Field ENGINEERING:Lcom/ibm/icu/number/ScientificNotation;
      32: new           #10                 // class com/ibm/icu/number/CompactNotation
      35: dup
      36: getstatic     #11                 // Field com/ibm/icu/text/CompactDecimalFormat$CompactStyle.SHORT:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      39: invokespecial #12                 // Method com/ibm/icu/number/CompactNotation."<init>":(Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;)V
      42: putstatic     #4                  // Field COMPACT_SHORT:Lcom/ibm/icu/number/CompactNotation;
      45: new           #10                 // class com/ibm/icu/number/CompactNotation
      48: dup
      49: getstatic     #13                 // Field com/ibm/icu/text/CompactDecimalFormat$CompactStyle.LONG:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      52: invokespecial #12                 // Method com/ibm/icu/number/CompactNotation."<init>":(Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;)V
      55: putstatic     #5                  // Field COMPACT_LONG:Lcom/ibm/icu/number/CompactNotation;
      58: new           #14                 // class com/ibm/icu/number/SimpleNotation
      61: dup
      62: invokespecial #15                 // Method com/ibm/icu/number/SimpleNotation."<init>":()V
      65: putstatic     #6                  // Field SIMPLE:Lcom/ibm/icu/number/SimpleNotation;
      68: return
}
