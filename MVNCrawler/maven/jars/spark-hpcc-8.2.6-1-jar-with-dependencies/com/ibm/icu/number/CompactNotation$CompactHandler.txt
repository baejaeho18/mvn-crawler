Compiled from "CompactNotation.java"
class com.ibm.icu.number.CompactNotation$CompactHandler implements com.ibm.icu.impl.number.MicroPropsGenerator {
  final com.ibm.icu.text.PluralRules rules;

  final com.ibm.icu.impl.number.MicroPropsGenerator parent;

  final java.util.Map<java.lang.String, com.ibm.icu.impl.number.MutablePatternModifier$ImmutablePatternModifier> precomputedMods;

  final com.ibm.icu.impl.number.CompactData data;

  static final boolean $assertionsDisabled;

  private com.ibm.icu.number.CompactNotation$CompactHandler(com.ibm.icu.number.CompactNotation, com.ibm.icu.util.ULocale, java.lang.String, com.ibm.icu.impl.number.CompactData$CompactType, com.ibm.icu.text.PluralRules, com.ibm.icu.impl.number.MutablePatternModifier, com.ibm.icu.impl.number.MicroPropsGenerator);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload         5
       7: putfield      #3                  // Field rules:Lcom/ibm/icu/text/PluralRules;
      10: aload_0
      11: aload         7
      13: putfield      #4                  // Field parent:Lcom/ibm/icu/impl/number/MicroPropsGenerator;
      16: aload_0
      17: new           #5                  // class com/ibm/icu/impl/number/CompactData
      20: dup
      21: invokespecial #6                  // Method com/ibm/icu/impl/number/CompactData."<init>":()V
      24: putfield      #7                  // Field data:Lcom/ibm/icu/impl/number/CompactData;
      27: aload_1
      28: getfield      #8                  // Field com/ibm/icu/number/CompactNotation.compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      31: ifnull        52
      34: aload_0
      35: getfield      #7                  // Field data:Lcom/ibm/icu/impl/number/CompactData;
      38: aload_2
      39: aload_3
      40: aload_1
      41: getfield      #8                  // Field com/ibm/icu/number/CompactNotation.compactStyle:Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;
      44: aload         4
      46: invokevirtual #9                  // Method com/ibm/icu/impl/number/CompactData.populate:(Lcom/ibm/icu/util/ULocale;Ljava/lang/String;Lcom/ibm/icu/text/CompactDecimalFormat$CompactStyle;Lcom/ibm/icu/impl/number/CompactData$CompactType;)V
      49: goto          63
      52: aload_0
      53: getfield      #7                  // Field data:Lcom/ibm/icu/impl/number/CompactData;
      56: aload_1
      57: getfield      #10                 // Field com/ibm/icu/number/CompactNotation.compactCustomData:Ljava/util/Map;
      60: invokevirtual #11                 // Method com/ibm/icu/impl/number/CompactData.populate:(Ljava/util/Map;)V
      63: aload         6
      65: ifnull        88
      68: aload_0
      69: new           #12                 // class java/util/HashMap
      72: dup
      73: invokespecial #13                 // Method java/util/HashMap."<init>":()V
      76: putfield      #14                 // Field precomputedMods:Ljava/util/Map;
      79: aload_0
      80: aload         6
      82: invokespecial #15                 // Method precomputeAllModifiers:(Lcom/ibm/icu/impl/number/MutablePatternModifier;)V
      85: goto          93
      88: aload_0
      89: aconst_null
      90: putfield      #14                 // Field precomputedMods:Ljava/util/Map;
      93: return

  private void precomputeAllModifiers(com.ibm.icu.impl.number.MutablePatternModifier);
    Code:
       0: new           #16                 // class java/util/HashSet
       3: dup
       4: invokespecial #17                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #7                  // Field data:Lcom/ibm/icu/impl/number/CompactData;
      12: aload_2
      13: invokevirtual #18                 // Method com/ibm/icu/impl/number/CompactData.getUniquePatterns:(Ljava/util/Set;)V
      16: aload_2
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          75
      32: aload_3
      33: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #22                 // class java/lang/String
      41: astore        4
      43: aload         4
      45: invokestatic  #23                 // Method com/ibm/icu/impl/number/PatternStringParser.parseToPatternInfo:(Ljava/lang/String;)Lcom/ibm/icu/impl/number/PatternStringParser$ParsedPatternInfo;
      48: astore        5
      50: aload_1
      51: aload         5
      53: invokevirtual #24                 // Method com/ibm/icu/impl/number/MutablePatternModifier.setPatternInfo:(Lcom/ibm/icu/impl/number/AffixPatternProvider;)V
      56: aload_0
      57: getfield      #14                 // Field precomputedMods:Ljava/util/Map;
      60: aload         4
      62: aload_1
      63: invokevirtual #25                 // Method com/ibm/icu/impl/number/MutablePatternModifier.createImmutable:()Lcom/ibm/icu/impl/number/MutablePatternModifier$ImmutablePatternModifier;
      66: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: goto          23
      75: return

  public com.ibm.icu.impl.number.MicroProps processQuantity(com.ibm.icu.impl.number.DecimalQuantity);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parent:Lcom/ibm/icu/impl/number/MicroPropsGenerator;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod com/ibm/icu/impl/number/MicroPropsGenerator.processQuantity:(Lcom/ibm/icu/impl/number/DecimalQuantity;)Lcom/ibm/icu/impl/number/MicroProps;
      10: astore_2
      11: getstatic     #28                 // Field $assertionsDisabled:Z
      14: ifne          32
      17: aload_2
      18: getfield      #29                 // Field com/ibm/icu/impl/number/MicroProps.rounding:Lcom/ibm/icu/number/Rounder;
      21: ifnonnull     32
      24: new           #30                 // class java/lang/AssertionError
      27: dup
      28: invokespecial #31                 // Method java/lang/AssertionError."<init>":()V
      31: athrow
      32: aload_1
      33: invokeinterface #32,  1           // InterfaceMethod com/ibm/icu/impl/number/DecimalQuantity.isZero:()Z
      38: ifeq          54
      41: iconst_0
      42: istore_3
      43: aload_2
      44: getfield      #29                 // Field com/ibm/icu/impl/number/MicroProps.rounding:Lcom/ibm/icu/number/Rounder;
      47: aload_1
      48: invokevirtual #33                 // Method com/ibm/icu/number/Rounder.apply:(Lcom/ibm/icu/impl/number/DecimalQuantity;)V
      51: goto          93
      54: aload_2
      55: getfield      #29                 // Field com/ibm/icu/impl/number/MicroProps.rounding:Lcom/ibm/icu/number/Rounder;
      58: aload_1
      59: aload_0
      60: getfield      #7                  // Field data:Lcom/ibm/icu/impl/number/CompactData;
      63: invokevirtual #34                 // Method com/ibm/icu/number/Rounder.chooseMultiplierAndApply:(Lcom/ibm/icu/impl/number/DecimalQuantity;Lcom/ibm/icu/impl/number/MultiplierProducer;)I
      66: istore        4
      68: aload_1
      69: invokeinterface #32,  1           // InterfaceMethod com/ibm/icu/impl/number/DecimalQuantity.isZero:()Z
      74: ifeq          81
      77: iconst_0
      78: goto          87
      81: aload_1
      82: invokeinterface #35,  1           // InterfaceMethod com/ibm/icu/impl/number/DecimalQuantity.getMagnitude:()I
      87: istore_3
      88: iload_3
      89: iload         4
      91: isub
      92: istore_3
      93: aload_1
      94: aload_0
      95: getfield      #3                  // Field rules:Lcom/ibm/icu/text/PluralRules;
      98: invokeinterface #36,  2           // InterfaceMethod com/ibm/icu/impl/number/DecimalQuantity.getStandardPlural:(Lcom/ibm/icu/text/PluralRules;)Lcom/ibm/icu/impl/StandardPlural;
     103: astore        4
     105: aload_0
     106: getfield      #7                  // Field data:Lcom/ibm/icu/impl/number/CompactData;
     109: iload_3
     110: aload         4
     112: invokevirtual #37                 // Method com/ibm/icu/impl/number/CompactData.getPattern:(ILcom/ibm/icu/impl/StandardPlural;)Ljava/lang/String;
     115: astore        5
     117: aload         5
     119: ifnonnull     125
     122: goto          201
     125: aload_0
     126: getfield      #14                 // Field precomputedMods:Ljava/util/Map;
     129: ifnull        158
     132: aload_0
     133: getfield      #14                 // Field precomputedMods:Ljava/util/Map;
     136: aload         5
     138: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     143: checkcast     #39                 // class com/ibm/icu/impl/number/MutablePatternModifier$ImmutablePatternModifier
     146: astore        6
     148: aload         6
     150: aload_2
     151: aload_1
     152: invokevirtual #40                 // Method com/ibm/icu/impl/number/MutablePatternModifier$ImmutablePatternModifier.applyToMicros:(Lcom/ibm/icu/impl/number/MicroProps;Lcom/ibm/icu/impl/number/DecimalQuantity;)V
     155: goto          201
     158: getstatic     #28                 // Field $assertionsDisabled:Z
     161: ifne          182
     164: aload_2
     165: getfield      #41                 // Field com/ibm/icu/impl/number/MicroProps.modMiddle:Lcom/ibm/icu/impl/number/Modifier;
     168: instanceof    #42                 // class com/ibm/icu/impl/number/MutablePatternModifier
     171: ifne          182
     174: new           #30                 // class java/lang/AssertionError
     177: dup
     178: invokespecial #31                 // Method java/lang/AssertionError."<init>":()V
     181: athrow
     182: aload         5
     184: invokestatic  #23                 // Method com/ibm/icu/impl/number/PatternStringParser.parseToPatternInfo:(Ljava/lang/String;)Lcom/ibm/icu/impl/number/PatternStringParser$ParsedPatternInfo;
     187: astore        6
     189: aload_2
     190: getfield      #41                 // Field com/ibm/icu/impl/number/MicroProps.modMiddle:Lcom/ibm/icu/impl/number/Modifier;
     193: checkcast     #42                 // class com/ibm/icu/impl/number/MutablePatternModifier
     196: aload         6
     198: invokevirtual #24                 // Method com/ibm/icu/impl/number/MutablePatternModifier.setPatternInfo:(Lcom/ibm/icu/impl/number/AffixPatternProvider;)V
     201: aload_2
     202: invokestatic  #43                 // Method com/ibm/icu/number/Rounder.constructPassThrough:()Lcom/ibm/icu/number/Rounder;
     205: putfield      #29                 // Field com/ibm/icu/impl/number/MicroProps.rounding:Lcom/ibm/icu/number/Rounder;
     208: aload_2
     209: areturn

  com.ibm.icu.number.CompactNotation$CompactHandler(com.ibm.icu.number.CompactNotation, com.ibm.icu.util.ULocale, java.lang.String, com.ibm.icu.impl.number.CompactData$CompactType, com.ibm.icu.text.PluralRules, com.ibm.icu.impl.number.MutablePatternModifier, com.ibm.icu.impl.number.MicroPropsGenerator, com.ibm.icu.number.CompactNotation$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #1                  // Method "<init>":(Lcom/ibm/icu/number/CompactNotation;Lcom/ibm/icu/util/ULocale;Ljava/lang/String;Lcom/ibm/icu/impl/number/CompactData$CompactType;Lcom/ibm/icu/text/PluralRules;Lcom/ibm/icu/impl/number/MutablePatternModifier;Lcom/ibm/icu/impl/number/MicroPropsGenerator;)V
      15: return

  static {};
    Code:
       0: ldc           #44                 // class com/ibm/icu/number/CompactNotation
       2: invokevirtual #45                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #28                 // Field $assertionsDisabled:Z
      16: return
}
