Compiled from "UScriptRun.java"
public final class com.ibm.icu.lang.UScriptRun {
  private char[] emptyCharArray;

  private char[] text;

  private int textIndex;

  private int textStart;

  private int textLimit;

  private int scriptStart;

  private int scriptLimit;

  private int scriptCode;

  private static int PAREN_STACK_DEPTH;

  private static com.ibm.icu.lang.UScriptRun$ParenStackEntry[] parenStack;

  private int parenSP;

  private int pushCount;

  private int fixupCount;

  private static int[] pairedChars;

  private static int pairedCharPower;

  private static int pairedCharExtra;

  public com.ibm.icu.lang.UScriptRun();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: newarray       char
       8: putfield      #2                  // Field emptyCharArray:[C
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field parenSP:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field pushCount:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field fixupCount:I
      26: aconst_null
      27: astore_1
      28: aload_0
      29: aload_1
      30: iconst_0
      31: iconst_0
      32: invokevirtual #6                  // Method reset:([CII)V
      35: return

  public com.ibm.icu.lang.UScriptRun(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: newarray       char
       8: putfield      #2                  // Field emptyCharArray:[C
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field parenSP:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field pushCount:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field fixupCount:I
      26: aload_0
      27: aload_1
      28: invokevirtual #7                  // Method reset:(Ljava/lang/String;)V
      31: return

  public com.ibm.icu.lang.UScriptRun(java.lang.String, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: newarray       char
       8: putfield      #2                  // Field emptyCharArray:[C
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field parenSP:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field pushCount:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field fixupCount:I
      26: aload_0
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokevirtual #8                  // Method reset:(Ljava/lang/String;II)V
      33: return

  public com.ibm.icu.lang.UScriptRun(char[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: newarray       char
       8: putfield      #2                  // Field emptyCharArray:[C
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field parenSP:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field pushCount:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field fixupCount:I
      26: aload_0
      27: aload_1
      28: invokevirtual #9                  // Method reset:([C)V
      31: return

  public com.ibm.icu.lang.UScriptRun(char[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: newarray       char
       8: putfield      #2                  // Field emptyCharArray:[C
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field parenSP:I
      16: aload_0
      17: iconst_0
      18: putfield      #4                  // Field pushCount:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field fixupCount:I
      26: aload_0
      27: aload_1
      28: iload_2
      29: iload_3
      30: invokevirtual #6                  // Method reset:([CII)V
      33: return

  public final void reset();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method stackIsNotEmpty:()Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #11                 // Method pop:()V
      11: goto          0
      14: aload_0
      15: aload_0
      16: getfield      #12                 // Field textStart:I
      19: putfield      #13                 // Field scriptStart:I
      22: aload_0
      23: aload_0
      24: getfield      #12                 // Field textStart:I
      27: putfield      #14                 // Field scriptLimit:I
      30: aload_0
      31: iconst_m1
      32: putfield      #16                 // Field scriptCode:I
      35: aload_0
      36: iconst_m1
      37: putfield      #3                  // Field parenSP:I
      40: aload_0
      41: iconst_0
      42: putfield      #4                  // Field pushCount:I
      45: aload_0
      46: iconst_0
      47: putfield      #5                  // Field fixupCount:I
      50: aload_0
      51: aload_0
      52: getfield      #12                 // Field textStart:I
      55: putfield      #17                 // Field textIndex:I
      58: return

  public final void reset(int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #18                 // Field text:[C
       6: ifnull        15
       9: aload_0
      10: getfield      #18                 // Field text:[C
      13: arraylength
      14: istore_3
      15: iload_1
      16: iflt          30
      19: iload_2
      20: iflt          30
      23: iload_1
      24: iload_3
      25: iload_2
      26: isub
      27: if_icmple     38
      30: new           #19                 // class java/lang/IllegalArgumentException
      33: dup
      34: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":()V
      37: athrow
      38: aload_0
      39: iload_1
      40: putfield      #12                 // Field textStart:I
      43: aload_0
      44: iload_1
      45: iload_2
      46: iadd
      47: putfield      #21                 // Field textLimit:I
      50: aload_0
      51: invokevirtual #22                 // Method reset:()V
      54: return

  public final void reset(char[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: getfield      #2                  // Field emptyCharArray:[C
       8: astore_1
       9: aload_0
      10: aload_1
      11: putfield      #18                 // Field text:[C
      14: aload_0
      15: iload_2
      16: iload_3
      17: invokevirtual #23                 // Method reset:(II)V
      20: return

  public final void reset(char[]);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnull        9
       6: aload_1
       7: arraylength
       8: istore_2
       9: aload_0
      10: aload_1
      11: iconst_0
      12: iload_2
      13: invokevirtual #6                  // Method reset:([CII)V
      16: return

  public final void reset(java.lang.String, int, int);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: ifnull        13
       7: aload_1
       8: invokevirtual #24                 // Method java/lang/String.toCharArray:()[C
      11: astore        4
      13: aload_0
      14: aload         4
      16: iload_2
      17: iload_3
      18: invokevirtual #6                  // Method reset:([CII)V
      21: return

  public final void reset(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnull        11
       6: aload_1
       7: invokevirtual #25                 // Method java/lang/String.length:()I
      10: istore_2
      11: aload_0
      12: aload_1
      13: iconst_0
      14: iload_2
      15: invokevirtual #8                  // Method reset:(Ljava/lang/String;II)V
      18: return

  public final int getScriptStart();
    Code:
       0: aload_0
       1: getfield      #13                 // Field scriptStart:I
       4: ireturn

  public final int getScriptLimit();
    Code:
       0: aload_0
       1: getfield      #14                 // Field scriptLimit:I
       4: ireturn

  public final int getScriptCode();
    Code:
       0: aload_0
       1: getfield      #16                 // Field scriptCode:I
       4: ireturn

  public final boolean next();
    Code:
       0: aload_0
       1: getfield      #14                 // Field scriptLimit:I
       4: aload_0
       5: getfield      #21                 // Field textLimit:I
       8: if_icmplt     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: iconst_0
      15: putfield      #16                 // Field scriptCode:I
      18: aload_0
      19: aload_0
      20: getfield      #14                 // Field scriptLimit:I
      23: putfield      #13                 // Field scriptStart:I
      26: aload_0
      27: invokespecial #26                 // Method syncFixup:()V
      30: aload_0
      31: getfield      #17                 // Field textIndex:I
      34: aload_0
      35: getfield      #21                 // Field textLimit:I
      38: if_icmpge     237
      41: aload_0
      42: getfield      #18                 // Field text:[C
      45: aload_0
      46: getfield      #12                 // Field textStart:I
      49: aload_0
      50: getfield      #21                 // Field textLimit:I
      53: aload_0
      54: getfield      #17                 // Field textIndex:I
      57: aload_0
      58: getfield      #12                 // Field textStart:I
      61: isub
      62: invokestatic  #27                 // Method com/ibm/icu/text/UTF16.charAt:([CIII)I
      65: istore_1
      66: iload_1
      67: invokestatic  #28                 // Method com/ibm/icu/text/UTF16.getCharCount:(I)I
      70: istore_2
      71: iload_1
      72: invokestatic  #29                 // Method com/ibm/icu/lang/UScript.getScript:(I)I
      75: istore_3
      76: iload_1
      77: invokestatic  #30                 // Method getPairIndex:(I)I
      80: istore        4
      82: aload_0
      83: dup
      84: getfield      #17                 // Field textIndex:I
      87: iload_2
      88: iadd
      89: putfield      #17                 // Field textIndex:I
      92: iload         4
      94: iflt          165
      97: iload         4
      99: iconst_1
     100: iand
     101: ifne          117
     104: aload_0
     105: iload         4
     107: aload_0
     108: getfield      #16                 // Field scriptCode:I
     111: invokespecial #31                 // Method push:(II)V
     114: goto          165
     117: iload         4
     119: bipush        -2
     121: iand
     122: istore        5
     124: aload_0
     125: invokespecial #10                 // Method stackIsNotEmpty:()Z
     128: ifeq          150
     131: aload_0
     132: invokespecial #32                 // Method top:()Lcom/ibm/icu/lang/UScriptRun$ParenStackEntry;
     135: getfield      #33                 // Field com/ibm/icu/lang/UScriptRun$ParenStackEntry.pairIndex:I
     138: iload         5
     140: if_icmpeq     150
     143: aload_0
     144: invokespecial #11                 // Method pop:()V
     147: goto          124
     150: aload_0
     151: invokespecial #10                 // Method stackIsNotEmpty:()Z
     154: ifeq          165
     157: aload_0
     158: invokespecial #32                 // Method top:()Lcom/ibm/icu/lang/UScriptRun$ParenStackEntry;
     161: getfield      #34                 // Field com/ibm/icu/lang/UScriptRun$ParenStackEntry.scriptCode:I
     164: istore_3
     165: aload_0
     166: getfield      #16                 // Field scriptCode:I
     169: iload_3
     170: invokestatic  #35                 // Method sameScript:(II)Z
     173: ifeq          221
     176: aload_0
     177: getfield      #16                 // Field scriptCode:I
     180: iconst_1
     181: if_icmpgt     202
     184: iload_3
     185: iconst_1
     186: if_icmple     202
     189: aload_0
     190: iload_3
     191: putfield      #16                 // Field scriptCode:I
     194: aload_0
     195: aload_0
     196: getfield      #16                 // Field scriptCode:I
     199: invokespecial #36                 // Method fixup:(I)V
     202: iload         4
     204: iflt          234
     207: iload         4
     209: iconst_1
     210: iand
     211: ifeq          234
     214: aload_0
     215: invokespecial #11                 // Method pop:()V
     218: goto          234
     221: aload_0
     222: dup
     223: getfield      #17                 // Field textIndex:I
     226: iload_2
     227: isub
     228: putfield      #17                 // Field textIndex:I
     231: goto          237
     234: goto          30
     237: aload_0
     238: aload_0
     239: getfield      #17                 // Field textIndex:I
     242: putfield      #14                 // Field scriptLimit:I
     245: iconst_1
     246: ireturn

  private static boolean sameScript(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmple     15
       5: iload_1
       6: iconst_1
       7: if_icmple     15
      10: iload_0
      11: iload_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private static final int mod(int);
    Code:
       0: iload_0
       1: getstatic     #37                 // Field PAREN_STACK_DEPTH:I
       4: irem
       5: ireturn

  private static final int inc(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iadd
       3: invokestatic  #38                 // Method mod:(I)I
       6: ireturn

  private static final int inc(int);
    Code:
       0: iload_0
       1: iconst_1
       2: invokestatic  #39                 // Method inc:(II)I
       5: ireturn

  private static final int dec(int, int);
    Code:
       0: iload_0
       1: getstatic     #37                 // Field PAREN_STACK_DEPTH:I
       4: iadd
       5: iload_1
       6: isub
       7: invokestatic  #38                 // Method mod:(I)I
      10: ireturn

  private static final int dec(int);
    Code:
       0: iload_0
       1: iconst_1
       2: invokestatic  #40                 // Method dec:(II)I
       5: ireturn

  private static final int limitInc(int);
    Code:
       0: iload_0
       1: getstatic     #37                 // Field PAREN_STACK_DEPTH:I
       4: if_icmpge     10
       7: iinc          0, 1
      10: iload_0
      11: ireturn

  private final boolean stackIsEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pushCount:I
       4: ifgt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private final boolean stackIsNotEmpty();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method stackIsEmpty:()Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private final void push(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field pushCount:I
       5: invokestatic  #42                 // Method limitInc:(I)I
       8: putfield      #4                  // Field pushCount:I
      11: aload_0
      12: aload_0
      13: getfield      #5                  // Field fixupCount:I
      16: invokestatic  #42                 // Method limitInc:(I)I
      19: putfield      #5                  // Field fixupCount:I
      22: aload_0
      23: aload_0
      24: getfield      #3                  // Field parenSP:I
      27: invokestatic  #43                 // Method inc:(I)I
      30: putfield      #3                  // Field parenSP:I
      33: getstatic     #44                 // Field parenStack:[Lcom/ibm/icu/lang/UScriptRun$ParenStackEntry;
      36: aload_0
      37: getfield      #3                  // Field parenSP:I
      40: new           #45                 // class com/ibm/icu/lang/UScriptRun$ParenStackEntry
      43: dup
      44: iload_1
      45: iload_2
      46: invokespecial #46                 // Method com/ibm/icu/lang/UScriptRun$ParenStackEntry."<init>":(II)V
      49: aastore
      50: return

  private final void pop();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method stackIsEmpty:()Z
       4: ifeq          8
       7: return
       8: getstatic     #44                 // Field parenStack:[Lcom/ibm/icu/lang/UScriptRun$ParenStackEntry;
      11: aload_0
      12: getfield      #3                  // Field parenSP:I
      15: aconst_null
      16: aastore
      17: aload_0
      18: getfield      #5                  // Field fixupCount:I
      21: ifle          34
      24: aload_0
      25: dup
      26: getfield      #5                  // Field fixupCount:I
      29: iconst_1
      30: isub
      31: putfield      #5                  // Field fixupCount:I
      34: aload_0
      35: dup
      36: getfield      #4                  // Field pushCount:I
      39: iconst_1
      40: isub
      41: putfield      #4                  // Field pushCount:I
      44: aload_0
      45: aload_0
      46: getfield      #3                  // Field parenSP:I
      49: invokestatic  #47                 // Method dec:(I)I
      52: putfield      #3                  // Field parenSP:I
      55: aload_0
      56: invokespecial #41                 // Method stackIsEmpty:()Z
      59: ifeq          67
      62: aload_0
      63: iconst_m1
      64: putfield      #3                  // Field parenSP:I
      67: return

  private final com.ibm.icu.lang.UScriptRun$ParenStackEntry top();
    Code:
       0: getstatic     #44                 // Field parenStack:[Lcom/ibm/icu/lang/UScriptRun$ParenStackEntry;
       3: aload_0
       4: getfield      #3                  // Field parenSP:I
       7: aaload
       8: areturn

  private final void syncFixup();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field fixupCount:I
       5: return

  private final void fixup(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field parenSP:I
       4: aload_0
       5: getfield      #5                  // Field fixupCount:I
       8: invokestatic  #40                 // Method dec:(II)I
      11: istore_2
      12: aload_0
      13: dup
      14: getfield      #5                  // Field fixupCount:I
      17: dup_x1
      18: iconst_1
      19: isub
      20: putfield      #5                  // Field fixupCount:I
      23: ifle          43
      26: iload_2
      27: invokestatic  #43                 // Method inc:(I)I
      30: istore_2
      31: getstatic     #44                 // Field parenStack:[Lcom/ibm/icu/lang/UScriptRun$ParenStackEntry;
      34: iload_2
      35: aaload
      36: iload_1
      37: putfield      #34                 // Field com/ibm/icu/lang/UScriptRun$ParenStackEntry.scriptCode:I
      40: goto          12
      43: return

  private static final byte highBit(int);
    Code:
       0: iload_0
       1: ifgt          7
       4: bipush        -32
       6: ireturn
       7: iconst_0
       8: istore_1
       9: iload_0
      10: ldc           #48                 // int 65536
      12: if_icmplt     26
      15: iload_0
      16: bipush        16
      18: ishr
      19: istore_0
      20: iload_1
      21: bipush        16
      23: iadd
      24: i2b
      25: istore_1
      26: iload_0
      27: sipush        256
      30: if_icmplt     44
      33: iload_0
      34: bipush        8
      36: ishr
      37: istore_0
      38: iload_1
      39: bipush        8
      41: iadd
      42: i2b
      43: istore_1
      44: iload_0
      45: bipush        16
      47: if_icmplt     59
      50: iload_0
      51: iconst_4
      52: ishr
      53: istore_0
      54: iload_1
      55: iconst_4
      56: iadd
      57: i2b
      58: istore_1
      59: iload_0
      60: iconst_4
      61: if_icmplt     73
      64: iload_0
      65: iconst_2
      66: ishr
      67: istore_0
      68: iload_1
      69: iconst_2
      70: iadd
      71: i2b
      72: istore_1
      73: iload_0
      74: iconst_2
      75: if_icmplt     87
      78: iload_0
      79: iconst_1
      80: ishr
      81: istore_0
      82: iload_1
      83: iconst_1
      84: iadd
      85: i2b
      86: istore_1
      87: iload_1
      88: ireturn

  private static int getPairIndex(int);
    Code:
       0: getstatic     #49                 // Field pairedCharPower:I
       3: istore_1
       4: iconst_0
       5: istore_2
       6: iload_0
       7: getstatic     #50                 // Field pairedChars:[I
      10: getstatic     #51                 // Field pairedCharExtra:I
      13: iaload
      14: if_icmplt     21
      17: getstatic     #51                 // Field pairedCharExtra:I
      20: istore_2
      21: iload_1
      22: iconst_1
      23: if_icmple     48
      26: iload_1
      27: iconst_1
      28: ishr
      29: istore_1
      30: iload_0
      31: getstatic     #50                 // Field pairedChars:[I
      34: iload_2
      35: iload_1
      36: iadd
      37: iaload
      38: if_icmplt     21
      41: iload_2
      42: iload_1
      43: iadd
      44: istore_2
      45: goto          21
      48: getstatic     #50                 // Field pairedChars:[I
      51: iload_2
      52: iaload
      53: iload_0
      54: if_icmpeq     59
      57: iconst_m1
      58: istore_2
      59: iload_2
      60: ireturn

  static {};
    Code:
       0: bipush        32
       2: putstatic     #37                 // Field PAREN_STACK_DEPTH:I
       5: getstatic     #37                 // Field PAREN_STACK_DEPTH:I
       8: anewarray     #45                 // class com/ibm/icu/lang/UScriptRun$ParenStackEntry
      11: putstatic     #44                 // Field parenStack:[Lcom/ibm/icu/lang/UScriptRun$ParenStackEntry;
      14: bipush        34
      16: newarray       int
      18: dup
      19: iconst_0
      20: bipush        40
      22: iastore
      23: dup
      24: iconst_1
      25: bipush        41
      27: iastore
      28: dup
      29: iconst_2
      30: bipush        60
      32: iastore
      33: dup
      34: iconst_3
      35: bipush        62
      37: iastore
      38: dup
      39: iconst_4
      40: bipush        91
      42: iastore
      43: dup
      44: iconst_5
      45: bipush        93
      47: iastore
      48: dup
      49: bipush        6
      51: bipush        123
      53: iastore
      54: dup
      55: bipush        7
      57: bipush        125
      59: iastore
      60: dup
      61: bipush        8
      63: sipush        171
      66: iastore
      67: dup
      68: bipush        9
      70: sipush        187
      73: iastore
      74: dup
      75: bipush        10
      77: sipush        8216
      80: iastore
      81: dup
      82: bipush        11
      84: sipush        8217
      87: iastore
      88: dup
      89: bipush        12
      91: sipush        8220
      94: iastore
      95: dup
      96: bipush        13
      98: sipush        8221
     101: iastore
     102: dup
     103: bipush        14
     105: sipush        8249
     108: iastore
     109: dup
     110: bipush        15
     112: sipush        8250
     115: iastore
     116: dup
     117: bipush        16
     119: sipush        12296
     122: iastore
     123: dup
     124: bipush        17
     126: sipush        12297
     129: iastore
     130: dup
     131: bipush        18
     133: sipush        12298
     136: iastore
     137: dup
     138: bipush        19
     140: sipush        12299
     143: iastore
     144: dup
     145: bipush        20
     147: sipush        12300
     150: iastore
     151: dup
     152: bipush        21
     154: sipush        12301
     157: iastore
     158: dup
     159: bipush        22
     161: sipush        12302
     164: iastore
     165: dup
     166: bipush        23
     168: sipush        12303
     171: iastore
     172: dup
     173: bipush        24
     175: sipush        12304
     178: iastore
     179: dup
     180: bipush        25
     182: sipush        12305
     185: iastore
     186: dup
     187: bipush        26
     189: sipush        12308
     192: iastore
     193: dup
     194: bipush        27
     196: sipush        12309
     199: iastore
     200: dup
     201: bipush        28
     203: sipush        12310
     206: iastore
     207: dup
     208: bipush        29
     210: sipush        12311
     213: iastore
     214: dup
     215: bipush        30
     217: sipush        12312
     220: iastore
     221: dup
     222: bipush        31
     224: sipush        12313
     227: iastore
     228: dup
     229: bipush        32
     231: sipush        12314
     234: iastore
     235: dup
     236: bipush        33
     238: sipush        12315
     241: iastore
     242: putstatic     #50                 // Field pairedChars:[I
     245: iconst_1
     246: getstatic     #50                 // Field pairedChars:[I
     249: arraylength
     250: invokestatic  #52                 // Method highBit:(I)B
     253: ishl
     254: putstatic     #49                 // Field pairedCharPower:I
     257: getstatic     #50                 // Field pairedChars:[I
     260: arraylength
     261: getstatic     #49                 // Field pairedCharPower:I
     264: isub
     265: putstatic     #51                 // Field pairedCharExtra:I
     268: return
}
