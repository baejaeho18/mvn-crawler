Compiled from "UCharacter.java"
final class com.ibm.icu.lang.UCharacter$UCharacterTypeIterator implements com.ibm.icu.util.RangeValueIterator {
  private java.util.Iterator<com.ibm.icu.impl.Trie2$Range> trieIterator;

  private com.ibm.icu.impl.Trie2$Range range;

  private static final com.ibm.icu.lang.UCharacter$UCharacterTypeIterator$MaskType MASK_TYPE;

  com.ibm.icu.lang.UCharacter$UCharacterTypeIterator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokevirtual #2                  // Method reset:()V
       8: return

  public boolean next(com.ibm.icu.util.RangeValueIterator$Element);
    Code:
       0: aload_0
       1: getfield      #3                  // Field trieIterator:Ljava/util/Iterator;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ifeq          72
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field trieIterator:Ljava/util/Iterator;
      17: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #6                  // class com/ibm/icu/impl/Trie2$Range
      25: dup_x1
      26: putfield      #7                  // Field range:Lcom/ibm/icu/impl/Trie2$Range;
      29: getfield      #8                  // Field com/ibm/icu/impl/Trie2$Range.leadSurrogate:Z
      32: ifne          72
      35: aload_1
      36: aload_0
      37: getfield      #7                  // Field range:Lcom/ibm/icu/impl/Trie2$Range;
      40: getfield      #9                  // Field com/ibm/icu/impl/Trie2$Range.startCodePoint:I
      43: putfield      #10                 // Field com/ibm/icu/util/RangeValueIterator$Element.start:I
      46: aload_1
      47: aload_0
      48: getfield      #7                  // Field range:Lcom/ibm/icu/impl/Trie2$Range;
      51: getfield      #11                 // Field com/ibm/icu/impl/Trie2$Range.endCodePoint:I
      54: iconst_1
      55: iadd
      56: putfield      #12                 // Field com/ibm/icu/util/RangeValueIterator$Element.limit:I
      59: aload_1
      60: aload_0
      61: getfield      #7                  // Field range:Lcom/ibm/icu/impl/Trie2$Range;
      64: getfield      #13                 // Field com/ibm/icu/impl/Trie2$Range.value:I
      67: putfield      #14                 // Field com/ibm/icu/util/RangeValueIterator$Element.value:I
      70: iconst_1
      71: ireturn
      72: iconst_0
      73: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       4: getfield      #16                 // Field com/ibm/icu/impl/UCharacterProperty.m_trie_:Lcom/ibm/icu/impl/Trie2_16;
       7: getstatic     #17                 // Field MASK_TYPE:Lcom/ibm/icu/lang/UCharacter$UCharacterTypeIterator$MaskType;
      10: invokevirtual #18                 // Method com/ibm/icu/impl/Trie2_16.iterator:(Lcom/ibm/icu/impl/Trie2$ValueMapper;)Ljava/util/Iterator;
      13: putfield      #3                  // Field trieIterator:Ljava/util/Iterator;
      16: return

  static {};
    Code:
       0: new           #19                 // class com/ibm/icu/lang/UCharacter$UCharacterTypeIterator$MaskType
       3: dup
       4: aconst_null
       5: invokespecial #20                 // Method com/ibm/icu/lang/UCharacter$UCharacterTypeIterator$MaskType."<init>":(Lcom/ibm/icu/lang/UCharacter$1;)V
       8: putstatic     #17                 // Field MASK_TYPE:Lcom/ibm/icu/lang/UCharacter$UCharacterTypeIterator$MaskType;
      11: return
}
