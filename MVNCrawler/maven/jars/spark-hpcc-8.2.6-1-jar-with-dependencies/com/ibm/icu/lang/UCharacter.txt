Compiled from "UCharacter.java"
public final class com.ibm.icu.lang.UCharacter implements com.ibm.icu.lang.UCharacterEnums$ECharacterCategory,com.ibm.icu.lang.UCharacterEnums$ECharacterDirection {
  public static final int MIN_VALUE;

  public static final int MAX_VALUE;

  public static final int SUPPLEMENTARY_MIN_VALUE;

  public static final int REPLACEMENT_CHAR;

  public static final double NO_NUMERIC_VALUE;

  public static final int MIN_RADIX;

  public static final int MAX_RADIX;

  public static final int TITLECASE_NO_LOWERCASE;

  public static final int TITLECASE_NO_BREAK_ADJUSTMENT;

  public static final int FOLD_CASE_DEFAULT;

  public static final int FOLD_CASE_EXCLUDE_SPECIAL_I;

  public static final char MIN_HIGH_SURROGATE;

  public static final char MAX_HIGH_SURROGATE;

  public static final char MIN_LOW_SURROGATE;

  public static final char MAX_LOW_SURROGATE;

  public static final char MIN_SURROGATE;

  public static final char MAX_SURROGATE;

  public static final int MIN_SUPPLEMENTARY_CODE_POINT;

  public static final int MAX_CODE_POINT;

  public static final int MIN_CODE_POINT;

  private static final int LAST_CHAR_MASK_;

  private static final int NO_BREAK_SPACE_;

  private static final int FIGURE_SPACE_;

  private static final int NARROW_NO_BREAK_SPACE_;

  private static final int IDEOGRAPHIC_NUMBER_ZERO_;

  private static final int CJK_IDEOGRAPH_FIRST_;

  private static final int CJK_IDEOGRAPH_SECOND_;

  private static final int CJK_IDEOGRAPH_THIRD_;

  private static final int CJK_IDEOGRAPH_FOURTH_;

  private static final int CJK_IDEOGRAPH_FIFTH_;

  private static final int CJK_IDEOGRAPH_SIXTH_;

  private static final int CJK_IDEOGRAPH_SEVENTH_;

  private static final int CJK_IDEOGRAPH_EIGHTH_;

  private static final int CJK_IDEOGRAPH_NINETH_;

  private static final int APPLICATION_PROGRAM_COMMAND_;

  private static final int UNIT_SEPARATOR_;

  private static final int DELETE_;

  private static final int CJK_IDEOGRAPH_COMPLEX_ZERO_;

  private static final int CJK_IDEOGRAPH_COMPLEX_ONE_;

  private static final int CJK_IDEOGRAPH_COMPLEX_TWO_;

  private static final int CJK_IDEOGRAPH_COMPLEX_THREE_;

  private static final int CJK_IDEOGRAPH_COMPLEX_FOUR_;

  private static final int CJK_IDEOGRAPH_COMPLEX_FIVE_;

  private static final int CJK_IDEOGRAPH_COMPLEX_SIX_;

  private static final int CJK_IDEOGRAPH_COMPLEX_SEVEN_;

  private static final int CJK_IDEOGRAPH_COMPLEX_EIGHT_;

  private static final int CJK_IDEOGRAPH_COMPLEX_NINE_;

  private static final int CJK_IDEOGRAPH_TEN_;

  private static final int CJK_IDEOGRAPH_COMPLEX_TEN_;

  private static final int CJK_IDEOGRAPH_HUNDRED_;

  private static final int CJK_IDEOGRAPH_COMPLEX_HUNDRED_;

  private static final int CJK_IDEOGRAPH_THOUSAND_;

  private static final int CJK_IDEOGRAPH_COMPLEX_THOUSAND_;

  private static final int CJK_IDEOGRAPH_TEN_THOUSAND_;

  private static final int CJK_IDEOGRAPH_HUNDRED_MILLION_;

  public static int digit(int, int);
    Code:
       0: iconst_2
       1: iload_1
       2: if_icmpgt     36
       5: iload_1
       6: bipush        36
       8: if_icmpgt     36
      11: iload_0
      12: invokestatic  #2                  // Method digit:(I)I
      15: istore_2
      16: iload_2
      17: ifge          25
      20: iload_0
      21: invokestatic  #3                  // Method com/ibm/icu/impl/UCharacterProperty.getEuropeanDigit:(I)I
      24: istore_2
      25: iload_2
      26: iload_1
      27: if_icmpge     34
      30: iload_2
      31: goto          35
      34: iconst_m1
      35: ireturn
      36: iconst_m1
      37: ireturn

  public static int digit(int);
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: iload_0
       4: invokevirtual #5                  // Method com/ibm/icu/impl/UCharacterProperty.digit:(I)I
       7: ireturn

  public static int getNumericValue(int);
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: iload_0
       4: invokevirtual #6                  // Method com/ibm/icu/impl/UCharacterProperty.getNumericValue:(I)I
       7: ireturn

  public static double getUnicodeNumericValue(int);
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: iload_0
       4: invokevirtual #7                  // Method com/ibm/icu/impl/UCharacterProperty.getUnicodeNumericValue:(I)D
       7: dreturn

  public static boolean isSpace(int);
    Code:
       0: iload_0
       1: bipush        32
       3: if_icmpgt     40
       6: iload_0
       7: bipush        32
       9: if_icmpeq     36
      12: iload_0
      13: bipush        9
      15: if_icmpeq     36
      18: iload_0
      19: bipush        10
      21: if_icmpeq     36
      24: iload_0
      25: bipush        12
      27: if_icmpeq     36
      30: iload_0
      31: bipush        13
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public static int getType(int);
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: iload_0
       4: invokevirtual #8                  // Method com/ibm/icu/impl/UCharacterProperty.getType:(I)I
       7: ireturn

  public static boolean isDefined(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method getType:(I)I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean isDigit(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method getType:(I)I
       4: bipush        9
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public static boolean isISOControl(int);
    Code:
       0: iload_0
       1: iflt          27
       4: iload_0
       5: sipush        159
       8: if_icmpgt     27
      11: iload_0
      12: bipush        31
      14: if_icmple     23
      17: iload_0
      18: bipush        127
      20: if_icmplt     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public static boolean isLetter(int);
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #9                  // Method getType:(I)I
       5: ishl
       6: bipush        62
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public static boolean isLetterOrDigit(int);
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #9                  // Method getType:(I)I
       5: ishl
       6: sipush        574
       9: iand
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isJavaLetter(int);
    Code:
       0: iload_0
       1: invokestatic  #12                 // Method isJavaIdentifierStart:(I)Z
       4: ireturn

  public static boolean isJavaLetterOrDigit(int);
    Code:
       0: iload_0
       1: invokestatic  #13                 // Method isJavaIdentifierPart:(I)Z
       4: ireturn

  public static boolean isJavaIdentifierStart(int);
    Code:
       0: iload_0
       1: i2c
       2: invokestatic  #14                 // Method java/lang/Character.isJavaIdentifierStart:(C)Z
       5: ireturn

  public static boolean isJavaIdentifierPart(int);
    Code:
       0: iload_0
       1: i2c
       2: invokestatic  #15                 // Method java/lang/Character.isJavaIdentifierPart:(C)Z
       5: ireturn

  public static boolean isLowerCase(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method getType:(I)I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isWhitespace(int);
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #9                  // Method getType:(I)I
       5: ishl
       6: sipush        28672
       9: iand
      10: ifeq          34
      13: iload_0
      14: sipush        160
      17: if_icmpeq     34
      20: iload_0
      21: sipush        8199
      24: if_icmpeq     34
      27: iload_0
      28: sipush        8239
      31: if_icmpne     58
      34: iload_0
      35: bipush        9
      37: if_icmplt     46
      40: iload_0
      41: bipush        13
      43: if_icmple     58
      46: iload_0
      47: bipush        28
      49: if_icmplt     62
      52: iload_0
      53: bipush        31
      55: if_icmpgt     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  public static boolean isSpaceChar(int);
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #9                  // Method getType:(I)I
       5: ishl
       6: sipush        28672
       9: iand
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isTitleCase(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method getType:(I)I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static boolean isUnicodeIdentifierPart(int);
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #9                  // Method getType:(I)I
       5: ishl
       6: ldc           #16                 // int 4196222
       8: iand
       9: ifne          19
      12: iload_0
      13: invokestatic  #17                 // Method isIdentifierIgnorable:(I)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public static boolean isUnicodeIdentifierStart(int);
    Code:
       0: iconst_1
       1: iload_0
       2: invokestatic  #9                  // Method getType:(I)I
       5: ishl
       6: sipush        1086
       9: iand
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public static boolean isIdentifierIgnorable(int);
    Code:
       0: iload_0
       1: sipush        159
       4: if_icmpgt     44
       7: iload_0
       8: invokestatic  #18                 // Method isISOControl:(I)Z
      11: ifeq          42
      14: iload_0
      15: bipush        9
      17: if_icmplt     26
      20: iload_0
      21: bipush        13
      23: if_icmple     42
      26: iload_0
      27: bipush        28
      29: if_icmplt     38
      32: iload_0
      33: bipush        31
      35: if_icmple     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn
      44: iload_0
      45: invokestatic  #9                  // Method getType:(I)I
      48: bipush        16
      50: if_icmpne     57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public static boolean isUpperCase(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method getType:(I)I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static int toLowerCase(int);
    Code:
       0: getstatic     #19                 // Field com/ibm/icu/impl/UCaseProps.INSTANCE:Lcom/ibm/icu/impl/UCaseProps;
       3: iload_0
       4: invokevirtual #20                 // Method com/ibm/icu/impl/UCaseProps.tolower:(I)I
       7: ireturn

  public static java.lang.String toString(int);
    Code:
       0: iload_0
       1: iflt          10
       4: iload_0
       5: ldc           #21                 // int 1114111
       7: if_icmple     12
      10: aconst_null
      11: areturn
      12: iload_0
      13: ldc           #22                 // int 65536
      15: if_icmpge     24
      18: iload_0
      19: i2c
      20: invokestatic  #23                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;
      23: areturn
      24: new           #24                 // class java/lang/String
      27: dup
      28: iload_0
      29: invokestatic  #25                 // Method java/lang/Character.toChars:(I)[C
      32: invokespecial #26                 // Method java/lang/String."<init>":([C)V
      35: areturn

  public static int toTitleCase(int);
    Code:
       0: getstatic     #19                 // Field com/ibm/icu/impl/UCaseProps.INSTANCE:Lcom/ibm/icu/impl/UCaseProps;
       3: iload_0
       4: invokevirtual #27                 // Method com/ibm/icu/impl/UCaseProps.totitle:(I)I
       7: ireturn

  public static int toUpperCase(int);
    Code:
       0: getstatic     #19                 // Field com/ibm/icu/impl/UCaseProps.INSTANCE:Lcom/ibm/icu/impl/UCaseProps;
       3: iload_0
       4: invokevirtual #28                 // Method com/ibm/icu/impl/UCaseProps.toupper:(I)I
       7: ireturn

  public static boolean isSupplementary(int);
    Code:
       0: iload_0
       1: ldc           #22                 // int 65536
       3: if_icmplt     16
       6: iload_0
       7: ldc           #21                 // int 1114111
       9: if_icmpgt     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public static boolean isBMP(int);
    Code:
       0: iload_0
       1: iflt          14
       4: iload_0
       5: ldc           #29                 // int 65535
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static boolean isPrintable(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method getType:(I)I
       4: istore_1
       5: iload_1
       6: ifeq          41
       9: iload_1
      10: bipush        15
      12: if_icmpeq     41
      15: iload_1
      16: bipush        16
      18: if_icmpeq     41
      21: iload_1
      22: bipush        17
      24: if_icmpeq     41
      27: iload_1
      28: bipush        18
      30: if_icmpeq     41
      33: iload_1
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public static boolean isBaseForm(int);
    Code:
       0: iload_0
       1: invokestatic  #9                  // Method getType:(I)I
       4: istore_1
       5: iload_1
       6: bipush        9
       8: if_icmpeq     66
      11: iload_1
      12: bipush        11
      14: if_icmpeq     66
      17: iload_1
      18: bipush        10
      20: if_icmpeq     66
      23: iload_1
      24: iconst_1
      25: if_icmpeq     66
      28: iload_1
      29: iconst_2
      30: if_icmpeq     66
      33: iload_1
      34: iconst_3
      35: if_icmpeq     66
      38: iload_1
      39: iconst_4
      40: if_icmpeq     66
      43: iload_1
      44: iconst_5
      45: if_icmpeq     66
      48: iload_1
      49: bipush        6
      51: if_icmpeq     66
      54: iload_1
      55: bipush        7
      57: if_icmpeq     66
      60: iload_1
      61: bipush        8
      63: if_icmpne     70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ireturn

  public static int getDirection(int);
    Code:
       0: getstatic     #30                 // Field com/ibm/icu/impl/UBiDiProps.INSTANCE:Lcom/ibm/icu/impl/UBiDiProps;
       3: iload_0
       4: invokevirtual #31                 // Method com/ibm/icu/impl/UBiDiProps.getClass:(I)I
       7: ireturn

  public static boolean isMirrored(int);
    Code:
       0: getstatic     #30                 // Field com/ibm/icu/impl/UBiDiProps.INSTANCE:Lcom/ibm/icu/impl/UBiDiProps;
       3: iload_0
       4: invokevirtual #32                 // Method com/ibm/icu/impl/UBiDiProps.isMirrored:(I)Z
       7: ireturn

  public static int getMirror(int);
    Code:
       0: getstatic     #30                 // Field com/ibm/icu/impl/UBiDiProps.INSTANCE:Lcom/ibm/icu/impl/UBiDiProps;
       3: iload_0
       4: invokevirtual #33                 // Method com/ibm/icu/impl/UBiDiProps.getMirror:(I)I
       7: ireturn

  public static int getBidiPairedBracket(int);
    Code:
       0: getstatic     #30                 // Field com/ibm/icu/impl/UBiDiProps.INSTANCE:Lcom/ibm/icu/impl/UBiDiProps;
       3: iload_0
       4: invokevirtual #34                 // Method com/ibm/icu/impl/UBiDiProps.getPairedBracket:(I)I
       7: ireturn

  public static int getCombiningClass(int);
    Code:
       0: invokestatic  #35                 // Method com/ibm/icu/text/Normalizer2.getNFDInstance:()Lcom/ibm/icu/text/Normalizer2;
       3: iload_0
       4: invokevirtual #36                 // Method com/ibm/icu/text/Normalizer2.getCombiningClass:(I)I
       7: ireturn

  public static boolean isLegal(int);
    Code:
       0: iload_0
       1: ifge          6
       4: iconst_0
       5: ireturn
       6: iload_0
       7: ldc           #37                 // int 55296
       9: if_icmpge     14
      12: iconst_1
      13: ireturn
      14: iload_0
      15: ldc           #38                 // int 57343
      17: if_icmpgt     22
      20: iconst_0
      21: ireturn
      22: iload_0
      23: invokestatic  #39                 // Method com/ibm/icu/impl/UCharacterUtility.isNonCharacter:(I)Z
      26: ifeq          31
      29: iconst_0
      30: ireturn
      31: iload_0
      32: ldc           #21                 // int 1114111
      34: if_icmpgt     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ireturn

  public static boolean isLegal(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method java/lang/String.length:()I
       4: istore_1
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_1
       9: if_icmpge     37
      12: aload_0
      13: iload_3
      14: invokevirtual #41                 // Method java/lang/String.codePointAt:(I)I
      17: istore_2
      18: iload_2
      19: invokestatic  #42                 // Method isLegal:(I)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: iload_3
      28: iload_2
      29: invokestatic  #43                 // Method java/lang/Character.charCount:(I)I
      32: iadd
      33: istore_3
      34: goto          7
      37: iconst_1
      38: ireturn

  public static com.ibm.icu.util.VersionInfo getUnicodeVersion();
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: getfield      #44                 // Field com/ibm/icu/impl/UCharacterProperty.m_unicodeVersion_:Lcom/ibm/icu/util/VersionInfo;
       6: areturn

  public static java.lang.String getName(int);
    Code:
       0: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       3: iload_0
       4: iconst_0
       5: invokevirtual #47                 // Method com/ibm/icu/impl/UCharacterName.getName:(II)Ljava/lang/String;
       8: areturn

  public static java.lang.String getName(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method java/lang/String.length:()I
       4: iconst_1
       5: if_icmpne     17
       8: aload_0
       9: iconst_0
      10: invokevirtual #48                 // Method java/lang/String.charAt:(I)C
      13: invokestatic  #49                 // Method getName:(I)Ljava/lang/String;
      16: areturn
      17: new           #50                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      24: astore_3
      25: iconst_0
      26: istore        4
      28: iload         4
      30: aload_0
      31: invokevirtual #40                 // Method java/lang/String.length:()I
      34: if_icmpge     76
      37: aload_0
      38: iload         4
      40: invokevirtual #41                 // Method java/lang/String.codePointAt:(I)I
      43: istore_2
      44: iload         4
      46: ifeq          55
      49: aload_3
      50: aload_1
      51: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_3
      56: iload_2
      57: invokestatic  #49                 // Method getName:(I)Ljava/lang/String;
      60: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: pop
      64: iload         4
      66: iload_2
      67: invokestatic  #43                 // Method java/lang/Character.charCount:(I)I
      70: iadd
      71: istore        4
      73: goto          28
      76: aload_3
      77: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  public static java.lang.String getName1_0(int);
    Code:
       0: aconst_null
       1: areturn

  public static java.lang.String getExtendedName(int);
    Code:
       0: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       3: iload_0
       4: iconst_2
       5: invokevirtual #47                 // Method com/ibm/icu/impl/UCharacterName.getName:(II)Ljava/lang/String;
       8: areturn

  public static java.lang.String getNameAlias(int);
    Code:
       0: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       3: iload_0
       4: iconst_3
       5: invokevirtual #47                 // Method com/ibm/icu/impl/UCharacterName.getName:(II)Ljava/lang/String;
       8: areturn

  public static java.lang.String getISOComment(int);
    Code:
       0: aconst_null
       1: areturn

  public static int getCharFromName(java.lang.String);
    Code:
       0: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       3: iconst_0
       4: aload_0
       5: invokevirtual #54                 // Method com/ibm/icu/impl/UCharacterName.getCharFromName:(ILjava/lang/String;)I
       8: ireturn

  public static int getCharFromName1_0(java.lang.String);
    Code:
       0: iconst_m1
       1: ireturn

  public static int getCharFromExtendedName(java.lang.String);
    Code:
       0: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       3: iconst_2
       4: aload_0
       5: invokevirtual #54                 // Method com/ibm/icu/impl/UCharacterName.getCharFromName:(ILjava/lang/String;)I
       8: ireturn

  public static int getCharFromNameAlias(java.lang.String);
    Code:
       0: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       3: iconst_3
       4: aload_0
       5: invokevirtual #54                 // Method com/ibm/icu/impl/UCharacterName.getCharFromName:(ILjava/lang/String;)I
       8: ireturn

  public static java.lang.String getPropertyName(int, int);
    Code:
       0: getstatic     #55                 // Field com/ibm/icu/impl/UPropertyAliases.INSTANCE:Lcom/ibm/icu/impl/UPropertyAliases;
       3: iload_0
       4: iload_1
       5: invokevirtual #56                 // Method com/ibm/icu/impl/UPropertyAliases.getPropertyName:(II)Ljava/lang/String;
       8: areturn

  public static int getPropertyEnum(java.lang.CharSequence);
    Code:
       0: getstatic     #55                 // Field com/ibm/icu/impl/UPropertyAliases.INSTANCE:Lcom/ibm/icu/impl/UPropertyAliases;
       3: aload_0
       4: invokevirtual #57                 // Method com/ibm/icu/impl/UPropertyAliases.getPropertyEnum:(Ljava/lang/CharSequence;)I
       7: istore_1
       8: iload_1
       9: iconst_m1
      10: if_icmpne     40
      13: new           #59                 // class com/ibm/icu/impl/IllegalIcuArgumentException
      16: dup
      17: new           #50                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #60                 // String Invalid name:
      26: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #62                 // Method com/ibm/icu/impl/IllegalIcuArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: iload_1
      41: ireturn

  public static java.lang.String getPropertyValueName(int, int, int);
    Code:
       0: iload_0
       1: sipush        4098
       4: if_icmpeq     21
       7: iload_0
       8: sipush        4112
      11: if_icmpeq     21
      14: iload_0
      15: sipush        4113
      18: if_icmpne     63
      21: iload_1
      22: sipush        4098
      25: invokestatic  #63                 // Method getIntPropertyMinValue:(I)I
      28: if_icmplt     63
      31: iload_1
      32: sipush        4098
      35: invokestatic  #64                 // Method getIntPropertyMaxValue:(I)I
      38: if_icmpgt     63
      41: iload_2
      42: iflt          63
      45: iload_2
      46: iconst_2
      47: if_icmpge     63
      50: getstatic     #55                 // Field com/ibm/icu/impl/UPropertyAliases.INSTANCE:Lcom/ibm/icu/impl/UPropertyAliases;
      53: iload_0
      54: iload_1
      55: iload_2
      56: invokevirtual #66                 // Method com/ibm/icu/impl/UPropertyAliases.getPropertyValueName:(III)Ljava/lang/String;
      59: areturn
      60: astore_3
      61: aconst_null
      62: areturn
      63: getstatic     #55                 // Field com/ibm/icu/impl/UPropertyAliases.INSTANCE:Lcom/ibm/icu/impl/UPropertyAliases;
      66: iload_0
      67: iload_1
      68: iload_2
      69: invokevirtual #66                 // Method com/ibm/icu/impl/UPropertyAliases.getPropertyValueName:(III)Ljava/lang/String;
      72: areturn
    Exception table:
       from    to  target type
          50    59    60   Class java/lang/IllegalArgumentException

  public static int getPropertyValueEnum(int, java.lang.CharSequence);
    Code:
       0: getstatic     #55                 // Field com/ibm/icu/impl/UPropertyAliases.INSTANCE:Lcom/ibm/icu/impl/UPropertyAliases;
       3: iload_0
       4: aload_1
       5: invokevirtual #68                 // Method com/ibm/icu/impl/UPropertyAliases.getPropertyValueEnum:(ILjava/lang/CharSequence;)I
       8: istore_2
       9: iload_2
      10: iconst_m1
      11: if_icmpne     41
      14: new           #59                 // class com/ibm/icu/impl/IllegalIcuArgumentException
      17: dup
      18: new           #50                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #60                 // String Invalid name:
      27: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #62                 // Method com/ibm/icu/impl/IllegalIcuArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iload_2
      42: ireturn

  public static int getPropertyValueEnumNoThrow(int, java.lang.CharSequence);
    Code:
       0: getstatic     #55                 // Field com/ibm/icu/impl/UPropertyAliases.INSTANCE:Lcom/ibm/icu/impl/UPropertyAliases;
       3: iload_0
       4: aload_1
       5: invokevirtual #69                 // Method com/ibm/icu/impl/UPropertyAliases.getPropertyValueEnumNoThrow:(ILjava/lang/CharSequence;)I
       8: ireturn

  public static int getCodePoint(char, char);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #70                 // Method java/lang/Character.isSurrogatePair:(CC)Z
       5: ifeq          14
       8: iload_0
       9: iload_1
      10: invokestatic  #71                 // Method java/lang/Character.toCodePoint:(CC)I
      13: ireturn
      14: new           #67                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #72                 // String Illegal surrogate characters
      20: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow

  public static int getCodePoint(char);
    Code:
       0: iload_0
       1: invokestatic  #42                 // Method isLegal:(I)Z
       4: ifeq          9
       7: iload_0
       8: ireturn
       9: new           #67                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #74                 // String Illegal codepoint
      15: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow

  public static java.lang.String toUpperCase(java.lang.String);
    Code:
       0: invokestatic  #75                 // Method getDefaultCaseLocale:()I
       3: iconst_0
       4: aload_0
       5: invokestatic  #76                 // Method com/ibm/icu/impl/CaseMapImpl.toUpper:(IILjava/lang/CharSequence;)Ljava/lang/String;
       8: areturn

  public static java.lang.String toLowerCase(java.lang.String);
    Code:
       0: invokestatic  #75                 // Method getDefaultCaseLocale:()I
       3: iconst_0
       4: aload_0
       5: invokestatic  #77                 // Method com/ibm/icu/impl/CaseMapImpl.toLower:(IILjava/lang/CharSequence;)Ljava/lang/String;
       8: areturn

  public static java.lang.String toTitleCase(java.lang.String, com.ibm.icu.text.BreakIterator);
    Code:
       0: invokestatic  #78                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       3: aload_0
       4: aload_1
       5: iconst_0
       6: invokestatic  #79                 // Method toTitleCase:(Ljava/util/Locale;Ljava/lang/String;Lcom/ibm/icu/text/BreakIterator;I)Ljava/lang/String;
       9: areturn

  private static int getDefaultCaseLocale();
    Code:
       0: invokestatic  #78                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       3: invokestatic  #80                 // Method com/ibm/icu/impl/UCaseProps.getCaseLocale:(Ljava/util/Locale;)I
       6: ireturn

  private static int getCaseLocale(java.util.Locale);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #78                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       7: astore_0
       8: aload_0
       9: invokestatic  #80                 // Method com/ibm/icu/impl/UCaseProps.getCaseLocale:(Ljava/util/Locale;)I
      12: ireturn

  private static int getCaseLocale(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #81                 // Method com/ibm/icu/util/ULocale.getDefault:()Lcom/ibm/icu/util/ULocale;
       7: astore_0
       8: aload_0
       9: invokestatic  #82                 // Method com/ibm/icu/impl/UCaseProps.getCaseLocale:(Lcom/ibm/icu/util/ULocale;)I
      12: ireturn

  public static java.lang.String toUpperCase(java.util.Locale, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method getCaseLocale:(Ljava/util/Locale;)I
       4: iconst_0
       5: aload_1
       6: invokestatic  #76                 // Method com/ibm/icu/impl/CaseMapImpl.toUpper:(IILjava/lang/CharSequence;)Ljava/lang/String;
       9: areturn

  public static java.lang.String toUpperCase(com.ibm.icu.util.ULocale, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method getCaseLocale:(Lcom/ibm/icu/util/ULocale;)I
       4: iconst_0
       5: aload_1
       6: invokestatic  #76                 // Method com/ibm/icu/impl/CaseMapImpl.toUpper:(IILjava/lang/CharSequence;)Ljava/lang/String;
       9: areturn

  public static java.lang.String toLowerCase(java.util.Locale, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #83                 // Method getCaseLocale:(Ljava/util/Locale;)I
       4: iconst_0
       5: aload_1
       6: invokestatic  #77                 // Method com/ibm/icu/impl/CaseMapImpl.toLower:(IILjava/lang/CharSequence;)Ljava/lang/String;
       9: areturn

  public static java.lang.String toLowerCase(com.ibm.icu.util.ULocale, java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #84                 // Method getCaseLocale:(Lcom/ibm/icu/util/ULocale;)I
       4: iconst_0
       5: aload_1
       6: invokestatic  #77                 // Method com/ibm/icu/impl/CaseMapImpl.toLower:(IILjava/lang/CharSequence;)Ljava/lang/String;
       9: areturn

  public static java.lang.String toTitleCase(java.util.Locale, java.lang.String, com.ibm.icu.text.BreakIterator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #79                 // Method toTitleCase:(Ljava/util/Locale;Ljava/lang/String;Lcom/ibm/icu/text/BreakIterator;I)Ljava/lang/String;
       7: areturn

  public static java.lang.String toTitleCase(com.ibm.icu.util.ULocale, java.lang.String, com.ibm.icu.text.BreakIterator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokestatic  #85                 // Method toTitleCase:(Lcom/ibm/icu/util/ULocale;Ljava/lang/String;Lcom/ibm/icu/text/BreakIterator;I)Ljava/lang/String;
       7: areturn

  public static java.lang.String toTitleCase(com.ibm.icu.util.ULocale, java.lang.String, com.ibm.icu.text.BreakIterator, int);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: ifnonnull     12
       8: invokestatic  #81                 // Method com/ibm/icu/util/ULocale.getDefault:()Lcom/ibm/icu/util/ULocale;
      11: astore_0
      12: aload_0
      13: iload_3
      14: aload_2
      15: invokestatic  #86                 // Method com/ibm/icu/impl/CaseMapImpl.getTitleBreakIterator:(Lcom/ibm/icu/util/ULocale;ILcom/ibm/icu/text/BreakIterator;)Lcom/ibm/icu/text/BreakIterator;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokevirtual #87                 // Method com/ibm/icu/text/BreakIterator.setText:(Ljava/lang/String;)V
      24: aload_0
      25: invokestatic  #84                 // Method getCaseLocale:(Lcom/ibm/icu/util/ULocale;)I
      28: iload_3
      29: aload_2
      30: aload_1
      31: invokestatic  #88                 // Method com/ibm/icu/impl/CaseMapImpl.toTitle:(IILcom/ibm/icu/text/BreakIterator;Ljava/lang/CharSequence;)Ljava/lang/String;
      34: areturn

  public static java.lang.String toTitleCase(java.util.Locale, java.lang.String, com.ibm.icu.text.BreakIterator, int);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: ifnonnull     12
       8: invokestatic  #78                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      11: astore_0
      12: aload_0
      13: iload_3
      14: aload_2
      15: invokestatic  #89                 // Method com/ibm/icu/impl/CaseMapImpl.getTitleBreakIterator:(Ljava/util/Locale;ILcom/ibm/icu/text/BreakIterator;)Lcom/ibm/icu/text/BreakIterator;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokevirtual #87                 // Method com/ibm/icu/text/BreakIterator.setText:(Ljava/lang/String;)V
      24: aload_0
      25: invokestatic  #83                 // Method getCaseLocale:(Ljava/util/Locale;)I
      28: iload_3
      29: aload_2
      30: aload_1
      31: invokestatic  #88                 // Method com/ibm/icu/impl/CaseMapImpl.toTitle:(IILcom/ibm/icu/text/BreakIterator;Ljava/lang/CharSequence;)Ljava/lang/String;
      34: areturn

  public static int foldCase(int, boolean);
    Code:
       0: iload_0
       1: iload_1
       2: ifeq          9
       5: iconst_0
       6: goto          10
       9: iconst_1
      10: invokestatic  #90                 // Method foldCase:(II)I
      13: ireturn

  public static java.lang.String foldCase(java.lang.String, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_0
       6: goto          10
       9: iconst_1
      10: invokestatic  #91                 // Method foldCase:(Ljava/lang/String;I)Ljava/lang/String;
      13: areturn

  public static int foldCase(int, int);
    Code:
       0: getstatic     #19                 // Field com/ibm/icu/impl/UCaseProps.INSTANCE:Lcom/ibm/icu/impl/UCaseProps;
       3: iload_0
       4: iload_1
       5: invokevirtual #92                 // Method com/ibm/icu/impl/UCaseProps.fold:(II)I
       8: ireturn

  public static final java.lang.String foldCase(java.lang.String, int);
    Code:
       0: iload_1
       1: aload_0
       2: invokestatic  #93                 // Method com/ibm/icu/impl/CaseMapImpl.fold:(ILjava/lang/CharSequence;)Ljava/lang/String;
       5: areturn

  public static int getHanNumericValue(int);
    Code:
       0: iload_0
       1: lookupswitch  { // 28
                 12295: 236
                 19968: 238
                 19971: 251
                 19977: 242
                 20061: 257
                 20108: 240
                 20116: 246
                 20191: 266
                 20237: 246
                 20336: 263
                 20740: 274
                 20843: 254
                 20845: 248
                 21313: 260
                 21315: 266
                 21443: 242
                 22235: 244
                 22777: 238
                 25342: 260
                 25420: 254
                 26578: 251
                 29590: 257
                 30334: 263
                 32902: 244
                 33356: 270
                 36019: 240
                 38520: 248
                 38646: 236
               default: 277
          }
     236: iconst_0
     237: ireturn
     238: iconst_1
     239: ireturn
     240: iconst_2
     241: ireturn
     242: iconst_3
     243: ireturn
     244: iconst_4
     245: ireturn
     246: iconst_5
     247: ireturn
     248: bipush        6
     250: ireturn
     251: bipush        7
     253: ireturn
     254: bipush        8
     256: ireturn
     257: bipush        9
     259: ireturn
     260: bipush        10
     262: ireturn
     263: bipush        100
     265: ireturn
     266: sipush        1000
     269: ireturn
     270: sipush        10000
     273: ireturn
     274: ldc           #94                 // int 100000000
     276: ireturn
     277: iconst_m1
     278: ireturn

  public static com.ibm.icu.util.RangeValueIterator getTypeIterator();
    Code:
       0: new           #95                 // class com/ibm/icu/lang/UCharacter$UCharacterTypeIterator
       3: dup
       4: invokespecial #96                 // Method com/ibm/icu/lang/UCharacter$UCharacterTypeIterator."<init>":()V
       7: areturn

  public static com.ibm.icu.util.ValueIterator getNameIterator();
    Code:
       0: new           #97                 // class com/ibm/icu/lang/UCharacterNameIterator
       3: dup
       4: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       7: iconst_0
       8: invokespecial #98                 // Method com/ibm/icu/lang/UCharacterNameIterator."<init>":(Lcom/ibm/icu/impl/UCharacterName;I)V
      11: areturn

  public static com.ibm.icu.util.ValueIterator getName1_0Iterator();
    Code:
       0: new           #99                 // class com/ibm/icu/lang/UCharacter$DummyValueIterator
       3: dup
       4: aconst_null
       5: invokespecial #100                // Method com/ibm/icu/lang/UCharacter$DummyValueIterator."<init>":(Lcom/ibm/icu/lang/UCharacter$1;)V
       8: areturn

  public static com.ibm.icu.util.ValueIterator getExtendedNameIterator();
    Code:
       0: new           #97                 // class com/ibm/icu/lang/UCharacterNameIterator
       3: dup
       4: getstatic     #45                 // Field com/ibm/icu/impl/UCharacterName.INSTANCE:Lcom/ibm/icu/impl/UCharacterName;
       7: iconst_2
       8: invokespecial #98                 // Method com/ibm/icu/lang/UCharacterNameIterator."<init>":(Lcom/ibm/icu/impl/UCharacterName;I)V
      11: areturn

  public static com.ibm.icu.util.VersionInfo getAge(int);
    Code:
       0: iload_0
       1: iflt          10
       4: iload_0
       5: ldc           #21                 // int 1114111
       7: if_icmple     20
      10: new           #67                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #101                // String Codepoint out of bounds
      16: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
      23: iload_0
      24: invokevirtual #102                // Method com/ibm/icu/impl/UCharacterProperty.getAge:(I)Lcom/ibm/icu/util/VersionInfo;
      27: areturn

  public static boolean hasBinaryProperty(int, int);
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: iload_0
       4: iload_1
       5: invokevirtual #103                // Method com/ibm/icu/impl/UCharacterProperty.hasBinaryProperty:(II)Z
       8: ireturn

  public static boolean isUAlphabetic(int);
    Code:
       0: iload_0
       1: iconst_0
       2: invokestatic  #104                // Method hasBinaryProperty:(II)Z
       5: ireturn

  public static boolean isULowercase(int);
    Code:
       0: iload_0
       1: bipush        22
       3: invokestatic  #104                // Method hasBinaryProperty:(II)Z
       6: ireturn

  public static boolean isUUppercase(int);
    Code:
       0: iload_0
       1: bipush        30
       3: invokestatic  #104                // Method hasBinaryProperty:(II)Z
       6: ireturn

  public static boolean isUWhiteSpace(int);
    Code:
       0: iload_0
       1: bipush        31
       3: invokestatic  #104                // Method hasBinaryProperty:(II)Z
       6: ireturn

  public static int getIntPropertyValue(int, int);
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: iload_0
       4: iload_1
       5: invokevirtual #105                // Method com/ibm/icu/impl/UCharacterProperty.getIntPropertyValue:(II)I
       8: ireturn

  public static java.lang.String getStringPropertyValue(int, int, int);
    Code:
       0: iload_0
       1: iflt          10
       4: iload_0
       5: bipush        64
       7: if_icmplt     24
      10: iload_0
      11: sipush        4096
      14: if_icmplt     35
      17: iload_0
      18: sipush        4118
      21: if_icmpge     35
      24: iload_0
      25: iload_1
      26: iload_0
      27: invokestatic  #106                // Method getIntPropertyValue:(II)I
      30: iload_2
      31: invokestatic  #107                // Method getPropertyValueName:(III)Ljava/lang/String;
      34: areturn
      35: iload_0
      36: sipush        12288
      39: if_icmpne     50
      42: iload_1
      43: invokestatic  #108                // Method getUnicodeNumericValue:(I)D
      46: invokestatic  #109                // Method java/lang/String.valueOf:(D)Ljava/lang/String;
      49: areturn
      50: iload_0
      51: tableswitch   { // 16384 to 16396
                 16384: 116
                 16385: 129
                 16386: 137
                 16387: 124
                 16388: 146
                 16389: 154
                 16390: 159
                 16391: 168
                 16392: 176
                 16393: 184
                 16394: 192
                 16395: 200
                 16396: 205
               default: 213
          }
     116: iload_1
     117: invokestatic  #110                // Method getAge:(I)Lcom/ibm/icu/util/VersionInfo;
     120: invokevirtual #111                // Method com/ibm/icu/util/VersionInfo.toString:()Ljava/lang/String;
     123: areturn
     124: iload_1
     125: invokestatic  #112                // Method getISOComment:(I)Ljava/lang/String;
     128: areturn
     129: iload_1
     130: invokestatic  #113                // Method getMirror:(I)I
     133: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     136: areturn
     137: iload_1
     138: iconst_1
     139: invokestatic  #115                // Method foldCase:(IZ)I
     142: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     145: areturn
     146: iload_1
     147: invokestatic  #116                // Method toLowerCase:(I)I
     150: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     153: areturn
     154: iload_1
     155: invokestatic  #49                 // Method getName:(I)Ljava/lang/String;
     158: areturn
     159: iload_1
     160: iconst_1
     161: invokestatic  #115                // Method foldCase:(IZ)I
     164: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     167: areturn
     168: iload_1
     169: invokestatic  #116                // Method toLowerCase:(I)I
     172: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     175: areturn
     176: iload_1
     177: invokestatic  #117                // Method toTitleCase:(I)I
     180: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     183: areturn
     184: iload_1
     185: invokestatic  #118                // Method toUpperCase:(I)I
     188: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     191: areturn
     192: iload_1
     193: invokestatic  #117                // Method toTitleCase:(I)I
     196: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     199: areturn
     200: iload_1
     201: invokestatic  #119                // Method getName1_0:(I)Ljava/lang/String;
     204: areturn
     205: iload_1
     206: invokestatic  #118                // Method toUpperCase:(I)I
     209: invokestatic  #114                // Method toString:(I)Ljava/lang/String;
     212: areturn
     213: new           #67                 // class java/lang/IllegalArgumentException
     216: dup
     217: ldc           #120                // String Illegal Property Enum
     219: invokespecial #73                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     222: athrow

  public static int getIntPropertyMinValue(int);
    Code:
       0: iconst_0
       1: ireturn

  public static int getIntPropertyMaxValue(int);
    Code:
       0: getstatic     #4                  // Field com/ibm/icu/impl/UCharacterProperty.INSTANCE:Lcom/ibm/icu/impl/UCharacterProperty;
       3: iload_0
       4: invokevirtual #121                // Method com/ibm/icu/impl/UCharacterProperty.getIntPropertyMaxValue:(I)I
       7: ireturn

  public static char forDigit(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #122                // Method java/lang/Character.forDigit:(II)C
       5: ireturn

  public static final boolean isValidCodePoint(int);
    Code:
       0: iload_0
       1: iflt          14
       4: iload_0
       5: ldc           #21                 // int 1114111
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public static final boolean isSupplementaryCodePoint(int);
    Code:
       0: iload_0
       1: invokestatic  #123                // Method java/lang/Character.isSupplementaryCodePoint:(I)Z
       4: ireturn

  public static boolean isHighSurrogate(char);
    Code:
       0: iload_0
       1: invokestatic  #124                // Method java/lang/Character.isHighSurrogate:(C)Z
       4: ireturn

  public static boolean isLowSurrogate(char);
    Code:
       0: iload_0
       1: invokestatic  #125                // Method java/lang/Character.isLowSurrogate:(C)Z
       4: ireturn

  public static final boolean isSurrogatePair(char, char);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #70                 // Method java/lang/Character.isSurrogatePair:(CC)Z
       5: ireturn

  public static int charCount(int);
    Code:
       0: iload_0
       1: invokestatic  #43                 // Method java/lang/Character.charCount:(I)I
       4: ireturn

  public static final int toCodePoint(char, char);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #71                 // Method java/lang/Character.toCodePoint:(CC)I
       5: ireturn

  public static final int codePointAt(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: iload_1
       2: iinc          1, 1
       5: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      10: istore_2
      11: iload_2
      12: invokestatic  #127                // Method isHighSurrogate:(C)Z
      15: ifeq          49
      18: iload_1
      19: aload_0
      20: invokeinterface #128,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      25: if_icmpge     49
      28: aload_0
      29: iload_1
      30: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      35: istore_3
      36: iload_3
      37: invokestatic  #129                // Method isLowSurrogate:(C)Z
      40: ifeq          49
      43: iload_2
      44: iload_3
      45: invokestatic  #130                // Method toCodePoint:(CC)I
      48: ireturn
      49: iload_2
      50: ireturn

  public static final int codePointAt(char[], int);
    Code:
       0: aload_0
       1: iload_1
       2: iinc          1, 1
       5: caload
       6: istore_2
       7: iload_2
       8: invokestatic  #127                // Method isHighSurrogate:(C)Z
      11: ifeq          37
      14: iload_1
      15: aload_0
      16: arraylength
      17: if_icmpge     37
      20: aload_0
      21: iload_1
      22: caload
      23: istore_3
      24: iload_3
      25: invokestatic  #129                // Method isLowSurrogate:(C)Z
      28: ifeq          37
      31: iload_2
      32: iload_3
      33: invokestatic  #130                // Method toCodePoint:(CC)I
      36: ireturn
      37: iload_2
      38: ireturn

  public static final int codePointAt(char[], int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmpge     11
       5: iload_2
       6: aload_0
       7: arraylength
       8: if_icmple     19
      11: new           #131                // class java/lang/IndexOutOfBoundsException
      14: dup
      15: invokespecial #132                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      18: athrow
      19: aload_0
      20: iload_1
      21: iinc          1, 1
      24: caload
      25: istore_3
      26: iload_3
      27: invokestatic  #127                // Method isHighSurrogate:(C)Z
      30: ifeq          58
      33: iload_1
      34: iload_2
      35: if_icmpge     58
      38: aload_0
      39: iload_1
      40: caload
      41: istore        4
      43: iload         4
      45: invokestatic  #129                // Method isLowSurrogate:(C)Z
      48: ifeq          58
      51: iload_3
      52: iload         4
      54: invokestatic  #130                // Method toCodePoint:(CC)I
      57: ireturn
      58: iload_3
      59: ireturn

  public static final int codePointBefore(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: iinc          1, -1
       4: iload_1
       5: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      10: istore_2
      11: iload_2
      12: invokestatic  #129                // Method isLowSurrogate:(C)Z
      15: ifeq          46
      18: iload_1
      19: ifle          46
      22: aload_0
      23: iinc          1, -1
      26: iload_1
      27: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      32: istore_3
      33: iload_3
      34: invokestatic  #127                // Method isHighSurrogate:(C)Z
      37: ifeq          46
      40: iload_3
      41: iload_2
      42: invokestatic  #130                // Method toCodePoint:(CC)I
      45: ireturn
      46: iload_2
      47: ireturn

  public static final int codePointBefore(char[], int);
    Code:
       0: aload_0
       1: iinc          1, -1
       4: iload_1
       5: caload
       6: istore_2
       7: iload_2
       8: invokestatic  #129                // Method isLowSurrogate:(C)Z
      11: ifeq          38
      14: iload_1
      15: ifle          38
      18: aload_0
      19: iinc          1, -1
      22: iload_1
      23: caload
      24: istore_3
      25: iload_3
      26: invokestatic  #127                // Method isHighSurrogate:(C)Z
      29: ifeq          38
      32: iload_3
      33: iload_2
      34: invokestatic  #130                // Method toCodePoint:(CC)I
      37: ireturn
      38: iload_2
      39: ireturn

  public static final int codePointBefore(char[], int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmple     9
       5: iload_2
       6: ifge          17
       9: new           #131                // class java/lang/IndexOutOfBoundsException
      12: dup
      13: invokespecial #132                // Method java/lang/IndexOutOfBoundsException."<init>":()V
      16: athrow
      17: aload_0
      18: iinc          1, -1
      21: iload_1
      22: caload
      23: istore_3
      24: iload_3
      25: invokestatic  #129                // Method isLowSurrogate:(C)Z
      28: ifeq          59
      31: iload_1
      32: iload_2
      33: if_icmple     59
      36: aload_0
      37: iinc          1, -1
      40: iload_1
      41: caload
      42: istore        4
      44: iload         4
      46: invokestatic  #127                // Method isHighSurrogate:(C)Z
      49: ifeq          59
      52: iload         4
      54: iload_3
      55: invokestatic  #130                // Method toCodePoint:(CC)I
      58: ireturn
      59: iload_3
      60: ireturn

  public static final int toChars(int, char[], int);
    Code:
       0: iload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #133                // Method java/lang/Character.toChars:(I[CI)I
       6: ireturn

  public static final char[] toChars(int);
    Code:
       0: iload_0
       1: invokestatic  #25                 // Method java/lang/Character.toChars:(I)[C
       4: areturn

  public static byte getDirectionality(int);
    Code:
       0: iload_0
       1: invokestatic  #134                // Method getDirection:(I)I
       4: i2b
       5: ireturn

  public static int codePointCount(java.lang.CharSequence, int, int);
    Code:
       0: iload_1
       1: iflt          19
       4: iload_2
       5: iload_1
       6: if_icmplt     19
       9: iload_2
      10: aload_0
      11: invokeinterface #128,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      16: if_icmple     69
      19: new           #131                // class java/lang/IndexOutOfBoundsException
      22: dup
      23: new           #50                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #135                // String start (
      32: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_1
      36: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #137                // String ) or limit (
      41: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_2
      45: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #138                // String ) invalid or out of range 0,
      50: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: invokeinterface #128,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      59: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: iload_2
      70: iload_1
      71: isub
      72: istore_3
      73: iload_2
      74: iload_1
      75: if_icmple     144
      78: aload_0
      79: iinc          2, -1
      82: iload_2
      83: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      88: istore        4
      90: iload         4
      92: ldc           #140                // int 56320
      94: if_icmplt     141
      97: iload         4
      99: ldc           #38                 // int 57343
     101: if_icmpgt     141
     104: iload_2
     105: iload_1
     106: if_icmple     141
     109: aload_0
     110: iinc          2, -1
     113: iload_2
     114: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     119: istore        4
     121: iload         4
     123: ldc           #37                 // int 55296
     125: if_icmplt     90
     128: iload         4
     130: ldc           #141                // int 56319
     132: if_icmpgt     90
     135: iinc          3, -1
     138: goto          141
     141: goto          73
     144: iload_3
     145: ireturn

  public static int codePointCount(char[], int, int);
    Code:
       0: iload_1
       1: iflt          15
       4: iload_2
       5: iload_1
       6: if_icmplt     15
       9: iload_2
      10: aload_0
      11: arraylength
      12: if_icmple     61
      15: new           #131                // class java/lang/IndexOutOfBoundsException
      18: dup
      19: new           #50                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #135                // String start (
      28: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_1
      32: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #137                // String ) or limit (
      37: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: iload_2
      41: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #138                // String ) invalid or out of range 0,
      46: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: arraylength
      51: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      54: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: iload_2
      62: iload_1
      63: isub
      64: istore_3
      65: iload_2
      66: iload_1
      67: if_icmple     128
      70: aload_0
      71: iinc          2, -1
      74: iload_2
      75: caload
      76: istore        4
      78: iload         4
      80: ldc           #140                // int 56320
      82: if_icmplt     125
      85: iload         4
      87: ldc           #38                 // int 57343
      89: if_icmpgt     125
      92: iload_2
      93: iload_1
      94: if_icmple     125
      97: aload_0
      98: iinc          2, -1
     101: iload_2
     102: caload
     103: istore        4
     105: iload         4
     107: ldc           #37                 // int 55296
     109: if_icmplt     78
     112: iload         4
     114: ldc           #141                // int 56319
     116: if_icmpgt     78
     119: iinc          3, -1
     122: goto          125
     125: goto          65
     128: iload_3
     129: ireturn

  public static int offsetByCodePoints(java.lang.CharSequence, int, int);
    Code:
       0: iload_1
       1: iflt          14
       4: iload_1
       5: aload_0
       6: invokeinterface #128,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      11: if_icmple     55
      14: new           #131                // class java/lang/IndexOutOfBoundsException
      17: dup
      18: new           #50                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #142                // String index (
      27: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #143                // String ) out of range 0,
      36: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokeinterface #128,  1          // InterfaceMethod java/lang/CharSequence.length:()I
      45: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: iload_2
      56: ifge          130
      59: iinc          2, 1
      62: iload_2
      63: ifgt          215
      66: aload_0
      67: iinc          1, -1
      70: iload_1
      71: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      76: istore_3
      77: iload_3
      78: ldc           #140                // int 56320
      80: if_icmplt     127
      83: iload_3
      84: ldc           #38                 // int 57343
      86: if_icmpgt     127
      89: iload_1
      90: ifle          127
      93: aload_0
      94: iinc          1, -1
      97: iload_1
      98: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     103: istore_3
     104: iload_3
     105: ldc           #37                 // int 55296
     107: if_icmplt     116
     110: iload_3
     111: ldc           #141                // int 56319
     113: if_icmple     77
     116: iinc          2, 1
     119: iload_2
     120: ifle          77
     123: iload_1
     124: iconst_1
     125: iadd
     126: ireturn
     127: goto          59
     130: aload_0
     131: invokeinterface #128,  1          // InterfaceMethod java/lang/CharSequence.length:()I
     136: istore_3
     137: iinc          2, -1
     140: iload_2
     141: iflt          215
     144: aload_0
     145: iload_1
     146: iinc          1, 1
     149: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     154: istore        4
     156: iload         4
     158: ldc           #37                 // int 55296
     160: if_icmplt     212
     163: iload         4
     165: ldc           #141                // int 56319
     167: if_icmpgt     212
     170: iload_1
     171: iload_3
     172: if_icmpge     212
     175: aload_0
     176: iload_1
     177: iinc          1, 1
     180: invokeinterface #126,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     185: istore        4
     187: iload         4
     189: ldc           #140                // int 56320
     191: if_icmplt     201
     194: iload         4
     196: ldc           #38                 // int 57343
     198: if_icmple     156
     201: iinc          2, -1
     204: iload_2
     205: ifge          156
     208: iload_1
     209: iconst_1
     210: isub
     211: ireturn
     212: goto          137
     215: iload_1
     216: ireturn

  public static int offsetByCodePoints(char[], int, int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: istore        5
       5: iload_1
       6: iflt          33
       9: iload         5
      11: iload_1
      12: if_icmplt     33
      15: iload         5
      17: aload_0
      18: arraylength
      19: if_icmpgt     33
      22: iload_3
      23: iload_1
      24: if_icmplt     33
      27: iload_3
      28: iload         5
      30: if_icmple     89
      33: new           #131                // class java/lang/IndexOutOfBoundsException
      36: dup
      37: new           #50                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #142                // String index (
      46: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_3
      50: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #144                // String ) out of range
      55: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: iload_1
      59: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: ldc           #145                // String ,
      64: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: iload         5
      69: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      72: ldc           #146                // String  in array 0,
      74: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: arraylength
      79: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: iload         4
      91: ifge          212
      94: iinc          4, 1
      97: iload         4
      99: ifgt          333
     102: aload_0
     103: iinc          3, -1
     106: iload_3
     107: caload
     108: istore        6
     110: iload_3
     111: iload_1
     112: if_icmpge     156
     115: new           #131                // class java/lang/IndexOutOfBoundsException
     118: dup
     119: new           #50                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     126: ldc           #142                // String index (
     128: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: iload_3
     132: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: ldc           #147                // String ) < start (
     137: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: iload_1
     141: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     144: ldc           #148                // String )
     146: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     155: athrow
     156: iload         6
     158: ldc           #140                // int 56320
     160: if_icmplt     209
     163: iload         6
     165: ldc           #38                 // int 57343
     167: if_icmpgt     209
     170: iload_3
     171: iload_1
     172: if_icmple     209
     175: aload_0
     176: iinc          3, -1
     179: iload_3
     180: caload
     181: istore        6
     183: iload         6
     185: ldc           #37                 // int 55296
     187: if_icmplt     197
     190: iload         6
     192: ldc           #141                // int 56319
     194: if_icmple     156
     197: iinc          4, 1
     200: iload         4
     202: ifle          156
     205: iload_3
     206: iconst_1
     207: iadd
     208: ireturn
     209: goto          94
     212: iinc          4, -1
     215: iload         4
     217: iflt          333
     220: aload_0
     221: iload_3
     222: iinc          3, 1
     225: caload
     226: istore        6
     228: iload_3
     229: iload         5
     231: if_icmple     276
     234: new           #131                // class java/lang/IndexOutOfBoundsException
     237: dup
     238: new           #50                 // class java/lang/StringBuilder
     241: dup
     242: invokespecial #51                 // Method java/lang/StringBuilder."<init>":()V
     245: ldc           #142                // String index (
     247: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: iload_3
     251: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     254: ldc           #149                // String ) > limit (
     256: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     259: iload         5
     261: invokevirtual #136                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     264: ldc           #148                // String )
     266: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     272: invokespecial #139                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
     275: athrow
     276: iload         6
     278: ldc           #37                 // int 55296
     280: if_icmplt     330
     283: iload         6
     285: ldc           #141                // int 56319
     287: if_icmpgt     330
     290: iload_3
     291: iload         5
     293: if_icmpge     330
     296: aload_0
     297: iload_3
     298: iinc          3, 1
     301: caload
     302: istore        6
     304: iload         6
     306: ldc           #140                // int 56320
     308: if_icmplt     318
     311: iload         6
     313: ldc           #38                 // int 57343
     315: if_icmple     276
     318: iinc          4, -1
     321: iload         4
     323: ifge          276
     326: iload_3
     327: iconst_1
     328: isub
     329: ireturn
     330: goto          212
     333: iload_3
     334: ireturn

  private com.ibm.icu.lang.UCharacter();
    Code:
       0: aload_0
       1: invokespecial #150                // Method java/lang/Object."<init>":()V
       4: return
}
