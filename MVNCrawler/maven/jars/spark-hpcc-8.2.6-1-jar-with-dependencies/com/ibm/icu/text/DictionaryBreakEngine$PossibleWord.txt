Compiled from "DictionaryBreakEngine.java"
class com.ibm.icu.text.DictionaryBreakEngine$PossibleWord {
  private static final int POSSIBLE_WORD_LIST_MAX;

  private int[] lengths;

  private int[] count;

  private int prefix;

  private int offset;

  private int mark;

  private int current;

  public com.ibm.icu.text.DictionaryBreakEngine$PossibleWord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        20
       7: newarray       int
       9: putfield      #3                  // Field lengths:[I
      12: aload_0
      13: iconst_1
      14: newarray       int
      16: putfield      #4                  // Field count:[I
      19: aload_0
      20: iconst_m1
      21: putfield      #5                  // Field offset:I
      24: return

  public int candidates(java.text.CharacterIterator, com.ibm.icu.text.DictionaryMatcher, int);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod java/text/CharacterIterator.getIndex:()I
       6: istore        4
       8: iload         4
      10: aload_0
      11: getfield      #5                  // Field offset:I
      14: if_icmpeq     67
      17: aload_0
      18: iload         4
      20: putfield      #5                  // Field offset:I
      23: aload_0
      24: aload_2
      25: aload_1
      26: iload_3
      27: iload         4
      29: isub
      30: aload_0
      31: getfield      #3                  // Field lengths:[I
      34: aload_0
      35: getfield      #4                  // Field count:[I
      38: aload_0
      39: getfield      #3                  // Field lengths:[I
      42: arraylength
      43: invokevirtual #7                  // Method com/ibm/icu/text/DictionaryMatcher.matches:(Ljava/text/CharacterIterator;I[I[II)I
      46: putfield      #8                  // Field prefix:I
      49: aload_0
      50: getfield      #4                  // Field count:[I
      53: iconst_0
      54: iaload
      55: ifgt          67
      58: aload_1
      59: iload         4
      61: invokeinterface #9,  2            // InterfaceMethod java/text/CharacterIterator.setIndex:(I)C
      66: pop
      67: aload_0
      68: getfield      #4                  // Field count:[I
      71: iconst_0
      72: iaload
      73: ifle          99
      76: aload_1
      77: iload         4
      79: aload_0
      80: getfield      #3                  // Field lengths:[I
      83: aload_0
      84: getfield      #4                  // Field count:[I
      87: iconst_0
      88: iaload
      89: iconst_1
      90: isub
      91: iaload
      92: iadd
      93: invokeinterface #9,  2            // InterfaceMethod java/text/CharacterIterator.setIndex:(I)C
      98: pop
      99: aload_0
     100: aload_0
     101: getfield      #4                  // Field count:[I
     104: iconst_0
     105: iaload
     106: iconst_1
     107: isub
     108: putfield      #10                 // Field current:I
     111: aload_0
     112: aload_0
     113: getfield      #10                 // Field current:I
     116: putfield      #11                 // Field mark:I
     119: aload_0
     120: getfield      #4                  // Field count:[I
     123: iconst_0
     124: iaload
     125: ireturn

  public int acceptMarked(java.text.CharacterIterator);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field offset:I
       5: aload_0
       6: getfield      #3                  // Field lengths:[I
       9: aload_0
      10: getfield      #11                 // Field mark:I
      13: iaload
      14: iadd
      15: invokeinterface #9,  2            // InterfaceMethod java/text/CharacterIterator.setIndex:(I)C
      20: pop
      21: aload_0
      22: getfield      #3                  // Field lengths:[I
      25: aload_0
      26: getfield      #11                 // Field mark:I
      29: iaload
      30: ireturn

  public boolean backUp(java.text.CharacterIterator);
    Code:
       0: aload_0
       1: getfield      #10                 // Field current:I
       4: ifle          37
       7: aload_1
       8: aload_0
       9: getfield      #5                  // Field offset:I
      12: aload_0
      13: getfield      #3                  // Field lengths:[I
      16: aload_0
      17: dup
      18: getfield      #10                 // Field current:I
      21: iconst_1
      22: isub
      23: dup_x1
      24: putfield      #10                 // Field current:I
      27: iaload
      28: iadd
      29: invokeinterface #9,  2            // InterfaceMethod java/text/CharacterIterator.setIndex:(I)C
      34: pop
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public int longestPrefix();
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefix:I
       4: ireturn

  public void markCurrent();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field current:I
       5: putfield      #11                 // Field mark:I
       8: return
}
