Compiled from "NFSubstitution.java"
class com.ibm.icu.text.MultiplierSubstitution extends com.ibm.icu.text.NFSubstitution {
  long divisor;

  com.ibm.icu.text.MultiplierSubstitution(int, com.ibm.icu.text.NFRule, com.ibm.icu.text.NFRuleSet, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_3
       3: aload         4
       5: invokespecial #1                  // Method com/ibm/icu/text/NFSubstitution."<init>":(ILcom/ibm/icu/text/NFRuleSet;Ljava/lang/String;)V
       8: aload_0
       9: aload_2
      10: invokevirtual #2                  // Method com/ibm/icu/text/NFRule.getDivisor:()J
      13: putfield      #3                  // Field divisor:J
      16: aload_0
      17: getfield      #3                  // Field divisor:J
      20: lconst_0
      21: lcmp
      22: ifne          72
      25: new           #4                  // class java/lang/IllegalStateException
      28: dup
      29: new           #5                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #7                  // String Substitution with divisor 0
      38: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload         4
      43: iconst_0
      44: iload_1
      45: invokevirtual #9                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      48: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #10                 // String  |
      53: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: iload_1
      59: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      62: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public void setDivisor(int, short);
    Code:
       0: aload_0
       1: iload_1
       2: i2l
       3: iload_2
       4: invokestatic  #14                 // Method com/ibm/icu/text/NFRule.power:(JS)J
       7: putfield      #3                  // Field divisor:J
      10: aload_0
      11: getfield      #3                  // Field divisor:J
      14: lconst_0
      15: lcmp
      16: ifne          29
      19: new           #4                  // class java/lang/IllegalStateException
      22: dup
      23: ldc           #15                 // String Substitution with divisor 0
      25: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method com/ibm/icu/text/NFSubstitution.equals:(Ljava/lang/Object;)Z
       5: ifeq          27
       8: aload_0
       9: getfield      #3                  // Field divisor:J
      12: aload_1
      13: checkcast     #17                 // class com/ibm/icu/text/MultiplierSubstitution
      16: getfield      #3                  // Field divisor:J
      19: lcmp
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public long transformNumber(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #3                  // Field divisor:J
       5: ldiv
       6: l2d
       7: invokestatic  #18                 // Method java/lang/Math.floor:(D)D
      10: d2l
      11: lreturn

  public double transformNumber(double);
    Code:
       0: aload_0
       1: getfield      #19                 // Field ruleSet:Lcom/ibm/icu/text/NFRuleSet;
       4: ifnonnull     15
       7: dload_1
       8: aload_0
       9: getfield      #3                  // Field divisor:J
      12: l2d
      13: ddiv
      14: dreturn
      15: dload_1
      16: aload_0
      17: getfield      #3                  // Field divisor:J
      20: l2d
      21: ddiv
      22: invokestatic  #18                 // Method java/lang/Math.floor:(D)D
      25: dreturn

  public double composeRuleValue(double, double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #3                  // Field divisor:J
       5: l2d
       6: dmul
       7: dreturn

  public double calcUpperBound(double);
    Code:
       0: aload_0
       1: getfield      #3                  // Field divisor:J
       4: l2d
       5: dreturn

  char tokenChar();
    Code:
       0: bipush        60
       2: ireturn
}
