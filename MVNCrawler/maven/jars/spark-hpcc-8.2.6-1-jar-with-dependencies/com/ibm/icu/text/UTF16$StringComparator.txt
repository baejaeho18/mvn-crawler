Compiled from "UTF16.java"
public final class com.ibm.icu.text.UTF16$StringComparator implements java.util.Comparator<java.lang.String> {
  public static final int FOLD_CASE_DEFAULT;

  public static final int FOLD_CASE_EXCLUDE_SPECIAL_I;

  private int m_codePointCompare_;

  private int m_foldCase_;

  private boolean m_ignoreCase_;

  private static final int CODE_POINT_COMPARE_SURROGATE_OFFSET_;

  public com.ibm.icu.text.UTF16$StringComparator();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: iconst_0
       4: invokespecial #3                  // Method "<init>":(ZZI)V
       7: return

  public com.ibm.icu.text.UTF16$StringComparator(boolean, boolean, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: invokevirtual #5                  // Method setCodePointCompare:(Z)V
       9: aload_0
      10: iload_2
      11: putfield      #6                  // Field m_ignoreCase_:Z
      14: iload_3
      15: iflt          23
      18: iload_3
      19: iconst_1
      20: if_icmple     33
      23: new           #7                  // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #8                  // String Invalid fold case option
      29: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: iload_3
      35: putfield      #10                 // Field m_foldCase_:I
      38: return

  public void setCodePointCompare(boolean);
    Code:
       0: iload_1
       1: ifeq          13
       4: aload_0
       5: ldc           #12                 // int 32768
       7: putfield      #13                 // Field m_codePointCompare_:I
      10: goto          18
      13: aload_0
      14: iconst_0
      15: putfield      #13                 // Field m_codePointCompare_:I
      18: return

  public void setIgnoreCase(boolean, int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field m_ignoreCase_:Z
       5: iload_2
       6: iflt          14
       9: iload_2
      10: iconst_1
      11: if_icmple     24
      14: new           #7                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #8                  // String Invalid fold case option
      20: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_2
      26: putfield      #10                 // Field m_foldCase_:I
      29: return

  public boolean getCodePointCompare();
    Code:
       0: aload_0
       1: getfield      #13                 // Field m_codePointCompare_:I
       4: ldc           #12                 // int 32768
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean getIgnoreCase();
    Code:
       0: aload_0
       1: getfield      #6                  // Field m_ignoreCase_:Z
       4: ireturn

  public int getIgnoreCaseOption();
    Code:
       0: aload_0
       1: getfield      #10                 // Field m_foldCase_:I
       4: ireturn

  public int compare(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #14                 // Method com/ibm/icu/impl/Utility.sameObjects:(Ljava/lang/Object;Ljava/lang/Object;)Z
       5: ifeq          10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: ifnonnull     16
      14: iconst_m1
      15: ireturn
      16: aload_2
      17: ifnonnull     22
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #6                  // Field m_ignoreCase_:Z
      26: ifeq          36
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #15                 // Method compareCaseInsensitive:(Ljava/lang/String;Ljava/lang/String;)I
      35: ireturn
      36: aload_0
      37: aload_1
      38: aload_2
      39: invokespecial #16                 // Method compareCaseSensitive:(Ljava/lang/String;Ljava/lang/String;)I
      42: ireturn

  private int compareCaseInsensitive(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: getfield      #10                 // Field m_foldCase_:I
       6: aload_0
       7: getfield      #13                 // Field m_codePointCompare_:I
      10: ior
      11: ldc           #17                 // int 65536
      13: ior
      14: invokestatic  #18                 // Method com/ibm/icu/text/Normalizer.cmpEquivFold:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;I)I
      17: ireturn

  private int compareCaseSensitive(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method java/lang/String.length:()I
       4: istore_3
       5: aload_2
       6: invokevirtual #19                 // Method java/lang/String.length:()I
       9: istore        4
      11: iload_3
      12: istore        5
      14: iconst_0
      15: istore        6
      17: iload_3
      18: iload         4
      20: if_icmpge     29
      23: iconst_m1
      24: istore        6
      26: goto          42
      29: iload_3
      30: iload         4
      32: if_icmple     42
      35: iconst_1
      36: istore        6
      38: iload         4
      40: istore        5
      42: iconst_0
      43: istore        7
      45: iconst_0
      46: istore        8
      48: iconst_0
      49: istore        9
      51: iload         9
      53: iload         5
      55: if_icmpge     90
      58: aload_1
      59: iload         9
      61: invokevirtual #20                 // Method java/lang/String.charAt:(I)C
      64: istore        7
      66: aload_2
      67: iload         9
      69: invokevirtual #20                 // Method java/lang/String.charAt:(I)C
      72: istore        8
      74: iload         7
      76: iload         8
      78: if_icmpeq     84
      81: goto          90
      84: iinc          9, 1
      87: goto          51
      90: iload         9
      92: iload         5
      94: if_icmpne     100
      97: iload         6
      99: ireturn
     100: aload_0
     101: getfield      #13                 // Field m_codePointCompare_:I
     104: ldc           #12                 // int 32768
     106: if_icmpne     113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: istore        10
     116: iload         7
     118: ldc           #21                 // int 55296
     120: if_icmplt     272
     123: iload         8
     125: ldc           #21                 // int 55296
     127: if_icmplt     272
     130: iload         10
     132: ifeq          272
     135: iload         7
     137: ldc           #22                 // int 56319
     139: if_icmpgt     164
     142: iload         9
     144: iconst_1
     145: iadd
     146: iload_3
     147: if_icmpeq     164
     150: aload_1
     151: iload         9
     153: iconst_1
     154: iadd
     155: invokevirtual #20                 // Method java/lang/String.charAt:(I)C
     158: invokestatic  #23                 // Method com/ibm/icu/text/UTF16.isTrailSurrogate:(C)Z
     161: ifne          203
     164: iload         7
     166: invokestatic  #23                 // Method com/ibm/icu/text/UTF16.isTrailSurrogate:(C)Z
     169: ifeq          194
     172: iload         9
     174: ifeq          194
     177: aload_1
     178: iload         9
     180: iconst_1
     181: isub
     182: invokevirtual #20                 // Method java/lang/String.charAt:(I)C
     185: invokestatic  #24                 // Method com/ibm/icu/text/UTF16.isLeadSurrogate:(C)Z
     188: ifeq          194
     191: goto          203
     194: iload         7
     196: sipush        10240
     199: isub
     200: i2c
     201: istore        7
     203: iload         8
     205: ldc           #22                 // int 56319
     207: if_icmpgt     233
     210: iload         9
     212: iconst_1
     213: iadd
     214: iload         4
     216: if_icmpeq     233
     219: aload_2
     220: iload         9
     222: iconst_1
     223: iadd
     224: invokevirtual #20                 // Method java/lang/String.charAt:(I)C
     227: invokestatic  #23                 // Method com/ibm/icu/text/UTF16.isTrailSurrogate:(C)Z
     230: ifne          272
     233: iload         8
     235: invokestatic  #23                 // Method com/ibm/icu/text/UTF16.isTrailSurrogate:(C)Z
     238: ifeq          263
     241: iload         9
     243: ifeq          263
     246: aload_2
     247: iload         9
     249: iconst_1
     250: isub
     251: invokevirtual #20                 // Method java/lang/String.charAt:(I)C
     254: invokestatic  #24                 // Method com/ibm/icu/text/UTF16.isLeadSurrogate:(C)Z
     257: ifeq          263
     260: goto          272
     263: iload         8
     265: sipush        10240
     268: isub
     269: i2c
     270: istore        8
     272: iload         7
     274: iload         8
     276: isub
     277: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class java/lang/String
       5: aload_2
       6: checkcast     #25                 // class java/lang/String
       9: invokevirtual #26                 // Method compare:(Ljava/lang/String;Ljava/lang/String;)I
      12: ireturn
}
