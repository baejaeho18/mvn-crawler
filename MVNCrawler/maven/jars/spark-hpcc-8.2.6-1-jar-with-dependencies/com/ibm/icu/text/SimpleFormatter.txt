Compiled from "SimpleFormatter.java"
public final class com.ibm.icu.text.SimpleFormatter {
  private final java.lang.String compiledPattern;

  private com.ibm.icu.text.SimpleFormatter(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field compiledPattern:Ljava/lang/String;
       9: return

  public static com.ibm.icu.text.SimpleFormatter compile(java.lang.CharSequence);
    Code:
       0: aload_0
       1: iconst_0
       2: ldc           #4                  // int 2147483647
       4: invokestatic  #5                  // Method compileMinMaxArguments:(Ljava/lang/CharSequence;II)Lcom/ibm/icu/text/SimpleFormatter;
       7: areturn

  public static com.ibm.icu.text.SimpleFormatter compileMinMaxArguments(java.lang.CharSequence, int, int);
    Code:
       0: new           #6                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_3
      10: iload_1
      11: iload_2
      12: invokestatic  #8                  // Method com/ibm/icu/impl/SimpleFormatterImpl.compileToStringMinMaxArguments:(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;II)Ljava/lang/String;
      15: astore        4
      17: new           #9                  // class com/ibm/icu/text/SimpleFormatter
      20: dup
      21: aload         4
      23: invokespecial #10                 // Method "<init>":(Ljava/lang/String;)V
      26: areturn

  public int getArgumentLimit();
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiledPattern:Ljava/lang/String;
       4: invokestatic  #11                 // Method com/ibm/icu/impl/SimpleFormatterImpl.getArgumentLimit:(Ljava/lang/String;)I
       7: ireturn

  public java.lang.String format(java.lang.CharSequence...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiledPattern:Ljava/lang/String;
       4: aload_1
       5: invokestatic  #12                 // Method com/ibm/icu/impl/SimpleFormatterImpl.formatCompiledPattern:(Ljava/lang/String;[Ljava/lang/CharSequence;)Ljava/lang/String;
       8: areturn

  public java.lang.StringBuilder formatAndAppend(java.lang.StringBuilder, int[], java.lang.CharSequence...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiledPattern:Ljava/lang/String;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #13                 // Method com/ibm/icu/impl/SimpleFormatterImpl.formatAndAppend:(Ljava/lang/String;Ljava/lang/StringBuilder;[I[Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      10: areturn

  public java.lang.StringBuilder formatAndReplace(java.lang.StringBuilder, int[], java.lang.CharSequence...);
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiledPattern:Ljava/lang/String;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokestatic  #14                 // Method com/ibm/icu/impl/SimpleFormatterImpl.formatAndReplace:(Ljava/lang/String;Ljava/lang/StringBuilder;[I[Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      10: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getArgumentLimit:()I
       4: anewarray     #16                 // class java/lang/String
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_1
      12: arraylength
      13: if_icmpge     49
      16: aload_1
      17: iload_2
      18: new           #6                  // class java/lang/StringBuilder
      21: dup
      22: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #17                 // String {
      27: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_2
      31: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: bipush        125
      36: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: aastore
      43: iinc          2, 1
      46: goto          10
      49: aload_0
      50: new           #6                  // class java/lang/StringBuilder
      53: dup
      54: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      57: aconst_null
      58: aload_1
      59: invokevirtual #22                 // Method formatAndAppend:(Ljava/lang/StringBuilder;[I[Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      62: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: areturn

  public java.lang.String getTextWithNoArguments();
    Code:
       0: aload_0
       1: getfield      #2                  // Field compiledPattern:Ljava/lang/String;
       4: invokestatic  #23                 // Method com/ibm/icu/impl/SimpleFormatterImpl.getTextWithNoArguments:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn
}
