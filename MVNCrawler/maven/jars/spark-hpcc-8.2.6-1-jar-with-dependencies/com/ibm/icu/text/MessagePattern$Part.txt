Compiled from "MessagePattern.java"
public final class com.ibm.icu.text.MessagePattern$Part {
  private static final int MAX_LENGTH;

  private static final int MAX_VALUE;

  private final com.ibm.icu.text.MessagePattern$Part$Type type;

  private final int index;

  private final char length;

  private short value;

  private int limitPartIndex;

  private com.ibm.icu.text.MessagePattern$Part(com.ibm.icu.text.MessagePattern$Part$Type, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
       9: aload_0
      10: iload_2
      11: putfield      #7                  // Field index:I
      14: aload_0
      15: iload_3
      16: i2c
      17: putfield      #4                  // Field length:C
      20: aload_0
      21: iload         4
      23: i2s
      24: putfield      #6                  // Field value:S
      27: return

  public com.ibm.icu.text.MessagePattern$Part$Type getType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
       4: areturn

  public int getIndex();
    Code:
       0: aload_0
       1: getfield      #7                  // Field index:I
       4: ireturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:C
       4: ireturn

  public int getLimit();
    Code:
       0: aload_0
       1: getfield      #7                  // Field index:I
       4: aload_0
       5: getfield      #4                  // Field length:C
       8: iadd
       9: ireturn

  public int getValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:S
       4: ireturn

  public com.ibm.icu.text.MessagePattern$ArgType getArgType();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getType:()Lcom/ibm/icu/text/MessagePattern$Part$Type;
       4: astore_1
       5: aload_1
       6: getstatic     #10                 // Field com/ibm/icu/text/MessagePattern$Part$Type.ARG_START:Lcom/ibm/icu/text/MessagePattern$Part$Type;
       9: if_acmpeq     19
      12: aload_1
      13: getstatic     #11                 // Field com/ibm/icu/text/MessagePattern$Part$Type.ARG_LIMIT:Lcom/ibm/icu/text/MessagePattern$Part$Type;
      16: if_acmpne     28
      19: invokestatic  #12                 // Method com/ibm/icu/text/MessagePattern.access$500:()[Lcom/ibm/icu/text/MessagePattern$ArgType;
      22: aload_0
      23: getfield      #6                  // Field value:S
      26: aaload
      27: areturn
      28: getstatic     #13                 // Field com/ibm/icu/text/MessagePattern$ArgType.NONE:Lcom/ibm/icu/text/MessagePattern$ArgType;
      31: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
       4: getstatic     #10                 // Field com/ibm/icu/text/MessagePattern$Part$Type.ARG_START:Lcom/ibm/icu/text/MessagePattern$Part$Type;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
      14: getstatic     #11                 // Field com/ibm/icu/text/MessagePattern$Part$Type.ARG_LIMIT:Lcom/ibm/icu/text/MessagePattern$Part$Type;
      17: if_acmpne     30
      20: aload_0
      21: invokevirtual #14                 // Method getArgType:()Lcom/ibm/icu/text/MessagePattern$ArgType;
      24: invokevirtual #15                 // Method com/ibm/icu/text/MessagePattern$ArgType.name:()Ljava/lang/String;
      27: goto          37
      30: aload_0
      31: getfield      #6                  // Field value:S
      34: invokestatic  #16                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      37: astore_1
      38: new           #17                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      45: aload_0
      46: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
      49: invokevirtual #19                 // Method com/ibm/icu/text/MessagePattern$Part$Type.name:()Ljava/lang/String;
      52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #21                 // String (
      57: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_1
      61: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #22                 // String )@
      66: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #7                  // Field index:I
      73: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #26                 // class com/ibm/icu/text/MessagePattern$Part
      28: astore_2
      29: aload_0
      30: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
      33: aload_2
      34: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
      37: invokevirtual #27                 // Method com/ibm/icu/text/MessagePattern$Part$Type.equals:(Ljava/lang/Object;)Z
      40: ifeq          91
      43: aload_0
      44: getfield      #7                  // Field index:I
      47: aload_2
      48: getfield      #7                  // Field index:I
      51: if_icmpne     91
      54: aload_0
      55: getfield      #4                  // Field length:C
      58: aload_2
      59: getfield      #4                  // Field length:C
      62: if_icmpne     91
      65: aload_0
      66: getfield      #6                  // Field value:S
      69: aload_2
      70: getfield      #6                  // Field value:S
      73: if_icmpne     91
      76: aload_0
      77: getfield      #3                  // Field limitPartIndex:I
      80: aload_2
      81: getfield      #3                  // Field limitPartIndex:I
      84: if_icmpne     91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
       4: invokevirtual #28                 // Method com/ibm/icu/text/MessagePattern$Part$Type.hashCode:()I
       7: bipush        37
       9: imul
      10: aload_0
      11: getfield      #7                  // Field index:I
      14: iadd
      15: bipush        37
      17: imul
      18: aload_0
      19: getfield      #4                  // Field length:C
      22: iadd
      23: bipush        37
      25: imul
      26: aload_0
      27: getfield      #6                  // Field value:S
      30: iadd
      31: ireturn

  static int access$000(com.ibm.icu.text.MessagePattern$Part);
    Code:
       0: aload_0
       1: getfield      #7                  // Field index:I
       4: ireturn

  static short access$100(com.ibm.icu.text.MessagePattern$Part);
    Code:
       0: aload_0
       1: getfield      #6                  // Field value:S
       4: ireturn

  static com.ibm.icu.text.MessagePattern$Part$Type access$200(com.ibm.icu.text.MessagePattern$Part);
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:Lcom/ibm/icu/text/MessagePattern$Part$Type;
       4: areturn

  static char access$300(com.ibm.icu.text.MessagePattern$Part);
    Code:
       0: aload_0
       1: getfield      #4                  // Field length:C
       4: ireturn

  static int access$400(com.ibm.icu.text.MessagePattern$Part);
    Code:
       0: aload_0
       1: getfield      #3                  // Field limitPartIndex:I
       4: ireturn

  static short access$102(com.ibm.icu.text.MessagePattern$Part, short);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #6                  // Field value:S
       6: ireturn

  com.ibm.icu.text.MessagePattern$Part(com.ibm.icu.text.MessagePattern$Part$Type, int, int, int, com.ibm.icu.text.MessagePattern$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #2                  // Method "<init>":(Lcom/ibm/icu/text/MessagePattern$Part$Type;III)V
       9: return

  static int access$402(com.ibm.icu.text.MessagePattern$Part, int);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field limitPartIndex:I
       6: ireturn
}
