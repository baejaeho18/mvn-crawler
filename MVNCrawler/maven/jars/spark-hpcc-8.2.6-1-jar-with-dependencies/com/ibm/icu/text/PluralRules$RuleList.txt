Compiled from "PluralRules.java"
class com.ibm.icu.text.PluralRules$RuleList implements java.io.Serializable {
  private boolean hasExplicitBoundingInfo;

  private static final long serialVersionUID;

  private final java.util.List<com.ibm.icu.text.PluralRules$Rule> rules;

  private com.ibm.icu.text.PluralRules$RuleList();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hasExplicitBoundingInfo:Z
       9: aload_0
      10: new           #5                  // class java/util/ArrayList
      13: dup
      14: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      17: putfield      #7                  // Field rules:Ljava/util/List;
      20: return

  public com.ibm.icu.text.PluralRules$RuleList addRule(com.ibm.icu.text.PluralRules$Rule);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #7                  // Field rules:Ljava/util/List;
       9: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          77
      24: aload_3
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      41: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          74
      47: new           #14                 // class java/lang/IllegalArgumentException
      50: dup
      51: new           #15                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #17                 // String Duplicate keyword:
      60: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: goto          15
      77: aload_0
      78: getfield      #7                  // Field rules:Ljava/util/List;
      81: aload_1
      82: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: aload_0
      89: areturn

  public com.ibm.icu.text.PluralRules$RuleList finish() throws java.text.ParseException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #7                  // Field rules:Ljava/util/List;
       6: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          54
      21: aload_2
      22: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      30: astore_3
      31: ldc           #22                 // String other
      33: aload_3
      34: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      37: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          51
      43: aload_3
      44: astore_1
      45: aload_2
      46: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.remove:()V
      51: goto          12
      54: aload_1
      55: ifnonnull     64
      58: ldc           #24                 // String other:
      60: invokestatic  #25                 // Method com/ibm/icu/text/PluralRules.access$600:(Ljava/lang/String;)Lcom/ibm/icu/text/PluralRules$Rule;
      63: astore_1
      64: aload_0
      65: getfield      #7                  // Field rules:Ljava/util/List;
      68: aload_1
      69: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_0
      76: areturn

  private com.ibm.icu.text.PluralRules$Rule selectRule(com.ibm.icu.text.PluralRules$IFixedDecimal);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rules:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokevirtual #26                 // Method com/ibm/icu/text/PluralRules$Rule.appliesTo:(Lcom/ibm/icu/text/PluralRules$IFixedDecimal;)Z
      34: ifeq          39
      37: aload_3
      38: areturn
      39: goto          10
      42: aconst_null
      43: areturn

  public java.lang.String select(com.ibm.icu.text.PluralRules$IFixedDecimal);
    Code:
       0: aload_1
       1: invokeinterface #27,  1           // InterfaceMethod com/ibm/icu/text/PluralRules$IFixedDecimal.isInfinite:()Z
       6: ifne          18
       9: aload_1
      10: invokeinterface #28,  1           // InterfaceMethod com/ibm/icu/text/PluralRules$IFixedDecimal.isNaN:()Z
      15: ifeq          21
      18: ldc           #22                 // String other
      20: areturn
      21: aload_0
      22: aload_1
      23: invokespecial #29                 // Method selectRule:(Lcom/ibm/icu/text/PluralRules$IFixedDecimal;)Lcom/ibm/icu/text/PluralRules$Rule;
      26: astore_2
      27: aload_2
      28: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      31: areturn

  public java.util.Set<java.lang.String> getKeywords();
    Code:
       0: new           #30                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #31                 // Method java/util/LinkedHashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field rules:Ljava/util/List;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          51
      27: aload_2
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      42: invokeinterface #32,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      47: pop
      48: goto          18
      51: aload_1
      52: areturn

  public boolean isLimited(java.lang.String, com.ibm.icu.text.PluralRules$SampleType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasExplicitBoundingInfo:Z
       4: ifeq          27
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #33                 // Method getDecimalSamples:(Ljava/lang/String;Lcom/ibm/icu/text/PluralRules$SampleType;)Lcom/ibm/icu/text/PluralRules$FixedDecimalSamples;
      13: astore_3
      14: aload_3
      15: ifnonnull     22
      18: iconst_1
      19: goto          26
      22: aload_3
      23: getfield      #34                 // Field com/ibm/icu/text/PluralRules$FixedDecimalSamples.bounded:Z
      26: ireturn
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokevirtual #35                 // Method computeLimited:(Ljava/lang/String;Lcom/ibm/icu/text/PluralRules$SampleType;)Z
      33: ireturn

  public boolean computeLimited(java.lang.String, com.ibm.icu.text.PluralRules$SampleType);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #7                  // Field rules:Ljava/util/List;
       6: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore        4
      13: aload         4
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          63
      23: aload         4
      25: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      33: astore        5
      35: aload_1
      36: aload         5
      38: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      41: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          60
      47: aload         5
      49: aload_2
      50: invokevirtual #36                 // Method com/ibm/icu/text/PluralRules$Rule.isLimited:(Lcom/ibm/icu/text/PluralRules$SampleType;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iconst_1
      59: istore_3
      60: goto          13
      63: iload_3
      64: ireturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #7                  // Field rules:Ljava/util/List;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          60
      27: aload_2
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      36: astore_3
      37: aload_1
      38: invokevirtual #37                 // Method java/lang/StringBuilder.length:()I
      41: ifeq          51
      44: aload_1
      45: ldc           #38                 // String ;
      47: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: aload_3
      53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: pop
      57: goto          18
      60: aload_1
      61: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: areturn

  public java.lang.String getRules(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rules:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          48
      19: aload_2
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      28: astore_3
      29: aload_3
      30: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      33: aload_1
      34: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      37: ifeq          45
      40: aload_3
      41: invokevirtual #40                 // Method com/ibm/icu/text/PluralRules$Rule.getConstraint:()Ljava/lang/String;
      44: areturn
      45: goto          10
      48: aconst_null
      49: areturn

  public boolean select(com.ibm.icu.text.PluralRules$IFixedDecimal, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rules:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          56
      19: aload_3
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      28: astore        4
      30: aload         4
      32: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      35: aload_2
      36: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          53
      42: aload         4
      44: aload_1
      45: invokevirtual #26                 // Method com/ibm/icu/text/PluralRules$Rule.appliesTo:(Lcom/ibm/icu/text/PluralRules$IFixedDecimal;)Z
      48: ifeq          53
      51: iconst_1
      52: ireturn
      53: goto          10
      56: iconst_0
      57: ireturn

  public com.ibm.icu.text.PluralRules$FixedDecimalSamples getDecimalSamples(java.lang.String, com.ibm.icu.text.PluralRules$SampleType);
    Code:
       0: aload_0
       1: getfield      #7                  // Field rules:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          66
      19: aload_3
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #12                 // class com/ibm/icu/text/PluralRules$Rule
      28: astore        4
      30: aload         4
      32: invokevirtual #8                  // Method com/ibm/icu/text/PluralRules$Rule.getKeyword:()Ljava/lang/String;
      35: aload_1
      36: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          63
      42: aload_2
      43: getstatic     #41                 // Field com/ibm/icu/text/PluralRules$SampleType.INTEGER:Lcom/ibm/icu/text/PluralRules$SampleType;
      46: if_acmpne     57
      49: aload         4
      51: invokestatic  #42                 // Method com/ibm/icu/text/PluralRules$Rule.access$300:(Lcom/ibm/icu/text/PluralRules$Rule;)Lcom/ibm/icu/text/PluralRules$FixedDecimalSamples;
      54: goto          62
      57: aload         4
      59: invokestatic  #43                 // Method com/ibm/icu/text/PluralRules$Rule.access$400:(Lcom/ibm/icu/text/PluralRules$Rule;)Lcom/ibm/icu/text/PluralRules$FixedDecimalSamples;
      62: areturn
      63: goto          10
      66: aconst_null
      67: areturn

  com.ibm.icu.text.PluralRules$RuleList(com.ibm.icu.text.PluralRules$1);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: return

  static boolean access$200(com.ibm.icu.text.PluralRules$RuleList);
    Code:
       0: aload_0
       1: getfield      #2                  // Field hasExplicitBoundingInfo:Z
       4: ireturn

  static boolean access$202(com.ibm.icu.text.PluralRules$RuleList, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field hasExplicitBoundingInfo:Z
       6: ireturn
}
