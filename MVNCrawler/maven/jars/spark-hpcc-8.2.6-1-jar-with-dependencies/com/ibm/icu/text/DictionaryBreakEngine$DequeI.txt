Compiled from "DictionaryBreakEngine.java"
class com.ibm.icu.text.DictionaryBreakEngine$DequeI implements java.lang.Cloneable {
  private int[] data;

  private int lastIdx;

  private int firstIdx;

  static final boolean $assertionsDisabled;

  com.ibm.icu.text.DictionaryBreakEngine$DequeI();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        50
       7: newarray       int
       9: putfield      #2                  // Field data:[I
      12: aload_0
      13: iconst_4
      14: putfield      #3                  // Field lastIdx:I
      17: aload_0
      18: iconst_4
      19: putfield      #4                  // Field firstIdx:I
      22: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #6                  // class com/ibm/icu/text/DictionaryBreakEngine$DequeI
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field data:[I
      13: invokevirtual #7                  // Method "[I".clone:()Ljava/lang/Object;
      16: checkcast     #8                  // class "[I"
      19: putfield      #2                  // Field data:[I
      22: aload_1
      23: areturn

  int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field firstIdx:I
       4: aload_0
       5: getfield      #3                  // Field lastIdx:I
       8: isub
       9: ireturn

  boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method size:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void grow();
    Code:
       0: aload_0
       1: getfield      #2                  // Field data:[I
       4: arraylength
       5: iconst_2
       6: imul
       7: newarray       int
       9: astore_1
      10: aload_0
      11: getfield      #2                  // Field data:[I
      14: iconst_0
      15: aload_1
      16: iconst_0
      17: aload_0
      18: getfield      #2                  // Field data:[I
      21: arraylength
      22: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      25: aload_0
      26: aload_1
      27: putfield      #2                  // Field data:[I
      30: return

  void offer(int);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #3                  // Field lastIdx:I
      10: ifgt          21
      13: new           #12                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field data:[I
      25: aload_0
      26: dup
      27: getfield      #3                  // Field lastIdx:I
      30: iconst_1
      31: isub
      32: dup_x1
      33: putfield      #3                  // Field lastIdx:I
      36: iload_1
      37: iastore
      38: return

  void push(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field firstIdx:I
       4: aload_0
       5: getfield      #2                  // Field data:[I
       8: arraylength
       9: if_icmplt     16
      12: aload_0
      13: invokespecial #14                 // Method grow:()V
      16: aload_0
      17: getfield      #2                  // Field data:[I
      20: aload_0
      21: dup
      22: getfield      #4                  // Field firstIdx:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #4                  // Field firstIdx:I
      31: iload_1
      32: iastore
      33: return

  int pop();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #9                  // Method size:()I
      10: ifgt          21
      13: new           #12                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field data:[I
      25: aload_0
      26: dup
      27: getfield      #4                  // Field firstIdx:I
      30: iconst_1
      31: isub
      32: dup_x1
      33: putfield      #4                  // Field firstIdx:I
      36: iaload
      37: ireturn

  int peek();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #9                  // Method size:()I
      10: ifgt          21
      13: new           #12                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field data:[I
      25: aload_0
      26: getfield      #4                  // Field firstIdx:I
      29: iconst_1
      30: isub
      31: iaload
      32: ireturn

  int peekLast();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #9                  // Method size:()I
      10: ifgt          21
      13: new           #12                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field data:[I
      25: aload_0
      26: getfield      #3                  // Field lastIdx:I
      29: iaload
      30: ireturn

  int pollLast();
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #9                  // Method size:()I
      10: ifgt          21
      13: new           #12                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field data:[I
      25: aload_0
      26: dup
      27: getfield      #3                  // Field lastIdx:I
      30: dup_x1
      31: iconst_1
      32: iadd
      33: putfield      #3                  // Field lastIdx:I
      36: iaload
      37: ireturn

  boolean contains(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lastIdx:I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #4                  // Field firstIdx:I
      10: if_icmpge     31
      13: aload_0
      14: getfield      #2                  // Field data:[I
      17: iload_2
      18: iaload
      19: iload_1
      20: if_icmpne     25
      23: iconst_1
      24: ireturn
      25: iinc          2, 1
      28: goto          5
      31: iconst_0
      32: ireturn

  int elementAt(int);
    Code:
       0: getstatic     #11                 // Field $assertionsDisabled:Z
       3: ifne          22
       6: iload_1
       7: aload_0
       8: invokevirtual #9                  // Method size:()I
      11: if_icmplt     22
      14: new           #12                 // class java/lang/AssertionError
      17: dup
      18: invokespecial #13                 // Method java/lang/AssertionError."<init>":()V
      21: athrow
      22: aload_0
      23: getfield      #2                  // Field data:[I
      26: aload_0
      27: getfield      #3                  // Field lastIdx:I
      30: iload_1
      31: iadd
      32: iaload
      33: ireturn

  void removeAllElements();
    Code:
       0: aload_0
       1: aload_0
       2: iconst_4
       3: dup_x1
       4: putfield      #4                  // Field firstIdx:I
       7: putfield      #3                  // Field lastIdx:I
      10: return

  static {};
    Code:
       0: ldc           #15                 // class com/ibm/icu/text/DictionaryBreakEngine
       2: invokevirtual #16                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #11                 // Field $assertionsDisabled:Z
      16: return
}
