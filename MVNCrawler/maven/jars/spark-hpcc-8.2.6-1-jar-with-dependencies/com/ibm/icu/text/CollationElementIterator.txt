Compiled from "CollationElementIterator.java"
public final class com.ibm.icu.text.CollationElementIterator {
  private com.ibm.icu.impl.coll.CollationIterator iter_;

  private com.ibm.icu.text.RuleBasedCollator rbc_;

  private int otherHalf_;

  private byte dir_;

  private com.ibm.icu.impl.coll.UVector32 offsets_;

  private java.lang.String string_;

  public static final int NULLORDER;

  public static final int IGNORABLE;

  static final boolean $assertionsDisabled;

  public static final int primaryOrder(int);
    Code:
       0: iload_0
       1: bipush        16
       3: iushr
       4: ldc           #4                  // int 65535
       6: iand
       7: ireturn

  public static final int secondaryOrder(int);
    Code:
       0: iload_0
       1: bipush        8
       3: iushr
       4: sipush        255
       7: iand
       8: ireturn

  public static final int tertiaryOrder(int);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: ireturn

  private static final int getFirstHalf(long, int);
    Code:
       0: lload_0
       1: l2i
       2: ldc           #5                  // int -65536
       4: iand
       5: iload_2
       6: bipush        16
       8: ishr
       9: ldc           #6                  // int 65280
      11: iand
      12: ior
      13: iload_2
      14: bipush        8
      16: ishr
      17: sipush        255
      20: iand
      21: ior
      22: ireturn

  private static final int getSecondHalf(long, int);
    Code:
       0: lload_0
       1: l2i
       2: bipush        16
       4: ishl
       5: iload_2
       6: bipush        8
       8: ishr
       9: ldc           #6                  // int 65280
      11: iand
      12: ior
      13: iload_2
      14: bipush        63
      16: iand
      17: ior
      18: ireturn

  private static final boolean ceNeedsTwoParts(long);
    Code:
       0: lload_0
       1: ldc2_w        #7                  // long 281470698455103l
       4: land
       5: lconst_0
       6: lcmp
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private com.ibm.icu.text.CollationElementIterator(com.ibm.icu.text.RuleBasedCollator);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
       9: aload_0
      10: aload_1
      11: putfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      14: aload_0
      15: iconst_0
      16: putfield      #12                 // Field otherHalf_:I
      19: aload_0
      20: iconst_0
      21: putfield      #13                 // Field dir_:B
      24: aload_0
      25: aconst_null
      26: putfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
      29: return

  com.ibm.icu.text.CollationElementIterator(java.lang.String, com.ibm.icu.text.RuleBasedCollator);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #15                 // Method "<init>":(Lcom/ibm/icu/text/RuleBasedCollator;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #16                 // Method setText:(Ljava/lang/String;)V
      10: return

  com.ibm.icu.text.CollationElementIterator(java.text.CharacterIterator, com.ibm.icu.text.RuleBasedCollator);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #15                 // Method "<init>":(Lcom/ibm/icu/text/RuleBasedCollator;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #17                 // Method setText:(Ljava/text/CharacterIterator;)V
      10: return

  com.ibm.icu.text.CollationElementIterator(com.ibm.icu.text.UCharacterIterator, com.ibm.icu.text.RuleBasedCollator);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #15                 // Method "<init>":(Lcom/ibm/icu/text/RuleBasedCollator;)V
       5: aload_0
       6: aload_1
       7: invokevirtual #18                 // Method setText:(Lcom/ibm/icu/text/UCharacterIterator;)V
      10: return

  public int getOffset();
    Code:
       0: aload_0
       1: getfield      #13                 // Field dir_:B
       4: ifge          76
       7: aload_0
       8: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
      11: ifnull        76
      14: aload_0
      15: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
      18: invokevirtual #19                 // Method com/ibm/icu/impl/coll/UVector32.isEmpty:()Z
      21: ifne          76
      24: aload_0
      25: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      28: invokevirtual #20                 // Method com/ibm/icu/impl/coll/CollationIterator.getCEsLength:()I
      31: istore_1
      32: aload_0
      33: getfield      #12                 // Field otherHalf_:I
      36: ifeq          42
      39: iinc          1, 1
      42: getstatic     #21                 // Field $assertionsDisabled:Z
      45: ifne          67
      48: iload_1
      49: aload_0
      50: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
      53: invokevirtual #22                 // Method com/ibm/icu/impl/coll/UVector32.size:()I
      56: if_icmplt     67
      59: new           #23                 // class java/lang/AssertionError
      62: dup
      63: invokespecial #24                 // Method java/lang/AssertionError."<init>":()V
      66: athrow
      67: aload_0
      68: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
      71: iload_1
      72: invokevirtual #25                 // Method com/ibm/icu/impl/coll/UVector32.elementAti:(I)I
      75: ireturn
      76: aload_0
      77: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      80: invokevirtual #26                 // Method com/ibm/icu/impl/coll/CollationIterator.getOffset:()I
      83: ireturn

  public int next();
    Code:
       0: aload_0
       1: getfield      #13                 // Field dir_:B
       4: iconst_1
       5: if_icmple     27
       8: aload_0
       9: getfield      #12                 // Field otherHalf_:I
      12: ifeq          68
      15: aload_0
      16: getfield      #12                 // Field otherHalf_:I
      19: istore_1
      20: aload_0
      21: iconst_0
      22: putfield      #12                 // Field otherHalf_:I
      25: iload_1
      26: ireturn
      27: aload_0
      28: getfield      #13                 // Field dir_:B
      31: iconst_1
      32: if_icmpne     43
      35: aload_0
      36: iconst_2
      37: putfield      #13                 // Field dir_:B
      40: goto          68
      43: aload_0
      44: getfield      #13                 // Field dir_:B
      47: ifne          58
      50: aload_0
      51: iconst_2
      52: putfield      #13                 // Field dir_:B
      55: goto          68
      58: new           #27                 // class java/lang/IllegalStateException
      61: dup
      62: ldc           #28                 // String Illegal change of direction
      64: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      72: invokevirtual #30                 // Method com/ibm/icu/impl/coll/CollationIterator.clearCEsIfNoneRemaining:()V
      75: aload_0
      76: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      79: invokevirtual #31                 // Method com/ibm/icu/impl/coll/CollationIterator.nextCE:()J
      82: lstore_1
      83: lload_1
      84: ldc2_w        #33                 // long 4311744768l
      87: lcmp
      88: ifne          93
      91: iconst_m1
      92: ireturn
      93: lload_1
      94: bipush        32
      96: lushr
      97: lstore_3
      98: lload_1
      99: l2i
     100: istore        5
     102: lload_3
     103: iload         5
     105: invokestatic  #1                  // Method getFirstHalf:(JI)I
     108: istore        6
     110: lload_3
     111: iload         5
     113: invokestatic  #2                  // Method getSecondHalf:(JI)I
     116: istore        7
     118: iload         7
     120: ifeq          133
     123: aload_0
     124: iload         7
     126: sipush        192
     129: ior
     130: putfield      #12                 // Field otherHalf_:I
     133: iload         6
     135: ireturn

  public int previous();
    Code:
       0: aload_0
       1: getfield      #13                 // Field dir_:B
       4: ifge          26
       7: aload_0
       8: getfield      #12                 // Field otherHalf_:I
      11: ifeq          81
      14: aload_0
      15: getfield      #12                 // Field otherHalf_:I
      18: istore_1
      19: aload_0
      20: iconst_0
      21: putfield      #12                 // Field otherHalf_:I
      24: iload_1
      25: ireturn
      26: aload_0
      27: getfield      #13                 // Field dir_:B
      30: ifne          55
      33: aload_0
      34: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      37: aload_0
      38: getfield      #36                 // Field string_:Ljava/lang/String;
      41: invokevirtual #37                 // Method java/lang/String.length:()I
      44: invokevirtual #38                 // Method com/ibm/icu/impl/coll/CollationIterator.resetToOffset:(I)V
      47: aload_0
      48: iconst_m1
      49: putfield      #13                 // Field dir_:B
      52: goto          81
      55: aload_0
      56: getfield      #13                 // Field dir_:B
      59: iconst_1
      60: if_icmpne     71
      63: aload_0
      64: iconst_m1
      65: putfield      #13                 // Field dir_:B
      68: goto          81
      71: new           #27                 // class java/lang/IllegalStateException
      74: dup
      75: ldc           #28                 // String Illegal change of direction
      77: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_0
      82: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
      85: ifnonnull     99
      88: aload_0
      89: new           #39                 // class com/ibm/icu/impl/coll/UVector32
      92: dup
      93: invokespecial #40                 // Method com/ibm/icu/impl/coll/UVector32."<init>":()V
      96: putfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
      99: aload_0
     100: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     103: invokevirtual #20                 // Method com/ibm/icu/impl/coll/CollationIterator.getCEsLength:()I
     106: ifne          119
     109: aload_0
     110: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     113: invokevirtual #26                 // Method com/ibm/icu/impl/coll/CollationIterator.getOffset:()I
     116: goto          120
     119: iconst_0
     120: istore_1
     121: aload_0
     122: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     125: aload_0
     126: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
     129: invokevirtual #41                 // Method com/ibm/icu/impl/coll/CollationIterator.previousCE:(Lcom/ibm/icu/impl/coll/UVector32;)J
     132: lstore_2
     133: lload_2
     134: ldc2_w        #33                 // long 4311744768l
     137: lcmp
     138: ifne          143
     141: iconst_m1
     142: ireturn
     143: lload_2
     144: bipush        32
     146: lushr
     147: lstore        4
     149: lload_2
     150: l2i
     151: istore        6
     153: lload         4
     155: iload         6
     157: invokestatic  #1                  // Method getFirstHalf:(JI)I
     160: istore        7
     162: lload         4
     164: iload         6
     166: invokestatic  #2                  // Method getSecondHalf:(JI)I
     169: istore        8
     171: iload         8
     173: ifeq          221
     176: aload_0
     177: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
     180: invokevirtual #19                 // Method com/ibm/icu/impl/coll/UVector32.isEmpty:()Z
     183: ifeq          208
     186: aload_0
     187: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
     190: aload_0
     191: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     194: invokevirtual #26                 // Method com/ibm/icu/impl/coll/CollationIterator.getOffset:()I
     197: invokevirtual #42                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     200: aload_0
     201: getfield      #14                 // Field offsets_:Lcom/ibm/icu/impl/coll/UVector32;
     204: iload_1
     205: invokevirtual #42                 // Method com/ibm/icu/impl/coll/UVector32.addElement:(I)V
     208: aload_0
     209: iload         7
     211: putfield      #12                 // Field otherHalf_:I
     214: iload         8
     216: sipush        192
     219: ior
     220: ireturn
     221: iload         7
     223: ireturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
       4: iconst_0
       5: invokevirtual #38                 // Method com/ibm/icu/impl/coll/CollationIterator.resetToOffset:(I)V
       8: aload_0
       9: iconst_0
      10: putfield      #12                 // Field otherHalf_:I
      13: aload_0
      14: iconst_0
      15: putfield      #13                 // Field dir_:B
      18: return

  public void setOffset(int);
    Code:
       0: iconst_0
       1: iload_1
       2: if_icmpge     123
       5: iload_1
       6: aload_0
       7: getfield      #36                 // Field string_:Ljava/lang/String;
      10: invokevirtual #37                 // Method java/lang/String.length:()I
      13: if_icmpge     123
      16: iload_1
      17: istore_2
      18: aload_0
      19: getfield      #36                 // Field string_:Ljava/lang/String;
      22: iload_2
      23: invokevirtual #43                 // Method java/lang/String.charAt:(I)C
      26: istore_3
      27: aload_0
      28: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      31: iload_3
      32: invokevirtual #44                 // Method com/ibm/icu/text/RuleBasedCollator.isUnsafe:(I)Z
      35: ifeq          73
      38: iload_3
      39: invokestatic  #45                 // Method java/lang/Character.isHighSurrogate:(C)Z
      42: ifeq          66
      45: aload_0
      46: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      49: aload_0
      50: getfield      #36                 // Field string_:Ljava/lang/String;
      53: iload_2
      54: invokevirtual #46                 // Method java/lang/String.codePointAt:(I)I
      57: invokevirtual #44                 // Method com/ibm/icu/text/RuleBasedCollator.isUnsafe:(I)Z
      60: ifne          66
      63: goto          73
      66: iinc          2, -1
      69: iload_2
      70: ifgt          18
      73: iload_2
      74: iload_1
      75: if_icmpge     123
      78: iload_2
      79: istore_3
      80: aload_0
      81: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      84: iload_3
      85: invokevirtual #38                 // Method com/ibm/icu/impl/coll/CollationIterator.resetToOffset:(I)V
      88: aload_0
      89: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      92: invokevirtual #31                 // Method com/ibm/icu/impl/coll/CollationIterator.nextCE:()J
      95: pop2
      96: aload_0
      97: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     100: invokevirtual #26                 // Method com/ibm/icu/impl/coll/CollationIterator.getOffset:()I
     103: dup
     104: istore_2
     105: iload_3
     106: if_icmpeq     88
     109: iload_2
     110: iload_1
     111: if_icmpgt     116
     114: iload_2
     115: istore_3
     116: iload_2
     117: iload_1
     118: if_icmplt     80
     121: iload_3
     122: istore_1
     123: aload_0
     124: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     127: iload_1
     128: invokevirtual #38                 // Method com/ibm/icu/impl/coll/CollationIterator.resetToOffset:(I)V
     131: aload_0
     132: iconst_0
     133: putfield      #12                 // Field otherHalf_:I
     136: aload_0
     137: iconst_1
     138: putfield      #13                 // Field dir_:B
     141: return

  public void setText(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field string_:Ljava/lang/String;
       5: aload_0
       6: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
       9: getfield      #47                 // Field com/ibm/icu/text/RuleBasedCollator.settings:Lcom/ibm/icu/impl/coll/SharedObject$Reference;
      12: invokevirtual #48                 // Method com/ibm/icu/impl/coll/SharedObject$Reference.readOnly:()Lcom/ibm/icu/impl/coll/SharedObject;
      15: checkcast     #49                 // class com/ibm/icu/impl/coll/CollationSettings
      18: invokevirtual #50                 // Method com/ibm/icu/impl/coll/CollationSettings.isNumeric:()Z
      21: istore_3
      22: aload_0
      23: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      26: getfield      #47                 // Field com/ibm/icu/text/RuleBasedCollator.settings:Lcom/ibm/icu/impl/coll/SharedObject$Reference;
      29: invokevirtual #48                 // Method com/ibm/icu/impl/coll/SharedObject$Reference.readOnly:()Lcom/ibm/icu/impl/coll/SharedObject;
      32: checkcast     #49                 // class com/ibm/icu/impl/coll/CollationSettings
      35: invokevirtual #51                 // Method com/ibm/icu/impl/coll/CollationSettings.dontCheckFCD:()Z
      38: ifeq          65
      41: new           #52                 // class com/ibm/icu/impl/coll/UTF16CollationIterator
      44: dup
      45: aload_0
      46: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      49: getfield      #53                 // Field com/ibm/icu/text/RuleBasedCollator.data:Lcom/ibm/icu/impl/coll/CollationData;
      52: iload_3
      53: aload_0
      54: getfield      #36                 // Field string_:Ljava/lang/String;
      57: iconst_0
      58: invokespecial #54                 // Method com/ibm/icu/impl/coll/UTF16CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;ZLjava/lang/CharSequence;I)V
      61: astore_2
      62: goto          86
      65: new           #55                 // class com/ibm/icu/impl/coll/FCDUTF16CollationIterator
      68: dup
      69: aload_0
      70: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      73: getfield      #53                 // Field com/ibm/icu/text/RuleBasedCollator.data:Lcom/ibm/icu/impl/coll/CollationData;
      76: iload_3
      77: aload_0
      78: getfield      #36                 // Field string_:Ljava/lang/String;
      81: iconst_0
      82: invokespecial #56                 // Method com/ibm/icu/impl/coll/FCDUTF16CollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;ZLjava/lang/CharSequence;I)V
      85: astore_2
      86: aload_0
      87: aload_2
      88: putfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      91: aload_0
      92: iconst_0
      93: putfield      #12                 // Field otherHalf_:I
      96: aload_0
      97: iconst_0
      98: putfield      #13                 // Field dir_:B
     101: return

  public void setText(com.ibm.icu.text.UCharacterIterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method com/ibm/icu/text/UCharacterIterator.getText:()Ljava/lang/String;
       5: putfield      #36                 // Field string_:Ljava/lang/String;
       8: aload_1
       9: invokevirtual #58                 // Method com/ibm/icu/text/UCharacterIterator.clone:()Ljava/lang/Object;
      12: checkcast     #59                 // class com/ibm/icu/text/UCharacterIterator
      15: astore_2
      16: goto          29
      19: astore_3
      20: aload_0
      21: aload_1
      22: invokevirtual #57                 // Method com/ibm/icu/text/UCharacterIterator.getText:()Ljava/lang/String;
      25: invokevirtual #16                 // Method setText:(Ljava/lang/String;)V
      28: return
      29: aload_2
      30: invokevirtual #61                 // Method com/ibm/icu/text/UCharacterIterator.setToStart:()V
      33: aload_0
      34: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      37: getfield      #47                 // Field com/ibm/icu/text/RuleBasedCollator.settings:Lcom/ibm/icu/impl/coll/SharedObject$Reference;
      40: invokevirtual #48                 // Method com/ibm/icu/impl/coll/SharedObject$Reference.readOnly:()Lcom/ibm/icu/impl/coll/SharedObject;
      43: checkcast     #49                 // class com/ibm/icu/impl/coll/CollationSettings
      46: invokevirtual #50                 // Method com/ibm/icu/impl/coll/CollationSettings.isNumeric:()Z
      49: istore        4
      51: aload_0
      52: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      55: getfield      #47                 // Field com/ibm/icu/text/RuleBasedCollator.settings:Lcom/ibm/icu/impl/coll/SharedObject$Reference;
      58: invokevirtual #48                 // Method com/ibm/icu/impl/coll/SharedObject$Reference.readOnly:()Lcom/ibm/icu/impl/coll/SharedObject;
      61: checkcast     #49                 // class com/ibm/icu/impl/coll/CollationSettings
      64: invokevirtual #51                 // Method com/ibm/icu/impl/coll/CollationSettings.dontCheckFCD:()Z
      67: ifeq          91
      70: new           #62                 // class com/ibm/icu/impl/coll/IterCollationIterator
      73: dup
      74: aload_0
      75: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      78: getfield      #53                 // Field com/ibm/icu/text/RuleBasedCollator.data:Lcom/ibm/icu/impl/coll/CollationData;
      81: iload         4
      83: aload_2
      84: invokespecial #63                 // Method com/ibm/icu/impl/coll/IterCollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;ZLcom/ibm/icu/text/UCharacterIterator;)V
      87: astore_3
      88: goto          110
      91: new           #64                 // class com/ibm/icu/impl/coll/FCDIterCollationIterator
      94: dup
      95: aload_0
      96: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      99: getfield      #53                 // Field com/ibm/icu/text/RuleBasedCollator.data:Lcom/ibm/icu/impl/coll/CollationData;
     102: iload         4
     104: aload_2
     105: iconst_0
     106: invokespecial #65                 // Method com/ibm/icu/impl/coll/FCDIterCollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;ZLcom/ibm/icu/text/UCharacterIterator;I)V
     109: astore_3
     110: aload_0
     111: aload_3
     112: putfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     115: aload_0
     116: iconst_0
     117: putfield      #12                 // Field otherHalf_:I
     120: aload_0
     121: iconst_0
     122: putfield      #13                 // Field dir_:B
     125: return
    Exception table:
       from    to  target type
           8    16    19   Class java/lang/CloneNotSupportedException

  public void setText(java.text.CharacterIterator);
    Code:
       0: new           #66                 // class com/ibm/icu/impl/CharacterIteratorWrapper
       3: dup
       4: aload_1
       5: invokespecial #67                 // Method com/ibm/icu/impl/CharacterIteratorWrapper."<init>":(Ljava/text/CharacterIterator;)V
       8: astore_2
       9: aload_2
      10: invokevirtual #61                 // Method com/ibm/icu/text/UCharacterIterator.setToStart:()V
      13: aload_0
      14: aload_2
      15: invokevirtual #57                 // Method com/ibm/icu/text/UCharacterIterator.getText:()Ljava/lang/String;
      18: putfield      #36                 // Field string_:Ljava/lang/String;
      21: aload_0
      22: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      25: getfield      #47                 // Field com/ibm/icu/text/RuleBasedCollator.settings:Lcom/ibm/icu/impl/coll/SharedObject$Reference;
      28: invokevirtual #48                 // Method com/ibm/icu/impl/coll/SharedObject$Reference.readOnly:()Lcom/ibm/icu/impl/coll/SharedObject;
      31: checkcast     #49                 // class com/ibm/icu/impl/coll/CollationSettings
      34: invokevirtual #50                 // Method com/ibm/icu/impl/coll/CollationSettings.isNumeric:()Z
      37: istore        4
      39: aload_0
      40: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      43: getfield      #47                 // Field com/ibm/icu/text/RuleBasedCollator.settings:Lcom/ibm/icu/impl/coll/SharedObject$Reference;
      46: invokevirtual #48                 // Method com/ibm/icu/impl/coll/SharedObject$Reference.readOnly:()Lcom/ibm/icu/impl/coll/SharedObject;
      49: checkcast     #49                 // class com/ibm/icu/impl/coll/CollationSettings
      52: invokevirtual #51                 // Method com/ibm/icu/impl/coll/CollationSettings.dontCheckFCD:()Z
      55: ifeq          79
      58: new           #62                 // class com/ibm/icu/impl/coll/IterCollationIterator
      61: dup
      62: aload_0
      63: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      66: getfield      #53                 // Field com/ibm/icu/text/RuleBasedCollator.data:Lcom/ibm/icu/impl/coll/CollationData;
      69: iload         4
      71: aload_2
      72: invokespecial #63                 // Method com/ibm/icu/impl/coll/IterCollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;ZLcom/ibm/icu/text/UCharacterIterator;)V
      75: astore_3
      76: goto          98
      79: new           #64                 // class com/ibm/icu/impl/coll/FCDIterCollationIterator
      82: dup
      83: aload_0
      84: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      87: getfield      #53                 // Field com/ibm/icu/text/RuleBasedCollator.data:Lcom/ibm/icu/impl/coll/CollationData;
      90: iload         4
      92: aload_2
      93: iconst_0
      94: invokespecial #65                 // Method com/ibm/icu/impl/coll/FCDIterCollationIterator."<init>":(Lcom/ibm/icu/impl/coll/CollationData;ZLcom/ibm/icu/text/UCharacterIterator;I)V
      97: astore_3
      98: aload_0
      99: aload_3
     100: putfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
     103: aload_0
     104: iconst_0
     105: putfield      #12                 // Field otherHalf_:I
     108: aload_0
     109: iconst_0
     110: putfield      #13                 // Field dir_:B
     113: return

  static final java.util.Map<java.lang.Integer, java.lang.Integer> computeMaxExpansions(com.ibm.icu.impl.coll.CollationData);
    Code:
       0: new           #68                 // class java/util/HashMap
       3: dup
       4: invokespecial #69                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: new           #70                 // class com/ibm/icu/text/CollationElementIterator$MaxExpSink
      11: dup
      12: aload_1
      13: invokespecial #71                 // Method com/ibm/icu/text/CollationElementIterator$MaxExpSink."<init>":(Ljava/util/Map;)V
      16: astore_2
      17: new           #72                 // class com/ibm/icu/impl/coll/ContractionsAndExpansions
      20: dup
      21: aconst_null
      22: aconst_null
      23: aload_2
      24: iconst_1
      25: invokespecial #73                 // Method com/ibm/icu/impl/coll/ContractionsAndExpansions."<init>":(Lcom/ibm/icu/text/UnicodeSet;Lcom/ibm/icu/text/UnicodeSet;Lcom/ibm/icu/impl/coll/ContractionsAndExpansions$CESink;Z)V
      28: aload_0
      29: invokevirtual #74                 // Method com/ibm/icu/impl/coll/ContractionsAndExpansions.forData:(Lcom/ibm/icu/impl/coll/CollationData;)V
      32: aload_1
      33: areturn

  public int getMaxExpansion(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
       4: getfield      #75                 // Field com/ibm/icu/text/RuleBasedCollator.tailoring:Lcom/ibm/icu/impl/coll/CollationTailoring;
       7: getfield      #76                 // Field com/ibm/icu/impl/coll/CollationTailoring.maxExpansions:Ljava/util/Map;
      10: iload_1
      11: invokestatic  #77                 // Method getMaxExpansion:(Ljava/util/Map;I)I
      14: ireturn

  static int getMaxExpansion(java.util.Map<java.lang.Integer, java.lang.Integer>, int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: ifnull        33
      10: aload_0
      11: iload_1
      12: invokestatic  #78                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #80                 // class java/lang/Integer
      23: dup
      24: astore_2
      25: ifnull        33
      28: aload_2
      29: invokevirtual #81                 // Method java/lang/Integer.intValue:()I
      32: ireturn
      33: iload_1
      34: sipush        192
      37: iand
      38: sipush        192
      41: if_icmpne     46
      44: iconst_2
      45: ireturn
      46: iconst_1
      47: ireturn

  private byte normalizeDir();
    Code:
       0: aload_0
       1: getfield      #13                 // Field dir_:B
       4: iconst_1
       5: if_icmpne     12
       8: iconst_0
       9: goto          16
      12: aload_0
      13: getfield      #13                 // Field dir_:B
      16: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #35                 // class com/ibm/icu/text/CollationElementIterator
      11: ifeq          89
      14: aload_1
      15: checkcast     #35                 // class com/ibm/icu/text/CollationElementIterator
      18: astore_2
      19: aload_0
      20: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      23: aload_2
      24: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
      27: invokevirtual #82                 // Method com/ibm/icu/text/RuleBasedCollator.equals:(Ljava/lang/Object;)Z
      30: ifeq          87
      33: aload_0
      34: getfield      #12                 // Field otherHalf_:I
      37: aload_2
      38: getfield      #12                 // Field otherHalf_:I
      41: if_icmpne     87
      44: aload_0
      45: invokespecial #83                 // Method normalizeDir:()B
      48: aload_2
      49: invokespecial #83                 // Method normalizeDir:()B
      52: if_icmpne     87
      55: aload_0
      56: getfield      #36                 // Field string_:Ljava/lang/String;
      59: aload_2
      60: getfield      #36                 // Field string_:Ljava/lang/String;
      63: invokevirtual #84                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          87
      69: aload_0
      70: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      73: aload_2
      74: getfield      #10                 // Field iter_:Lcom/ibm/icu/impl/coll/CollationIterator;
      77: invokevirtual #85                 // Method com/ibm/icu/impl/coll/CollationIterator.equals:(Ljava/lang/Object;)Z
      80: ifeq          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: ireturn
      89: iconst_0
      90: ireturn

  public int hashCode();
    Code:
       0: getstatic     #21                 // Field $assertionsDisabled:Z
       3: ifne          16
       6: new           #23                 // class java/lang/AssertionError
       9: dup
      10: ldc           #86                 // String hashCode not designed
      12: invokespecial #87                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      15: athrow
      16: bipush        42
      18: ireturn

  public com.ibm.icu.text.RuleBasedCollator getRuleBasedCollator();
    Code:
       0: aload_0
       1: getfield      #11                 // Field rbc_:Lcom/ibm/icu/text/RuleBasedCollator;
       4: areturn

  static boolean access$000(long);
    Code:
       0: lload_0
       1: invokestatic  #3                  // Method ceNeedsTwoParts:(J)Z
       4: ireturn

  static int access$100(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: invokestatic  #2                  // Method getSecondHalf:(JI)I
       5: ireturn

  static int access$200(long, int);
    Code:
       0: lload_0
       1: iload_2
       2: invokestatic  #1                  // Method getFirstHalf:(JI)I
       5: ireturn

  static {};
    Code:
       0: ldc           #35                 // class com/ibm/icu/text/CollationElementIterator
       2: invokevirtual #88                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #21                 // Field $assertionsDisabled:Z
      16: return
}
