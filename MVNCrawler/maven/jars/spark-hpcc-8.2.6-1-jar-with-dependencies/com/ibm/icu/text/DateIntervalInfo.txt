Compiled from "DateIntervalInfo.java"
public class com.ibm.icu.text.DateIntervalInfo implements java.lang.Cloneable, com.ibm.icu.util.Freezable<com.ibm.icu.text.DateIntervalInfo>, java.io.Serializable {
  static final int currentSerialVersion;

  static final java.lang.String[] CALENDAR_FIELD_TO_PATTERN_LETTER;

  private static final long serialVersionUID;

  private static final int MINIMUM_SUPPORTED_CALENDAR_FIELD;

  private static java.lang.String CALENDAR_KEY;

  private static java.lang.String INTERVAL_FORMATS_KEY;

  private static java.lang.String FALLBACK_STRING;

  private static java.lang.String LATEST_FIRST_PREFIX;

  private static java.lang.String EARLIEST_FIRST_PREFIX;

  private static final com.ibm.icu.impl.ICUCache<java.lang.String, com.ibm.icu.text.DateIntervalInfo> DIICACHE;

  private java.lang.String fFallbackIntervalPattern;

  private boolean fFirstDateInPtnIsLaterDate;

  private java.util.Map<java.lang.String, java.util.Map<java.lang.String, com.ibm.icu.text.DateIntervalInfo$PatternInfo>> fIntervalPatterns;

  private volatile transient boolean frozen;

  private transient boolean fIntervalPatternsReadOnly;

  public com.ibm.icu.text.DateIntervalInfo();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      14: aload_0
      15: iconst_0
      16: putfield      #8                  // Field frozen:Z
      19: aload_0
      20: iconst_0
      21: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
      24: aload_0
      25: new           #10                 // class java/util/HashMap
      28: dup
      29: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      32: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      35: aload_0
      36: ldc           #12                 // String {0} – {1}
      38: putfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
      41: return

  public com.ibm.icu.text.DateIntervalInfo(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      14: aload_0
      15: iconst_0
      16: putfield      #8                  // Field frozen:Z
      19: aload_0
      20: iconst_0
      21: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method initializeData:(Lcom/ibm/icu/util/ULocale;)V
      29: return

  public com.ibm.icu.text.DateIntervalInfo(java.util.Locale);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #15                 // Method com/ibm/icu/util/ULocale.forLocale:(Ljava/util/Locale;)Lcom/ibm/icu/util/ULocale;
       5: invokespecial #16                 // Method "<init>":(Lcom/ibm/icu/util/ULocale;)V
       8: return

  private void initializeData(com.ibm.icu.util.ULocale);
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method com/ibm/icu/util/ULocale.toString:()Ljava/lang/String;
       4: astore_2
       5: getstatic     #18                 // Field DIICACHE:Lcom/ibm/icu/impl/ICUCache;
       8: aload_2
       9: invokeinterface #19,  2           // InterfaceMethod com/ibm/icu/impl/ICUCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #20                 // class com/ibm/icu/text/DateIntervalInfo
      17: astore_3
      18: aload_3
      19: ifnonnull     54
      22: aload_0
      23: aload_1
      24: invokespecial #21                 // Method setup:(Lcom/ibm/icu/util/ULocale;)V
      27: aload_0
      28: iconst_1
      29: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
      32: getstatic     #18                 // Field DIICACHE:Lcom/ibm/icu/impl/ICUCache;
      35: aload_2
      36: aload_0
      37: invokevirtual #22                 // Method clone:()Ljava/lang/Object;
      40: checkcast     #20                 // class com/ibm/icu/text/DateIntervalInfo
      43: invokevirtual #23                 // Method freeze:()Lcom/ibm/icu/text/DateIntervalInfo;
      46: invokeinterface #24,  3           // InterfaceMethod com/ibm/icu/impl/ICUCache.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      51: goto          59
      54: aload_0
      55: aload_3
      56: invokespecial #25                 // Method initializeFromReadOnlyPatterns:(Lcom/ibm/icu/text/DateIntervalInfo;)V
      59: return

  private void initializeFromReadOnlyPatterns(com.ibm.icu.text.DateIntervalInfo);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
       5: putfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
       8: aload_0
       9: aload_1
      10: getfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
      13: putfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
      16: aload_0
      17: aload_1
      18: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      21: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      24: aload_0
      25: iconst_1
      26: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
      29: return

  private void setup(com.ibm.icu.util.ULocale);
    Code:
       0: bipush        19
       2: istore_2
       3: aload_0
       4: new           #10                 // class java/util/HashMap
       7: dup
       8: iload_2
       9: invokespecial #26                 // Method java/util/HashMap."<init>":(I)V
      12: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      15: aload_0
      16: ldc           #12                 // String {0} – {1}
      18: putfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
      21: aload_1
      22: ldc           #27                 // String calendar
      24: invokevirtual #28                 // Method com/ibm/icu/util/ULocale.getKeywordValue:(Ljava/lang/String;)Ljava/lang/String;
      27: astore_3
      28: aload_3
      29: ifnonnull     46
      32: ldc           #27                 // String calendar
      34: aload_1
      35: iconst_1
      36: invokestatic  #29                 // Method com/ibm/icu/util/Calendar.getKeywordValuesForLocale:(Ljava/lang/String;Lcom/ibm/icu/util/ULocale;Z)[Ljava/lang/String;
      39: astore        4
      41: aload         4
      43: iconst_0
      44: aaload
      45: astore_3
      46: aload_3
      47: ifnonnull     53
      50: ldc           #30                 // String gregorian
      52: astore_3
      53: new           #31                 // class com/ibm/icu/text/DateIntervalInfo$DateIntervalSink
      56: dup
      57: aload_0
      58: invokespecial #32                 // Method com/ibm/icu/text/DateIntervalInfo$DateIntervalSink."<init>":(Lcom/ibm/icu/text/DateIntervalInfo;)V
      61: astore        4
      63: ldc           #34                 // String com/ibm/icu/impl/data/icudt61b
      65: aload_1
      66: invokestatic  #35                 // Method com/ibm/icu/util/UResourceBundle.getBundleInstance:(Ljava/lang/String;Lcom/ibm/icu/util/ULocale;)Lcom/ibm/icu/util/UResourceBundle;
      69: checkcast     #36                 // class com/ibm/icu/impl/ICUResourceBundle
      72: astore        5
      74: aload         5
      76: new           #37                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      83: getstatic     #4                  // Field CALENDAR_KEY:Ljava/lang/String;
      86: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: ldc           #40                 // String /
      91: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_3
      95: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #40                 // String /
     100: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: getstatic     #5                  // Field INTERVAL_FORMATS_KEY:Ljava/lang/String;
     106: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #40                 // String /
     111: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: getstatic     #41                 // Field FALLBACK_STRING:Ljava/lang/String;
     117: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokevirtual #43                 // Method com/ibm/icu/impl/ICUResourceBundle.getStringWithFallback:(Ljava/lang/String;)Ljava/lang/String;
     126: astore        6
     128: aload_0
     129: aload         6
     131: invokevirtual #44                 // Method setFallbackIntervalPattern:(Ljava/lang/String;)V
     134: new           #45                 // class java/util/HashSet
     137: dup
     138: invokespecial #46                 // Method java/util/HashSet."<init>":()V
     141: astore        7
     143: aload_3
     144: ifnull        239
     147: aload         7
     149: aload_3
     150: invokeinterface #47,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     155: ifeq          185
     158: new           #48                 // class com/ibm/icu/util/ICUException
     161: dup
     162: new           #37                 // class java/lang/StringBuilder
     165: dup
     166: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     169: ldc           #49                 // String Loop in calendar type fallback:
     171: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: aload_3
     175: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokespecial #50                 // Method com/ibm/icu/util/ICUException."<init>":(Ljava/lang/String;)V
     184: athrow
     185: aload         7
     187: aload_3
     188: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     193: pop
     194: new           #37                 // class java/lang/StringBuilder
     197: dup
     198: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     201: getstatic     #4                  // Field CALENDAR_KEY:Ljava/lang/String;
     204: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: ldc           #40                 // String /
     209: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: aload_3
     213: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     219: astore        8
     221: aload         5
     223: aload         8
     225: aload         4
     227: invokevirtual #52                 // Method com/ibm/icu/impl/ICUResourceBundle.getAllItemsWithFallback:(Ljava/lang/String;Lcom/ibm/icu/impl/UResource$Sink;)V
     230: aload         4
     232: invokevirtual #53                 // Method com/ibm/icu/text/DateIntervalInfo$DateIntervalSink.getAndResetNextCalendarType:()Ljava/lang/String;
     235: astore_3
     236: goto          143
     239: goto          243
     242: astore_3
     243: return
    Exception table:
       from    to  target type
          21   239   242   Class java/util/MissingResourceException

  private static int splitPatternInto2Part(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: bipush        58
       8: newarray       int
      10: astore        4
      12: bipush        65
      14: istore        5
      16: iconst_0
      17: istore        7
      19: iconst_0
      20: istore        6
      22: iload         6
      24: aload_0
      25: invokevirtual #55                 // Method java/lang/String.length:()I
      28: if_icmpge     176
      31: aload_0
      32: iload         6
      34: invokevirtual #56                 // Method java/lang/String.charAt:(I)C
      37: istore        8
      39: iload         8
      41: iload_2
      42: if_icmpeq     82
      45: iload_3
      46: ifle          82
      49: aload         4
      51: iload_2
      52: iload         5
      54: isub
      55: iaload
      56: istore        9
      58: iload         9
      60: ifne          74
      63: aload         4
      65: iload_2
      66: iload         5
      68: isub
      69: iconst_1
      70: iastore
      71: goto          80
      74: iconst_1
      75: istore        7
      77: goto          176
      80: iconst_0
      81: istore_3
      82: iload         8
      84: bipush        39
      86: if_icmpne     132
      89: iload         6
      91: iconst_1
      92: iadd
      93: aload_0
      94: invokevirtual #55                 // Method java/lang/String.length:()I
      97: if_icmpge     119
     100: aload_0
     101: iload         6
     103: iconst_1
     104: iadd
     105: invokevirtual #56                 // Method java/lang/String.charAt:(I)C
     108: bipush        39
     110: if_icmpne     119
     113: iinc          6, 1
     116: goto          170
     119: iload_1
     120: ifne          127
     123: iconst_1
     124: goto          128
     127: iconst_0
     128: istore_1
     129: goto          170
     132: iload_1
     133: ifne          170
     136: iload         8
     138: bipush        97
     140: if_icmplt     150
     143: iload         8
     145: bipush        122
     147: if_icmple     164
     150: iload         8
     152: bipush        65
     154: if_icmplt     170
     157: iload         8
     159: bipush        90
     161: if_icmpgt     170
     164: iload         8
     166: istore_2
     167: iinc          3, 1
     170: iinc          6, 1
     173: goto          22
     176: iload_3
     177: ifle          197
     180: iload         7
     182: ifne          197
     185: aload         4
     187: iload_2
     188: iload         5
     190: isub
     191: iaload
     192: ifne          197
     195: iconst_0
     196: istore_3
     197: iload         6
     199: iload_3
     200: isub
     201: ireturn

  public void setIntervalPattern(java.lang.String, int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field frozen:Z
       4: ifeq          17
       7: new           #57                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #58                 // String no modification is allowed after DII is frozen
      13: invokespecial #59                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iload_2
      18: bipush        13
      20: if_icmple     33
      23: new           #60                 // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #61                 // String calendar field is larger than MINIMUM_SUPPORTED_CALENDAR_FIELD
      29: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: getfield      #9                  // Field fIntervalPatternsReadOnly:Z
      37: ifeq          56
      40: aload_0
      41: aload_0
      42: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      45: invokestatic  #63                 // Method cloneIntervalPatterns:(Ljava/util/Map;)Ljava/util/Map;
      48: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      51: aload_0
      52: iconst_0
      53: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
      56: aload_0
      57: aload_1
      58: getstatic     #64                 // Field CALENDAR_FIELD_TO_PATTERN_LETTER:[Ljava/lang/String;
      61: iload_2
      62: aaload
      63: aload_3
      64: invokespecial #2                  // Method setIntervalPatternInternally:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/ibm/icu/text/DateIntervalInfo$PatternInfo;
      67: astore        4
      69: iload_2
      70: bipush        11
      72: if_icmpne     104
      75: aload_0
      76: aload_1
      77: getstatic     #64                 // Field CALENDAR_FIELD_TO_PATTERN_LETTER:[Ljava/lang/String;
      80: bipush        9
      82: aaload
      83: aload         4
      85: invokespecial #65                 // Method setIntervalPattern:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/text/DateIntervalInfo$PatternInfo;)V
      88: aload_0
      89: aload_1
      90: getstatic     #64                 // Field CALENDAR_FIELD_TO_PATTERN_LETTER:[Ljava/lang/String;
      93: bipush        10
      95: aaload
      96: aload         4
      98: invokespecial #65                 // Method setIntervalPattern:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/text/DateIntervalInfo$PatternInfo;)V
     101: goto          127
     104: iload_2
     105: iconst_5
     106: if_icmpeq     115
     109: iload_2
     110: bipush        7
     112: if_icmpne     127
     115: aload_0
     116: aload_1
     117: getstatic     #64                 // Field CALENDAR_FIELD_TO_PATTERN_LETTER:[Ljava/lang/String;
     120: iconst_5
     121: aaload
     122: aload         4
     124: invokespecial #65                 // Method setIntervalPattern:(Ljava/lang/String;Ljava/lang/String;Lcom/ibm/icu/text/DateIntervalInfo$PatternInfo;)V
     127: return

  private com.ibm.icu.text.DateIntervalInfo$PatternInfo setIntervalPatternInternally(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #67                 // class java/util/Map
      13: astore        4
      15: iconst_0
      16: istore        5
      18: aload         4
      20: ifnonnull     35
      23: new           #10                 // class java/util/HashMap
      26: dup
      27: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      30: astore        4
      32: iconst_1
      33: istore        5
      35: aload_0
      36: getfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
      39: istore        6
      41: aload_3
      42: getstatic     #68                 // Field LATEST_FIRST_PREFIX:Ljava/lang/String;
      45: invokevirtual #69                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      48: ifeq          76
      51: iconst_1
      52: istore        6
      54: getstatic     #68                 // Field LATEST_FIRST_PREFIX:Ljava/lang/String;
      57: invokevirtual #55                 // Method java/lang/String.length:()I
      60: istore        7
      62: aload_3
      63: iload         7
      65: aload_3
      66: invokevirtual #55                 // Method java/lang/String.length:()I
      69: invokevirtual #70                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      72: astore_3
      73: goto          108
      76: aload_3
      77: getstatic     #71                 // Field EARLIEST_FIRST_PREFIX:Ljava/lang/String;
      80: invokevirtual #69                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      83: ifeq          108
      86: iconst_0
      87: istore        6
      89: getstatic     #71                 // Field EARLIEST_FIRST_PREFIX:Ljava/lang/String;
      92: invokevirtual #55                 // Method java/lang/String.length:()I
      95: istore        7
      97: aload_3
      98: iload         7
     100: aload_3
     101: invokevirtual #55                 // Method java/lang/String.length:()I
     104: invokevirtual #70                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     107: astore_3
     108: aload_3
     109: iload         6
     111: invokestatic  #72                 // Method genPatternInfo:(Ljava/lang/String;Z)Lcom/ibm/icu/text/DateIntervalInfo$PatternInfo;
     114: astore        7
     116: aload         4
     118: aload_2
     119: aload         7
     121: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     126: pop
     127: iload         5
     129: iconst_1
     130: if_icmpne     146
     133: aload_0
     134: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
     137: aload_1
     138: aload         4
     140: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     145: pop
     146: aload         7
     148: areturn

  private void setIntervalPattern(java.lang.String, java.lang.String, com.ibm.icu.text.DateIntervalInfo$PatternInfo);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #67                 // class java/util/Map
      13: astore        4
      15: aload         4
      17: aload_2
      18: aload_3
      19: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: return

  public static com.ibm.icu.text.DateIntervalInfo$PatternInfo genPatternInfo(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokestatic  #74                 // Method splitPatternInto2Part:(Ljava/lang/String;)I
       4: istore_2
       5: aload_0
       6: iconst_0
       7: iload_2
       8: invokevirtual #70                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      11: astore_3
      12: aconst_null
      13: astore        4
      15: iload_2
      16: aload_0
      17: invokevirtual #55                 // Method java/lang/String.length:()I
      20: if_icmpge     34
      23: aload_0
      24: iload_2
      25: aload_0
      26: invokevirtual #55                 // Method java/lang/String.length:()I
      29: invokevirtual #70                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      32: astore        4
      34: new           #75                 // class com/ibm/icu/text/DateIntervalInfo$PatternInfo
      37: dup
      38: aload_3
      39: aload         4
      41: iload_1
      42: invokespecial #76                 // Method com/ibm/icu/text/DateIntervalInfo$PatternInfo."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      45: areturn

  public com.ibm.icu.text.DateIntervalInfo$PatternInfo getIntervalPattern(java.lang.String, int);
    Code:
       0: iload_2
       1: bipush        13
       3: if_icmple     16
       6: new           #60                 // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #77                 // String no support for field less than SECOND
      12: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: aload_0
      17: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      20: aload_1
      21: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #67                 // class java/util/Map
      29: astore_3
      30: aload_3
      31: ifnull        58
      34: aload_3
      35: getstatic     #64                 // Field CALENDAR_FIELD_TO_PATTERN_LETTER:[Ljava/lang/String;
      38: iload_2
      39: aaload
      40: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #75                 // class com/ibm/icu/text/DateIntervalInfo$PatternInfo
      48: astore        4
      50: aload         4
      52: ifnull        58
      55: aload         4
      57: areturn
      58: aconst_null
      59: areturn

  public java.lang.String getFallbackIntervalPattern();
    Code:
       0: aload_0
       1: getfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
       4: areturn

  public void setFallbackIntervalPattern(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field frozen:Z
       4: ifeq          17
       7: new           #57                 // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #58                 // String no modification is allowed after DII is frozen
      13: invokespecial #59                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ldc           #78                 // String {0}
      20: invokevirtual #79                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      23: istore_2
      24: aload_1
      25: ldc           #80                 // String {1}
      27: invokevirtual #79                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      30: istore_3
      31: iload_2
      32: iconst_m1
      33: if_icmpeq     41
      36: iload_3
      37: iconst_m1
      38: if_icmpne     51
      41: new           #60                 // class java/lang/IllegalArgumentException
      44: dup
      45: ldc           #81                 // String no pattern {0} or pattern {1} in fallbackPattern
      47: invokespecial #62                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_2
      52: iload_3
      53: if_icmple     61
      56: aload_0
      57: iconst_1
      58: putfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
      61: aload_0
      62: aload_1
      63: putfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
      66: return

  public boolean getDefaultOrder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
       4: ireturn

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: getfield      #8                  // Field frozen:Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #82                 // Method cloneUnfrozenDII:()Ljava/lang/Object;
      13: areturn

  private java.lang.Object cloneUnfrozenDII();
    Code:
       0: aload_0
       1: invokespecial #83                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #20                 // class com/ibm/icu/text/DateIntervalInfo
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
      13: putfield      #13                 // Field fFallbackIntervalPattern:Ljava/lang/String;
      16: aload_1
      17: aload_0
      18: getfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
      21: putfield      #7                  // Field fFirstDateInPtnIsLaterDate:Z
      24: aload_0
      25: getfield      #9                  // Field fIntervalPatternsReadOnly:Z
      28: ifeq          47
      31: aload_1
      32: aload_0
      33: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      36: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      39: aload_1
      40: iconst_1
      41: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
      44: goto          63
      47: aload_1
      48: aload_0
      49: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      52: invokestatic  #63                 // Method cloneIntervalPatterns:(Ljava/util/Map;)Ljava/util/Map;
      55: putfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      58: aload_1
      59: iconst_0
      60: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
      63: aload_1
      64: iconst_0
      65: putfield      #8                  // Field frozen:Z
      68: aload_1
      69: areturn
      70: astore_1
      71: new           #85                 // class com/ibm/icu/util/ICUCloneNotSupportedException
      74: dup
      75: ldc           #86                 // String clone is not supported
      77: aload_1
      78: invokespecial #87                 // Method com/ibm/icu/util/ICUCloneNotSupportedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      81: athrow
    Exception table:
       from    to  target type
           0    69    70   Class java/lang/CloneNotSupportedException

  private static java.util.Map<java.lang.String, java.util.Map<java.lang.String, com.ibm.icu.text.DateIntervalInfo$PatternInfo>> cloneIntervalPatterns(java.util.Map<java.lang.String, java.util.Map<java.lang.String, com.ibm.icu.text.DateIntervalInfo$PatternInfo>>);
    Code:
       0: new           #10                 // class java/util/HashMap
       3: dup
       4: invokespecial #11                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #88,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #89,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          159
      29: aload_2
      30: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #92                 // class java/util/Map$Entry
      38: astore_3
      39: aload_3
      40: invokeinterface #93,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      45: checkcast     #94                 // class java/lang/String
      48: astore        4
      50: aload_3
      51: invokeinterface #95,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: checkcast     #67                 // class java/util/Map
      59: astore        5
      61: new           #10                 // class java/util/HashMap
      64: dup
      65: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      68: astore        6
      70: aload         5
      72: invokeinterface #88,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      77: invokeinterface #89,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      82: astore        7
      84: aload         7
      86: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      91: ifeq          145
      94: aload         7
      96: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     101: checkcast     #92                 // class java/util/Map$Entry
     104: astore        8
     106: aload         8
     108: invokeinterface #93,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     113: checkcast     #94                 // class java/lang/String
     116: astore        9
     118: aload         8
     120: invokeinterface #95,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     125: checkcast     #75                 // class com/ibm/icu/text/DateIntervalInfo$PatternInfo
     128: astore        10
     130: aload         6
     132: aload         9
     134: aload         10
     136: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: pop
     142: goto          84
     145: aload_1
     146: aload         4
     148: aload         6
     150: invokeinterface #73,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     155: pop
     156: goto          20
     159: aload_1
     160: areturn

  public boolean isFrozen();
    Code:
       0: aload_0
       1: getfield      #8                  // Field frozen:Z
       4: ireturn

  public com.ibm.icu.text.DateIntervalInfo freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field fIntervalPatternsReadOnly:Z
       5: aload_0
       6: iconst_1
       7: putfield      #8                  // Field frozen:Z
      10: aload_0
      11: areturn

  public com.ibm.icu.text.DateIntervalInfo cloneAsThawed();
    Code:
       0: aload_0
       1: invokespecial #82                 // Method cloneUnfrozenDII:()Ljava/lang/Object;
       4: checkcast     #20                 // class com/ibm/icu/text/DateIntervalInfo
       7: checkcast     #20                 // class com/ibm/icu/text/DateIntervalInfo
      10: astore_1
      11: aload_1
      12: areturn

  static void parseSkeleton(java.lang.String, int[]);
    Code:
       0: bipush        65
       2: istore_2
       3: iconst_0
       4: istore_3
       5: iload_3
       6: aload_0
       7: invokevirtual #55                 // Method java/lang/String.length:()I
      10: if_icmpge     32
      13: aload_1
      14: aload_0
      15: iload_3
      16: invokevirtual #56                 // Method java/lang/String.charAt:(I)C
      19: iload_2
      20: isub
      21: dup2
      22: iaload
      23: iconst_1
      24: iadd
      25: iastore
      26: iinc          3, 1
      29: goto          5
      32: return

  private static boolean stringNumeric(int, int, char);
    Code:
       0: iload_2
       1: bipush        77
       3: if_icmpne     28
       6: iload_0
       7: iconst_2
       8: if_icmpgt     16
      11: iload_1
      12: iconst_2
      13: if_icmpgt     26
      16: iload_0
      17: iconst_2
      18: if_icmple     28
      21: iload_1
      22: iconst_2
      23: if_icmpgt     28
      26: iconst_1
      27: ireturn
      28: iconst_0
      29: ireturn

  com.ibm.icu.text.DateIntervalFormat$BestMatchInfo getBestSkeleton(java.lang.String);
    Code:
       0: aload_1
       1: astore_2
       2: bipush        58
       4: newarray       int
       6: astore_3
       7: bipush        58
       9: newarray       int
      11: astore        4
      13: sipush        4096
      16: istore        5
      18: sipush        256
      21: istore        6
      23: bipush        65
      25: istore        7
      27: iconst_0
      28: istore        8
      30: aload_1
      31: bipush        122
      33: invokevirtual #96                 // Method java/lang/String.indexOf:(I)I
      36: iconst_m1
      37: if_icmpeq     52
      40: aload_1
      41: bipush        122
      43: bipush        118
      45: invokevirtual #97                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      48: astore_1
      49: iconst_1
      50: istore        8
      52: aload_1
      53: aload_3
      54: invokestatic  #98                 // Method parseSkeleton:(Ljava/lang/String;[I)V
      57: ldc           #100                // int 2147483647
      59: istore        9
      61: iconst_0
      62: istore        10
      64: aload_0
      65: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      68: invokeinterface #101,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      73: invokeinterface #89,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      78: astore        11
      80: aload         11
      82: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          281
      90: aload         11
      92: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #94                 // class java/lang/String
     100: astore        12
     102: iconst_0
     103: istore        13
     105: iload         13
     107: aload         4
     109: arraylength
     110: if_icmpge     125
     113: aload         4
     115: iload         13
     117: iconst_0
     118: iastore
     119: iinc          13, 1
     122: goto          105
     125: aload         12
     127: aload         4
     129: invokestatic  #98                 // Method parseSkeleton:(Ljava/lang/String;[I)V
     132: iconst_0
     133: istore        13
     135: iconst_1
     136: istore        14
     138: iconst_0
     139: istore        15
     141: iload         15
     143: aload_3
     144: arraylength
     145: if_icmpge     249
     148: aload_3
     149: iload         15
     151: iaload
     152: istore        16
     154: aload         4
     156: iload         15
     158: iaload
     159: istore        17
     161: iload         16
     163: iload         17
     165: if_icmpne     171
     168: goto          243
     171: iload         16
     173: ifne          188
     176: iconst_m1
     177: istore        14
     179: iinc_w        13, 4096
     185: goto          243
     188: iload         17
     190: ifne          205
     193: iconst_m1
     194: istore        14
     196: iinc_w        13, 4096
     202: goto          243
     205: iload         16
     207: iload         17
     209: iload         15
     211: bipush        65
     213: iadd
     214: i2c
     215: invokestatic  #102                // Method stringNumeric:(IIC)Z
     218: ifeq          230
     221: iinc_w        13, 256
     227: goto          243
     230: iload         13
     232: iload         16
     234: iload         17
     236: isub
     237: invokestatic  #103                // Method java/lang/Math.abs:(I)I
     240: iadd
     241: istore        13
     243: iinc          15, 1
     246: goto          141
     249: iload         13
     251: iload         9
     253: if_icmpge     267
     256: aload         12
     258: astore_2
     259: iload         13
     261: istore        9
     263: iload         14
     265: istore        10
     267: iload         13
     269: ifne          278
     272: iconst_0
     273: istore        10
     275: goto          281
     278: goto          80
     281: iload         8
     283: ifeq          295
     286: iload         10
     288: iconst_m1
     289: if_icmpeq     295
     292: iconst_2
     293: istore        10
     295: new           #104                // class com/ibm/icu/text/DateIntervalFormat$BestMatchInfo
     298: dup
     299: aload_2
     300: iload         10
     302: invokespecial #105                // Method com/ibm/icu/text/DateIntervalFormat$BestMatchInfo."<init>":(Ljava/lang/String;I)V
     305: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #20                 // class com/ibm/icu/text/DateIntervalInfo
       4: ifeq          26
       7: aload_1
       8: checkcast     #20                 // class com/ibm/icu/text/DateIntervalInfo
      11: astore_2
      12: aload_0
      13: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      16: aload_2
      17: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      20: invokeinterface #106,  2          // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      25: ireturn
      26: iconst_0
      27: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
       4: invokeinterface #107,  1          // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.util.Map<java.lang.String, java.util.Set<java.lang.String>> getPatterns();
    Code:
       0: new           #108                // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #109                // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      12: invokeinterface #88,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #89,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          77
      32: aload_2
      33: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #92                 // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #93,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: new           #110                // class java/util/LinkedHashSet
      52: dup
      53: aload_3
      54: invokeinterface #95,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #67                 // class java/util/Map
      62: invokeinterface #101,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      67: invokespecial #111                // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      70: invokevirtual #112                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: goto          23
      77: aload_1
      78: areturn

  public java.util.Map<java.lang.String, java.util.Map<java.lang.String, com.ibm.icu.text.DateIntervalInfo$PatternInfo>> getRawPatterns();
    Code:
       0: new           #108                // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #109                // Method java/util/LinkedHashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
      12: invokeinterface #88,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #89,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          72
      32: aload_2
      33: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #92                 // class java/util/Map$Entry
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokeinterface #93,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: new           #108                // class java/util/LinkedHashMap
      52: dup
      53: aload_3
      54: invokeinterface #95,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #67                 // class java/util/Map
      62: invokespecial #113                // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      65: invokevirtual #112                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          23
      72: aload_1
      73: areturn

  public java.lang.Object cloneAsThawed();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method cloneAsThawed:()Lcom/ibm/icu/text/DateIntervalInfo;
       4: areturn

  public java.lang.Object freeze();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method freeze:()Lcom/ibm/icu/text/DateIntervalInfo;
       4: areturn

  static java.lang.String access$000();
    Code:
       0: getstatic     #5                  // Field INTERVAL_FORMATS_KEY:Ljava/lang/String;
       3: areturn

  static java.lang.String access$100();
    Code:
       0: getstatic     #4                  // Field CALENDAR_KEY:Ljava/lang/String;
       3: areturn

  static java.util.Map access$200(com.ibm.icu.text.DateIntervalInfo);
    Code:
       0: aload_0
       1: getfield      #3                  // Field fIntervalPatterns:Ljava/util/Map;
       4: areturn

  static com.ibm.icu.text.DateIntervalInfo$PatternInfo access$300(com.ibm.icu.text.DateIntervalInfo, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method setIntervalPatternInternally:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/ibm/icu/text/DateIntervalInfo$PatternInfo;
       7: areturn

  static {};
    Code:
       0: bipush        24
       2: anewarray     #94                 // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #115                // String G
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #116                // String y
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #117                // String M
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #118                // String w
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #119                // String W
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #120                // String d
      34: aastore
      35: dup
      36: bipush        6
      38: ldc           #121                // String D
      40: aastore
      41: dup
      42: bipush        7
      44: ldc           #122                // String E
      46: aastore
      47: dup
      48: bipush        8
      50: ldc           #123                // String F
      52: aastore
      53: dup
      54: bipush        9
      56: ldc           #124                // String a
      58: aastore
      59: dup
      60: bipush        10
      62: ldc           #125                // String h
      64: aastore
      65: dup
      66: bipush        11
      68: ldc           #126                // String H
      70: aastore
      71: dup
      72: bipush        12
      74: ldc           #127                // String m
      76: aastore
      77: dup
      78: bipush        13
      80: ldc           #128                // String s
      82: aastore
      83: dup
      84: bipush        14
      86: ldc           #129                // String S
      88: aastore
      89: dup
      90: bipush        15
      92: ldc           #130                // String z
      94: aastore
      95: dup
      96: bipush        16
      98: ldc           #131                // String
     100: aastore
     101: dup
     102: bipush        17
     104: ldc           #132                // String Y
     106: aastore
     107: dup
     108: bipush        18
     110: ldc           #133                // String e
     112: aastore
     113: dup
     114: bipush        19
     116: ldc           #134                // String u
     118: aastore
     119: dup
     120: bipush        20
     122: ldc           #135                // String g
     124: aastore
     125: dup
     126: bipush        21
     128: ldc           #136                // String A
     130: aastore
     131: dup
     132: bipush        22
     134: ldc           #131                // String
     136: aastore
     137: dup
     138: bipush        23
     140: ldc           #131                // String
     142: aastore
     143: putstatic     #64                 // Field CALENDAR_FIELD_TO_PATTERN_LETTER:[Ljava/lang/String;
     146: ldc           #27                 // String calendar
     148: putstatic     #4                  // Field CALENDAR_KEY:Ljava/lang/String;
     151: ldc           #137                // String intervalFormats
     153: putstatic     #5                  // Field INTERVAL_FORMATS_KEY:Ljava/lang/String;
     156: ldc           #138                // String fallback
     158: putstatic     #41                 // Field FALLBACK_STRING:Ljava/lang/String;
     161: ldc           #139                // String latestFirst:
     163: putstatic     #68                 // Field LATEST_FIRST_PREFIX:Ljava/lang/String;
     166: ldc           #140                // String earliestFirst:
     168: putstatic     #71                 // Field EARLIEST_FIRST_PREFIX:Ljava/lang/String;
     171: new           #141                // class com/ibm/icu/impl/SimpleCache
     174: dup
     175: invokespecial #142                // Method com/ibm/icu/impl/SimpleCache."<init>":()V
     178: putstatic     #18                 // Field DIICACHE:Lcom/ibm/icu/impl/ICUCache;
     181: return
}
