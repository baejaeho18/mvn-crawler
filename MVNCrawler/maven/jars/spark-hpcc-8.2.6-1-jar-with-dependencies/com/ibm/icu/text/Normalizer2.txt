Compiled from "Normalizer2.java"
public abstract class com.ibm.icu.text.Normalizer2 {
  public static com.ibm.icu.text.Normalizer2 getNFCInstance();
    Code:
       0: invokestatic  #1                  // Method com/ibm/icu/impl/Norm2AllModes.getNFCInstance:()Lcom/ibm/icu/impl/Norm2AllModes;
       3: getfield      #2                  // Field com/ibm/icu/impl/Norm2AllModes.comp:Lcom/ibm/icu/impl/Norm2AllModes$ComposeNormalizer2;
       6: areturn

  public static com.ibm.icu.text.Normalizer2 getNFDInstance();
    Code:
       0: invokestatic  #1                  // Method com/ibm/icu/impl/Norm2AllModes.getNFCInstance:()Lcom/ibm/icu/impl/Norm2AllModes;
       3: getfield      #3                  // Field com/ibm/icu/impl/Norm2AllModes.decomp:Lcom/ibm/icu/impl/Norm2AllModes$DecomposeNormalizer2;
       6: areturn

  public static com.ibm.icu.text.Normalizer2 getNFKCInstance();
    Code:
       0: invokestatic  #4                  // Method com/ibm/icu/impl/Norm2AllModes.getNFKCInstance:()Lcom/ibm/icu/impl/Norm2AllModes;
       3: getfield      #2                  // Field com/ibm/icu/impl/Norm2AllModes.comp:Lcom/ibm/icu/impl/Norm2AllModes$ComposeNormalizer2;
       6: areturn

  public static com.ibm.icu.text.Normalizer2 getNFKDInstance();
    Code:
       0: invokestatic  #4                  // Method com/ibm/icu/impl/Norm2AllModes.getNFKCInstance:()Lcom/ibm/icu/impl/Norm2AllModes;
       3: getfield      #3                  // Field com/ibm/icu/impl/Norm2AllModes.decomp:Lcom/ibm/icu/impl/Norm2AllModes$DecomposeNormalizer2;
       6: areturn

  public static com.ibm.icu.text.Normalizer2 getNFKCCasefoldInstance();
    Code:
       0: invokestatic  #5                  // Method com/ibm/icu/impl/Norm2AllModes.getNFKC_CFInstance:()Lcom/ibm/icu/impl/Norm2AllModes;
       3: getfield      #2                  // Field com/ibm/icu/impl/Norm2AllModes.comp:Lcom/ibm/icu/impl/Norm2AllModes$ComposeNormalizer2;
       6: areturn

  public static com.ibm.icu.text.Normalizer2 getInstance(java.io.InputStream, java.lang.String, com.ibm.icu.text.Normalizer2$Mode);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: ifnull        26
       6: aload_0
       7: invokestatic  #6                  // Method com/ibm/icu/impl/ICUBinary.getByteBufferFromInputStreamAndCloseStream:(Ljava/io/InputStream;)Ljava/nio/ByteBuffer;
      10: astore_3
      11: goto          26
      14: astore        4
      16: new           #8                  // class com/ibm/icu/util/ICUUncheckedIOException
      19: dup
      20: aload         4
      22: invokespecial #9                  // Method com/ibm/icu/util/ICUUncheckedIOException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
      26: aload_3
      27: aload_1
      28: invokestatic  #10                 // Method com/ibm/icu/impl/Norm2AllModes.getInstance:(Ljava/nio/ByteBuffer;Ljava/lang/String;)Lcom/ibm/icu/impl/Norm2AllModes;
      31: astore        4
      33: getstatic     #11                 // Field com/ibm/icu/text/Normalizer2$1.$SwitchMap$com$ibm$icu$text$Normalizer2$Mode:[I
      36: aload_2
      37: invokevirtual #12                 // Method com/ibm/icu/text/Normalizer2$Mode.ordinal:()I
      40: iaload
      41: tableswitch   { // 1 to 4
                     1: 72
                     2: 78
                     3: 84
                     4: 90
               default: 96
          }
      72: aload         4
      74: getfield      #2                  // Field com/ibm/icu/impl/Norm2AllModes.comp:Lcom/ibm/icu/impl/Norm2AllModes$ComposeNormalizer2;
      77: areturn
      78: aload         4
      80: getfield      #3                  // Field com/ibm/icu/impl/Norm2AllModes.decomp:Lcom/ibm/icu/impl/Norm2AllModes$DecomposeNormalizer2;
      83: areturn
      84: aload         4
      86: getfield      #13                 // Field com/ibm/icu/impl/Norm2AllModes.fcd:Lcom/ibm/icu/impl/Norm2AllModes$FCDNormalizer2;
      89: areturn
      90: aload         4
      92: getfield      #14                 // Field com/ibm/icu/impl/Norm2AllModes.fcc:Lcom/ibm/icu/impl/Norm2AllModes$ComposeNormalizer2;
      95: areturn
      96: aconst_null
      97: areturn
    Exception table:
       from    to  target type
           6    11    14   Class java/io/IOException

  public java.lang.String normalize(java.lang.CharSequence);
    Code:
       0: aload_1
       1: instanceof    #15                 // class java/lang/String
       4: ifeq          74
       7: aload_0
       8: aload_1
       9: invokevirtual #16                 // Method spanQuickCheckYes:(Ljava/lang/CharSequence;)I
      12: istore_2
      13: iload_2
      14: aload_1
      15: invokeinterface #17,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      20: if_icmpne     28
      23: aload_1
      24: checkcast     #15                 // class java/lang/String
      27: areturn
      28: iload_2
      29: ifeq          74
      32: new           #18                 // class java/lang/StringBuilder
      35: dup
      36: aload_1
      37: invokeinterface #17,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      42: invokespecial #19                 // Method java/lang/StringBuilder."<init>":(I)V
      45: aload_1
      46: iconst_0
      47: iload_2
      48: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
      51: astore_3
      52: aload_0
      53: aload_3
      54: aload_1
      55: iload_2
      56: aload_1
      57: invokeinterface #17,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      62: invokeinterface #21,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
      67: invokevirtual #22                 // Method normalizeSecondAndAppend:(Ljava/lang/StringBuilder;Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      70: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn
      74: aload_0
      75: aload_1
      76: new           #18                 // class java/lang/StringBuilder
      79: dup
      80: aload_1
      81: invokeinterface #17,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      86: invokespecial #19                 // Method java/lang/StringBuilder."<init>":(I)V
      89: invokevirtual #24                 // Method normalize:(Ljava/lang/CharSequence;Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
      92: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: areturn

  public abstract java.lang.StringBuilder normalize(java.lang.CharSequence, java.lang.StringBuilder);

  public abstract java.lang.Appendable normalize(java.lang.CharSequence, java.lang.Appendable);

  public abstract java.lang.StringBuilder normalizeSecondAndAppend(java.lang.StringBuilder, java.lang.CharSequence);

  public abstract java.lang.StringBuilder append(java.lang.StringBuilder, java.lang.CharSequence);

  public abstract java.lang.String getDecomposition(int);

  public java.lang.String getRawDecomposition(int);
    Code:
       0: aconst_null
       1: areturn

  public int composePair(int, int);
    Code:
       0: iconst_m1
       1: ireturn

  public int getCombiningClass(int);
    Code:
       0: iconst_0
       1: ireturn

  public abstract boolean isNormalized(java.lang.CharSequence);

  public abstract com.ibm.icu.text.Normalizer$QuickCheckResult quickCheck(java.lang.CharSequence);

  public abstract int spanQuickCheckYes(java.lang.CharSequence);

  public abstract boolean hasBoundaryBefore(int);

  public abstract boolean hasBoundaryAfter(int);

  public abstract boolean isInert(int);

  protected com.ibm.icu.text.Normalizer2();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return
}
