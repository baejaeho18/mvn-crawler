Compiled from "DateTimePatternGenerator.java"
public class com.ibm.icu.text.DateTimePatternGenerator$VariableField {
  private final java.lang.String string;

  private final int canonicalIndex;

  public com.ibm.icu.text.DateTimePatternGenerator$VariableField(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Z)V
       6: return

  public com.ibm.icu.text.DateTimePatternGenerator$VariableField(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokestatic  #4                  // Method com/ibm/icu/text/DateTimePatternGenerator.access$1300:(Ljava/lang/String;Z)I
      10: putfield      #5                  // Field canonicalIndex:I
      13: aload_0
      14: getfield      #5                  // Field canonicalIndex:I
      17: ifge          47
      20: new           #6                  // class java/lang/IllegalArgumentException
      23: dup
      24: new           #7                  // class java/lang/StringBuilder
      27: dup
      28: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #9                  // String Illegal datetime field:\t
      33: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: aload_1
      49: putfield      #13                 // Field string:Ljava/lang/String;
      52: return

  public int getType();
    Code:
       0: invokestatic  #14                 // Method com/ibm/icu/text/DateTimePatternGenerator.access$1400:()[[I
       3: aload_0
       4: getfield      #5                  // Field canonicalIndex:I
       7: aaload
       8: iconst_1
       9: iaload
      10: ireturn

  public static java.lang.String getCanonicalCode(int);
    Code:
       0: invokestatic  #15                 // Method com/ibm/icu/text/DateTimePatternGenerator.access$1500:()[Ljava/lang/String;
       3: iload_0
       4: aaload
       5: areturn
       6: astore_1
       7: iload_0
       8: invokestatic  #17                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      11: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/Exception

  public boolean isNumeric();
    Code:
       0: invokestatic  #14                 // Method com/ibm/icu/text/DateTimePatternGenerator.access$1400:()[[I
       3: aload_0
       4: getfield      #5                  // Field canonicalIndex:I
       7: aaload
       8: iconst_2
       9: iaload
      10: ifle          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  private int getCanonicalIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field canonicalIndex:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #13                 // Field string:Ljava/lang/String;
       4: areturn

  static int access$2000(com.ibm.icu.text.DateTimePatternGenerator$VariableField);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getCanonicalIndex:()I
       4: ireturn
}
