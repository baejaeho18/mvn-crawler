Compiled from "CurrencyFormat.java"
class com.ibm.icu.text.CurrencyFormat extends com.ibm.icu.text.MeasureFormat {
  static final long serialVersionUID;

  public com.ibm.icu.text.CurrencyFormat(com.ibm.icu.util.ULocale);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field com/ibm/icu/text/MeasureFormat$FormatWidth.DEFAULT_CURRENCY:Lcom/ibm/icu/text/MeasureFormat$FormatWidth;
       5: invokespecial #2                  // Method com/ibm/icu/text/MeasureFormat."<init>":(Lcom/ibm/icu/util/ULocale;Lcom/ibm/icu/text/MeasureFormat$FormatWidth;)V
       8: return

  public java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition);
    Code:
       0: aload_1
       1: instanceof    #3                  // class com/ibm/icu/util/CurrencyAmount
       4: ifne          40
       7: new           #4                  // class java/lang/IllegalArgumentException
      10: dup
      11: new           #5                  // class java/lang/StringBuilder
      14: dup
      15: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #7                  // String Invalid type:
      20: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_1
      42: aload_2
      43: aload_3
      44: invokespecial #13                 // Method com/ibm/icu/text/MeasureFormat.format:(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;
      47: areturn

  public com.ibm.icu.util.CurrencyAmount parseObject(java.lang.String, java.text.ParsePosition);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method getNumberFormatInternal:()Lcom/ibm/icu/text/NumberFormat;
       4: aload_1
       5: aload_2
       6: invokevirtual #15                 // Method com/ibm/icu/text/NumberFormat.parseCurrency:(Ljava/lang/CharSequence;Ljava/text/ParsePosition;)Lcom/ibm/icu/util/CurrencyAmount;
       9: areturn

  private java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method toCurrencyProxy:()Ljava/lang/Object;
       4: areturn

  private java.lang.Object readResolve() throws java.io.ObjectStreamException;
    Code:
       0: new           #17                 // class com/ibm/icu/text/CurrencyFormat
       3: dup
       4: aload_0
       5: getstatic     #18                 // Field com/ibm/icu/util/ULocale.ACTUAL_LOCALE:Lcom/ibm/icu/util/ULocale$Type;
       8: invokevirtual #19                 // Method getLocale:(Lcom/ibm/icu/util/ULocale$Type;)Lcom/ibm/icu/util/ULocale;
      11: invokespecial #20                 // Method "<init>":(Lcom/ibm/icu/util/ULocale;)V
      14: areturn

  public com.ibm.icu.util.Measure parseObject(java.lang.String, java.text.ParsePosition);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #21                 // Method parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Lcom/ibm/icu/util/CurrencyAmount;
       6: areturn

  public java.lang.Object parseObject(java.lang.String, java.text.ParsePosition);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #21                 // Method parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Lcom/ibm/icu/util/CurrencyAmount;
       6: areturn
}
