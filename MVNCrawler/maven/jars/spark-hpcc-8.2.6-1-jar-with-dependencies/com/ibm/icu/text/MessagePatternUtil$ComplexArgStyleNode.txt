Compiled from "MessagePatternUtil.java"
public class com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode extends com.ibm.icu.text.MessagePatternUtil$Node {
  private com.ibm.icu.text.MessagePattern$ArgType argType;

  private double offset;

  private boolean explicitOffset;

  private volatile java.util.List<com.ibm.icu.text.MessagePatternUtil$VariantNode> list;

  public com.ibm.icu.text.MessagePattern$ArgType getArgType();
    Code:
       0: aload_0
       1: getfield      #6                  // Field argType:Lcom/ibm/icu/text/MessagePattern$ArgType;
       4: areturn

  public boolean hasExplicitOffset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field explicitOffset:Z
       4: ireturn

  public double getOffset();
    Code:
       0: aload_0
       1: getfield      #1                  // Field offset:D
       4: dreturn

  public java.util.List<com.ibm.icu.text.MessagePatternUtil$VariantNode> getVariants();
    Code:
       0: aload_0
       1: getfield      #7                  // Field list:Ljava/util/List;
       4: areturn

  public com.ibm.icu.text.MessagePatternUtil$VariantNode getVariantsByType(java.util.List<com.ibm.icu.text.MessagePatternUtil$VariantNode>, java.util.List<com.ibm.icu.text.MessagePatternUtil$VariantNode>);
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_1
       5: invokeinterface #8,  1            // InterfaceMethod java/util/List.clear:()V
      10: aload_2
      11: invokeinterface #8,  1            // InterfaceMethod java/util/List.clear:()V
      16: aconst_null
      17: astore_3
      18: aload_0
      19: getfield      #7                  // Field list:Ljava/util/List;
      22: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          106
      39: aload         4
      41: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #12                 // class com/ibm/icu/text/MessagePatternUtil$VariantNode
      49: astore        5
      51: aload         5
      53: invokevirtual #13                 // Method com/ibm/icu/text/MessagePatternUtil$VariantNode.isSelectorNumeric:()Z
      56: ifeq          71
      59: aload_1
      60: aload         5
      62: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: goto          103
      71: ldc           #15                 // String other
      73: aload         5
      75: invokevirtual #16                 // Method com/ibm/icu/text/MessagePatternUtil$VariantNode.getSelector:()Ljava/lang/String;
      78: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      81: ifeq          94
      84: aload_3
      85: ifnonnull     103
      88: aload         5
      90: astore_3
      91: goto          103
      94: aload_2
      95: aload         5
      97: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     102: pop
     103: goto          29
     106: aload_3
     107: areturn

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        40
      11: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #6                  // Field argType:Lcom/ibm/icu/text/MessagePattern$ArgType;
      18: invokevirtual #21                 // Method com/ibm/icu/text/MessagePattern$ArgType.toString:()Ljava/lang/String;
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #23                 // String  style)
      26: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: pop
      30: aload_0
      31: invokevirtual #24                 // Method hasExplicitOffset:()Z
      34: ifeq          56
      37: aload_1
      38: ldc           #25                 // String offset:
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: getfield      #1                  // Field offset:D
      47: invokevirtual #26                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      50: bipush        32
      52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: aload_0
      58: getfield      #7                  // Field list:Ljava/util/List;
      61: invokevirtual #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
      64: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  private com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode(com.ibm.icu.text.MessagePattern$ArgType);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #29                 // Method com/ibm/icu/text/MessagePatternUtil$Node."<init>":(Lcom/ibm/icu/text/MessagePatternUtil$1;)V
       5: aload_0
       6: new           #30                 // class java/util/ArrayList
       9: dup
      10: invokespecial #31                 // Method java/util/ArrayList."<init>":()V
      13: putfield      #7                  // Field list:Ljava/util/List;
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field argType:Lcom/ibm/icu/text/MessagePattern$ArgType;
      21: return

  private void addVariant(com.ibm.icu.text.MessagePatternUtil$VariantNode);
    Code:
       0: aload_0
       1: getfield      #7                  // Field list:Ljava/util/List;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode freeze();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field list:Ljava/util/List;
       5: invokestatic  #32                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       8: putfield      #7                  // Field list:Ljava/util/List;
      11: aload_0
      12: areturn

  com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode(com.ibm.icu.text.MessagePattern$ArgType, com.ibm.icu.text.MessagePatternUtil$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method "<init>":(Lcom/ibm/icu/text/MessagePattern$ArgType;)V
       5: return

  static void access$2000(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode, com.ibm.icu.text.MessagePatternUtil$VariantNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method addVariant:(Lcom/ibm/icu/text/MessagePatternUtil$VariantNode;)V
       5: return

  static com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode access$2100(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method freeze:()Lcom/ibm/icu/text/MessagePatternUtil$ComplexArgStyleNode;
       4: areturn

  static boolean access$2202(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field explicitOffset:Z
       6: ireturn

  static double access$2302(com.ibm.icu.text.MessagePatternUtil$ComplexArgStyleNode, double);
    Code:
       0: aload_0
       1: dload_1
       2: dup2_x1
       3: putfield      #1                  // Field offset:D
       6: dreturn
}
