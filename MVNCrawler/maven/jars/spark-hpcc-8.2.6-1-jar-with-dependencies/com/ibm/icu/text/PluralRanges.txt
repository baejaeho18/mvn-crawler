Compiled from "PluralRanges.java"
public final class com.ibm.icu.text.PluralRanges implements com.ibm.icu.util.Freezable<com.ibm.icu.text.PluralRanges>, java.lang.Comparable<com.ibm.icu.text.PluralRanges> {
  private volatile boolean isFrozen;

  private com.ibm.icu.text.PluralRanges$Matrix matrix;

  private boolean[] explicit;

  public com.ibm.icu.text.PluralRanges();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/ibm/icu/text/PluralRanges$Matrix
       8: dup
       9: invokespecial #3                  // Method com/ibm/icu/text/PluralRanges$Matrix."<init>":()V
      12: putfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
      15: aload_0
      16: getstatic     #5                  // Field com/ibm/icu/impl/StandardPlural.COUNT:I
      19: newarray       boolean
      21: putfield      #6                  // Field explicit:[Z
      24: return

  public void add(com.ibm.icu.impl.StandardPlural, com.ibm.icu.impl.StandardPlural, com.ibm.icu.impl.StandardPlural);
    Code:
       0: aload_0
       1: getfield      #7                  // Field isFrozen:Z
       4: ifeq          15
       7: new           #8                  // class java/lang/UnsupportedOperationException
      10: dup
      11: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #6                  // Field explicit:[Z
      19: aload_3
      20: invokevirtual #10                 // Method com/ibm/icu/impl/StandardPlural.ordinal:()I
      23: iconst_1
      24: bastore
      25: aload_1
      26: ifnonnull     138
      29: invokestatic  #11                 // Method com/ibm/icu/impl/StandardPlural.values:()[Lcom/ibm/icu/impl/StandardPlural;
      32: astore        4
      34: aload         4
      36: arraylength
      37: istore        5
      39: iconst_0
      40: istore        6
      42: iload         6
      44: iload         5
      46: if_icmpge     135
      49: aload         4
      51: iload         6
      53: aaload
      54: astore        7
      56: aload_2
      57: ifnonnull     108
      60: invokestatic  #11                 // Method com/ibm/icu/impl/StandardPlural.values:()[Lcom/ibm/icu/impl/StandardPlural;
      63: astore        8
      65: aload         8
      67: arraylength
      68: istore        9
      70: iconst_0
      71: istore        10
      73: iload         10
      75: iload         9
      77: if_icmpge     105
      80: aload         8
      82: iload         10
      84: aaload
      85: astore        11
      87: aload_0
      88: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
      91: aload         7
      93: aload         11
      95: aload_3
      96: invokevirtual #12                 // Method com/ibm/icu/text/PluralRanges$Matrix.setIfNew:(Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;)V
      99: iinc          10, 1
     102: goto          73
     105: goto          129
     108: aload_0
     109: getfield      #6                  // Field explicit:[Z
     112: aload_2
     113: invokevirtual #10                 // Method com/ibm/icu/impl/StandardPlural.ordinal:()I
     116: iconst_1
     117: bastore
     118: aload_0
     119: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
     122: aload         7
     124: aload_2
     125: aload_3
     126: invokevirtual #12                 // Method com/ibm/icu/text/PluralRanges$Matrix.setIfNew:(Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;)V
     129: iinc          6, 1
     132: goto          42
     135: goto          229
     138: aload_2
     139: ifnonnull     199
     142: aload_0
     143: getfield      #6                  // Field explicit:[Z
     146: aload_1
     147: invokevirtual #10                 // Method com/ibm/icu/impl/StandardPlural.ordinal:()I
     150: iconst_1
     151: bastore
     152: invokestatic  #11                 // Method com/ibm/icu/impl/StandardPlural.values:()[Lcom/ibm/icu/impl/StandardPlural;
     155: astore        4
     157: aload         4
     159: arraylength
     160: istore        5
     162: iconst_0
     163: istore        6
     165: iload         6
     167: iload         5
     169: if_icmpge     196
     172: aload         4
     174: iload         6
     176: aaload
     177: astore        7
     179: aload_0
     180: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
     183: aload_1
     184: aload         7
     186: aload_3
     187: invokevirtual #12                 // Method com/ibm/icu/text/PluralRanges$Matrix.setIfNew:(Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;)V
     190: iinc          6, 1
     193: goto          165
     196: goto          229
     199: aload_0
     200: getfield      #6                  // Field explicit:[Z
     203: aload_1
     204: invokevirtual #10                 // Method com/ibm/icu/impl/StandardPlural.ordinal:()I
     207: iconst_1
     208: bastore
     209: aload_0
     210: getfield      #6                  // Field explicit:[Z
     213: aload_2
     214: invokevirtual #10                 // Method com/ibm/icu/impl/StandardPlural.ordinal:()I
     217: iconst_1
     218: bastore
     219: aload_0
     220: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
     223: aload_1
     224: aload_2
     225: aload_3
     226: invokevirtual #12                 // Method com/ibm/icu/text/PluralRanges$Matrix.setIfNew:(Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;)V
     229: return

  public com.ibm.icu.impl.StandardPlural get(com.ibm.icu.impl.StandardPlural, com.ibm.icu.impl.StandardPlural);
    Code:
       0: aload_0
       1: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method com/ibm/icu/text/PluralRanges$Matrix.get:(Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;)Lcom/ibm/icu/impl/StandardPlural;
       9: astore_3
      10: aload_3
      11: ifnonnull     18
      14: aload_2
      15: goto          19
      18: aload_3
      19: areturn

  public boolean isExplicit(com.ibm.icu.impl.StandardPlural, com.ibm.icu.impl.StandardPlural);
    Code:
       0: aload_0
       1: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method com/ibm/icu/text/PluralRanges$Matrix.get:(Lcom/ibm/icu/impl/StandardPlural;Lcom/ibm/icu/impl/StandardPlural;)Lcom/ibm/icu/impl/StandardPlural;
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isExplicitlySet(com.ibm.icu.impl.StandardPlural);
    Code:
       0: aload_0
       1: getfield      #6                  // Field explicit:[Z
       4: aload_1
       5: invokevirtual #10                 // Method com/ibm/icu/impl/StandardPlural.ordinal:()I
       8: baload
       9: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class com/ibm/icu/text/PluralRanges
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #14                 // class com/ibm/icu/text/PluralRanges
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
      25: aload_2
      26: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
      29: invokevirtual #15                 // Method com/ibm/icu/text/PluralRanges$Matrix.equals:(Ljava/lang/Object;)Z
      32: ifeq          53
      35: aload_0
      36: getfield      #6                  // Field explicit:[Z
      39: aload_2
      40: getfield      #6                  // Field explicit:[Z
      43: invokestatic  #16                 // Method java/util/Arrays.equals:([Z[Z)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
       4: invokevirtual #17                 // Method com/ibm/icu/text/PluralRanges$Matrix.hashCode:()I
       7: ireturn

  public int compareTo(com.ibm.icu.text.PluralRanges);
    Code:
       0: aload_0
       1: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
       4: aload_1
       5: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
       8: invokevirtual #18                 // Method com/ibm/icu/text/PluralRanges$Matrix.compareTo:(Lcom/ibm/icu/text/PluralRanges$Matrix;)I
      11: ireturn

  public boolean isFrozen();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isFrozen:Z
       4: ireturn

  public com.ibm.icu.text.PluralRanges freeze();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field isFrozen:Z
       5: aload_0
       6: areturn

  public com.ibm.icu.text.PluralRanges cloneAsThawed();
    Code:
       0: new           #14                 // class com/ibm/icu/text/PluralRanges
       3: dup
       4: invokespecial #19                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field explicit:[Z
      13: invokevirtual #20                 // Method "[Z".clone:()Ljava/lang/Object;
      16: checkcast     #21                 // class "[Z"
      19: putfield      #6                  // Field explicit:[Z
      22: aload_1
      23: aload_0
      24: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
      27: invokevirtual #22                 // Method com/ibm/icu/text/PluralRanges$Matrix.clone:()Lcom/ibm/icu/text/PluralRanges$Matrix;
      30: putfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
      33: aload_1
      34: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field matrix:Lcom/ibm/icu/text/PluralRanges$Matrix;
       4: invokevirtual #23                 // Method com/ibm/icu/text/PluralRanges$Matrix.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.Object cloneAsThawed();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method cloneAsThawed:()Lcom/ibm/icu/text/PluralRanges;
       4: areturn

  public java.lang.Object freeze();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method freeze:()Lcom/ibm/icu/text/PluralRanges;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class com/ibm/icu/text/PluralRanges
       5: invokevirtual #26                 // Method compareTo:(Lcom/ibm/icu/text/PluralRanges;)I
       8: ireturn
}
