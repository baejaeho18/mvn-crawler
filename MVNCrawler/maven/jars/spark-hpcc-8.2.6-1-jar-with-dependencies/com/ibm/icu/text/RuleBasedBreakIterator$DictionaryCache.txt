Compiled from "RuleBasedBreakIterator.java"
class com.ibm.icu.text.RuleBasedBreakIterator$DictionaryCache {
  com.ibm.icu.text.DictionaryBreakEngine$DequeI fBreaks;

  int fPositionInCache;

  int fStart;

  int fLimit;

  int fFirstRuleStatusIndex;

  int fOtherRuleStatusIndex;

  int fBoundary;

  int fStatusIndex;

  static final boolean $assertionsDisabled;

  final com.ibm.icu.text.RuleBasedBreakIterator this$0;

  void reset();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #1                  // Field fPositionInCache:I
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field fStart:I
      10: aload_0
      11: iconst_0
      12: putfield      #3                  // Field fLimit:I
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field fFirstRuleStatusIndex:I
      20: aload_0
      21: iconst_0
      22: putfield      #5                  // Field fOtherRuleStatusIndex:I
      25: aload_0
      26: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      29: invokevirtual #7                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.removeAllElements:()V
      32: return

  boolean following(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #3                  // Field fLimit:I
       5: if_icmpge     16
       8: iload_1
       9: aload_0
      10: getfield      #2                  // Field fStart:I
      13: if_icmpge     23
      16: aload_0
      17: iconst_m1
      18: putfield      #1                  // Field fPositionInCache:I
      21: iconst_0
      22: ireturn
      23: iconst_0
      24: istore_2
      25: aload_0
      26: getfield      #1                  // Field fPositionInCache:I
      29: iflt          138
      32: aload_0
      33: getfield      #1                  // Field fPositionInCache:I
      36: aload_0
      37: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      40: invokevirtual #8                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.size:()I
      43: if_icmpge     138
      46: aload_0
      47: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      50: aload_0
      51: getfield      #1                  // Field fPositionInCache:I
      54: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
      57: iload_1
      58: if_icmpne     138
      61: aload_0
      62: dup
      63: getfield      #1                  // Field fPositionInCache:I
      66: iconst_1
      67: iadd
      68: putfield      #1                  // Field fPositionInCache:I
      71: aload_0
      72: getfield      #1                  // Field fPositionInCache:I
      75: aload_0
      76: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      79: invokevirtual #8                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.size:()I
      82: if_icmplt     92
      85: aload_0
      86: iconst_m1
      87: putfield      #1                  // Field fPositionInCache:I
      90: iconst_0
      91: ireturn
      92: aload_0
      93: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      96: aload_0
      97: getfield      #1                  // Field fPositionInCache:I
     100: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
     103: istore_2
     104: getstatic     #10                 // Field $assertionsDisabled:Z
     107: ifne          123
     110: iload_2
     111: iload_1
     112: if_icmpgt     123
     115: new           #11                 // class java/lang/AssertionError
     118: dup
     119: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     122: athrow
     123: aload_0
     124: iload_2
     125: putfield      #13                 // Field fBoundary:I
     128: aload_0
     129: aload_0
     130: getfield      #5                  // Field fOtherRuleStatusIndex:I
     133: putfield      #14                 // Field fStatusIndex:I
     136: iconst_1
     137: ireturn
     138: aload_0
     139: iconst_0
     140: putfield      #1                  // Field fPositionInCache:I
     143: aload_0
     144: getfield      #1                  // Field fPositionInCache:I
     147: aload_0
     148: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     151: invokevirtual #8                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.size:()I
     154: if_icmpge     202
     157: aload_0
     158: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     161: aload_0
     162: getfield      #1                  // Field fPositionInCache:I
     165: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
     168: istore_2
     169: iload_2
     170: iload_1
     171: if_icmple     189
     174: aload_0
     175: iload_2
     176: putfield      #13                 // Field fBoundary:I
     179: aload_0
     180: aload_0
     181: getfield      #5                  // Field fOtherRuleStatusIndex:I
     184: putfield      #14                 // Field fStatusIndex:I
     187: iconst_1
     188: ireturn
     189: aload_0
     190: dup
     191: getfield      #1                  // Field fPositionInCache:I
     194: iconst_1
     195: iadd
     196: putfield      #1                  // Field fPositionInCache:I
     199: goto          143
     202: getstatic     #10                 // Field $assertionsDisabled:Z
     205: ifne          216
     208: new           #11                 // class java/lang/AssertionError
     211: dup
     212: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     215: athrow
     216: aload_0
     217: iconst_m1
     218: putfield      #1                  // Field fPositionInCache:I
     221: iconst_0
     222: ireturn

  boolean preceding(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field fStart:I
       5: if_icmple     16
       8: iload_1
       9: aload_0
      10: getfield      #3                  // Field fLimit:I
      13: if_icmple     23
      16: aload_0
      17: iconst_m1
      18: putfield      #1                  // Field fPositionInCache:I
      21: iconst_0
      22: ireturn
      23: iload_1
      24: aload_0
      25: getfield      #3                  // Field fLimit:I
      28: if_icmpne     80
      31: aload_0
      32: aload_0
      33: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      36: invokevirtual #8                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.size:()I
      39: iconst_1
      40: isub
      41: putfield      #1                  // Field fPositionInCache:I
      44: aload_0
      45: getfield      #1                  // Field fPositionInCache:I
      48: iflt          80
      51: getstatic     #10                 // Field $assertionsDisabled:Z
      54: ifne          80
      57: aload_0
      58: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      61: aload_0
      62: getfield      #1                  // Field fPositionInCache:I
      65: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
      68: iload_1
      69: if_icmpeq     80
      72: new           #11                 // class java/lang/AssertionError
      75: dup
      76: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: aload_0
      81: getfield      #1                  // Field fPositionInCache:I
      84: ifle          187
      87: aload_0
      88: getfield      #1                  // Field fPositionInCache:I
      91: aload_0
      92: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      95: invokevirtual #8                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.size:()I
      98: if_icmpge     187
     101: aload_0
     102: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     105: aload_0
     106: getfield      #1                  // Field fPositionInCache:I
     109: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
     112: iload_1
     113: if_icmpne     187
     116: aload_0
     117: dup
     118: getfield      #1                  // Field fPositionInCache:I
     121: iconst_1
     122: isub
     123: putfield      #1                  // Field fPositionInCache:I
     126: aload_0
     127: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     130: aload_0
     131: getfield      #1                  // Field fPositionInCache:I
     134: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
     137: istore_2
     138: getstatic     #10                 // Field $assertionsDisabled:Z
     141: ifne          157
     144: iload_2
     145: iload_1
     146: if_icmplt     157
     149: new           #11                 // class java/lang/AssertionError
     152: dup
     153: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     156: athrow
     157: aload_0
     158: iload_2
     159: putfield      #13                 // Field fBoundary:I
     162: aload_0
     163: iload_2
     164: aload_0
     165: getfield      #2                  // Field fStart:I
     168: if_icmpne     178
     171: aload_0
     172: getfield      #4                  // Field fFirstRuleStatusIndex:I
     175: goto          182
     178: aload_0
     179: getfield      #5                  // Field fOtherRuleStatusIndex:I
     182: putfield      #14                 // Field fStatusIndex:I
     185: iconst_1
     186: ireturn
     187: aload_0
     188: getfield      #1                  // Field fPositionInCache:I
     191: ifne          201
     194: aload_0
     195: iconst_m1
     196: putfield      #1                  // Field fPositionInCache:I
     199: iconst_0
     200: ireturn
     201: aload_0
     202: aload_0
     203: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     206: invokevirtual #8                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.size:()I
     209: iconst_1
     210: isub
     211: putfield      #1                  // Field fPositionInCache:I
     214: aload_0
     215: getfield      #1                  // Field fPositionInCache:I
     218: iflt          281
     221: aload_0
     222: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     225: aload_0
     226: getfield      #1                  // Field fPositionInCache:I
     229: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
     232: istore_2
     233: iload_2
     234: iload_1
     235: if_icmpge     268
     238: aload_0
     239: iload_2
     240: putfield      #13                 // Field fBoundary:I
     243: aload_0
     244: iload_2
     245: aload_0
     246: getfield      #2                  // Field fStart:I
     249: if_icmpne     259
     252: aload_0
     253: getfield      #4                  // Field fFirstRuleStatusIndex:I
     256: goto          263
     259: aload_0
     260: getfield      #5                  // Field fOtherRuleStatusIndex:I
     263: putfield      #14                 // Field fStatusIndex:I
     266: iconst_1
     267: ireturn
     268: aload_0
     269: dup
     270: getfield      #1                  // Field fPositionInCache:I
     273: iconst_1
     274: isub
     275: putfield      #1                  // Field fPositionInCache:I
     278: goto          214
     281: getstatic     #10                 // Field $assertionsDisabled:Z
     284: ifne          295
     287: new           #11                 // class java/lang/AssertionError
     290: dup
     291: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     294: athrow
     295: aload_0
     296: iconst_m1
     297: putfield      #1                  // Field fPositionInCache:I
     300: iconst_0
     301: ireturn

  void populateDictionary(int, int, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: iconst_1
       4: if_icmpgt     8
       7: return
       8: aload_0
       9: invokevirtual #15                 // Method reset:()V
      12: aload_0
      13: iload_3
      14: putfield      #4                  // Field fFirstRuleStatusIndex:I
      17: aload_0
      18: iload         4
      20: putfield      #5                  // Field fOtherRuleStatusIndex:I
      23: iload_1
      24: istore        5
      26: iload_2
      27: istore        6
      29: iconst_0
      30: istore        9
      32: aload_0
      33: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
      36: invokestatic  #17                 // Method com/ibm/icu/text/RuleBasedBreakIterator.access$000:(Lcom/ibm/icu/text/RuleBasedBreakIterator;)Ljava/text/CharacterIterator;
      39: iload         5
      41: invokeinterface #18,  2           // InterfaceMethod java/text/CharacterIterator.setIndex:(I)C
      46: pop
      47: aload_0
      48: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
      51: invokestatic  #17                 // Method com/ibm/icu/text/RuleBasedBreakIterator.access$000:(Lcom/ibm/icu/text/RuleBasedBreakIterator;)Ljava/text/CharacterIterator;
      54: invokestatic  #19                 // Method com/ibm/icu/impl/CharacterIteration.current32:(Ljava/text/CharacterIterator;)I
      57: istore        10
      59: aload_0
      60: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
      63: getfield      #20                 // Field com/ibm/icu/text/RuleBasedBreakIterator.fRData:Lcom/ibm/icu/text/RBBIDataWrapper;
      66: getfield      #21                 // Field com/ibm/icu/text/RBBIDataWrapper.fTrie:Lcom/ibm/icu/impl/Trie2;
      69: iload         10
      71: invokevirtual #22                 // Method com/ibm/icu/impl/Trie2.get:(I)I
      74: i2s
      75: istore        7
      77: aload_0
      78: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
      81: invokestatic  #17                 // Method com/ibm/icu/text/RuleBasedBreakIterator.access$000:(Lcom/ibm/icu/text/RuleBasedBreakIterator;)Ljava/text/CharacterIterator;
      84: invokeinterface #23,  1           // InterfaceMethod java/text/CharacterIterator.getIndex:()I
      89: dup
      90: istore        8
      92: iload         6
      94: if_icmpge     139
      97: iload         7
      99: sipush        16384
     102: iand
     103: ifne          139
     106: aload_0
     107: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
     110: invokestatic  #17                 // Method com/ibm/icu/text/RuleBasedBreakIterator.access$000:(Lcom/ibm/icu/text/RuleBasedBreakIterator;)Ljava/text/CharacterIterator;
     113: invokestatic  #24                 // Method com/ibm/icu/impl/CharacterIteration.next32:(Ljava/text/CharacterIterator;)I
     116: istore        10
     118: aload_0
     119: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
     122: getfield      #20                 // Field com/ibm/icu/text/RuleBasedBreakIterator.fRData:Lcom/ibm/icu/text/RBBIDataWrapper;
     125: getfield      #21                 // Field com/ibm/icu/text/RBBIDataWrapper.fTrie:Lcom/ibm/icu/impl/Trie2;
     128: iload         10
     130: invokevirtual #22                 // Method com/ibm/icu/impl/Trie2.get:(I)I
     133: i2s
     134: istore        7
     136: goto          77
     139: iload         8
     141: iload         6
     143: if_icmplt     149
     146: goto          225
     149: aload_0
     150: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
     153: iload         10
     155: invokestatic  #25                 // Method com/ibm/icu/text/RuleBasedBreakIterator.access$100:(Lcom/ibm/icu/text/RuleBasedBreakIterator;I)Lcom/ibm/icu/text/LanguageBreakEngine;
     158: astore        11
     160: aload         11
     162: ifnull        192
     165: iload         9
     167: aload         11
     169: aload_0
     170: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
     173: invokestatic  #17                 // Method com/ibm/icu/text/RuleBasedBreakIterator.access$000:(Lcom/ibm/icu/text/RuleBasedBreakIterator;)Ljava/text/CharacterIterator;
     176: iload         5
     178: iload         6
     180: aload_0
     181: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     184: invokeinterface #26,  5           // InterfaceMethod com/ibm/icu/text/LanguageBreakEngine.findBreaks:(Ljava/text/CharacterIterator;IILcom/ibm/icu/text/DictionaryBreakEngine$DequeI;)I
     189: iadd
     190: istore        9
     192: aload_0
     193: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
     196: invokestatic  #17                 // Method com/ibm/icu/text/RuleBasedBreakIterator.access$000:(Lcom/ibm/icu/text/RuleBasedBreakIterator;)Ljava/text/CharacterIterator;
     199: invokestatic  #19                 // Method com/ibm/icu/impl/CharacterIteration.current32:(Ljava/text/CharacterIterator;)I
     202: istore        10
     204: aload_0
     205: getfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
     208: getfield      #20                 // Field com/ibm/icu/text/RuleBasedBreakIterator.fRData:Lcom/ibm/icu/text/RBBIDataWrapper;
     211: getfield      #21                 // Field com/ibm/icu/text/RBBIDataWrapper.fTrie:Lcom/ibm/icu/impl/Trie2;
     214: iload         10
     216: invokevirtual #22                 // Method com/ibm/icu/impl/Trie2.get:(I)I
     219: i2s
     220: istore        7
     222: goto          77
     225: iload         9
     227: ifle          323
     230: getstatic     #10                 // Field $assertionsDisabled:Z
     233: ifne          256
     236: iload         9
     238: aload_0
     239: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     242: invokevirtual #8                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.size:()I
     245: if_icmpeq     256
     248: new           #11                 // class java/lang/AssertionError
     251: dup
     252: invokespecial #12                 // Method java/lang/AssertionError."<init>":()V
     255: athrow
     256: iload_1
     257: aload_0
     258: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     261: iconst_0
     262: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
     265: if_icmpge     276
     268: aload_0
     269: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     272: iload_1
     273: invokevirtual #27                 // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.offer:(I)V
     276: iload_2
     277: aload_0
     278: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     281: invokevirtual #28                 // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.peek:()I
     284: if_icmple     295
     287: aload_0
     288: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     291: iload_2
     292: invokevirtual #29                 // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.push:(I)V
     295: aload_0
     296: iconst_0
     297: putfield      #1                  // Field fPositionInCache:I
     300: aload_0
     301: aload_0
     302: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     305: iconst_0
     306: invokevirtual #9                  // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.elementAt:(I)I
     309: putfield      #2                  // Field fStart:I
     312: aload_0
     313: aload_0
     314: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
     317: invokevirtual #28                 // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.peek:()I
     320: putfield      #3                  // Field fLimit:I
     323: return

  com.ibm.icu.text.RuleBasedBreakIterator$DictionaryCache(com.ibm.icu.text.RuleBasedBreakIterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
       5: aload_0
       6: invokespecial #30                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: iconst_m1
      11: putfield      #1                  // Field fPositionInCache:I
      14: aload_0
      15: new           #31                 // class com/ibm/icu/text/DictionaryBreakEngine$DequeI
      18: dup
      19: invokespecial #32                 // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI."<init>":()V
      22: putfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      25: return

  com.ibm.icu.text.RuleBasedBreakIterator$DictionaryCache(com.ibm.icu.text.RuleBasedBreakIterator, com.ibm.icu.text.RuleBasedBreakIterator$DictionaryCache);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field this$0:Lcom/ibm/icu/text/RuleBasedBreakIterator;
       5: aload_0
       6: invokespecial #30                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: getfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      14: invokevirtual #33                 // Method com/ibm/icu/text/DictionaryBreakEngine$DequeI.clone:()Ljava/lang/Object;
      17: checkcast     #31                 // class com/ibm/icu/text/DictionaryBreakEngine$DequeI
      20: putfield      #6                  // Field fBreaks:Lcom/ibm/icu/text/DictionaryBreakEngine$DequeI;
      23: goto          36
      26: astore_3
      27: new           #35                 // class java/lang/RuntimeException
      30: dup
      31: aload_3
      32: invokespecial #36                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      35: athrow
      36: aload_0
      37: aload_2
      38: getfield      #1                  // Field fPositionInCache:I
      41: putfield      #1                  // Field fPositionInCache:I
      44: aload_0
      45: aload_2
      46: getfield      #2                  // Field fStart:I
      49: putfield      #2                  // Field fStart:I
      52: aload_0
      53: aload_2
      54: getfield      #3                  // Field fLimit:I
      57: putfield      #3                  // Field fLimit:I
      60: aload_0
      61: aload_2
      62: getfield      #4                  // Field fFirstRuleStatusIndex:I
      65: putfield      #4                  // Field fFirstRuleStatusIndex:I
      68: aload_0
      69: aload_2
      70: getfield      #5                  // Field fOtherRuleStatusIndex:I
      73: putfield      #5                  // Field fOtherRuleStatusIndex:I
      76: aload_0
      77: aload_2
      78: getfield      #13                 // Field fBoundary:I
      81: putfield      #13                 // Field fBoundary:I
      84: aload_0
      85: aload_2
      86: getfield      #14                 // Field fStatusIndex:I
      89: putfield      #14                 // Field fStatusIndex:I
      92: return
    Exception table:
       from    to  target type
           9    23    26   Class java/lang/CloneNotSupportedException

  static {};
    Code:
       0: ldc           #37                 // class com/ibm/icu/text/RuleBasedBreakIterator
       2: invokevirtual #38                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #10                 // Field $assertionsDisabled:Z
      16: return
}
