Compiled from "RBBINode.java"
class com.ibm.icu.text.RBBINode {
  static final int setRef;

  static final int uset;

  static final int varRef;

  static final int leafChar;

  static final int lookAhead;

  static final int tag;

  static final int endMark;

  static final int opStart;

  static final int opCat;

  static final int opOr;

  static final int opStar;

  static final int opPlus;

  static final int opQuestion;

  static final int opBreak;

  static final int opReverse;

  static final int opLParen;

  static final int nodeTypeLimit;

  static final java.lang.String[] nodeTypeNames;

  static final int precZero;

  static final int precStart;

  static final int precLParen;

  static final int precOpOr;

  static final int precOpCat;

  int fType;

  com.ibm.icu.text.RBBINode fParent;

  com.ibm.icu.text.RBBINode fLeftChild;

  com.ibm.icu.text.RBBINode fRightChild;

  com.ibm.icu.text.UnicodeSet fInputSet;

  int fPrecedence;

  java.lang.String fText;

  int fFirstPos;

  int fLastPos;

  boolean fNullable;

  int fVal;

  boolean fLookAheadEnd;

  boolean fRuleRoot;

  boolean fChainIn;

  java.util.Set<com.ibm.icu.text.RBBINode> fFirstPosSet;

  java.util.Set<com.ibm.icu.text.RBBINode> fLastPosSet;

  java.util.Set<com.ibm.icu.text.RBBINode> fFollowPos;

  int fSerialNum;

  static int gLastSerial;

  com.ibm.icu.text.RBBINode(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field fPrecedence:I
       9: iload_1
      10: bipush        16
      12: if_icmpge     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokestatic  #4                  // Method com/ibm/icu/impl/Assert.assrt:(Z)V
      23: aload_0
      24: getstatic     #5                  // Field gLastSerial:I
      27: iconst_1
      28: iadd
      29: dup
      30: putstatic     #5                  // Field gLastSerial:I
      33: putfield      #6                  // Field fSerialNum:I
      36: aload_0
      37: iload_1
      38: putfield      #7                  // Field fType:I
      41: aload_0
      42: new           #8                  // class java/util/HashSet
      45: dup
      46: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      49: putfield      #10                 // Field fFirstPosSet:Ljava/util/Set;
      52: aload_0
      53: new           #8                  // class java/util/HashSet
      56: dup
      57: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      60: putfield      #11                 // Field fLastPosSet:Ljava/util/Set;
      63: aload_0
      64: new           #8                  // class java/util/HashSet
      67: dup
      68: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      71: putfield      #12                 // Field fFollowPos:Ljava/util/Set;
      74: iload_1
      75: bipush        8
      77: if_icmpne     88
      80: aload_0
      81: iconst_4
      82: putfield      #3                  // Field fPrecedence:I
      85: goto          135
      88: iload_1
      89: bipush        9
      91: if_icmpne     102
      94: aload_0
      95: iconst_3
      96: putfield      #3                  // Field fPrecedence:I
      99: goto          135
     102: iload_1
     103: bipush        7
     105: if_icmpne     116
     108: aload_0
     109: iconst_1
     110: putfield      #3                  // Field fPrecedence:I
     113: goto          135
     116: iload_1
     117: bipush        15
     119: if_icmpne     130
     122: aload_0
     123: iconst_2
     124: putfield      #3                  // Field fPrecedence:I
     127: goto          135
     130: aload_0
     131: iconst_0
     132: putfield      #3                  // Field fPrecedence:I
     135: return

  com.ibm.icu.text.RBBINode(com.ibm.icu.text.RBBINode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field fPrecedence:I
       9: aload_0
      10: getstatic     #5                  // Field gLastSerial:I
      13: iconst_1
      14: iadd
      15: dup
      16: putstatic     #5                  // Field gLastSerial:I
      19: putfield      #6                  // Field fSerialNum:I
      22: aload_0
      23: aload_1
      24: getfield      #7                  // Field fType:I
      27: putfield      #7                  // Field fType:I
      30: aload_0
      31: aload_1
      32: getfield      #13                 // Field fInputSet:Lcom/ibm/icu/text/UnicodeSet;
      35: putfield      #13                 // Field fInputSet:Lcom/ibm/icu/text/UnicodeSet;
      38: aload_0
      39: aload_1
      40: getfield      #3                  // Field fPrecedence:I
      43: putfield      #3                  // Field fPrecedence:I
      46: aload_0
      47: aload_1
      48: getfield      #14                 // Field fText:Ljava/lang/String;
      51: putfield      #14                 // Field fText:Ljava/lang/String;
      54: aload_0
      55: aload_1
      56: getfield      #15                 // Field fFirstPos:I
      59: putfield      #15                 // Field fFirstPos:I
      62: aload_0
      63: aload_1
      64: getfield      #16                 // Field fLastPos:I
      67: putfield      #16                 // Field fLastPos:I
      70: aload_0
      71: aload_1
      72: getfield      #17                 // Field fNullable:Z
      75: putfield      #17                 // Field fNullable:Z
      78: aload_0
      79: aload_1
      80: getfield      #18                 // Field fVal:I
      83: putfield      #18                 // Field fVal:I
      86: aload_0
      87: iconst_0
      88: putfield      #19                 // Field fRuleRoot:Z
      91: aload_0
      92: aload_1
      93: getfield      #20                 // Field fChainIn:Z
      96: putfield      #20                 // Field fChainIn:Z
      99: aload_0
     100: new           #8                  // class java/util/HashSet
     103: dup
     104: aload_1
     105: getfield      #10                 // Field fFirstPosSet:Ljava/util/Set;
     108: invokespecial #21                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     111: putfield      #10                 // Field fFirstPosSet:Ljava/util/Set;
     114: aload_0
     115: new           #8                  // class java/util/HashSet
     118: dup
     119: aload_1
     120: getfield      #11                 // Field fLastPosSet:Ljava/util/Set;
     123: invokespecial #21                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     126: putfield      #11                 // Field fLastPosSet:Ljava/util/Set;
     129: aload_0
     130: new           #8                  // class java/util/HashSet
     133: dup
     134: aload_1
     135: getfield      #12                 // Field fFollowPos:Ljava/util/Set;
     138: invokespecial #21                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     141: putfield      #12                 // Field fFollowPos:Ljava/util/Set;
     144: return

  com.ibm.icu.text.RBBINode cloneTree();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fType:I
       4: iconst_2
       5: if_icmpne     19
       8: aload_0
       9: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      12: invokevirtual #23                 // Method cloneTree:()Lcom/ibm/icu/text/RBBINode;
      15: astore_1
      16: goto          93
      19: aload_0
      20: getfield      #7                  // Field fType:I
      23: iconst_1
      24: if_icmpne     32
      27: aload_0
      28: astore_1
      29: goto          93
      32: new           #2                  // class com/ibm/icu/text/RBBINode
      35: dup
      36: aload_0
      37: invokespecial #24                 // Method "<init>":(Lcom/ibm/icu/text/RBBINode;)V
      40: astore_1
      41: aload_0
      42: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      45: ifnull        67
      48: aload_1
      49: aload_0
      50: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      53: invokevirtual #23                 // Method cloneTree:()Lcom/ibm/icu/text/RBBINode;
      56: putfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      59: aload_1
      60: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      63: aload_1
      64: putfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
      67: aload_0
      68: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      71: ifnull        93
      74: aload_1
      75: aload_0
      76: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      79: invokevirtual #23                 // Method cloneTree:()Lcom/ibm/icu/text/RBBINode;
      82: putfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      85: aload_1
      86: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      89: aload_1
      90: putfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
      93: aload_1
      94: areturn

  com.ibm.icu.text.RBBINode flattenVariables();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fType:I
       4: iconst_2
       5: if_icmpne     34
       8: aload_0
       9: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      12: invokevirtual #23                 // Method cloneTree:()Lcom/ibm/icu/text/RBBINode;
      15: astore_1
      16: aload_1
      17: aload_0
      18: getfield      #19                 // Field fRuleRoot:Z
      21: putfield      #19                 // Field fRuleRoot:Z
      24: aload_1
      25: aload_0
      26: getfield      #20                 // Field fChainIn:Z
      29: putfield      #20                 // Field fChainIn:Z
      32: aload_1
      33: areturn
      34: aload_0
      35: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      38: ifnull        60
      41: aload_0
      42: aload_0
      43: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      46: invokevirtual #27                 // Method flattenVariables:()Lcom/ibm/icu/text/RBBINode;
      49: putfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      52: aload_0
      53: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      56: aload_0
      57: putfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
      60: aload_0
      61: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      64: ifnull        86
      67: aload_0
      68: aload_0
      69: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      72: invokevirtual #27                 // Method flattenVariables:()Lcom/ibm/icu/text/RBBINode;
      75: putfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      78: aload_0
      79: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      82: aload_0
      83: putfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
      86: aload_0
      87: areturn

  void flattenSets();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fType:I
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #4                  // Method com/ibm/icu/impl/Assert.assrt:(Z)V
      15: aload_0
      16: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      19: ifnull        73
      22: aload_0
      23: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      26: getfield      #7                  // Field fType:I
      29: ifne          66
      32: aload_0
      33: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      36: astore_1
      37: aload_1
      38: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      41: astore_2
      42: aload_2
      43: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      46: astore_3
      47: aload_0
      48: aload_3
      49: invokevirtual #23                 // Method cloneTree:()Lcom/ibm/icu/text/RBBINode;
      52: putfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      55: aload_0
      56: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      59: aload_0
      60: putfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
      63: goto          73
      66: aload_0
      67: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      70: invokevirtual #28                 // Method flattenSets:()V
      73: aload_0
      74: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      77: ifnull        131
      80: aload_0
      81: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      84: getfield      #7                  // Field fType:I
      87: ifne          124
      90: aload_0
      91: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      94: astore_1
      95: aload_1
      96: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      99: astore_2
     100: aload_2
     101: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
     104: astore_3
     105: aload_0
     106: aload_3
     107: invokevirtual #23                 // Method cloneTree:()Lcom/ibm/icu/text/RBBINode;
     110: putfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
     113: aload_0
     114: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
     117: aload_0
     118: putfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
     121: goto          131
     124: aload_0
     125: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
     128: invokevirtual #28                 // Method flattenSets:()V
     131: return

  void findNodes(java.util.List<com.ibm.icu.text.RBBINode>, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field fType:I
       4: iload_2
       5: if_icmpne     16
       8: aload_1
       9: aload_0
      10: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      20: ifnull        32
      23: aload_0
      24: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      27: aload_1
      28: iload_2
      29: invokevirtual #30                 // Method findNodes:(Ljava/util/List;I)V
      32: aload_0
      33: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      36: ifnull        48
      39: aload_0
      40: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      43: aload_1
      44: iload_2
      45: invokevirtual #30                 // Method findNodes:(Ljava/util/List;I)V
      48: return

  static void printNode(com.ibm.icu.text.RBBINode);
    Code:
       0: aload_0
       1: ifnonnull     15
       4: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
       7: ldc           #32                 // String  -- null --\n
       9: invokevirtual #33                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      12: goto          160
      15: aload_0
      16: getfield      #6                  // Field fSerialNum:I
      19: bipush        10
      21: invokestatic  #34                 // Method printInt:(II)V
      24: getstatic     #35                 // Field nodeTypeNames:[Ljava/lang/String;
      27: aload_0
      28: getfield      #7                  // Field fType:I
      31: aaload
      32: bipush        11
      34: invokestatic  #36                 // Method printString:(Ljava/lang/String;I)V
      37: aload_0
      38: getfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
      41: ifnonnull     48
      44: iconst_0
      45: goto          55
      48: aload_0
      49: getfield      #25                 // Field fParent:Lcom/ibm/icu/text/RBBINode;
      52: getfield      #6                  // Field fSerialNum:I
      55: bipush        11
      57: invokestatic  #34                 // Method printInt:(II)V
      60: aload_0
      61: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      64: ifnonnull     71
      67: iconst_0
      68: goto          78
      71: aload_0
      72: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      75: getfield      #6                  // Field fSerialNum:I
      78: bipush        11
      80: invokestatic  #34                 // Method printInt:(II)V
      83: aload_0
      84: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      87: ifnonnull     94
      90: iconst_0
      91: goto          101
      94: aload_0
      95: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      98: getfield      #6                  // Field fSerialNum:I
     101: bipush        12
     103: invokestatic  #34                 // Method printInt:(II)V
     106: aload_0
     107: getfield      #15                 // Field fFirstPos:I
     110: bipush        12
     112: invokestatic  #34                 // Method printInt:(II)V
     115: aload_0
     116: getfield      #18                 // Field fVal:I
     119: bipush        7
     121: invokestatic  #34                 // Method printInt:(II)V
     124: aload_0
     125: getfield      #7                  // Field fType:I
     128: iconst_2
     129: if_icmpne     160
     132: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
     135: new           #37                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #39                 // String
     144: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_0
     148: getfield      #14                 // Field fText:Ljava/lang/String;
     151: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     157: invokevirtual #33                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
     160: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
     163: ldc           #42                 // String
     165: invokevirtual #43                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     168: return

  static void printString(java.lang.String, int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: ifge          20
       6: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
       9: bipush        32
      11: invokevirtual #44                 // Method java/io/PrintStream.print:(C)V
      14: iinc          2, 1
      17: goto          2
      20: aload_0
      21: invokevirtual #45                 // Method java/lang/String.length:()I
      24: istore_2
      25: iload_2
      26: iload_1
      27: if_icmpge     44
      30: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
      33: bipush        32
      35: invokevirtual #44                 // Method java/io/PrintStream.print:(C)V
      38: iinc          2, 1
      41: goto          25
      44: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
      47: aload_0
      48: invokevirtual #33                 // Method java/io/PrintStream.print:(Ljava/lang/String;)V
      51: return

  static void printInt(int, int);
    Code:
       0: iload_0
       1: invokestatic  #46                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: iload_1
       7: aload_2
       8: invokevirtual #45                 // Method java/lang/String.length:()I
      11: iconst_1
      12: iadd
      13: invokestatic  #47                 // Method java/lang/Math.max:(II)I
      16: invokestatic  #36                 // Method printString:(Ljava/lang/String;I)V
      19: return

  static void printHex(int, int);
    Code:
       0: iload_0
       1: bipush        16
       3: invokestatic  #48                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;
       6: astore_2
       7: ldc           #49                 // String 00000
       9: iconst_0
      10: iconst_0
      11: iconst_5
      12: aload_2
      13: invokevirtual #45                 // Method java/lang/String.length:()I
      16: isub
      17: invokestatic  #47                 // Method java/lang/Math.max:(II)I
      20: invokevirtual #50                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      23: astore_3
      24: new           #37                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      31: aload_3
      32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: astore_2
      43: aload_2
      44: iload_1
      45: invokestatic  #36                 // Method printString:(Ljava/lang/String;I)V
      48: return

  void printTree(boolean);
    Code:
       0: iload_1
       1: ifeq          20
       4: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
       7: ldc           #51                 // String -------------------------------------------------------------------
       9: invokevirtual #43                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      12: getstatic     #31                 // Field java/lang/System.out:Ljava/io/PrintStream;
      15: ldc           #52                 // String     Serial       type     Parent  LeftChild  RightChild    position  value
      17: invokevirtual #43                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      20: aload_0
      21: invokestatic  #53                 // Method printNode:(Lcom/ibm/icu/text/RBBINode;)V
      24: aload_0
      25: getfield      #7                  // Field fType:I
      28: iconst_2
      29: if_icmpeq     62
      32: aload_0
      33: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      36: ifnull        47
      39: aload_0
      40: getfield      #22                 // Field fLeftChild:Lcom/ibm/icu/text/RBBINode;
      43: iconst_0
      44: invokevirtual #54                 // Method printTree:(Z)V
      47: aload_0
      48: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      51: ifnull        62
      54: aload_0
      55: getfield      #26                 // Field fRightChild:Lcom/ibm/icu/text/RBBINode;
      58: iconst_0
      59: invokevirtual #54                 // Method printTree:(Z)V
      62: return

  static {};
    Code:
       0: bipush        16
       2: anewarray     #55                 // class java/lang/String
       5: dup
       6: iconst_0
       7: ldc           #56                 // String setRef
       9: aastore
      10: dup
      11: iconst_1
      12: ldc           #57                 // String uset
      14: aastore
      15: dup
      16: iconst_2
      17: ldc           #58                 // String varRef
      19: aastore
      20: dup
      21: iconst_3
      22: ldc           #59                 // String leafChar
      24: aastore
      25: dup
      26: iconst_4
      27: ldc           #60                 // String lookAhead
      29: aastore
      30: dup
      31: iconst_5
      32: ldc           #61                 // String tag
      34: aastore
      35: dup
      36: bipush        6
      38: ldc           #62                 // String endMark
      40: aastore
      41: dup
      42: bipush        7
      44: ldc           #63                 // String opStart
      46: aastore
      47: dup
      48: bipush        8
      50: ldc           #64                 // String opCat
      52: aastore
      53: dup
      54: bipush        9
      56: ldc           #65                 // String opOr
      58: aastore
      59: dup
      60: bipush        10
      62: ldc           #66                 // String opStar
      64: aastore
      65: dup
      66: bipush        11
      68: ldc           #67                 // String opPlus
      70: aastore
      71: dup
      72: bipush        12
      74: ldc           #68                 // String opQuestion
      76: aastore
      77: dup
      78: bipush        13
      80: ldc           #69                 // String opBreak
      82: aastore
      83: dup
      84: bipush        14
      86: ldc           #70                 // String opReverse
      88: aastore
      89: dup
      90: bipush        15
      92: ldc           #71                 // String opLParen
      94: aastore
      95: putstatic     #35                 // Field nodeTypeNames:[Ljava/lang/String;
      98: return
}
