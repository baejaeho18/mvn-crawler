Compiled from "JAXBType.java"
public class com.sun.tools.ws.processor.model.jaxb.JAXBType extends com.sun.tools.ws.processor.model.AbstractType {
  private com.sun.tools.ws.processor.model.jaxb.JAXBMapping jaxbMapping;

  private com.sun.tools.ws.processor.model.jaxb.JAXBModel jaxbModel;

  private boolean unwrapped;

  private java.util.List<com.sun.tools.ws.processor.model.jaxb.JAXBProperty> wrapperChildren;

  public com.sun.tools.ws.processor.model.jaxb.JAXBType(com.sun.tools.ws.processor.model.jaxb.JAXBType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/tools/ws/processor/model/AbstractType."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field unwrapped:Z
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method getName:()Ljavax/xml/namespace/QName;
      14: invokevirtual #4                  // Method setName:(Ljavax/xml/namespace/QName;)V
      17: aload_0
      18: aload_1
      19: invokevirtual #5                  // Method getJaxbMapping:()Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
      22: putfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
      25: aload_0
      26: aload_1
      27: invokevirtual #7                  // Method getJaxbModel:()Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
      30: putfield      #8                  // Field jaxbModel:Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
      33: aload_0
      34: invokespecial #9                  // Method init:()V
      37: return

  public com.sun.tools.ws.processor.model.jaxb.JAXBType();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/tools/ws/processor/model/AbstractType."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field unwrapped:Z
       9: return

  public com.sun.tools.ws.processor.model.jaxb.JAXBType(javax.xml.namespace.QName, com.sun.tools.ws.processor.model.java.JavaType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method com/sun/tools/ws/processor/model/AbstractType."<init>":(Ljavax/xml/namespace/QName;Lcom/sun/tools/ws/processor/model/java/JavaType;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field unwrapped:Z
      11: return

  public com.sun.tools.ws.processor.model.jaxb.JAXBType(javax.xml.namespace.QName, com.sun.tools.ws.processor.model.java.JavaType, com.sun.tools.ws.processor.model.jaxb.JAXBMapping, com.sun.tools.ws.processor.model.jaxb.JAXBModel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #10                 // Method com/sun/tools/ws/processor/model/AbstractType."<init>":(Ljavax/xml/namespace/QName;Lcom/sun/tools/ws/processor/model/java/JavaType;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field unwrapped:Z
      11: aload_0
      12: aload_3
      13: putfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
      16: aload_0
      17: aload         4
      19: putfield      #8                  // Field jaxbModel:Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
      22: aload_0
      23: invokespecial #9                  // Method init:()V
      26: return

  public void accept(com.sun.tools.ws.processor.model.jaxb.JAXBTypeVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #11,  2           // InterfaceMethod com/sun/tools/ws/processor/model/jaxb/JAXBTypeVisitor.visit:(Lcom/sun/tools/ws/processor/model/jaxb/JAXBType;)V
       7: return

  private void init();
    Code:
       0: aload_0
       1: getfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
       4: ifnull        21
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
      12: invokevirtual #12                 // Method com/sun/tools/ws/processor/model/jaxb/JAXBMapping.getWrapperStyleDrilldown:()Ljava/util/List;
      15: putfield      #13                 // Field wrapperChildren:Ljava/util/List;
      18: goto          32
      21: aload_0
      22: new           #14                 // class java/util/ArrayList
      25: dup
      26: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
      29: putfield      #13                 // Field wrapperChildren:Ljava/util/List;
      32: return

  public boolean isUnwrappable();
    Code:
       0: aload_0
       1: getfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
       4: ifnull        21
       7: aload_0
       8: getfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
      11: invokevirtual #12                 // Method com/sun/tools/ws/processor/model/jaxb/JAXBMapping.getWrapperStyleDrilldown:()Ljava/util/List;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasWrapperChildren();
    Code:
       0: aload_0
       1: getfield      #13                 // Field wrapperChildren:Ljava/util/List;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean isLiteralType();
    Code:
       0: iconst_1
       1: ireturn

  public java.util.List<com.sun.tools.ws.processor.model.jaxb.JAXBProperty> getWrapperChildren();
    Code:
       0: aload_0
       1: getfield      #13                 // Field wrapperChildren:Ljava/util/List;
       4: areturn

  public void setWrapperChildren(java.util.List<com.sun.tools.ws.processor.model.jaxb.JAXBProperty>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field wrapperChildren:Ljava/util/List;
       5: return

  public com.sun.tools.ws.processor.model.jaxb.JAXBMapping getJaxbMapping();
    Code:
       0: aload_0
       1: getfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
       4: areturn

  public void setJaxbMapping(com.sun.tools.ws.processor.model.jaxb.JAXBMapping);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field jaxbMapping:Lcom/sun/tools/ws/processor/model/jaxb/JAXBMapping;
       5: aload_0
       6: invokespecial #9                  // Method init:()V
       9: return

  public void setUnwrapped(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field unwrapped:Z
       5: return

  public boolean isUnwrapped();
    Code:
       0: aload_0
       1: getfield      #2                  // Field unwrapped:Z
       4: ireturn

  public com.sun.tools.ws.processor.model.jaxb.JAXBModel getJaxbModel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field jaxbModel:Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
       4: areturn

  public void setJaxbModel(com.sun.tools.ws.processor.model.jaxb.JAXBModel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field jaxbModel:Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
       5: return
}
