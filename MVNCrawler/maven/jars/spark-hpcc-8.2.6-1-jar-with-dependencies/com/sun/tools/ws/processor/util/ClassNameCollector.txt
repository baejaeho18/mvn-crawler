Compiled from "ClassNameCollector.java"
public class com.sun.tools.ws.processor.util.ClassNameCollector extends com.sun.tools.ws.processor.model.ExtendedModelVisitor implements com.sun.tools.ws.processor.model.jaxb.JAXBTypeVisitor {
  private java.util.Set<java.lang.String> _seiClassNames;

  private java.util.Set<java.lang.String> _jaxbGeneratedClassNames;

  private java.util.Set<java.lang.String> _exceptionClassNames;

  boolean doneVisitingJAXBModel;

  private java.util.Set _allClassNames;

  private java.util.Set _exceptions;

  private java.util.Set _wsdlBindingNames;

  private java.util.Set _conflictingClassNames;

  private java.util.Set<javax.xml.namespace.QName> _portTypeNames;

  public com.sun.tools.ws.processor.util.ClassNameCollector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/tools/ws/processor/model/ExtendedModelVisitor."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field doneVisitingJAXBModel:Z
       9: return

  public void process(com.sun.tools.ws.processor.model.Model);
    Code:
       0: aload_0
       1: new           #3                  // class java/util/HashSet
       4: dup
       5: invokespecial #4                  // Method java/util/HashSet."<init>":()V
       8: putfield      #5                  // Field _allClassNames:Ljava/util/Set;
      11: aload_0
      12: new           #3                  // class java/util/HashSet
      15: dup
      16: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      19: putfield      #6                  // Field _exceptions:Ljava/util/Set;
      22: aload_0
      23: new           #3                  // class java/util/HashSet
      26: dup
      27: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      30: putfield      #7                  // Field _wsdlBindingNames:Ljava/util/Set;
      33: aload_0
      34: new           #3                  // class java/util/HashSet
      37: dup
      38: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      41: putfield      #8                  // Field _conflictingClassNames:Ljava/util/Set;
      44: aload_0
      45: new           #3                  // class java/util/HashSet
      48: dup
      49: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      52: putfield      #9                  // Field _seiClassNames:Ljava/util/Set;
      55: aload_0
      56: new           #3                  // class java/util/HashSet
      59: dup
      60: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      63: putfield      #10                 // Field _jaxbGeneratedClassNames:Ljava/util/Set;
      66: aload_0
      67: new           #3                  // class java/util/HashSet
      70: dup
      71: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      74: putfield      #11                 // Field _exceptionClassNames:Ljava/util/Set;
      77: aload_0
      78: new           #3                  // class java/util/HashSet
      81: dup
      82: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      85: putfield      #12                 // Field _portTypeNames:Ljava/util/Set;
      88: aload_0
      89: aload_1
      90: invokevirtual #13                 // Method visit:(Lcom/sun/tools/ws/processor/model/Model;)V
      93: aload_0
      94: aconst_null
      95: putfield      #5                  // Field _allClassNames:Ljava/util/Set;
      98: aload_0
      99: aconst_null
     100: putfield      #6                  // Field _exceptions:Ljava/util/Set;
     103: goto          137
     106: astore_2
     107: aload_2
     108: invokevirtual #15                 // Method java/lang/Exception.printStackTrace:()V
     111: aload_0
     112: aconst_null
     113: putfield      #5                  // Field _allClassNames:Ljava/util/Set;
     116: aload_0
     117: aconst_null
     118: putfield      #6                  // Field _exceptions:Ljava/util/Set;
     121: goto          137
     124: astore_3
     125: aload_0
     126: aconst_null
     127: putfield      #5                  // Field _allClassNames:Ljava/util/Set;
     130: aload_0
     131: aconst_null
     132: putfield      #6                  // Field _exceptions:Ljava/util/Set;
     135: aload_3
     136: athrow
     137: return
    Exception table:
       from    to  target type
           0    93   106   Class java/lang/Exception
           0    93   124   any
         106   111   124   any
         124   125   124   any

  public java.util.Set getConflictingClassNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field _conflictingClassNames:Ljava/util/Set;
       4: areturn

  protected void postVisit(com.sun.tools.ws.processor.model.Model) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method com/sun/tools/ws/processor/model/Model.getExtraTypes:()Ljava/util/Iterator;
       4: astore_2
       5: aload_2
       6: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          30
      14: aload_0
      15: aload_2
      16: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: checkcast     #19                 // class com/sun/tools/ws/processor/model/AbstractType
      24: invokespecial #20                 // Method visitType:(Lcom/sun/tools/ws/processor/model/AbstractType;)V
      27: goto          5
      30: return

  protected void preVisit(com.sun.tools.ws.processor.model.Service) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method com/sun/tools/ws/processor/model/Service.getJavaInterface:()Lcom/sun/tools/ws/processor/model/java/JavaInterface;
       5: invokevirtual #22                 // Method com/sun/tools/ws/processor/model/java/JavaInterface.getName:()Ljava/lang/String;
       8: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      11: aload_0
      12: aload_1
      13: invokevirtual #21                 // Method com/sun/tools/ws/processor/model/Service.getJavaInterface:()Lcom/sun/tools/ws/processor/model/java/JavaInterface;
      16: invokevirtual #24                 // Method com/sun/tools/ws/processor/model/java/JavaInterface.getImpl:()Ljava/lang/String;
      19: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      22: return

  protected void processPort11x(com.sun.tools.ws.processor.model.Port);
    Code:
       0: aload_1
       1: ldc           #25                 // String com.sun.xml.ws.processor.model.WSDLBindingName
       3: invokevirtual #26                 // Method com/sun/tools/ws/processor/model/Port.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #27                 // class javax/xml/namespace/QName
       9: astore_2
      10: aload_0
      11: getfield      #7                  // Field _wsdlBindingNames:Ljava/util/Set;
      14: aload_2
      15: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      20: ifne          34
      23: aload_0
      24: aload_1
      25: invokevirtual #29                 // Method com/sun/tools/ws/processor/model/Port.getJavaInterface:()Lcom/sun/tools/ws/processor/model/java/JavaInterface;
      28: invokevirtual #22                 // Method com/sun/tools/ws/processor/model/java/JavaInterface.getName:()Ljava/lang/String;
      31: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      34: aload_0
      35: aload_1
      36: ldc           #30                 // String com.sun.xml.ws.processor.model.StubClassName
      38: invokevirtual #26                 // Method com/sun/tools/ws/processor/model/Port.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      41: checkcast     #31                 // class java/lang/String
      44: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      47: aload_0
      48: aload_1
      49: ldc           #32                 // String com.sun.xml.ws.processor.model.TieClassName
      51: invokevirtual #26                 // Method com/sun/tools/ws/processor/model/Port.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      54: checkcast     #31                 // class java/lang/String
      57: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      60: return

  protected void preVisit(com.sun.tools.ws.processor.model.Port) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #33                 // String com.sun.xml.ws.processor.model.WSDLPortTypeName
       3: invokevirtual #26                 // Method com/sun/tools/ws/processor/model/Port.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #27                 // class javax/xml/namespace/QName
       9: astore_2
      10: aload_0
      11: getfield      #12                 // Field _portTypeNames:Ljava/util/Set;
      14: aload_2
      15: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      20: ifeq          24
      23: return
      24: aload_0
      25: aload_1
      26: invokevirtual #29                 // Method com/sun/tools/ws/processor/model/Port.getJavaInterface:()Lcom/sun/tools/ws/processor/model/java/JavaInterface;
      29: invokevirtual #22                 // Method com/sun/tools/ws/processor/model/java/JavaInterface.getName:()Ljava/lang/String;
      32: invokespecial #34                 // Method addSEIClassName:(Ljava/lang/String;)V
      35: return

  private void addSEIClassName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field _seiClassNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      16: return

  protected void postVisit(com.sun.tools.ws.processor.model.Port) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ldc           #25                 // String com.sun.xml.ws.processor.model.WSDLBindingName
       3: invokevirtual #26                 // Method com/sun/tools/ws/processor/model/Port.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #27                 // class javax/xml/namespace/QName
       9: astore_2
      10: aload_0
      11: getfield      #7                  // Field _wsdlBindingNames:Ljava/util/Set;
      14: aload_2
      15: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      20: ifne          34
      23: aload_0
      24: getfield      #7                  // Field _wsdlBindingNames:Ljava/util/Set;
      27: aload_2
      28: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_1
      35: ldc           #33                 // String com.sun.xml.ws.processor.model.WSDLPortTypeName
      37: invokevirtual #26                 // Method com/sun/tools/ws/processor/model/Port.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
      40: checkcast     #27                 // class javax/xml/namespace/QName
      43: astore_3
      44: aload_0
      45: getfield      #12                 // Field _portTypeNames:Ljava/util/Set;
      48: aload_3
      49: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      54: ifne          68
      57: aload_0
      58: getfield      #12                 // Field _portTypeNames:Ljava/util/Set;
      61: aload_3
      62: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      67: pop
      68: return

  protected boolean shouldVisit(com.sun.tools.ws.processor.model.Port);
    Code:
       0: aload_1
       1: ldc           #25                 // String com.sun.xml.ws.processor.model.WSDLBindingName
       3: invokevirtual #26                 // Method com/sun/tools/ws/processor/model/Port.getProperty:(Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #27                 // class javax/xml/namespace/QName
       9: astore_2
      10: aload_0
      11: getfield      #7                  // Field _wsdlBindingNames:Ljava/util/Set;
      14: aload_2
      15: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected void preVisit(com.sun.tools.ws.processor.model.Fault) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #6                  // Field _exceptions:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #36                 // Method com/sun/tools/ws/processor/model/Fault.getJavaException:()Lcom/sun/tools/ws/processor/model/java/JavaException;
       8: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      13: ifne          92
      16: aload_0
      17: getfield      #6                  // Field _exceptions:Ljava/util/Set;
      20: aload_1
      21: invokevirtual #36                 // Method com/sun/tools/ws/processor/model/Fault.getJavaException:()Lcom/sun/tools/ws/processor/model/java/JavaException;
      24: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: aload_1
      32: invokevirtual #36                 // Method com/sun/tools/ws/processor/model/Fault.getJavaException:()Lcom/sun/tools/ws/processor/model/java/JavaException;
      35: invokevirtual #37                 // Method com/sun/tools/ws/processor/model/java/JavaException.getName:()Ljava/lang/String;
      38: invokespecial #38                 // Method addExceptionClassName:(Ljava/lang/String;)V
      41: aload_1
      42: invokevirtual #39                 // Method com/sun/tools/ws/processor/model/Fault.getParentFault:()Lcom/sun/tools/ws/processor/model/Fault;
      45: ifnull        56
      48: aload_0
      49: aload_1
      50: invokevirtual #39                 // Method com/sun/tools/ws/processor/model/Fault.getParentFault:()Lcom/sun/tools/ws/processor/model/Fault;
      53: invokevirtual #40                 // Method preVisit:(Lcom/sun/tools/ws/processor/model/Fault;)V
      56: aload_1
      57: invokevirtual #41                 // Method com/sun/tools/ws/processor/model/Fault.getSubfaults:()Ljava/util/Iterator;
      60: astore_2
      61: aload_2
      62: ifnull        92
      65: aload_2
      66: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          92
      74: aload_2
      75: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      80: checkcast     #42                 // class com/sun/tools/ws/processor/model/Fault
      83: astore_3
      84: aload_0
      85: aload_3
      86: invokevirtual #40                 // Method preVisit:(Lcom/sun/tools/ws/processor/model/Fault;)V
      89: goto          61
      92: return

  private void addExceptionClassName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _allClassNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifeq          24
      13: aload_0
      14: getfield      #11                 // Field _exceptionClassNames:Ljava/util/Set;
      17: aload_1
      18: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: aload_1
      26: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      29: return

  protected void visitBodyBlock(com.sun.tools.ws.processor.model.Block) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method visitBlock:(Lcom/sun/tools/ws/processor/model/Block;)V
       5: return

  protected void visitHeaderBlock(com.sun.tools.ws.processor.model.Block) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method visitBlock:(Lcom/sun/tools/ws/processor/model/Block;)V
       5: return

  protected void visitFaultBlock(com.sun.tools.ws.processor.model.Block) throws java.lang.Exception;
    Code:
       0: return

  protected void visitBlock(com.sun.tools.ws.processor.model.Block) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method com/sun/tools/ws/processor/model/Block.getType:()Lcom/sun/tools/ws/processor/model/AbstractType;
       5: invokespecial #20                 // Method visitType:(Lcom/sun/tools/ws/processor/model/AbstractType;)V
       8: return

  protected void visit(com.sun.tools.ws.processor.model.Parameter) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method com/sun/tools/ws/processor/model/Parameter.getType:()Lcom/sun/tools/ws/processor/model/AbstractType;
       5: invokespecial #20                 // Method visitType:(Lcom/sun/tools/ws/processor/model/AbstractType;)V
       8: return

  private void visitType(com.sun.tools.ws.processor.model.AbstractType) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        37
       4: aload_1
       5: instanceof    #46                 // class com/sun/tools/ws/processor/model/jaxb/JAXBType
       8: ifeq          22
      11: aload_0
      12: aload_1
      13: checkcast     #46                 // class com/sun/tools/ws/processor/model/jaxb/JAXBType
      16: invokespecial #47                 // Method visitType:(Lcom/sun/tools/ws/processor/model/jaxb/JAXBType;)V
      19: goto          37
      22: aload_1
      23: instanceof    #48                 // class com/sun/tools/ws/processor/model/jaxb/RpcLitStructure
      26: ifeq          37
      29: aload_0
      30: aload_1
      31: checkcast     #48                 // class com/sun/tools/ws/processor/model/jaxb/RpcLitStructure
      34: invokespecial #49                 // Method visitType:(Lcom/sun/tools/ws/processor/model/jaxb/RpcLitStructure;)V
      37: return

  private void visitType(com.sun.tools.ws.processor.model.jaxb.JAXBType) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #50                 // Method com/sun/tools/ws/processor/model/jaxb/JAXBType.accept:(Lcom/sun/tools/ws/processor/model/jaxb/JAXBTypeVisitor;)V
       5: return

  private void visitType(com.sun.tools.ws.processor.model.jaxb.RpcLitStructure) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #51                 // Method com/sun/tools/ws/processor/model/jaxb/RpcLitStructure.accept:(Lcom/sun/tools/ws/processor/model/jaxb/JAXBTypeVisitor;)V
       5: return

  private void registerClassName(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: ldc           #52                 // String
       7: invokevirtual #53                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          14
      13: return
      14: aload_0
      15: getfield      #5                  // Field _allClassNames:Ljava/util/Set;
      18: aload_1
      19: invokeinterface #28,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      24: ifeq          41
      27: aload_0
      28: getfield      #8                  // Field _conflictingClassNames:Ljava/util/Set;
      31: aload_1
      32: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      37: pop
      38: goto          52
      41: aload_0
      42: getfield      #5                  // Field _allClassNames:Ljava/util/Set;
      45: aload_1
      46: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      51: pop
      52: return

  public java.util.Set<java.lang.String> getSeiClassNames();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _seiClassNames:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getJaxbGeneratedClassNames();
    Code:
       0: aload_0
       1: getfield      #10                 // Field _jaxbGeneratedClassNames:Ljava/util/Set;
       4: areturn

  public java.util.Set<java.lang.String> getExceptionClassNames();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _exceptionClassNames:Ljava/util/Set;
       4: areturn

  public void visit(com.sun.tools.ws.processor.model.jaxb.JAXBType) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field doneVisitingJAXBModel:Z
       4: ifne          63
       7: aload_1
       8: invokevirtual #54                 // Method com/sun/tools/ws/processor/model/jaxb/JAXBType.getJaxbModel:()Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
      11: ifnull        63
      14: aload_1
      15: invokevirtual #54                 // Method com/sun/tools/ws/processor/model/jaxb/JAXBType.getJaxbModel:()Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
      18: invokevirtual #55                 // Method com/sun/tools/ws/processor/model/jaxb/JAXBModel.getGeneratedClassNames:()Ljava/util/Set;
      21: astore_2
      22: aload_2
      23: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          58
      38: aload_3
      39: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #31                 // class java/lang/String
      47: astore        4
      49: aload_0
      50: aload         4
      52: invokespecial #57                 // Method addJAXBGeneratedClassName:(Ljava/lang/String;)V
      55: goto          29
      58: aload_0
      59: iconst_1
      60: putfield      #2                  // Field doneVisitingJAXBModel:Z
      63: return

  public void visit(com.sun.tools.ws.processor.model.jaxb.RpcLitStructure) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field doneVisitingJAXBModel:Z
       4: ifne          56
       7: aload_1
       8: invokevirtual #58                 // Method com/sun/tools/ws/processor/model/jaxb/RpcLitStructure.getJaxbModel:()Lcom/sun/tools/ws/processor/model/jaxb/JAXBModel;
      11: invokevirtual #55                 // Method com/sun/tools/ws/processor/model/jaxb/JAXBModel.getGeneratedClassNames:()Ljava/util/Set;
      14: astore_2
      15: aload_2
      16: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore_3
      22: aload_3
      23: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          51
      31: aload_3
      32: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #31                 // class java/lang/String
      40: astore        4
      42: aload_0
      43: aload         4
      45: invokespecial #57                 // Method addJAXBGeneratedClassName:(Ljava/lang/String;)V
      48: goto          22
      51: aload_0
      52: iconst_1
      53: putfield      #2                  // Field doneVisitingJAXBModel:Z
      56: return

  private void addJAXBGeneratedClassName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field _jaxbGeneratedClassNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: aload_1
      13: invokespecial #23                 // Method registerClassName:(Ljava/lang/String;)V
      16: return
}
