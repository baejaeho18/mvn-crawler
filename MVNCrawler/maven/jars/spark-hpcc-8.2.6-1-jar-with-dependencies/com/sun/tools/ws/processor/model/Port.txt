Compiled from "Port.java"
public class com.sun.tools.ws.processor.model.Port extends com.sun.tools.ws.processor.model.ModelObject {
  private com.sun.tools.ws.wsdl.document.soap.SOAPStyle _style;

  private boolean _isWrapped;

  private java.lang.String portGetter;

  private javax.xml.namespace.QName _name;

  private java.util.List<com.sun.tools.ws.processor.model.Operation> _operations;

  private com.sun.tools.ws.processor.model.java.JavaInterface _javaInterface;

  private java.lang.String _address;

  private java.lang.String _serviceImplName;

  private java.util.Map<java.lang.String, com.sun.tools.ws.processor.model.Operation> operationsByName;

  public java.util.Map<javax.xml.namespace.QName, com.sun.tools.ws.wsdl.document.PortType> portTypes;

  public com.sun.tools.ws.processor.model.Port(com.sun.tools.ws.wsdl.framework.Entity);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/sun/tools/ws/processor/model/ModelObject."<init>":(Lcom/sun/tools/ws/wsdl/framework/Entity;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field _style:Lcom/sun/tools/ws/wsdl/document/soap/SOAPStyle;
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field _isWrapped:Z
      15: aload_0
      16: new           #4                  // class java/util/ArrayList
      19: dup
      20: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #6                  // Field _operations:Ljava/util/List;
      26: aload_0
      27: new           #7                  // class java/util/HashMap
      30: dup
      31: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      34: putfield      #9                  // Field operationsByName:Ljava/util/Map;
      37: aload_0
      38: new           #7                  // class java/util/HashMap
      41: dup
      42: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      45: putfield      #10                 // Field portTypes:Ljava/util/Map;
      48: return

  public com.sun.tools.ws.processor.model.Port(javax.xml.namespace.QName, com.sun.tools.ws.wsdl.framework.Entity);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method com/sun/tools/ws/processor/model/ModelObject."<init>":(Lcom/sun/tools/ws/wsdl/framework/Entity;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field _style:Lcom/sun/tools/ws/wsdl/document/soap/SOAPStyle;
      10: aload_0
      11: iconst_1
      12: putfield      #3                  // Field _isWrapped:Z
      15: aload_0
      16: new           #4                  // class java/util/ArrayList
      19: dup
      20: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #6                  // Field _operations:Ljava/util/List;
      26: aload_0
      27: new           #7                  // class java/util/HashMap
      30: dup
      31: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      34: putfield      #9                  // Field operationsByName:Ljava/util/Map;
      37: aload_0
      38: new           #7                  // class java/util/HashMap
      41: dup
      42: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      45: putfield      #10                 // Field portTypes:Ljava/util/Map;
      48: aload_0
      49: aload_1
      50: putfield      #11                 // Field _name:Ljavax/xml/namespace/QName;
      53: return

  public javax.xml.namespace.QName getName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field _name:Ljavax/xml/namespace/QName;
       4: areturn

  public void setName(javax.xml.namespace.QName);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field _name:Ljavax/xml/namespace/QName;
       5: return

  public void addOperation(com.sun.tools.ws.processor.model.Operation);
    Code:
       0: aload_0
       1: getfield      #6                  // Field _operations:Ljava/util/List;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #9                  // Field operationsByName:Ljava/util/Map;
      15: aload_1
      16: invokevirtual #13                 // Method com/sun/tools/ws/processor/model/Operation.getUniqueName:()Ljava/lang/String;
      19: aload_1
      20: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: return

  public com.sun.tools.ws.processor.model.Operation getOperationByUniqueName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field operationsByName:Ljava/util/Map;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Map.size:()I
       9: aload_0
      10: getfield      #6                  // Field _operations:Ljava/util/List;
      13: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      18: if_icmpeq     25
      21: aload_0
      22: invokespecial #17                 // Method initializeOperationsByName:()V
      25: aload_0
      26: getfield      #9                  // Field operationsByName:Ljava/util/Map;
      29: aload_1
      30: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #19                 // class com/sun/tools/ws/processor/model/Operation
      38: areturn

  private void initializeOperationsByName();
    Code:
       0: aload_0
       1: new           #7                  // class java/util/HashMap
       4: dup
       5: invokespecial #8                  // Method java/util/HashMap."<init>":()V
       8: putfield      #9                  // Field operationsByName:Ljava/util/Map;
      11: aload_0
      12: getfield      #6                  // Field _operations:Ljava/util/List;
      15: ifnull        102
      18: aload_0
      19: getfield      #6                  // Field _operations:Ljava/util/List;
      22: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore_1
      28: aload_1
      29: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          102
      37: aload_1
      38: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #19                 // class com/sun/tools/ws/processor/model/Operation
      46: astore_2
      47: aload_2
      48: invokevirtual #13                 // Method com/sun/tools/ws/processor/model/Operation.getUniqueName:()Ljava/lang/String;
      51: ifnull        84
      54: aload_0
      55: getfield      #9                  // Field operationsByName:Ljava/util/Map;
      58: aload_2
      59: invokevirtual #13                 // Method com/sun/tools/ws/processor/model/Operation.getUniqueName:()Ljava/lang/String;
      62: invokeinterface #23,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      67: ifeq          84
      70: new           #24                 // class com/sun/tools/ws/processor/model/ModelException
      73: dup
      74: ldc           #25                 // String model.uniqueness
      76: iconst_0
      77: anewarray     #26                 // class java/lang/Object
      80: invokespecial #27                 // Method com/sun/tools/ws/processor/model/ModelException."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      83: athrow
      84: aload_0
      85: getfield      #9                  // Field operationsByName:Ljava/util/Map;
      88: aload_2
      89: invokevirtual #13                 // Method com/sun/tools/ws/processor/model/Operation.getUniqueName:()Ljava/lang/String;
      92: aload_2
      93: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: goto          28
     102: return

  public java.util.List<com.sun.tools.ws.processor.model.Operation> getOperations();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _operations:Ljava/util/List;
       4: areturn

  public void setOperations(java.util.List<com.sun.tools.ws.processor.model.Operation>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field _operations:Ljava/util/List;
       5: return

  public com.sun.tools.ws.processor.model.java.JavaInterface getJavaInterface();
    Code:
       0: aload_0
       1: getfield      #28                 // Field _javaInterface:Lcom/sun/tools/ws/processor/model/java/JavaInterface;
       4: areturn

  public void setJavaInterface(com.sun.tools.ws.processor.model.java.JavaInterface);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field _javaInterface:Lcom/sun/tools/ws/processor/model/java/JavaInterface;
       5: return

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #29                 // Field _address:Ljava/lang/String;
       4: areturn

  public void setAddress(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field _address:Ljava/lang/String;
       5: return

  public java.lang.String getServiceImplName();
    Code:
       0: aload_0
       1: getfield      #30                 // Field _serviceImplName:Ljava/lang/String;
       4: areturn

  public void setServiceImplName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field _serviceImplName:Ljava/lang/String;
       5: return

  public void accept(com.sun.tools.ws.processor.model.ModelVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #31,  2           // InterfaceMethod com/sun/tools/ws/processor/model/ModelVisitor.visit:(Lcom/sun/tools/ws/processor/model/Port;)V
       7: return

  public boolean isProvider();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getJavaInterface:()Lcom/sun/tools/ws/processor/model/java/JavaInterface;
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: invokevirtual #33                 // Method com/sun/tools/ws/processor/model/java/JavaInterface.getName:()Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: ldc_w         #34                 // class javax/xml/ws/Provider
      18: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokevirtual #36                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: iconst_1
      28: ireturn
      29: iconst_0
      30: ireturn

  public java.lang.String getPortGetter();
    Code:
       0: aload_0
       1: getfield      #37                 // Field portGetter:Ljava/lang/String;
       4: areturn

  public void setPortGetter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field portGetter:Ljava/lang/String;
       5: return

  public com.sun.tools.ws.wsdl.document.soap.SOAPStyle getStyle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _style:Lcom/sun/tools/ws/wsdl/document/soap/SOAPStyle;
       4: areturn

  public void setStyle(com.sun.tools.ws.wsdl.document.soap.SOAPStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field _style:Lcom/sun/tools/ws/wsdl/document/soap/SOAPStyle;
       5: return

  public boolean isWrapped();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _isWrapped:Z
       4: ireturn

  public void setWrapped(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field _isWrapped:Z
       5: return
}
