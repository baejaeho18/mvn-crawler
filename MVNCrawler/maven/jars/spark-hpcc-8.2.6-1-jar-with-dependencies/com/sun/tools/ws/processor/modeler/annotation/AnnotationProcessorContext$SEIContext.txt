Compiled from "AnnotationProcessorContext.java"
public class com.sun.tools.ws.processor.modeler.annotation.AnnotationProcessorContext$SEIContext {
  private java.util.Map<java.lang.String, com.sun.tools.ws.processor.modeler.annotation.WrapperInfo> reqOperationWrapperMap;

  private java.util.Map<java.lang.String, com.sun.tools.ws.processor.modeler.annotation.WrapperInfo> resOperationWrapperMap;

  private java.util.Map<java.lang.String, com.sun.tools.ws.processor.modeler.annotation.FaultInfo> exceptionBeanMap;

  private java.lang.String seiName;

  private java.lang.String seiImplName;

  private boolean implementsSEI;

  private java.lang.String namespaceURI;

  public com.sun.tools.ws.processor.modeler.annotation.AnnotationProcessorContext$SEIContext(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field implementsSEI:Z
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field namespaceURI:Ljava/lang/String;
      14: aload_0
      15: new           #4                  // class java/util/HashMap
      18: dup
      19: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      22: putfield      #6                  // Field reqOperationWrapperMap:Ljava/util/Map;
      25: aload_0
      26: new           #4                  // class java/util/HashMap
      29: dup
      30: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      33: putfield      #7                  // Field resOperationWrapperMap:Ljava/util/Map;
      36: aload_0
      37: new           #4                  // class java/util/HashMap
      40: dup
      41: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      44: putfield      #8                  // Field exceptionBeanMap:Ljava/util/Map;
      47: aload_0
      48: aload_1
      49: putfield      #9                  // Field seiName:Ljava/lang/String;
      52: return

  public void setImplementsSEI(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field implementsSEI:Z
       5: return

  public boolean getImplementsSEI();
    Code:
       0: aload_0
       1: getfield      #2                  // Field implementsSEI:Z
       4: ireturn

  public void setNamespaceURI(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field namespaceURI:Ljava/lang/String;
       5: return

  public java.lang.String getNamespaceURI();
    Code:
       0: aload_0
       1: getfield      #3                  // Field namespaceURI:Ljava/lang/String;
       4: areturn

  public java.lang.String getSEIImplName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field seiImplName:Ljava/lang/String;
       4: areturn

  public void setSEIImplName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field seiImplName:Ljava/lang/String;
       5: return

  public void setReqWrapperOperation(com.sun.mirror.declaration.MethodDeclaration, com.sun.tools.ws.processor.modeler.annotation.WrapperInfo);
    Code:
       0: aload_0
       1: getfield      #6                  // Field reqOperationWrapperMap:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #11                 // Method methodToString:(Lcom/sun/mirror/declaration/MethodDeclaration;)Ljava/lang/String;
       9: aload_2
      10: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public com.sun.tools.ws.processor.modeler.annotation.WrapperInfo getReqOperationWrapper(com.sun.mirror.declaration.MethodDeclaration);
    Code:
       0: aload_0
       1: getfield      #6                  // Field reqOperationWrapperMap:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #11                 // Method methodToString:(Lcom/sun/mirror/declaration/MethodDeclaration;)Ljava/lang/String;
       9: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #14                 // class com/sun/tools/ws/processor/modeler/annotation/WrapperInfo
      17: areturn

  public void setResWrapperOperation(com.sun.mirror.declaration.MethodDeclaration, com.sun.tools.ws.processor.modeler.annotation.WrapperInfo);
    Code:
       0: aload_0
       1: getfield      #7                  // Field resOperationWrapperMap:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #11                 // Method methodToString:(Lcom/sun/mirror/declaration/MethodDeclaration;)Ljava/lang/String;
       9: aload_2
      10: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: return

  public com.sun.tools.ws.processor.modeler.annotation.WrapperInfo getResOperationWrapper(com.sun.mirror.declaration.MethodDeclaration);
    Code:
       0: aload_0
       1: getfield      #7                  // Field resOperationWrapperMap:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #11                 // Method methodToString:(Lcom/sun/mirror/declaration/MethodDeclaration;)Ljava/lang/String;
       9: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #14                 // class com/sun/tools/ws/processor/modeler/annotation/WrapperInfo
      17: areturn

  public java.lang.String methodToString(com.sun.mirror.declaration.MethodDeclaration);
    Code:
       0: new           #15                 // class java/lang/StringBuffer
       3: dup
       4: aload_1
       5: invokeinterface #16,  1           // InterfaceMethod com/sun/mirror/declaration/MethodDeclaration.getSimpleName:()Ljava/lang/String;
      10: invokespecial #17                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      13: astore_2
      14: aload_1
      15: invokeinterface #18,  1           // InterfaceMethod com/sun/mirror/declaration/MethodDeclaration.getParameters:()Ljava/util/Collection;
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          82
      35: aload_3
      36: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #22                 // class com/sun/mirror/declaration/ParameterDeclaration
      44: astore        4
      46: aload_2
      47: new           #23                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #25                 // String ;
      56: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload         4
      61: invokeinterface #27,  1           // InterfaceMethod com/sun/mirror/declaration/ParameterDeclaration.getType:()Lcom/sun/mirror/type/TypeMirror;
      66: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      69: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokevirtual #30                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      78: pop
      79: goto          26
      82: aload_2
      83: invokevirtual #31                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      86: areturn

  public void clearExceptionMap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exceptionBeanMap:Ljava/util/Map;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public void addExceptionBeanEntry(java.lang.String, com.sun.tools.ws.processor.modeler.annotation.FaultInfo, com.sun.tools.ws.processor.modeler.annotation.ModelBuilder);
    Code:
       0: aload_0
       1: getfield      #8                  // Field exceptionBeanMap:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public com.sun.tools.ws.processor.modeler.annotation.FaultInfo getExceptionBeanName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field exceptionBeanMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #33                 // class com/sun/tools/ws/processor/modeler/annotation/FaultInfo
      13: areturn
}
