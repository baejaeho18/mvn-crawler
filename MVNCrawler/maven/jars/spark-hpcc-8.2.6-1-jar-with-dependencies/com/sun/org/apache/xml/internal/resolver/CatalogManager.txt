Compiled from "CatalogManager.java"
public class com.sun.org.apache.xml.internal.resolver.CatalogManager {
  private static java.lang.String pFiles;

  private static java.lang.String pVerbosity;

  private static java.lang.String pPrefer;

  private static java.lang.String pStatic;

  private static java.lang.String pAllowPI;

  private static java.lang.String pClassname;

  private static java.lang.String pIgnoreMissing;

  private static com.sun.org.apache.xml.internal.resolver.CatalogManager staticManager;

  private com.sun.org.apache.xml.internal.resolver.helpers.BootstrapResolver bResolver;

  private boolean ignoreMissingProperties;

  private java.util.ResourceBundle resources;

  private java.lang.String propertyFile;

  private java.net.URL propertyFileURI;

  private java.lang.String defaultCatalogFiles;

  private java.lang.String catalogFiles;

  private boolean fromPropertiesFile;

  private int defaultVerbosity;

  private java.lang.Integer verbosity;

  private boolean defaultPreferPublic;

  private java.lang.Boolean preferPublic;

  private boolean defaultUseStaticCatalog;

  private java.lang.Boolean useStaticCatalog;

  private static com.sun.org.apache.xml.internal.resolver.Catalog staticCatalog;

  private boolean defaultOasisXMLCatalogPI;

  private java.lang.Boolean oasisXMLCatalogPI;

  private boolean defaultRelativeCatalogs;

  private java.lang.Boolean relativeCatalogs;

  private java.lang.String catalogClassName;

  public com.sun.org.apache.xml.internal.resolver.helpers.Debug debug;

  public com.sun.org.apache.xml.internal.resolver.CatalogManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver
       8: dup
       9: invokespecial #3                  // Method com/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver."<init>":()V
      12: putfield      #4                  // Field bResolver:Lcom/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver;
      15: aload_0
      16: getstatic     #5                  // Field pIgnoreMissing:Ljava/lang/String;
      19: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      22: ifnonnull     34
      25: getstatic     #7                  // Field pFiles:Ljava/lang/String;
      28: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      31: ifnull        38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: putfield      #8                  // Field ignoreMissingProperties:Z
      42: aload_0
      43: ldc           #9                  // String CatalogManager.properties
      45: putfield      #10                 // Field propertyFile:Ljava/lang/String;
      48: aload_0
      49: aconst_null
      50: putfield      #11                 // Field propertyFileURI:Ljava/net/URL;
      53: aload_0
      54: ldc           #12                 // String ./xcatalog
      56: putfield      #13                 // Field defaultCatalogFiles:Ljava/lang/String;
      59: aload_0
      60: aconst_null
      61: putfield      #14                 // Field catalogFiles:Ljava/lang/String;
      64: aload_0
      65: iconst_0
      66: putfield      #15                 // Field fromPropertiesFile:Z
      69: aload_0
      70: iconst_1
      71: putfield      #16                 // Field defaultVerbosity:I
      74: aload_0
      75: aconst_null
      76: putfield      #17                 // Field verbosity:Ljava/lang/Integer;
      79: aload_0
      80: iconst_1
      81: putfield      #18                 // Field defaultPreferPublic:Z
      84: aload_0
      85: aconst_null
      86: putfield      #19                 // Field preferPublic:Ljava/lang/Boolean;
      89: aload_0
      90: iconst_1
      91: putfield      #20                 // Field defaultUseStaticCatalog:Z
      94: aload_0
      95: aconst_null
      96: putfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      99: aload_0
     100: iconst_1
     101: putfield      #22                 // Field defaultOasisXMLCatalogPI:Z
     104: aload_0
     105: aconst_null
     106: putfield      #23                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
     109: aload_0
     110: iconst_1
     111: putfield      #24                 // Field defaultRelativeCatalogs:Z
     114: aload_0
     115: aconst_null
     116: putfield      #25                 // Field relativeCatalogs:Ljava/lang/Boolean;
     119: aload_0
     120: aconst_null
     121: putfield      #26                 // Field catalogClassName:Ljava/lang/String;
     124: aload_0
     125: aconst_null
     126: putfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
     129: aload_0
     130: new           #28                 // class com/sun/org/apache/xml/internal/resolver/helpers/Debug
     133: dup
     134: invokespecial #29                 // Method com/sun/org/apache/xml/internal/resolver/helpers/Debug."<init>":()V
     137: putfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
     140: return

  public com.sun.org.apache.xml.internal.resolver.CatalogManager(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver
       8: dup
       9: invokespecial #3                  // Method com/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver."<init>":()V
      12: putfield      #4                  // Field bResolver:Lcom/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver;
      15: aload_0
      16: getstatic     #5                  // Field pIgnoreMissing:Ljava/lang/String;
      19: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      22: ifnonnull     34
      25: getstatic     #7                  // Field pFiles:Ljava/lang/String;
      28: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      31: ifnull        38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: putfield      #8                  // Field ignoreMissingProperties:Z
      42: aload_0
      43: ldc           #9                  // String CatalogManager.properties
      45: putfield      #10                 // Field propertyFile:Ljava/lang/String;
      48: aload_0
      49: aconst_null
      50: putfield      #11                 // Field propertyFileURI:Ljava/net/URL;
      53: aload_0
      54: ldc           #12                 // String ./xcatalog
      56: putfield      #13                 // Field defaultCatalogFiles:Ljava/lang/String;
      59: aload_0
      60: aconst_null
      61: putfield      #14                 // Field catalogFiles:Ljava/lang/String;
      64: aload_0
      65: iconst_0
      66: putfield      #15                 // Field fromPropertiesFile:Z
      69: aload_0
      70: iconst_1
      71: putfield      #16                 // Field defaultVerbosity:I
      74: aload_0
      75: aconst_null
      76: putfield      #17                 // Field verbosity:Ljava/lang/Integer;
      79: aload_0
      80: iconst_1
      81: putfield      #18                 // Field defaultPreferPublic:Z
      84: aload_0
      85: aconst_null
      86: putfield      #19                 // Field preferPublic:Ljava/lang/Boolean;
      89: aload_0
      90: iconst_1
      91: putfield      #20                 // Field defaultUseStaticCatalog:Z
      94: aload_0
      95: aconst_null
      96: putfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      99: aload_0
     100: iconst_1
     101: putfield      #22                 // Field defaultOasisXMLCatalogPI:Z
     104: aload_0
     105: aconst_null
     106: putfield      #23                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
     109: aload_0
     110: iconst_1
     111: putfield      #24                 // Field defaultRelativeCatalogs:Z
     114: aload_0
     115: aconst_null
     116: putfield      #25                 // Field relativeCatalogs:Ljava/lang/Boolean;
     119: aload_0
     120: aconst_null
     121: putfield      #26                 // Field catalogClassName:Ljava/lang/String;
     124: aload_0
     125: aconst_null
     126: putfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
     129: aload_0
     130: aload_1
     131: putfield      #10                 // Field propertyFile:Ljava/lang/String;
     134: aload_0
     135: new           #28                 // class com/sun/org/apache/xml/internal/resolver/helpers/Debug
     138: dup
     139: invokespecial #29                 // Method com/sun/org/apache/xml/internal/resolver/helpers/Debug."<init>":()V
     142: putfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
     145: return

  public void setBootstrapResolver(com.sun.org.apache.xml.internal.resolver.helpers.BootstrapResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field bResolver:Lcom/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver;
       5: return

  public com.sun.org.apache.xml.internal.resolver.helpers.BootstrapResolver getBootstrapResolver();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bResolver:Lcom/sun/org/apache/xml/internal/resolver/helpers/BootstrapResolver;
       4: areturn

  private synchronized void readProperties();
    Code:
       0: aload_0
       1: ldc_w         #30                 // class com/sun/org/apache/xml/internal/resolver/CatalogManager
       4: new           #31                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #33                 // String /
      13: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #10                 // Field propertyFile:Ljava/lang/String;
      20: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #36                 // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
      29: putfield      #11                 // Field propertyFileURI:Ljava/net/URL;
      32: ldc_w         #30                 // class com/sun/org/apache/xml/internal/resolver/CatalogManager
      35: new           #31                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #33                 // String /
      44: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_0
      48: getfield      #10                 // Field propertyFile:Ljava/lang/String;
      51: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokevirtual #37                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      60: astore_1
      61: aload_1
      62: ifnonnull     106
      65: aload_0
      66: getfield      #8                  // Field ignoreMissingProperties:Z
      69: ifne          105
      72: getstatic     #38                 // Field java/lang/System.err:Ljava/io/PrintStream;
      75: new           #31                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #39                 // String Cannot find
      84: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_0
      88: getfield      #10                 // Field propertyFile:Ljava/lang/String;
      91: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     100: aload_0
     101: iconst_1
     102: putfield      #8                  // Field ignoreMissingProperties:Z
     105: return
     106: aload_0
     107: new           #41                 // class java/util/PropertyResourceBundle
     110: dup
     111: aload_1
     112: invokespecial #42                 // Method java/util/PropertyResourceBundle."<init>":(Ljava/io/InputStream;)V
     115: putfield      #43                 // Field resources:Ljava/util/ResourceBundle;
     118: goto          196
     121: astore_1
     122: aload_0
     123: getfield      #8                  // Field ignoreMissingProperties:Z
     126: ifne          157
     129: getstatic     #38                 // Field java/lang/System.err:Ljava/io/PrintStream;
     132: new           #31                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #45                 // String Cannot read
     141: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: getfield      #10                 // Field propertyFile:Ljava/lang/String;
     148: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     157: goto          196
     160: astore_1
     161: aload_0
     162: getfield      #8                  // Field ignoreMissingProperties:Z
     165: ifne          196
     168: getstatic     #38                 // Field java/lang/System.err:Ljava/io/PrintStream;
     171: new           #31                 // class java/lang/StringBuilder
     174: dup
     175: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     178: ldc           #47                 // String Failure trying to read
     180: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: aload_0
     184: getfield      #10                 // Field propertyFile:Ljava/lang/String;
     187: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     193: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     196: aload_0
     197: getfield      #17                 // Field verbosity:Ljava/lang/Integer;
     200: ifnonnull     245
     203: aload_0
     204: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
     207: ldc           #48                 // String verbosity
     209: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
     212: astore_1
     213: aload_1
     214: invokevirtual #50                 // Method java/lang/String.trim:()Ljava/lang/String;
     217: invokestatic  #51                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     220: istore_2
     221: aload_0
     222: getfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
     225: iload_2
     226: invokevirtual #52                 // Method com/sun/org/apache/xml/internal/resolver/helpers/Debug.setDebug:(I)V
     229: aload_0
     230: new           #53                 // class java/lang/Integer
     233: dup
     234: iload_2
     235: invokespecial #54                 // Method java/lang/Integer."<init>":(I)V
     238: putfield      #17                 // Field verbosity:Ljava/lang/Integer;
     241: goto          245
     244: astore_1
     245: return
    Exception table:
       from    to  target type
           0   105   121   Class java/util/MissingResourceException
         106   118   121   Class java/util/MissingResourceException
           0   105   160   Class java/io/IOException
         106   118   160   Class java/io/IOException
         203   241   244   Class java/lang/Exception

  public static com.sun.org.apache.xml.internal.resolver.CatalogManager getStaticManager();
    Code:
       0: getstatic     #56                 // Field staticManager:Lcom/sun/org/apache/xml/internal/resolver/CatalogManager;
       3: areturn

  public boolean getIgnoreMissingProperties();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ignoreMissingProperties:Z
       4: ireturn

  public void setIgnoreMissingProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field ignoreMissingProperties:Z
       5: return

  public void ignoreMissingProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setIgnoreMissingProperties:(Z)V
       5: return

  private int queryVerbosity();
    Code:
       0: aload_0
       1: getfield      #16                 // Field defaultVerbosity:I
       4: invokestatic  #58                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: astore_1
       8: getstatic     #59                 // Field pVerbosity:Ljava/lang/String;
      11: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnonnull     58
      19: aload_0
      20: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      23: ifnonnull     30
      26: aload_0
      27: invokespecial #60                 // Method readProperties:()V
      30: aload_0
      31: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      34: ifnull        56
      37: aload_0
      38: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      41: ldc           #48                 // String verbosity
      43: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      46: astore_2
      47: goto          58
      50: astore_3
      51: aload_1
      52: astore_2
      53: goto          58
      56: aload_1
      57: astore_2
      58: aload_0
      59: getfield      #16                 // Field defaultVerbosity:I
      62: istore_3
      63: aload_2
      64: invokevirtual #50                 // Method java/lang/String.trim:()Ljava/lang/String;
      67: invokestatic  #51                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      70: istore_3
      71: goto          106
      74: astore        4
      76: getstatic     #38                 // Field java/lang/System.err:Ljava/io/PrintStream;
      79: new           #31                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #61                 // String Cannot parse verbosity: \"
      88: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: ldc           #62                 // String \"
      97: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     106: aload_0
     107: getfield      #17                 // Field verbosity:Ljava/lang/Integer;
     110: ifnonnull     133
     113: aload_0
     114: getfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
     117: iload_3
     118: invokevirtual #52                 // Method com/sun/org/apache/xml/internal/resolver/helpers/Debug.setDebug:(I)V
     121: aload_0
     122: new           #53                 // class java/lang/Integer
     125: dup
     126: iload_3
     127: invokespecial #54                 // Method java/lang/Integer."<init>":(I)V
     130: putfield      #17                 // Field verbosity:Ljava/lang/Integer;
     133: iload_3
     134: ireturn
    Exception table:
       from    to  target type
          37    47    50   Class java/util/MissingResourceException
          63    71    74   Class java/lang/Exception

  public int getVerbosity();
    Code:
       0: aload_0
       1: getfield      #17                 // Field verbosity:Ljava/lang/Integer;
       4: ifnonnull     22
       7: aload_0
       8: new           #53                 // class java/lang/Integer
      11: dup
      12: aload_0
      13: invokespecial #63                 // Method queryVerbosity:()I
      16: invokespecial #54                 // Method java/lang/Integer."<init>":(I)V
      19: putfield      #17                 // Field verbosity:Ljava/lang/Integer;
      22: aload_0
      23: getfield      #17                 // Field verbosity:Ljava/lang/Integer;
      26: invokevirtual #64                 // Method java/lang/Integer.intValue:()I
      29: ireturn

  public void setVerbosity(int);
    Code:
       0: aload_0
       1: new           #53                 // class java/lang/Integer
       4: dup
       5: iload_1
       6: invokespecial #54                 // Method java/lang/Integer."<init>":(I)V
       9: putfield      #17                 // Field verbosity:Ljava/lang/Integer;
      12: aload_0
      13: getfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
      16: iload_1
      17: invokevirtual #52                 // Method com/sun/org/apache/xml/internal/resolver/helpers/Debug.setDebug:(I)V
      20: return

  public int verbosity();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getVerbosity:()I
       4: ireturn

  private boolean queryRelativeCatalogs();
    Code:
       0: aload_0
       1: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
       4: ifnonnull     11
       7: aload_0
       8: invokespecial #60                 // Method readProperties:()V
      11: aload_0
      12: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     23
      18: aload_0
      19: getfield      #24                 // Field defaultRelativeCatalogs:Z
      22: ireturn
      23: aload_0
      24: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      27: ldc           #66                 // String relative-catalogs
      29: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      32: astore_1
      33: aload_1
      34: ldc           #67                 // String true
      36: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifne          60
      42: aload_1
      43: ldc           #69                 // String yes
      45: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      48: ifne          60
      51: aload_1
      52: ldc           #70                 // String 1
      54: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn
      66: astore_1
      67: aload_0
      68: getfield      #24                 // Field defaultRelativeCatalogs:Z
      71: ireturn
    Exception table:
       from    to  target type
          23    65    66   Class java/util/MissingResourceException

  public boolean getRelativeCatalogs();
    Code:
       0: aload_0
       1: getfield      #25                 // Field relativeCatalogs:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #71                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokespecial #72                 // Method queryRelativeCatalogs:()Z
      16: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #25                 // Field relativeCatalogs:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #25                 // Field relativeCatalogs:Ljava/lang/Boolean;
      26: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setRelativeCatalogs(boolean);
    Code:
       0: aload_0
       1: new           #71                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #25                 // Field relativeCatalogs:Ljava/lang/Boolean;
      12: return

  public boolean relativeCatalogs();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getRelativeCatalogs:()Z
       4: ireturn

  private java.lang.String queryCatalogFiles();
    Code:
       0: getstatic     #7                  // Field pFiles:Ljava/lang/String;
       3: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_0
       8: iconst_0
       9: putfield      #15                 // Field fromPropertiesFile:Z
      12: aload_1
      13: ifnonnull     83
      16: aload_0
      17: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      20: ifnonnull     27
      23: aload_0
      24: invokespecial #60                 // Method readProperties:()V
      27: aload_0
      28: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      31: ifnull        83
      34: aload_0
      35: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #76                 // String catalogs
      40: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: aload_0
      45: iconst_1
      46: putfield      #15                 // Field fromPropertiesFile:Z
      49: goto          83
      52: astore_2
      53: getstatic     #38                 // Field java/lang/System.err:Ljava/io/PrintStream;
      56: new           #31                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_0
      64: getfield      #10                 // Field propertyFile:Ljava/lang/String;
      67: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #77                 // String : catalogs not found.
      72: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokevirtual #40                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      81: aconst_null
      82: astore_1
      83: aload_1
      84: ifnonnull     92
      87: aload_0
      88: getfield      #13                 // Field defaultCatalogFiles:Ljava/lang/String;
      91: astore_1
      92: aload_1
      93: areturn
    Exception table:
       from    to  target type
          34    49    52   Class java/util/MissingResourceException

  public java.util.Vector getCatalogFiles();
    Code:
       0: aload_0
       1: getfield      #14                 // Field catalogFiles:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #78                 // Method queryCatalogFiles:()Ljava/lang/String;
      12: putfield      #14                 // Field catalogFiles:Ljava/lang/String;
      15: new           #79                 // class java/util/StringTokenizer
      18: dup
      19: aload_0
      20: getfield      #14                 // Field catalogFiles:Ljava/lang/String;
      23: ldc           #80                 // String ;
      25: invokespecial #81                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      28: astore_1
      29: new           #82                 // class java/util/Vector
      32: dup
      33: invokespecial #83                 // Method java/util/Vector."<init>":()V
      36: astore_2
      37: aload_1
      38: invokevirtual #84                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      41: ifeq          103
      44: aload_1
      45: invokevirtual #85                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      48: astore_3
      49: aconst_null
      50: astore        4
      52: aload_0
      53: getfield      #15                 // Field fromPropertiesFile:Z
      56: ifeq          94
      59: aload_0
      60: invokevirtual #86                 // Method relativeCatalogs:()Z
      63: ifne          94
      66: new           #87                 // class java/net/URL
      69: dup
      70: aload_0
      71: getfield      #11                 // Field propertyFileURI:Ljava/net/URL;
      74: aload_3
      75: invokespecial #88                 // Method java/net/URL."<init>":(Ljava/net/URL;Ljava/lang/String;)V
      78: astore        4
      80: aload         4
      82: invokevirtual #89                 // Method java/net/URL.toString:()Ljava/lang/String;
      85: astore_3
      86: goto          94
      89: astore        5
      91: aconst_null
      92: astore        4
      94: aload_2
      95: aload_3
      96: invokevirtual #91                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      99: pop
     100: goto          37
     103: aload_2
     104: areturn
    Exception table:
       from    to  target type
          66    86    89   Class java/net/MalformedURLException

  public void setCatalogFiles(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field catalogFiles:Ljava/lang/String;
       5: aload_0
       6: iconst_0
       7: putfield      #15                 // Field fromPropertiesFile:Z
      10: return

  public java.util.Vector catalogFiles();
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method getCatalogFiles:()Ljava/util/Vector;
       4: areturn

  private boolean queryPreferPublic();
    Code:
       0: getstatic     #93                 // Field pPrefer:Ljava/lang/String;
       3: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     53
      11: aload_0
      12: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #60                 // Method readProperties:()V
      22: aload_0
      23: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     34
      29: aload_0
      30: getfield      #18                 // Field defaultPreferPublic:Z
      33: ireturn
      34: aload_0
      35: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #94                 // String prefer
      40: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: goto          53
      47: astore_2
      48: aload_0
      49: getfield      #18                 // Field defaultPreferPublic:Z
      52: ireturn
      53: aload_1
      54: ifnonnull     62
      57: aload_0
      58: getfield      #18                 // Field defaultPreferPublic:Z
      61: ireturn
      62: aload_1
      63: ldc           #95                 // String public
      65: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      68: ireturn
    Exception table:
       from    to  target type
          34    44    47   Class java/util/MissingResourceException

  public boolean getPreferPublic();
    Code:
       0: aload_0
       1: getfield      #19                 // Field preferPublic:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #71                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokespecial #96                 // Method queryPreferPublic:()Z
      16: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #19                 // Field preferPublic:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #19                 // Field preferPublic:Ljava/lang/Boolean;
      26: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setPreferPublic(boolean);
    Code:
       0: aload_0
       1: new           #71                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #19                 // Field preferPublic:Ljava/lang/Boolean;
      12: return

  public boolean preferPublic();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method getPreferPublic:()Z
       4: ireturn

  private boolean queryUseStaticCatalog();
    Code:
       0: getstatic     #98                 // Field pStatic:Ljava/lang/String;
       3: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     53
      11: aload_0
      12: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #60                 // Method readProperties:()V
      22: aload_0
      23: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     34
      29: aload_0
      30: getfield      #20                 // Field defaultUseStaticCatalog:Z
      33: ireturn
      34: aload_0
      35: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #99                 // String static-catalog
      40: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: goto          53
      47: astore_2
      48: aload_0
      49: getfield      #20                 // Field defaultUseStaticCatalog:Z
      52: ireturn
      53: aload_1
      54: ifnonnull     62
      57: aload_0
      58: getfield      #20                 // Field defaultUseStaticCatalog:Z
      61: ireturn
      62: aload_1
      63: ldc           #67                 // String true
      65: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      68: ifne          89
      71: aload_1
      72: ldc           #69                 // String yes
      74: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      77: ifne          89
      80: aload_1
      81: ldc           #70                 // String 1
      83: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn
    Exception table:
       from    to  target type
          34    44    47   Class java/util/MissingResourceException

  public boolean getUseStaticCatalog();
    Code:
       0: aload_0
       1: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #71                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokespecial #100                // Method queryUseStaticCatalog:()Z
      16: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      26: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setUseStaticCatalog(boolean);
    Code:
       0: aload_0
       1: new           #71                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      12: return

  public boolean staticCatalog();
    Code:
       0: aload_0
       1: invokevirtual #101                // Method getUseStaticCatalog:()Z
       4: ireturn

  public com.sun.org.apache.xml.internal.resolver.Catalog getPrivateCatalog();
    Code:
       0: getstatic     #102                // Field staticCatalog:Lcom/sun/org/apache/xml/internal/resolver/Catalog;
       3: astore_1
       4: aload_0
       5: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
       8: ifnonnull     26
      11: aload_0
      12: new           #71                 // class java/lang/Boolean
      15: dup
      16: aload_0
      17: invokevirtual #101                // Method getUseStaticCatalog:()Z
      20: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
      23: putfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      26: aload_1
      27: ifnull        40
      30: aload_0
      31: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      34: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
      37: ifne          194
      40: aload_0
      41: invokevirtual #103                // Method getCatalogClassName:()Ljava/lang/String;
      44: astore_2
      45: aload_2
      46: ifnonnull     60
      49: new           #104                // class com/sun/org/apache/xml/internal/resolver/Catalog
      52: dup
      53: invokespecial #105                // Method com/sun/org/apache/xml/internal/resolver/Catalog."<init>":()V
      56: astore_1
      57: goto          159
      60: aload_2
      61: invokestatic  #106                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      64: invokevirtual #107                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      67: checkcast     #104                // class com/sun/org/apache/xml/internal/resolver/Catalog
      70: astore_1
      71: goto          159
      74: astore_3
      75: aload_0
      76: getfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
      79: iconst_1
      80: new           #31                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #109                // String Catalog class named \'
      89: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_2
      93: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #110                // String \' could not be found. Using default.
      98: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokevirtual #111                // Method com/sun/org/apache/xml/internal/resolver/helpers/Debug.message:(ILjava/lang/String;)V
     107: new           #104                // class com/sun/org/apache/xml/internal/resolver/Catalog
     110: dup
     111: invokespecial #105                // Method com/sun/org/apache/xml/internal/resolver/Catalog."<init>":()V
     114: astore_1
     115: goto          159
     118: astore_3
     119: aload_0
     120: getfield      #27                 // Field debug:Lcom/sun/org/apache/xml/internal/resolver/helpers/Debug;
     123: iconst_1
     124: new           #31                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
     131: ldc           #113                // String Class named \'
     133: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_2
     137: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #114                // String \' is not a Catalog. Using default.
     142: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokevirtual #111                // Method com/sun/org/apache/xml/internal/resolver/helpers/Debug.message:(ILjava/lang/String;)V
     151: new           #104                // class com/sun/org/apache/xml/internal/resolver/Catalog
     154: dup
     155: invokespecial #105                // Method com/sun/org/apache/xml/internal/resolver/Catalog."<init>":()V
     158: astore_1
     159: aload_1
     160: aload_0
     161: invokevirtual #115                // Method com/sun/org/apache/xml/internal/resolver/Catalog.setCatalogManager:(Lcom/sun/org/apache/xml/internal/resolver/CatalogManager;)V
     164: aload_1
     165: invokevirtual #116                // Method com/sun/org/apache/xml/internal/resolver/Catalog.setupReaders:()V
     168: aload_1
     169: invokevirtual #117                // Method com/sun/org/apache/xml/internal/resolver/Catalog.loadSystemCatalogs:()V
     172: goto          180
     175: astore_2
     176: aload_2
     177: invokevirtual #118                // Method java/lang/Exception.printStackTrace:()V
     180: aload_0
     181: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
     184: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
     187: ifeq          194
     190: aload_1
     191: putstatic     #102                // Field staticCatalog:Lcom/sun/org/apache/xml/internal/resolver/Catalog;
     194: aload_1
     195: areturn
    Exception table:
       from    to  target type
          60    71    74   Class java/lang/ClassNotFoundException
          60    71   118   Class java/lang/ClassCastException
          40   172   175   Class java/lang/Exception

  public com.sun.org.apache.xml.internal.resolver.Catalog getCatalog();
    Code:
       0: getstatic     #102                // Field staticCatalog:Lcom/sun/org/apache/xml/internal/resolver/Catalog;
       3: astore_1
       4: aload_0
       5: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
       8: ifnonnull     26
      11: aload_0
      12: new           #71                 // class java/lang/Boolean
      15: dup
      16: aload_0
      17: invokevirtual #101                // Method getUseStaticCatalog:()Z
      20: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
      23: putfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      26: aload_1
      27: ifnull        40
      30: aload_0
      31: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      34: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
      37: ifne          59
      40: aload_0
      41: invokevirtual #119                // Method getPrivateCatalog:()Lcom/sun/org/apache/xml/internal/resolver/Catalog;
      44: astore_1
      45: aload_0
      46: getfield      #21                 // Field useStaticCatalog:Ljava/lang/Boolean;
      49: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
      52: ifeq          59
      55: aload_1
      56: putstatic     #102                // Field staticCatalog:Lcom/sun/org/apache/xml/internal/resolver/Catalog;
      59: aload_1
      60: areturn

  public boolean queryAllowOasisXMLCatalogPI();
    Code:
       0: getstatic     #120                // Field pAllowPI:Ljava/lang/String;
       3: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     53
      11: aload_0
      12: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #60                 // Method readProperties:()V
      22: aload_0
      23: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     34
      29: aload_0
      30: getfield      #22                 // Field defaultOasisXMLCatalogPI:Z
      33: ireturn
      34: aload_0
      35: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      38: ldc           #121                // String allow-oasis-xml-catalog-pi
      40: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      43: astore_1
      44: goto          53
      47: astore_2
      48: aload_0
      49: getfield      #22                 // Field defaultOasisXMLCatalogPI:Z
      52: ireturn
      53: aload_1
      54: ifnonnull     62
      57: aload_0
      58: getfield      #22                 // Field defaultOasisXMLCatalogPI:Z
      61: ireturn
      62: aload_1
      63: ldc           #67                 // String true
      65: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      68: ifne          89
      71: aload_1
      72: ldc           #69                 // String yes
      74: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      77: ifne          89
      80: aload_1
      81: ldc           #70                 // String 1
      83: invokevirtual #68                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: ireturn
    Exception table:
       from    to  target type
          34    44    47   Class java/util/MissingResourceException

  public boolean getAllowOasisXMLCatalogPI();
    Code:
       0: aload_0
       1: getfield      #23                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
       4: ifnonnull     22
       7: aload_0
       8: new           #71                 // class java/lang/Boolean
      11: dup
      12: aload_0
      13: invokevirtual #122                // Method queryAllowOasisXMLCatalogPI:()Z
      16: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
      19: putfield      #23                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
      22: aload_0
      23: getfield      #23                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
      26: invokevirtual #74                 // Method java/lang/Boolean.booleanValue:()Z
      29: ireturn

  public void setAllowOasisXMLCatalogPI(boolean);
    Code:
       0: aload_0
       1: new           #71                 // class java/lang/Boolean
       4: dup
       5: iload_1
       6: invokespecial #73                 // Method java/lang/Boolean."<init>":(Z)V
       9: putfield      #23                 // Field oasisXMLCatalogPI:Ljava/lang/Boolean;
      12: return

  public boolean allowOasisXMLCatalogPI();
    Code:
       0: aload_0
       1: invokevirtual #123                // Method getAllowOasisXMLCatalogPI:()Z
       4: ireturn

  public java.lang.String queryCatalogClassName();
    Code:
       0: getstatic     #124                // Field pClassname:Ljava/lang/String;
       3: invokestatic  #6                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnonnull     44
      11: aload_0
      12: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      15: ifnonnull     22
      18: aload_0
      19: invokespecial #60                 // Method readProperties:()V
      22: aload_0
      23: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      26: ifnonnull     31
      29: aconst_null
      30: areturn
      31: aload_0
      32: getfield      #43                 // Field resources:Ljava/util/ResourceBundle;
      35: ldc           #125                // String catalog-class-name
      37: invokevirtual #49                 // Method java/util/ResourceBundle.getString:(Ljava/lang/String;)Ljava/lang/String;
      40: areturn
      41: astore_2
      42: aconst_null
      43: areturn
      44: aload_1
      45: areturn
    Exception table:
       from    to  target type
          31    40    41   Class java/util/MissingResourceException

  public java.lang.String getCatalogClassName();
    Code:
       0: aload_0
       1: getfield      #26                 // Field catalogClassName:Ljava/lang/String;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokevirtual #126                // Method queryCatalogClassName:()Ljava/lang/String;
      12: putfield      #26                 // Field catalogClassName:Ljava/lang/String;
      15: aload_0
      16: getfield      #26                 // Field catalogClassName:Ljava/lang/String;
      19: areturn

  public void setCatalogClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field catalogClassName:Ljava/lang/String;
       5: return

  public java.lang.String catalogClassName();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method getCatalogClassName:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: ldc           #127                // String xml.catalog.files
       2: putstatic     #7                  // Field pFiles:Ljava/lang/String;
       5: ldc           #128                // String xml.catalog.verbosity
       7: putstatic     #59                 // Field pVerbosity:Ljava/lang/String;
      10: ldc           #129                // String xml.catalog.prefer
      12: putstatic     #93                 // Field pPrefer:Ljava/lang/String;
      15: ldc           #130                // String xml.catalog.staticCatalog
      17: putstatic     #98                 // Field pStatic:Ljava/lang/String;
      20: ldc           #131                // String xml.catalog.allowPI
      22: putstatic     #120                // Field pAllowPI:Ljava/lang/String;
      25: ldc           #132                // String xml.catalog.className
      27: putstatic     #124                // Field pClassname:Ljava/lang/String;
      30: ldc           #133                // String xml.catalog.ignoreMissing
      32: putstatic     #5                  // Field pIgnoreMissing:Ljava/lang/String;
      35: new           #30                 // class com/sun/org/apache/xml/internal/resolver/CatalogManager
      38: dup
      39: invokespecial #134                // Method "<init>":()V
      42: putstatic     #56                 // Field staticManager:Lcom/sun/org/apache/xml/internal/resolver/CatalogManager;
      45: aconst_null
      46: putstatic     #102                // Field staticCatalog:Lcom/sun/org/apache/xml/internal/resolver/Catalog;
      49: return
}
