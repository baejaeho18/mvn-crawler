Compiled from "DTDEventListener.java"
public interface com.sun.xml.dtdparser.DTDEventListener extends java.util.EventListener {
  public static final short CONTENT_MODEL_EMPTY;

  public static final short CONTENT_MODEL_ANY;

  public static final short CONTENT_MODEL_MIXED;

  public static final short CONTENT_MODEL_CHILDREN;

  public static final short USE_NORMAL;

  public static final short USE_IMPLIED;

  public static final short USE_FIXED;

  public static final short USE_REQUIRED;

  public static final short CHOICE;

  public static final short SEQUENCE;

  public static final short OCCURENCE_ZERO_OR_MORE;

  public static final short OCCURENCE_ONE_OR_MORE;

  public static final short OCCURENCE_ZERO_OR_ONE;

  public static final short OCCURENCE_ONCE;

  public abstract void setDocumentLocator(org.xml.sax.Locator);

  public abstract void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void notationDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void internalGeneralEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void externalGeneralEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void internalParameterEntityDecl(java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void externalParameterEntityDecl(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void startDTD(com.sun.xml.dtdparser.InputEntity) throws org.xml.sax.SAXException;

  public abstract void endDTD() throws org.xml.sax.SAXException;

  public abstract void comment(java.lang.String) throws org.xml.sax.SAXException;

  public abstract void characters(char[], int, int) throws org.xml.sax.SAXException;

  public abstract void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException;

  public abstract void startCDATA() throws org.xml.sax.SAXException;

  public abstract void endCDATA() throws org.xml.sax.SAXException;

  public abstract void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;

  public abstract void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;

  public abstract void warning(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException;

  public abstract void startContentModel(java.lang.String, short) throws org.xml.sax.SAXException;

  public abstract void endContentModel(java.lang.String, short) throws org.xml.sax.SAXException;

  public abstract void attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], short, java.lang.String) throws org.xml.sax.SAXException;

  public abstract void childElement(java.lang.String, short) throws org.xml.sax.SAXException;

  public abstract void mixedElement(java.lang.String) throws org.xml.sax.SAXException;

  public abstract void startModelGroup() throws org.xml.sax.SAXException;

  public abstract void endModelGroup(short) throws org.xml.sax.SAXException;

  public abstract void connector(short) throws org.xml.sax.SAXException;
}
