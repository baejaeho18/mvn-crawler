Compiled from "JPrimitiveType.java"
public final class com.sun.codemodel.JPrimitiveType extends com.sun.codemodel.JType {
  private final java.lang.String typeName;

  private final com.sun.codemodel.JCodeModel owner;

  private final com.sun.codemodel.JClass wrapperClass;

  private com.sun.codemodel.JClass arrayClass;

  com.sun.codemodel.JPrimitiveType(com.sun.codemodel.JCodeModel, java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/sun/codemodel/JType."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field owner:Lcom/sun/codemodel/JCodeModel;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field typeName:Ljava/lang/String;
      14: aload_0
      15: aload_1
      16: aload_3
      17: invokevirtual #4                  // Method com/sun/codemodel/JCodeModel.ref:(Ljava/lang/Class;)Lcom/sun/codemodel/JClass;
      20: putfield      #5                  // Field wrapperClass:Lcom/sun/codemodel/JClass;
      23: return

  public com.sun.codemodel.JCodeModel owner();
    Code:
       0: aload_0
       1: getfield      #2                  // Field owner:Lcom/sun/codemodel/JCodeModel;
       4: areturn

  public java.lang.String fullName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field typeName:Ljava/lang/String;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method fullName:()Ljava/lang/String;
       4: areturn

  public boolean isPrimitive();
    Code:
       0: iconst_1
       1: ireturn

  public com.sun.codemodel.JClass array();
    Code:
       0: aload_0
       1: getfield      #7                  // Field arrayClass:Lcom/sun/codemodel/JClass;
       4: ifnonnull     23
       7: aload_0
       8: new           #8                  // class com/sun/codemodel/JArrayClass
      11: dup
      12: aload_0
      13: getfield      #2                  // Field owner:Lcom/sun/codemodel/JCodeModel;
      16: aload_0
      17: invokespecial #9                  // Method com/sun/codemodel/JArrayClass."<init>":(Lcom/sun/codemodel/JCodeModel;Lcom/sun/codemodel/JType;)V
      20: putfield      #7                  // Field arrayClass:Lcom/sun/codemodel/JClass;
      23: aload_0
      24: getfield      #7                  // Field arrayClass:Lcom/sun/codemodel/JClass;
      27: areturn

  public com.sun.codemodel.JClass boxify();
    Code:
       0: aload_0
       1: getfield      #5                  // Field wrapperClass:Lcom/sun/codemodel/JClass;
       4: areturn

  public com.sun.codemodel.JType unboxify();
    Code:
       0: aload_0
       1: areturn

  public com.sun.codemodel.JClass getWrapperClass();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method boxify:()Lcom/sun/codemodel/JClass;
       4: areturn

  public com.sun.codemodel.JExpression wrap(com.sun.codemodel.JExpression);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method boxify:()Lcom/sun/codemodel/JClass;
       4: invokestatic  #11                 // Method com/sun/codemodel/JExpr._new:(Lcom/sun/codemodel/JClass;)Lcom/sun/codemodel/JInvocation;
       7: aload_1
       8: invokevirtual #12                 // Method com/sun/codemodel/JInvocation.arg:(Lcom/sun/codemodel/JExpression;)Lcom/sun/codemodel/JInvocation;
      11: areturn

  public com.sun.codemodel.JExpression unwrap(com.sun.codemodel.JExpression);
    Code:
       0: aload_1
       1: new           #13                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_0
       9: getfield      #3                  // Field typeName:Ljava/lang/String;
      12: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #16                 // String Value
      17: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokeinterface #18,  2           // InterfaceMethod com/sun/codemodel/JExpression.invoke:(Ljava/lang/String;)Lcom/sun/codemodel/JInvocation;
      28: areturn

  public void generate(com.sun.codemodel.JFormatter);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field typeName:Ljava/lang/String;
       5: invokevirtual #19                 // Method com/sun/codemodel/JFormatter.p:(Ljava/lang/String;)Lcom/sun/codemodel/JFormatter;
       8: pop
       9: return
}
