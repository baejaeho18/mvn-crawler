Compiled from "JCase.java"
public final class com.sun.codemodel.JCase implements com.sun.codemodel.JStatement {
  private com.sun.codemodel.JExpression label;

  private com.sun.codemodel.JBlock body;

  private boolean isDefaultCase;

  com.sun.codemodel.JCase(com.sun.codemodel.JExpression);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lcom/sun/codemodel/JExpression;Z)V
       6: return

  com.sun.codemodel.JCase(com.sun.codemodel.JExpression, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #3                  // Field body:Lcom/sun/codemodel/JBlock;
       9: aload_0
      10: iconst_0
      11: putfield      #4                  // Field isDefaultCase:Z
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field label:Lcom/sun/codemodel/JExpression;
      19: aload_0
      20: iload_2
      21: putfield      #4                  // Field isDefaultCase:Z
      24: return

  public com.sun.codemodel.JExpression label();
    Code:
       0: aload_0
       1: getfield      #5                  // Field label:Lcom/sun/codemodel/JExpression;
       4: areturn

  public com.sun.codemodel.JBlock body();
    Code:
       0: aload_0
       1: getfield      #3                  // Field body:Lcom/sun/codemodel/JBlock;
       4: ifnonnull     20
       7: aload_0
       8: new           #6                  // class com/sun/codemodel/JBlock
      11: dup
      12: iconst_0
      13: iconst_1
      14: invokespecial #7                  // Method com/sun/codemodel/JBlock."<init>":(ZZ)V
      17: putfield      #3                  // Field body:Lcom/sun/codemodel/JBlock;
      20: aload_0
      21: getfield      #3                  // Field body:Lcom/sun/codemodel/JBlock;
      24: areturn

  public void state(com.sun.codemodel.JFormatter);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method com/sun/codemodel/JFormatter.i:()Lcom/sun/codemodel/JFormatter;
       4: pop
       5: aload_0
       6: getfield      #4                  // Field isDefaultCase:Z
       9: ifne          37
      12: aload_1
      13: ldc           #9                  // String case
      15: invokevirtual #10                 // Method com/sun/codemodel/JFormatter.p:(Ljava/lang/String;)Lcom/sun/codemodel/JFormatter;
      18: aload_0
      19: getfield      #5                  // Field label:Lcom/sun/codemodel/JExpression;
      22: invokevirtual #11                 // Method com/sun/codemodel/JFormatter.g:(Lcom/sun/codemodel/JGenerable;)Lcom/sun/codemodel/JFormatter;
      25: bipush        58
      27: invokevirtual #12                 // Method com/sun/codemodel/JFormatter.p:(C)Lcom/sun/codemodel/JFormatter;
      30: invokevirtual #13                 // Method com/sun/codemodel/JFormatter.nl:()Lcom/sun/codemodel/JFormatter;
      33: pop
      34: goto          47
      37: aload_1
      38: ldc           #14                 // String default:
      40: invokevirtual #10                 // Method com/sun/codemodel/JFormatter.p:(Ljava/lang/String;)Lcom/sun/codemodel/JFormatter;
      43: invokevirtual #13                 // Method com/sun/codemodel/JFormatter.nl:()Lcom/sun/codemodel/JFormatter;
      46: pop
      47: aload_0
      48: getfield      #3                  // Field body:Lcom/sun/codemodel/JBlock;
      51: ifnull        63
      54: aload_1
      55: aload_0
      56: getfield      #3                  // Field body:Lcom/sun/codemodel/JBlock;
      59: invokevirtual #15                 // Method com/sun/codemodel/JFormatter.s:(Lcom/sun/codemodel/JStatement;)Lcom/sun/codemodel/JFormatter;
      62: pop
      63: aload_1
      64: invokevirtual #16                 // Method com/sun/codemodel/JFormatter.o:()Lcom/sun/codemodel/JFormatter;
      67: pop
      68: return
}
