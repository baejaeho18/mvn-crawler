Compiled from "IMAPInputStream.java"
public class com.sun.mail.imap.IMAPInputStream extends java.io.InputStream {
  private com.sun.mail.imap.IMAPMessage msg;

  private java.lang.String section;

  private int pos;

  private int blksize;

  private int max;

  private byte[] buf;

  private int bufcount;

  private int bufpos;

  private boolean peek;

  public com.sun.mail.imap.IMAPInputStream(com.sun.mail.imap.IMAPMessage, java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field section:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field max:I
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field peek:Z
      25: aload_0
      26: iconst_0
      27: putfield      #6                  // Field pos:I
      30: aload_0
      31: aload_1
      32: invokevirtual #7                  // Method com/sun/mail/imap/IMAPMessage.getFetchBlockSize:()I
      35: putfield      #8                  // Field blksize:I
      38: return

  private void fill() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field max:I
       4: iconst_m1
       5: if_icmpeq     31
       8: aload_0
       9: getfield      #6                  // Field pos:I
      12: aload_0
      13: getfield      #4                  // Field max:I
      16: if_icmplt     31
      19: aload_0
      20: getfield      #6                  // Field pos:I
      23: ifne          30
      26: aload_0
      27: invokespecial #9                  // Method checkSeen:()V
      30: return
      31: aconst_null
      32: astore_1
      33: aload_0
      34: getfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
      37: invokevirtual #10                 // Method com/sun/mail/imap/IMAPMessage.getMessageCacheLock:()Ljava/lang/Object;
      40: dup
      41: astore_2
      42: monitorenter
      43: aload_0
      44: getfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
      47: invokevirtual #11                 // Method com/sun/mail/imap/IMAPMessage.isExpunged:()Z
      50: ifeq          63
      53: new           #12                 // class java/io/IOException
      56: dup
      57: ldc           #13                 // String No content for expunged message
      59: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_0
      64: getfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
      67: invokevirtual #15                 // Method com/sun/mail/imap/IMAPMessage.getSequenceNumber:()I
      70: istore_3
      71: aload_0
      72: getfield      #8                  // Field blksize:I
      75: istore        4
      77: aload_0
      78: getfield      #4                  // Field max:I
      81: iconst_m1
      82: if_icmpeq     112
      85: aload_0
      86: getfield      #6                  // Field pos:I
      89: aload_0
      90: getfield      #8                  // Field blksize:I
      93: iadd
      94: aload_0
      95: getfield      #4                  // Field max:I
      98: if_icmple     112
     101: aload_0
     102: getfield      #4                  // Field max:I
     105: aload_0
     106: getfield      #6                  // Field pos:I
     109: isub
     110: istore        4
     112: aload_0
     113: getfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
     116: invokevirtual #16                 // Method com/sun/mail/imap/IMAPMessage.getProtocol:()Lcom/sun/mail/imap/protocol/IMAPProtocol;
     119: astore        5
     121: aload_0
     122: getfield      #5                  // Field peek:Z
     125: ifeq          148
     128: aload         5
     130: iload_3
     131: aload_0
     132: getfield      #3                  // Field section:Ljava/lang/String;
     135: aload_0
     136: getfield      #6                  // Field pos:I
     139: iload         4
     141: invokevirtual #17                 // Method com/sun/mail/imap/protocol/IMAPProtocol.peekBody:(ILjava/lang/String;II)Lcom/sun/mail/imap/protocol/BODY;
     144: astore_1
     145: goto          165
     148: aload         5
     150: iload_3
     151: aload_0
     152: getfield      #3                  // Field section:Ljava/lang/String;
     155: aload_0
     156: getfield      #6                  // Field pos:I
     159: iload         4
     161: invokevirtual #18                 // Method com/sun/mail/imap/protocol/IMAPProtocol.fetchBody:(ILjava/lang/String;II)Lcom/sun/mail/imap/protocol/BODY;
     164: astore_1
     165: goto          198
     168: astore        5
     170: new           #12                 // class java/io/IOException
     173: dup
     174: aload         5
     176: invokevirtual #20                 // Method com/sun/mail/iap/ProtocolException.getMessage:()Ljava/lang/String;
     179: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     182: athrow
     183: astore        5
     185: new           #12                 // class java/io/IOException
     188: dup
     189: aload         5
     191: invokevirtual #22                 // Method javax/mail/FolderClosedException.getMessage:()Ljava/lang/String;
     194: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     197: athrow
     198: aload_2
     199: monitorexit
     200: goto          210
     203: astore        6
     205: aload_2
     206: monitorexit
     207: aload         6
     209: athrow
     210: aload_1
     211: ifnull        223
     214: aload_1
     215: invokevirtual #23                 // Method com/sun/mail/imap/protocol/BODY.getByteArray:()Lcom/sun/mail/iap/ByteArray;
     218: dup
     219: astore_2
     220: ifnonnull     233
     223: new           #12                 // class java/io/IOException
     226: dup
     227: ldc           #24                 // String No content
     229: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     232: athrow
     233: aload_0
     234: getfield      #6                  // Field pos:I
     237: ifne          244
     240: aload_0
     241: invokespecial #9                  // Method checkSeen:()V
     244: aload_0
     245: aload_2
     246: invokevirtual #25                 // Method com/sun/mail/iap/ByteArray.getBytes:()[B
     249: putfield      #26                 // Field buf:[B
     252: aload_0
     253: aload_2
     254: invokevirtual #27                 // Method com/sun/mail/iap/ByteArray.getStart:()I
     257: putfield      #28                 // Field bufpos:I
     260: aload_2
     261: invokevirtual #29                 // Method com/sun/mail/iap/ByteArray.getCount:()I
     264: istore_3
     265: aload_0
     266: aload_0
     267: getfield      #28                 // Field bufpos:I
     270: iload_3
     271: iadd
     272: putfield      #30                 // Field bufcount:I
     275: aload_0
     276: dup
     277: getfield      #6                  // Field pos:I
     280: iload_3
     281: iadd
     282: putfield      #6                  // Field pos:I
     285: return
    Exception table:
       from    to  target type
         112   165   168   Class com/sun/mail/iap/ProtocolException
         112   165   183   Class javax/mail/FolderClosedException
          43   200   203   any
         203   207   203   any

  public synchronized int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field bufpos:I
       4: aload_0
       5: getfield      #30                 // Field bufcount:I
       8: if_icmplt     28
      11: aload_0
      12: invokespecial #31                 // Method fill:()V
      15: aload_0
      16: getfield      #28                 // Field bufpos:I
      19: aload_0
      20: getfield      #30                 // Field bufcount:I
      23: if_icmplt     28
      26: iconst_m1
      27: ireturn
      28: aload_0
      29: getfield      #26                 // Field buf:[B
      32: aload_0
      33: dup
      34: getfield      #28                 // Field bufpos:I
      37: dup_x1
      38: iconst_1
      39: iadd
      40: putfield      #28                 // Field bufpos:I
      43: baload
      44: sipush        255
      47: iand
      48: ireturn

  public synchronized int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field bufcount:I
       4: aload_0
       5: getfield      #28                 // Field bufpos:I
       8: isub
       9: istore        4
      11: iload         4
      13: ifgt          38
      16: aload_0
      17: invokespecial #31                 // Method fill:()V
      20: aload_0
      21: getfield      #30                 // Field bufcount:I
      24: aload_0
      25: getfield      #28                 // Field bufpos:I
      28: isub
      29: istore        4
      31: iload         4
      33: ifgt          38
      36: iconst_m1
      37: ireturn
      38: iload         4
      40: iload_3
      41: if_icmpge     49
      44: iload         4
      46: goto          50
      49: iload_3
      50: istore        5
      52: aload_0
      53: getfield      #26                 // Field buf:[B
      56: aload_0
      57: getfield      #28                 // Field bufpos:I
      60: aload_1
      61: iload_2
      62: iload         5
      64: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      67: aload_0
      68: dup
      69: getfield      #28                 // Field bufpos:I
      72: iload         5
      74: iadd
      75: putfield      #28                 // Field bufpos:I
      78: iload         5
      80: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #33                 // Method read:([BII)I
       8: ireturn

  public synchronized int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field bufcount:I
       4: aload_0
       5: getfield      #28                 // Field bufpos:I
       8: isub
       9: ireturn

  private void checkSeen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field peek:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
      12: invokevirtual #34                 // Method com/sun/mail/imap/IMAPMessage.getFolder:()Ljavax/mail/Folder;
      15: astore_1
      16: aload_1
      17: ifnull        52
      20: aload_1
      21: invokevirtual #35                 // Method javax/mail/Folder.getMode:()I
      24: iconst_1
      25: if_icmpeq     52
      28: aload_0
      29: getfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
      32: getstatic     #36                 // Field javax/mail/Flags$Flag.SEEN:Ljavax/mail/Flags$Flag;
      35: invokevirtual #37                 // Method com/sun/mail/imap/IMAPMessage.isSet:(Ljavax/mail/Flags$Flag;)Z
      38: ifne          52
      41: aload_0
      42: getfield      #2                  // Field msg:Lcom/sun/mail/imap/IMAPMessage;
      45: getstatic     #36                 // Field javax/mail/Flags$Flag.SEEN:Ljavax/mail/Flags$Flag;
      48: iconst_1
      49: invokevirtual #38                 // Method com/sun/mail/imap/IMAPMessage.setFlag:(Ljavax/mail/Flags$Flag;Z)V
      52: goto          56
      55: astore_1
      56: return
    Exception table:
       from    to  target type
           8    52    55   Class javax/mail/MessagingException
}
