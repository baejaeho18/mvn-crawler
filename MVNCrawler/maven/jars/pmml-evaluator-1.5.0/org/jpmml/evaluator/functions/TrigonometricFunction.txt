Compiled from "TrigonometricFunction.java"
public abstract class org.jpmml.evaluator.functions.TrigonometricFunction extends org.jpmml.evaluator.functions.UnaryMathFunction {
  public org.jpmml.evaluator.functions.TrigonometricFunction(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jpmml/evaluator/functions/UnaryMathFunction."<init>":(Ljava/lang/String;)V
       5: return

  public abstract java.lang.Double evaluate(java.lang.Number);

  public org.jpmml.evaluator.FieldValue evaluate(org.jpmml.evaluator.FieldValue);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method org/jpmml/evaluator/FieldValue.asNumber:()Ljava/lang/Number;
       5: invokevirtual #3                  // Method evaluate:(Ljava/lang/Number;)Ljava/lang/Double;
       8: astore_2
       9: aload_2
      10: invokevirtual #4                  // Method java/lang/Double.isNaN:()Z
      13: ifeq          24
      16: new           #5                  // class org/jpmml/evaluator/NaNResultException
      19: dup
      20: invokespecial #6                  // Method org/jpmml/evaluator/NaNResultException."<init>":()V
      23: athrow
      24: getstatic     #7                  // Field org/jpmml/evaluator/TypeInfos.CONTINUOUS_DOUBLE:Lorg/jpmml/evaluator/TypeInfo;
      27: aload_2
      28: invokestatic  #8                  // Method org/jpmml/evaluator/FieldValueUtil.create:(Lorg/jpmml/evaluator/TypeInfo;Ljava/lang/Object;)Lorg/jpmml/evaluator/FieldValue;
      31: areturn

  public java.lang.Number evaluate(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method evaluate:(Ljava/lang/Number;)Ljava/lang/Double;
       5: areturn
}
