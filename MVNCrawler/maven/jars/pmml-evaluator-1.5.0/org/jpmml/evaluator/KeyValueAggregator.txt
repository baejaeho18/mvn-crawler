Compiled from "KeyValueAggregator.java"
public class org.jpmml.evaluator.KeyValueAggregator<K, V extends java.lang.Number> {
  private org.jpmml.evaluator.ValueFactory<V> valueFactory;

  private int capacity;

  private java.util.Map<K, org.jpmml.evaluator.Vector<V>> map;

  protected org.jpmml.evaluator.KeyValueAggregator(org.jpmml.evaluator.ValueFactory<V>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field valueFactory:Lorg/jpmml/evaluator/ValueFactory;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field capacity:I
      14: aload_0
      15: new           #4                  // class java/util/LinkedHashMap
      18: dup
      19: invokespecial #5                  // Method java/util/LinkedHashMap."<init>":()V
      22: putfield      #6                  // Field map:Ljava/util/Map;
      25: aload_0
      26: aload_1
      27: putfield      #2                  // Field valueFactory:Lorg/jpmml/evaluator/ValueFactory;
      30: aload_0
      31: iload_2
      32: putfield      #3                  // Field capacity:I
      35: return

  public void init(java.util.Collection<K>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          20
      12: new           #8                  // class java/lang/IllegalStateException
      15: dup
      16: invokespecial #9                  // Method java/lang/IllegalStateException."<init>":()V
      19: athrow
      20: aload_1
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          52
      36: aload_2
      37: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: astore_3
      43: aload_0
      44: aload_3
      45: invokespecial #13                 // Method ensureVector:(Ljava/lang/Object;)Lorg/jpmml/evaluator/Vector;
      48: pop
      49: goto          27
      52: return

  public void add(K, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method ensureVector:(Ljava/lang/Object;)Lorg/jpmml/evaluator/Vector;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokevirtual #14                 // Method org/jpmml/evaluator/Vector.add:(Ljava/lang/Number;)Lorg/jpmml/evaluator/Vector;
      11: pop
      12: return

  public void add(K, java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method ensureVector:(Ljava/lang/Object;)Lorg/jpmml/evaluator/Vector;
       5: astore        4
       7: aload_2
       8: invokevirtual #15                 // Method java/lang/Number.doubleValue:()D
      11: dconst_1
      12: dcmpl
      13: ifeq          27
      16: aload         4
      18: aload_2
      19: aload_3
      20: invokevirtual #16                 // Method org/jpmml/evaluator/Vector.add:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jpmml/evaluator/Vector;
      23: pop
      24: goto          34
      27: aload         4
      29: aload_3
      30: invokevirtual #14                 // Method org/jpmml/evaluator/Vector.add:(Ljava/lang/Number;)Lorg/jpmml/evaluator/Vector;
      33: pop
      34: return

  protected org.jpmml.evaluator.Vector<V> get(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class org/jpmml/evaluator/Vector
      13: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  protected java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: invokeinterface #20,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  protected java.util.Collection<org.jpmml.evaluator.Vector<V>> values();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  protected java.util.Set<java.util.Map$Entry<K, org.jpmml.evaluator.Vector<V>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  protected java.util.Map<K, org.jpmml.evaluator.Value<V>> asTransformedMap(com.google.common.base.Function<org.jpmml.evaluator.Vector<V>, org.jpmml.evaluator.Value<V>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokestatic  #23                 // Method com/google/common/collect/Maps.transformValues:(Ljava/util/Map;Lcom/google/common/base/Function;)Ljava/util/Map;
       8: areturn

  public org.jpmml.evaluator.ValueFactory<V> getValueFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueFactory:Lorg/jpmml/evaluator/ValueFactory;
       4: areturn

  private org.jpmml.evaluator.Vector<V> ensureVector(K);
    Code:
       0: aload_0
       1: getfield      #6                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #18                 // class org/jpmml/evaluator/Vector
      13: astore_2
      14: aload_2
      15: ifnonnull     42
      18: aload_0
      19: getfield      #2                  // Field valueFactory:Lorg/jpmml/evaluator/ValueFactory;
      22: aload_0
      23: getfield      #3                  // Field capacity:I
      26: invokevirtual #24                 // Method org/jpmml/evaluator/ValueFactory.newVector:(I)Lorg/jpmml/evaluator/Vector;
      29: astore_2
      30: aload_0
      31: getfield      #6                  // Field map:Ljava/util/Map;
      34: aload_1
      35: aload_2
      36: invokeinterface #25,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_2
      43: areturn
}
