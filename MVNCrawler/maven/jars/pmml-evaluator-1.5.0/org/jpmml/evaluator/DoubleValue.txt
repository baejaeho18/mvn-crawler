Compiled from "DoubleValue.java"
public class org.jpmml.evaluator.DoubleValue extends org.jpmml.evaluator.Value<java.lang.Double> {
  protected double value;

  public static final double E;

  public static final double PI;

  public org.jpmml.evaluator.DoubleValue(double);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jpmml/evaluator/Value."<init>":()V
       4: aload_0
       5: dconst_0
       6: putfield      #3                  // Field value:D
       9: aload_0
      10: dload_1
      11: putfield      #3                  // Field value:D
      14: return

  public org.jpmml.evaluator.DoubleValue(java.lang.Number);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/jpmml/evaluator/Value."<init>":()V
       4: aload_0
       5: dconst_0
       6: putfield      #3                  // Field value:D
       9: aload_0
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      14: putfield      #3                  // Field value:D
      17: return

  public int compareTo(org.jpmml.evaluator.Value<java.lang.Double>);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method doubleValue:()D
       4: aload_1
       5: invokevirtual #6                  // Method org/jpmml/evaluator/Value.doubleValue:()D
       8: invokestatic  #7                  // Method java/lang/Double.compare:(DD)I
      11: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: invokestatic  #8                  // Method java/lang/Double.toString:(D)Ljava/lang/String;
       7: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: invokestatic  #9                  // Method java/lang/Double.doubleToLongBits:(D)J
       7: lstore_1
       8: lload_1
       9: lload_1
      10: bipush        32
      12: lushr
      13: lxor
      14: l2i
      15: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #10                 // class org/jpmml/evaluator/DoubleValue
       4: ifeq          36
       7: aload_1
       8: checkcast     #10                 // class org/jpmml/evaluator/DoubleValue
      11: astore_2
      12: aload_0
      13: getfield      #3                  // Field value:D
      16: invokestatic  #9                  // Method java/lang/Double.doubleToLongBits:(D)J
      19: aload_2
      20: getfield      #3                  // Field value:D
      23: invokestatic  #9                  // Method java/lang/Double.doubleToLongBits:(D)J
      26: lcmp
      27: ifne          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn
      36: iconst_0
      37: ireturn

  public org.jpmml.evaluator.DoubleValue copy();
    Code:
       0: new           #10                 // class org/jpmml/evaluator/DoubleValue
       3: dup
       4: aload_0
       5: getfield      #3                  // Field value:D
       8: invokespecial #11                 // Method "<init>":(D)V
      11: areturn

  public org.jpmml.evaluator.DoubleValue add(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: dadd
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue add(org.jpmml.evaluator.Value<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #6                  // Method org/jpmml/evaluator/Value.doubleValue:()D
       9: dadd
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue add(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: aload_2
      10: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      13: dmul
      14: dadd
      15: putfield      #3                  // Field value:D
      18: aload_0
      19: areturn

  public org.jpmml.evaluator.DoubleValue add(java.lang.Number, java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: aload_2
      10: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      13: dmul
      14: aload_3
      15: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      18: dmul
      19: dadd
      20: putfield      #3                  // Field value:D
      23: aload_0
      24: areturn

  public org.jpmml.evaluator.DoubleValue add(java.lang.Number, java.lang.Number...);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       4: dstore_3
       5: iconst_0
       6: istore        5
       8: iload         5
      10: aload_2
      11: arraylength
      12: if_icmpge     35
      15: aload_2
      16: iload         5
      18: aaload
      19: astore        6
      21: dload_3
      22: aload         6
      24: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      27: dmul
      28: dstore_3
      29: iinc          5, 1
      32: goto          8
      35: aload_0
      36: dup
      37: getfield      #3                  // Field value:D
      40: dload_3
      41: dadd
      42: putfield      #3                  // Field value:D
      45: aload_0
      46: areturn

  public org.jpmml.evaluator.DoubleValue add(java.lang.Number, java.lang.Number, int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: aload_2
      10: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      13: iload_3
      14: i2d
      15: invokestatic  #12                 // Method java/lang/Math.pow:(DD)D
      18: dmul
      19: dadd
      20: putfield      #3                  // Field value:D
      23: aload_0
      24: areturn

  public org.jpmml.evaluator.DoubleValue subtract(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: dsub
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue subtract(org.jpmml.evaluator.Value<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #6                  // Method org/jpmml/evaluator/Value.doubleValue:()D
       9: dsub
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue multiply(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: dmul
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue multiply(org.jpmml.evaluator.Value<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #6                  // Method org/jpmml/evaluator/Value.doubleValue:()D
       9: dmul
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue multiply(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: aload_2
      10: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      13: invokestatic  #12                 // Method java/lang/Math.pow:(DD)D
      16: dmul
      17: putfield      #3                  // Field value:D
      20: aload_0
      21: areturn

  public org.jpmml.evaluator.DoubleValue divide(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: ddiv
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue divide(org.jpmml.evaluator.Value<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #6                  // Method org/jpmml/evaluator/Value.doubleValue:()D
       9: ddiv
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue residual(org.jpmml.evaluator.Value<? extends java.lang.Number>);
    Code:
       0: aload_0
       1: dconst_1
       2: aload_1
       3: invokevirtual #6                  // Method org/jpmml/evaluator/Value.doubleValue:()D
       6: dsub
       7: putfield      #3                  // Field value:D
      10: aload_0
      11: areturn

  public org.jpmml.evaluator.DoubleValue square();
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: aload_0
       6: getfield      #3                  // Field value:D
       9: dmul
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue power(java.lang.Number);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: invokestatic  #12                 // Method java/lang/Math.pow:(DD)D
      12: putfield      #3                  // Field value:D
      15: aload_0
      16: areturn

  public org.jpmml.evaluator.DoubleValue reciprocal();
    Code:
       0: aload_0
       1: dconst_1
       2: aload_0
       3: getfield      #3                  // Field value:D
       6: ddiv
       7: putfield      #3                  // Field value:D
      10: aload_0
      11: areturn

  public org.jpmml.evaluator.DoubleValue elliott();
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field value:D
       5: dconst_1
       6: aload_0
       7: getfield      #3                  // Field value:D
      10: invokestatic  #13                 // Method java/lang/Math.abs:(D)D
      13: dadd
      14: ddiv
      15: putfield      #3                  // Field value:D
      18: aload_0
      19: areturn

  public org.jpmml.evaluator.DoubleValue exp();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue ln();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #15                 // Method java/lang/Math.log:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue gauss();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: aload_0
       6: getfield      #3                  // Field value:D
       9: dmul
      10: dneg
      11: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      14: putfield      #3                  // Field value:D
      17: aload_0
      18: areturn

  public org.jpmml.evaluator.DoubleValue inverseLogit();
    Code:
       0: aload_0
       1: dconst_1
       2: dconst_1
       3: aload_0
       4: getfield      #3                  // Field value:D
       7: dneg
       8: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      11: dadd
      12: ddiv
      13: putfield      #3                  // Field value:D
      16: aload_0
      17: areturn

  public org.jpmml.evaluator.DoubleValue inverseCloglog();
    Code:
       0: aload_0
       1: dconst_1
       2: aload_0
       3: getfield      #3                  // Field value:D
       6: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
       9: dneg
      10: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      13: dsub
      14: putfield      #3                  // Field value:D
      17: aload_0
      18: areturn

  public org.jpmml.evaluator.DoubleValue inverseLoglog();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: dneg
       6: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
       9: dneg
      10: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      13: putfield      #3                  // Field value:D
      16: aload_0
      17: areturn

  public org.jpmml.evaluator.DoubleValue inverseLogc();
    Code:
       0: aload_0
       1: dconst_1
       2: aload_0
       3: getfield      #3                  // Field value:D
       6: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
       9: dsub
      10: putfield      #3                  // Field value:D
      13: aload_0
      14: areturn

  public org.jpmml.evaluator.DoubleValue inverseNegbin(java.lang.Number);
    Code:
       0: aload_0
       1: dconst_1
       2: aload_1
       3: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       6: aload_0
       7: getfield      #3                  // Field value:D
      10: dneg
      11: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      14: dconst_1
      15: dsub
      16: dmul
      17: ddiv
      18: putfield      #3                  // Field value:D
      21: aload_0
      22: areturn

  public org.jpmml.evaluator.DoubleValue inverseOddspower(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       5: invokespecial #16                 // Method inverseOddspowerInternal:(D)Lorg/jpmml/evaluator/DoubleValue;
       8: areturn

  private org.jpmml.evaluator.DoubleValue inverseOddspowerInternal(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          12
       6: dload_1
       7: dconst_0
       8: dcmpl
       9: ifle          38
      12: aload_0
      13: dconst_1
      14: dconst_1
      15: dconst_1
      16: dload_1
      17: aload_0
      18: getfield      #3                  // Field value:D
      21: dmul
      22: dadd
      23: dconst_1
      24: dload_1
      25: ddiv
      26: dneg
      27: invokestatic  #12                 // Method java/lang/Math.pow:(DD)D
      30: dadd
      31: ddiv
      32: putfield      #3                  // Field value:D
      35: goto          54
      38: aload_0
      39: dconst_1
      40: dconst_1
      41: aload_0
      42: getfield      #3                  // Field value:D
      45: dneg
      46: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      49: dadd
      50: ddiv
      51: putfield      #3                  // Field value:D
      54: aload_0
      55: areturn

  public org.jpmml.evaluator.DoubleValue inversePower(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       5: invokespecial #17                 // Method inversePowerInternal:(D)Lorg/jpmml/evaluator/DoubleValue;
       8: areturn

  private org.jpmml.evaluator.DoubleValue inversePowerInternal(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpg
       3: iflt          12
       6: dload_1
       7: dconst_0
       8: dcmpl
       9: ifle          29
      12: aload_0
      13: aload_0
      14: getfield      #3                  // Field value:D
      17: dconst_1
      18: dload_1
      19: ddiv
      20: invokestatic  #12                 // Method java/lang/Math.pow:(DD)D
      23: putfield      #3                  // Field value:D
      26: goto          40
      29: aload_0
      30: aload_0
      31: getfield      #3                  // Field value:D
      34: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      37: putfield      #3                  // Field value:D
      40: aload_0
      41: areturn

  public org.jpmml.evaluator.DoubleValue inverseCauchit();
    Code:
       0: aload_0
       1: ldc2_w        #18                 // double 0.5d
       4: ldc2_w        #20                 // double 0.3183098861837907d
       7: aload_0
       8: getfield      #3                  // Field value:D
      11: invokestatic  #22                 // Method java/lang/Math.atan:(D)D
      14: dmul
      15: dadd
      16: putfield      #3                  // Field value:D
      19: aload_0
      20: areturn

  public org.jpmml.evaluator.DoubleValue inverseProbit();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #23                 // Method org/jpmml/evaluator/NormalDistributionUtil.cumulativeProbability:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue sin();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #24                 // Method java/lang/Math.sin:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue cos();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #25                 // Method java/lang/Math.cos:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue arctan();
    Code:
       0: aload_0
       1: ldc2_w        #26                 // double 2.0d
       4: aload_0
       5: getfield      #3                  // Field value:D
       8: invokestatic  #22                 // Method java/lang/Math.atan:(D)D
      11: dmul
      12: ldc2_w        #28                 // double 3.141592653589793d
      15: ddiv
      16: putfield      #3                  // Field value:D
      19: aload_0
      20: areturn

  public org.jpmml.evaluator.DoubleValue tanh();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #30                 // Method java/lang/Math.tanh:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue threshold(java.lang.Number);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: dcmpl
      10: ifle          17
      13: dconst_1
      14: goto          18
      17: dconst_0
      18: putfield      #3                  // Field value:D
      21: aload_0
      22: areturn

  public org.jpmml.evaluator.DoubleValue relu();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: dconst_0
       6: invokestatic  #31                 // Method java/lang/Math.max:(DD)D
       9: putfield      #3                  // Field value:D
      12: aload_0
      13: areturn

  public org.jpmml.evaluator.DoubleValue abs();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #13                 // Method java/lang/Math.abs:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue gaussSim(java.lang.Number);
    Code:
       0: aload_0
       1: ldc2_w        #26                 // double 2.0d
       4: invokestatic  #15                 // Method java/lang/Math.log:(D)D
       7: dneg
       8: aload_0
       9: getfield      #3                  // Field value:D
      12: dmul
      13: aload_0
      14: getfield      #3                  // Field value:D
      17: dmul
      18: aload_1
      19: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      22: aload_1
      23: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      26: dmul
      27: ddiv
      28: invokestatic  #14                 // Method java/lang/Math.exp:(D)D
      31: putfield      #3                  // Field value:D
      34: aload_0
      35: areturn

  public org.jpmml.evaluator.DoubleValue restrict(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: aload_1
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: invokestatic  #31                 // Method java/lang/Math.max:(DD)D
      12: putfield      #3                  // Field value:D
      15: aload_0
      16: aload_0
      17: getfield      #3                  // Field value:D
      20: aload_2
      21: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      24: invokestatic  #32                 // Method java/lang/Math.min:(DD)D
      27: putfield      #3                  // Field value:D
      30: aload_0
      31: areturn

  public org.jpmml.evaluator.DoubleValue round();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #33                 // Method java/lang/Math.round:(D)J
       8: l2d
       9: putfield      #3                  // Field value:D
      12: aload_0
      13: areturn

  public org.jpmml.evaluator.DoubleValue ceiling();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #34                 // Method java/lang/Math.ceil:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue floor();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: invokestatic  #35                 // Method java/lang/Math.floor:(D)D
       8: putfield      #3                  // Field value:D
      11: aload_0
      12: areturn

  public org.jpmml.evaluator.DoubleValue normalize(java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       5: aload_2
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: aload_3
      10: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      13: aload         4
      15: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      18: invokespecial #36                 // Method normalizeInternal:(DDDD)Lorg/jpmml/evaluator/DoubleValue;
      21: areturn

  private org.jpmml.evaluator.DoubleValue normalizeInternal(double, double, double, double);
    Code:
       0: aload_0
       1: dload_3
       2: aload_0
       3: getfield      #3                  // Field value:D
       6: dload_1
       7: dsub
       8: dload         5
      10: dload_1
      11: dsub
      12: ddiv
      13: dload         7
      15: dload_3
      16: dsub
      17: dmul
      18: dadd
      19: putfield      #3                  // Field value:D
      22: aload_0
      23: areturn

  public org.jpmml.evaluator.DoubleValue denormalize(java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       5: aload_2
       6: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       9: aload_3
      10: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      13: aload         4
      15: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
      18: invokespecial #37                 // Method denormalizeInternal:(DDDD)Lorg/jpmml/evaluator/DoubleValue;
      21: areturn

  private org.jpmml.evaluator.DoubleValue denormalizeInternal(double, double, double, double);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #3                  // Field value:D
       5: dload_3
       6: dsub
       7: dload         7
       9: dload_3
      10: dsub
      11: ddiv
      12: dload         5
      14: dload_1
      15: dsub
      16: dmul
      17: dload_1
      18: dadd
      19: putfield      #3                  // Field value:D
      22: aload_0
      23: areturn

  public boolean isZero();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: dconst_0
       5: dcmpl
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isOne();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: dconst_1
       5: dcmpl
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean equals(java.lang.Number);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: aload_1
       5: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       8: dcmpl
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public int compareTo(java.lang.Number);
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: aload_1
       5: invokevirtual #4                  // Method java/lang/Number.doubleValue:()D
       8: invokestatic  #7                  // Method java/lang/Double.compare:(DD)I
      11: ireturn

  public float floatValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: d2f
       5: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: dreturn

  public java.lang.Double getValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field value:D
       4: invokestatic  #38                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
       7: areturn

  public java.lang.Number getValue();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getValue:()Ljava/lang/Double;
       4: areturn

  public org.jpmml.evaluator.Value denormalize(java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #40                 // Method denormalize:(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       9: areturn

  public org.jpmml.evaluator.Value normalize(java.lang.Number, java.lang.Number, java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #41                 // Method normalize:(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       9: areturn

  public org.jpmml.evaluator.Value floor();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method floor:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value ceiling();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method ceiling:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value round();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method round:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value restrict(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #45                 // Method restrict:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       6: areturn

  public org.jpmml.evaluator.Value gaussSim(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method gaussSim:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value abs();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method abs:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value relu();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method relu:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value threshold(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method threshold:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value tanh();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method tanh:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value arctan();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method arctan:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value cos();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method cos:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value sin();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method sin:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value inverseProbit();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method inverseProbit:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value inverseCauchit();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method inverseCauchit:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value inversePower(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method inversePower:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value inverseOddspower(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method inverseOddspower:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value inverseNegbin(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method inverseNegbin:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value inverseLogc();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method inverseLogc:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value inverseLoglog();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method inverseLoglog:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value inverseCloglog();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method inverseCloglog:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value inverseLogit();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method inverseLogit:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value gauss();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method gauss:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value ln();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method ln:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value exp();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method exp:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value elliott();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method elliott:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value reciprocal();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method reciprocal:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value power(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method power:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value square();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method square:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public org.jpmml.evaluator.Value residual(org.jpmml.evaluator.Value);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #70                 // Method residual:(Lorg/jpmml/evaluator/Value;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value divide(org.jpmml.evaluator.Value);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #71                 // Method divide:(Lorg/jpmml/evaluator/Value;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value divide(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #72                 // Method divide:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value multiply(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #73                 // Method multiply:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       6: areturn

  public org.jpmml.evaluator.Value multiply(org.jpmml.evaluator.Value);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method multiply:(Lorg/jpmml/evaluator/Value;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value multiply(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #75                 // Method multiply:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value subtract(org.jpmml.evaluator.Value);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #76                 // Method subtract:(Lorg/jpmml/evaluator/Value;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value subtract(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #77                 // Method subtract:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value add(java.lang.Number, java.lang.Number, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokevirtual #78                 // Method add:(Ljava/lang/Number;Ljava/lang/Number;I)Lorg/jpmml/evaluator/DoubleValue;
       7: areturn

  public org.jpmml.evaluator.Value add(java.lang.Number, java.lang.Number[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #79                 // Method add:(Ljava/lang/Number;[Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       6: areturn

  public org.jpmml.evaluator.Value add(java.lang.Number, java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #80                 // Method add:(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       7: areturn

  public org.jpmml.evaluator.Value add(java.lang.Number, java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #81                 // Method add:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       6: areturn

  public org.jpmml.evaluator.Value add(org.jpmml.evaluator.Value);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #82                 // Method add:(Lorg/jpmml/evaluator/Value;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value add(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #83                 // Method add:(Ljava/lang/Number;)Lorg/jpmml/evaluator/DoubleValue;
       5: areturn

  public org.jpmml.evaluator.Value copy();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method copy:()Lorg/jpmml/evaluator/DoubleValue;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #85                 // class org/jpmml/evaluator/Value
       5: invokevirtual #86                 // Method compareTo:(Lorg/jpmml/evaluator/Value;)I
       8: ireturn
}
