Compiled from "RichDataField.java"
public class org.jpmml.evaluator.RichDataField extends org.dmg.pmml.DataField implements org.jpmml.evaluator.ValueStatusHolder {
  private java.util.Map<?, java.lang.Integer> valueMap;

  private boolean hasValidValues;

  public org.jpmml.evaluator.RichDataField();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/dmg/pmml/DataField."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field valueMap:Ljava/util/Map;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field hasValidValues:Z
      14: return

  public org.jpmml.evaluator.RichDataField(org.dmg.pmml.DataField);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/dmg/pmml/DataField."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field valueMap:Ljava/util/Map;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field hasValidValues:Z
      14: aload_1
      15: aload_0
      16: invokestatic  #4                  // Method org/jpmml/model/ReflectionUtil.copyState:(Lorg/dmg/pmml/PMMLObject;Lorg/dmg/pmml/PMMLObject;)V
      19: return

  public org.dmg.pmml.DataType getDataType();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/dmg/pmml/DataField.getDataType:()Lorg/dmg/pmml/DataType;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: new           #6                  // class org/jpmml/evaluator/MissingAttributeException
      12: dup
      13: aload_0
      14: getstatic     #7                  // Field org/dmg/pmml/PMMLAttributes.DATAFIELD_DATATYPE:Ljava/lang/reflect/Field;
      17: invokespecial #8                  // Method org/jpmml/evaluator/MissingAttributeException."<init>":(Lorg/dmg/pmml/PMMLObject;Ljava/lang/reflect/Field;)V
      20: athrow
      21: aload_1
      22: areturn

  public java.util.Map<?, java.lang.Integer> getMap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueMap:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: invokespecial #9                  // Method parseValues:()Ljava/util/Map;
      12: invokestatic  #10                 // Method com/google/common/collect/ImmutableMap.copyOf:(Ljava/util/Map;)Lcom/google/common/collect/ImmutableMap;
      15: putfield      #2                  // Field valueMap:Ljava/util/Map;
      18: aload_0
      19: getfield      #2                  // Field valueMap:Ljava/util/Map;
      22: areturn

  public boolean hasValidValues();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hasValidValues:Z
       4: ireturn

  private java.util.Map<java.lang.Object, java.lang.Integer> parseValues();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getDataType:()Lorg/dmg/pmml/DataType;
       4: astore_1
       5: new           #12                 // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #13                 // Method java/util/LinkedHashMap."<init>":()V
      12: astore_2
      13: iconst_0
      14: istore_3
      15: aload_0
      16: invokevirtual #14                 // Method getValues:()Ljava/util/List;
      19: astore        4
      21: aload         4
      23: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore        5
      30: aload         5
      32: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          224
      40: aload         5
      42: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #18                 // class org/dmg/pmml/Value
      50: astore        6
      52: aload         6
      54: invokevirtual #19                 // Method org/dmg/pmml/Value.getValue:()Ljava/lang/Object;
      57: astore        7
      59: aload         7
      61: ifnonnull     77
      64: new           #6                  // class org/jpmml/evaluator/MissingAttributeException
      67: dup
      68: aload         6
      70: getstatic     #20                 // Field org/dmg/pmml/PMMLAttributes.VALUE_VALUE:Ljava/lang/reflect/Field;
      73: invokespecial #8                  // Method org/jpmml/evaluator/MissingAttributeException."<init>":(Lorg/dmg/pmml/PMMLObject;Ljava/lang/reflect/Field;)V
      76: athrow
      77: aload         6
      79: invokevirtual #21                 // Method org/dmg/pmml/Value.getProperty:()Lorg/dmg/pmml/Value$Property;
      82: astore        8
      84: getstatic     #22                 // Field org/jpmml/evaluator/RichDataField$1.$SwitchMap$org$dmg$pmml$Value$Property:[I
      87: aload         8
      89: invokevirtual #23                 // Method org/dmg/pmml/Value$Property.ordinal:()I
      92: iaload
      93: tableswitch   { // 1 to 3
                     1: 120
                     2: 147
                     3: 178
               default: 209
          }
     120: iinc          3, 1
     123: aload_1
     124: aload         7
     126: invokestatic  #24                 // Method org/jpmml/evaluator/TypeUtil.parseOrCast:(Lorg/dmg/pmml/DataType;Ljava/lang/Object;)Ljava/lang/Object;
     129: astore        9
     131: aload_2
     132: aload         9
     134: iload_3
     135: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     138: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: goto          221
     147: aload_1
     148: aload         7
     150: invokestatic  #24                 // Method org/jpmml/evaluator/TypeUtil.parseOrCast:(Lorg/dmg/pmml/DataType;Ljava/lang/Object;)Ljava/lang/Object;
     153: astore        9
     155: goto          163
     158: astore        10
     160: goto          30
     163: aload_2
     164: aload         9
     166: getstatic     #29                 // Field org/jpmml/evaluator/FieldValue.STATUS_UNKNOWN_INVALID:Ljava/lang/Integer;
     169: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     174: pop
     175: goto          221
     178: aload_1
     179: aload         7
     181: invokestatic  #24                 // Method org/jpmml/evaluator/TypeUtil.parseOrCast:(Lorg/dmg/pmml/DataType;Ljava/lang/Object;)Ljava/lang/Object;
     184: astore        9
     186: goto          194
     189: astore        10
     191: goto          30
     194: aload_2
     195: aload         9
     197: getstatic     #30                 // Field org/jpmml/evaluator/FieldValue.STATUS_MISSING:Ljava/lang/Integer;
     200: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     205: pop
     206: goto          221
     209: new           #31                 // class org/jpmml/evaluator/UnsupportedAttributeException
     212: dup
     213: aload         6
     215: aload         8
     217: invokespecial #32                 // Method org/jpmml/evaluator/UnsupportedAttributeException."<init>":(Lorg/dmg/pmml/PMMLObject;Ljava/lang/Enum;)V
     220: athrow
     221: goto          30
     224: aload_0
     225: iload_3
     226: ifle          233
     229: iconst_1
     230: goto          234
     233: iconst_0
     234: putfield      #3                  // Field hasValidValues:Z
     237: aload_2
     238: areturn
    Exception table:
       from    to  target type
         147   155   158   Class java/lang/IllegalArgumentException
         147   155   158   Class org/jpmml/evaluator/TypeCheckException
         178   186   189   Class java/lang/IllegalArgumentException
         178   186   189   Class org/jpmml/evaluator/TypeCheckException
}
