Compiled from "RestClientFactory.java"
public class se.fortnox.reactivewizard.client.RestClientFactory implements se.fortnox.reactivewizard.binding.AutoBindModule {
  private static final org.slf4j.Logger LOG;

  private final se.fortnox.reactivewizard.binding.scanners.JaxRsClassScanner jaxRsClassScanner;

  private final se.fortnox.reactivewizard.binding.scanners.HttpConfigClassScanner httpConfigClassScanner;

  public se.fortnox.reactivewizard.client.RestClientFactory(se.fortnox.reactivewizard.binding.scanners.JaxRsClassScanner, se.fortnox.reactivewizard.binding.scanners.HttpConfigClassScanner);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field jaxRsClassScanner:Lse/fortnox/reactivewizard/binding/scanners/JaxRsClassScanner;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field httpConfigClassScanner:Lse/fortnox/reactivewizard/binding/scanners/HttpConfigClassScanner;
      14: return

  private <T> com.google.inject.Provider<T> provider(java.lang.Class<T>, com.google.inject.Provider<se.fortnox.reactivewizard.client.HttpClientProvider>, com.google.inject.Provider<? extends se.fortnox.reactivewizard.client.HttpClientConfig>);
    Code:
       0: aload_3
       1: aload_2
       2: aload_1
       3: invokedynamic #4,  0              // InvokeDynamic #0:get:(Lcom/google/inject/Provider;Lcom/google/inject/Provider;Ljava/lang/Class;)Lcom/google/inject/Provider;
       8: areturn

  public void configure(com.google.inject.Binder);
    Code:
       0: aload_1
       1: ldc           #5                  // class se/fortnox/reactivewizard/client/PreRequestHook
       3: invokestatic  #6                  // Method com/google/inject/multibindings/Multibinder.newSetBinder:(Lcom/google/inject/Binder;Ljava/lang/Class;)Lcom/google/inject/multibindings/Multibinder;
       6: pop
       7: aload_1
       8: ldc           #7                  // class se/fortnox/reactivewizard/client/RequestParameterSerializer
      10: invokestatic  #6                  // Method com/google/inject/multibindings/Multibinder.newSetBinder:(Lcom/google/inject/Binder;Ljava/lang/Class;)Lcom/google/inject/multibindings/Multibinder;
      13: pop
      14: aload_1
      15: ldc           #8                  // class se/fortnox/reactivewizard/client/HttpClientProvider
      17: invokeinterface #9,  2            // InterfaceMethod com/google/inject/Binder.getProvider:(Ljava/lang/Class;)Lcom/google/inject/Provider;
      22: astore_2
      23: new           #10                 // class java/util/HashMap
      26: dup
      27: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      30: astore_3
      31: aload_0
      32: getfield      #3                  // Field httpConfigClassScanner:Lse/fortnox/reactivewizard/binding/scanners/HttpConfigClassScanner;
      35: invokevirtual #12                 // Method se/fortnox/reactivewizard/binding/scanners/HttpConfigClassScanner.getClasses:()Ljava/util/Set;
      38: aload_3
      39: invokedynamic #13,  0             // InvokeDynamic #1:accept:(Ljava/util/Map;)Ljava/util/function/Consumer;
      44: invokeinterface #14,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      49: aload_0
      50: getfield      #2                  // Field jaxRsClassScanner:Lse/fortnox/reactivewizard/binding/scanners/JaxRsClassScanner;
      53: invokevirtual #15                 // Method se/fortnox/reactivewizard/binding/scanners/JaxRsClassScanner.getClasses:()Ljava/util/Set;
      56: aload_0
      57: aload_3
      58: aload_1
      59: aload_2
      60: invokedynamic #16,  0             // InvokeDynamic #2:accept:(Lse/fortnox/reactivewizard/client/RestClientFactory;Ljava/util/Map;Lcom/google/inject/Binder;Lcom/google/inject/Provider;)Ljava/util/function/Consumer;
      65: invokeinterface #14,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      70: return

  public java.lang.Integer getPrio();
    Code:
       0: iconst_0
       1: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private void lambda$configure$2(java.util.Map, com.google.inject.Binder, com.google.inject.Provider, java.lang.Class);
    Code:
       0: aload_1
       1: aload         4
       3: ldc           #18                 // class se/fortnox/reactivewizard/client/HttpClientConfig
       5: invokeinterface #19,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class java/lang/Class
      13: astore        5
      15: aload_2
      16: aload         5
      18: invokeinterface #9,  2            // InterfaceMethod com/google/inject/Binder.getProvider:(Ljava/lang/Class;)Lcom/google/inject/Provider;
      23: astore        6
      25: aload_0
      26: aload         4
      28: aload_3
      29: aload         6
      31: invokespecial #21                 // Method provider:(Ljava/lang/Class;Lcom/google/inject/Provider;Lcom/google/inject/Provider;)Lcom/google/inject/Provider;
      34: astore        7
      36: aload_2
      37: aload         4
      39: invokeinterface #22,  2           // InterfaceMethod com/google/inject/Binder.bind:(Ljava/lang/Class;)Lcom/google/inject/binder/AnnotatedBindingBuilder;
      44: aload         7
      46: invokeinterface #23,  2           // InterfaceMethod com/google/inject/binder/AnnotatedBindingBuilder.toProvider:(Lcom/google/inject/Provider;)Lcom/google/inject/binder/ScopedBindingBuilder;
      51: getstatic     #24                 // Field com/google/inject/Scopes.SINGLETON:Lcom/google/inject/Scope;
      54: invokeinterface #25,  2           // InterfaceMethod com/google/inject/binder/ScopedBindingBuilder.in:(Lcom/google/inject/Scope;)V
      59: return

  private static void lambda$configure$1(java.util.Map, java.lang.Class);
    Code:
       0: aload_1
       1: ldc           #26                 // class se/fortnox/reactivewizard/client/UseInResource
       3: invokevirtual #27                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          88
       9: aload_1
      10: ldc           #26                 // class se/fortnox/reactivewizard/client/UseInResource
      12: invokevirtual #28                 // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      15: checkcast     #26                 // class se/fortnox/reactivewizard/client/UseInResource
      18: invokeinterface #29,  1           // InterfaceMethod se/fortnox/reactivewizard/client/UseInResource.value:()[Ljava/lang/Class;
      23: astore_2
      24: aload_2
      25: arraylength
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iload         4
      32: iload_3
      33: if_icmpge     88
      36: aload_2
      37: iload         4
      39: aaload
      40: astore        5
      42: aload         5
      44: invokevirtual #30                 // Method java/lang/Class.isInterface:()Z
      47: ifne          72
      50: new           #31                 // class java/lang/IllegalArgumentException
      53: dup
      54: ldc           #32                 // String %s pointed out in UseInResource annotation must be an interface
      56: iconst_1
      57: anewarray     #33                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload         5
      64: aastore
      65: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      68: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: aload         5
      75: aload_1
      76: invokeinterface #36,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: iinc          4, 1
      85: goto          30
      88: return

  private static java.lang.Object lambda$provider$0(com.google.inject.Provider, com.google.inject.Provider, java.lang.Class);
    Code:
       0: aload_0
       1: invokeinterface #37,  1           // InterfaceMethod com/google/inject/Provider.get:()Ljava/lang/Object;
       6: checkcast     #18                 // class se/fortnox/reactivewizard/client/HttpClientConfig
       9: astore_3
      10: aload_1
      11: invokeinterface #37,  1           // InterfaceMethod com/google/inject/Provider.get:()Ljava/lang/Object;
      16: checkcast     #8                  // class se/fortnox/reactivewizard/client/HttpClientProvider
      19: aload_3
      20: invokevirtual #38                 // Method se/fortnox/reactivewizard/client/HttpClientProvider.createClient:(Lse/fortnox/reactivewizard/client/HttpClientConfig;)Lse/fortnox/reactivewizard/client/HttpClient;
      23: aload_2
      24: invokevirtual #39                 // Method se/fortnox/reactivewizard/client/HttpClient.create:(Ljava/lang/Class;)Ljava/lang/Object;
      27: astore        4
      29: getstatic     #40                 // Field LOG:Lorg/slf4j/Logger;
      32: ldc           #41                 // String Created {} for {} with custom httpClient: {}
      34: iconst_3
      35: anewarray     #33                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload         4
      42: invokestatic  #42                 // Method java/lang/reflect/Proxy.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;
      45: aastore
      46: dup
      47: iconst_1
      48: aload_2
      49: invokevirtual #43                 // Method java/lang/Class.getName:()Ljava/lang/String;
      52: aastore
      53: dup
      54: iconst_2
      55: aload_3
      56: aastore
      57: invokeinterface #44,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      62: aload         4
      64: areturn

  static {};
    Code:
       0: ldc           #45                 // class se/fortnox/reactivewizard/client/RestClientFactory
       2: invokestatic  #46                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #40                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
