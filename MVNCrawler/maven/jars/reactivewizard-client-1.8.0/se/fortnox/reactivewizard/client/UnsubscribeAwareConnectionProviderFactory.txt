Compiled from "UnsubscribeAwareConnectionProviderFactory.java"
public class se.fortnox.reactivewizard.client.UnsubscribeAwareConnectionProviderFactory implements io.reactivex.netty.client.ConnectionProviderFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> {
  private final io.reactivex.netty.client.ConnectionProviderFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> wrapped;

  private final io.reactivex.netty.client.pool.PoolConfig<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> poolConfig;

  public se.fortnox.reactivewizard.client.UnsubscribeAwareConnectionProviderFactory(io.reactivex.netty.client.ConnectionProviderFactory<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>, io.reactivex.netty.client.pool.PoolConfig<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field wrapped:Lio/reactivex/netty/client/ConnectionProviderFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field poolConfig:Lio/reactivex/netty/client/pool/PoolConfig;
      14: return

  public io.reactivex.netty.client.ConnectionProvider<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf> newProvider(rx.Observable<io.reactivex.netty.client.HostConnector<io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf>>);
    Code:
       0: new           #4                  // class se/fortnox/reactivewizard/client/UnsubscribeAwareConnectionProviderFactory$UnsubscribeAwareConnectionProvider
       3: dup
       4: aload_0
       5: getfield      #2                  // Field wrapped:Lio/reactivex/netty/client/ConnectionProviderFactory;
       8: aload_1
       9: invokeinterface #5,  2            // InterfaceMethod io/reactivex/netty/client/ConnectionProviderFactory.newProvider:(Lrx/Observable;)Lio/reactivex/netty/client/ConnectionProvider;
      14: aload_0
      15: getfield      #3                  // Field poolConfig:Lio/reactivex/netty/client/pool/PoolConfig;
      18: invokevirtual #6                  // Method io/reactivex/netty/client/pool/PoolConfig.getPoolLimitDeterminationStrategy:()Lio/reactivex/netty/client/pool/PoolLimitDeterminationStrategy;
      21: invokespecial #7                  // Method se/fortnox/reactivewizard/client/UnsubscribeAwareConnectionProviderFactory$UnsubscribeAwareConnectionProvider."<init>":(Lio/reactivex/netty/client/ConnectionProvider;Lio/reactivex/netty/client/pool/PoolLimitDeterminationStrategy;)V
      24: areturn
}
