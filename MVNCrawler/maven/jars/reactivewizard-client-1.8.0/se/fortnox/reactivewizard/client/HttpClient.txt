Compiled from "HttpClient.java"
public class se.fortnox.reactivewizard.client.HttpClient implements java.lang.reflect.InvocationHandler {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.Class BYTEARRAY_TYPE;

  protected final java.net.InetSocketAddress serverInfo;

  protected final se.fortnox.reactivewizard.client.HttpClientConfig config;

  private final se.fortnox.reactivewizard.jaxrs.ByteBufCollector collector;

  private final se.fortnox.reactivewizard.client.RequestParameterSerializers requestParameterSerializers;

  private final java.util.Set<se.fortnox.reactivewizard.client.PreRequestHook> preRequestHooks;

  private se.fortnox.reactivewizard.client.RxClientProvider clientProvider;

  private com.fasterxml.jackson.databind.ObjectMapper objectMapper;

  private int timeout;

  private java.util.concurrent.TimeUnit timeoutUnit;

  private final java.util.Map<java.lang.Class<?>, java.util.List<se.fortnox.reactivewizard.client.HttpClient$BeanParamProperty>> beanParamCache;

  public se.fortnox.reactivewizard.client.HttpClient(se.fortnox.reactivewizard.client.HttpClientConfig, se.fortnox.reactivewizard.client.RxClientProvider, com.fasterxml.jackson.databind.ObjectMapper, se.fortnox.reactivewizard.client.RequestParameterSerializers, java.util.Set<se.fortnox.reactivewizard.client.PreRequestHook>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        10
       7: putfield      #3                  // Field timeout:I
      10: aload_0
      11: getstatic     #4                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      14: putfield      #5                  // Field timeoutUnit:Ljava/util/concurrent/TimeUnit;
      17: aload_0
      18: new           #6                  // class java/util/HashMap
      21: dup
      22: invokespecial #7                  // Method java/util/HashMap."<init>":()V
      25: putfield      #8                  // Field beanParamCache:Ljava/util/Map;
      28: aload_0
      29: aload_1
      30: putfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      33: aload_0
      34: aload_2
      35: putfield      #10                 // Field clientProvider:Lse/fortnox/reactivewizard/client/RxClientProvider;
      38: aload_0
      39: aload_3
      40: putfield      #11                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      43: aload_0
      44: aload         4
      46: putfield      #12                 // Field requestParameterSerializers:Lse/fortnox/reactivewizard/client/RequestParameterSerializers;
      49: aload_0
      50: new           #13                 // class java/net/InetSocketAddress
      53: dup
      54: aload_1
      55: invokevirtual #14                 // Method se/fortnox/reactivewizard/client/HttpClientConfig.getHost:()Ljava/lang/String;
      58: aload_1
      59: invokevirtual #15                 // Method se/fortnox/reactivewizard/client/HttpClientConfig.getPort:()I
      62: invokespecial #16                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      65: putfield      #17                 // Field serverInfo:Ljava/net/InetSocketAddress;
      68: aload_0
      69: new           #18                 // class se/fortnox/reactivewizard/jaxrs/ByteBufCollector
      72: dup
      73: aload_1
      74: invokevirtual #19                 // Method se/fortnox/reactivewizard/client/HttpClientConfig.getMaxResponseSize:()I
      77: invokespecial #20                 // Method se/fortnox/reactivewizard/jaxrs/ByteBufCollector."<init>":(I)V
      80: putfield      #21                 // Field collector:Lse/fortnox/reactivewizard/jaxrs/ByteBufCollector;
      83: aload_0
      84: aload         5
      86: putfield      #22                 // Field preRequestHooks:Ljava/util/Set;
      89: return

  public se.fortnox.reactivewizard.client.HttpClient(se.fortnox.reactivewizard.client.HttpClientConfig);
    Code:
       0: aload_0
       1: aload_1
       2: new           #23                 // class se/fortnox/reactivewizard/client/RxClientProvider
       5: dup
       6: aload_1
       7: new           #24                 // class se/fortnox/reactivewizard/metrics/HealthRecorder
      10: dup
      11: invokespecial #25                 // Method se/fortnox/reactivewizard/metrics/HealthRecorder."<init>":()V
      14: invokespecial #26                 // Method se/fortnox/reactivewizard/client/RxClientProvider."<init>":(Lse/fortnox/reactivewizard/client/HttpClientConfig;Lse/fortnox/reactivewizard/metrics/HealthRecorder;)V
      17: new           #27                 // class com/fasterxml/jackson/databind/ObjectMapper
      20: dup
      21: invokespecial #28                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
      24: new           #29                 // class se/fortnox/reactivewizard/client/RequestParameterSerializers
      27: dup
      28: invokespecial #30                 // Method se/fortnox/reactivewizard/client/RequestParameterSerializers."<init>":()V
      31: invokestatic  #31                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      34: invokespecial #32                 // Method "<init>":(Lse/fortnox/reactivewizard/client/HttpClientConfig;Lse/fortnox/reactivewizard/client/RxClientProvider;Lcom/fasterxml/jackson/databind/ObjectMapper;Lse/fortnox/reactivewizard/client/RequestParameterSerializers;Ljava/util/Set;)V
      37: return

  public static rx.Observable<java.lang.String> get(java.lang.String);
    Code:
       0: new           #33                 // class java/net/URL
       3: dup
       4: aload_0
       5: invokespecial #34                 // Method java/net/URL."<init>":(Ljava/lang/String;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #35                 // Method java/net/URL.getHost:()Ljava/lang/String;
      13: aload_1
      14: invokevirtual #36                 // Method java/net/URL.getPort:()I
      17: invokestatic  #37                 // Method io/reactivex/netty/protocol/http/client/HttpClient.newClient:(Ljava/lang/String;I)Lio/reactivex/netty/protocol/http/client/HttpClient;
      20: aload_1
      21: invokevirtual #38                 // Method java/net/URL.getPath:()Ljava/lang/String;
      24: invokevirtual #39                 // Method io/reactivex/netty/protocol/http/client/HttpClient.createGet:(Ljava/lang/String;)Lio/reactivex/netty/protocol/http/client/HttpClientRequest;
      27: invokedynamic #40,  0             // InvokeDynamic #0:call:()Lrx/functions/Func1;
      32: invokevirtual #41                 // Method io/reactivex/netty/protocol/http/client/HttpClientRequest.flatMap:(Lrx/functions/Func1;)Lrx/Observable;
      35: invokedynamic #42,  0             // InvokeDynamic #1:call:()Lrx/functions/Func1;
      40: invokevirtual #43                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      43: areturn
      44: astore_1
      45: new           #45                 // class java/lang/RuntimeException
      48: dup
      49: aload_1
      50: invokespecial #46                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      53: athrow
    Exception table:
       from    to  target type
           0    43    44   Class java/net/MalformedURLException

  public static void setTimeout(java.lang.Object, int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #48                 // Method java/lang/reflect/Proxy.isProxyClass:(Ljava/lang/Class;)Z
       7: ifeq          31
      10: aload_0
      11: invokestatic  #49                 // Method java/lang/reflect/Proxy.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;
      14: astore_3
      15: aload_3
      16: instanceof    #50                 // class se/fortnox/reactivewizard/client/HttpClient
      19: ifeq          31
      22: aload_3
      23: checkcast     #50                 // class se/fortnox/reactivewizard/client/HttpClient
      26: iload_1
      27: aload_2
      28: invokevirtual #51                 // Method setTimeout:(ILjava/util/concurrent/TimeUnit;)V
      31: return

  public void setTimeout(int, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field timeout:I
       5: aload_0
       6: aload_2
       7: putfield      #5                  // Field timeoutUnit:Ljava/util/concurrent/TimeUnit;
      10: return

  public static <T> T create(se.fortnox.reactivewizard.client.HttpClientConfig, se.fortnox.reactivewizard.client.RxClientProvider, com.fasterxml.jackson.databind.ObjectMapper, java.lang.Class<T>);
    Code:
       0: new           #50                 // class se/fortnox/reactivewizard/client/HttpClient
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: new           #29                 // class se/fortnox/reactivewizard/client/RequestParameterSerializers
      10: dup
      11: invokespecial #30                 // Method se/fortnox/reactivewizard/client/RequestParameterSerializers."<init>":()V
      14: aconst_null
      15: invokespecial #32                 // Method "<init>":(Lse/fortnox/reactivewizard/client/HttpClientConfig;Lse/fortnox/reactivewizard/client/RxClientProvider;Lcom/fasterxml/jackson/databind/ObjectMapper;Lse/fortnox/reactivewizard/client/RequestParameterSerializers;Ljava/util/Set;)V
      18: aload_3
      19: invokevirtual #52                 // Method create:(Ljava/lang/Class;)Ljava/lang/Object;
      22: areturn

  public <T> T create(java.lang.Class<T>);
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       4: iconst_1
       5: anewarray     #54                 // class java/lang/Class
       8: dup
       9: iconst_0
      10: aload_1
      11: aastore
      12: aload_0
      13: invokestatic  #55                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      16: areturn

  public java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]);
    Code:
       0: aload_3
       1: ifnonnull     9
       4: iconst_0
       5: anewarray     #56                 // class java/lang/Object
       8: astore_3
       9: aload_0
      10: aload_2
      11: aload_3
      12: invokevirtual #57                 // Method createRequest:(Ljava/lang/reflect/Method;[Ljava/lang/Object;)Lse/fortnox/reactivewizard/client/RequestBuilder;
      15: astore        4
      17: aload_0
      18: aload         4
      20: invokespecial #58                 // Method addDevOverrides:(Lse/fortnox/reactivewizard/client/RequestBuilder;)V
      23: aload_0
      24: aload         4
      26: invokespecial #59                 // Method addAuthenticationHeaders:(Lse/fortnox/reactivewizard/client/RequestBuilder;)V
      29: aload_0
      30: getfield      #10                 // Field clientProvider:Lse/fortnox/reactivewizard/client/RxClientProvider;
      33: aload         4
      35: invokevirtual #60                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getServerInfo:()Ljava/net/InetSocketAddress;
      38: invokevirtual #61                 // Method se/fortnox/reactivewizard/client/RxClientProvider.clientFor:(Ljava/net/InetSocketAddress;)Lio/reactivex/netty/protocol/http/client/HttpClient;
      41: astore        5
      43: getstatic     #62                 // Field LOG:Lorg/slf4j/Logger;
      46: invokeinterface #63,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      51: ifeq          95
      54: getstatic     #62                 // Field LOG:Lorg/slf4j/Logger;
      57: new           #64                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      64: aload         4
      66: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #67                 // String  with headers
      71: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         4
      76: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
      79: invokeinterface #70,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      84: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokeinterface #72,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      95: aload         4
      97: aload         5
      99: invokevirtual #73                 // Method se/fortnox/reactivewizard/client/RequestBuilder.submit:(Lio/reactivex/netty/protocol/http/client/HttpClient;)Lrx/Observable;
     102: aload_0
     103: getfield      #3                  // Field timeout:I
     106: i2l
     107: aload_0
     108: getfield      #5                  // Field timeoutUnit:Ljava/util/concurrent/TimeUnit;
     111: invokevirtual #74                 // Method rx/Observable.timeout:(JLjava/util/concurrent/TimeUnit;)Lrx/Observable;
     114: invokevirtual #75                 // Method rx/Observable.single:()Lrx/Observable;
     117: astore        6
     119: aconst_null
     120: astore        7
     122: aload_0
     123: aload_2
     124: invokespecial #76                 // Method expectsRawResponse:(Ljava/lang/reflect/Method;)Z
     127: ifeq          137
     130: aload         6
     132: astore        7
     134: goto          153
     137: aload         6
     139: aload_0
     140: aload_2
     141: aload         4
     143: invokedynamic #77,  0             // InvokeDynamic #2:call:(Lse/fortnox/reactivewizard/client/HttpClient;Ljava/lang/reflect/Method;Lse/fortnox/reactivewizard/client/RequestBuilder;)Lrx/functions/Func1;
     148: invokevirtual #78                 // Method rx/Observable.flatMap:(Lrx/functions/Func1;)Lrx/Observable;
     151: astore        7
     153: aload_0
     154: aload         4
     156: aload         7
     158: invokevirtual #79                 // Method withRetry:(Lse/fortnox/reactivewizard/client/RequestBuilder;Lrx/Observable;)Lrx/Observable;
     161: aload_0
     162: aload         4
     164: invokedynamic #80,  0             // InvokeDynamic #3:call:(Lse/fortnox/reactivewizard/client/HttpClient;Lse/fortnox/reactivewizard/client/RequestBuilder;)Lrx/functions/Func1;
     169: invokevirtual #81                 // Method rx/Observable.onErrorResumeNext:(Lrx/functions/Func1;)Lrx/Observable;
     172: astore        7
     174: aload         7
     176: invokestatic  #82                 // Method se/fortnox/reactivewizard/logging/LoggingContext.transfer:(Lrx/Observable;)Lrx/Observable;
     179: astore        7
     181: aload_0
     182: aload         4
     184: aload         7
     186: invokevirtual #83                 // Method measure:(Lse/fortnox/reactivewizard/client/RequestBuilder;Lrx/Observable;)Lrx/Observable;
     189: astore        7
     191: ldc           #84                 // class rx/Single
     193: aload_2
     194: invokevirtual #85                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
     197: invokevirtual #86                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     200: ifeq          209
     203: aload         7
     205: invokevirtual #87                 // Method rx/Observable.toSingle:()Lrx/Single;
     208: areturn
     209: aload         7
     211: areturn

  private <T> rx.Observable<T> convertError(se.fortnox.reactivewizard.client.RequestBuilder, java.lang.Throwable);
    Code:
       0: ldc           #88                 // String %s, headers: %s
       2: iconst_2
       3: anewarray     #56                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: invokevirtual #89                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getFullUrl:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: aload_1
      16: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
      19: invokeinterface #70,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: aastore
      25: invokestatic  #90                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: astore_3
      29: getstatic     #62                 // Field LOG:Lorg/slf4j/Logger;
      32: ldc           #91                 // String Failed request. Url: {}
      34: aload_3
      35: aload_2
      36: invokeinterface #92,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      41: aload_2
      42: instanceof    #93                 // class java/util/concurrent/TimeoutException
      45: ifne          55
      48: aload_2
      49: instanceof    #94                 // class io/netty/handler/timeout/ReadTimeoutException
      52: ifeq          112
      55: ldc           #95                 // String Timeout after %d ms calling %s
      57: iconst_2
      58: anewarray     #56                 // class java/lang/Object
      61: dup
      62: iconst_0
      63: aload_0
      64: getfield      #5                  // Field timeoutUnit:Ljava/util/concurrent/TimeUnit;
      67: aload_0
      68: getfield      #3                  // Field timeout:I
      71: i2l
      72: invokevirtual #96                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      75: invokestatic  #97                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      78: aastore
      79: dup
      80: iconst_1
      81: aload_3
      82: aastore
      83: invokestatic  #90                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      86: astore        4
      88: new           #98                 // class se/fortnox/reactivewizard/jaxrs/WebException
      91: dup
      92: getstatic     #99                 // Field io/netty/handler/codec/http/HttpResponseStatus.GATEWAY_TIMEOUT:Lio/netty/handler/codec/http/HttpResponseStatus;
      95: new           #100                // class se/fortnox/reactivewizard/util/JustMessageException
      98: dup
      99: aload         4
     101: invokespecial #101                // Method se/fortnox/reactivewizard/util/JustMessageException."<init>":(Ljava/lang/String;)V
     104: iconst_0
     105: invokespecial #102                // Method se/fortnox/reactivewizard/jaxrs/WebException."<init>":(Lio/netty/handler/codec/http/HttpResponseStatus;Ljava/lang/Throwable;Z)V
     108: invokestatic  #103                // Method rx/Observable.error:(Ljava/lang/Throwable;)Lrx/Observable;
     111: areturn
     112: aload_2
     113: instanceof    #98                 // class se/fortnox/reactivewizard/jaxrs/WebException
     116: ifne          159
     119: ldc           #104                // String Error calling %s
     121: iconst_1
     122: anewarray     #56                 // class java/lang/Object
     125: dup
     126: iconst_0
     127: aload_3
     128: aastore
     129: invokestatic  #90                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     132: astore        4
     134: new           #98                 // class se/fortnox/reactivewizard/jaxrs/WebException
     137: dup
     138: getstatic     #105                // Field io/netty/handler/codec/http/HttpResponseStatus.INTERNAL_SERVER_ERROR:Lio/netty/handler/codec/http/HttpResponseStatus;
     141: new           #100                // class se/fortnox/reactivewizard/util/JustMessageException
     144: dup
     145: aload         4
     147: aload_2
     148: invokespecial #106                // Method se/fortnox/reactivewizard/util/JustMessageException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     151: iconst_0
     152: invokespecial #102                // Method se/fortnox/reactivewizard/jaxrs/WebException."<init>":(Lio/netty/handler/codec/http/HttpResponseStatus;Ljava/lang/Throwable;Z)V
     155: invokestatic  #103                // Method rx/Observable.error:(Ljava/lang/Throwable;)Lrx/Observable;
     158: areturn
     159: aload_2
     160: invokestatic  #103                // Method rx/Observable.error:(Ljava/lang/Throwable;)Lrx/Observable;
     163: areturn

  protected rx.Observable<?> parseResponse(java.lang.reflect.Method, se.fortnox.reactivewizard.client.RequestBuilder, io.reactivex.netty.protocol.http.client.HttpClientResponse<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field collector:Lse/fortnox/reactivewizard/jaxrs/ByteBufCollector;
       4: aload_3
       5: invokevirtual #107                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.getContent:()Lio/reactivex/netty/channel/ContentSource;
       8: invokevirtual #108                // Method se/fortnox/reactivewizard/jaxrs/ByteBufCollector.collectString:(Lrx/Observable;)Lrx/Observable;
      11: ldc           #109                // String
      13: invokevirtual #110                // Method rx/Observable.singleOrDefault:(Ljava/lang/Object;)Lrx/Observable;
      16: astore        4
      18: aload_0
      19: aload_1
      20: invokespecial #111                // Method expectsByteArrayResponse:(Ljava/lang/reflect/Method;)Z
      23: ifeq          65
      26: aload_3
      27: invokevirtual #112                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.getStatus:()Lio/netty/handler/codec/http/HttpResponseStatus;
      30: invokevirtual #113                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      33: sipush        400
      36: if_icmplt     53
      39: aload         4
      41: aload_0
      42: aload_2
      43: aload_3
      44: invokedynamic #114,  0            // InvokeDynamic #4:call:(Lse/fortnox/reactivewizard/client/HttpClient;Lse/fortnox/reactivewizard/client/RequestBuilder;Lio/reactivex/netty/protocol/http/client/HttpClientResponse;)Lrx/functions/Func1;
      49: invokevirtual #43                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      52: areturn
      53: aload_0
      54: getfield      #21                 // Field collector:Lse/fortnox/reactivewizard/jaxrs/ByteBufCollector;
      57: aload_3
      58: invokevirtual #107                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.getContent:()Lio/reactivex/netty/channel/ContentSource;
      61: invokevirtual #115                // Method se/fortnox/reactivewizard/jaxrs/ByteBufCollector.collectBytes:(Lrx/Observable;)Lrx/Observable;
      64: areturn
      65: aload         4
      67: aload_0
      68: aload_2
      69: aload_3
      70: invokedynamic #116,  0            // InvokeDynamic #5:call:(Lse/fortnox/reactivewizard/client/HttpClient;Lse/fortnox/reactivewizard/client/RequestBuilder;Lio/reactivex/netty/protocol/http/client/HttpClientResponse;)Lrx/functions/Func1;
      75: invokevirtual #43                 // Method rx/Observable.map:(Lrx/functions/Func1;)Lrx/Observable;
      78: aload_0
      79: aload_1
      80: invokedynamic #117,  0            // InvokeDynamic #6:call:(Lse/fortnox/reactivewizard/client/HttpClient;Ljava/lang/reflect/Method;)Lrx/functions/Func1;
      85: invokevirtual #78                 // Method rx/Observable.flatMap:(Lrx/functions/Func1;)Lrx/Observable;
      88: areturn

  private boolean expectsByteArrayResponse(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokestatic  #118                // Method se/fortnox/reactivewizard/util/ReflectionUtil.getTypeOfObservable:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;
       4: astore_2
       5: aload_2
       6: getstatic     #119                // Field BYTEARRAY_TYPE:Ljava/lang/Class;
       9: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ireturn

  private void addDevOverrides(se.fortnox.reactivewizard.client.RequestBuilder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
       4: invokevirtual #121                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getDevServerInfo:()Ljava/net/InetSocketAddress;
       7: ifnull        21
      10: aload_1
      11: aload_0
      12: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      15: invokevirtual #121                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getDevServerInfo:()Ljava/net/InetSocketAddress;
      18: invokevirtual #122                // Method se/fortnox/reactivewizard/client/RequestBuilder.setServerInfo:(Ljava/net/InetSocketAddress;)V
      21: aload_0
      22: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      25: invokevirtual #123                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getDevCookie:()Ljava/lang/String;
      28: ifnull        93
      31: new           #64                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_1
      39: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
      42: ldc           #124                // String Cookie
      44: invokeinterface #125,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      49: checkcast     #126                // class java/lang/String
      52: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #127                // String ;
      57: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      64: invokevirtual #123                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getDevCookie:()Ljava/lang/String;
      67: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: astore_2
      74: aload_1
      75: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
      78: ldc           #124                // String Cookie
      80: invokeinterface #128,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload_1
      87: ldc           #124                // String Cookie
      89: aload_2
      90: invokevirtual #129                // Method se/fortnox/reactivewizard/client/RequestBuilder.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      93: aload_0
      94: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      97: invokevirtual #130                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getDevHeaders:()Ljava/util/Map;
     100: ifnull        136
     103: aload_0
     104: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
     107: invokevirtual #130                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getDevHeaders:()Ljava/util/Map;
     110: ifnull        136
     113: aload_0
     114: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
     117: invokevirtual #130                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getDevHeaders:()Ljava/util/Map;
     120: aload_1
     121: dup
     122: invokestatic  #131                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     125: pop
     126: invokedynamic #132,  0            // InvokeDynamic #7:accept:(Lse/fortnox/reactivewizard/client/RequestBuilder;)Ljava/util/function/BiConsumer;
     131: invokeinterface #133,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
     136: return

  private void addAuthenticationHeaders(se.fortnox.reactivewizard.client.RequestBuilder);
    Code:
       0: aload_0
       1: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
       4: invokevirtual #134                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getBasicAuth:()Lse/fortnox/reactivewizard/client/BasicAuthConfig;
       7: ifnonnull     11
      10: return
      11: aload_0
      12: invokespecial #135                // Method createBasicAuthString:()Ljava/lang/String;
      15: astore_2
      16: aload_1
      17: ldc           #136                // String Authorization
      19: aload_2
      20: invokevirtual #129                // Method se/fortnox/reactivewizard/client/RequestBuilder.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      23: return

  private java.lang.String createBasicAuthString();
    Code:
       0: getstatic     #137                // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
       3: astore_1
       4: new           #64                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      15: invokevirtual #134                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getBasicAuth:()Lse/fortnox/reactivewizard/client/BasicAuthConfig;
      18: invokevirtual #138                // Method se/fortnox/reactivewizard/client/BasicAuthConfig.getUsername:()Ljava/lang/String;
      21: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #139                // String :
      26: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      33: invokevirtual #134                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getBasicAuth:()Lse/fortnox/reactivewizard/client/BasicAuthConfig;
      36: invokevirtual #140                // Method se/fortnox/reactivewizard/client/BasicAuthConfig.getPassword:()Ljava/lang/String;
      39: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: astore_2
      46: invokestatic  #141                // Method java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
      49: aload_2
      50: aload_1
      51: invokevirtual #142                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      54: invokevirtual #143                // Method java/util/Base64$Encoder.encode:([B)[B
      57: astore_3
      58: new           #64                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #144                // String Basic
      67: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: new           #126                // class java/lang/String
      73: dup
      74: aload_3
      75: invokespecial #145                // Method java/lang/String."<init>":([B)V
      78: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: areturn

  protected <T> rx.Observable<T> measure(se.fortnox.reactivewizard.client.RequestBuilder, rx.Observable<T>);
    Code:
       0: new           #64                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #146                // String OUT_res:
       9: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #147                // Method se/fortnox/reactivewizard/client/RequestBuilder.getKey:()Ljava/lang/String;
      16: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokestatic  #148                // Method se/fortnox/reactivewizard/metrics/Metrics.get:(Ljava/lang/String;)Lse/fortnox/reactivewizard/metrics/Metrics;
      25: aload_2
      26: invokevirtual #149                // Method se/fortnox/reactivewizard/metrics/Metrics.measure:(Lrx/Observable;)Lrx/Observable;
      29: areturn

  protected <T> rx.Observable<T> withRetry(se.fortnox.reactivewizard.client.RequestBuilder, rx.Observable<T>);
    Code:
       0: aload_2
       1: new           #150                // class se/fortnox/reactivewizard/util/rx/RetryWithDelay
       4: dup
       5: aload_0
       6: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
       9: invokevirtual #151                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getRetryCount:()I
      12: aload_0
      13: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
      16: invokevirtual #152                // Method se/fortnox/reactivewizard/client/HttpClientConfig.getRetryDelayMs:()I
      19: aload_1
      20: invokedynamic #153,  0            // InvokeDynamic #8:test:(Lse/fortnox/reactivewizard/client/RequestBuilder;)Ljava/util/function/Predicate;
      25: invokespecial #154                // Method se/fortnox/reactivewizard/util/rx/RetryWithDelay."<init>":(IILjava/util/function/Predicate;)V
      28: invokevirtual #155                // Method rx/Observable.retryWhen:(Lrx/functions/Func1;)Lrx/Observable;
      31: areturn

  private boolean expectsRawResponse(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokestatic  #118                // Method se/fortnox/reactivewizard/util/ReflectionUtil.getTypeOfObservable:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;
       4: astore_2
       5: aload_2
       6: instanceof    #156                // class java/lang/reflect/ParameterizedType
       9: ifeq          33
      12: aload_2
      13: checkcast     #156                // class java/lang/reflect/ParameterizedType
      16: invokeinterface #157,  1          // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      21: ldc           #158                // class io/reactivex/netty/protocol/http/client/HttpClientResponse
      23: invokevirtual #120                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  protected void addContent(java.lang.reflect.Method, java.lang.Object[], se.fortnox.reactivewizard.client.RequestBuilder);
    Code:
       0: aload_3
       1: invokevirtual #159                // Method se/fortnox/reactivewizard/client/RequestBuilder.canHaveBody:()Z
       4: ifeq          14
       7: aload_3
       8: invokevirtual #160                // Method se/fortnox/reactivewizard/client/RequestBuilder.hasContent:()Z
      11: ifeq          15
      14: return
      15: aload_1
      16: invokevirtual #161                // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      19: astore        4
      21: aload_1
      22: invokevirtual #162                // Method java/lang/reflect/Method.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
      25: astore        5
      27: new           #64                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      34: astore        6
      36: iconst_0
      37: istore        7
      39: iload         7
      41: aload         4
      43: arraylength
      44: if_icmpge     181
      47: aload_2
      48: iload         7
      50: aaload
      51: astore        8
      53: aload         8
      55: ifnonnull     61
      58: goto          175
      61: aload_0
      62: aload         5
      64: iload         7
      66: aaload
      67: invokespecial #163                // Method getFormParam:([Ljava/lang/annotation/Annotation;)Ljavax/ws/rs/FormParam;
      70: astore        9
      72: aload         9
      74: ifnull        104
      77: aload_0
      78: aload         6
      80: aload         8
      82: aload         9
      84: invokevirtual #164                // Method addFormParamToOutput:(Ljava/lang/StringBuilder;Ljava/lang/Object;Ljavax/ws/rs/FormParam;)V
      87: aload_3
      88: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
      91: ldc           #165                // String Content-Type
      93: ldc           #167                // String application/x-www-form-urlencoded
      95: invokeinterface #168,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: goto          175
     104: aload_0
     105: aload         4
     107: iload         7
     109: aaload
     110: aload         5
     112: iload         7
     114: aaload
     115: invokevirtual #169                // Method isBodyArg:(Ljava/lang/Class;[Ljava/lang/annotation/Annotation;)Z
     118: ifeq          175
     121: aload_3
     122: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
     125: ldc           #165                // String Content-Type
     127: invokeinterface #170,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     132: ifne          149
     135: aload_3
     136: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
     139: ldc           #165                // String Content-Type
     141: ldc           #171                // String application/json
     143: invokeinterface #168,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     148: pop
     149: aload_3
     150: aload_0
     151: getfield      #11                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
     154: aload         8
     156: invokevirtual #172                // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsBytes:(Ljava/lang/Object;)[B
     159: invokevirtual #173                // Method se/fortnox/reactivewizard/client/RequestBuilder.setContent:([B)V
     162: return
     163: astore        10
     165: new           #45                 // class java/lang/RuntimeException
     168: dup
     169: aload         10
     171: invokespecial #46                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     174: athrow
     175: iinc          7, 1
     178: goto          39
     181: aload         6
     183: invokevirtual #175                // Method java/lang/StringBuilder.length:()I
     186: ifle          198
     189: aload_3
     190: aload         6
     192: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokevirtual #176                // Method se/fortnox/reactivewizard/client/RequestBuilder.setContent:(Ljava/lang/String;)V
     198: return
    Exception table:
       from    to  target type
         121   162   163   Class com/fasterxml/jackson/core/JsonProcessingException

  protected void addFormParamToOutput(java.lang.StringBuilder, java.lang.Object, javax.ws.rs.FormParam);
    Code:
       0: aload_1
       1: invokevirtual #175                // Method java/lang/StringBuilder.length:()I
       4: ifeq          14
       7: aload_1
       8: ldc           #177                // String &
      10: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: pop
      14: aload_1
      15: aload_3
      16: invokeinterface #178,  1          // InterfaceMethod javax/ws/rs/FormParam.value:()Ljava/lang/String;
      21: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #179                // String =
      26: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: aload_2
      31: invokevirtual #180                // Method java/lang/Object.toString:()Ljava/lang/String;
      34: invokevirtual #181                // Method urlEncode:(Ljava/lang/String;)Ljava/lang/String;
      37: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: pop
      41: return

  private javax.ws.rs.FormParam getFormParam(java.lang.annotation.Annotation[]);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     40
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: instanceof    #182                // class javax/ws/rs/FormParam
      25: ifeq          34
      28: aload         5
      30: checkcast     #182                // class javax/ws/rs/FormParam
      33: areturn
      34: iinc          4, 1
      37: goto          8
      40: aconst_null
      41: areturn

  protected boolean isBodyArg(java.lang.Class<?>, java.lang.annotation.Annotation[]);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     62
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload         6
      24: instanceof    #183                // class javax/ws/rs/QueryParam
      27: ifne          54
      30: aload         6
      32: instanceof    #184                // class javax/ws/rs/PathParam
      35: ifne          54
      38: aload         6
      40: instanceof    #185                // class javax/ws/rs/HeaderParam
      43: ifne          54
      46: aload         6
      48: instanceof    #186                // class javax/ws/rs/CookieParam
      51: ifeq          56
      54: iconst_0
      55: ireturn
      56: iinc          5, 1
      59: goto          9
      62: iconst_1
      63: ireturn

  protected java.lang.String handleError(se.fortnox.reactivewizard.client.RequestBuilder, io.reactivex.netty.protocol.http.client.HttpClientResponse<io.netty.buffer.ByteBuf>, java.lang.String);
    Code:
       0: aload_2
       1: invokevirtual #112                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.getStatus:()Lio/netty/handler/codec/http/HttpResponseStatus;
       4: invokevirtual #113                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
       7: sipush        400
      10: if_icmplt     144
      13: ldc           #187                // String Error calling other service:\n\tResponse Status: %d\n\tURL: %s\n\tRequest Headers: %s\n\tResponse Headers: %s\n\tData: %s
      15: iconst_5
      16: anewarray     #56                 // class java/lang/Object
      19: dup
      20: iconst_0
      21: aload_2
      22: invokevirtual #112                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.getStatus:()Lio/netty/handler/codec/http/HttpResponseStatus;
      25: invokevirtual #113                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      28: invokestatic  #188                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_1
      35: invokevirtual #89                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getFullUrl:()Ljava/lang/String;
      38: aastore
      39: dup
      40: iconst_2
      41: aload_1
      42: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
      45: invokeinterface #70,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      50: aastore
      51: dup
      52: iconst_3
      53: aload_0
      54: aload_2
      55: invokespecial #189                // Method formatHeaders:(Lio/reactivex/netty/protocol/http/client/HttpClientResponse;)Ljava/lang/String;
      58: aastore
      59: dup
      60: iconst_4
      61: aload_3
      62: aastore
      63: invokestatic  #90                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: astore        4
      68: new           #190                // class se/fortnox/reactivewizard/client/HttpClient$ThrowableWithoutStack
      71: dup
      72: aload         4
      74: invokespecial #191                // Method se/fortnox/reactivewizard/client/HttpClient$ThrowableWithoutStack."<init>":(Ljava/lang/String;)V
      77: astore        5
      79: aload_0
      80: aload_3
      81: aload         5
      83: invokespecial #192                // Method getDetailedError:(Ljava/lang/String;Ljava/lang/Throwable;)Lse/fortnox/reactivewizard/client/HttpClient$DetailedError;
      86: astore        6
      88: aload         6
      90: invokevirtual #193                // Method se/fortnox/reactivewizard/client/HttpClient$DetailedError.hasReason:()Z
      93: ifeq          104
      96: aload         6
      98: invokevirtual #194                // Method se/fortnox/reactivewizard/client/HttpClient$DetailedError.reason:()Ljava/lang/String;
     101: goto          111
     104: aload_2
     105: invokevirtual #112                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.getStatus:()Lio/netty/handler/codec/http/HttpResponseStatus;
     108: invokevirtual #195                // Method io/netty/handler/codec/http/HttpResponseStatus.reasonPhrase:()Ljava/lang/String;
     111: astore        7
     113: new           #196                // class io/netty/handler/codec/http/HttpResponseStatus
     116: dup
     117: aload_2
     118: invokevirtual #112                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.getStatus:()Lio/netty/handler/codec/http/HttpResponseStatus;
     121: invokevirtual #113                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
     124: aload         7
     126: invokespecial #197                // Method io/netty/handler/codec/http/HttpResponseStatus."<init>":(ILjava/lang/String;)V
     129: astore        8
     131: new           #98                 // class se/fortnox/reactivewizard/jaxrs/WebException
     134: dup
     135: aload         8
     137: aload         6
     139: iconst_0
     140: invokespecial #102                // Method se/fortnox/reactivewizard/jaxrs/WebException."<init>":(Lio/netty/handler/codec/http/HttpResponseStatus;Ljava/lang/Throwable;Z)V
     143: athrow
     144: aload_3
     145: areturn

  private java.lang.String formatHeaders(io.reactivex.netty.protocol.http.client.HttpClientResponse<io.netty.buffer.ByteBuf>);
    Code:
       0: new           #64                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #198                // Method io/reactivex/netty/protocol/http/client/HttpClientResponse.headerIterator:()Ljava/util/Iterator;
      12: aload_2
      13: invokedynamic #199,  0            // InvokeDynamic #9:accept:(Ljava/lang/StringBuilder;)Ljava/util/function/Consumer;
      18: invokeinterface #200,  2          // InterfaceMethod java/util/Iterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      23: aload_2
      24: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private se.fortnox.reactivewizard.client.HttpClient$DetailedError getDetailedError(java.lang.String, java.lang.Throwable);
    Code:
       0: new           #201                // class se/fortnox/reactivewizard/client/HttpClient$DetailedError
       3: dup
       4: aload_2
       5: invokespecial #202                // Method se/fortnox/reactivewizard/client/HttpClient$DetailedError."<init>":(Ljava/lang/Throwable;)V
       8: astore_3
       9: aload_1
      10: ifnull        43
      13: aload_1
      14: invokevirtual #203                // Method java/lang/String.length:()I
      17: ifle          43
      20: aload_0
      21: getfield      #11                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      24: aload_3
      25: invokevirtual #204                // Method com/fasterxml/jackson/databind/ObjectMapper.readerForUpdating:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/ObjectReader;
      28: aload_1
      29: invokevirtual #205                // Method com/fasterxml/jackson/databind/ObjectReader.readValue:(Ljava/lang/String;)Ljava/lang/Object;
      32: pop
      33: goto          43
      36: astore        4
      38: aload_3
      39: aload_1
      40: invokevirtual #207                // Method se/fortnox/reactivewizard/client/HttpClient$DetailedError.setMessage:(Ljava/lang/String;)V
      43: aload_3
      44: areturn
    Exception table:
       from    to  target type
          20    33    36   Class java/io/IOException

  protected se.fortnox.reactivewizard.client.RequestBuilder createRequest(java.lang.reflect.Method, java.lang.Object[]);
    Code:
       0: new           #208                // class se/fortnox/reactivewizard/jaxrs/JaxRsMeta
       3: dup
       4: aload_1
       5: invokespecial #209                // Method se/fortnox/reactivewizard/jaxrs/JaxRsMeta."<init>":(Ljava/lang/reflect/Method;)V
       8: astore_3
       9: new           #210                // class se/fortnox/reactivewizard/client/RequestBuilder
      12: dup
      13: aload_0
      14: getfield      #17                 // Field serverInfo:Ljava/net/InetSocketAddress;
      17: aload_3
      18: invokevirtual #211                // Method se/fortnox/reactivewizard/jaxrs/JaxRsMeta.getHttpMethod:()Lio/netty/handler/codec/http/HttpMethod;
      21: aload_3
      22: invokevirtual #212                // Method se/fortnox/reactivewizard/jaxrs/JaxRsMeta.getFullPath:()Ljava/lang/String;
      25: invokespecial #213                // Method se/fortnox/reactivewizard/client/RequestBuilder."<init>":(Ljava/net/InetSocketAddress;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;)V
      28: astore        4
      30: aload         4
      32: aload_0
      33: aload_1
      34: aload_2
      35: aload_3
      36: invokevirtual #214                // Method getPath:(Ljava/lang/reflect/Method;[Ljava/lang/Object;Lse/fortnox/reactivewizard/jaxrs/JaxRsMeta;)Ljava/lang/String;
      39: invokevirtual #215                // Method se/fortnox/reactivewizard/client/RequestBuilder.setUri:(Ljava/lang/String;)V
      42: aload_0
      43: aload         4
      45: aload_1
      46: aload_2
      47: invokespecial #216                // Method setHeaderParams:(Lse/fortnox/reactivewizard/client/RequestBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
      50: aload_0
      51: aload         4
      53: aload_1
      54: aload_2
      55: invokespecial #217                // Method addCustomParams:(Lse/fortnox/reactivewizard/client/RequestBuilder;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V
      58: aload_1
      59: ldc           #218                // class javax/ws/rs/Consumes
      61: invokevirtual #219                // Method java/lang/reflect/Method.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      64: checkcast     #218                // class javax/ws/rs/Consumes
      67: astore        5
      69: aload         5
      71: ifnull        101
      74: aload         5
      76: invokeinterface #220,  1          // InterfaceMethod javax/ws/rs/Consumes.value:()[Ljava/lang/String;
      81: arraylength
      82: ifeq          101
      85: aload         4
      87: ldc           #165                // String Content-Type
      89: aload         5
      91: invokeinterface #220,  1          // InterfaceMethod javax/ws/rs/Consumes.value:()[Ljava/lang/String;
      96: iconst_0
      97: aaload
      98: invokevirtual #129                // Method se/fortnox/reactivewizard/client/RequestBuilder.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     101: aload_0
     102: aload         4
     104: invokespecial #221                // Method applyPreRequestHooks:(Lse/fortnox/reactivewizard/client/RequestBuilder;)V
     107: aload_0
     108: aload_1
     109: aload_2
     110: aload         4
     112: invokevirtual #222                // Method addContent:(Ljava/lang/reflect/Method;[Ljava/lang/Object;Lse/fortnox/reactivewizard/client/RequestBuilder;)V
     115: aload         4
     117: areturn

  private void applyPreRequestHooks(se.fortnox.reactivewizard.client.RequestBuilder);
    Code:
       0: aload_0
       1: getfield      #22                 // Field preRequestHooks:Ljava/util/Set;
       4: aload_1
       5: invokedynamic #223,  0            // InvokeDynamic #10:accept:(Lse/fortnox/reactivewizard/client/RequestBuilder;)Ljava/util/function/Consumer;
      10: invokeinterface #224,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      15: return

  private void addCustomParams(se.fortnox.reactivewizard.client.RequestBuilder, java.lang.reflect.Method, java.lang.Object[]);
    Code:
       0: aload_2
       1: invokevirtual #161                // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: astore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: aload         4
      13: arraylength
      14: if_icmpge     54
      17: aload_0
      18: getfield      #12                 // Field requestParameterSerializers:Lse/fortnox/reactivewizard/client/RequestParameterSerializers;
      21: aload         4
      23: iload         5
      25: aaload
      26: invokevirtual #225                // Method se/fortnox/reactivewizard/client/RequestParameterSerializers.getSerializer:(Ljava/lang/Class;)Lse/fortnox/reactivewizard/client/RequestParameterSerializer;
      29: astore        6
      31: aload         6
      33: ifnull        48
      36: aload         6
      38: aload_3
      39: iload         5
      41: aaload
      42: aload_1
      43: invokeinterface #226,  3          // InterfaceMethod se/fortnox/reactivewizard/client/RequestParameterSerializer.addParameter:(Ljava/lang/Object;Lse/fortnox/reactivewizard/client/RequestBuilder;)V
      48: iinc          5, 1
      51: goto          9
      54: return

  private void setHeaderParams(se.fortnox.reactivewizard.client.RequestBuilder, java.lang.reflect.Method, java.lang.Object[]);
    Code:
       0: aload_2
       1: invokevirtual #161                // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: astore        4
       6: aload_2
       7: invokevirtual #162                // Method java/lang/reflect/Method.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
      10: astore        5
      12: iconst_0
      13: istore        6
      15: iload         6
      17: aload         4
      19: arraylength
      20: if_icmpge     213
      23: aload_3
      24: iload         6
      26: aaload
      27: astore        7
      29: aload         7
      31: ifnonnull     37
      34: goto          207
      37: aload         5
      39: iload         6
      41: aaload
      42: astore        8
      44: aload         8
      46: arraylength
      47: istore        9
      49: iconst_0
      50: istore        10
      52: iload         10
      54: iload         9
      56: if_icmpge     207
      59: aload         8
      61: iload         10
      63: aaload
      64: astore        11
      66: aload         11
      68: instanceof    #185                // class javax/ws/rs/HeaderParam
      71: ifeq          97
      74: aload_1
      75: aload         11
      77: checkcast     #185                // class javax/ws/rs/HeaderParam
      80: invokeinterface #227,  1          // InterfaceMethod javax/ws/rs/HeaderParam.value:()Ljava/lang/String;
      85: aload_0
      86: aload         7
      88: invokevirtual #228                // Method serialize:(Ljava/lang/Object;)Ljava/lang/String;
      91: invokevirtual #129                // Method se/fortnox/reactivewizard/client/RequestBuilder.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
      94: goto          201
      97: aload         11
      99: instanceof    #186                // class javax/ws/rs/CookieParam
     102: ifeq          201
     105: aload_1
     106: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
     109: ldc           #124                // String Cookie
     111: invokeinterface #125,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     116: checkcast     #126                // class java/lang/String
     119: astore        12
     121: new           #64                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     128: aload         11
     130: checkcast     #186                // class javax/ws/rs/CookieParam
     133: invokeinterface #229,  1          // InterfaceMethod javax/ws/rs/CookieParam.value:()Ljava/lang/String;
     138: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #179                // String =
     143: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_0
     147: aload         7
     149: invokevirtual #228                // Method serialize:(Ljava/lang/Object;)Ljava/lang/String;
     152: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: astore        13
     160: aload         12
     162: ifnull        193
     165: aload_1
     166: ldc           #124                // String Cookie
     168: ldc           #230                // String %s; %s
     170: iconst_2
     171: anewarray     #56                 // class java/lang/Object
     174: dup
     175: iconst_0
     176: aload         12
     178: aastore
     179: dup
     180: iconst_1
     181: aload         13
     183: aastore
     184: invokestatic  #90                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     187: invokevirtual #129                // Method se/fortnox/reactivewizard/client/RequestBuilder.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     190: goto          201
     193: aload_1
     194: ldc           #124                // String Cookie
     196: aload         13
     198: invokevirtual #129                // Method se/fortnox/reactivewizard/client/RequestBuilder.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     201: iinc          10, 1
     204: goto          52
     207: iinc          6, 1
     210: goto          15
     213: aload_0
     214: aload_1
     215: invokevirtual #69                 // Method se/fortnox/reactivewizard/client/RequestBuilder.getHeaders:()Ljava/util/Map;
     218: ldc           #231                // String Host
     220: invokeinterface #125,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     225: checkcast     #126                // class java/lang/String
     228: invokevirtual #232                // Method isNullOrEmpty:(Ljava/lang/String;)Z
     231: ifeq          247
     234: aload_1
     235: ldc           #231                // String Host
     237: aload_0
     238: getfield      #9                  // Field config:Lse/fortnox/reactivewizard/client/HttpClientConfig;
     241: invokevirtual #14                 // Method se/fortnox/reactivewizard/client/HttpClientConfig.getHost:()Ljava/lang/String;
     244: invokevirtual #129                // Method se/fortnox/reactivewizard/client/RequestBuilder.addHeader:(Ljava/lang/String;Ljava/lang/String;)V
     247: return

  protected rx.Observable<java.lang.Object> deserialize(java.lang.reflect.Method, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        11
       4: aload_2
       5: invokevirtual #233                // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: invokestatic  #234                // Method rx/Observable.empty:()Lrx/Observable;
      14: areturn
      15: aload_1
      16: invokestatic  #118                // Method se/fortnox/reactivewizard/util/ReflectionUtil.getTypeOfObservable:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;
      19: astore_3
      20: invokestatic  #235                // Method com/fasterxml/jackson/databind/type/TypeFactory.defaultInstance:()Lcom/fasterxml/jackson/databind/type/TypeFactory;
      23: aload_3
      24: invokevirtual #236                // Method com/fasterxml/jackson/databind/type/TypeFactory.constructType:(Ljava/lang/reflect/Type;)Lcom/fasterxml/jackson/databind/JavaType;
      27: astore        4
      29: aload_0
      30: getfield      #11                 // Field objectMapper:Lcom/fasterxml/jackson/databind/ObjectMapper;
      33: aload         4
      35: invokevirtual #237                // Method com/fasterxml/jackson/databind/ObjectMapper.readerFor:(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/ObjectReader;
      38: astore        5
      40: aload         5
      42: aload_2
      43: invokevirtual #205                // Method com/fasterxml/jackson/databind/ObjectReader.readValue:(Ljava/lang/String;)Ljava/lang/Object;
      46: invokestatic  #238                // Method rx/Observable.just:(Ljava/lang/Object;)Lrx/Observable;
      49: areturn
      50: astore        4
      52: new           #45                 // class java/lang/RuntimeException
      55: dup
      56: aload         4
      58: invokespecial #46                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      61: athrow
    Exception table:
       from    to  target type
          20    49    50   Class java/io/IOException

  protected java.lang.String encode(java.lang.String);
    Code:
       0: new           #239                // class java/net/URI
       3: dup
       4: aconst_null
       5: aconst_null
       6: aload_1
       7: aconst_null
       8: aconst_null
       9: invokespecial #240                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      12: invokevirtual #241                // Method java/net/URI.toASCIIString:()Ljava/lang/String;
      15: ldc           #242                // String \\+
      17: ldc           #243                // String %2B
      19: invokevirtual #244                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      22: areturn
      23: astore_2
      24: new           #45                 // class java/lang/RuntimeException
      27: dup
      28: aload_2
      29: invokespecial #46                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      32: athrow
    Exception table:
       from    to  target type
           0    22    23   Class java/net/URISyntaxException

  protected java.lang.String urlEncode(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #246                // String UTF-8
       3: invokestatic  #247                // Method java/net/URLEncoder.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn
       7: astore_2
       8: new           #45                 // class java/lang/RuntimeException
      11: dup
      12: aload_2
      13: invokespecial #46                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/io/UnsupportedEncodingException

  protected java.lang.String getPath(java.lang.reflect.Method, java.lang.Object[], se.fortnox.reactivewizard.jaxrs.JaxRsMeta);
    Code:
       0: aload_3
       1: invokevirtual #212                // Method se/fortnox/reactivewizard/jaxrs/JaxRsMeta.getFullPath:()Ljava/lang/String;
       4: astore        4
       6: aconst_null
       7: astore        5
       9: aload_1
      10: invokevirtual #161                // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      13: astore        6
      15: new           #249                // class java/util/ArrayList
      18: dup
      19: aload_2
      20: invokestatic  #250                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      23: invokespecial #251                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      26: astore        7
      28: new           #249                // class java/util/ArrayList
      31: dup
      32: aload_1
      33: invokevirtual #162                // Method java/lang/reflect/Method.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;
      36: invokestatic  #250                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      39: invokespecial #251                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      42: astore        8
      44: iconst_0
      45: istore        9
      47: iload         9
      49: aload         7
      51: invokeinterface #252,  1          // InterfaceMethod java/util/List.size:()I
      56: if_icmpge     435
      59: aload         7
      61: iload         9
      63: invokeinterface #253,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      68: astore        10
      70: aload         8
      72: iload         9
      74: invokeinterface #253,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      79: checkcast     #254                // class "[Ljava/lang/annotation/Annotation;"
      82: astore        11
      84: aload         11
      86: arraylength
      87: istore        12
      89: iconst_0
      90: istore        13
      92: iload         13
      94: iload         12
      96: if_icmpge     429
      99: aload         11
     101: iload         13
     103: aaload
     104: astore        14
     106: aload         14
     108: instanceof    #183                // class javax/ws/rs/QueryParam
     111: ifeq          207
     114: aload         10
     116: ifnonnull     122
     119: goto          423
     122: aload         5
     124: ifnonnull     156
     127: new           #64                 // class java/lang/StringBuilder
     130: dup
     131: aload         4
     133: ldc           #255                // String ?
     135: invokevirtual #256                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     138: ifeq          146
     141: ldc           #177                // String &
     143: goto          148
     146: ldc           #255                // String ?
     148: invokespecial #257                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     151: astore        5
     153: goto          164
     156: aload         5
     158: bipush        38
     160: invokevirtual #258                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     163: pop
     164: aload         5
     166: aload         14
     168: checkcast     #183                // class javax/ws/rs/QueryParam
     171: invokeinterface #259,  1          // InterfaceMethod javax/ws/rs/QueryParam.value:()Ljava/lang/String;
     176: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: pop
     180: aload         5
     182: bipush        61
     184: invokevirtual #258                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     187: pop
     188: aload         5
     190: aload_0
     191: aload_0
     192: aload         10
     194: invokevirtual #228                // Method serialize:(Ljava/lang/Object;)Ljava/lang/String;
     197: invokevirtual #181                // Method urlEncode:(Ljava/lang/String;)Ljava/lang/String;
     200: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: pop
     204: goto          423
     207: aload         14
     209: instanceof    #184                // class javax/ws/rs/PathParam
     212: ifeq          368
     215: aload         4
     217: new           #64                 // class java/lang/StringBuilder
     220: dup
     221: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     224: ldc_w         #260                // String {
     227: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     230: aload         14
     232: checkcast     #184                // class javax/ws/rs/PathParam
     235: invokeinterface #261,  1          // InterfaceMethod javax/ws/rs/PathParam.value:()Ljava/lang/String;
     240: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: ldc_w         #262                // String :.*}
     246: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokevirtual #256                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     255: ifeq          313
     258: aload         4
     260: new           #64                 // class java/lang/StringBuilder
     263: dup
     264: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     267: ldc_w         #263                // String \\{
     270: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     273: aload         14
     275: checkcast     #184                // class javax/ws/rs/PathParam
     278: invokeinterface #261,  1          // InterfaceMethod javax/ws/rs/PathParam.value:()Ljava/lang/String;
     283: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     286: ldc_w         #264                // String :.*\\}
     289: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     295: aload_0
     296: aload_0
     297: aload         10
     299: invokevirtual #228                // Method serialize:(Ljava/lang/Object;)Ljava/lang/String;
     302: invokevirtual #265                // Method encode:(Ljava/lang/String;)Ljava/lang/String;
     305: invokevirtual #244                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     308: astore        4
     310: goto          423
     313: aload         4
     315: new           #64                 // class java/lang/StringBuilder
     318: dup
     319: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     322: ldc_w         #263                // String \\{
     325: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: aload         14
     330: checkcast     #184                // class javax/ws/rs/PathParam
     333: invokeinterface #261,  1          // InterfaceMethod javax/ws/rs/PathParam.value:()Ljava/lang/String;
     338: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     341: ldc_w         #266                // String \\}
     344: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     350: aload_0
     351: aload_0
     352: aload         10
     354: invokevirtual #228                // Method serialize:(Ljava/lang/Object;)Ljava/lang/String;
     357: invokevirtual #181                // Method urlEncode:(Ljava/lang/String;)Ljava/lang/String;
     360: invokevirtual #244                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     363: astore        4
     365: goto          423
     368: aload         14
     370: instanceof    #267                // class javax/ws/rs/BeanParam
     373: ifeq          423
     376: aload         10
     378: ifnonnull     384
     381: goto          423
     384: aload_0
     385: getfield      #8                  // Field beanParamCache:Ljava/util/Map;
     388: aload         6
     390: iload         9
     392: aaload
     393: aload_0
     394: invokedynamic #268,  0            // InvokeDynamic #11:apply:(Lse/fortnox/reactivewizard/client/HttpClient;)Ljava/util/function/Function;
     399: invokeinterface #269,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     404: checkcast     #270                // class java/util/List
     407: aload         7
     409: aload         10
     411: aload         8
     413: invokedynamic #271,  0            // InvokeDynamic #12:accept:(Ljava/util/List;Ljava/lang/Object;Ljava/util/List;)Ljava/util/function/Consumer;
     418: invokeinterface #272,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     423: iinc          13, 1
     426: goto          92
     429: iinc          9, 1
     432: goto          47
     435: aload         5
     437: ifnull        461
     440: new           #64                 // class java/lang/StringBuilder
     443: dup
     444: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
     447: aload         4
     449: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     452: aload         5
     454: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     457: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     460: areturn
     461: aload         4
     463: areturn

  private java.util.List<se.fortnox.reactivewizard.client.HttpClient$BeanParamProperty> getBeanParamGetters(java.lang.Class);
    Code:
       0: new           #249                // class java/util/ArrayList
       3: dup
       4: invokespecial #273                // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #274                // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      12: astore_3
      13: aload_3
      14: arraylength
      15: istore        4
      17: iconst_0
      18: istore        5
      20: iload         5
      22: iload         4
      24: if_icmpge     85
      27: aload_3
      28: iload         5
      30: aaload
      31: astore        6
      33: aload_1
      34: aload         6
      36: invokevirtual #275                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      39: invokestatic  #276                // Method se/fortnox/reactivewizard/util/ReflectionUtil.getter:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
      42: astore        7
      44: aload         7
      46: invokevirtual #277                // Method java/util/Optional.isPresent:()Z
      49: ifeq          79
      52: aload_2
      53: new           #278                // class se/fortnox/reactivewizard/client/HttpClient$BeanParamProperty
      56: dup
      57: aload         7
      59: invokevirtual #279                // Method java/util/Optional.get:()Ljava/lang/Object;
      62: checkcast     #280                // class java/util/function/Function
      65: aload         6
      67: invokevirtual #281                // Method java/lang/reflect/Field.getAnnotations:()[Ljava/lang/annotation/Annotation;
      70: invokespecial #282                // Method se/fortnox/reactivewizard/client/HttpClient$BeanParamProperty."<init>":(Ljava/util/function/Function;[Ljava/lang/annotation/Annotation;)V
      73: invokeinterface #283,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: iinc          5, 1
      82: goto          20
      85: aload_2
      86: areturn

  protected java.lang.String serialize(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #284                // class java/util/Date
       4: ifeq          18
       7: aload_1
       8: checkcast     #284                // class java/util/Date
      11: invokevirtual #285                // Method java/util/Date.getTime:()J
      14: invokestatic  #286                // Method java/lang/String.valueOf:(J)Ljava/lang/String;
      17: areturn
      18: aload_1
      19: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #287                // Method java/lang/Class.isArray:()Z
      25: ifeq          36
      28: aload_1
      29: checkcast     #288                // class "[Ljava/lang/Object;"
      32: invokestatic  #250                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      35: astore_1
      36: aload_1
      37: instanceof    #270                // class java/util/List
      40: ifeq          119
      43: new           #64                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      50: astore_2
      51: aload_1
      52: checkcast     #270                // class java/util/List
      55: astore_3
      56: iconst_0
      57: istore        4
      59: iload         4
      61: aload_3
      62: invokeinterface #252,  1          // InterfaceMethod java/util/List.size:()I
      67: if_icmpge     114
      70: aload_3
      71: iload         4
      73: invokeinterface #253,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      78: astore        5
      80: aload_2
      81: aload         5
      83: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: pop
      87: iload         4
      89: aload_3
      90: invokeinterface #252,  1          // InterfaceMethod java/util/List.size:()I
      95: iconst_1
      96: isub
      97: if_icmpge     108
     100: aload_2
     101: ldc_w         #289                // String ,
     104: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: pop
     108: iinc          4, 1
     111: goto          59
     114: aload_2
     115: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: areturn
     119: aload_1
     120: invokevirtual #180                // Method java/lang/Object.toString:()Ljava/lang/String;
     123: areturn

  protected boolean isNullOrEmpty(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #233                // Method java/lang/String.isEmpty:()Z
       8: ifeq          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private static void lambda$getPath$9(java.util.List, java.lang.Object, java.util.List, se.fortnox.reactivewizard.client.HttpClient$BeanParamProperty);
    Code:
       0: aload_0
       1: aload_3
       2: getfield      #290                // Field se/fortnox/reactivewizard/client/HttpClient$BeanParamProperty.getter:Ljava/util/function/Function;
       5: aload_1
       6: invokeinterface #291,  2          // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      11: invokeinterface #283,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_2
      18: aload_3
      19: getfield      #292                // Field se/fortnox/reactivewizard/client/HttpClient$BeanParamProperty.annotations:[Ljava/lang/annotation/Annotation;
      22: invokeinterface #283,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: return

  private static void lambda$applyPreRequestHooks$8(se.fortnox.reactivewizard.client.RequestBuilder, se.fortnox.reactivewizard.client.PreRequestHook);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #293,  2          // InterfaceMethod se/fortnox/reactivewizard/client/PreRequestHook.apply:(Lse/fortnox/reactivewizard/client/RequestBuilder;)V
       7: return

  private static void lambda$formatHeaders$7(java.lang.StringBuilder, java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #294,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: checkcast     #295                // class java/lang/CharSequence
      10: invokevirtual #296                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      13: bipush        61
      15: invokevirtual #258                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: aload_1
      19: invokeinterface #297,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      24: checkcast     #295                // class java/lang/CharSequence
      27: invokevirtual #296                // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
      30: bipush        32
      32: invokevirtual #258                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: pop
      36: return

  private static boolean lambda$withRetry$6(se.fortnox.reactivewizard.client.RequestBuilder, java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #93                 // class java/util/concurrent/TimeoutException
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #298                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      13: astore_2
      14: aload_1
      15: instanceof    #299                // class com/fasterxml/jackson/databind/JsonMappingException
      18: ifne          28
      21: aload_2
      22: instanceof    #299                // class com/fasterxml/jackson/databind/JsonMappingException
      25: ifeq          30
      28: iconst_0
      29: ireturn
      30: aload_1
      31: instanceof    #98                 // class se/fortnox/reactivewizard/jaxrs/WebException
      34: ifne          61
      37: aload_1
      38: instanceof    #300                // class java/util/NoSuchElementException
      41: ifeq          59
      44: getstatic     #301                // Field io/netty/handler/codec/http/HttpMethod.POST:Lio/netty/handler/codec/http/HttpMethod;
      47: aload_0
      48: invokevirtual #302                // Method se/fortnox/reactivewizard/client/RequestBuilder.getHttpMethod:()Lio/netty/handler/codec/http/HttpMethod;
      51: invokevirtual #303                // Method io/netty/handler/codec/http/HttpMethod.equals:(Ljava/lang/Object;)Z
      54: ifeq          59
      57: iconst_0
      58: ireturn
      59: iconst_1
      60: ireturn
      61: aload_0
      62: invokevirtual #302                // Method se/fortnox/reactivewizard/client/RequestBuilder.getHttpMethod:()Lio/netty/handler/codec/http/HttpMethod;
      65: getstatic     #301                // Field io/netty/handler/codec/http/HttpMethod.POST:Lio/netty/handler/codec/http/HttpMethod;
      68: invokevirtual #303                // Method io/netty/handler/codec/http/HttpMethod.equals:(Ljava/lang/Object;)Z
      71: ifeq          76
      74: iconst_0
      75: ireturn
      76: aload_1
      77: checkcast     #98                 // class se/fortnox/reactivewizard/jaxrs/WebException
      80: invokevirtual #304                // Method se/fortnox/reactivewizard/jaxrs/WebException.getStatus:()Lio/netty/handler/codec/http/HttpResponseStatus;
      83: invokevirtual #113                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      86: sipush        500
      89: if_icmplt     94
      92: iconst_1
      93: ireturn
      94: iconst_0
      95: ireturn

  private rx.Observable lambda$parseResponse$5(java.lang.reflect.Method, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #305                // Method deserialize:(Ljava/lang/reflect/Method;Ljava/lang/String;)Lrx/Observable;
       6: areturn

  private java.lang.String lambda$parseResponse$4(se.fortnox.reactivewizard.client.RequestBuilder, io.reactivex.netty.protocol.http.client.HttpClientResponse, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #306                // Method handleError:(Lse/fortnox/reactivewizard/client/RequestBuilder;Lio/reactivex/netty/protocol/http/client/HttpClientResponse;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  private java.lang.String lambda$parseResponse$3(se.fortnox.reactivewizard.client.RequestBuilder, io.reactivex.netty.protocol.http.client.HttpClientResponse, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #306                // Method handleError:(Lse/fortnox/reactivewizard/client/RequestBuilder;Lio/reactivex/netty/protocol/http/client/HttpClientResponse;Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  private rx.Observable lambda$invoke$2(se.fortnox.reactivewizard.client.RequestBuilder, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #307                // Method convertError:(Lse/fortnox/reactivewizard/client/RequestBuilder;Ljava/lang/Throwable;)Lrx/Observable;
       6: areturn

  private rx.Observable lambda$invoke$1(java.lang.reflect.Method, se.fortnox.reactivewizard.client.RequestBuilder, io.reactivex.netty.protocol.http.client.HttpClientResponse);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #308                // Method parseResponse:(Ljava/lang/reflect/Method;Lse/fortnox/reactivewizard/client/RequestBuilder;Lio/reactivex/netty/protocol/http/client/HttpClientResponse;)Lrx/Observable;
       7: areturn

  private static java.lang.String lambda$get$0(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokestatic  #309                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;
       4: invokevirtual #310                // Method io/netty/buffer/ByteBuf.toString:(Ljava/nio/charset/Charset;)Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: ldc           #50                 // class se/fortnox/reactivewizard/client/HttpClient
       2: invokestatic  #311                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #62                 // Field LOG:Lorg/slf4j/Logger;
       8: iconst_0
       9: newarray       byte
      11: invokevirtual #47                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: putstatic     #119                // Field BYTEARRAY_TYPE:Ljava/lang/Class;
      17: return
}
