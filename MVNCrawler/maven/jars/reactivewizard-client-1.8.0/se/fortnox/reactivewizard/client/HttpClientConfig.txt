Compiled from "HttpClientConfig.java"
public class se.fortnox.reactivewizard.client.HttpClientConfig {
  private int port;

  private java.lang.String host;

  private int maxConnections;

  private java.lang.String url;

  private java.net.InetSocketAddress devServerInfo;

  private java.lang.String devCookie;

  private java.util.Map<java.lang.String, java.lang.String> devHeaders;

  private int maxResponseSize;

  private long poolAutoCleanupInterval;

  private long maxRequestTime;

  private boolean isHttps;

  private int retryCount;

  private int retryDelayMs;

  private int readTimeoutMs;

  private boolean isValidateCertificates;

  private se.fortnox.reactivewizard.client.BasicAuthConfig basicAuth;

  public se.fortnox.reactivewizard.client.HttpClientConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        80
       7: putfield      #2                  // Field port:I
      10: aload_0
      11: sipush        1000
      14: putfield      #3                  // Field maxConnections:I
      17: aload_0
      18: ldc           #4                  // int 10485760
      20: putfield      #5                  // Field maxResponseSize:I
      23: aload_0
      24: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      27: ldc2_w        #7                  // long 10l
      30: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      33: invokevirtual #10                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      36: putfield      #11                 // Field poolAutoCleanupInterval:J
      39: aload_0
      40: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      43: lconst_1
      44: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      47: invokevirtual #10                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      50: putfield      #12                 // Field maxRequestTime:J
      53: aload_0
      54: iconst_3
      55: putfield      #13                 // Field retryCount:I
      58: aload_0
      59: sipush        1000
      62: putfield      #14                 // Field retryDelayMs:I
      65: aload_0
      66: sipush        10000
      69: putfield      #15                 // Field readTimeoutMs:I
      72: aload_0
      73: iconst_1
      74: putfield      #16                 // Field isValidateCertificates:Z
      77: return

  public se.fortnox.reactivewizard.client.HttpClientConfig(java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        80
       7: putfield      #2                  // Field port:I
      10: aload_0
      11: sipush        1000
      14: putfield      #3                  // Field maxConnections:I
      17: aload_0
      18: ldc           #4                  // int 10485760
      20: putfield      #5                  // Field maxResponseSize:I
      23: aload_0
      24: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      27: ldc2_w        #7                  // long 10l
      30: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      33: invokevirtual #10                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      36: putfield      #11                 // Field poolAutoCleanupInterval:J
      39: aload_0
      40: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      43: lconst_1
      44: getstatic     #9                  // Field java/util/concurrent/TimeUnit.MINUTES:Ljava/util/concurrent/TimeUnit;
      47: invokevirtual #10                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J
      50: putfield      #12                 // Field maxRequestTime:J
      53: aload_0
      54: iconst_3
      55: putfield      #13                 // Field retryCount:I
      58: aload_0
      59: sipush        1000
      62: putfield      #14                 // Field retryDelayMs:I
      65: aload_0
      66: sipush        10000
      69: putfield      #15                 // Field readTimeoutMs:I
      72: aload_0
      73: iconst_1
      74: putfield      #16                 // Field isValidateCertificates:Z
      77: aload_0
      78: aload_1
      79: invokevirtual #17                 // Method setUrl:(Ljava/lang/String;)V
      82: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #18                 // Field host:Ljava/lang/String;
       4: areturn

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #2                  // Field port:I
       4: ireturn

  public int getMaxConnections();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxConnections:I
       4: ireturn

  public void setMaxConnections(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field maxConnections:I
       5: return

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #19                 // Field url:Ljava/lang/String;
       4: areturn

  public void setUrl(java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field url:Ljava/lang/String;
       5: aload_1
       6: ldc           #20                 // String ://
       8: invokevirtual #21                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      11: ifne          37
      14: aload_0
      15: new           #22                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #24                 // String http://
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: putfield      #19                 // Field url:Ljava/lang/String;
      37: new           #27                 // class java/net/URI
      40: dup
      41: aload_0
      42: getfield      #19                 // Field url:Ljava/lang/String;
      45: invokespecial #28                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      48: astore_2
      49: aload_0
      50: aload_2
      51: invokevirtual #29                 // Method java/net/URI.getHost:()Ljava/lang/String;
      54: invokevirtual #30                 // Method setHost:(Ljava/lang/String;)V
      57: aload_0
      58: ldc           #31                 // String https
      60: aload_2
      61: invokevirtual #32                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      64: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: putfield      #34                 // Field isHttps:Z
      70: aload_0
      71: aload_2
      72: invokevirtual #35                 // Method java/net/URI.getPort:()I
      75: putfield      #2                  // Field port:I
      78: aload_0
      79: getfield      #2                  // Field port:I
      82: ifge          108
      85: aload_0
      86: getfield      #34                 // Field isHttps:Z
      89: ifeq          102
      92: aload_0
      93: sipush        443
      96: putfield      #2                  // Field port:I
      99: goto          108
     102: aload_0
     103: bipush        80
     105: putfield      #2                  // Field port:I
     108: return

  public java.net.InetSocketAddress getDevServerInfo();
    Code:
       0: aload_0
       1: getfield      #36                 // Field devServerInfo:Ljava/net/InetSocketAddress;
       4: areturn

  public void setDevServerInfo(java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field devServerInfo:Ljava/net/InetSocketAddress;
       5: return

  public java.lang.String getDevCookie();
    Code:
       0: aload_0
       1: getfield      #37                 // Field devCookie:Ljava/lang/String;
       4: areturn

  public void setDevCookie(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field devCookie:Ljava/lang/String;
       5: return

  public int getMaxResponseSize();
    Code:
       0: aload_0
       1: getfield      #5                  // Field maxResponseSize:I
       4: ireturn

  public void setMaxResponseSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field maxResponseSize:I
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getDevHeaders();
    Code:
       0: aload_0
       1: getfield      #38                 // Field devHeaders:Ljava/util/Map;
       4: areturn

  public void setDevHeaders(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field devHeaders:Ljava/util/Map;
       5: return

  public boolean isHttps();
    Code:
       0: aload_0
       1: getfield      #34                 // Field isHttps:Z
       4: ireturn

  public int getRetryCount();
    Code:
       0: aload_0
       1: getfield      #13                 // Field retryCount:I
       4: ireturn

  public void setRetryCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field retryCount:I
       5: return

  public int getRetryDelayMs();
    Code:
       0: aload_0
       1: getfield      #14                 // Field retryDelayMs:I
       4: ireturn

  public void setRetryDelayMs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field retryDelayMs:I
       5: return

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field host:Ljava/lang/String;
       5: aload_1
       6: invokestatic  #39                 // Method java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;
       9: pop
      10: goto          42
      13: astore_2
      14: new           #41                 // class java/lang/RuntimeException
      17: dup
      18: new           #22                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #42                 // String Cannot resolve host for httpClient:
      27: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: aload_2
      38: invokespecial #43                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
      42: return
    Exception table:
       from    to  target type
           5    10    13   Class java/net/UnknownHostException

  public int getReadTimeoutMs();
    Code:
       0: aload_0
       1: getfield      #15                 // Field readTimeoutMs:I
       4: ireturn

  public void setReadTimeoutMs(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field readTimeoutMs:I
       5: return

  public boolean isValidateCertificates();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method isHttps:()Z
       4: ifeq          18
       7: aload_0
       8: getfield      #16                 // Field isValidateCertificates:Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  public void setValidateCertificates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #16                 // Field isValidateCertificates:Z
       5: return

  public se.fortnox.reactivewizard.client.BasicAuthConfig getBasicAuth();
    Code:
       0: aload_0
       1: getfield      #45                 // Field basicAuth:Lse/fortnox/reactivewizard/client/BasicAuthConfig;
       4: areturn

  public void setBasicAuth(se.fortnox.reactivewizard.client.BasicAuthConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #45                 // Field basicAuth:Lse/fortnox/reactivewizard/client/BasicAuthConfig;
       5: return

  public void setBasicAuth(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: new           #46                 // class se/fortnox/reactivewizard/client/BasicAuthConfig
       4: dup
       5: invokespecial #47                 // Method se/fortnox/reactivewizard/client/BasicAuthConfig."<init>":()V
       8: aload_1
       9: invokevirtual #48                 // Method se/fortnox/reactivewizard/client/BasicAuthConfig.setUsername:(Ljava/lang/String;)Lse/fortnox/reactivewizard/client/BasicAuthConfig;
      12: aload_2
      13: invokevirtual #49                 // Method se/fortnox/reactivewizard/client/BasicAuthConfig.setPassword:(Ljava/lang/String;)Lse/fortnox/reactivewizard/client/BasicAuthConfig;
      16: putfield      #45                 // Field basicAuth:Lse/fortnox/reactivewizard/client/BasicAuthConfig;
      19: return
}
