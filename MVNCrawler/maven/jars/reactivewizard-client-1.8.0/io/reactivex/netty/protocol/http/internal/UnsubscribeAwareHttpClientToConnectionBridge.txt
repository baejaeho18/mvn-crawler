Compiled from "UnsubscribeAwareHttpClientToConnectionBridge.java"
public class io.reactivex.netty.protocol.http.internal.UnsubscribeAwareHttpClientToConnectionBridge extends io.reactivex.netty.protocol.http.client.internal.HttpClientToConnectionBridge {
  public io.reactivex.netty.protocol.http.internal.UnsubscribeAwareHttpClientToConnectionBridge();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/reactivex/netty/protocol/http/client/internal/HttpClientToConnectionBridge."<init>":()V
       4: return

  public static void configurePipeline(io.netty.channel.ChannelPipeline);
    Code:
       0: new           #2                  // class io/reactivex/netty/protocol/http/internal/UnsubscribeAwareHttpClientToConnectionBridge
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_1
       8: ldc           #2                  // class io/reactivex/netty/protocol/http/internal/UnsubscribeAwareHttpClientToConnectionBridge
      10: invokevirtual #4                  // Method java/lang/Class.getName:()Ljava/lang/String;
      13: astore_2
      14: aload_0
      15: ldc           #5                  // String HttpClientToConnectionBridge#0
      17: aload_2
      18: aload_1
      19: invokeinterface #6,  4            // InterfaceMethod io/netty/channel/ChannelPipeline.replace:(Ljava/lang/String;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelHandler;
      24: pop
      25: return

  protected io.reactivex.netty.protocol.http.internal.AbstractHttpConnectionBridge$ConnectionInputSubscriber newConnectionInputSubscriber(io.reactivex.netty.channel.ConnectionInputSubscriberEvent, io.netty.channel.Channel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method io/reactivex/netty/protocol/http/client/internal/HttpClientToConnectionBridge.newConnectionInputSubscriber:(Lio/reactivex/netty/channel/ConnectionInputSubscriberEvent;Lio/netty/channel/Channel;)Lio/reactivex/netty/protocol/http/internal/AbstractHttpConnectionBridge$ConnectionInputSubscriber;
       6: astore_3
       7: aload_1
       8: invokevirtual #8                  // Method io/reactivex/netty/channel/ConnectionInputSubscriberEvent.getSubscriber:()Lrx/Subscriber;
      11: aload_0
      12: aload_3
      13: aload_2
      14: invokedynamic #9,  0              // InvokeDynamic #0:call:(Lio/reactivex/netty/protocol/http/internal/UnsubscribeAwareHttpClientToConnectionBridge;Lio/reactivex/netty/protocol/http/internal/AbstractHttpConnectionBridge$ConnectionInputSubscriber;Lio/netty/channel/Channel;)Lrx/functions/Action0;
      19: invokestatic  #10                 // Method rx/subscriptions/Subscriptions.create:(Lrx/functions/Action0;)Lrx/Subscription;
      22: invokevirtual #11                 // Method rx/Subscriber.add:(Lrx/Subscription;)V
      25: aload_3
      26: areturn

  private void lambda$newConnectionInputSubscriber$0(io.reactivex.netty.protocol.http.internal.AbstractHttpConnectionBridge$ConnectionInputSubscriber, io.netty.channel.Channel);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method io/reactivex/netty/protocol/http/internal/AbstractHttpConnectionBridge$ConnectionInputSubscriber.getState:()Lio/reactivex/netty/protocol/http/internal/AbstractHttpConnectionBridge$State;
       4: invokevirtual #13                 // Method io/reactivex/netty/protocol/http/internal/AbstractHttpConnectionBridge$State.receiveStarted:()Z
       7: ifne          15
      10: aload_0
      11: aload_2
      12: invokevirtual #14                 // Method onClosedBeforeReceiveComplete:(Lio/netty/channel/Channel;)V
      15: return
}
