Compiled from "LazyCodec.scala"
public class wvlet.airframe.codec.LazyCodec<A> implements wvlet.airframe.codec.MessageCodec<A>, scala.Product {
  public static final long OFFSET$1;

  public static final long OFFSET$0;

  private volatile java.lang.Object logger$lzy1;

  private final wvlet.airframe.surface.Surface surface;

  private final wvlet.airframe.codec.MessageCodecFactory codecFactory;

  private volatile java.lang.Object ref$lzy1;

  public static <A> wvlet.airframe.codec.LazyCodec<A> apply(wvlet.airframe.surface.Surface, wvlet.airframe.codec.MessageCodecFactory);
    Code:
       0: getstatic     #52                 // Field wvlet/airframe/codec/LazyCodec$.MODULE$:Lwvlet/airframe/codec/LazyCodec$;
       3: aload_0
       4: aload_1
       5: invokevirtual #54                 // Method wvlet/airframe/codec/LazyCodec$.apply:(Lwvlet/airframe/surface/Surface;Lwvlet/airframe/codec/MessageCodecFactory;)Lwvlet/airframe/codec/LazyCodec;
       8: areturn

  public static wvlet.airframe.codec.LazyCodec<?> fromProduct(scala.Product);
    Code:
       0: getstatic     #52                 // Field wvlet/airframe/codec/LazyCodec$.MODULE$:Lwvlet/airframe/codec/LazyCodec$;
       3: aload_0
       4: invokevirtual #59                 // Method wvlet/airframe/codec/LazyCodec$.fromProduct:(Lscala/Product;)Lwvlet/airframe/codec/LazyCodec;
       7: areturn

  public static <A> wvlet.airframe.codec.LazyCodec<A> unapply(wvlet.airframe.codec.LazyCodec<A>);
    Code:
       0: getstatic     #52                 // Field wvlet/airframe/codec/LazyCodec$.MODULE$:Lwvlet/airframe/codec/LazyCodec$;
       3: aload_0
       4: invokevirtual #64                 // Method wvlet/airframe/codec/LazyCodec$.unapply:(Lwvlet/airframe/codec/LazyCodec;)Lwvlet/airframe/codec/LazyCodec;
       7: areturn

  public wvlet.airframe.codec.LazyCodec(wvlet.airframe.surface.Surface, wvlet.airframe.codec.MessageCodecFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #68                 // Field surface:Lwvlet/airframe/surface/Surface;
       5: aload_0
       6: aload_2
       7: putfield      #70                 // Field codecFactory:Lwvlet/airframe/codec/MessageCodecFactory;
      10: aload_0
      11: invokespecial #73                 // Method java/lang/Object."<init>":()V
      14: return

  private static {};
    Code:
       0: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
       3: ldc           #2                  // class wvlet/airframe/codec/LazyCodec
       5: ldc           #82                 // String logger$lzy1
       7: invokevirtual #88                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      10: invokevirtual #92                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      13: putstatic     #94                 // Field OFFSET$1:J
      16: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      19: ldc           #2                  // class wvlet/airframe/codec/LazyCodec
      21: ldc           #95                 // String ref$lzy1
      23: invokevirtual #88                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      26: invokevirtual #92                 // Method scala/runtime/LazyVals$.getOffsetStatic:(Ljava/lang/reflect/Field;)J
      29: putstatic     #97                 // Field OFFSET$0:J
      32: return

  public wvlet.log.Logger wvlet$log$LoggingMethods$$inline$logger();
    Code:
       0: aload_0
       1: invokestatic  #103                // InterfaceMethod wvlet/log/LoggingMethods.wvlet$log$LoggingMethods$$inline$logger$:(Lwvlet/log/LoggingMethods;)Lwvlet/log/Logger;
       4: areturn

  public wvlet.log.Logger logger();
    Code:
       0: aload_0
       1: getfield      #106                // Field logger$lzy1:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #108                // class wvlet/log/Logger
       9: ifeq          17
      12: aload_1
      13: checkcast     #108                // class wvlet/log/Logger
      16: areturn
      17: aload_1
      18: getstatic     #111                // Field scala/runtime/LazyVals$NullValue$.MODULE$:Lscala/runtime/LazyVals$NullValue$;
      21: if_acmpne     26
      24: aconst_null
      25: areturn
      26: aload_0
      27: invokespecial #115                // Method logger$lzyINIT1:()Ljava/lang/Object;
      30: checkcast     #108                // class wvlet/log/Logger
      33: areturn

  private java.lang.Object logger$lzyINIT1();
    Code:
       0: aload_0
       1: getfield      #106                // Field logger$lzy1:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnonnull     151
       9: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      12: aload_0
      13: getstatic     #94                 // Field OFFSET$1:J
      16: aconst_null
      17: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
      20: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      23: ifeq          148
      26: aconst_null
      27: astore_2
      28: aconst_null
      29: astore_3
      30: aload_0
      31: invokestatic  #126                // InterfaceMethod wvlet/log/LazyLogger.logger$:(Lwvlet/log/LazyLogger;)Lwvlet/log/Logger;
      34: astore_3
      35: aload_3
      36: ifnonnull     46
      39: getstatic     #111                // Field scala/runtime/LazyVals$NullValue$.MODULE$:Lscala/runtime/LazyVals$NullValue$;
      42: astore_2
      43: goto          48
      46: aload_3
      47: astore_2
      48: goto          101
      51: astore        4
      53: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      56: aload_0
      57: getstatic     #94                 // Field OFFSET$1:J
      60: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
      63: aload_2
      64: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      67: ifne          98
      70: aload_0
      71: getfield      #106                // Field logger$lzy1:Ljava/lang/Object;
      74: checkcast     #27                 // class scala/runtime/LazyVals$Waiting
      77: astore        5
      79: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      82: aload_0
      83: getstatic     #94                 // Field OFFSET$1:J
      86: aload         5
      88: aload_2
      89: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      92: pop
      93: aload         5
      95: invokevirtual #129                // Method scala/runtime/LazyVals$Waiting.countDown:()V
      98: aload         4
     100: athrow
     101: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     104: aload_0
     105: getstatic     #94                 // Field OFFSET$1:J
     108: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
     111: aload_2
     112: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     115: ifne          146
     118: aload_0
     119: getfield      #106                // Field logger$lzy1:Ljava/lang/Object;
     122: checkcast     #27                 // class scala/runtime/LazyVals$Waiting
     125: astore        5
     127: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     130: aload_0
     131: getstatic     #94                 // Field OFFSET$1:J
     134: aload         5
     136: aload_2
     137: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     140: pop
     141: aload         5
     143: invokevirtual #129                // Method scala/runtime/LazyVals$Waiting.countDown:()V
     146: aload_3
     147: areturn
     148: goto          0
     151: aload_1
     152: instanceof    #21                 // class scala/runtime/LazyVals$LazyValControlState
     155: ifeq          206
     158: aload_1
     159: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
     162: if_acmpne     187
     165: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     168: aload_0
     169: getstatic     #94                 // Field OFFSET$1:J
     172: aload_1
     173: new           #27                 // class scala/runtime/LazyVals$Waiting
     176: dup
     177: invokespecial #130                // Method scala/runtime/LazyVals$Waiting."<init>":()V
     180: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     183: pop
     184: goto          0
     187: aload_1
     188: instanceof    #27                 // class scala/runtime/LazyVals$Waiting
     191: ifeq          204
     194: aload_1
     195: checkcast     #27                 // class scala/runtime/LazyVals$Waiting
     198: invokevirtual #133                // Method scala/runtime/LazyVals$Waiting.await:()V
     201: goto          0
     204: aconst_null
     205: areturn
     206: aload_1
     207: areturn
    Exception table:
       from    to  target type
          30    51    51   any

  public byte[] pack(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // InterfaceMethod wvlet/airframe/codec/MessageCodec.pack$:(Lwvlet/airframe/codec/MessageCodec;Ljava/lang/Object;)[B
       5: areturn

  public java.lang.Object unpack(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #149                // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpack$:(Lwvlet/airframe/codec/MessageCodec;[B)Ljava/lang/Object;
       5: areturn

  public byte[] toMsgPack(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #154                // InterfaceMethod wvlet/airframe/codec/MessageCodec.toMsgPack$:(Lwvlet/airframe/codec/MessageCodec;Ljava/lang/Object;)[B
       5: areturn

  public java.lang.String toJson(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #160                // InterfaceMethod wvlet/airframe/codec/MessageCodec.toJson$:(Lwvlet/airframe/codec/MessageCodec;Ljava/lang/Object;)Ljava/lang/String;
       5: areturn

  public wvlet.airframe.json.JSON$JSONObject toJSONObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #166                // InterfaceMethod wvlet/airframe/codec/MessageCodec.toJSONObject$:(Lwvlet/airframe/codec/MessageCodec;Ljava/lang/Object;)Lwvlet/airframe/json/JSON$JSONObject;
       5: areturn

  public scala.Option unpackBytes(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #172                // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpackBytes$:(Lwvlet/airframe/codec/MessageCodec;[B)Lscala/Option;
       5: areturn

  public scala.Option unpackBytes(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #178                // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpackBytes$:(Lwvlet/airframe/codec/MessageCodec;[BII)Lscala/Option;
       7: areturn

  public java.lang.Object fromMsgPack(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #183                // InterfaceMethod wvlet/airframe/codec/MessageCodec.fromMsgPack$:(Lwvlet/airframe/codec/MessageCodec;[B)Ljava/lang/Object;
       5: areturn

  public scala.Option unpackMsgPack(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #187                // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpackMsgPack$:(Lwvlet/airframe/codec/MessageCodec;[B)Lscala/Option;
       5: areturn

  public scala.Option unpackMsgPack(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #189                // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpackMsgPack$:(Lwvlet/airframe/codec/MessageCodec;[BII)Lscala/Option;
       7: areturn

  public scala.Option unpackJson(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #196                // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpackJson$:(Lwvlet/airframe/codec/MessageCodec;Ljava/lang/String;)Lscala/Option;
       5: areturn

  public java.lang.Object fromJson(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #203                // InterfaceMethod wvlet/airframe/codec/MessageCodec.fromJson$:(Lwvlet/airframe/codec/MessageCodec;Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fromJson(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #205                // InterfaceMethod wvlet/airframe/codec/MessageCodec.fromJson$:(Lwvlet/airframe/codec/MessageCodec;[B)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fromMap(scala.collection.immutable.Map);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #212                // InterfaceMethod wvlet/airframe/codec/MessageCodec.fromMap$:(Lwvlet/airframe/codec/MessageCodec;Lscala/collection/immutable/Map;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object fromString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #218                // InterfaceMethod wvlet/airframe/codec/MessageCodec.fromString$:(Lwvlet/airframe/codec/MessageCodec;Ljava/lang/String;)Ljava/lang/Object;
       5: areturn

  public scala.collection.Iterator productIterator();
    Code:
       0: aload_0
       1: invokestatic  #224                // InterfaceMethod scala/Product.productIterator$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public scala.collection.Iterator productElementNames();
    Code:
       0: aload_0
       1: invokestatic  #228                // InterfaceMethod scala/Product.productElementNames$:(Lscala/Product;)Lscala/collection/Iterator;
       4: areturn

  public int hashCode();
    Code:
       0: getstatic     #235                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #239                // Method scala/runtime/ScalaRunTime$._hashCode:(Lscala/Product;)I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     104
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class wvlet/airframe/codec/LazyCodec
      11: ifeq          97
      14: aload_2
      15: checkcast     #2                  // class wvlet/airframe/codec/LazyCodec
      18: astore_3
      19: aload_0
      20: invokevirtual #245                // Method surface:()Lwvlet/airframe/surface/Surface;
      23: aload_3
      24: invokevirtual #245                // Method surface:()Lwvlet/airframe/surface/Surface;
      27: astore        4
      29: dup
      30: ifnonnull     42
      33: pop
      34: aload         4
      36: ifnull        50
      39: goto          93
      42: aload         4
      44: invokevirtual #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          93
      50: aload_0
      51: invokevirtual #250                // Method codecFactory:()Lwvlet/airframe/codec/MessageCodecFactory;
      54: aload_3
      55: invokevirtual #250                // Method codecFactory:()Lwvlet/airframe/codec/MessageCodecFactory;
      58: astore        5
      60: dup
      61: ifnonnull     73
      64: pop
      65: aload         5
      67: ifnull        81
      70: goto          93
      73: aload         5
      75: invokevirtual #247                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      78: ifeq          93
      81: aload_3
      82: aload_0
      83: invokevirtual #253                // Method canEqual:(Ljava/lang/Object;)Z
      86: ifeq          93
      89: iconst_1
      90: goto          94
      93: iconst_0
      94: goto          101
      97: iconst_0
      98: goto          101
     101: ifeq          108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: ireturn

  public java.lang.String toString();
    Code:
       0: getstatic     #235                // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #263                // Method scala/runtime/ScalaRunTime$._toString:(Lscala/Product;)Ljava/lang/String;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class wvlet/airframe/codec/LazyCodec
       4: ireturn

  public int productArity();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc_w         #268                // String LazyCodec
       3: areturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     12
       7: aload_0
       8: invokevirtual #274                // Method _1:()Lwvlet/airframe/surface/Surface;
      11: areturn
      12: iconst_1
      13: iload_2
      14: if_icmpne     22
      17: aload_0
      18: invokevirtual #277                // Method _2:()Lwvlet/airframe/codec/MessageCodecFactory;
      21: areturn
      22: new           #279                // class java/lang/IndexOutOfBoundsException
      25: dup
      26: iload_1
      27: invokestatic  #285                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: invokevirtual #289                // Method java/lang/Integer.toString:()Ljava/lang/String;
      33: invokespecial #292                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      36: athrow

  public java.lang.String productElementName(int);
    Code:
       0: iload_1
       1: istore_2
       2: iconst_0
       3: iload_2
       4: if_icmpne     11
       7: ldc_w         #295                // String surface
      10: areturn
      11: iconst_1
      12: iload_2
      13: if_icmpne     20
      16: ldc_w         #296                // String codecFactory
      19: areturn
      20: new           #279                // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #285                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #289                // Method java/lang/Integer.toString:()Ljava/lang/String;
      31: invokespecial #292                // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow

  public wvlet.airframe.surface.Surface surface();
    Code:
       0: aload_0
       1: getfield      #68                 // Field surface:Lwvlet/airframe/surface/Surface;
       4: areturn

  public wvlet.airframe.codec.MessageCodecFactory codecFactory();
    Code:
       0: aload_0
       1: getfield      #70                 // Field codecFactory:Lwvlet/airframe/codec/MessageCodecFactory;
       4: areturn

  private wvlet.airframe.codec.MessageCodec<A> ref();
    Code:
       0: aload_0
       1: getfield      #301                // Field ref$lzy1:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: instanceof    #11                 // class wvlet/airframe/codec/MessageCodec
       9: ifeq          17
      12: aload_1
      13: checkcast     #11                 // class wvlet/airframe/codec/MessageCodec
      16: areturn
      17: aload_1
      18: getstatic     #111                // Field scala/runtime/LazyVals$NullValue$.MODULE$:Lscala/runtime/LazyVals$NullValue$;
      21: if_acmpne     26
      24: aconst_null
      25: areturn
      26: aload_0
      27: invokespecial #304                // Method ref$lzyINIT1:()Ljava/lang/Object;
      30: checkcast     #11                 // class wvlet/airframe/codec/MessageCodec
      33: areturn

  private java.lang.Object ref$lzyINIT1();
    Code:
       0: aload_0
       1: getfield      #301                // Field ref$lzy1:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnonnull     165
       9: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      12: aload_0
      13: getstatic     #97                 // Field OFFSET$0:J
      16: aconst_null
      17: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
      20: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      23: ifeq          162
      26: aconst_null
      27: astore_2
      28: aconst_null
      29: astore_3
      30: aload_0
      31: invokevirtual #250                // Method codecFactory:()Lwvlet/airframe/codec/MessageCodecFactory;
      34: aload_0
      35: invokevirtual #245                // Method surface:()Lwvlet/airframe/surface/Surface;
      38: aload_0
      39: invokevirtual #250                // Method codecFactory:()Lwvlet/airframe/codec/MessageCodecFactory;
      42: invokevirtual #308                // Method wvlet/airframe/codec/MessageCodecFactory.ofSurface$default$2:()Lscala/collection/immutable/Set;
      45: invokevirtual #312                // Method wvlet/airframe/codec/MessageCodecFactory.ofSurface:(Lwvlet/airframe/surface/Surface;Lscala/collection/immutable/Set;)Lwvlet/airframe/codec/MessageCodec;
      48: astore_3
      49: aload_3
      50: ifnonnull     60
      53: getstatic     #111                // Field scala/runtime/LazyVals$NullValue$.MODULE$:Lscala/runtime/LazyVals$NullValue$;
      56: astore_2
      57: goto          62
      60: aload_3
      61: astore_2
      62: goto          115
      65: astore        4
      67: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      70: aload_0
      71: getstatic     #97                 // Field OFFSET$0:J
      74: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
      77: aload_2
      78: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
      81: ifne          112
      84: aload_0
      85: getfield      #301                // Field ref$lzy1:Ljava/lang/Object;
      88: checkcast     #27                 // class scala/runtime/LazyVals$Waiting
      91: astore        5
      93: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
      96: aload_0
      97: getstatic     #97                 // Field OFFSET$0:J
     100: aload         5
     102: aload_2
     103: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     106: pop
     107: aload         5
     109: invokevirtual #129                // Method scala/runtime/LazyVals$Waiting.countDown:()V
     112: aload         4
     114: athrow
     115: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     118: aload_0
     119: getstatic     #97                 // Field OFFSET$0:J
     122: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
     125: aload_2
     126: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     129: ifne          160
     132: aload_0
     133: getfield      #301                // Field ref$lzy1:Ljava/lang/Object;
     136: checkcast     #27                 // class scala/runtime/LazyVals$Waiting
     139: astore        5
     141: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     144: aload_0
     145: getstatic     #97                 // Field OFFSET$0:J
     148: aload         5
     150: aload_2
     151: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     154: pop
     155: aload         5
     157: invokevirtual #129                // Method scala/runtime/LazyVals$Waiting.countDown:()V
     160: aload_3
     161: areturn
     162: goto          0
     165: aload_1
     166: instanceof    #21                 // class scala/runtime/LazyVals$LazyValControlState
     169: ifeq          220
     172: aload_1
     173: getstatic     #118                // Field scala/runtime/LazyVals$Evaluating$.MODULE$:Lscala/runtime/LazyVals$Evaluating$;
     176: if_acmpne     201
     179: getstatic     #81                 // Field scala/runtime/LazyVals$.MODULE$:Lscala/runtime/LazyVals$;
     182: aload_0
     183: getstatic     #97                 // Field OFFSET$0:J
     186: aload_1
     187: new           #27                 // class scala/runtime/LazyVals$Waiting
     190: dup
     191: invokespecial #130                // Method scala/runtime/LazyVals$Waiting."<init>":()V
     194: invokevirtual #122                // Method scala/runtime/LazyVals$.objCAS:(Ljava/lang/Object;JLjava/lang/Object;Ljava/lang/Object;)Z
     197: pop
     198: goto          0
     201: aload_1
     202: instanceof    #27                 // class scala/runtime/LazyVals$Waiting
     205: ifeq          218
     208: aload_1
     209: checkcast     #27                 // class scala/runtime/LazyVals$Waiting
     212: invokevirtual #133                // Method scala/runtime/LazyVals$Waiting.await:()V
     215: goto          0
     218: aconst_null
     219: areturn
     220: aload_1
     221: areturn
    Exception table:
       from    to  target type
          30    65    65   any

  public void pack(wvlet.airframe.msgpack.spi.Packer, A);
    Code:
       0: aload_0
       1: invokespecial #317                // Method ref:()Lwvlet/airframe/codec/MessageCodec;
       4: aload_1
       5: aload_2
       6: invokeinterface #319,  3          // InterfaceMethod wvlet/airframe/codec/MessageCodec.pack:(Lwvlet/airframe/msgpack/spi/Packer;Ljava/lang/Object;)V
      11: return

  public void unpack(wvlet.airframe.msgpack.spi.Unpacker, wvlet.airframe.codec.MessageContext);
    Code:
       0: aload_0
       1: invokespecial #317                // Method ref:()Lwvlet/airframe/codec/MessageCodec;
       4: aload_1
       5: aload_2
       6: invokeinterface #324,  3          // InterfaceMethod wvlet/airframe/codec/MessageCodec.unpack:(Lwvlet/airframe/msgpack/spi/Unpacker;Lwvlet/airframe/codec/MessageContext;)V
      11: return

  public <A> wvlet.airframe.codec.LazyCodec<A> copy(wvlet.airframe.surface.Surface, wvlet.airframe.codec.MessageCodecFactory);
    Code:
       0: new           #2                  // class wvlet/airframe/codec/LazyCodec
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #329                // Method "<init>":(Lwvlet/airframe/surface/Surface;Lwvlet/airframe/codec/MessageCodecFactory;)V
       9: areturn

  public <A> wvlet.airframe.surface.Surface copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #245                // Method surface:()Lwvlet/airframe/surface/Surface;
       4: areturn

  public <A> wvlet.airframe.codec.MessageCodecFactory copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #250                // Method codecFactory:()Lwvlet/airframe/codec/MessageCodecFactory;
       4: areturn

  public wvlet.airframe.surface.Surface _1();
    Code:
       0: aload_0
       1: invokevirtual #245                // Method surface:()Lwvlet/airframe/surface/Surface;
       4: areturn

  public wvlet.airframe.codec.MessageCodecFactory _2();
    Code:
       0: aload_0
       1: invokevirtual #250                // Method codecFactory:()Lwvlet/airframe/codec/MessageCodecFactory;
       4: areturn
}
