Compiled from "LibertyProperty.java"
public class net.wasdev.wlp.common.arquillian.objects.LibertyProperty {
  public net.wasdev.wlp.common.arquillian.objects.LibertyProperty();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Map<net.wasdev.wlp.common.arquillian.objects.LibertyProperty$LibertyPropertyI, java.lang.String> getArquillianProperties(java.util.Map<java.lang.String, java.lang.String>, java.lang.Class<?>) throws net.wasdev.wlp.common.arquillian.util.ArquillianConfigurationException;
    Code:
       0: new           #2                  // class java/util/HashMap
       3: dup
       4: invokespecial #3                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: ifnull        109
      12: aload_0
      13: invokeinterface #4,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      18: ifne          109
      21: aload_0
      22: invokeinterface #5,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      27: invokeinterface #6,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_3
      33: aload_3
      34: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          109
      42: aload_3
      43: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #9                  // class java/util/Map$Entry
      51: astore        4
      53: aload         4
      55: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      60: checkcast     #11                 // class java/lang/String
      63: astore        5
      65: aload         4
      67: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #11                 // class java/lang/String
      75: astore        6
      77: aload         5
      79: ifnull        106
      82: aload         6
      84: ifnull        106
      87: aload         5
      89: aload_1
      90: invokestatic  #13                 // Method getArquillianProperty:(Ljava/lang/String;Ljava/lang/Class;)Lnet/wasdev/wlp/common/arquillian/objects/LibertyProperty$LibertyPropertyI;
      93: astore        7
      95: aload_2
      96: aload         7
      98: aload         6
     100: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: goto          33
     109: aload_2
     110: areturn

  private static net.wasdev.wlp.common.arquillian.objects.LibertyProperty$LibertyPropertyI getArquillianProperty(java.lang.String, java.lang.Class<?>) throws net.wasdev.wlp.common.arquillian.util.ArquillianConfigurationException;
    Code:
       0: aload_1
       1: ldc           #15                 // class net/wasdev/wlp/common/arquillian/objects/LibertyManagedObject$LibertyManagedProperty
       3: if_acmpne     11
       6: aload_0
       7: invokestatic  #16                 // Method net/wasdev/wlp/common/arquillian/objects/LibertyManagedObject$LibertyManagedProperty.valueOf:(Ljava/lang/String;)Lnet/wasdev/wlp/common/arquillian/objects/LibertyManagedObject$LibertyManagedProperty;
      10: areturn
      11: aload_1
      12: ldc           #17                 // class net/wasdev/wlp/common/arquillian/objects/LibertyRemoteObject$LibertyRemoteProperty
      14: if_acmpne     22
      17: aload_0
      18: invokestatic  #18                 // Method net/wasdev/wlp/common/arquillian/objects/LibertyRemoteObject$LibertyRemoteProperty.valueOf:(Ljava/lang/String;)Lnet/wasdev/wlp/common/arquillian/objects/LibertyRemoteObject$LibertyRemoteProperty;
      21: areturn
      22: goto          58
      25: astore_2
      26: new           #20                 // class net/wasdev/wlp/common/arquillian/util/ArquillianConfigurationException
      29: dup
      30: new           #21                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #23                 // String Property \"
      39: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #25                 // String \" in arquillianProperties does not exist. You probably have a typo.
      48: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #27                 // Method net/wasdev/wlp/common/arquillian/util/ArquillianConfigurationException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: new           #20                 // class net/wasdev/wlp/common/arquillian/util/ArquillianConfigurationException
      61: dup
      62: ldc           #28                 // String This should never happen.
      64: invokespecial #27                 // Method net/wasdev/wlp/common/arquillian/util/ArquillianConfigurationException."<init>":(Ljava/lang/String;)V
      67: athrow
    Exception table:
       from    to  target type
           0    10    25   Class java/lang/IllegalArgumentException
          11    21    25   Class java/lang/IllegalArgumentException

  protected static void write(java.lang.StringBuilder, java.io.File) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method java/io/File.getParentFile:()Ljava/io/File;
       4: astore_2
       5: aload_2
       6: invokevirtual #30                 // Method java/io/File.exists:()Z
       9: ifne          17
      12: aload_2
      13: invokevirtual #31                 // Method java/io/File.mkdirs:()Z
      16: pop
      17: new           #32                 // class java/io/FileWriter
      20: dup
      21: aload_1
      22: invokespecial #33                 // Method java/io/FileWriter."<init>":(Ljava/io/File;)V
      25: astore_3
      26: aload_3
      27: aload_0
      28: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokevirtual #34                 // Method java/io/FileWriter.write:(Ljava/lang/String;)V
      34: aload_3
      35: invokevirtual #35                 // Method java/io/FileWriter.close:()V
      38: return
}
