Compiled from "PersistS3.java"
public final class water.persist.PersistS3 extends water.persist.Persist {
  private static final java.lang.String HELP;

  private static final java.lang.String KEY_PREFIX;

  private static final int KEY_PREFIX_LEN;

  private static final java.lang.Object _lock;

  private static volatile com.amazonaws.services.s3.AmazonS3 _s3;

  public static final java.lang.String S3_SOCKET_TIMEOUT_PROP;

  public static final java.lang.String S3_CONNECTION_TIMEOUT_PROP;

  public static final java.lang.String S3_MAX_ERROR_RETRY_PROP;

  public static final java.lang.String S3_MAX_HTTP_CONNECTIONS_PROP;

  public static final java.lang.String S3_FORCE_HTTP;

  public static final java.lang.String S3_END_POINT;

  public static final java.lang.String S3_REGION;

  public static final java.lang.String S3_ENABLE_PATH_STYLE;

  water.persist.PersistS3$Cache _bucketCache;

  java.util.HashMap<java.lang.String, water.persist.PersistS3$KeyCache> _keyCaches;

  static final boolean $assertionsDisabled;

  public water.persist.PersistS3();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method water/persist/Persist."<init>":()V
       4: aload_0
       5: new           #4                  // class water/persist/PersistS3$Cache
       8: dup
       9: aconst_null
      10: invokespecial #5                  // Method water/persist/PersistS3$Cache."<init>":(Lwater/persist/PersistS3$1;)V
      13: putfield      #6                  // Field _bucketCache:Lwater/persist/PersistS3$Cache;
      16: aload_0
      17: new           #7                  // class java/util/HashMap
      20: dup
      21: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      24: putfield      #9                  // Field _keyCaches:Ljava/util/HashMap;
      27: return

  public static com.amazonaws.services.s3.AmazonS3 getClient();
    Code:
       0: getstatic     #10                 // Field _s3:Lcom/amazonaws/services/s3/AmazonS3;
       3: ifnonnull     117
       6: getstatic     #11                 // Field _lock:Ljava/lang/Object;
       9: dup
      10: astore_0
      11: monitorenter
      12: getstatic     #10                 // Field _s3:Lcom/amazonaws/services/s3/AmazonS3;
      15: ifnonnull     107
      18: new           #12                 // class water/persist/PersistS3$H2OAWSCredentialsProviderChain
      21: dup
      22: invokespecial #13                 // Method water/persist/PersistS3$H2OAWSCredentialsProviderChain."<init>":()V
      25: astore_1
      26: invokestatic  #14                 // Method s3ClientCfg:()Lcom/amazonaws/ClientConfiguration;
      29: astore_2
      30: new           #15                 // class com/amazonaws/services/s3/AmazonS3Client
      33: dup
      34: aload_1
      35: aload_2
      36: invokespecial #16                 // Method com/amazonaws/services/s3/AmazonS3Client."<init>":(Lcom/amazonaws/auth/AWSCredentialsProvider;Lcom/amazonaws/ClientConfiguration;)V
      39: invokestatic  #17                 // Method configureClient:(Lcom/amazonaws/services/s3/AmazonS3Client;)Lcom/amazonaws/services/s3/AmazonS3Client;
      42: putstatic     #10                 // Field _s3:Lcom/amazonaws/services/s3/AmazonS3;
      45: goto          107
      48: astore_1
      49: aload_1
      50: invokevirtual #19                 // Method java/lang/Throwable.printStackTrace:()V
      53: new           #20                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      60: astore_2
      61: aload_2
      62: new           #20                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      69: aload_1
      70: invokevirtual #22                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      73: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #24                 // String \n
      78: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_2
      89: ldc           #26                 // String Unable to load S3 credentials.
      91: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: new           #27                 // class java/lang/RuntimeException
      98: dup
      99: aload_2
     100: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #28                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: aload_0
     108: monitorexit
     109: goto          117
     112: astore_3
     113: aload_0
     114: monitorexit
     115: aload_3
     116: athrow
     117: getstatic     #10                 // Field _s3:Lcom/amazonaws/services/s3/AmazonS3;
     120: areturn
    Exception table:
       from    to  target type
          18    45    48   Class java/lang/Throwable
          12   109   112   any
         112   115   112   any

  public java.io.InputStream open(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #29                 // Method decodePath:(Ljava/lang/String;)[Ljava/lang/String;
       4: astore_2
       5: new           #30                 // class com/amazonaws/services/s3/model/GetObjectRequest
       8: dup
       9: aload_2
      10: iconst_0
      11: aaload
      12: aload_2
      13: iconst_1
      14: aaload
      15: invokespecial #31                 // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      18: astore_3
      19: invokestatic  #32                 // Method getClient:()Lcom/amazonaws/services/s3/AmazonS3;
      22: aload_3
      23: invokeinterface #33,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
      28: astore        4
      30: aload         4
      32: invokevirtual #34                 // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      35: areturn

  public static java.io.InputStream openStream(water.Key, water.util.RIStream$ProgressMonitor) throws java.io.IOException;
    Code:
       0: new           #35                 // class water/persist/PersistS3$H2SO3InputStream
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #36                 // Method water/persist/PersistS3$H2SO3InputStream."<init>":(Lwater/Key;Lwater/util/RIStream$ProgressMonitor;)V
       9: areturn

  public static water.Key loadKey(com.amazonaws.services.s3.model.ObjectListing, com.amazonaws.services.s3.model.S3ObjectSummary) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method com/amazonaws/services/s3/model/S3ObjectSummary.getBucketName:()Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: invokevirtual #38                 // Method com/amazonaws/services/s3/model/ObjectListing.getBucketName:()Ljava/lang/String;
      11: goto          18
      14: aload_1
      15: invokevirtual #37                 // Method com/amazonaws/services/s3/model/S3ObjectSummary.getBucketName:()Ljava/lang/String;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokevirtual #39                 // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
      24: invokestatic  #40                 // Method encodePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: aload_1
      28: invokevirtual #41                 // Method com/amazonaws/services/s3/model/S3ObjectSummary.getSize:()J
      31: invokestatic  #42                 // Method water/fvec/S3FileVec.make:(Ljava/lang/String;J)Lwater/Key;
      34: areturn

  private static void processListing(com.amazonaws.services.s3.model.ObjectListing, java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>, boolean);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method com/amazonaws/services/s3/model/ObjectListing.getObjectSummaries:()Ljava/util/List;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        4
      11: aload         4
      13: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          86
      21: aload         4
      23: invokeinterface #46,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #47                 // class com/amazonaws/services/s3/model/S3ObjectSummary
      31: astore        5
      33: iload_3
      34: ifeq          58
      37: aload_0
      38: aload         5
      40: invokestatic  #48                 // Method loadKey:(Lcom/amazonaws/services/s3/model/ObjectListing;Lcom/amazonaws/services/s3/model/S3ObjectSummary;)Lwater/Key;
      43: astore        6
      45: aload_1
      46: aload         6
      48: invokevirtual #49                 // Method water/Key.toString:()Ljava/lang/String;
      51: invokevirtual #50                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          68
      58: aload_1
      59: aload         5
      61: invokevirtual #39                 // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
      64: invokevirtual #50                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      67: pop
      68: goto          83
      71: astore        6
      73: aload_2
      74: aload         5
      76: invokevirtual #39                 // Method com/amazonaws/services/s3/model/S3ObjectSummary.getKey:()Ljava/lang/String;
      79: invokevirtual #50                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      82: pop
      83: goto          11
      86: return
    Exception table:
       from    to  target type
          33    68    71   Class java/io/IOException

  public void importFiles(java.lang.String, java.lang.String, java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>);
    Code:
       0: iconst_1
       1: anewarray     #52                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: new           #20                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #53                 // String ImportS3 processing (
      15: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_1
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #54                 // String )
      24: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: aastore
      31: invokestatic  #55                 // Method water/util/Log.info:([Ljava/lang/Object;)V
      34: invokestatic  #32                 // Method getClient:()Lcom/amazonaws/services/s3/AmazonS3;
      37: astore        7
      39: aload_1
      40: invokestatic  #29                 // Method decodePath:(Ljava/lang/String;)[Ljava/lang/String;
      43: astore        8
      45: aload         7
      47: aload         8
      49: iconst_0
      50: aaload
      51: aload         8
      53: iconst_1
      54: aaload
      55: invokeinterface #56,  3           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.listObjects:(Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ObjectListing;
      60: astore        9
      62: aload         9
      64: aload_3
      65: aload         5
      67: iconst_1
      68: invokestatic  #2                  // Method processListing:(Lcom/amazonaws/services/s3/model/ObjectListing;Ljava/util/ArrayList;Ljava/util/ArrayList;Z)V
      71: aload         9
      73: invokevirtual #57                 // Method com/amazonaws/services/s3/model/ObjectListing.isTruncated:()Z
      76: ifeq          102
      79: aload         7
      81: aload         9
      83: invokeinterface #58,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.listNextBatchOfObjects:(Lcom/amazonaws/services/s3/model/ObjectListing;)Lcom/amazonaws/services/s3/model/ObjectListing;
      88: astore        9
      90: aload         9
      92: aload_3
      93: aload         5
      95: iconst_1
      96: invokestatic  #2                  // Method processListing:(Lcom/amazonaws/services/s3/model/ObjectListing;Ljava/util/ArrayList;Ljava/util/ArrayList;Z)V
      99: goto          71
     102: aload         4
     104: aload_3
     105: invokevirtual #59                 // Method java/util/ArrayList.addAll:(Ljava/util/Collection;)Z
     108: pop
     109: return

  public byte[] load(water.Value);
    Code:
       0: invokestatic  #60                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_2
       4: aload_1
       5: getfield      #61                 // Field water/Value._max:I
       8: invokestatic  #62                 // Method water/MemoryManager.malloc1:(I)[B
      11: astore        4
      13: aload_1
      14: getfield      #63                 // Field water/Value._key:Lwater/Key;
      17: astore        5
      19: lconst_0
      20: lstore        6
      22: aload         5
      24: getfield      #64                 // Field water/Key._kb:[B
      27: iconst_0
      28: baload
      29: iconst_5
      30: if_icmpne     40
      33: aload         5
      35: invokestatic  #66                 // Method water/fvec/FileVec.chunkOffset:(Lwater/Key;)J
      38: lstore        6
      40: aconst_null
      41: astore        8
      43: invokestatic  #67                 // Method java/lang/System.nanoTime:()J
      46: lstore        9
      48: aload         5
      50: lload         6
      52: aload_1
      53: getfield      #61                 // Field water/Value._max:I
      56: i2l
      57: invokestatic  #68                 // Method getObjectForKey:(Lwater/Key;JJ)Lcom/amazonaws/services/s3/model/S3Object;
      60: invokevirtual #34                 // Method com/amazonaws/services/s3/model/S3Object.getObjectContent:()Lcom/amazonaws/services/s3/model/S3ObjectInputStream;
      63: astore        8
      65: aload         8
      67: aload         4
      69: invokestatic  #69                 // Method com/google/common/io/ByteStreams.readFully:(Ljava/io/InputStream;[B)V
      72: getstatic     #70                 // Field $assertionsDisabled:Z
      75: ifne          93
      78: aload_1
      79: invokevirtual #71                 // Method water/Value.isPersisted:()Z
      82: ifne          93
      85: new           #72                 // class java/lang/AssertionError
      88: dup
      89: invokespecial #73                 // Method java/lang/AssertionError."<init>":()V
      92: athrow
      93: aload         4
      95: astore        11
      97: aload         8
      99: ifnull        107
     102: aload         8
     104: invokevirtual #74                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.close:()V
     107: goto          112
     110: astore        12
     112: aload         11
     114: areturn
     115: astore        9
     117: aload         9
     119: iconst_0
     120: invokestatic  #76                 // Method ignoreAndWait:(Ljava/lang/Exception;Z)V
     123: aload         8
     125: ifnull        133
     128: aload         8
     130: invokevirtual #74                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.close:()V
     133: goto          213
     136: astore        9
     138: goto          213
     141: astore        9
     143: aload         9
     145: iconst_0
     146: invokestatic  #76                 // Method ignoreAndWait:(Ljava/lang/Exception;Z)V
     149: aload         8
     151: ifnull        159
     154: aload         8
     156: invokevirtual #74                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.close:()V
     159: goto          213
     162: astore        9
     164: goto          213
     167: astore        9
     169: aload         9
     171: iconst_1
     172: invokestatic  #76                 // Method ignoreAndWait:(Ljava/lang/Exception;Z)V
     175: aload         8
     177: ifnull        185
     180: aload         8
     182: invokevirtual #74                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.close:()V
     185: goto          213
     188: astore        9
     190: goto          213
     193: astore        13
     195: aload         8
     197: ifnull        205
     200: aload         8
     202: invokevirtual #74                 // Method com/amazonaws/services/s3/model/S3ObjectInputStream.close:()V
     205: goto          210
     208: astore        14
     210: aload         13
     212: athrow
     213: goto          43
    Exception table:
       from    to  target type
          97   107   110   Class java/io/IOException
          43    97   115   Class java/io/EOFException
         123   133   136   Class java/io/IOException
          43    97   141   Class java/net/SocketTimeoutException
         149   159   162   Class java/io/IOException
          43    97   167   Class java/io/IOException
         175   185   188   Class java/io/IOException
          43    97   193   any
         115   123   193   any
         141   149   193   any
         167   175   193   any
         195   205   208   Class java/io/IOException
         193   195   193   any

  private static void ignoreAndWait(java.lang.Exception, boolean);
    Code:
       0: aload_0
       1: ldc           #78                 // String Hit the S3 reset problem, waiting and retrying...
       3: iload_1
       4: invokestatic  #79                 // Method water/util/Log.ignore:(Ljava/lang/Throwable;Ljava/lang/String;Z)V
       7: ldc2_w        #80                 // long 500l
      10: invokestatic  #82                 // Method java/lang/Thread.sleep:(J)V
      13: goto          17
      16: astore_2
      17: return
    Exception table:
       from    to  target type
           7    13    16   Class java/lang/InterruptedException

  public void store(water.Value);
    Code:
       0: aload_1
       1: getfield      #63                 // Field water/Value._key:Lwater/Key;
       4: invokevirtual #84                 // Method water/Key.home:()Z
       7: ifne          11
      10: return
      11: invokestatic  #85                 // Method water/H2O.unimpl:()Lwater/exceptions/H2OIllegalArgumentException;
      14: athrow

  public static water.Key encodeKey(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #86                 // Method encodeKeyImpl:(Ljava/lang/String;Ljava/lang/String;)Lwater/Key;
       5: astore_2
       6: aload_2
       7: areturn

  public static java.lang.String[] decodeKey(water.Key);
    Code:
       0: aload_0
       1: invokestatic  #87                 // Method decodeKeyImpl:(Lwater/Key;)[Ljava/lang/String;
       4: areturn

  private static java.lang.String encodePath(java.lang.String, java.lang.String);
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #89                 // String s3://
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: bipush        47
      18: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn

  private static water.Key encodeKeyImpl(java.lang.String, java.lang.String);
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #89                 // String s3://
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: bipush        47
      18: invokevirtual #90                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokestatic  #91                 // Method water/Key.make:(Ljava/lang/String;)Lwater/Key;
      31: areturn

  private static java.lang.String[] decodePath(java.lang.String);
    Code:
       0: getstatic     #70                 // Field $assertionsDisabled:Z
       3: ifne          51
       6: aload_0
       7: ldc           #89                 // String s3://
       9: invokevirtual #92                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          24
      15: aload_0
      16: bipush        47
      18: invokevirtual #93                 // Method java/lang/String.indexOf:(I)I
      21: ifge          51
      24: new           #72                 // class java/lang/AssertionError
      27: dup
      28: new           #20                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #94                 // String Attempting to decode non s3 key:
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #95                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      50: athrow
      51: aload_0
      52: getstatic     #96                 // Field KEY_PREFIX_LEN:I
      55: invokevirtual #97                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: astore_0
      59: aload_0
      60: bipush        47
      62: invokevirtual #93                 // Method java/lang/String.indexOf:(I)I
      65: istore_1
      66: iload_1
      67: ifge          83
      70: iconst_2
      71: anewarray     #98                 // class java/lang/String
      74: dup
      75: iconst_0
      76: aload_0
      77: aastore
      78: dup
      79: iconst_1
      80: aconst_null
      81: aastore
      82: areturn
      83: aload_0
      84: iconst_0
      85: iload_1
      86: invokevirtual #99                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      89: astore_2
      90: aload_0
      91: iload_1
      92: iconst_1
      93: iadd
      94: invokevirtual #97                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      97: astore_3
      98: iconst_2
      99: anewarray     #98                 // class java/lang/String
     102: dup
     103: iconst_0
     104: aload_2
     105: aastore
     106: dup
     107: iconst_1
     108: aload_3
     109: aastore
     110: areturn

  private static java.lang.String[] decodeKeyImpl(water.Key);
    Code:
       0: new           #98                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #64                 // Field water/Key._kb:[B
       8: iconst_0
       9: baload
      10: iconst_5
      11: if_icmpne     31
      14: aload_0
      15: getfield      #64                 // Field water/Key._kb:[B
      18: bipush        10
      20: aload_0
      21: getfield      #64                 // Field water/Key._kb:[B
      24: arraylength
      25: invokestatic  #101                // Method java/util/Arrays.copyOfRange:([BII)[B
      28: goto          35
      31: aload_0
      32: getfield      #64                 // Field water/Key._kb:[B
      35: invokespecial #102                // Method java/lang/String."<init>":([B)V
      38: astore_1
      39: aload_1
      40: invokestatic  #29                 // Method decodePath:(Ljava/lang/String;)[Ljava/lang/String;
      43: areturn

  private static com.amazonaws.services.s3.model.S3Object getObjectForKey(water.Key, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokestatic  #103                // Method decodeKey:(Lwater/Key;)[Ljava/lang/String;
       4: astore        5
       6: new           #30                 // class com/amazonaws/services/s3/model/GetObjectRequest
       9: dup
      10: aload         5
      12: iconst_0
      13: aaload
      14: aload         5
      16: iconst_1
      17: aaload
      18: invokespecial #31                 // Method com/amazonaws/services/s3/model/GetObjectRequest."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      21: astore        6
      23: aload         6
      25: lload_1
      26: lload_1
      27: lload_3
      28: ladd
      29: lconst_1
      30: lsub
      31: invokevirtual #104                // Method com/amazonaws/services/s3/model/GetObjectRequest.setRange:(JJ)V
      34: invokestatic  #32                 // Method getClient:()Lcom/amazonaws/services/s3/AmazonS3;
      37: aload         6
      39: invokeinterface #33,  2           // InterfaceMethod com/amazonaws/services/s3/AmazonS3.getObject:(Lcom/amazonaws/services/s3/model/GetObjectRequest;)Lcom/amazonaws/services/s3/model/S3Object;
      44: areturn

  private static com.amazonaws.services.s3.model.ObjectMetadata getObjectMetadataForKey(water.Key);
    Code:
       0: aload_0
       1: invokestatic  #103                // Method decodeKey:(Lwater/Key;)[Ljava/lang/String;
       4: astore_1
       5: getstatic     #70                 // Field $assertionsDisabled:Z
       8: ifne          25
      11: aload_1
      12: arraylength
      13: iconst_2
      14: if_icmpeq     25
      17: new           #72                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #73                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: invokestatic  #32                 // Method getClient:()Lcom/amazonaws/services/s3/AmazonS3;
      28: aload_1
      29: iconst_0
      30: aaload
      31: aload_1
      32: iconst_1
      33: aaload
      34: invokeinterface #105,  3          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.getObjectMetadata:(Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
      39: areturn

  static com.amazonaws.ClientConfiguration s3ClientCfg();
    Code:
       0: new           #106                // class com/amazonaws/ClientConfiguration
       3: dup
       4: invokespecial #107                // Method com/amazonaws/ClientConfiguration."<init>":()V
       7: astore_0
       8: invokestatic  #108                // Method java/lang/System.getProperties:()Ljava/util/Properties;
      11: astore_1
      12: aload_1
      13: ldc           #109                // String sys.ai.h2o.persist.s3.socketTimeout
      15: invokevirtual #110                // Method java/util/Properties.containsKey:(Ljava/lang/Object;)Z
      18: ifeq          33
      21: aload_0
      22: ldc           #109                // String sys.ai.h2o.persist.s3.socketTimeout
      24: invokestatic  #111                // Method java/lang/Integer.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
      27: invokevirtual #112                // Method java/lang/Integer.intValue:()I
      30: invokevirtual #113                // Method com/amazonaws/ClientConfiguration.setSocketTimeout:(I)V
      33: aload_1
      34: ldc           #114                // String sys.ai.h2o.persist.s3.connectionTimeout
      36: invokevirtual #110                // Method java/util/Properties.containsKey:(Ljava/lang/Object;)Z
      39: ifeq          54
      42: aload_0
      43: ldc           #114                // String sys.ai.h2o.persist.s3.connectionTimeout
      45: invokestatic  #111                // Method java/lang/Integer.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
      48: invokevirtual #112                // Method java/lang/Integer.intValue:()I
      51: invokevirtual #115                // Method com/amazonaws/ClientConfiguration.setConnectionTimeout:(I)V
      54: aload_1
      55: ldc           #116                // String sys.ai.h2o.persist.s3.maxErrorRetry
      57: invokevirtual #110                // Method java/util/Properties.containsKey:(Ljava/lang/Object;)Z
      60: ifeq          75
      63: aload_0
      64: ldc           #116                // String sys.ai.h2o.persist.s3.maxErrorRetry
      66: invokestatic  #111                // Method java/lang/Integer.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
      69: invokevirtual #112                // Method java/lang/Integer.intValue:()I
      72: invokevirtual #117                // Method com/amazonaws/ClientConfiguration.setMaxErrorRetry:(I)V
      75: aload_1
      76: ldc           #118                // String sys.ai.h2o.persist.s3.maxHttpConnections
      78: invokevirtual #110                // Method java/util/Properties.containsKey:(Ljava/lang/Object;)Z
      81: ifeq          96
      84: aload_0
      85: ldc           #118                // String sys.ai.h2o.persist.s3.maxHttpConnections
      87: invokestatic  #111                // Method java/lang/Integer.getInteger:(Ljava/lang/String;)Ljava/lang/Integer;
      90: invokevirtual #112                // Method java/lang/Integer.intValue:()I
      93: invokevirtual #119                // Method com/amazonaws/ClientConfiguration.setMaxConnections:(I)V
      96: aload_1
      97: ldc           #120                // String sys.ai.h2o.persist.s3.force.http
      99: invokevirtual #110                // Method java/util/Properties.containsKey:(Ljava/lang/Object;)Z
     102: ifeq          112
     105: aload_0
     106: getstatic     #121                // Field com/amazonaws/Protocol.HTTP:Lcom/amazonaws/Protocol;
     109: invokevirtual #122                // Method com/amazonaws/ClientConfiguration.setProtocol:(Lcom/amazonaws/Protocol;)V
     112: aload_0
     113: areturn

  static com.amazonaws.services.s3.AmazonS3Client configureClient(com.amazonaws.services.s3.AmazonS3Client);
    Code:
       0: ldc           #123                // String sys.ai.h2o.persist.s3.region
       2: invokestatic  #124                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: ifnull        38
       8: ldc           #123                // String sys.ai.h2o.persist.s3.region
      10: invokestatic  #124                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      13: astore_1
      14: iconst_2
      15: anewarray     #52                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: ldc           #125                // String S3 region specified:
      22: aastore
      23: dup
      24: iconst_1
      25: aload_1
      26: aastore
      27: invokestatic  #126                // Method water/util/Log.debug:([Ljava/lang/Object;)V
      30: aload_0
      31: aload_1
      32: invokestatic  #127                // Method com/amazonaws/regions/RegionUtils.getRegion:(Ljava/lang/String;)Lcom/amazonaws/regions/Region;
      35: invokevirtual #128                // Method com/amazonaws/services/s3/AmazonS3Client.setRegion:(Lcom/amazonaws/regions/Region;)V
      38: ldc           #129                // String sys.ai.h2o.persist.s3.endPoint
      40: invokestatic  #124                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      43: ifnull        73
      46: ldc           #129                // String sys.ai.h2o.persist.s3.endPoint
      48: invokestatic  #124                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      51: astore_1
      52: iconst_2
      53: anewarray     #52                 // class java/lang/Object
      56: dup
      57: iconst_0
      58: ldc           #130                // String S3 endpoint specified:
      60: aastore
      61: dup
      62: iconst_1
      63: aload_1
      64: aastore
      65: invokestatic  #126                // Method water/util/Log.debug:([Ljava/lang/Object;)V
      68: aload_0
      69: aload_1
      70: invokevirtual #131                // Method com/amazonaws/services/s3/AmazonS3Client.setEndpoint:(Ljava/lang/String;)V
      73: ldc           #132                // String sys.ai.h2o.persist.s3.enable.path.style
      75: invokestatic  #124                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      78: ifnull        125
      81: ldc           #132                // String sys.ai.h2o.persist.s3.enable.path.style
      83: invokestatic  #124                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      86: invokestatic  #133                // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      89: invokevirtual #134                // Method java/lang/Boolean.booleanValue:()Z
      92: ifeq          125
      95: iconst_1
      96: anewarray     #52                 // class java/lang/Object
      99: dup
     100: iconst_0
     101: ldc           #135                // String S3 path style access enabled
     103: aastore
     104: invokestatic  #126                // Method water/util/Log.debug:([Ljava/lang/Object;)V
     107: new           #136                // class com/amazonaws/services/s3/S3ClientOptions
     110: dup
     111: invokespecial #137                // Method com/amazonaws/services/s3/S3ClientOptions."<init>":()V
     114: astore_1
     115: aload_1
     116: iconst_1
     117: invokevirtual #138                // Method com/amazonaws/services/s3/S3ClientOptions.setPathStyleAccess:(Z)V
     120: aload_0
     121: aload_1
     122: invokevirtual #139                // Method com/amazonaws/services/s3/AmazonS3Client.setS3ClientOptions:(Lcom/amazonaws/services/s3/S3ClientOptions;)V
     125: aload_0
     126: areturn

  public void delete(water.Value);
    Code:
       0: new           #140                // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #141                // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public water.Key uriToKey(java.net.URI) throws java.io.IOException;
    Code:
       0: invokestatic  #32                 // Method getClient:()Lcom/amazonaws/services/s3/AmazonS3;
       3: astore_2
       4: aload_1
       5: invokevirtual #142                // Method java/net/URI.toString:()Ljava/lang/String;
       8: invokestatic  #29                 // Method decodePath:(Ljava/lang/String;)[Ljava/lang/String;
      11: astore_3
      12: aload_2
      13: aload_3
      14: iconst_0
      15: aaload
      16: aload_3
      17: iconst_1
      18: aaload
      19: invokeinterface #105,  3          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.getObjectMetadata:(Ljava/lang/String;Ljava/lang/String;)Lcom/amazonaws/services/s3/model/ObjectMetadata;
      24: astore        4
      26: aload_3
      27: iconst_0
      28: aaload
      29: aload_3
      30: iconst_1
      31: aaload
      32: invokestatic  #40                 // Method encodePath:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      35: aload         4
      37: invokevirtual #143                // Method com/amazonaws/services/s3/model/ObjectMetadata.getContentLength:()J
      40: invokestatic  #42                 // Method water/fvec/S3FileVec.make:(Ljava/lang/String;J)Lwater/Key;
      43: areturn
      44: astore        4
      46: aload         4
      48: invokevirtual #145                // Method com/amazonaws/AmazonServiceException.getErrorCode:()Ljava/lang/String;
      51: ldc           #146                // String 404
      53: invokevirtual #147                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      56: ifeq          69
      59: new           #51                 // class java/io/IOException
      62: dup
      63: aload         4
      65: invokespecial #148                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
      68: athrow
      69: iconst_1
      70: anewarray     #52                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: new           #20                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #149                // String AWS failed for
      84: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_3
      88: invokestatic  #150                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      91: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #151                // String :
      96: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload         4
     101: invokevirtual #152                // Method com/amazonaws/AmazonServiceException.getMessage:()Ljava/lang/String;
     104: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: aastore
     111: invokestatic  #153                // Method water/util/Log.err:([Ljava/lang/Object;)V
     114: aload         4
     116: athrow
    Exception table:
       from    to  target type
          12    43    44   Class com/amazonaws/AmazonServiceException

  public void cleanUp();
    Code:
       0: invokestatic  #85                 // Method water/H2O.unimpl:()Lwater/exceptions/H2OIllegalArgumentException;
       3: athrow

  public java.util.List<java.lang.String> calcTypeaheadMatches(java.lang.String, int);
    Code:
       0: aload_1
       1: invokestatic  #29                 // Method decodePath:(Ljava/lang/String;)[Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: iconst_1
       7: aaload
       8: ifnull        88
      11: aload_0
      12: getfield      #9                  // Field _keyCaches:Ljava/util/HashMap;
      15: aload_3
      16: iconst_0
      17: aaload
      18: invokevirtual #154                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: ifnonnull     67
      24: invokestatic  #32                 // Method getClient:()Lcom/amazonaws/services/s3/AmazonS3;
      27: aload_3
      28: iconst_0
      29: aaload
      30: invokeinterface #155,  2          // InterfaceMethod com/amazonaws/services/s3/AmazonS3.doesBucketExist:(Ljava/lang/String;)Z
      35: ifne          46
      38: new           #156                // class java/util/ArrayList
      41: dup
      42: invokespecial #157                // Method java/util/ArrayList."<init>":()V
      45: areturn
      46: aload_0
      47: getfield      #9                  // Field _keyCaches:Ljava/util/HashMap;
      50: aload_3
      51: iconst_0
      52: aaload
      53: new           #158                // class water/persist/PersistS3$KeyCache
      56: dup
      57: aload_3
      58: iconst_0
      59: aaload
      60: invokespecial #159                // Method water/persist/PersistS3$KeyCache."<init>":(Ljava/lang/String;)V
      63: invokevirtual #160                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      66: pop
      67: aload_0
      68: getfield      #9                  // Field _keyCaches:Ljava/util/HashMap;
      71: aload_3
      72: iconst_0
      73: aaload
      74: invokevirtual #154                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #158                // class water/persist/PersistS3$KeyCache
      80: aload_3
      81: iconst_1
      82: aaload
      83: iload_2
      84: invokevirtual #161                // Method water/persist/PersistS3$KeyCache.fetch:(Ljava/lang/String;I)Ljava/util/ArrayList;
      87: areturn
      88: aload_0
      89: getfield      #6                  // Field _bucketCache:Lwater/persist/PersistS3$Cache;
      92: aload_3
      93: iconst_0
      94: aaload
      95: iload_2
      96: invokevirtual #162                // Method water/persist/PersistS3$Cache.fetch:(Ljava/lang/String;I)Ljava/util/ArrayList;
      99: areturn

  static void access$100(com.amazonaws.services.s3.model.ObjectListing, java.util.ArrayList, java.util.ArrayList, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokestatic  #2                  // Method processListing:(Lcom/amazonaws/services/s3/model/ObjectListing;Ljava/util/ArrayList;Ljava/util/ArrayList;Z)V
       7: return

  static {};
    Code:
       0: ldc           #88                 // class water/persist/PersistS3
       2: invokevirtual #163                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #70                 // Field $assertionsDisabled:Z
      16: ldc           #89                 // String s3://
      18: invokevirtual #164                // Method java/lang/String.length:()I
      21: putstatic     #96                 // Field KEY_PREFIX_LEN:I
      24: new           #52                 // class java/lang/Object
      27: dup
      28: invokespecial #165                // Method java/lang/Object."<init>":()V
      31: putstatic     #11                 // Field _lock:Ljava/lang/Object;
      34: return
}
