Compiled from "ZonedTime.java"
public class be.sysa.quartz.initializer.model.ZonedTime implements java.time.temporal.TemporalAccessor {
  private static final java.util.Set<java.time.temporal.TemporalField> SUPPORTED_FIELDS;

  public static final java.time.format.DateTimeFormatter PARSER;

  public static final java.time.format.DateTimeFormatter FORMATTER_SECONDS;

  public static final java.time.format.DateTimeFormatter FORMATTER_SECONDS_UTC;

  public static final java.time.format.DateTimeFormatter FORMATTER_MINUTES;

  private final java.time.LocalTime localTime;

  private final java.time.ZoneId zoneId;

  public static java.lang.String format(be.sysa.quartz.initializer.model.ZonedTime);
    Code:
       0: getstatic     #1                  // Field java/time/ZoneOffset.UTC:Ljava/time/ZoneOffset;
       3: aload_0
       4: invokevirtual #7                  // Method getZoneId:()Ljava/time/ZoneId;
       7: invokevirtual #13                 // Method java/time/ZoneOffset.equals:(Ljava/lang/Object;)Z
      10: ifeq          19
      13: getstatic     #17                 // Field FORMATTER_SECONDS_UTC:Ljava/time/format/DateTimeFormatter;
      16: goto          22
      19: getstatic     #21                 // Field FORMATTER_SECONDS:Ljava/time/format/DateTimeFormatter;
      22: astore_1
      23: aload_1
      24: aload_0
      25: invokevirtual #24                 // Method java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
      28: areturn

  public static be.sysa.quartz.initializer.model.ZonedTime of(java.time.LocalTime, java.time.ZoneId);
    Code:
       0: new           #8                  // class be/sysa/quartz/initializer/model/ZonedTime
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #30                 // Method "<init>":(Ljava/time/LocalTime;Ljava/time/ZoneId;)V
       9: areturn

  public static be.sysa.quartz.initializer.model.ZonedTime parse(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getstatic     #34                 // Field PARSER:Ljava/time/format/DateTimeFormatter;
       4: invokestatic  #37                 // Method parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Lbe/sysa/quartz/initializer/model/ZonedTime;
       7: areturn

  public static be.sysa.quartz.initializer.model.ZonedTime parse(java.lang.CharSequence, java.time.format.DateTimeFormatter);
    Code:
       0: aload_1
       1: ldc           #41                 // String formatter
       3: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: aload_0
       9: invokedynamic #49,  0             // InvokeDynamic #0:queryFrom:()Ljava/time/temporal/TemporalQuery;
      14: invokevirtual #53                 // Method java/time/format/DateTimeFormatter.parse:(Ljava/lang/CharSequence;Ljava/time/temporal/TemporalQuery;)Ljava/lang/Object;
      17: checkcast     #8                  // class be/sysa/quartz/initializer/model/ZonedTime
      20: areturn

  public static be.sysa.quartz.initializer.model.ZonedTime from(java.time.temporal.TemporalAccessor);
    Code:
       0: aload_0
       1: instanceof    #8                  // class be/sysa/quartz/initializer/model/ZonedTime
       4: ifeq          12
       7: aload_0
       8: checkcast     #8                  // class be/sysa/quartz/initializer/model/ZonedTime
      11: areturn
      12: aload_0
      13: invokestatic  #56                 // Method java/time/ZoneId.from:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/ZoneId;
      16: astore_1
      17: aload_0
      18: invokestatic  #62                 // Method java/time/LocalTime.from:(Ljava/time/temporal/TemporalAccessor;)Ljava/time/LocalTime;
      21: astore_2
      22: new           #8                  // class be/sysa/quartz/initializer/model/ZonedTime
      25: dup
      26: aload_2
      27: aload_1
      28: invokespecial #30                 // Method "<init>":(Ljava/time/LocalTime;Ljava/time/ZoneId;)V
      31: areturn
      32: astore_1
      33: new           #67                 // class java/time/DateTimeException
      36: dup
      37: aload_0
      38: aload_0
      39: invokevirtual #69                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: invokevirtual #75                 // Method java/lang/Class.getName:()Ljava/lang/String;
      45: invokedynamic #81,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/time/temporal/TemporalAccessor;Ljava/lang/String;)Ljava/lang/String;
      50: aload_1
      51: invokespecial #85                 // Method java/time/DateTimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
    Exception table:
       from    to  target type
          12    31    32   Class java/time/DateTimeException

  public boolean isSupported(java.time.temporal.TemporalField);
    Code:
       0: getstatic     #88                 // Field SUPPORTED_FIELDS:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #92,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ireturn

  public <R> R query(java.time.temporal.TemporalQuery<R>);
    Code:
       0: aload_1
       1: invokestatic  #97                 // Method java/time/temporal/TemporalQueries.zone:()Ljava/time/temporal/TemporalQuery;
       4: if_acmpeq     14
       7: aload_1
       8: invokestatic  #102                // Method java/time/temporal/TemporalQueries.zoneId:()Ljava/time/temporal/TemporalQuery;
      11: if_acmpne     19
      14: aload_0
      15: getfield      #105                // Field zoneId:Ljava/time/ZoneId;
      18: areturn
      19: aload_1
      20: invokestatic  #108                // Method java/time/temporal/TemporalQueries.localTime:()Ljava/time/temporal/TemporalQuery;
      23: if_acmpne     31
      26: aload_0
      27: getfield      #111                // Field localTime:Ljava/time/LocalTime;
      30: areturn
      31: aconst_null
      32: areturn

  public long getLong(java.time.temporal.TemporalField);
    Code:
       0: aload_1
       1: getstatic     #114                // Field java/time/temporal/ChronoField.OFFSET_SECONDS:Ljava/time/temporal/ChronoField;
       4: if_acmpne     23
       7: aload_0
       8: getfield      #105                // Field zoneId:Ljava/time/ZoneId;
      11: invokevirtual #120                // Method java/time/ZoneId.getRules:()Ljava/time/zone/ZoneRules;
      14: aconst_null
      15: invokevirtual #124                // Method java/time/zone/ZoneRules.getStandardOffset:(Ljava/time/Instant;)Ljava/time/ZoneOffset;
      18: aload_1
      19: invokevirtual #130                // Method java/time/ZoneOffset.getLong:(Ljava/time/temporal/TemporalField;)J
      22: lreturn
      23: aload_0
      24: getfield      #111                // Field localTime:Ljava/time/LocalTime;
      27: aload_1
      28: invokevirtual #134                // Method java/time/LocalTime.getLong:(Ljava/time/temporal/TemporalField;)J
      31: lreturn

  public be.sysa.quartz.initializer.model.ZonedTime(java.time.LocalTime, java.time.ZoneId);
    Code:
       0: aload_0
       1: invokespecial #135                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #111                // Field localTime:Ljava/time/LocalTime;
       9: aload_0
      10: aload_2
      11: putfield      #105                // Field zoneId:Ljava/time/ZoneId;
      14: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #138                // Method getLocalTime:()Ljava/time/LocalTime;
       4: aload_0
       5: invokevirtual #7                  // Method getZoneId:()Ljava/time/ZoneId;
       8: invokedynamic #142,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/time/LocalTime;Ljava/time/ZoneId;)Ljava/lang/String;
      13: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #8                  // class be/sysa/quartz/initializer/model/ZonedTime
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #8                  // class be/sysa/quartz/initializer/model/ZonedTime
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #145                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #138                // Method getLocalTime:()Ljava/time/LocalTime;
      35: astore_3
      36: aload_2
      37: invokevirtual #138                // Method getLocalTime:()Ljava/time/LocalTime;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #148                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #7                  // Method getZoneId:()Ljava/time/ZoneId;
      69: astore        5
      71: aload_2
      72: invokevirtual #7                  // Method getZoneId:()Ljava/time/ZoneId;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #148                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: iconst_1
     103: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class be/sysa/quartz/initializer/model/ZonedTime
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #138                // Method getLocalTime:()Ljava/time/LocalTime;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #149                // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #7                  // Method getZoneId:()Ljava/time/ZoneId;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #149                // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: ireturn

  public java.time.LocalTime getLocalTime();
    Code:
       0: aload_0
       1: getfield      #111                // Field localTime:Ljava/time/LocalTime;
       4: areturn

  public java.time.ZoneId getZoneId();
    Code:
       0: aload_0
       1: getfield      #105                // Field zoneId:Ljava/time/ZoneId;
       4: areturn

  static {};
    Code:
       0: getstatic     #153                // Field java/time/temporal/ChronoField.SECOND_OF_MINUTE:Ljava/time/temporal/ChronoField;
       3: getstatic     #156                // Field java/time/temporal/ChronoField.MINUTE_OF_HOUR:Ljava/time/temporal/ChronoField;
       6: getstatic     #159                // Field java/time/temporal/ChronoField.HOUR_OF_DAY:Ljava/time/temporal/ChronoField;
       9: getstatic     #114                // Field java/time/temporal/ChronoField.OFFSET_SECONDS:Ljava/time/temporal/ChronoField;
      12: invokestatic  #162                // InterfaceMethod java/util/Set.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Set;
      15: putstatic     #88                 // Field SUPPORTED_FIELDS:Ljava/util/Set;
      18: ldc           #166                // String HH:mm[:ss][ VV][X]
      20: invokestatic  #168                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
      23: putstatic     #34                 // Field PARSER:Ljava/time/format/DateTimeFormatter;
      26: ldc           #172                // String HH:mm:ss VV
      28: invokestatic  #168                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
      31: putstatic     #21                 // Field FORMATTER_SECONDS:Ljava/time/format/DateTimeFormatter;
      34: ldc           #174                // String HH:mm:ssX
      36: invokestatic  #168                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
      39: putstatic     #17                 // Field FORMATTER_SECONDS_UTC:Ljava/time/format/DateTimeFormatter;
      42: ldc           #176                // String HH:mm VV
      44: invokestatic  #168                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;)Ljava/time/format/DateTimeFormatter;
      47: putstatic     #178                // Field FORMATTER_MINUTES:Ljava/time/format/DateTimeFormatter;
      50: return
}
