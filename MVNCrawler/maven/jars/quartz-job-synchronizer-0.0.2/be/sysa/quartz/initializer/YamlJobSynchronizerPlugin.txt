Compiled from "YamlJobSynchronizerPlugin.java"
public class be.sysa.quartz.initializer.YamlJobSynchronizerPlugin implements org.quartz.spi.SchedulerPlugin {
  private static final org.slf4j.Logger log;

  private java.lang.String fileNames;

  private java.lang.String allowJobs;

  private java.util.List<java.lang.String> yamlFiles;

  private java.util.List<java.lang.String> allowedJobList;

  private java.lang.String name;

  private org.quartz.Scheduler scheduler;

  private org.quartz.spi.ClassLoadHelper classLoadHelper;

  public void initialize(java.lang.String, org.quartz.Scheduler, org.quartz.spi.ClassLoadHelper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field name:Ljava/lang/String;
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field scheduler:Lorg/quartz/Scheduler;
      10: aload_0
      11: aload_3
      12: putfield      #11                 // Field classLoadHelper:Lorg/quartz/spi/ClassLoadHelper;
      15: aload_0
      16: aload_0
      17: aload_0
      18: getfield      #15                 // Field fileNames:Ljava/lang/String;
      21: invokevirtual #18                 // Method splitToList:(Ljava/lang/String;)Ljava/util/List;
      24: putfield      #22                 // Field yamlFiles:Ljava/util/List;
      27: aload_0
      28: aload_0
      29: aload_0
      30: getfield      #26                 // Field allowJobs:Ljava/lang/String;
      33: invokevirtual #18                 // Method splitToList:(Ljava/lang/String;)Ljava/util/List;
      36: putfield      #29                 // Field allowedJobList:Ljava/util/List;
      39: return

  private java.util.List<java.lang.String> splitToList(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: invokestatic  #32                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: goto          40
      10: aload_1
      11: ldc           #38                 // String ,
      13: invokevirtual #40                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
      16: invokestatic  #46                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      19: invokedynamic #52,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      24: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      29: invokestatic  #60                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      32: invokeinterface #66,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      37: checkcast     #70                 // class java/util/List
      40: areturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #22                 // Field yamlFiles:Ljava/util/List;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: aload_0
      13: invokevirtual #76                 // Method synchronizeJobSchedule:()V
      16: goto          22
      19: astore_1
      20: aload_1
      21: athrow
      22: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable

  private void synchronizeJobSchedule();
    Code:
       0: getstatic     #88                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #92                 // String Starting New/Changed Job Synchronization
       5: invokeinterface #94,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      10: new           #100                // class be/sysa/quartz/initializer/service/JobSynchronizer
      13: dup
      14: aload_0
      15: getfield      #7                  // Field scheduler:Lorg/quartz/Scheduler;
      18: invokespecial #102                // Method be/sysa/quartz/initializer/service/JobSynchronizer."<init>":(Lorg/quartz/Scheduler;)V
      21: astore_1
      22: aload_0
      23: getfield      #22                 // Field yamlFiles:Ljava/util/List;
      26: invokeinterface #106,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      31: aload_0
      32: invokedynamic #110,  0            // InvokeDynamic #1:apply:(Lbe/sysa/quartz/initializer/YamlJobSynchronizerPlugin;)Ljava/util/function/Function;
      37: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      42: invokestatic  #60                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      45: invokeinterface #66,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      50: checkcast     #70                 // class java/util/List
      53: astore_2
      54: aload_0
      55: aload_2
      56: aload_0
      57: getfield      #29                 // Field allowedJobList:Ljava/util/List;
      60: invokevirtual #113                // Method assertNoInbuiltJobs:(Ljava/util/List;Ljava/util/List;)V
      63: aload_2
      64: aload_1
      65: dup
      66: invokestatic  #117                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      69: pop
      70: invokedynamic #123,  0            // InvokeDynamic #2:accept:(Lbe/sysa/quartz/initializer/service/JobSynchronizer;)Ljava/util/function/Consumer;
      75: invokeinterface #127,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      80: getstatic     #88                 // Field log:Lorg/slf4j/Logger;
      83: ldc           #131                // String Completed New/Changed Job Synchronization
      85: invokeinterface #94,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      90: return

  private void assertNoInbuiltJobs(java.util.List<be.sysa.quartz.initializer.model.ScheduleDefinition>, java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #106,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #133,  0            // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      11: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokedynamic #134,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      21: invokeinterface #135,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: invokedynamic #138,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
      31: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      36: invokedynamic #139,  0            // InvokeDynamic #6:apply:()Ljava/util/function/Function;
      41: invokeinterface #135,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      46: invokedynamic #140,  0            // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      51: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      56: invokedynamic #141,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
      61: invokeinterface #56,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      66: invokedynamic #142,  0            // InvokeDynamic #9:test:()Ljava/util/function/Predicate;
      71: invokeinterface #146,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      76: invokestatic  #150                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      79: invokeinterface #66,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      84: checkcast     #153                // class java/util/Set
      87: astore_3
      88: aload_2
      89: aload_3
      90: dup
      91: invokestatic  #117                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      94: pop
      95: invokedynamic #155,  0            // InvokeDynamic #10:accept:(Ljava/util/Set;)Ljava/util/function/Consumer;
     100: invokeinterface #127,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     105: aload_3
     106: invokeinterface #158,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
     111: ifne          128
     114: new           #159                // class java/lang/IllegalArgumentException
     117: dup
     118: aload_3
     119: invokedynamic #161,  0            // InvokeDynamic #11:makeConcatWithConstants:(Ljava/util/Set;)Ljava/lang/String;
     124: invokespecial #165                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: return

  private be.sysa.quartz.initializer.model.ScheduleDefinition toModel(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field classLoadHelper:Lorg/quartz/spi/ClassLoadHelper;
       4: aload_1
       5: invokestatic  #167                // Method be/sysa/quartz/initializer/support/FileLoader.getClassLoadHelperResourceAsStream:(Lorg/quartz/spi/ClassLoadHelper;Ljava/lang/String;)Ljava/io/InputStream;
       8: astore_2
       9: aload_2
      10: invokestatic  #173                // Method be/sysa/quartz/initializer/service/ScheduleLoader.loadSchedule:(Ljava/io/InputStream;)Lbe/sysa/quartz/initializer/api/ScheduleDefinitionApi;
      13: astore_3
      14: aload_3
      15: invokestatic  #179                // Method be/sysa/quartz/initializer/model/Mapper.toModel:(Lbe/sysa/quartz/initializer/api/ScheduleDefinitionApi;)Lbe/sysa/quartz/initializer/model/ScheduleDefinition;
      18: astore        4
      20: aload_2
      21: ifnull        28
      24: aload_2
      25: invokevirtual #185                // Method java/io/InputStream.close:()V
      28: aload         4
      30: areturn
      31: astore_3
      32: aload_2
      33: ifnull        51
      36: aload_2
      37: invokevirtual #185                // Method java/io/InputStream.close:()V
      40: goto          51
      43: astore        4
      45: aload_3
      46: aload         4
      48: invokevirtual #190                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      51: aload_3
      52: athrow
      53: astore_2
      54: aload_2
      55: athrow
    Exception table:
       from    to  target type
           9    20    31   Class java/lang/Throwable
          36    40    43   Class java/lang/Throwable
           0    28    53   Class java/lang/Throwable
          31    53    53   Class java/lang/Throwable

  public void shutdown();
    Code:
       0: getstatic     #88                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #194                // String Plugin Shutdown
       5: invokeinterface #196,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: return

  public java.lang.String getFileNames();
    Code:
       0: aload_0
       1: getfield      #15                 // Field fileNames:Ljava/lang/String;
       4: areturn

  public java.lang.String getAllowJobs();
    Code:
       0: aload_0
       1: getfield      #26                 // Field allowJobs:Ljava/lang/String;
       4: areturn

  public java.util.List<java.lang.String> getYamlFiles();
    Code:
       0: aload_0
       1: getfield      #22                 // Field yamlFiles:Ljava/util/List;
       4: areturn

  public java.util.List<java.lang.String> getAllowedJobList();
    Code:
       0: aload_0
       1: getfield      #29                 // Field allowedJobList:Ljava/util/List;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #1                  // Field name:Ljava/lang/String;
       4: areturn

  public org.quartz.Scheduler getScheduler();
    Code:
       0: aload_0
       1: getfield      #7                  // Field scheduler:Lorg/quartz/Scheduler;
       4: areturn

  public org.quartz.spi.ClassLoadHelper getClassLoadHelper();
    Code:
       0: aload_0
       1: getfield      #11                 // Field classLoadHelper:Lorg/quartz/spi/ClassLoadHelper;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class be/sysa/quartz/initializer/YamlJobSynchronizerPlugin
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class be/sysa/quartz/initializer/YamlJobSynchronizerPlugin
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #199                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: invokevirtual #203                // Method getFileNames:()Ljava/lang/String;
      35: astore_3
      36: aload_2
      37: invokevirtual #203                // Method getFileNames:()Ljava/lang/String;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #207                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: aload_0
      66: invokevirtual #212                // Method getAllowJobs:()Ljava/lang/String;
      69: astore        5
      71: aload_2
      72: invokevirtual #212                // Method getAllowJobs:()Ljava/lang/String;
      75: astore        6
      77: aload         5
      79: ifnonnull     90
      82: aload         6
      84: ifnull        102
      87: goto          100
      90: aload         5
      92: aload         6
      94: invokevirtual #207                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      97: ifne          102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: invokevirtual #215                // Method getYamlFiles:()Ljava/util/List;
     106: astore        7
     108: aload_2
     109: invokevirtual #215                // Method getYamlFiles:()Ljava/util/List;
     112: astore        8
     114: aload         7
     116: ifnonnull     127
     119: aload         8
     121: ifnull        139
     124: goto          137
     127: aload         7
     129: aload         8
     131: invokevirtual #207                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     134: ifne          139
     137: iconst_0
     138: ireturn
     139: aload_0
     140: invokevirtual #218                // Method getAllowedJobList:()Ljava/util/List;
     143: astore        9
     145: aload_2
     146: invokevirtual #218                // Method getAllowedJobList:()Ljava/util/List;
     149: astore        10
     151: aload         9
     153: ifnonnull     164
     156: aload         10
     158: ifnull        176
     161: goto          174
     164: aload         9
     166: aload         10
     168: invokevirtual #207                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     171: ifne          176
     174: iconst_0
     175: ireturn
     176: aload_0
     177: invokevirtual #221                // Method getName:()Ljava/lang/String;
     180: astore        11
     182: aload_2
     183: invokevirtual #221                // Method getName:()Ljava/lang/String;
     186: astore        12
     188: aload         11
     190: ifnonnull     201
     193: aload         12
     195: ifnull        213
     198: goto          211
     201: aload         11
     203: aload         12
     205: invokevirtual #207                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     208: ifne          213
     211: iconst_0
     212: ireturn
     213: aload_0
     214: invokevirtual #224                // Method getScheduler:()Lorg/quartz/Scheduler;
     217: astore        13
     219: aload_2
     220: invokevirtual #224                // Method getScheduler:()Lorg/quartz/Scheduler;
     223: astore        14
     225: aload         13
     227: ifnonnull     238
     230: aload         14
     232: ifnull        250
     235: goto          248
     238: aload         13
     240: aload         14
     242: invokevirtual #207                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     245: ifne          250
     248: iconst_0
     249: ireturn
     250: aload_0
     251: invokevirtual #228                // Method getClassLoadHelper:()Lorg/quartz/spi/ClassLoadHelper;
     254: astore        15
     256: aload_2
     257: invokevirtual #228                // Method getClassLoadHelper:()Lorg/quartz/spi/ClassLoadHelper;
     260: astore        16
     262: aload         15
     264: ifnonnull     275
     267: aload         16
     269: ifnull        287
     272: goto          285
     275: aload         15
     277: aload         16
     279: invokevirtual #207                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     282: ifne          287
     285: iconst_0
     286: ireturn
     287: iconst_1
     288: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class be/sysa/quartz/initializer/YamlJobSynchronizerPlugin
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #203                // Method getFileNames:()Ljava/lang/String;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #232                // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #212                // Method getAllowJobs:()Ljava/lang/String;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #232                // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: aload_0
      57: invokevirtual #215                // Method getYamlFiles:()Ljava/util/List;
      60: astore        5
      62: iload_2
      63: bipush        59
      65: imul
      66: aload         5
      68: ifnonnull     76
      71: bipush        43
      73: goto          81
      76: aload         5
      78: invokevirtual #232                // Method java/lang/Object.hashCode:()I
      81: iadd
      82: istore_2
      83: aload_0
      84: invokevirtual #218                // Method getAllowedJobList:()Ljava/util/List;
      87: astore        6
      89: iload_2
      90: bipush        59
      92: imul
      93: aload         6
      95: ifnonnull     103
      98: bipush        43
     100: goto          108
     103: aload         6
     105: invokevirtual #232                // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_2
     110: aload_0
     111: invokevirtual #221                // Method getName:()Ljava/lang/String;
     114: astore        7
     116: iload_2
     117: bipush        59
     119: imul
     120: aload         7
     122: ifnonnull     130
     125: bipush        43
     127: goto          135
     130: aload         7
     132: invokevirtual #232                // Method java/lang/Object.hashCode:()I
     135: iadd
     136: istore_2
     137: aload_0
     138: invokevirtual #224                // Method getScheduler:()Lorg/quartz/Scheduler;
     141: astore        8
     143: iload_2
     144: bipush        59
     146: imul
     147: aload         8
     149: ifnonnull     157
     152: bipush        43
     154: goto          162
     157: aload         8
     159: invokevirtual #232                // Method java/lang/Object.hashCode:()I
     162: iadd
     163: istore_2
     164: aload_0
     165: invokevirtual #228                // Method getClassLoadHelper:()Lorg/quartz/spi/ClassLoadHelper;
     168: astore        9
     170: iload_2
     171: bipush        59
     173: imul
     174: aload         9
     176: ifnonnull     184
     179: bipush        43
     181: goto          189
     184: aload         9
     186: invokevirtual #232                // Method java/lang/Object.hashCode:()I
     189: iadd
     190: istore_2
     191: iload_2
     192: ireturn

  public be.sysa.quartz.initializer.YamlJobSynchronizerPlugin();
    Code:
       0: aload_0
       1: invokespecial #236                // Method java/lang/Object."<init>":()V
       4: return

  public void setFileNames(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field fileNames:Ljava/lang/String;
       5: return

  public void setAllowJobs(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field allowJobs:Ljava/lang/String;
       5: return

  private static boolean lambda$assertNoInbuiltJobs$2(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #238                // String org.quartz
       3: invokevirtual #240                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ireturn

  private static java.util.stream.Stream lambda$assertNoInbuiltJobs$1(java.util.Map);
    Code:
       0: aload_0
       1: invokeinterface #244,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       6: invokeinterface #250,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      11: areturn

  private static java.util.stream.Stream lambda$assertNoInbuiltJobs$0(java.util.Map);
    Code:
       0: aload_0
       1: invokeinterface #244,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       6: invokeinterface #250,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      11: areturn

  static {};
    Code:
       0: ldc           #2                  // class be/sysa/quartz/initializer/YamlJobSynchronizerPlugin
       2: invokestatic  #253                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #88                 // Field log:Lorg/slf4j/Logger;
       8: return
}
