Compiled from "StreamingBodyCodec.java"
class io.vertx.ext.web.codec.impl.StreamingBodyCodec$1 implements io.vertx.ext.web.codec.spi.BodyStream<java.lang.Void> {
  io.vertx.core.Promise<java.lang.Void> promise;

  final io.vertx.ext.web.codec.impl.StreamingBodyCodec this$0;

  io.vertx.ext.web.codec.impl.StreamingBodyCodec$1(io.vertx.ext.web.codec.impl.StreamingBodyCodec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #3                  // InterfaceMethod io/vertx/core/Promise.promise:()Lio/vertx/core/Promise;
      13: putfield      #4                  // Field promise:Lio/vertx/core/Promise;
      16: return

  public io.vertx.core.Future<java.lang.Void> result();
    Code:
       0: aload_0
       1: getfield      #4                  // Field promise:Lio/vertx/core/Promise;
       4: invokeinterface #5,  1            // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
       9: areturn

  public void handle(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field promise:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod io/vertx/core/Promise.tryFail:(Ljava/lang/Throwable;)Z
      10: pop
      11: return

  public io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer> exceptionHandler(io.vertx.core.Handler<java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
       4: invokestatic  #7                  // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.access$000:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;)Lio/vertx/core/streams/WriteStream;
       7: aload_1
       8: invokeinterface #8,  2            // InterfaceMethod io/vertx/core/streams/WriteStream.exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/streams/WriteStream;
      13: pop
      14: aload_0
      15: areturn

  public void write(io.vertx.core.buffer.Buffer, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
       4: invokestatic  #7                  // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.access$000:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;)Lio/vertx/core/streams/WriteStream;
       7: aload_1
       8: aload_2
       9: invokeinterface #9,  3            // InterfaceMethod io/vertx/core/streams/WriteStream.write:(Ljava/lang/Object;Lio/vertx/core/Handler;)V
      14: return

  public io.vertx.core.Future<java.lang.Void> write(io.vertx.core.buffer.Buffer);
    Code:
       0: invokestatic  #3                  // InterfaceMethod io/vertx/core/Promise.promise:()Lio/vertx/core/Promise;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #10                 // Method write:(Lio/vertx/core/buffer/Buffer;Lio/vertx/core/Handler;)V
      10: aload_2
      11: invokeinterface #5,  1            // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
      16: areturn

  public void end(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
       4: invokestatic  #11                 // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.access$100:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;)Z
       7: ifeq          32
      10: aload_0
      11: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
      14: invokestatic  #7                  // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.access$000:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;)Lio/vertx/core/streams/WriteStream;
      17: aload_0
      18: aload_1
      19: invokedynamic #12,  0             // InvokeDynamic #0:handle:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec$1;Lio/vertx/core/Handler;)Lio/vertx/core/Handler;
      24: invokeinterface #13,  2           // InterfaceMethod io/vertx/core/streams/WriteStream.end:(Lio/vertx/core/Handler;)V
      29: goto          55
      32: aload_0
      33: getfield      #4                  // Field promise:Lio/vertx/core/Promise;
      36: invokeinterface #14,  1           // InterfaceMethod io/vertx/core/Promise.tryComplete:()Z
      41: pop
      42: aload_1
      43: ifnull        55
      46: aload_1
      47: invokestatic  #15                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      50: invokeinterface #16,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      55: return

  public io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer> setWriteQueueMaxSize(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
       4: invokestatic  #7                  // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.access$000:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;)Lio/vertx/core/streams/WriteStream;
       7: iload_1
       8: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/streams/WriteStream.setWriteQueueMaxSize:(I)Lio/vertx/core/streams/WriteStream;
      13: pop
      14: aload_0
      15: areturn

  public boolean writeQueueFull();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
       4: invokestatic  #7                  // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.access$000:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;)Lio/vertx/core/streams/WriteStream;
       7: invokeinterface #18,  1           // InterfaceMethod io/vertx/core/streams/WriteStream.writeQueueFull:()Z
      12: ireturn

  public io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer> drainHandler(io.vertx.core.Handler<java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;
       4: invokestatic  #7                  // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.access$000:(Lio/vertx/ext/web/codec/impl/StreamingBodyCodec;)Lio/vertx/core/streams/WriteStream;
       7: aload_1
       8: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/streams/WriteStream.drainHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/streams/WriteStream;
      13: pop
      14: aload_0
      15: areturn

  public void write(java.lang.Object, io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class io/vertx/core/buffer/Buffer
       5: aload_2
       6: invokevirtual #10                 // Method write:(Lio/vertx/core/buffer/Buffer;Lio/vertx/core/Handler;)V
       9: return

  public io.vertx.core.Future write(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class io/vertx/core/buffer/Buffer
       5: invokevirtual #21                 // Method write:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
       8: areturn

  public io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/streams/WriteStream;
       5: areturn

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class java/lang/Throwable
       5: invokevirtual #24                 // Method handle:(Ljava/lang/Throwable;)V
       8: return

  private void lambda$end$0(io.vertx.core.Handler, io.vertx.core.AsyncResult);
    Code:
       0: aload_2
       1: invokeinterface #25,  1           // InterfaceMethod io/vertx/core/AsyncResult.succeeded:()Z
       6: ifeq          22
       9: aload_0
      10: getfield      #4                  // Field promise:Lio/vertx/core/Promise;
      13: invokeinterface #14,  1           // InterfaceMethod io/vertx/core/Promise.tryComplete:()Z
      18: pop
      19: goto          38
      22: aload_0
      23: getfield      #4                  // Field promise:Lio/vertx/core/Promise;
      26: aload_2
      27: invokeinterface #26,  1           // InterfaceMethod io/vertx/core/AsyncResult.cause:()Ljava/lang/Throwable;
      32: invokeinterface #6,  2            // InterfaceMethod io/vertx/core/Promise.tryFail:(Ljava/lang/Throwable;)Z
      37: pop
      38: aload_1
      39: ifnull        49
      42: aload_1
      43: aload_2
      44: invokeinterface #16,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      49: return
}
