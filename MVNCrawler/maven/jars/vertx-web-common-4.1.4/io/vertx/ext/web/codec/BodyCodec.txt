Compiled from "BodyCodec.java"
public interface io.vertx.ext.web.codec.BodyCodec<T> {
  public static io.vertx.ext.web.codec.BodyCodec<java.lang.String> string();
    Code:
       0: getstatic     #1                  // Field io/vertx/ext/web/codec/impl/BodyCodecImpl.STRING:Lio/vertx/ext/web/codec/BodyCodec;
       3: areturn

  public static io.vertx.ext.web.codec.BodyCodec<java.lang.String> string(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method io/vertx/ext/web/codec/impl/BodyCodecImpl.string:(Ljava/lang/String;)Lio/vertx/ext/web/codec/impl/BodyCodecImpl;
       4: areturn

  public static io.vertx.ext.web.codec.BodyCodec<io.vertx.core.buffer.Buffer> buffer();
    Code:
       0: getstatic     #3                  // Field io/vertx/ext/web/codec/impl/BodyCodecImpl.BUFFER:Lio/vertx/ext/web/codec/BodyCodec;
       3: areturn

  public static io.vertx.ext.web.codec.BodyCodec<io.vertx.core.json.JsonObject> jsonObject();
    Code:
       0: getstatic     #4                  // Field io/vertx/ext/web/codec/impl/BodyCodecImpl.JSON_OBJECT:Lio/vertx/ext/web/codec/BodyCodec;
       3: areturn

  public static io.vertx.ext.web.codec.BodyCodec<io.vertx.core.json.JsonArray> jsonArray();
    Code:
       0: getstatic     #5                  // Field io/vertx/ext/web/codec/impl/BodyCodecImpl.JSON_ARRAY:Lio/vertx/ext/web/codec/BodyCodec;
       3: areturn

  public static <U> io.vertx.ext.web.codec.BodyCodec<U> json(java.lang.Class<U>);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method io/vertx/ext/web/codec/impl/BodyCodecImpl.json:(Ljava/lang/Class;)Lio/vertx/ext/web/codec/BodyCodec;
       4: areturn

  public static io.vertx.ext.web.codec.BodyCodec<java.lang.Void> none();
    Code:
       0: getstatic     #7                  // Field io/vertx/ext/web/codec/impl/BodyCodecImpl.NONE:Lio/vertx/ext/web/codec/BodyCodec;
       3: areturn

  public static <T> io.vertx.ext.web.codec.BodyCodec<T> create(java.util.function.Function<io.vertx.core.buffer.Buffer, T>);
    Code:
       0: new           #8                  // class io/vertx/ext/web/codec/impl/BodyCodecImpl
       3: dup
       4: aload_0
       5: invokespecial #9                  // Method io/vertx/ext/web/codec/impl/BodyCodecImpl."<init>":(Ljava/util/function/Function;)V
       8: areturn

  public static io.vertx.ext.web.codec.BodyCodec<java.lang.Void> pipe(io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer>);
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #10                 // InterfaceMethod pipe:(Lio/vertx/core/streams/WriteStream;Z)Lio/vertx/ext/web/codec/BodyCodec;
       5: areturn

  public static io.vertx.ext.web.codec.BodyCodec<java.lang.Void> pipe(io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer>, boolean);
    Code:
       0: new           #11                 // class io/vertx/ext/web/codec/impl/StreamingBodyCodec
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #12                 // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec."<init>":(Lio/vertx/core/streams/WriteStream;Z)V
       9: astore_2
      10: aload_2
      11: invokevirtual #13                 // Method io/vertx/ext/web/codec/impl/StreamingBodyCodec.init:()V
      14: aload_2
      15: areturn

  public static io.vertx.ext.web.codec.BodyCodec<java.lang.Void> jsonStream(io.vertx.core.parsetools.JsonParser);
    Code:
       0: new           #14                 // class io/vertx/ext/web/codec/impl/JsonStreamBodyCodec
       3: dup
       4: aload_0
       5: invokespecial #15                 // Method io/vertx/ext/web/codec/impl/JsonStreamBodyCodec."<init>":(Lio/vertx/core/parsetools/JsonParser;)V
       8: areturn

  public abstract void create(io.vertx.core.Handler<io.vertx.core.AsyncResult<io.vertx.ext.web.codec.spi.BodyStream<T>>>);
}
