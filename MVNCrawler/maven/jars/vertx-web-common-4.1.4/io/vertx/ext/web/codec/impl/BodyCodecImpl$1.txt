Compiled from "BodyCodecImpl.java"
class io.vertx.ext.web.codec.impl.BodyCodecImpl$1 implements io.vertx.ext.web.codec.spi.BodyStream<T> {
  io.vertx.core.buffer.Buffer buffer;

  io.vertx.core.Promise<T> state;

  final io.vertx.ext.web.codec.impl.BodyCodecImpl this$0;

  io.vertx.ext.web.codec.impl.BodyCodecImpl$1(io.vertx.ext.web.codec.impl.BodyCodecImpl);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/BodyCodecImpl;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: invokestatic  #3                  // InterfaceMethod io/vertx/core/buffer/Buffer.buffer:()Lio/vertx/core/buffer/Buffer;
      13: putfield      #4                  // Field buffer:Lio/vertx/core/buffer/Buffer;
      16: aload_0
      17: invokestatic  #5                  // InterfaceMethod io/vertx/core/Promise.promise:()Lio/vertx/core/Promise;
      20: putfield      #6                  // Field state:Lio/vertx/core/Promise;
      23: return

  public void handle(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Lio/vertx/core/Promise;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod io/vertx/core/Promise.tryFail:(Ljava/lang/Throwable;)Z
      10: pop
      11: return

  public io.vertx.core.Future<T> result();
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Lio/vertx/core/Promise;
       4: invokeinterface #8,  1            // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
       9: areturn

  public io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer> exceptionHandler(io.vertx.core.Handler<java.lang.Throwable>);
    Code:
       0: aload_0
       1: areturn

  public void write(io.vertx.core.buffer.Buffer, io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Lio/vertx/core/buffer/Buffer;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod io/vertx/core/buffer/Buffer.appendBuffer:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/buffer/Buffer;
      10: pop
      11: aload_2
      12: invokestatic  #10                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      15: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      20: return

  public io.vertx.core.Future<java.lang.Void> write(io.vertx.core.buffer.Buffer);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:Lio/vertx/core/buffer/Buffer;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod io/vertx/core/buffer/Buffer.appendBuffer:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/buffer/Buffer;
      10: pop
      11: invokestatic  #10                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      14: areturn

  public void end(io.vertx.core.Handler<io.vertx.core.AsyncResult<java.lang.Void>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field state:Lio/vertx/core/Promise;
       4: invokeinterface #8,  1            // InterfaceMethod io/vertx/core/Promise.future:()Lio/vertx/core/Future;
       9: invokeinterface #12,  1           // InterfaceMethod io/vertx/core/Future.isComplete:()Z
      14: ifne          100
      17: aload_0
      18: getfield      #4                  // Field buffer:Lio/vertx/core/buffer/Buffer;
      21: invokeinterface #13,  1           // InterfaceMethod io/vertx/core/buffer/Buffer.length:()I
      26: ifle          75
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/vertx/ext/web/codec/impl/BodyCodecImpl;
      33: invokestatic  #14                 // Method io/vertx/ext/web/codec/impl/BodyCodecImpl.access$000:(Lio/vertx/ext/web/codec/impl/BodyCodecImpl;)Ljava/util/function/Function;
      36: aload_0
      37: getfield      #4                  // Field buffer:Lio/vertx/core/buffer/Buffer;
      40: invokeinterface #15,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      45: astore_2
      46: goto          77
      49: astore_3
      50: aload_0
      51: getfield      #6                  // Field state:Lio/vertx/core/Promise;
      54: aload_3
      55: invokeinterface #17,  2           // InterfaceMethod io/vertx/core/Promise.fail:(Ljava/lang/Throwable;)V
      60: aload_1
      61: ifnull        74
      64: aload_1
      65: aload_3
      66: invokestatic  #18                 // InterfaceMethod io/vertx/core/Future.failedFuture:(Ljava/lang/Throwable;)Lio/vertx/core/Future;
      69: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
      74: return
      75: aconst_null
      76: astore_2
      77: aload_0
      78: getfield      #6                  // Field state:Lio/vertx/core/Promise;
      81: aload_2
      82: invokeinterface #19,  2           // InterfaceMethod io/vertx/core/Promise.complete:(Ljava/lang/Object;)V
      87: aload_1
      88: ifnull        100
      91: aload_1
      92: invokestatic  #10                 // InterfaceMethod io/vertx/core/Future.succeededFuture:()Lio/vertx/core/Future;
      95: invokeinterface #11,  2           // InterfaceMethod io/vertx/core/Handler.handle:(Ljava/lang/Object;)V
     100: return
    Exception table:
       from    to  target type
          29    46    49   Class java/lang/Throwable

  public io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer> setWriteQueueMaxSize(int);
    Code:
       0: aload_0
       1: areturn

  public boolean writeQueueFull();
    Code:
       0: iconst_0
       1: ireturn

  public io.vertx.core.streams.WriteStream<io.vertx.core.buffer.Buffer> drainHandler(io.vertx.core.Handler<java.lang.Void>);
    Code:
       0: aload_0
       1: areturn

  public void write(java.lang.Object, io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class io/vertx/core/buffer/Buffer
       5: aload_2
       6: invokevirtual #21                 // Method write:(Lio/vertx/core/buffer/Buffer;Lio/vertx/core/Handler;)V
       9: return

  public io.vertx.core.Future write(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class io/vertx/core/buffer/Buffer
       5: invokevirtual #22                 // Method write:(Lio/vertx/core/buffer/Buffer;)Lio/vertx/core/Future;
       8: areturn

  public io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method exceptionHandler:(Lio/vertx/core/Handler;)Lio/vertx/core/streams/WriteStream;
       5: areturn

  public void handle(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class java/lang/Throwable
       5: invokevirtual #24                 // Method handle:(Ljava/lang/Throwable;)V
       8: return
}
