Compiled from "IOpenLayersMap.java"
public interface org.wicketstuff.openlayers.IOpenLayersMap {
  public abstract java.lang.String getJSinvoke(java.lang.String);

  public abstract java.lang.String getJSinvokeNoLineEnd(java.lang.String);

  public abstract java.lang.String getJSInstance();

  public abstract boolean isExternalControls();

  public abstract void setExternalControls(boolean);

  public abstract void setBounds(org.wicketstuff.openlayers.api.Bounds);

  public abstract org.wicketstuff.openlayers.api.Bounds getBounds();

  public abstract void setCenter(org.wicketstuff.openlayers.api.LonLat);

  public abstract org.wicketstuff.openlayers.api.LonLat getCenter();

  public abstract void setZoom(java.lang.Integer);

  public abstract java.lang.Integer getZoom();

  public abstract void setCenter(org.wicketstuff.openlayers.api.LonLat, java.lang.Integer);

  public abstract void update(org.apache.wicket.ajax.AjaxRequestTarget);

  public abstract java.util.List<org.wicketstuff.openlayers.api.layer.Layer> getLayers();

  public abstract java.util.List<org.wicketstuff.openlayers.api.IJavascriptComponent> getControls();

  public abstract java.util.List<org.wicketstuff.openlayers.api.Overlay> getOverlays();

  public abstract org.wicketstuff.openlayers.IOpenLayersMap addControl(org.wicketstuff.openlayers.api.IJavascriptComponent);

  public abstract org.wicketstuff.openlayers.IOpenLayersMap addOverlay(org.wicketstuff.openlayers.api.Overlay);

  public abstract org.wicketstuff.openlayers.IOpenLayersMap clearOverlays();

  public abstract org.wicketstuff.openlayers.IOpenLayersMap removeControl(org.wicketstuff.openlayers.api.IJavascriptComponent);

  public abstract org.wicketstuff.openlayers.IOpenLayersMap removeOverlay(org.wicketstuff.openlayers.api.Overlay);

  public abstract void setLayers(java.util.List<org.wicketstuff.openlayers.api.layer.Layer>);

  public abstract void setOverlays(java.util.List<org.wicketstuff.openlayers.api.Overlay>);

  public abstract void setBusinessLogicProjection(java.lang.String);

  public abstract java.lang.String getBusinessLogicProjection();
}
