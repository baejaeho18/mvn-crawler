Compiled from "MapLayer.java"
public class org.wicketstuff.openlayers.MapLayer implements java.io.Serializable {
  private static final long serialVersionUID;

  private final org.wicketstuff.openlayers.api.IMapCenter init_location;

  private org.wicketstuff.openlayers.AjaxOpenLayersMap map;

  private org.wicketstuff.openlayers.api.LonLat center;

  private java.lang.Integer zoom;

  private java.lang.String businessLogicProjection;

  private java.lang.String markersLayerName;

  private final java.util.Map<java.lang.String, org.wicketstuff.openlayers.api.Marker> markerList;

  private final java.util.Map<java.lang.String, org.wicketstuff.openlayers.MapLayer$Feature2FeatureStyle> featureList;

  private final java.util.Map<java.lang.String, org.wicketstuff.openlayers.api.feature.FeatureStyle> featureStyleList;

  public org.wicketstuff.openlayers.MapLayer(org.wicketstuff.openlayers.api.IMapCenter, java.lang.Object...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field zoom:Ljava/lang/Integer;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field businessLogicProjection:Ljava/lang/String;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field markersLayerName:Ljava/lang/String;
      29: aload_0
      30: new           #7                  // class java/util/HashMap
      33: dup
      34: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      37: putfield      #9                  // Field markerList:Ljava/util/Map;
      40: aload_0
      41: new           #7                  // class java/util/HashMap
      44: dup
      45: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      48: putfield      #10                 // Field featureList:Ljava/util/Map;
      51: aload_0
      52: new           #7                  // class java/util/HashMap
      55: dup
      56: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      59: putfield      #11                 // Field featureStyleList:Ljava/util/Map;
      62: aload_0
      63: aload_1
      64: putfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      67: aload_0
      68: aload_2
      69: invokevirtual #13                 // Method init:([Ljava/lang/Object;)V
      72: return

  protected void init(java.lang.Object...);
    Code:
       0: return

  public void addMarker(java.lang.String, org.wicketstuff.openlayers.api.Marker);
    Code:
       0: aload_0
       1: getfield      #9                  // Field markerList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          18
      13: aload_0
      14: aload_1
      15: invokevirtual #15                 // Method removeMarker:(Ljava/lang/String;)V
      18: aload_0
      19: getfield      #9                  // Field markerList:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      34: ifnull        46
      37: aload_0
      38: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      41: aload_2
      42: invokevirtual #17                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addOverlay:(Lorg/wicketstuff/openlayers/api/Overlay;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      45: pop
      46: return

  public org.wicketstuff.openlayers.api.Marker getMarker(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field markerList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class org/wicketstuff/openlayers/api/Marker
      13: areturn

  public void removeMarker(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field markerList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class org/wicketstuff/openlayers/api/Marker
      13: astore_2
      14: aload_2
      15: ifnull        34
      18: aload_0
      19: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      22: ifnull        34
      25: aload_0
      26: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      29: aload_2
      30: invokevirtual #21                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.removeOverlay:(Lorg/wicketstuff/openlayers/api/Overlay;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      33: pop
      34: return

  public void addFeature(java.lang.String, org.wicketstuff.openlayers.api.feature.Feature);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #22                 // Method addFeature:(Ljava/lang/String;Lorg/wicketstuff/openlayers/api/feature/Feature;Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)V
       7: return

  public void addFeature(java.lang.String, org.wicketstuff.openlayers.api.feature.Feature, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
       4: aload_3
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/wicketstuff/openlayers/api/feature/FeatureStyle
      13: astore        5
      15: aload         5
      17: ifnull        25
      20: aload         4
      22: ifnonnull     29
      25: aconst_null
      26: goto          38
      29: new           #23                 // class org/wicketstuff/openlayers/api/feature/FeatureStyle
      32: dup
      33: aload         5
      35: invokespecial #24                 // Method org/wicketstuff/openlayers/api/feature/FeatureStyle."<init>":(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)V
      38: astore        6
      40: aload         6
      42: ifnull        59
      45: aload         6
      47: aload         4
      49: invokevirtual #25                 // Method org/wicketstuff/openlayers/api/feature/FeatureStyle.setFillColor:(Ljava/lang/String;)V
      52: aload         6
      54: aload         4
      56: invokevirtual #26                 // Method org/wicketstuff/openlayers/api/feature/FeatureStyle.setStrokeColor:(Ljava/lang/String;)V
      59: aload_0
      60: aload_3
      61: aload_2
      62: aload         6
      64: invokevirtual #22                 // Method addFeature:(Ljava/lang/String;Lorg/wicketstuff/openlayers/api/feature/Feature;Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)V
      67: return

  public void addFeature(java.lang.String, org.wicketstuff.openlayers.api.feature.Feature, org.wicketstuff.openlayers.api.feature.FeatureStyle);
    Code:
       0: aload_0
       1: getfield      #10                 // Field featureList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          18
      13: aload_0
      14: aload_1
      15: invokevirtual #27                 // Method removeFeature:(Ljava/lang/String;)V
      18: aload_3
      19: ifnull        27
      22: aload_2
      23: aload_3
      24: invokevirtual #28                 // Method org/wicketstuff/openlayers/api/feature/Feature.setFeatureStyle:(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)V
      27: aload_0
      28: getfield      #10                 // Field featureList:Ljava/util/Map;
      31: aload_1
      32: new           #29                 // class org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle
      35: dup
      36: aload_2
      37: aload_3
      38: invokespecial #30                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle."<init>":(Lorg/wicketstuff/openlayers/api/feature/Feature;Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)V
      41: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      51: ifnull        76
      54: aload_3
      55: ifnull        67
      58: aload_0
      59: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      62: aload_3
      63: invokevirtual #31                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addFeatureStyle:(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      66: pop
      67: aload_0
      68: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      71: aload_2
      72: invokevirtual #32                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addFeature:(Lorg/wicketstuff/openlayers/api/feature/Feature;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      75: pop
      76: return

  public org.wicketstuff.openlayers.api.feature.Feature getFeature(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field featureList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: aconst_null
      19: goto          26
      22: aload_2
      23: invokevirtual #33                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle.getFeature:()Lorg/wicketstuff/openlayers/api/feature/Feature;
      26: areturn

  public void removeFeature(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field featureList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle
      13: astore_2
      14: aload_2
      15: ifnull        56
      18: aload_0
      19: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      22: ifnull        56
      25: aload_0
      26: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      29: aload_2
      30: invokevirtual #33                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle.getFeature:()Lorg/wicketstuff/openlayers/api/feature/Feature;
      33: invokevirtual #34                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.removeFeature:(Lorg/wicketstuff/openlayers/api/feature/Feature;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      36: pop
      37: aload_2
      38: invokevirtual #35                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle.getFeatureStyle:()Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;
      41: ifnull        56
      44: aload_0
      45: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      48: aload_2
      49: invokevirtual #35                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle.getFeatureStyle:()Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;
      52: invokevirtual #36                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.removeFeatureStyle:(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      55: pop
      56: return

  public void addFeatureStyle(java.lang.String, org.wicketstuff.openlayers.api.feature.FeatureStyle);
    Code:
       0: aload_0
       1: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          18
      13: aload_0
      14: aload_1
      15: invokevirtual #37                 // Method removeFeatureStyle:(Ljava/lang/String;)V
      18: aload_0
      19: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
      22: aload_1
      23: aload_2
      24: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      34: ifnull        46
      37: aload_0
      38: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      41: aload_2
      42: invokevirtual #31                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addFeatureStyle:(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      45: pop
      46: return

  public org.wicketstuff.openlayers.api.feature.FeatureStyle getFeatureStyle(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/wicketstuff/openlayers/api/feature/FeatureStyle
      13: areturn

  public void removeFeatureStyle(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/wicketstuff/openlayers/api/feature/FeatureStyle
      13: astore_2
      14: aload_2
      15: ifnull        34
      18: aload_0
      19: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      22: ifnull        34
      25: aload_0
      26: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      29: aload_2
      30: invokevirtual #36                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.removeFeatureStyle:(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      33: pop
      34: return

  public void setCenter(org.wicketstuff.openlayers.api.IMapCenter);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #38,  1           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.getLongitude:()Ljava/lang/Double;
       7: aload_1
       8: invokeinterface #39,  1           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.getLatitude:()Ljava/lang/Double;
      13: invokevirtual #40                 // Method setCenter:(Ljava/lang/Double;Ljava/lang/Double;)V
      16: aload_0
      17: aload_1
      18: invokeinterface #41,  1           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.getZoom:()Ljava/lang/Integer;
      23: invokevirtual #42                 // Method setZoom:(Ljava/lang/Integer;)V
      26: return

  public void setCenter(java.lang.Double, java.lang.Double);
    Code:
       0: aload_1
       1: ifnull        27
       4: aload_2
       5: ifnull        27
       8: aload_0
       9: new           #43                 // class org/wicketstuff/openlayers/api/LonLat
      12: dup
      13: aload_1
      14: invokevirtual #44                 // Method java/lang/Double.doubleValue:()D
      17: aload_2
      18: invokevirtual #44                 // Method java/lang/Double.doubleValue:()D
      21: invokespecial #45                 // Method org/wicketstuff/openlayers/api/LonLat."<init>":(DD)V
      24: invokevirtual #46                 // Method setCenter:(Lorg/wicketstuff/openlayers/api/LonLat;)V
      27: return

  public void setCenter(org.wicketstuff.openlayers.api.LonLat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
       5: aload_0
       6: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       9: ifnull        20
      12: aload_0
      13: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      16: aload_1
      17: invokevirtual #47                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.setCenter:(Lorg/wicketstuff/openlayers/api/LonLat;)V
      20: return

  public org.wicketstuff.openlayers.api.LonLat getCenter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       4: ifnull        18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      12: invokevirtual #48                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.getCenter:()Lorg/wicketstuff/openlayers/api/LonLat;
      15: putfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      18: aload_0
      19: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      22: areturn

  public void setZoom(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field zoom:Ljava/lang/Integer;
       5: aload_0
       6: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       9: ifnull        20
      12: aload_0
      13: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      16: aload_1
      17: invokevirtual #49                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.setZoom:(Ljava/lang/Integer;)V
      20: return

  public java.lang.Integer getZoom();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       4: ifnull        18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      12: invokevirtual #50                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.getZoom:()Ljava/lang/Integer;
      15: putfield      #4                  // Field zoom:Ljava/lang/Integer;
      18: aload_0
      19: getfield      #4                  // Field zoom:Ljava/lang/Integer;
      22: areturn

  public void setBusinessLogicProjection(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field businessLogicProjection:Ljava/lang/String;
       5: aload_0
       6: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       9: ifnull        20
      12: aload_0
      13: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      16: aload_1
      17: invokevirtual #51                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.setBusinessLogicProjection:(Ljava/lang/String;)V
      20: return

  public java.lang.String getBusinessLogicProjection();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       4: ifnull        18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      12: invokevirtual #52                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.getBusinessLogicProjection:()Ljava/lang/String;
      15: putfield      #5                  // Field businessLogicProjection:Ljava/lang/String;
      18: aload_0
      19: getfield      #5                  // Field businessLogicProjection:Ljava/lang/String;
      22: areturn

  public void setMarkersLayerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field markersLayerName:Ljava/lang/String;
       5: aload_0
       6: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       9: ifnull        20
      12: aload_0
      13: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      16: aload_1
      17: invokevirtual #53                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.setMarkersLayerName:(Ljava/lang/String;)V
      20: return

  public java.lang.String getMarkersLayerName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       4: ifnull        18
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      12: invokevirtual #54                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.getMarkersLayerName:()Ljava/lang/String;
      15: putfield      #6                  // Field markersLayerName:Ljava/lang/String;
      18: aload_0
      19: getfield      #6                  // Field markersLayerName:Ljava/lang/String;
      22: areturn

  public void updateInitLocation();
    Code:
       0: aload_0
       1: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
       4: ifnull        97
       7: aload_0
       8: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      11: aload_0
      12: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      15: ifnonnull     22
      18: aconst_null
      19: goto          32
      22: aload_0
      23: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      26: invokevirtual #55                 // Method org/wicketstuff/openlayers/api/LonLat.getLng:()D
      29: invokestatic  #56                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      32: invokeinterface #57,  2           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.setLongitude:(Ljava/lang/Double;)V
      37: aload_0
      38: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      41: aload_0
      42: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      45: ifnonnull     52
      48: aconst_null
      49: goto          62
      52: aload_0
      53: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      56: invokevirtual #58                 // Method org/wicketstuff/openlayers/api/LonLat.getLat:()D
      59: invokestatic  #56                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      62: invokeinterface #59,  2           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.setLatitude:(Ljava/lang/Double;)V
      67: aload_0
      68: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      71: aload_0
      72: getfield      #4                  // Field zoom:Ljava/lang/Integer;
      75: ifnonnull     82
      78: aconst_null
      79: goto          92
      82: aload_0
      83: getfield      #4                  // Field zoom:Ljava/lang/Integer;
      86: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      89: invokestatic  #61                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      92: invokeinterface #62,  2           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.setZoom:(Ljava/lang/Integer;)V
      97: return

  public org.wicketstuff.openlayers.AjaxOpenLayersMap getMapPanel(java.lang.String, java.util.List<org.wicketstuff.openlayers.api.layer.Layer>, java.util.HashMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       4: ifnonnull     337
       7: aload_0
       8: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      11: ifnull        81
      14: aload_0
      15: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      18: ifnonnull     43
      21: aload_0
      22: aload_0
      23: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      26: invokeinterface #38,  1           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.getLongitude:()Ljava/lang/Double;
      31: aload_0
      32: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      35: invokeinterface #39,  1           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.getLatitude:()Ljava/lang/Double;
      40: invokevirtual #40                 // Method setCenter:(Ljava/lang/Double;Ljava/lang/Double;)V
      43: aload_0
      44: getfield      #4                  // Field zoom:Ljava/lang/Integer;
      47: ifnonnull     81
      50: aload_0
      51: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      54: invokeinterface #41,  1           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.getZoom:()Ljava/lang/Integer;
      59: ifnull        81
      62: aload_0
      63: aload_0
      64: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
      67: invokeinterface #41,  1           // InterfaceMethod org/wicketstuff/openlayers/api/IMapCenter.getZoom:()Ljava/lang/Integer;
      72: invokevirtual #60                 // Method java/lang/Integer.intValue:()I
      75: invokestatic  #61                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      78: putfield      #4                  // Field zoom:Ljava/lang/Integer;
      81: aload_0
      82: new           #63                 // class org/wicketstuff/openlayers/AjaxOpenLayersMap
      85: dup
      86: aload_1
      87: aload_2
      88: aload_3
      89: invokespecial #64                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap."<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;)V
      92: putfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
      95: aload_0
      96: getfield      #5                  // Field businessLogicProjection:Ljava/lang/String;
      99: ifnull        113
     102: aload_0
     103: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     106: aload_0
     107: getfield      #5                  // Field businessLogicProjection:Ljava/lang/String;
     110: invokevirtual #51                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.setBusinessLogicProjection:(Ljava/lang/String;)V
     113: aload_0
     114: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
     117: ifnull        142
     120: aload_0
     121: getfield      #4                  // Field zoom:Ljava/lang/Integer;
     124: ifnull        142
     127: aload_0
     128: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     131: aload_0
     132: getfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
     135: aload_0
     136: getfield      #4                  // Field zoom:Ljava/lang/Integer;
     139: invokevirtual #65                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.setCenter:(Lorg/wicketstuff/openlayers/api/LonLat;Ljava/lang/Integer;)V
     142: aload_0
     143: getfield      #6                  // Field markersLayerName:Ljava/lang/String;
     146: ifnull        160
     149: aload_0
     150: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     153: aload_0
     154: getfield      #6                  // Field markersLayerName:Ljava/lang/String;
     157: invokevirtual #53                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.setMarkersLayerName:(Ljava/lang/String;)V
     160: aload_0
     161: getfield      #9                  // Field markerList:Ljava/util/Map;
     164: invokeinterface #66,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     169: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     174: astore        4
     176: aload         4
     178: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     183: ifeq          211
     186: aload         4
     188: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     193: checkcast     #19                 // class org/wicketstuff/openlayers/api/Marker
     196: astore        5
     198: aload_0
     199: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     202: aload         5
     204: invokevirtual #17                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addOverlay:(Lorg/wicketstuff/openlayers/api/Overlay;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
     207: pop
     208: goto          176
     211: aload_0
     212: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
     215: invokeinterface #66,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     220: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     225: astore        4
     227: aload         4
     229: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     234: ifeq          262
     237: aload         4
     239: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     244: checkcast     #23                 // class org/wicketstuff/openlayers/api/feature/FeatureStyle
     247: astore        5
     249: aload_0
     250: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     253: aload         5
     255: invokevirtual #31                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addFeatureStyle:(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
     258: pop
     259: goto          227
     262: aload_0
     263: getfield      #10                 // Field featureList:Ljava/util/Map;
     266: invokeinterface #66,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     271: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     276: astore        4
     278: aload         4
     280: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     285: ifeq          337
     288: aload         4
     290: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     295: checkcast     #29                 // class org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle
     298: astore        5
     300: aload         5
     302: invokevirtual #35                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle.getFeatureStyle:()Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;
     305: ifnull        321
     308: aload_0
     309: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     312: aload         5
     314: invokevirtual #35                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle.getFeatureStyle:()Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;
     317: invokevirtual #31                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addFeatureStyle:(Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
     320: pop
     321: aload_0
     322: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     325: aload         5
     327: invokevirtual #33                 // Method org/wicketstuff/openlayers/MapLayer$Feature2FeatureStyle.getFeature:()Lorg/wicketstuff/openlayers/api/feature/Feature;
     330: invokevirtual #32                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap.addFeature:(Lorg/wicketstuff/openlayers/api/feature/Feature;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
     333: pop
     334: goto          278
     337: aload_0
     338: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
     341: areturn

  public org.wicketstuff.openlayers.AjaxOpenLayersMap getMapPanel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       4: areturn

  public void reset();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field map:Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;
       5: aload_0
       6: getfield      #9                  // Field markerList:Ljava/util/Map;
       9: invokeinterface #70,  1           // InterfaceMethod java/util/Map.clear:()V
      14: aload_0
      15: getfield      #10                 // Field featureList:Ljava/util/Map;
      18: invokeinterface #70,  1           // InterfaceMethod java/util/Map.clear:()V
      23: aload_0
      24: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
      27: invokeinterface #70,  1           // InterfaceMethod java/util/Map.clear:()V
      32: aload_0
      33: aconst_null
      34: putfield      #3                  // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      37: aload_0
      38: aconst_null
      39: putfield      #4                  // Field zoom:Ljava/lang/Integer;
      42: aload_0
      43: aconst_null
      44: putfield      #5                  // Field businessLogicProjection:Ljava/lang/String;
      47: aload_0
      48: aconst_null
      49: putfield      #6                  // Field markersLayerName:Ljava/lang/String;
      52: return

  public void cleanMapPanel(java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #10                 // Field featureList:Ljava/util/Map;
       4: invokeinterface #71,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          41
      12: aload_0
      13: aload_0
      14: getfield      #10                 // Field featureList:Ljava/util/Map;
      17: invokeinterface #72,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokeinterface #73,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #74                 // class java/lang/String
      35: invokevirtual #27                 // Method removeFeature:(Ljava/lang/String;)V
      38: goto          0
      41: aload_0
      42: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
      45: invokeinterface #71,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      50: ifne          82
      53: aload_0
      54: aload_0
      55: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
      58: invokeinterface #72,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      63: invokeinterface #73,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      68: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #74                 // class java/lang/String
      76: invokevirtual #37                 // Method removeFeatureStyle:(Ljava/lang/String;)V
      79: goto          41
      82: aload_0
      83: getfield      #9                  // Field markerList:Ljava/util/Map;
      86: invokeinterface #71,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      91: ifne          123
      94: aload_0
      95: aload_0
      96: getfield      #9                  // Field markerList:Ljava/util/Map;
      99: invokeinterface #72,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     104: invokeinterface #73,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     109: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: checkcast     #74                 // class java/lang/String
     117: invokevirtual #15                 // Method removeMarker:(Ljava/lang/String;)V
     120: goto          82
     123: aload_0
     124: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
     127: ifnull        138
     130: aload_0
     131: aload_0
     132: getfield      #12                 // Field init_location:Lorg/wicketstuff/openlayers/api/IMapCenter;
     135: invokevirtual #75                 // Method setCenter:(Lorg/wicketstuff/openlayers/api/IMapCenter;)V
     138: aload_0
     139: aload_1
     140: invokevirtual #13                 // Method init:([Ljava/lang/Object;)V
     143: return

  public final java.util.Set<java.lang.String> getMarkerIdList();
    Code:
       0: aload_0
       1: getfield      #9                  // Field markerList:Ljava/util/Map;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public final java.util.Set<java.lang.String> getFeatureIdList();
    Code:
       0: aload_0
       1: getfield      #10                 // Field featureList:Ljava/util/Map;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public final java.util.Set<java.lang.String> getFeatureStyleIdList();
    Code:
       0: aload_0
       1: getfield      #11                 // Field featureStyleList:Ljava/util/Map;
       4: invokeinterface #72,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn
}
