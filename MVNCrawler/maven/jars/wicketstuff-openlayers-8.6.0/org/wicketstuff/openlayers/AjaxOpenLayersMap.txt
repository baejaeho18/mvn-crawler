Compiled from "AjaxOpenLayersMap.java"
public class org.wicketstuff.openlayers.AjaxOpenLayersMap extends org.apache.wicket.markup.html.WebMarkupContainer implements org.wicketstuff.openlayers.IOpenLayersMap {
  private static final long serialVersionUID;

  private java.util.List<org.wicketstuff.openlayers.api.layer.Layer> layers;

  private final java.util.HashMap<java.lang.String, java.lang.String> options;

  private final java.util.List<org.wicketstuff.openlayers.api.feature.Feature> features;

  private final java.util.List<org.wicketstuff.openlayers.api.IJavascriptComponent> controls;

  private final java.util.List<org.wicketstuff.openlayers.api.Overlay> overlays;

  private final java.util.List<org.wicketstuff.openlayers.api.feature.FeatureStyle> featureStyles;

  private final java.util.HashMap<java.lang.String, org.wicketstuff.openlayers.api.layer.Vector> featureVectors;

  private boolean externalControls;

  private org.wicketstuff.openlayers.api.Bounds bounds;

  private org.wicketstuff.openlayers.api.LonLat center;

  private java.lang.Integer zoom;

  private java.lang.String businessLogicProjection;

  private java.lang.String markersLayerName;

  public org.wicketstuff.openlayers.AjaxOpenLayersMap(java.lang.String, java.util.List<org.wicketstuff.openlayers.api.layer.Layer>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;)V
       7: return

  public org.wicketstuff.openlayers.AjaxOpenLayersMap(java.lang.String, java.util.List<org.wicketstuff.openlayers.api.layer.Layer>, java.util.HashMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;Ljava/util/List;)V
       8: return

  public org.wicketstuff.openlayers.AjaxOpenLayersMap(java.lang.String, java.util.List<org.wicketstuff.openlayers.api.layer.Layer>, java.util.HashMap<java.lang.String, java.lang.String>, java.util.List<org.wicketstuff.openlayers.api.feature.Feature>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/HashMap;Ljava/util/List;Ljava/util/List;)V
      10: return

  public org.wicketstuff.openlayers.AjaxOpenLayersMap(java.lang.String, java.util.List<org.wicketstuff.openlayers.api.layer.Layer>, java.util.HashMap<java.lang.String, java.lang.String>, java.util.List<org.wicketstuff.openlayers.api.feature.Feature>, java.util.List<org.wicketstuff.openlayers.api.feature.FeatureStyle>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method org/apache/wicket/markup/html/WebMarkupContainer."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #5                  // class java/util/ArrayList
       9: dup
      10: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #7                  // Field controls:Ljava/util/List;
      16: aload_0
      17: new           #5                  // class java/util/ArrayList
      20: dup
      21: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      24: putfield      #8                  // Field overlays:Ljava/util/List;
      27: aload_0
      28: new           #9                  // class java/util/HashMap
      31: dup
      32: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      35: putfield      #11                 // Field featureVectors:Ljava/util/HashMap;
      38: aload_0
      39: iconst_0
      40: putfield      #12                 // Field externalControls:Z
      43: aload_0
      44: aconst_null
      45: putfield      #13                 // Field bounds:Lorg/wicketstuff/openlayers/api/Bounds;
      48: aload_0
      49: aconst_null
      50: putfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      53: aload_0
      54: aconst_null
      55: putfield      #15                 // Field zoom:Ljava/lang/Integer;
      58: aload_0
      59: aconst_null
      60: putfield      #16                 // Field businessLogicProjection:Ljava/lang/String;
      63: aload_0
      64: aconst_null
      65: putfield      #17                 // Field markersLayerName:Ljava/lang/String;
      68: aload_0
      69: iconst_1
      70: invokevirtual #18                 // Method setOutputMarkupId:(Z)Lorg/apache/wicket/Component;
      73: pop
      74: aload_0
      75: aload_2
      76: ifnonnull     89
      79: new           #5                  // class java/util/ArrayList
      82: dup
      83: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      86: goto          90
      89: aload_2
      90: putfield      #19                 // Field layers:Ljava/util/List;
      93: aload_0
      94: aload_3
      95: ifnonnull     108
      98: new           #9                  // class java/util/HashMap
     101: dup
     102: invokespecial #10                 // Method java/util/HashMap."<init>":()V
     105: goto          109
     108: aload_3
     109: putfield      #20                 // Field options:Ljava/util/HashMap;
     112: aload_0
     113: aload         4
     115: ifnonnull     128
     118: new           #5                  // class java/util/ArrayList
     121: dup
     122: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
     125: goto          130
     128: aload         4
     130: putfield      #21                 // Field features:Ljava/util/List;
     133: aload_0
     134: aload         5
     136: ifnonnull     149
     139: new           #5                  // class java/util/ArrayList
     142: dup
     143: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
     146: goto          151
     149: aload         5
     151: putfield      #22                 // Field featureStyles:Ljava/util/List;
     154: aload_0
     155: iconst_1
     156: anewarray     #23                 // class org/apache/wicket/behavior/Behavior
     159: dup
     160: iconst_0
     161: new           #24                 // class org/wicketstuff/openlayers/AjaxOpenLayersMap$1
     164: dup
     165: aload_0
     166: invokespecial #25                 // Method org/wicketstuff/openlayers/AjaxOpenLayersMap$1."<init>":(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;)V
     169: aastore
     170: invokevirtual #26                 // Method add:([Lorg/apache/wicket/behavior/Behavior;)Lorg/apache/wicket/Component;
     173: pop
     174: aload_0
     175: getfield      #21                 // Field features:Ljava/util/List;
     178: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     183: astore        6
     185: aload         6
     187: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     192: ifeq          220
     195: aload         6
     197: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     202: checkcast     #30                 // class org/wicketstuff/openlayers/api/feature/Feature
     205: astore        7
     207: aload_0
     208: aload         7
     210: invokevirtual #31                 // Method org/wicketstuff/openlayers/api/feature/Feature.getDisplayInLayer:()Ljava/lang/String;
     213: invokevirtual #32                 // Method getFeatureVector:(Ljava/lang/String;)Lorg/wicketstuff/openlayers/api/layer/Vector;
     216: pop
     217: goto          185
     220: return

  public static void onPageRenderHead(org.apache.wicket.markup.head.IHeaderResponse, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #33                 // Method java/lang/String.trim:()Ljava/lang/String;
       8: invokevirtual #34                 // Method java/lang/String.length:()I
      11: ifne          20
      14: ldc           #35                 // String http://openlayers.org/api/
      16: astore_1
      17: goto          54
      20: aload_1
      21: invokevirtual #33                 // Method java/lang/String.trim:()Ljava/lang/String;
      24: astore_1
      25: aload_1
      26: ldc           #36                 // String /
      28: invokevirtual #37                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      31: ifne          54
      34: new           #38                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      41: aload_1
      42: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #36                 // String /
      47: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: astore_1
      54: new           #38                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      61: aload_1
      62: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #42                 // String OpenLayers.js
      67: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: astore_1
      74: aload_0
      75: aload_1
      76: invokestatic  #43                 // Method org/apache/wicket/markup/head/JavaScriptHeaderItem.forUrl:(Ljava/lang/String;)Lorg/apache/wicket/markup/head/JavaScriptUrlReferenceHeaderItem;
      79: invokeinterface #44,  2           // InterfaceMethod org/apache/wicket/markup/head/IHeaderResponse.render:(Lorg/apache/wicket/markup/head/HeaderItem;)V
      84: invokestatic  #45                 // Method org/apache/wicket/Application.get:()Lorg/apache/wicket/Application;
      87: aload_0
      88: invokestatic  #46                 // Method org/apache/wicket/resource/CoreLibrariesContributor.contributeAjax:(Lorg/apache/wicket/Application;Lorg/apache/wicket/markup/head/IHeaderResponse;)V
      91: aload_0
      92: new           #47                 // class org/apache/wicket/request/resource/JavaScriptResourceReference
      95: dup
      96: ldc           #48                 // class org/wicketstuff/openlayers/AjaxOpenLayersMap
      98: ldc           #49                 // String wicket-openlayersmap.js
     100: invokespecial #50                 // Method org/apache/wicket/request/resource/JavaScriptResourceReference."<init>":(Ljava/lang/Class;Ljava/lang/String;)V
     103: invokestatic  #51                 // Method org/apache/wicket/markup/head/JavaScriptHeaderItem.forReference:(Lorg/apache/wicket/request/resource/ResourceReference;)Lorg/apache/wicket/markup/head/JavaScriptReferenceHeaderItem;
     106: invokeinterface #44,  2           // InterfaceMethod org/apache/wicket/markup/head/IHeaderResponse.render:(Lorg/apache/wicket/markup/head/HeaderItem;)V
     111: return

  public void setExternalControls(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field externalControls:Z
       5: return

  public boolean isExternalControls();
    Code:
       0: aload_0
       1: getfield      #12                 // Field externalControls:Z
       4: ireturn

  public void setBounds(org.wicketstuff.openlayers.api.Bounds);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field bounds:Lorg/wicketstuff/openlayers/api/Bounds;
       5: return

  public org.wicketstuff.openlayers.api.Bounds getBounds();
    Code:
       0: aload_0
       1: getfield      #13                 // Field bounds:Lorg/wicketstuff/openlayers/api/Bounds;
       4: areturn

  public void setCenter(org.wicketstuff.openlayers.api.LonLat);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
       5: aload_0
       6: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
       9: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      11: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      14: aload_0
      15: invokedynamic #55,  0             // InvokeDynamic #0:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;)Ljava/util/function/Consumer;
      20: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      23: return

  public org.wicketstuff.openlayers.api.LonLat getCenter();
    Code:
       0: aload_0
       1: getfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
       4: areturn

  public void setZoom(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field zoom:Ljava/lang/Integer;
       5: aload_0
       6: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
       9: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      11: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      14: aload_0
      15: invokedynamic #57,  0             // InvokeDynamic #1:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;)Ljava/util/function/Consumer;
      20: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      23: return

  public java.lang.Integer getZoom();
    Code:
       0: aload_0
       1: getfield      #15                 // Field zoom:Ljava/lang/Integer;
       4: areturn

  public void setCenter(org.wicketstuff.openlayers.api.LonLat, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
       5: aload_0
       6: aload_2
       7: putfield      #15                 // Field zoom:Ljava/lang/Integer;
      10: aload_0
      11: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      14: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      16: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      19: aload_0
      20: invokedynamic #58,  0             // InvokeDynamic #2:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;)Ljava/util/function/Consumer;
      25: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      28: return

  private java.lang.String getJSSetCenter();
    Code:
       0: aload_0
       1: getfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
       4: ifnonnull     10
       7: ldc           #59                 // String
       9: areturn
      10: ldc           #59                 // String
      12: astore_1
      13: aload_0
      14: invokevirtual #60                 // Method getBusinessLogicProjection:()Ljava/lang/String;
      17: ifnull        62
      20: new           #38                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #61                 // String .transform(new OpenLayers.Projection(\"
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #60                 // Method getBusinessLogicProjection:()Ljava/lang/String;
      36: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #62                 // String \"),
      41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: ldc           #63                 // String map
      47: invokevirtual #64                 // Method getJSinvokeNoLineEnd:(Ljava/lang/String;)Ljava/lang/String;
      50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #65                 // String .getProjectionObject())
      55: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: astore_1
      62: aload_0
      63: getfield      #15                 // Field zoom:Ljava/lang/Integer;
      66: ifnonnull     108
      69: aload_0
      70: new           #38                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #66                 // String setCenter(
      79: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      86: invokevirtual #67                 // Method org/wicketstuff/openlayers/api/LonLat.getJSconstructor:()Ljava/lang/String;
      89: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_1
      93: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #68                 // String )
      98: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
     107: areturn
     108: aload_0
     109: new           #38                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     116: ldc           #66                 // String setCenter(
     118: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: getfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
     125: invokevirtual #67                 // Method org/wicketstuff/openlayers/api/LonLat.getJSconstructor:()Ljava/lang/String;
     128: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: aload_1
     132: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #70                 // String ,
     137: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_0
     141: getfield      #15                 // Field zoom:Ljava/lang/Integer;
     144: invokevirtual #71                 // Method java/lang/Integer.toString:()Ljava/lang/String;
     147: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: ldc           #68                 // String )
     152: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
     161: areturn

  private java.lang.String getJSSetBusinessLogicProjection();
    Code:
       0: aload_0
       1: getfield      #16                 // Field businessLogicProjection:Ljava/lang/String;
       4: ifnonnull     14
       7: aload_0
       8: ldc           #72                 // String setBusinessLogicProjection(null)
      10: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
      13: areturn
      14: aload_0
      15: new           #38                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #73                 // String setBusinessLogicProjection(\'
      24: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #16                 // Field businessLogicProjection:Ljava/lang/String;
      31: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #74                 // String \')
      36: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
      45: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap addControl(org.wicketstuff.openlayers.api.IJavascriptComponent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field controls:Ljava/util/List;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      15: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      17: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      20: aload_0
      21: aload_1
      22: invokedynamic #76,  0             // InvokeDynamic #3:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/IJavascriptComponent;)Ljava/util/function/Consumer;
      27: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      30: aload_0
      31: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap addOverlay(org.wicketstuff.openlayers.api.Overlay);
    Code:
       0: aload_0
       1: getfield      #8                  // Field overlays:Ljava/util/List;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: instanceof    #77                 // class org/wicketstuff/openlayers/api/Marker
      15: ifeq          26
      18: aload_1
      19: checkcast     #77                 // class org/wicketstuff/openlayers/api/Marker
      22: aload_0
      23: invokevirtual #78                 // Method org/wicketstuff/openlayers/api/Marker.setMap:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)V
      26: aload_1
      27: invokevirtual #79                 // Method org/wicketstuff/openlayers/api/Overlay.getBehaviors:()Ljava/util/List;
      30: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore_2
      36: aload_2
      37: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          71
      45: aload_2
      46: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #80                 // class org/wicketstuff/openlayers/event/OverlayListenerBehavior
      54: astore_3
      55: aload_0
      56: iconst_1
      57: anewarray     #23                 // class org/apache/wicket/behavior/Behavior
      60: dup
      61: iconst_0
      62: aload_3
      63: aastore
      64: invokevirtual #26                 // Method add:([Lorg/apache/wicket/behavior/Behavior;)Lorg/apache/wicket/Component;
      67: pop
      68: goto          36
      71: aload_0
      72: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      75: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      77: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      80: aload_0
      81: aload_1
      82: invokedynamic #81,  0             // InvokeDynamic #4:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/Overlay;)Ljava/util/function/Consumer;
      87: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      90: aload_0
      91: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap addLayer(org.wicketstuff.openlayers.api.layer.Layer);
    Code:
       0: aload_0
       1: getfield      #19                 // Field layers:Ljava/util/List;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      15: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      17: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      20: aload_0
      21: aload_1
      22: invokedynamic #82,  0             // InvokeDynamic #5:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/layer/Layer;)Ljava/util/function/Consumer;
      27: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      30: aload_0
      31: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap addFeature(org.wicketstuff.openlayers.api.feature.Feature);
    Code:
       0: aload_0
       1: getfield      #21                 // Field features:Ljava/util/List;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: aload_0
      13: invokevirtual #83                 // Method org/wicketstuff/openlayers/api/feature/Feature.setMap:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)V
      16: aload_0
      17: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      20: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      22: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      25: aload_0
      26: aload_1
      27: invokedynamic #84,  0             // InvokeDynamic #6:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/feature/Feature;)Ljava/util/function/Consumer;
      32: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      35: aload_0
      36: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap addFeatureStyle(org.wicketstuff.openlayers.api.feature.FeatureStyle);
    Code:
       0: aload_0
       1: getfield      #22                 // Field featureStyles:Ljava/util/List;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      15: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      17: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      20: aload_0
      21: aload_1
      22: invokedynamic #85,  0             // InvokeDynamic #7:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Ljava/util/function/Consumer;
      27: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      30: aload_0
      31: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap removeFeatureStyle(org.wicketstuff.openlayers.api.feature.FeatureStyle);
    Code:
       0: aload_0
       1: getfield      #22                 // Field featureStyles:Ljava/util/List;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #22                 // Field featureStyles:Ljava/util/List;
      17: aload_1
      18: invokeinterface #87,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      23: pop
      24: goto          0
      27: aload_0
      28: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      31: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      33: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      36: aload_0
      37: aload_1
      38: invokedynamic #88,  0             // InvokeDynamic #8:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/feature/FeatureStyle;)Ljava/util/function/Consumer;
      43: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      46: aload_0
      47: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap clearOverlays();
    Code:
       0: aload_0
       1: getfield      #8                  // Field overlays:Ljava/util/List;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          79
      19: aload_1
      20: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #89                 // class org/wicketstuff/openlayers/api/Overlay
      28: astore_2
      29: aload_2
      30: invokevirtual #79                 // Method org/wicketstuff/openlayers/api/Overlay.getBehaviors:()Ljava/util/List;
      33: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      38: astore_3
      39: aload_3
      40: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          76
      48: aload_3
      49: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #80                 // class org/wicketstuff/openlayers/event/OverlayListenerBehavior
      57: astore        4
      59: aload_0
      60: iconst_1
      61: anewarray     #23                 // class org/apache/wicket/behavior/Behavior
      64: dup
      65: iconst_0
      66: aload         4
      68: aastore
      69: invokevirtual #90                 // Method remove:([Lorg/apache/wicket/behavior/Behavior;)Lorg/apache/wicket/Component;
      72: pop
      73: goto          39
      76: goto          10
      79: aload_0
      80: getfield      #8                  // Field overlays:Ljava/util/List;
      83: invokeinterface #91,  1           // InterfaceMethod java/util/List.clear:()V
      88: aload_0
      89: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      92: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      94: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      97: aload_0
      98: invokedynamic #92,  0             // InvokeDynamic #9:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;)Ljava/util/function/Consumer;
     103: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     106: aload_0
     107: areturn

  protected java.lang.String getJSinit();
    Code:
       0: new           #93                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #94                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #95                 // Method getMarkersLayerName:()Ljava/lang/String;
      12: ifnonnull     20
      15: ldc           #96                 // String , null
      17: goto          47
      20: new           #38                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #97                 // String , \'
      29: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #95                 // Method getMarkersLayerName:()Ljava/lang/String;
      36: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #98                 // String \'
      41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: astore_2
      48: aload_0
      49: getfield      #20                 // Field options:Ljava/util/HashMap;
      52: invokevirtual #99                 // Method java/util/HashMap.size:()I
      55: ifle          213
      58: aload_1
      59: ldc           #100                // String \nvar options = {
      61: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      64: pop
      65: iconst_1
      66: istore_3
      67: aload_0
      68: getfield      #20                 // Field options:Ljava/util/HashMap;
      71: invokevirtual #102                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      74: invokeinterface #103,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      79: astore        4
      81: aload         4
      83: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          162
      91: aload         4
      93: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #104                // class java/lang/String
     101: astore        5
     103: iload_3
     104: ifeq          112
     107: iconst_0
     108: istore_3
     109: goto          119
     112: aload_1
     113: ldc           #105                // String ,\n
     115: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     118: pop
     119: aload_1
     120: new           #38                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     127: aload         5
     129: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #106                // String :
     134: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_0
     138: getfield      #20                 // Field options:Ljava/util/HashMap;
     141: aload         5
     143: invokevirtual #107                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     146: checkcast     #104                // class java/lang/String
     149: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     158: pop
     159: goto          81
     162: aload_1
     163: ldc           #108                // String };\n
     165: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     168: pop
     169: aload_1
     170: new           #38                 // class java/lang/StringBuilder
     173: dup
     174: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     177: ldc           #109                // String new WicketOMap(\'
     179: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload_0
     183: invokevirtual #110                // Method getMarkupId:()Ljava/lang/String;
     186: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: ldc           #111                // String \', options
     191: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     194: aload_2
     195: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: ldc           #112                // String , true);\n
     200: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     209: pop
     210: goto          254
     213: aload_1
     214: new           #38                 // class java/lang/StringBuilder
     217: dup
     218: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     221: ldc           #109                // String new WicketOMap(\'
     223: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     226: aload_0
     227: invokevirtual #110                // Method getMarkupId:()Ljava/lang/String;
     230: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: ldc           #113                // String \', null
     235: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload_2
     239: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: ldc           #112                // String , true);\n
     244: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     250: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     253: pop
     254: aload_0
     255: getfield      #22                 // Field featureStyles:Ljava/util/List;
     258: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     263: astore_3
     264: aload_3
     265: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     270: ifeq          298
     273: aload_3
     274: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     279: checkcast     #114                // class org/wicketstuff/openlayers/api/feature/FeatureStyle
     282: astore        4
     284: aload_1
     285: aload         4
     287: aload_0
     288: invokevirtual #115                // Method org/wicketstuff/openlayers/api/feature/FeatureStyle.getJSAddStyle:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
     291: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     294: pop
     295: goto          264
     298: aload_0
     299: getfield      #21                 // Field features:Ljava/util/List;
     302: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     307: astore_3
     308: aload_3
     309: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     314: ifeq          341
     317: aload_3
     318: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     323: checkcast     #30                 // class org/wicketstuff/openlayers/api/feature/Feature
     326: astore        4
     328: aload_0
     329: aload         4
     331: invokevirtual #31                 // Method org/wicketstuff/openlayers/api/feature/Feature.getDisplayInLayer:()Ljava/lang/String;
     334: invokevirtual #32                 // Method getFeatureVector:(Ljava/lang/String;)Lorg/wicketstuff/openlayers/api/layer/Vector;
     337: pop
     338: goto          308
     341: aload_0
     342: invokevirtual #116                // Method getLayers:()Ljava/util/List;
     345: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     350: astore_3
     351: aload_3
     352: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     357: ifeq          385
     360: aload_3
     361: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     366: checkcast     #117                // class org/wicketstuff/openlayers/api/layer/Layer
     369: astore        4
     371: aload_1
     372: aload         4
     374: aload_0
     375: invokevirtual #118                // Method org/wicketstuff/openlayers/api/layer/Layer.getJSAddLayer:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
     378: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     381: pop
     382: goto          351
     385: aload_0
     386: getfield      #21                 // Field features:Ljava/util/List;
     389: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     394: astore_3
     395: aload_3
     396: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     401: ifeq          438
     404: aload_3
     405: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     410: checkcast     #30                 // class org/wicketstuff/openlayers/api/feature/Feature
     413: astore        4
     415: aload_1
     416: aload         4
     418: aload_0
     419: aload_0
     420: aload         4
     422: invokevirtual #31                 // Method org/wicketstuff/openlayers/api/feature/Feature.getDisplayInLayer:()Ljava/lang/String;
     425: invokevirtual #32                 // Method getFeatureVector:(Ljava/lang/String;)Lorg/wicketstuff/openlayers/api/layer/Vector;
     428: invokevirtual #119                // Method org/wicketstuff/openlayers/api/feature/Feature.getJSAddFeature:(Lorg/wicketstuff/openlayers/IOpenLayersMap;Lorg/wicketstuff/openlayers/api/layer/Vector;)Ljava/lang/String;
     431: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     434: pop
     435: goto          395
     438: aload_1
     439: aload_0
     440: invokespecial #120                // Method getJSSetCenter:()Ljava/lang/String;
     443: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     446: pop
     447: aload_0
     448: getfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
     451: ifnull        461
     454: aload_0
     455: getfield      #15                 // Field zoom:Ljava/lang/Integer;
     458: ifnonnull     472
     461: aload_1
     462: aload_0
     463: ldc           #121                // String zoomToMaxExtent()
     465: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
     468: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     471: pop
     472: aload_0
     473: getfield      #7                  // Field controls:Ljava/util/List;
     476: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     481: astore_3
     482: aload_3
     483: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     488: ifeq          518
     491: aload_3
     492: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     497: checkcast     #122                // class org/wicketstuff/openlayers/api/IJavascriptComponent
     500: astore        4
     502: aload_1
     503: aload         4
     505: aload_0
     506: invokeinterface #123,  2          // InterfaceMethod org/wicketstuff/openlayers/api/IJavascriptComponent.getJSadd:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
     511: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     514: pop
     515: goto          482
     518: aload_0
     519: getfield      #8                  // Field overlays:Ljava/util/List;
     522: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     527: astore_3
     528: aload_3
     529: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     534: ifeq          562
     537: aload_3
     538: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     543: checkcast     #89                 // class org/wicketstuff/openlayers/api/Overlay
     546: astore        4
     548: aload_1
     549: aload_0
     550: aload         4
     552: invokespecial #124                // Method getJsOverlay:(Lorg/wicketstuff/openlayers/api/Overlay;)Ljava/lang/String;
     555: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     558: pop
     559: goto          528
     562: aload_0
     563: getfield      #16                 // Field businessLogicProjection:Ljava/lang/String;
     566: ifnull        578
     569: aload_1
     570: aload_0
     571: invokespecial #125                // Method getJSSetBusinessLogicProjection:()Ljava/lang/String;
     574: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     577: pop
     578: aload_1
     579: invokevirtual #126                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     582: areturn

  public java.lang.String getJSinvoke(java.lang.String);
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #127                // String Wicket.omaps[\'
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #110                // Method getMarkupId:()Ljava/lang/String;
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #128                // String \'].
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #129                // String ;\n
      30: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: areturn

  public java.lang.String getJSinvokeNoLineEnd(java.lang.String);
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #127                // String Wicket.omaps[\'
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #110                // Method getMarkupId:()Ljava/lang/String;
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #128                // String \'].
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  private java.lang.String getJsOverlay(org.wicketstuff.openlayers.api.Overlay);
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: aload_0
       9: invokevirtual #130                // Method org/wicketstuff/openlayers/api/Overlay.getJSadd:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
      12: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #131                // String \n
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: astore_2
      24: aload_1
      25: instanceof    #77                 // class org/wicketstuff/openlayers/api/Marker
      28: ifeq          123
      31: aload_1
      32: checkcast     #77                 // class org/wicketstuff/openlayers/api/Marker
      35: astore_3
      36: aload_3
      37: invokevirtual #132                // Method org/wicketstuff/openlayers/api/Marker.getPopup:()Lorg/wicketstuff/openlayers/api/PopupWindowPanel;
      40: ifnull        65
      43: aload_3
      44: invokevirtual #133                // Method org/wicketstuff/openlayers/api/Marker.getEvents:()[Lorg/wicketstuff/openlayers/event/EventType;
      47: ifnull        58
      50: aload_3
      51: invokevirtual #133                // Method org/wicketstuff/openlayers/api/Marker.getEvents:()[Lorg/wicketstuff/openlayers/event/EventType;
      54: arraylength
      55: ifne          65
      58: aload_3
      59: getstatic     #134                // Field org/wicketstuff/openlayers/event/EventType.mousedown:Lorg/wicketstuff/openlayers/event/EventType;
      62: invokevirtual #135                // Method org/wicketstuff/openlayers/api/Marker.addEvent:(Lorg/wicketstuff/openlayers/event/EventType;)V
      65: aload_3
      66: invokevirtual #136                // Method org/wicketstuff/openlayers/api/Marker.getIcon:()Lorg/wicketstuff/openlayers/api/Icon;
      69: ifnull        123
      72: new           #38                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      79: aload_3
      80: invokevirtual #136                // Method org/wicketstuff/openlayers/api/Marker.getIcon:()Lorg/wicketstuff/openlayers/api/Icon;
      83: invokevirtual #137                // Method org/wicketstuff/openlayers/api/Icon.getSize:()Lorg/wicketstuff/openlayers/api/Size;
      86: invokevirtual #138                // Method org/wicketstuff/openlayers/api/Size.getJSadd:()Ljava/lang/String;
      89: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_3
      93: invokevirtual #136                // Method org/wicketstuff/openlayers/api/Marker.getIcon:()Lorg/wicketstuff/openlayers/api/Icon;
      96: invokevirtual #139                // Method org/wicketstuff/openlayers/api/Icon.getOffset:()Lorg/wicketstuff/openlayers/api/Pixel;
      99: invokevirtual #140                // Method org/wicketstuff/openlayers/api/Pixel.getJSadd:()Ljava/lang/String;
     102: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_3
     106: invokevirtual #136                // Method org/wicketstuff/openlayers/api/Marker.getIcon:()Lorg/wicketstuff/openlayers/api/Icon;
     109: invokevirtual #141                // Method org/wicketstuff/openlayers/api/Icon.getJSadd:()Ljava/lang/String;
     112: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: aload_2
     116: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: astore_2
     123: aload_2
     124: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap removeControl(org.wicketstuff.openlayers.api.IJavascriptComponent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field controls:Ljava/util/List;
       4: aload_1
       5: invokeinterface #87,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      15: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      17: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      20: aload_0
      21: aload_1
      22: invokedynamic #142,  0            // InvokeDynamic #10:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/IJavascriptComponent;)Ljava/util/function/Consumer;
      27: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      30: aload_0
      31: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap removeOverlay(org.wicketstuff.openlayers.api.Overlay);
    Code:
       0: aload_0
       1: getfield      #8                  // Field overlays:Ljava/util/List;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #8                  // Field overlays:Ljava/util/List;
      17: aload_1
      18: invokeinterface #87,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      23: pop
      24: goto          0
      27: aload_1
      28: invokevirtual #79                 // Method org/wicketstuff/openlayers/api/Overlay.getBehaviors:()Ljava/util/List;
      31: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore_2
      37: aload_2
      38: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          72
      46: aload_2
      47: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #80                 // class org/wicketstuff/openlayers/event/OverlayListenerBehavior
      55: astore_3
      56: aload_0
      57: iconst_1
      58: anewarray     #23                 // class org/apache/wicket/behavior/Behavior
      61: dup
      62: iconst_0
      63: aload_3
      64: aastore
      65: invokevirtual #90                 // Method remove:([Lorg/apache/wicket/behavior/Behavior;)Lorg/apache/wicket/Component;
      68: pop
      69: goto          37
      72: aload_0
      73: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      76: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      78: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      81: aload_0
      82: aload_1
      83: invokedynamic #143,  0            // InvokeDynamic #11:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/Overlay;)Ljava/util/function/Consumer;
      88: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      91: aload_0
      92: areturn

  public org.wicketstuff.openlayers.IOpenLayersMap removeFeature(org.wicketstuff.openlayers.api.feature.Feature);
    Code:
       0: aload_0
       1: getfield      #21                 // Field features:Ljava/util/List;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #21                 // Field features:Ljava/util/List;
      17: aload_1
      18: invokeinterface #87,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      23: pop
      24: goto          0
      27: aload_0
      28: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      31: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      33: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      36: aload_0
      37: aload_1
      38: invokedynamic #144,  0            // InvokeDynamic #12:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Lorg/wicketstuff/openlayers/api/feature/Feature;)Ljava/util/function/Consumer;
      43: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      46: aload_0
      47: areturn

  public void update(org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: invokestatic  #145                // Method org/apache/wicket/request/cycle/RequestCycle.get:()Lorg/apache/wicket/request/cycle/RequestCycle;
       3: invokevirtual #146                // Method org/apache/wicket/request/cycle/RequestCycle.getRequest:()Lorg/apache/wicket/request/Request;
       6: astore_2
       7: aload_0
       8: aload_2
       9: invokevirtual #147                // Method org/apache/wicket/request/Request.getRequestParameters:()Lorg/apache/wicket/request/IRequestParameters;
      12: ldc           #148                // String centerConverted
      14: invokeinterface #149,  2          // InterfaceMethod org/apache/wicket/request/IRequestParameters.getParameterValue:(Ljava/lang/String;)Lorg/apache/wicket/util/string/StringValue;
      19: invokevirtual #150                // Method org/apache/wicket/util/string/StringValue.toString:()Ljava/lang/String;
      22: invokestatic  #151                // Method org/wicketstuff/openlayers/api/LonLat.parseWithNames:(Ljava/lang/String;)Lorg/wicketstuff/openlayers/api/LonLat;
      25: putfield      #14                 // Field center:Lorg/wicketstuff/openlayers/api/LonLat;
      28: aload_0
      29: aload_2
      30: invokevirtual #147                // Method org/apache/wicket/request/Request.getRequestParameters:()Lorg/apache/wicket/request/IRequestParameters;
      33: ldc           #152                // String zoomConverted
      35: invokeinterface #149,  2          // InterfaceMethod org/apache/wicket/request/IRequestParameters.getParameterValue:(Ljava/lang/String;)Lorg/apache/wicket/util/string/StringValue;
      40: invokevirtual #150                // Method org/apache/wicket/util/string/StringValue.toString:()Ljava/lang/String;
      43: invokestatic  #153                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      46: invokestatic  #154                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: putfield      #15                 // Field zoom:Ljava/lang/Integer;
      52: aload_0
      53: aload_2
      54: invokevirtual #147                // Method org/apache/wicket/request/Request.getRequestParameters:()Lorg/apache/wicket/request/IRequestParameters;
      57: ldc           #155                // String boundsConverted
      59: invokeinterface #149,  2          // InterfaceMethod org/apache/wicket/request/IRequestParameters.getParameterValue:(Ljava/lang/String;)Lorg/apache/wicket/util/string/StringValue;
      64: invokevirtual #150                // Method org/apache/wicket/util/string/StringValue.toString:()Ljava/lang/String;
      67: invokestatic  #156                // Method org/wicketstuff/openlayers/api/Bounds.parseWithNames:(Ljava/lang/String;)Lorg/wicketstuff/openlayers/api/Bounds;
      70: putfield      #13                 // Field bounds:Lorg/wicketstuff/openlayers/api/Bounds;
      73: return

  public java.util.List<org.wicketstuff.openlayers.api.layer.Layer> getLayers();
    Code:
       0: aload_0
       1: getfield      #19                 // Field layers:Ljava/util/List;
       4: areturn

  public java.util.List<org.wicketstuff.openlayers.api.IJavascriptComponent> getControls();
    Code:
       0: aload_0
       1: getfield      #7                  // Field controls:Ljava/util/List;
       4: areturn

  public java.lang.String getJSInstance();
    Code:
       0: new           #38                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #127                // String Wicket.omaps[\'
       9: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #110                // Method getMarkupId:()Ljava/lang/String;
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #157                // String \']
      21: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public java.util.List<org.wicketstuff.openlayers.api.Overlay> getOverlays();
    Code:
       0: aload_0
       1: getfield      #8                  // Field overlays:Ljava/util/List;
       4: invokestatic  #158                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public void setLayers(java.util.List<org.wicketstuff.openlayers.api.layer.Layer>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field layers:Ljava/util/List;
       5: return

  public void setOverlays(java.util.List<org.wicketstuff.openlayers.api.Overlay>);
    Code:
       0: aload_0
       1: invokevirtual #159                // Method clearOverlays:()Lorg/wicketstuff/openlayers/IOpenLayersMap;
       4: pop
       5: aload_1
       6: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          40
      21: aload_2
      22: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #89                 // class org/wicketstuff/openlayers/api/Overlay
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokevirtual #160                // Method addOverlay:(Lorg/wicketstuff/openlayers/api/Overlay;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      36: pop
      37: goto          12
      40: return

  public void setBusinessLogicProjection(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field businessLogicProjection:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
       9: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      11: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      14: aload_0
      15: invokedynamic #161,  0            // InvokeDynamic #13:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;)Ljava/util/function/Consumer;
      20: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      23: return

  public java.lang.String getBusinessLogicProjection();
    Code:
       0: aload_0
       1: getfield      #16                 // Field businessLogicProjection:Ljava/lang/String;
       4: areturn

  public org.wicketstuff.openlayers.api.layer.Vector getFeatureVector(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field featureVectors:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #107                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #162                // class org/wicketstuff/openlayers/api/layer/Vector
      11: astore_2
      12: aload_2
      13: ifnonnull     50
      16: new           #162                // class org/wicketstuff/openlayers/api/layer/Vector
      19: dup
      20: aload_1
      21: ifnonnull     29
      24: ldc           #163                // String Default
      26: goto          30
      29: aload_1
      30: invokespecial #164                // Method org/wicketstuff/openlayers/api/layer/Vector."<init>":(Ljava/lang/String;)V
      33: astore_2
      34: aload_0
      35: aload_2
      36: invokevirtual #165                // Method addLayer:(Lorg/wicketstuff/openlayers/api/layer/Layer;)Lorg/wicketstuff/openlayers/IOpenLayersMap;
      39: pop
      40: aload_0
      41: getfield      #11                 // Field featureVectors:Ljava/util/HashMap;
      44: aload_1
      45: aload_2
      46: invokevirtual #166                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_2
      51: areturn

  public void setMarkersLayerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field markersLayerName:Ljava/lang/String;
       5: return

  public java.lang.String getMarkersLayerName();
    Code:
       0: aload_0
       1: getfield      #17                 // Field markersLayerName:Ljava/lang/String;
       4: areturn

  public void setVisibleOnlyLayers(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
       4: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
       6: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
       9: aload_0
      10: aload_1
      11: invokedynamic #167,  0            // InvokeDynamic #14:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;[Ljava/lang/String;)Ljava/util/function/Consumer;
      16: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      19: return

  public void toggleLayer(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #168                // Method findLayerId:(Ljava/lang/String;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnull        29
      10: aload_0
      11: invokevirtual #52                 // Method getRequestCycle:()Lorg/apache/wicket/request/cycle/RequestCycle;
      14: ldc           #53                 // class org/apache/wicket/ajax/AjaxRequestTarget
      16: invokevirtual #54                 // Method org/apache/wicket/request/cycle/RequestCycle.find:(Ljava/lang/Class;)Ljava/util/Optional;
      19: aload_0
      20: aload_2
      21: invokedynamic #169,  0            // InvokeDynamic #15:accept:(Lorg/wicketstuff/openlayers/AjaxOpenLayersMap;Ljava/lang/String;)Ljava/util/function/Consumer;
      26: invokevirtual #56                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      29: return

  private java.lang.String findLayerId(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field featureVectors:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #107                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #162                // class org/wicketstuff/openlayers/api/layer/Vector
      11: astore_2
      12: aload_2
      13: ifnull        21
      16: aload_2
      17: invokevirtual #170                // Method org/wicketstuff/openlayers/api/layer/Vector.getId:()Ljava/lang/String;
      20: areturn
      21: aload_0
      22: getfield      #17                 // Field markersLayerName:Ljava/lang/String;
      25: ifnull        44
      28: aload_0
      29: getfield      #17                 // Field markersLayerName:Ljava/lang/String;
      32: aload_1
      33: invokevirtual #171                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      36: ifeq          44
      39: ldc           #172                // String 1
      41: goto          45
      44: aconst_null
      45: areturn

  private void lambda$toggleLayer$15(java.lang.String, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_0
       2: new           #38                 // class java/lang/StringBuilder
       5: dup
       6: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
       9: ldc           #173                // String toggleLayer(
      11: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_1
      15: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #68                 // String )
      20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
      29: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      34: return

  private void lambda$setVisibleOnlyLayers$14(java.lang.String[], org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: new           #5                  // class java/util/ArrayList
       3: dup
       4: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: getfield      #17                 // Field markersLayerName:Ljava/lang/String;
      13: invokeinterface #75,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      18: pop
      19: aload_3
      20: aload_0
      21: getfield      #11                 // Field featureVectors:Ljava/util/HashMap;
      24: invokevirtual #102                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      27: invokeinterface #175,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: new           #93                 // class java/lang/StringBuffer
      36: dup
      37: invokespecial #94                 // Method java/lang/StringBuffer."<init>":()V
      40: astore        4
      42: aconst_null
      43: astore        5
      45: aload_1
      46: astore        6
      48: aload         6
      50: arraylength
      51: istore        7
      53: iconst_0
      54: istore        8
      56: iload         8
      58: iload         7
      60: if_icmpge     122
      63: aload         6
      65: iload         8
      67: aaload
      68: astore        9
      70: aload_0
      71: aload         9
      73: invokespecial #168                // Method findLayerId:(Ljava/lang/String;)Ljava/lang/String;
      76: astore        5
      78: aload         5
      80: ifnull        107
      83: aload         4
      85: invokevirtual #176                // Method java/lang/StringBuffer.length:()I
      88: ifle          99
      91: aload         4
      93: ldc           #177                // String ,
      95: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      98: pop
      99: aload         4
     101: aload         5
     103: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     106: pop
     107: aload_3
     108: aload         9
     110: invokeinterface #87,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
     115: pop
     116: iinc          8, 1
     119: goto          56
     122: new           #93                 // class java/lang/StringBuffer
     125: dup
     126: invokespecial #94                 // Method java/lang/StringBuffer."<init>":()V
     129: astore        6
     131: aload_3
     132: invokeinterface #27,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     137: astore        7
     139: aload         7
     141: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          201
     149: aload         7
     151: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #104                // class java/lang/String
     159: astore        8
     161: aload_0
     162: aload         8
     164: invokespecial #168                // Method findLayerId:(Ljava/lang/String;)Ljava/lang/String;
     167: astore        5
     169: aload         5
     171: ifnull        198
     174: aload         6
     176: invokevirtual #176                // Method java/lang/StringBuffer.length:()I
     179: ifle          190
     182: aload         6
     184: ldc           #177                // String ,
     186: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     189: pop
     190: aload         6
     192: aload         5
     194: invokevirtual #101                // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     197: pop
     198: goto          139
     201: aload_2
     202: aload_0
     203: new           #38                 // class java/lang/StringBuilder
     206: dup
     207: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     210: ldc           #178                // String setLayersVisibility([
     212: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: aload         4
     217: invokevirtual #126                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     220: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: ldc           #179                // String ], [
     225: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: aload         6
     230: invokevirtual #126                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     233: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: ldc           #180                // String ])
     238: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     244: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
     247: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
     252: return

  private void lambda$setBusinessLogicProjection$13(org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #125                // Method getJSSetBusinessLogicProjection:()Ljava/lang/String;
       5: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      10: return

  private void lambda$removeFeature$12(org.wicketstuff.openlayers.api.feature.Feature, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method org/wicketstuff/openlayers/api/feature/Feature.getDisplayInLayer:()Ljava/lang/String;
       8: invokevirtual #32                 // Method getFeatureVector:(Ljava/lang/String;)Lorg/wicketstuff/openlayers/api/layer/Vector;
      11: invokevirtual #181                // Method org/wicketstuff/openlayers/api/feature/Feature.getJSRemoveFeature:(Lorg/wicketstuff/openlayers/IOpenLayersMap;Lorg/wicketstuff/openlayers/api/layer/Vector;)Ljava/lang/String;
      14: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      19: return

  private void lambda$removeOverlay$11(org.wicketstuff.openlayers.api.Overlay, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokevirtual #182                // Method org/wicketstuff/openlayers/api/Overlay.getJSremove:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
       6: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      11: return

  private void lambda$removeControl$10(org.wicketstuff.openlayers.api.IJavascriptComponent, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokeinterface #183,  2          // InterfaceMethod org/wicketstuff/openlayers/api/IJavascriptComponent.getJSremove:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
       8: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      13: return

  private void lambda$clearOverlays$9(org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_1
       1: aload_0
       2: ldc           #184                // String clearOverlays()
       4: invokevirtual #69                 // Method getJSinvoke:(Ljava/lang/String;)Ljava/lang/String;
       7: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      12: return

  private void lambda$removeFeatureStyle$8(org.wicketstuff.openlayers.api.feature.FeatureStyle, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokevirtual #185                // Method org/wicketstuff/openlayers/api/feature/FeatureStyle.getJSRemoveStyle:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
       6: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      11: return

  private void lambda$addFeatureStyle$7(org.wicketstuff.openlayers.api.feature.FeatureStyle, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokevirtual #115                // Method org/wicketstuff/openlayers/api/feature/FeatureStyle.getJSAddStyle:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
       6: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      11: return

  private void lambda$addFeature$6(org.wicketstuff.openlayers.api.feature.Feature, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: aload_0
       4: aload_1
       5: invokevirtual #31                 // Method org/wicketstuff/openlayers/api/feature/Feature.getDisplayInLayer:()Ljava/lang/String;
       8: invokevirtual #32                 // Method getFeatureVector:(Ljava/lang/String;)Lorg/wicketstuff/openlayers/api/layer/Vector;
      11: invokevirtual #119                // Method org/wicketstuff/openlayers/api/feature/Feature.getJSAddFeature:(Lorg/wicketstuff/openlayers/IOpenLayersMap;Lorg/wicketstuff/openlayers/api/layer/Vector;)Ljava/lang/String;
      14: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      19: return

  private void lambda$addLayer$5(org.wicketstuff.openlayers.api.layer.Layer, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokevirtual #118                // Method org/wicketstuff/openlayers/api/layer/Layer.getJSAddLayer:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
       6: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      11: return

  private void lambda$addOverlay$4(org.wicketstuff.openlayers.api.Overlay, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokespecial #124                // Method getJsOverlay:(Lorg/wicketstuff/openlayers/api/Overlay;)Ljava/lang/String;
       6: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      11: return

  private void lambda$addControl$3(org.wicketstuff.openlayers.api.IJavascriptComponent, org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokeinterface #123,  2          // InterfaceMethod org/wicketstuff/openlayers/api/IJavascriptComponent.getJSadd:(Lorg/wicketstuff/openlayers/IOpenLayersMap;)Ljava/lang/String;
       8: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      13: return

  private void lambda$setCenter$2(org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #120                // Method getJSSetCenter:()Ljava/lang/String;
       5: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      10: return

  private void lambda$setZoom$1(org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #120                // Method getJSSetCenter:()Ljava/lang/String;
       5: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      10: return

  private void lambda$setCenter$0(org.apache.wicket.ajax.AjaxRequestTarget);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #120                // Method getJSSetCenter:()Ljava/lang/String;
       5: invokeinterface #174,  2          // InterfaceMethod org/apache/wicket/ajax/AjaxRequestTarget.appendJavaScript:(Ljava/lang/CharSequence;)V
      10: return
}
