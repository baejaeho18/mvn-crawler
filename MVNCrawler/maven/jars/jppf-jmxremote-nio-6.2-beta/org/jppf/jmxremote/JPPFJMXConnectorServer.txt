Compiled from "JPPFJMXConnectorServer.java"
public class org.jppf.jmxremote.JPPFJMXConnectorServer extends javax.management.remote.JMXConnectorServer implements org.jppf.jmxremote.JMXConnectionStatusListener {
  private static final org.slf4j.Logger log;

  private static final boolean debugEnabled;

  public static final java.lang.String AUTHORIZATION_CHECKER;

  public static final java.lang.String CONNECTOR_SERVER_KEY;

  private final java.util.Map<java.lang.String, java.lang.Object> environment;

  private final javax.management.remote.JMXServiceURL address;

  private boolean started;

  private javax.management.remote.MBeanServerForwarder forwarder;

  static {};
    Code:
       0: ldc           #1                  // class org/jppf/jmxremote/JPPFJMXConnectorServer
       2: invokestatic  #31                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #37                 // Field log:Lorg/slf4j/Logger;
       8: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
      11: invokeinterface #39,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      16: putstatic     #45                 // Field debugEnabled:Z
      19: return

  public org.jppf.jmxremote.JPPFJMXConnectorServer(javax.management.remote.JMXServiceURL, java.util.Map<java.lang.String, ?>, javax.management.MBeanServer);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #52                 // Method javax/management/remote/JMXConnectorServer."<init>":(Ljavax/management/MBeanServer;)V
       5: aload_0
       6: new           #55                 // class java/util/HashMap
       9: dup
      10: invokespecial #57                 // Method java/util/HashMap."<init>":()V
      13: putfield      #59                 // Field environment:Ljava/util/Map;
      16: aload_0
      17: iconst_0
      18: putfield      #61                 // Field started:Z
      21: aload_2
      22: ifnull        35
      25: aload_0
      26: getfield      #59                 // Field environment:Ljava/util/Map;
      29: aload_2
      30: invokeinterface #63,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      35: aload_0
      36: getfield      #59                 // Field environment:Ljava/util/Map;
      39: ldc           #17                 // String jppf.jmxremote.internal.connectorserver
      41: aload_0
      42: invokeinterface #69,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_0
      49: aload_1
      50: putfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      53: return

  public void start() throws java.io.IOException;
    Code:
       0: getstatic     #45                 // Field debugEnabled:Z
       3: ifeq          24
       6: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
       9: ldc           #91                 // String starting server @{}, env={}
      11: aload_0
      12: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      15: aload_0
      16: getfield      #59                 // Field environment:Ljava/util/Map;
      19: invokeinterface #93,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      24: aload_0
      25: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      28: invokevirtual #97                 // Method javax/management/remote/JMXServiceURL.getPort:()I
      31: istore_1
      32: aload_0
      33: getfield      #59                 // Field environment:Ljava/util/Map;
      36: ldc           #101                // String jppf.jmx.remote.tls.enabled
      38: invokeinterface #103,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #107                // class java/lang/Boolean
      46: astore_2
      47: aload_2
      48: ifnonnull     55
      51: iconst_0
      52: goto          59
      55: aload_2
      56: invokevirtual #109                // Method java/lang/Boolean.booleanValue:()Z
      59: istore_3
      60: invokestatic  #112                // Method org/jppf/nio/NioHelper.getAcceptorServer:()Lorg/jppf/nio/acceptor/AcceptorNioServer;
      63: iload_1
      64: iload_3
      65: aload_0
      66: getfield      #59                 // Field environment:Ljava/util/Map;
      69: iconst_0
      70: invokevirtual #118                // Method org/jppf/nio/acceptor/AcceptorNioServer.addServer:(IZLjava/util/Map;Z)V
      73: getstatic     #45                 // Field debugEnabled:Z
      76: ifeq          97
      79: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
      82: ldc           #124                // String server @{} added listener port {}
      84: aload_0
      85: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      88: iload_1
      89: invokestatic  #126                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      92: invokeinterface #93,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      97: invokestatic  #132                // Method org/jppf/jmxremote/nio/JMXNioServerPool.getServers:()[Lorg/jppf/jmxremote/nio/JMXNioServer;
     100: dup
     101: astore        7
     103: arraylength
     104: istore        6
     106: iconst_0
     107: istore        5
     109: goto          128
     112: aload         7
     114: iload         5
     116: aaload
     117: astore        4
     119: aload         4
     121: aload_0
     122: invokevirtual #138                // Method org/jppf/jmxremote/nio/JMXNioServer.addConnectionStatusListener:(Lorg/jppf/jmxremote/JMXConnectionStatusListener;)V
     125: iinc          5, 1
     128: iload         5
     130: iload         6
     132: if_icmplt     112
     135: aload_0
     136: iconst_1
     137: putfield      #61                 // Field started:Z
     140: getstatic     #45                 // Field debugEnabled:Z
     143: ifeq          176
     146: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
     149: ldc           #144                // String successfully started server @{}
     151: aload_0
     152: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
     155: invokeinterface #146,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     160: goto          176
     163: astore_1
     164: aload_1
     165: athrow
     166: astore_1
     167: new           #89                 // class java/io/IOException
     170: dup
     171: aload_1
     172: invokespecial #149                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     175: athrow
     176: return
    Exception table:
       from    to  target type
          24   160   163   Class java/io/IOException
          24   160   166   Class java/lang/Exception

  public void stop() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #61                 // Field started:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #61                 // Field started:Z
      13: invokestatic  #132                // Method org/jppf/jmxremote/nio/JMXNioServerPool.getServers:()[Lorg/jppf/jmxremote/nio/JMXNioServer;
      16: dup
      17: astore        4
      19: arraylength
      20: istore_3
      21: iconst_0
      22: istore_2
      23: goto          45
      26: aload         4
      28: iload_2
      29: aaload
      30: astore_1
      31: aload_1
      32: aload_0
      33: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      36: invokevirtual #97                 // Method javax/management/remote/JMXServiceURL.getPort:()I
      39: invokevirtual #167                // Method org/jppf/jmxremote/nio/JMXNioServer.removeAllConnections:(I)V
      42: iinc          2, 1
      45: iload_2
      46: iload_3
      47: if_icmplt     26
      50: goto          96
      53: astore        5
      55: invokestatic  #132                // Method org/jppf/jmxremote/nio/JMXNioServerPool.getServers:()[Lorg/jppf/jmxremote/nio/JMXNioServer;
      58: dup
      59: astore        9
      61: arraylength
      62: istore        8
      64: iconst_0
      65: istore        7
      67: goto          86
      70: aload         9
      72: iload         7
      74: aaload
      75: astore        6
      77: aload         6
      79: aload_0
      80: invokevirtual #171                // Method org/jppf/jmxremote/nio/JMXNioServer.removeConnectionStatusListener:(Lorg/jppf/jmxremote/JMXConnectionStatusListener;)V
      83: iinc          7, 1
      86: iload         7
      88: iload         8
      90: if_icmplt     70
      93: aload         5
      95: athrow
      96: invokestatic  #132                // Method org/jppf/jmxremote/nio/JMXNioServerPool.getServers:()[Lorg/jppf/jmxremote/nio/JMXNioServer;
      99: dup
     100: astore        9
     102: arraylength
     103: istore        8
     105: iconst_0
     106: istore        7
     108: goto          127
     111: aload         9
     113: iload         7
     115: aaload
     116: astore        6
     118: aload         6
     120: aload_0
     121: invokevirtual #171                // Method org/jppf/jmxremote/nio/JMXNioServer.removeConnectionStatusListener:(Lorg/jppf/jmxremote/JMXConnectionStatusListener;)V
     124: iinc          7, 1
     127: iload         7
     129: iload         8
     131: if_icmplt     111
     134: goto          150
     137: astore_1
     138: aload_1
     139: athrow
     140: astore_1
     141: new           #89                 // class java/io/IOException
     144: dup
     145: aload_1
     146: invokespecial #149                // Method java/io/IOException."<init>":(Ljava/lang/Throwable;)V
     149: athrow
     150: return
    Exception table:
       from    to  target type
          13    53    53   any
           0     7   137   Class java/io/IOException
           8   134   137   Class java/io/IOException
           0     7   140   Class java/lang/Exception
           8   134   140   Class java/lang/Exception

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #61                 // Field started:Z
       4: ireturn

  public javax.management.remote.JMXServiceURL getAddress();
    Code:
       0: aload_0
       1: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
       4: areturn

  public java.util.Map<java.lang.String, ?> getAttributes();
    Code:
       0: new           #55                 // class java/util/HashMap
       3: dup
       4: invokespecial #57                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #59                 // Field environment:Ljava/util/Map;
      12: dup
      13: astore_2
      14: monitorenter
      15: aload_0
      16: getfield      #59                 // Field environment:Ljava/util/Map;
      19: invokeinterface #182,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #186,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: goto          79
      34: aload         4
      36: invokeinterface #192,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #198                // class java/util/Map$Entry
      44: astore_3
      45: aload_3
      46: invokeinterface #200,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: instanceof    #203                // class java/io/Serializable
      54: ifeq          79
      57: aload_1
      58: aload_3
      59: invokeinterface #205,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: checkcast     #208                // class java/lang/String
      67: aload_3
      68: invokeinterface #200,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      73: invokeinterface #69,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload         4
      81: invokeinterface #210,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      86: ifne          34
      89: aload_2
      90: monitorexit
      91: goto          97
      94: aload_2
      95: monitorexit
      96: athrow
      97: aload_1
      98: invokestatic  #213                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     101: areturn
    Exception table:
       from    to  target type
          15    91    94   any
          94    96    94   any

  public void connectionOpened(org.jppf.jmxremote.JMXConnectionStatusEvent);
    Code:
       0: getstatic     #45                 // Field debugEnabled:Z
       3: ifeq          21
       6: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
       9: ldc           #225                // String server @{} connection opened event = {}
      11: aload_0
      12: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      15: aload_1
      16: invokeinterface #93,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokevirtual #227                // Method org/jppf/jmxremote/JMXConnectionStatusEvent.getConnectionID:()Ljava/lang/String;
      26: ldc           #233                // String connection opened
      28: aconst_null
      29: invokevirtual #235                // Method connectionOpened:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      32: return

  public void connectionClosed(org.jppf.jmxremote.JMXConnectionStatusEvent);
    Code:
       0: getstatic     #45                 // Field debugEnabled:Z
       3: ifeq          21
       6: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
       9: ldc           #241                // String server @{} connection closed event = {}
      11: aload_0
      12: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      15: aload_1
      16: invokeinterface #93,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokevirtual #227                // Method org/jppf/jmxremote/JMXConnectionStatusEvent.getConnectionID:()Ljava/lang/String;
      26: ldc           #243                // String connection closed
      28: aconst_null
      29: invokevirtual #245                // Method connectionClosed:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      32: return

  public void connectionFailed(org.jppf.jmxremote.JMXConnectionStatusEvent);
    Code:
       0: getstatic     #45                 // Field debugEnabled:Z
       3: ifeq          21
       6: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
       9: ldc           #248                // String server @{} connection failed event = {}
      11: aload_0
      12: getfield      #73                 // Field address:Ljavax/management/remote/JMXServiceURL;
      15: aload_1
      16: invokeinterface #93,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokevirtual #227                // Method org/jppf/jmxremote/JMXConnectionStatusEvent.getConnectionID:()Ljava/lang/String;
      26: ldc           #250                // String connection failed
      28: aload_1
      29: invokevirtual #252                // Method org/jppf/jmxremote/JMXConnectionStatusEvent.getThrowable:()Ljava/lang/Throwable;
      32: invokestatic  #256                // Method org/jppf/utils/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;
      35: invokevirtual #262                // Method connectionFailed:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      38: return

  public synchronized void setMBeanServerForwarder(javax.management.remote.MBeanServerForwarder);
    Code:
       0: getstatic     #45                 // Field debugEnabled:Z
       3: ifeq          18
       6: getstatic     #37                 // Field log:Lorg/slf4j/Logger;
       9: ldc_w         #266                // String setting MBeanServerForwarder = {}
      12: aload_1
      13: invokeinterface #146,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      18: aload_0
      19: aload_1
      20: invokespecial #268                // Method javax/management/remote/JMXConnectorServer.setMBeanServerForwarder:(Ljavax/management/remote/MBeanServerForwarder;)V
      23: return

  public synchronized javax.management.MBeanServer getMBeanServer();
    Code:
       0: aload_0
       1: getfield      #273                // Field forwarder:Ljavax/management/remote/MBeanServerForwarder;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #275                // Method javax/management/remote/JMXConnectorServer.getMBeanServer:()Ljavax/management/MBeanServer;
      11: goto          18
      14: aload_0
      15: getfield      #273                // Field forwarder:Ljavax/management/remote/MBeanServerForwarder;
      18: areturn
}
