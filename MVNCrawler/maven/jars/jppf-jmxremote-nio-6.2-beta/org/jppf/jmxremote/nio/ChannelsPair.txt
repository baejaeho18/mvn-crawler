Compiled from "ChannelsPair.java"
public class org.jppf.jmxremote.nio.ChannelsPair extends org.jppf.utils.Pair<org.jppf.jmxremote.nio.JMXContext, org.jppf.jmxremote.nio.JMXContext> implements org.jppf.nio.NioChannelHandler, org.jppf.nio.CloseableContext {
  private static final long serialVersionUID;

  private static final org.slf4j.Logger log;

  private final java.util.concurrent.atomic.AtomicBoolean closing;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private java.lang.String connectionID;

  private boolean serverSide;

  private org.jppf.jmxremote.JPPFJMXConnectorServer jxmConnectorServer;

  private org.jppf.jmxremote.JPPFJMXConnector jmxConnector;

  private int serverPort;

  private int interestOps;

  private java.nio.channels.SelectionKey selectionKey;

  private org.jppf.jmxremote.message.JMXMessageHandler messageHandler;

  private final java.util.List<org.jppf.jmxremote.nio.ChannelsPair$CloseCallback> closeCallbacks;

  private final javax.management.remote.JMXAuthenticator authenticator;

  private org.jppf.jmxremote.JMXAuthorizationChecker auhtorizationChecker;

  private javax.security.auth.Subject subject;

  static {};
    Code:
       0: ldc           #1                  // class org/jppf/jmxremote/nio/ChannelsPair
       2: invokestatic  #47                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #53                 // Field log:Lorg/slf4j/Logger;
       8: return

  public org.jppf.jmxremote.nio.ChannelsPair(org.jppf.jmxremote.nio.JMXContext, org.jppf.jmxremote.nio.JMXContext, org.jppf.jmxremote.nio.JMXNioServer, javax.management.remote.JMXAuthenticator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #59                 // Method org/jppf/utils/Pair."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
       6: aload_0
       7: new           #62                 // class java/util/concurrent/atomic/AtomicBoolean
      10: dup
      11: iconst_0
      12: invokespecial #64                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      15: putfield      #67                 // Field closing:Ljava/util/concurrent/atomic/AtomicBoolean;
      18: aload_0
      19: new           #62                 // class java/util/concurrent/atomic/AtomicBoolean
      22: dup
      23: iconst_0
      24: invokespecial #64                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      27: putfield      #69                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      30: aload_0
      31: iconst_m1
      32: putfield      #71                 // Field serverPort:I
      35: aload_0
      36: new           #73                 // class java/util/concurrent/CopyOnWriteArrayList
      39: dup
      40: invokespecial #75                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      43: putfield      #77                 // Field closeCallbacks:Ljava/util/List;
      46: aload_0
      47: aload         4
      49: putfield      #79                 // Field authenticator:Ljavax/management/remote/JMXAuthenticator;
      52: return

  public org.jppf.jmxremote.nio.JMXContext readingContext();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method first:()Ljava/lang/Object;
       4: checkcast     #93                 // class org/jppf/jmxremote/nio/JMXContext
       7: areturn

  public org.jppf.jmxremote.nio.JMXContext writingContext();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method second:()Ljava/lang/Object;
       4: checkcast     #93                 // class org/jppf/jmxremote/nio/JMXContext
       7: areturn

  public void close(java.lang.Exception) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #69                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #103                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          90
      12: aload_0
      13: invokevirtual #107                // Method getSelectionKey:()Ljava/nio/channels/SelectionKey;
      16: invokevirtual #111                // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      19: invokevirtual #117                // Method java/nio/channels/SelectableChannel.close:()V
      22: goto          90
      25: astore_2
      26: new           #121                // class java/util/ArrayList
      29: dup
      30: aload_0
      31: getfield      #77                 // Field closeCallbacks:Ljava/util/List;
      34: invokespecial #123                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      37: astore_3
      38: aload_0
      39: getfield      #77                 // Field closeCallbacks:Ljava/util/List;
      42: invokeinterface #126,  1          // InterfaceMethod java/util/List.clear:()V
      47: aload_3
      48: invokeinterface #131,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      53: astore        5
      55: goto          78
      58: aload         5
      60: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      65: checkcast     #140                // class org/jppf/jmxremote/nio/ChannelsPair$CloseCallback
      68: astore        4
      70: aload         4
      72: aload_1
      73: invokeinterface #142,  2          // InterfaceMethod org/jppf/jmxremote/nio/ChannelsPair$CloseCallback.onClose:(Ljava/lang/Exception;)V
      78: aload         5
      80: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifne          58
      88: aload_2
      89: athrow
      90: new           #121                // class java/util/ArrayList
      93: dup
      94: aload_0
      95: getfield      #77                 // Field closeCallbacks:Ljava/util/List;
      98: invokespecial #123                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     101: astore_3
     102: aload_0
     103: getfield      #77                 // Field closeCallbacks:Ljava/util/List;
     106: invokeinterface #126,  1          // InterfaceMethod java/util/List.clear:()V
     111: aload_3
     112: invokeinterface #131,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     117: astore        5
     119: goto          142
     122: aload         5
     124: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #140                // class org/jppf/jmxremote/nio/ChannelsPair$CloseCallback
     132: astore        4
     134: aload         4
     136: aload_1
     137: invokeinterface #142,  2          // InterfaceMethod org/jppf/jmxremote/nio/ChannelsPair$CloseCallback.onClose:(Ljava/lang/Exception;)V
     142: aload         5
     144: invokeinterface #145,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     149: ifne          122
     152: return
    Exception table:
       from    to  target type
           0    25    25   any

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #69                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #159                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void setClosed(boolean);
    Code:
       0: return

  public void requestClose();
    Code:
       0: aload_0
       1: getfield      #67                 // Field closing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #164                // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean isClosing();
    Code:
       0: aload_0
       1: getfield      #67                 // Field closing:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #159                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public java.lang.String getConnectionID();
    Code:
       0: aload_0
       1: getfield      #170                // Field connectionID:Ljava/lang/String;
       4: areturn

  public org.jppf.jmxremote.nio.ChannelsPair setConnectionID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #170                // Field connectionID:Ljava/lang/String;
       5: aload_0
       6: areturn

  public boolean isServerSide();
    Code:
       0: aload_0
       1: getfield      #175                // Field serverSide:Z
       4: ireturn

  public void setServerSide(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #175                // Field serverSide:Z
       5: return

  public int getServerPort();
    Code:
       0: aload_0
       1: getfield      #71                 // Field serverPort:I
       4: ireturn

  public void setServerPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #71                 // Field serverPort:I
       5: return

  public org.jppf.jmxremote.JPPFJMXConnectorServer getJxmConnectorServer();
    Code:
       0: aload_0
       1: getfield      #184                // Field jxmConnectorServer:Lorg/jppf/jmxremote/JPPFJMXConnectorServer;
       4: areturn

  public void setJxmConnectorServer(org.jppf.jmxremote.JPPFJMXConnectorServer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #184                // Field jxmConnectorServer:Lorg/jppf/jmxremote/JPPFJMXConnectorServer;
       5: return

  public org.jppf.jmxremote.JPPFJMXConnector getJMXConnector();
    Code:
       0: aload_0
       1: getfield      #191                // Field jmxConnector:Lorg/jppf/jmxremote/JPPFJMXConnector;
       4: areturn

  public void setJMXConnector(org.jppf.jmxremote.JPPFJMXConnector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #191                // Field jmxConnector:Lorg/jppf/jmxremote/JPPFJMXConnector;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #197                // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #199                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #205                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokespecial #210                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: bipush        91
      16: invokevirtual #213                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: ldc           #217                // String readingChannelID=
      21: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #222                // Method readingContext:()Lorg/jppf/jmxremote/nio/JMXContext;
      28: invokevirtual #224                // Method org/jppf/jmxremote/nio/JMXContext.getId:()I
      31: invokevirtual #227                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #230                // String , writingChannelID=
      36: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #232                // Method writingContext:()Lorg/jppf/jmxremote/nio/JMXContext;
      43: invokevirtual #224                // Method org/jppf/jmxremote/nio/JMXContext.getId:()I
      46: invokevirtual #227                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #234                // String , connectionID=
      51: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #170                // Field connectionID:Ljava/lang/String;
      58: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #236                // String , closed=
      63: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #69                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      70: invokevirtual #159                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      73: invokevirtual #238                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      76: ldc           #241                // String , closing=
      78: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #67                 // Field closing:Ljava/util/concurrent/atomic/AtomicBoolean;
      85: invokevirtual #159                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      88: invokevirtual #238                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: ldc           #243                // String , serverSide=
      93: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #175                // Field serverSide:Z
     100: invokevirtual #238                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     103: ldc           #245                // String , socketChannel=
     105: invokevirtual #219                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: getfield      #247                // Field selectionKey:Ljava/nio/channels/SelectionKey;
     112: ifnonnull     120
     115: ldc           #249                // String null
     117: goto          127
     120: aload_0
     121: getfield      #247                // Field selectionKey:Ljava/nio/channels/SelectionKey;
     124: invokevirtual #111                // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
     127: invokevirtual #251                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     130: bipush        93
     132: invokevirtual #213                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     135: invokevirtual #254                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: areturn

  public int getInterestOps();
    Code:
       0: aload_0
       1: getfield      #257                // Field interestOps:I
       4: ireturn

  public void setInterestOps(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #257                // Field interestOps:I
       5: return

  public java.nio.channels.SelectionKey getSelectionKey();
    Code:
       0: aload_0
       1: getfield      #247                // Field selectionKey:Ljava/nio/channels/SelectionKey;
       4: areturn

  public void setSelectionKey(java.nio.channels.SelectionKey);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #247                // Field selectionKey:Ljava/nio/channels/SelectionKey;
       5: return

  public org.jppf.jmxremote.message.JMXMessageHandler getMessageHandler();
    Code:
       0: aload_0
       1: getfield      #264                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
       4: areturn

  public void setMessageHandler(org.jppf.jmxremote.message.JMXMessageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #264                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
       5: return

  public void addCloseCallback(org.jppf.jmxremote.nio.ChannelsPair$CloseCallback);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #77                 // Field closeCallbacks:Ljava/util/List;
       8: aload_1
       9: invokeinterface #270,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: return

  public void removeCloseCallback(org.jppf.jmxremote.nio.ChannelsPair$CloseCallback);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #77                 // Field closeCallbacks:Ljava/util/List;
       8: aload_1
       9: invokeinterface #276,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      14: pop
      15: return

  javax.management.remote.JMXAuthenticator getAuthenticator();
    Code:
       0: aload_0
       1: getfield      #79                 // Field authenticator:Ljavax/management/remote/JMXAuthenticator;
       4: areturn

  javax.security.auth.Subject getSubject();
    Code:
       0: aload_0
       1: getfield      #283                // Field subject:Ljavax/security/auth/Subject;
       4: areturn

  void setSubject(javax.security.auth.Subject);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #283                // Field subject:Ljavax/security/auth/Subject;
       5: return

  org.jppf.jmxremote.JMXAuthorizationChecker getAuhtorizationChecker();
    Code:
       0: aload_0
       1: getfield      #289                // Field auhtorizationChecker:Lorg/jppf/jmxremote/JMXAuthorizationChecker;
       4: areturn

  void setAuhtorizationChecker(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aconst_null
       6: astore_2
       7: aload_1
       8: instanceof    #206                // class java/lang/Class
      11: ifeq          22
      14: aload_1
      15: checkcast     #206                // class java/lang/Class
      18: astore_2
      19: goto          72
      22: aload_1
      23: instanceof    #293                // class java/lang/String
      26: ifeq          47
      29: aload_1
      30: checkcast     #293                // class java/lang/String
      33: iconst_0
      34: invokestatic  #295                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      37: invokevirtual #301                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      40: invokestatic  #305                // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      43: astore_2
      44: goto          72
      47: new           #309                // class javax/management/JMException
      50: dup
      51: new           #197                // class java/lang/StringBuilder
      54: dup
      55: ldc_w         #311                // String unable to interpret authorization checker parameter
      58: invokespecial #210                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      61: aload_1
      62: invokevirtual #251                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: invokevirtual #254                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #313                // Method javax/management/JMException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: aload_2
      74: invokevirtual #314                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      77: checkcast     #317                // class org/jppf/jmxremote/JMXAuthorizationChecker
      80: putfield      #289                // Field auhtorizationChecker:Lorg/jppf/jmxremote/JMXAuthorizationChecker;
      83: goto          99
      86: astore_2
      87: getstatic     #53                 // Field log:Lorg/slf4j/Logger;
      90: ldc_w         #319                // String error setting the authorization checker, ACL disabled for this connection
      93: aload_2
      94: invokeinterface #321,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      99: return
    Exception table:
       from    to  target type
           5    83    86   Class java/lang/Exception
}
