Compiled from "JMXContext.java"
public class org.jppf.jmxremote.nio.JMXContext extends org.jppf.nio.AbstractNioContext {
  private static org.slf4j.Logger log;

  private static final boolean debugEnabled;

  private org.jppf.jmxremote.nio.MessageWrapper currentMessageWrapper;

  private final org.jppf.utils.concurrent.QueueHandler<org.jppf.jmxremote.nio.MessageWrapper> pendingJmxMessages;

  private final org.jppf.jmxremote.nio.JMXNioServer server;

  private org.jppf.jmxremote.message.JMXMessageHandler messageHandler;

  private java.nio.channels.SelectionKey selectionKey;

  private static final java.util.concurrent.atomic.AtomicInteger idSequence;

  private final int id;

  static {};
    Code:
       0: ldc           #1                  // class org/jppf/jmxremote/nio/JMXContext
       2: invokestatic  #28                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #34                 // Field log:Lorg/slf4j/Logger;
       8: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
      11: invokeinterface #36,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      16: putstatic     #42                 // Field debugEnabled:Z
      19: new           #44                 // class java/util/concurrent/atomic/AtomicInteger
      22: dup
      23: iconst_0
      24: invokespecial #46                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      27: putstatic     #50                 // Field idSequence:Ljava/util/concurrent/atomic/AtomicInteger;
      30: return

  public org.jppf.jmxremote.nio.JMXContext(org.jppf.jmxremote.nio.JMXNioServer, boolean, java.nio.channels.SocketChannel, java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method org/jppf/nio/AbstractNioContext."<init>":()V
       4: aload_0
       5: getstatic     #50                 // Field idSequence:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      11: putfield      #62                 // Field id:I
      14: aload_0
      15: aload_1
      16: putfield      #64                 // Field server:Lorg/jppf/jmxremote/nio/JMXNioServer;
      19: iload_2
      20: ifeq          31
      23: aload_0
      24: aconst_null
      25: putfield      #66                 // Field pendingJmxMessages:Lorg/jppf/utils/concurrent/QueueHandler;
      28: goto          91
      31: getstatic     #68                 // Field org/jppf/jmx/JPPFJMXProperties.NOTIF_QUEUE_SIZE:Lorg/jppf/utils/configuration/JPPFProperty;
      34: aload         4
      36: aconst_null
      37: invokestatic  #74                 // Method org/jppf/jmx/JMXEnvHelper.getInt:(Lorg/jppf/utils/configuration/JPPFProperty;Ljava/util/Map;Lorg/jppf/utils/TypedProperties;)I
      40: istore        5
      42: iload         5
      44: ifgt          63
      47: getstatic     #68                 // Field org/jppf/jmx/JPPFJMXProperties.NOTIF_QUEUE_SIZE:Lorg/jppf/utils/configuration/JPPFProperty;
      50: invokeinterface #80,  1           // InterfaceMethod org/jppf/utils/configuration/JPPFProperty.getDefaultValue:()Ljava/lang/Object;
      55: checkcast     #86                 // class java/lang/Integer
      58: invokevirtual #88                 // Method java/lang/Integer.intValue:()I
      61: istore        5
      63: aload_0
      64: new           #91                 // class org/jppf/utils/concurrent/QueueHandler
      67: dup
      68: aconst_null
      69: iload         5
      71: invokespecial #93                 // Method org/jppf/utils/concurrent/QueueHandler."<init>":(Ljava/lang/String;I)V
      74: aload_1
      75: dup
      76: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      79: pop
      80: invokedynamic #102,  0            // InvokeDynamic #0:newPeakSize:(Lorg/jppf/jmxremote/nio/JMXNioServer;)Lorg/jppf/utils/concurrent/QueueHandler$PeakSizeUpdateCallback;
      85: invokevirtual #106                // Method org/jppf/utils/concurrent/QueueHandler.setPeakSizeUpdateCallback:(Lorg/jppf/utils/concurrent/QueueHandler$PeakSizeUpdateCallback;)Lorg/jppf/utils/concurrent/QueueHandler;
      88: putfield      #66                 // Field pendingJmxMessages:Lorg/jppf/utils/concurrent/QueueHandler;
      91: aload_0
      92: iconst_0
      93: putfield      #110                // Field peer:Z
      96: aload_0
      97: aload_3
      98: putfield      #113                // Field socketChannel:Ljava/nio/channels/SocketChannel;
     101: return

  public void handleException(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #64                 // Field server:Lorg/jppf/jmxremote/nio/JMXNioServer;
       4: aload_0
       5: invokevirtual #134                // Method getChannels:()Lorg/jppf/jmxremote/nio/ChannelsPair;
       8: aload_1
       9: iconst_0
      10: invokevirtual #138                // Method org/jppf/jmxremote/nio/JMXNioServer.closeConnection:(Lorg/jppf/jmxremote/nio/ChannelsPair;Ljava/lang/Exception;Z)V
      13: goto          30
      16: astore_2
      17: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
      20: aload_2
      21: invokevirtual #142                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      24: aload_2
      25: invokeinterface #148,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/Exception

  public java.lang.String getConnectionID();
    Code:
       0: aload_0
       1: getfield      #156                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
       4: invokevirtual #158                // Method org/jppf/jmxremote/message/JMXMessageHandler.getChannels:()Lorg/jppf/jmxremote/nio/ChannelsPair;
       7: invokevirtual #161                // Method org/jppf/jmxremote/nio/ChannelsPair.getConnectionID:()Ljava/lang/String;
      10: areturn

  public org.jppf.jmxremote.message.JMXMessage deserializeMessage(org.jppf.nio.SimpleNioMessage) throws java.lang.Exception;
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_1
       5: invokevirtual #168                // Method org/jppf/nio/SimpleNioMessage.getCurrentDataLocation:()Lorg/jppf/io/DataLocation;
       8: invokestatic  #174                // Method org/jppf/io/IOHelper.unwrappedData:(Lorg/jppf/io/DataLocation;)Ljava/lang/Object;
      11: checkcast     #180                // class org/jppf/jmxremote/message/JMXMessage
      14: goto          18
      17: aconst_null
      18: areturn

  public void offerJmxMessage(org.jppf.jmxremote.message.JMXMessage) throws java.lang.Exception;
    Code:
       0: new           #169                // class org/jppf/nio/SimpleNioMessage
       3: dup
       4: aload_0
       5: invokespecial #186                // Method org/jppf/nio/SimpleNioMessage."<init>":(Lorg/jppf/nio/NioContext;)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: invokestatic  #189                // Method org/jppf/io/IOHelper.serializeData:(Ljava/lang/Object;)Lorg/jppf/io/DataLocation;
      14: invokevirtual #193                // Method org/jppf/nio/SimpleNioMessage.setCurrentDataLocation:(Lorg/jppf/io/DataLocation;)V
      17: aload_0
      18: getfield      #66                 // Field pendingJmxMessages:Lorg/jppf/utils/concurrent/QueueHandler;
      21: new           #197                // class org/jppf/jmxremote/nio/MessageWrapper
      24: dup
      25: aload_1
      26: aload_2
      27: invokespecial #199                // Method org/jppf/jmxremote/nio/MessageWrapper."<init>":(Lorg/jppf/jmxremote/message/JMXMessage;Lorg/jppf/nio/NioMessage;)V
      30: invokevirtual #202                // Method org/jppf/utils/concurrent/QueueHandler.put:(Ljava/lang/Object;)V
      33: return

  public org.jppf.jmxremote.nio.MessageWrapper pollJmxMessage();
    Code:
       0: aload_0
       1: getfield      #66                 // Field pendingJmxMessages:Lorg/jppf/utils/concurrent/QueueHandler;
       4: invokevirtual #211                // Method org/jppf/utils/concurrent/QueueHandler.poll:()Ljava/lang/Object;
       7: checkcast     #197                // class org/jppf/jmxremote/nio/MessageWrapper
      10: astore_1
      11: aload_1
      12: areturn

  public boolean hasQueuedMessage();
    Code:
       0: aload_0
       1: getfield      #66                 // Field pendingJmxMessages:Lorg/jppf/utils/concurrent/QueueHandler;
       4: invokevirtual #215                // Method org/jppf/utils/concurrent/QueueHandler.isEmpty:()Z
       7: ifeq          14
      10: iconst_0
      11: goto          15
      14: iconst_1
      15: ireturn

  public org.jppf.jmxremote.message.JMXMessageHandler getMessageHandler();
    Code:
       0: aload_0
       1: getfield      #156                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
       4: areturn

  public org.jppf.jmxremote.nio.ChannelsPair getChannels();
    Code:
       0: aload_0
       1: getfield      #156                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
       4: invokevirtual #158                // Method org/jppf/jmxremote/message/JMXMessageHandler.getChannels:()Lorg/jppf/jmxremote/nio/ChannelsPair;
       7: areturn

  public void setMessageHandler(org.jppf.jmxremote.message.JMXMessageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #156                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
       5: return

  public java.lang.String toString();
    Code:
       0: new           #223                // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #96                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #225                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      11: invokespecial #230                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: bipush        91
      16: invokevirtual #233                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: astore_1
      20: aload_1
      21: ldc           #237                // String id=
      23: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #62                 // Field id:I
      30: invokevirtual #242                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: pop
      34: aload_1
      35: ldc           #245                // String , connectionID=
      37: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: getfield      #156                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
      44: ifnonnull     52
      47: ldc           #247                // String null
      49: goto          56
      52: aload_0
      53: invokevirtual #249                // Method getConnectionID:()Ljava/lang/String;
      56: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_1
      61: ldc           #250                // String , serverSide=
      63: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #156                // Field messageHandler:Lorg/jppf/jmxremote/message/JMXMessageHandler;
      70: ifnonnull     78
      73: ldc           #247                // String null
      75: goto          88
      78: aload_0
      79: invokevirtual #134                // Method getChannels:()Lorg/jppf/jmxremote/nio/ChannelsPair;
      82: invokevirtual #252                // Method org/jppf/jmxremote/nio/ChannelsPair.isServerSide:()Z
      85: invokestatic  #255                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      88: invokevirtual #261                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: pop
      92: aload_1
      93: ldc_w         #264                // String , ssl=
      96: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: getfield      #266                // Field ssl:Z
     103: invokevirtual #269                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     106: pop
     107: aload_0
     108: getfield      #66                 // Field pendingJmxMessages:Lorg/jppf/utils/concurrent/QueueHandler;
     111: ifnull        132
     114: aload_1
     115: ldc_w         #272                // String , pendingMessages=
     118: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: aload_0
     122: getfield      #66                 // Field pendingJmxMessages:Lorg/jppf/utils/concurrent/QueueHandler;
     125: invokevirtual #274                // Method org/jppf/utils/concurrent/QueueHandler.size:()I
     128: invokevirtual #242                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     131: pop
     132: aload_1
     133: ldc_w         #276                // String , socketChannel=
     136: invokevirtual #239                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: aload_0
     140: getfield      #113                // Field socketChannel:Ljava/nio/channels/SocketChannel;
     143: invokevirtual #261                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_1
     148: bipush        93
     150: invokevirtual #233                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     153: invokevirtual #278                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: areturn

  public org.jppf.jmxremote.nio.JMXNioServer getServer();
    Code:
       0: aload_0
       1: getfield      #64                 // Field server:Lorg/jppf/jmxremote/nio/JMXNioServer;
       4: areturn

  public java.nio.channels.SelectionKey getSelectionKey();
    Code:
       0: aload_0
       1: getfield      #288                // Field selectionKey:Ljava/nio/channels/SelectionKey;
       4: ifnonnull     25
       7: aload_0
       8: aload_0
       9: getfield      #113                // Field socketChannel:Ljava/nio/channels/SocketChannel;
      12: aload_0
      13: getfield      #64                 // Field server:Lorg/jppf/jmxremote/nio/JMXNioServer;
      16: invokevirtual #290                // Method org/jppf/jmxremote/nio/JMXNioServer.getSelector:()Ljava/nio/channels/Selector;
      19: invokevirtual #294                // Method java/nio/channels/SocketChannel.keyFor:(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;
      22: putfield      #288                // Field selectionKey:Ljava/nio/channels/SelectionKey;
      25: aload_0
      26: getfield      #288                // Field selectionKey:Ljava/nio/channels/SelectionKey;
      29: areturn

  public boolean readMessage() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
       4: ifnonnull     19
       7: aload_0
       8: new           #169                // class org/jppf/nio/SimpleNioMessage
      11: dup
      12: aload_0
      13: invokespecial #186                // Method org/jppf/nio/SimpleNioMessage."<init>":(Lorg/jppf/nio/NioContext;)V
      16: putfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      19: aload_0
      20: aload_0
      21: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      24: invokeinterface #302,  1          // InterfaceMethod org/jppf/nio/NioMessage.getChannelReadCount:()J
      29: putfield      #308                // Field readByteCount:J
      32: iconst_0
      33: istore_1
      34: aload_0
      35: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      38: invokeinterface #312,  1          // InterfaceMethod org/jppf/nio/NioMessage.read:()Z
      43: istore_1
      44: goto          54
      47: astore_2
      48: aload_0
      49: invokespecial #315                // Method updateTrafficStats:()V
      52: aload_2
      53: athrow
      54: aload_0
      55: aload_0
      56: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      59: invokeinterface #302,  1          // InterfaceMethod org/jppf/nio/NioMessage.getChannelReadCount:()J
      64: aload_0
      65: getfield      #308                // Field readByteCount:J
      68: lsub
      69: putfield      #308                // Field readByteCount:J
      72: getstatic     #42                 // Field debugEnabled:Z
      75: ifeq          96
      78: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
      81: ldc_w         #318                // String read {} bytes
      84: aload_0
      85: getfield      #308                // Field readByteCount:J
      88: invokestatic  #320                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      91: invokeinterface #325,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      96: iload_1
      97: ifeq          104
     100: aload_0
     101: invokespecial #315                // Method updateTrafficStats:()V
     104: iload_1
     105: ireturn
    Exception table:
       from    to  target type
          34    44    47   Class java/lang/Exception

  public boolean writeMessage() throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
       5: invokeinterface #331,  1          // InterfaceMethod org/jppf/nio/NioMessage.getChannelWriteCount:()J
      10: putfield      #308                // Field readByteCount:J
      13: iconst_0
      14: istore_1
      15: aload_0
      16: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      19: invokeinterface #334,  1          // InterfaceMethod org/jppf/nio/NioMessage.write:()Z
      24: istore_1
      25: goto          35
      28: astore_2
      29: aload_0
      30: invokespecial #315                // Method updateTrafficStats:()V
      33: aload_2
      34: athrow
      35: aload_0
      36: aload_0
      37: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      40: invokeinterface #331,  1          // InterfaceMethod org/jppf/nio/NioMessage.getChannelWriteCount:()J
      45: aload_0
      46: getfield      #308                // Field readByteCount:J
      49: lsub
      50: putfield      #308                // Field readByteCount:J
      53: getstatic     #42                 // Field debugEnabled:Z
      56: ifeq          77
      59: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
      62: ldc_w         #337                // String wrote {} bytes
      65: aload_0
      66: getfield      #308                // Field readByteCount:J
      69: invokestatic  #320                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      72: invokeinterface #325,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      77: iload_1
      78: ifeq          85
      81: aload_0
      82: invokespecial #315                // Method updateTrafficStats:()V
      85: iload_1
      86: ireturn
    Exception table:
       from    to  target type
          15    25    28   Class java/lang/Exception

  private void updateTrafficStats();
    Code:
       0: aload_0
       1: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
       4: ifnull        121
       7: aload_0
       8: getfield      #64                 // Field server:Lorg/jppf/jmxremote/nio/JMXNioServer;
      11: invokevirtual #339                // Method org/jppf/jmxremote/nio/JMXNioServer.getStats:()Lorg/jppf/utils/stats/JPPFStatistics;
      14: ifnull        121
      17: aload_0
      18: getfield      #343                // Field inSnapshot:Lorg/jppf/utils/stats/JPPFSnapshot;
      21: ifnonnull     41
      24: aload_0
      25: aload_0
      26: getfield      #64                 // Field server:Lorg/jppf/jmxremote/nio/JMXNioServer;
      29: invokevirtual #339                // Method org/jppf/jmxremote/nio/JMXNioServer.getStats:()Lorg/jppf/utils/stats/JPPFStatistics;
      32: ldc_w         #347                // String jmx.traffic.in
      35: invokevirtual #349                // Method org/jppf/utils/stats/JPPFStatistics.getSnapshot:(Ljava/lang/String;)Lorg/jppf/utils/stats/JPPFSnapshot;
      38: putfield      #343                // Field inSnapshot:Lorg/jppf/utils/stats/JPPFSnapshot;
      41: aload_0
      42: getfield      #355                // Field outSnapshot:Lorg/jppf/utils/stats/JPPFSnapshot;
      45: ifnonnull     65
      48: aload_0
      49: aload_0
      50: getfield      #64                 // Field server:Lorg/jppf/jmxremote/nio/JMXNioServer;
      53: invokevirtual #339                // Method org/jppf/jmxremote/nio/JMXNioServer.getStats:()Lorg/jppf/utils/stats/JPPFStatistics;
      56: ldc_w         #358                // String jmx.traffic.out
      59: invokevirtual #349                // Method org/jppf/utils/stats/JPPFStatistics.getSnapshot:(Ljava/lang/String;)Lorg/jppf/utils/stats/JPPFSnapshot;
      62: putfield      #355                // Field outSnapshot:Lorg/jppf/utils/stats/JPPFSnapshot;
      65: aload_0
      66: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      69: invokeinterface #302,  1          // InterfaceMethod org/jppf/nio/NioMessage.getChannelReadCount:()J
      74: l2d
      75: dstore_1
      76: dload_1
      77: dconst_0
      78: dcmpl
      79: ifle          93
      82: aload_0
      83: getfield      #343                // Field inSnapshot:Lorg/jppf/utils/stats/JPPFSnapshot;
      86: dload_1
      87: lconst_1
      88: invokeinterface #360,  5          // InterfaceMethod org/jppf/utils/stats/JPPFSnapshot.addValues:(DJ)V
      93: aload_0
      94: getfield      #299                // Field readMessage:Lorg/jppf/nio/NioMessage;
      97: invokeinterface #331,  1          // InterfaceMethod org/jppf/nio/NioMessage.getChannelWriteCount:()J
     102: l2d
     103: dstore_1
     104: dload_1
     105: dconst_0
     106: dcmpl
     107: ifle          121
     110: aload_0
     111: getfield      #355                // Field outSnapshot:Lorg/jppf/utils/stats/JPPFSnapshot;
     114: dload_1
     115: lconst_1
     116: invokeinterface #360,  5          // InterfaceMethod org/jppf/utils/stats/JPPFSnapshot.addValues:(DJ)V
     121: return

  org.jppf.jmxremote.nio.MessageWrapper getCurrentMessageWrapper();
    Code:
       0: aload_0
       1: getfield      #369                // Field currentMessageWrapper:Lorg/jppf/jmxremote/nio/MessageWrapper;
       4: areturn

  void setCurrentMessageWrapper(org.jppf.jmxremote.nio.MessageWrapper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #369                // Field currentMessageWrapper:Lorg/jppf/jmxremote/nio/MessageWrapper;
       5: return

  public int getId();
    Code:
       0: aload_0
       1: getfield      #62                 // Field id:I
       4: ireturn
}
