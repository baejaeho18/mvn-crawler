Compiled from "JMXMessageHandler.java"
public class org.jppf.jmxremote.message.JMXMessageHandler {
  private static final org.slf4j.Logger log;

  private static final boolean debugEnabled;

  public static final long CONNECTION_MESSAGE_ID;

  private static final java.util.concurrent.atomic.AtomicLong messageSequence;

  private final org.jppf.jmxremote.nio.ChannelsPair channels;

  private final java.util.HashMap<java.lang.Long, org.jppf.jmxremote.message.JMXRequest> requestMap;

  private final long requestTimeout;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  static {};
    Code:
       0: ldc           #1                  // class org/jppf/jmxremote/message/JMXMessageHandler
       2: invokestatic  #28                 // Method org/jppf/jmx/JMXEnvHelper.isAsyncLoggingEnabled:()Z
       5: invokestatic  #34                 // Method org/jppf/utils/LoggingUtils.getLogger:(Ljava/lang/Class;Z)Lorg/slf4j/Logger;
       8: putstatic     #40                 // Field log:Lorg/slf4j/Logger;
      11: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      14: invokeinterface #42,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      19: putstatic     #47                 // Field debugEnabled:Z
      22: new           #49                 // class java/util/concurrent/atomic/AtomicLong
      25: dup
      26: lconst_0
      27: invokespecial #51                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      30: putstatic     #55                 // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
      33: return

  public org.jppf.jmxremote.message.JMXMessageHandler(org.jppf.jmxremote.nio.ChannelsPair, java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokespecial #61                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #63                 // class java/util/HashMap
       8: dup
       9: invokespecial #65                 // Method java/util/HashMap."<init>":()V
      12: putfield      #66                 // Field requestMap:Ljava/util/HashMap;
      15: aload_0
      16: new           #68                 // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #70                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #73                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: aload_1
      29: putfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      32: aload_1
      33: aload_0
      34: invokevirtual #77                 // Method org/jppf/jmxremote/nio/ChannelsPair.setMessageHandler:(Lorg/jppf/jmxremote/message/JMXMessageHandler;)V
      37: aload_0
      38: getstatic     #83                 // Field org/jppf/utils/configuration/JPPFProperties.JMX_REMOTE_REQUEST_TIMEOUT:Lorg/jppf/utils/configuration/JPPFProperty;
      41: aload_2
      42: invokestatic  #89                 // Method org/jppf/utils/JPPFConfiguration.getProperties:()Lorg/jppf/utils/TypedProperties;
      45: invokestatic  #95                 // Method org/jppf/jmx/JMXEnvHelper.getLong:(Lorg/jppf/utils/configuration/JPPFProperty;Ljava/util/Map;Lorg/jppf/utils/TypedProperties;)J
      48: putfield      #99                 // Field requestTimeout:J
      51: return

  public org.jppf.jmxremote.nio.ChannelsPair getChannels();
    Code:
       0: aload_0
       1: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
       4: areturn

  public java.lang.Object sendRequestWithResponse(byte, java.lang.Object...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: new           #114                // class org/jppf/jmxremote/message/JMXRequest
       4: dup
       5: iload_1
       6: iconst_1
       7: if_icmpne     16
      10: ldc2_w        #12                 // long -1l
      13: goto          22
      16: getstatic     #55                 // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
      19: invokevirtual #116                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      22: iload_1
      23: aload_2
      24: invokespecial #120                // Method org/jppf/jmxremote/message/JMXRequest."<init>":(JB[Ljava/lang/Object;)V
      27: iconst_1
      28: invokespecial #123                // Method receiveResponse:(Lorg/jppf/jmxremote/message/JMXRequest;Z)Ljava/lang/Object;
      31: areturn

  private java.lang.Object receiveResponse(org.jppf.jmxremote.message.JMXRequest, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #73                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #133                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          12
      10: aconst_null
      11: areturn
      12: getstatic     #47                 // Field debugEnabled:Z
      15: ifeq          33
      18: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      21: ldc           #136                // String sending request {}, channels={}
      23: aload_1
      24: aload_0
      25: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      28: invokeinterface #138,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      33: aload_0
      34: aload_1
      35: invokespecial #142                // Method putRequest:(Lorg/jppf/jmxremote/message/JMXRequest;)V
      38: aload_1
      39: dup
      40: astore_3
      41: monitorenter
      42: iload_2
      43: ifeq          51
      46: aload_0
      47: aload_1
      48: invokevirtual #146                // Method sendMessage:(Lorg/jppf/jmxremote/message/JMXMessage;)V
      51: aload_0
      52: aload_1
      53: invokespecial #150                // Method waitForMessage:(Lorg/jppf/jmxremote/message/JMXRequest;)V
      56: aload_3
      57: monitorexit
      58: goto          64
      61: aload_3
      62: monitorexit
      63: athrow
      64: aload_1
      65: invokevirtual #153                // Method org/jppf/jmxremote/message/JMXRequest.getResponse:()Lorg/jppf/jmxremote/message/JMXResponse;
      68: astore_3
      69: aload_3
      70: ifnull        107
      73: getstatic     #47                 // Field debugEnabled:Z
      76: ifeq          90
      79: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      82: ldc           #157                // String got response {}
      84: aload_3
      85: invokeinterface #159,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      90: aload_3
      91: invokevirtual #162                // Method org/jppf/jmxremote/message/JMXResponse.getException:()Ljava/lang/Exception;
      94: ifnull        102
      97: aload_3
      98: invokevirtual #162                // Method org/jppf/jmxremote/message/JMXResponse.getException:()Ljava/lang/Exception;
     101: athrow
     102: aload_3
     103: invokevirtual #168                // Method org/jppf/jmxremote/message/JMXResponse.getResult:()Ljava/lang/Object;
     106: areturn
     107: new           #172                // class java/io/IOException
     110: dup
     111: new           #174                // class java/lang/StringBuilder
     114: dup
     115: ldc           #176                // String could not obtain a response to request
     117: invokespecial #178                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     120: aload_1
     121: invokevirtual #181                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: invokevirtual #185                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokespecial #189                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     130: athrow
    Exception table:
       from    to  target type
          42    58    61   any
          61    63    61   any

  public void responseReceived(org.jppf.jmxremote.message.JMXResponse);
    Code:
       0: getstatic     #47                 // Field debugEnabled:Z
       3: ifeq          21
       6: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
       9: ldc           #199                // String received response {}, channels={}
      11: aload_1
      12: aload_0
      13: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      16: invokeinterface #138,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokevirtual #201                // Method org/jppf/jmxremote/message/JMXResponse.getMessageID:()J
      26: invokestatic  #204                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: invokespecial #210                // Method removeRequest:(Ljava/lang/Long;)Lorg/jppf/jmxremote/message/JMXRequest;
      32: astore_2
      33: aload_2
      34: ifnull        75
      37: getstatic     #47                 // Field debugEnabled:Z
      40: ifeq          54
      43: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      46: ldc           #214                // String found matching request {}
      48: aload_2
      49: invokeinterface #159,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      54: aload_2
      55: dup
      56: astore_3
      57: monitorenter
      58: aload_2
      59: aload_1
      60: invokevirtual #216                // Method org/jppf/jmxremote/message/JMXRequest.setResponse:(Lorg/jppf/jmxremote/message/JMXResponse;)V
      63: aload_2
      64: invokevirtual #219                // Method java/lang/Object.notify:()V
      67: aload_3
      68: monitorexit
      69: goto          90
      72: aload_3
      73: monitorexit
      74: athrow
      75: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      78: ldc           #222                // String no matching request for {}, channels={}
      80: aload_1
      81: aload_0
      82: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      85: invokeinterface #224,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      90: return
    Exception table:
       from    to  target type
          58    69    72   any
          72    74    72   any

  public void sendRequestNoResponse(byte, java.lang.Object...) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #73                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #133                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      15: invokevirtual #229                // Method org/jppf/jmxremote/nio/ChannelsPair.getSelectionKey:()Ljava/nio/channels/SelectionKey;
      18: invokevirtual #233                // Method java/nio/channels/SelectionKey.isValid:()Z
      21: ifne          25
      24: return
      25: new           #114                // class org/jppf/jmxremote/message/JMXRequest
      28: dup
      29: getstatic     #55                 // Field messageSequence:Ljava/util/concurrent/atomic/AtomicLong;
      32: invokevirtual #116                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      35: iload_1
      36: aload_2
      37: invokespecial #120                // Method org/jppf/jmxremote/message/JMXRequest."<init>":(JB[Ljava/lang/Object;)V
      40: astore_3
      41: getstatic     #47                 // Field debugEnabled:Z
      44: ifeq          62
      47: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      50: ldc           #136                // String sending request {}, channels={}
      52: aload_3
      53: aload_0
      54: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      57: invokeinterface #138,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      62: aload_0
      63: aload_3
      64: invokespecial #142                // Method putRequest:(Lorg/jppf/jmxremote/message/JMXRequest;)V
      67: aload_3
      68: dup
      69: astore        4
      71: monitorenter
      72: aload_0
      73: aload_3
      74: invokevirtual #146                // Method sendMessage:(Lorg/jppf/jmxremote/message/JMXMessage;)V
      77: aload_0
      78: aload_3
      79: invokespecial #150                // Method waitForMessage:(Lorg/jppf/jmxremote/message/JMXRequest;)V
      82: aload         4
      84: monitorexit
      85: goto          108
      88: aload         4
      90: monitorexit
      91: athrow
      92: astore_3
      93: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      96: aload_3
      97: invokevirtual #238                // Method org/jppf/JPPFTimeoutException.getMessage:()Ljava/lang/String;
     100: aload_3
     101: invokeinterface #243,  3          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: aload_3
     107: athrow
     108: return
    Exception table:
       from    to  target type
          72    85    88   any
          88    91    88   any
          11    24    92   Class org/jppf/JPPFTimeoutException
          25    92    92   Class org/jppf/JPPFTimeoutException

  public void messageSent(org.jppf.jmxremote.message.JMXMessage);
    Code:
       0: getstatic     #47                 // Field debugEnabled:Z
       3: ifeq          21
       6: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
       9: ldc           #250                // String sent request {}, channels={}
      11: aload_1
      12: aload_0
      13: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      16: invokeinterface #138,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      21: aload_0
      22: aload_1
      23: invokeinterface #252,  1          // InterfaceMethod org/jppf/jmxremote/message/JMXMessage.getMessageID:()J
      28: invokestatic  #204                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: invokespecial #210                // Method removeRequest:(Ljava/lang/Long;)Lorg/jppf/jmxremote/message/JMXRequest;
      34: astore_2
      35: aload_2
      36: ifnonnull     53
      39: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      42: ldc           #255                // String no matching request for {}
      44: aload_1
      45: invokeinterface #257,  3          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      50: goto          71
      53: aload_2
      54: aload_1
      55: if_acmpeq     71
      58: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      61: ldc_w         #259                // String message and request do not match, request = {}, message = {}
      64: aload_2
      65: aload_1
      66: invokeinterface #224,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      71: aload_1
      72: dup
      73: astore_3
      74: monitorenter
      75: aload_1
      76: invokevirtual #219                // Method java/lang/Object.notify:()V
      79: aload_3
      80: monitorexit
      81: goto          87
      84: aload_3
      85: monitorexit
      86: athrow
      87: return
    Exception table:
       from    to  target type
          75    81    84   any
          84    86    84   any

  public void sendMessage(org.jppf.jmxremote.message.JMXMessage) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #73                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #133                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          11
      10: return
      11: getstatic     #47                 // Field debugEnabled:Z
      14: ifeq          29
      17: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      20: ldc_w         #263                // String sending message {}
      23: aload_1
      24: invokeinterface #159,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      33: invokevirtual #265                // Method org/jppf/jmxremote/nio/ChannelsPair.writingContext:()Lorg/jppf/jmxremote/nio/JMXContext;
      36: astore_2
      37: aload_2
      38: aload_1
      39: invokevirtual #269                // Method org/jppf/jmxremote/nio/JMXContext.offerJmxMessage:(Lorg/jppf/jmxremote/message/JMXMessage;)V
      42: aload_2
      43: invokevirtual #274                // Method org/jppf/jmxremote/nio/JMXContext.getServer:()Lorg/jppf/jmxremote/nio/JMXNioServer;
      46: aload_2
      47: invokevirtual #278                // Method org/jppf/jmxremote/nio/JMXContext.getSelectionKey:()Ljava/nio/channels/SelectionKey;
      50: iconst_4
      51: iconst_1
      52: invokevirtual #279                // Method org/jppf/jmxremote/nio/JMXNioServer.updateInterestOps:(Ljava/nio/channels/SelectionKey;IZ)V
      55: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #73                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #288                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          117
      12: aload_0
      13: getfield      #66                 // Field requestMap:Ljava/util/HashMap;
      16: dup
      17: astore_1
      18: monitorenter
      19: aload_0
      20: getfield      #66                 // Field requestMap:Ljava/util/HashMap;
      23: invokevirtual #292                // Method java/util/HashMap.entrySet:()Ljava/util/Set;
      26: invokeinterface #296,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: goto          93
      35: aload_3
      36: invokeinterface #302,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #307                // class java/util/Map$Entry
      44: astore_2
      45: aload_2
      46: invokeinterface #309,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #114                // class org/jppf/jmxremote/message/JMXRequest
      54: astore        4
      56: aload         4
      58: dup
      59: astore        5
      61: monitorenter
      62: aload         4
      64: new           #163                // class org/jppf/jmxremote/message/JMXResponse
      67: dup
      68: aload         4
      70: aconst_null
      71: iconst_0
      72: invokespecial #312                // Method org/jppf/jmxremote/message/JMXResponse."<init>":(Lorg/jppf/jmxremote/message/JMXMessage;Ljava/lang/Object;Z)V
      75: invokevirtual #216                // Method org/jppf/jmxremote/message/JMXRequest.setResponse:(Lorg/jppf/jmxremote/message/JMXResponse;)V
      78: aload         4
      80: invokevirtual #219                // Method java/lang/Object.notify:()V
      83: aload         5
      85: monitorexit
      86: goto          93
      89: aload         5
      91: monitorexit
      92: athrow
      93: aload_3
      94: invokeinterface #315,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      99: ifne          35
     102: aload_0
     103: getfield      #66                 // Field requestMap:Ljava/util/HashMap;
     106: invokevirtual #318                // Method java/util/HashMap.clear:()V
     109: aload_1
     110: monitorexit
     111: goto          117
     114: aload_1
     115: monitorexit
     116: athrow
     117: return
    Exception table:
       from    to  target type
          62    86    89   any
          89    92    89   any
          19   111   114   any
         114   116   114   any

  private void waitForMessage(org.jppf.jmxremote.message.JMXRequest) throws org.jppf.JPPFTimeoutException, java.lang.Exception;
    Code:
       0: invokestatic  #324                // Method java/lang/System.nanoTime:()J
       3: lstore_2
       4: aload_1
       5: aload_0
       6: getfield      #99                 // Field requestTimeout:J
       9: invokevirtual #329                // Method java/lang/Object.wait:(J)V
      12: invokestatic  #324                // Method java/lang/System.nanoTime:()J
      15: lload_2
      16: lsub
      17: ldc2_w        #332                // long 1000000l
      20: ldiv
      21: aload_0
      22: getfield      #99                 // Field requestTimeout:J
      25: lcmp
      26: iflt          113
      29: new           #174                // class java/lang/StringBuilder
      32: dup
      33: ldc_w         #334                // String exceeded timeout of
      36: invokespecial #178                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      39: aload_0
      40: getfield      #99                 // Field requestTimeout:J
      43: invokevirtual #336                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      46: ldc_w         #339                // String  ms waiting for
      49: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #181                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: ldc_w         #344                // String  on
      59: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #75                 // Field channels:Lorg/jppf/jmxremote/nio/ChannelsPair;
      66: invokevirtual #181                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #185                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: astore        4
      74: getstatic     #40                 // Field log:Lorg/slf4j/Logger;
      77: new           #174                // class java/lang/StringBuilder
      80: dup
      81: aload         4
      83: invokestatic  #346                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      86: invokespecial #178                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      89: ldc_w         #351                // String , requests map = {}
      92: invokevirtual #341                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #185                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #353,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     103: new           #239                // class org/jppf/JPPFTimeoutException
     106: dup
     107: aload         4
     109: invokespecial #355                // Method org/jppf/JPPFTimeoutException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: return

  private void putRequest(org.jppf.jmxremote.message.JMXRequest);
    Code:
       0: aload_0
       1: getfield      #66                 // Field requestMap:Ljava/util/HashMap;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field requestMap:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #359                // Method org/jppf/jmxremote/message/JMXRequest.getMessageID:()J
      15: invokestatic  #204                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      18: aload_1
      19: invokevirtual #360                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_2
      24: monitorexit
      25: goto          31
      28: aload_2
      29: monitorexit
      30: athrow
      31: return
    Exception table:
       from    to  target type
           7    25    28   any
          28    30    28   any

  private org.jppf.jmxremote.message.JMXRequest removeRequest(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #66                 // Field requestMap:Ljava/util/HashMap;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #66                 // Field requestMap:Ljava/util/HashMap;
      11: aload_1
      12: invokevirtual #364                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #114                // class org/jppf/jmxremote/message/JMXRequest
      18: aload_2
      19: monitorexit
      20: areturn
      21: aload_2
      22: monitorexit
      23: athrow
    Exception table:
       from    to  target type
           7    20    21   any
          21    23    21   any
}
