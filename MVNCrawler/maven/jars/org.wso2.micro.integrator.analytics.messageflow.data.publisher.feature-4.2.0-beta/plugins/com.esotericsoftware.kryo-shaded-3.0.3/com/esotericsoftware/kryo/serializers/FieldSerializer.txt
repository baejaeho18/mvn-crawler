Compiled from "FieldSerializer.java"
public class com.esotericsoftware.kryo.serializers.FieldSerializer<T> extends com.esotericsoftware.kryo.Serializer<T> implements java.util.Comparator<com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField> {
  final com.esotericsoftware.kryo.Kryo kryo;

  final java.lang.Class type;

  final java.lang.reflect.TypeVariable[] typeParameters;

  final java.lang.Class componentType;

  private com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[] fields;

  private com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[] transientFields;

  protected java.util.HashSet<com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField> removedFields;

  java.lang.Object access;

  private boolean fieldsCanBeNull;

  private boolean setFieldsAsAccessible;

  private boolean ignoreSyntheticFields;

  private boolean fixedFieldTypes;

  private boolean useAsmEnabled;

  private com.esotericsoftware.kryo.serializers.FieldSerializerUnsafeUtil unsafeUtil;

  private com.esotericsoftware.kryo.serializers.FieldSerializerGenericsUtil genericsUtil;

  private com.esotericsoftware.kryo.serializers.FieldSerializerAnnotationsUtil annotationsUtil;

  private java.lang.Class[] generics;

  private com.esotericsoftware.kryo.Generics genericsScope;

  private boolean varIntsEnabled;

  private boolean useMemRegions;

  private boolean copyTransient;

  private final boolean serializeTransient;

  private boolean hasObjectFields;

  static com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory asmFieldFactory;

  static com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory objectFieldFactory;

  static com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory unsafeFieldFactory;

  static boolean unsafeAvailable;

  static java.lang.Class<?> unsafeUtilClass;

  static java.lang.reflect.Method sortFieldsByOffsetMethod;

  public com.esotericsoftware.kryo.serializers.FieldSerializer(com.esotericsoftware.kryo.Kryo, java.lang.Class);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
       9: putfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      12: aload_0
      13: iconst_0
      14: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
      17: putfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      20: aload_0
      21: new           #6                  // class java/util/HashSet
      24: dup
      25: invokespecial #7                  // Method java/util/HashSet."<init>":()V
      28: putfield      #8                  // Field removedFields:Ljava/util/HashSet;
      31: aload_0
      32: iconst_1
      33: putfield      #9                  // Field fieldsCanBeNull:Z
      36: aload_0
      37: iconst_1
      38: putfield      #10                 // Field setFieldsAsAccessible:Z
      41: aload_0
      42: iconst_1
      43: putfield      #11                 // Field ignoreSyntheticFields:Z
      46: aload_0
      47: iconst_0
      48: putfield      #12                 // Field useMemRegions:Z
      51: aload_0
      52: iconst_1
      53: putfield      #13                 // Field copyTransient:Z
      56: aload_0
      57: iconst_0
      58: putfield      #14                 // Field serializeTransient:Z
      61: aload_0
      62: iconst_0
      63: putfield      #15                 // Field hasObjectFields:Z
      66: aload_0
      67: getstatic     #16                 // Field unsafeAvailable:Z
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: putfield      #17                 // Field useAsmEnabled:Z
      81: aload_0
      82: iconst_1
      83: putfield      #18                 // Field varIntsEnabled:Z
      86: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      89: ifeq          119
      92: ldc           #20                 // String kryo
      94: new           #21                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #23                 // String Optimize ints:
     103: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #18                 // Field varIntsEnabled:Z
     110: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     113: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     119: aload_0
     120: aload_1
     121: putfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
     124: aload_0
     125: aload_2
     126: putfield      #29                 // Field type:Ljava/lang/Class;
     129: aload_0
     130: aload_2
     131: invokevirtual #30                 // Method java/lang/Class.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;
     134: putfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
     137: aload_0
     138: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
     141: ifnull        152
     144: aload_0
     145: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
     148: arraylength
     149: ifne          163
     152: aload_0
     153: aload_2
     154: invokevirtual #32                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
     157: putfield      #33                 // Field componentType:Ljava/lang/Class;
     160: goto          168
     163: aload_0
     164: aconst_null
     165: putfield      #33                 // Field componentType:Ljava/lang/Class;
     168: aload_0
     169: aload_1
     170: invokevirtual #34                 // Method com/esotericsoftware/kryo/Kryo.getAsmEnabled:()Z
     173: putfield      #17                 // Field useAsmEnabled:Z
     176: aload_0
     177: getfield      #17                 // Field useAsmEnabled:Z
     180: ifne          207
     183: getstatic     #16                 // Field unsafeAvailable:Z
     186: ifne          207
     189: aload_0
     190: iconst_1
     191: putfield      #17                 // Field useAsmEnabled:Z
     194: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     197: ifeq          207
     200: ldc           #20                 // String kryo
     202: ldc           #35                 // String sun.misc.Unsafe is unavailable, using ASM.
     204: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     207: aload_0
     208: new           #36                 // class com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil
     211: dup
     212: aload_0
     213: invokespecial #37                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil."<init>":(Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)V
     216: putfield      #38                 // Field genericsUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil;
     219: aload_0
     220: aload_0
     221: invokestatic  #39                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil$Factory.getInstance:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)Lcom/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil;
     224: putfield      #40                 // Field unsafeUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil;
     227: aload_0
     228: new           #41                 // class com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil
     231: dup
     232: aload_0
     233: invokespecial #42                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil."<init>":(Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)V
     236: putfield      #43                 // Field annotationsUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil;
     239: aload_0
     240: invokevirtual #44                 // Method rebuildCachedFields:()V
     243: return

  public com.esotericsoftware.kryo.serializers.FieldSerializer(com.esotericsoftware.kryo.Kryo, java.lang.Class, java.lang.Class[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: aload_0
       5: iconst_0
       6: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
       9: putfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      12: aload_0
      13: iconst_0
      14: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
      17: putfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      20: aload_0
      21: new           #6                  // class java/util/HashSet
      24: dup
      25: invokespecial #7                  // Method java/util/HashSet."<init>":()V
      28: putfield      #8                  // Field removedFields:Ljava/util/HashSet;
      31: aload_0
      32: iconst_1
      33: putfield      #9                  // Field fieldsCanBeNull:Z
      36: aload_0
      37: iconst_1
      38: putfield      #10                 // Field setFieldsAsAccessible:Z
      41: aload_0
      42: iconst_1
      43: putfield      #11                 // Field ignoreSyntheticFields:Z
      46: aload_0
      47: iconst_0
      48: putfield      #12                 // Field useMemRegions:Z
      51: aload_0
      52: iconst_1
      53: putfield      #13                 // Field copyTransient:Z
      56: aload_0
      57: iconst_0
      58: putfield      #14                 // Field serializeTransient:Z
      61: aload_0
      62: iconst_0
      63: putfield      #15                 // Field hasObjectFields:Z
      66: aload_0
      67: getstatic     #16                 // Field unsafeAvailable:Z
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: putfield      #17                 // Field useAsmEnabled:Z
      81: aload_0
      82: iconst_1
      83: putfield      #18                 // Field varIntsEnabled:Z
      86: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      89: ifeq          119
      92: ldc           #20                 // String kryo
      94: new           #21                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #23                 // String Optimize ints:
     103: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #18                 // Field varIntsEnabled:Z
     110: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     113: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     119: aload_0
     120: aload_1
     121: putfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
     124: aload_0
     125: aload_2
     126: putfield      #29                 // Field type:Ljava/lang/Class;
     129: aload_0
     130: aload_3
     131: putfield      #45                 // Field generics:[Ljava/lang/Class;
     134: aload_0
     135: aload_2
     136: invokevirtual #30                 // Method java/lang/Class.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;
     139: putfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
     142: aload_0
     143: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
     146: ifnull        157
     149: aload_0
     150: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
     153: arraylength
     154: ifne          168
     157: aload_0
     158: aload_2
     159: invokevirtual #32                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
     162: putfield      #33                 // Field componentType:Ljava/lang/Class;
     165: goto          173
     168: aload_0
     169: aconst_null
     170: putfield      #33                 // Field componentType:Ljava/lang/Class;
     173: aload_0
     174: aload_1
     175: invokevirtual #34                 // Method com/esotericsoftware/kryo/Kryo.getAsmEnabled:()Z
     178: putfield      #17                 // Field useAsmEnabled:Z
     181: aload_0
     182: getfield      #17                 // Field useAsmEnabled:Z
     185: ifne          212
     188: getstatic     #16                 // Field unsafeAvailable:Z
     191: ifne          212
     194: aload_0
     195: iconst_1
     196: putfield      #17                 // Field useAsmEnabled:Z
     199: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     202: ifeq          212
     205: ldc           #20                 // String kryo
     207: ldc           #35                 // String sun.misc.Unsafe is unavailable, using ASM.
     209: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     212: aload_0
     213: new           #36                 // class com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil
     216: dup
     217: aload_0
     218: invokespecial #37                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil."<init>":(Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)V
     221: putfield      #38                 // Field genericsUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil;
     224: aload_0
     225: aload_0
     226: invokestatic  #39                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil$Factory.getInstance:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)Lcom/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil;
     229: putfield      #40                 // Field unsafeUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil;
     232: aload_0
     233: new           #41                 // class com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil
     236: dup
     237: aload_0
     238: invokespecial #42                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil."<init>":(Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)V
     241: putfield      #43                 // Field annotationsUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil;
     244: aload_0
     245: invokevirtual #44                 // Method rebuildCachedFields:()V
     248: return

  protected void rebuildCachedFields();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #46                 // Method rebuildCachedFields:(Z)V
       5: return

  protected void rebuildCachedFields(boolean);
    Code:
       0: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       3: ifeq          43
       6: aload_0
       7: getfield      #45                 // Field generics:[Ljava/lang/Class;
      10: ifnull        43
      13: ldc           #20                 // String kryo
      15: new           #21                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #47                 // String Generic type parameters:
      24: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #45                 // Field generics:[Ljava/lang/Class;
      31: invokestatic  #48                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      34: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      43: aload_0
      44: getfield      #29                 // Field type:Ljava/lang/Class;
      47: invokevirtual #49                 // Method java/lang/Class.isInterface:()Z
      50: ifeq          62
      53: aload_0
      54: iconst_0
      55: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
      58: putfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      61: return
      62: aload_0
      63: iconst_0
      64: putfield      #15                 // Field hasObjectFields:Z
      67: aload_0
      68: getfield      #38                 // Field genericsUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil;
      71: aload_0
      72: getfield      #29                 // Field type:Ljava/lang/Class;
      75: aload_0
      76: getfield      #45                 // Field generics:[Ljava/lang/Class;
      79: invokevirtual #50                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil.buildGenericsScope:(Ljava/lang/Class;[Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Generics;
      82: astore_2
      83: aload_0
      84: aload_2
      85: putfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      88: aload_0
      89: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      92: ifnull        110
      95: aload_0
      96: getfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
      99: aload_0
     100: getfield      #29                 // Field type:Ljava/lang/Class;
     103: aload_0
     104: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
     107: invokevirtual #52                 // Method com/esotericsoftware/kryo/Kryo.pushGenericsScope:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Generics;)V
     110: new           #53                 // class com/esotericsoftware/kryo/util/IntArray
     113: dup
     114: invokespecial #54                 // Method com/esotericsoftware/kryo/util/IntArray."<init>":()V
     117: astore        5
     119: iload_1
     120: ifne          380
     123: new           #55                 // class java/util/ArrayList
     126: dup
     127: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
     130: astore        6
     132: aload_0
     133: getfield      #29                 // Field type:Ljava/lang/Class;
     136: astore        7
     138: aload         7
     140: ldc           #57                 // class java/lang/Object
     142: if_acmpeq     223
     145: aload         7
     147: invokevirtual #58                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
     150: astore        8
     152: aload         8
     154: ifnull        213
     157: aload         8
     159: astore        9
     161: aload         9
     163: arraylength
     164: istore        10
     166: iconst_0
     167: istore        11
     169: iload         11
     171: iload         10
     173: if_icmpge     213
     176: aload         9
     178: iload         11
     180: aaload
     181: astore        12
     183: aload         12
     185: invokevirtual #59                 // Method java/lang/reflect/Field.getModifiers:()I
     188: invokestatic  #60                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
     191: ifeq          197
     194: goto          207
     197: aload         6
     199: aload         12
     201: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     206: pop
     207: iinc          11, 1
     210: goto          169
     213: aload         7
     215: invokevirtual #62                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     218: astore        7
     220: goto          138
     223: aload_0
     224: getfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
     227: invokevirtual #63                 // Method com/esotericsoftware/kryo/Kryo.getContext:()Lcom/esotericsoftware/kryo/util/ObjectMap;
     230: astore        8
     232: aload_0
     233: getfield      #12                 // Field useMemRegions:Z
     236: ifeq          300
     239: aload_0
     240: getfield      #17                 // Field useAsmEnabled:Z
     243: ifne          300
     246: getstatic     #16                 // Field unsafeAvailable:Z
     249: ifeq          300
     252: getstatic     #64                 // Field sortFieldsByOffsetMethod:Ljava/lang/reflect/Method;
     255: aconst_null
     256: iconst_1
     257: anewarray     #57                 // class java/lang/Object
     260: dup
     261: iconst_0
     262: aload         6
     264: aastore
     265: invokevirtual #65                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     268: checkcast     #66                 // class "[Ljava/lang/reflect/Field;"
     271: checkcast     #66                 // class "[Ljava/lang/reflect/Field;"
     274: astore        9
     276: aload         9
     278: invokestatic  #67                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     281: astore        6
     283: goto          300
     286: astore        9
     288: new           #69                 // class java/lang/RuntimeException
     291: dup
     292: ldc           #70                 // String Cannot invoke UnsafeUtil.sortFieldsByOffset()
     294: aload         9
     296: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     299: athrow
     300: aload_0
     301: iconst_0
     302: aload         6
     304: aload         8
     306: aload         5
     308: invokespecial #72                 // Method buildValidFields:(ZLjava/util/List;Lcom/esotericsoftware/kryo/util/ObjectMap;Lcom/esotericsoftware/kryo/util/IntArray;)Ljava/util/List;
     311: astore_3
     312: aload_0
     313: iconst_1
     314: aload         6
     316: aload         8
     318: aload         5
     320: invokespecial #72                 // Method buildValidFields:(ZLjava/util/List;Lcom/esotericsoftware/kryo/util/ObjectMap;Lcom/esotericsoftware/kryo/util/IntArray;)Ljava/util/List;
     323: astore        4
     325: aload_0
     326: getfield      #17                 // Field useAsmEnabled:Z
     329: ifeq          377
     332: getstatic     #73                 // Field com/esotericsoftware/kryo/util/Util.isAndroid:Z
     335: ifne          377
     338: aload_0
     339: getfield      #29                 // Field type:Ljava/lang/Class;
     342: invokevirtual #74                 // Method java/lang/Class.getModifiers:()I
     345: invokestatic  #75                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
     348: ifeq          377
     351: aload         5
     353: iconst_1
     354: invokevirtual #76                 // Method com/esotericsoftware/kryo/util/IntArray.indexOf:(I)I
     357: iconst_m1
     358: if_icmpeq     377
     361: aload_0
     362: aload_0
     363: getfield      #29                 // Field type:Ljava/lang/Class;
     366: invokestatic  #77                 // Method com/esotericsoftware/reflectasm/FieldAccess.get:(Ljava/lang/Class;)Lcom/esotericsoftware/reflectasm/FieldAccess;
     369: putfield      #78                 // Field access:Ljava/lang/Object;
     372: goto          377
     375: astore        9
     377: goto          403
     380: aload_0
     381: aload_0
     382: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     385: aload         5
     387: invokespecial #79                 // Method buildValidFieldsFromCachedFields:([Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;Lcom/esotericsoftware/kryo/util/IntArray;)Ljava/util/List;
     390: astore_3
     391: aload_0
     392: aload_0
     393: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     396: aload         5
     398: invokespecial #79                 // Method buildValidFieldsFromCachedFields:([Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;Lcom/esotericsoftware/kryo/util/IntArray;)Ljava/util/List;
     401: astore        4
     403: new           #55                 // class java/util/ArrayList
     406: dup
     407: aload_3
     408: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
     413: invokespecial #81                 // Method java/util/ArrayList."<init>":(I)V
     416: astore        6
     418: new           #55                 // class java/util/ArrayList
     421: dup
     422: aload         4
     424: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
     429: invokespecial #81                 // Method java/util/ArrayList."<init>":(I)V
     432: astore        7
     434: aload_0
     435: aload         5
     437: aload_3
     438: aload         6
     440: iconst_0
     441: invokespecial #82                 // Method createCachedFields:(Lcom/esotericsoftware/kryo/util/IntArray;Ljava/util/List;Ljava/util/List;I)V
     444: aload_0
     445: aload         5
     447: aload         4
     449: aload         7
     451: aload_3
     452: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
     457: invokespecial #82                 // Method createCachedFields:(Lcom/esotericsoftware/kryo/util/IntArray;Ljava/util/List;Ljava/util/List;I)V
     460: aload         6
     462: aload_0
     463: invokestatic  #83                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     466: aload_0
     467: aload         6
     469: aload         6
     471: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
     476: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
     479: invokeinterface #84,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     484: checkcast     #85                 // class "[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;"
     487: putfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     490: aload         7
     492: aload_0
     493: invokestatic  #83                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     496: aload_0
     497: aload         7
     499: aload         7
     501: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
     506: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
     509: invokeinterface #84,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     514: checkcast     #85                 // class "[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;"
     517: putfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     520: aload_0
     521: invokevirtual #86                 // Method initializeCachedFields:()V
     524: aload_0
     525: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
     528: ifnull        538
     531: aload_0
     532: getfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
     535: invokevirtual #87                 // Method com/esotericsoftware/kryo/Kryo.popGenericsScope:()V
     538: iload_1
     539: ifne          582
     542: aload_0
     543: getfield      #8                  // Field removedFields:Ljava/util/HashSet;
     546: invokevirtual #88                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     549: astore        8
     551: aload         8
     553: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     558: ifeq          582
     561: aload         8
     563: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     568: checkcast     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
     571: astore        9
     573: aload_0
     574: aload         9
     576: invokevirtual #91                 // Method removeField:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;)V
     579: goto          551
     582: aload_0
     583: getfield      #43                 // Field annotationsUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil;
     586: aload_0
     587: invokevirtual #92                 // Method com/esotericsoftware/kryo/serializers/FieldSerializerAnnotationsUtil.processAnnotatedFields:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)V
     590: return
    Exception table:
       from    to  target type
         252   283   286   Class java/lang/Exception
         361   372   375   Class java/lang/RuntimeException

  private java.util.List<java.lang.reflect.Field> buildValidFieldsFromCachedFields(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[], com.esotericsoftware.kryo.util.IntArray);
    Code:
       0: new           #55                 // class java/util/ArrayList
       3: dup
       4: aload_1
       5: arraylength
       6: invokespecial #81                 // Method java/util/ArrayList."<init>":(I)V
       9: astore_3
      10: aload_1
      11: astore        4
      13: aload         4
      15: arraylength
      16: istore        5
      18: iconst_0
      19: istore        6
      21: iload         6
      23: iload         5
      25: if_icmpge     69
      28: aload         4
      30: iload         6
      32: aaload
      33: astore        7
      35: aload_3
      36: aload         7
      38: getfield      #93                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.field:Ljava/lang/reflect/Field;
      41: invokevirtual #94                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_2
      46: aload         7
      48: getfield      #95                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.accessIndex:I
      51: iconst_m1
      52: if_icmple     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: invokevirtual #96                 // Method com/esotericsoftware/kryo/util/IntArray.add:(I)V
      63: iinc          6, 1
      66: goto          21
      69: aload_3
      70: areturn

  private java.util.List<java.lang.reflect.Field> buildValidFields(boolean, java.util.List<java.lang.reflect.Field>, com.esotericsoftware.kryo.util.ObjectMap, com.esotericsoftware.kryo.util.IntArray);
    Code:
       0: new           #55                 // class java/util/ArrayList
       3: dup
       4: aload_2
       5: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
      10: invokespecial #81                 // Method java/util/ArrayList."<init>":(I)V
      13: astore        5
      15: iconst_0
      16: istore        6
      18: aload_2
      19: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
      24: istore        7
      26: iload         6
      28: iload         7
      30: if_icmpge     216
      33: aload_2
      34: iload         6
      36: invokeinterface #97,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      41: checkcast     #98                 // class java/lang/reflect/Field
      44: astore        8
      46: aload         8
      48: invokevirtual #59                 // Method java/lang/reflect/Field.getModifiers:()I
      51: istore        9
      53: iload         9
      55: invokestatic  #99                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
      58: iload_1
      59: if_icmpeq     65
      62: goto          210
      65: iload         9
      67: invokestatic  #60                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      70: ifeq          76
      73: goto          210
      76: aload         8
      78: invokevirtual #100                // Method java/lang/reflect/Field.isSynthetic:()Z
      81: ifeq          94
      84: aload_0
      85: getfield      #11                 // Field ignoreSyntheticFields:Z
      88: ifeq          94
      91: goto          210
      94: aload         8
      96: invokevirtual #101                // Method java/lang/reflect/Field.isAccessible:()Z
      99: ifne          126
     102: aload_0
     103: getfield      #10                 // Field setFieldsAsAccessible:Z
     106: ifne          112
     109: goto          210
     112: aload         8
     114: iconst_1
     115: invokevirtual #102                // Method java/lang/reflect/Field.setAccessible:(Z)V
     118: goto          126
     121: astore        10
     123: goto          210
     126: aload         8
     128: ldc           #104                // class com/esotericsoftware/kryo/serializers/FieldSerializer$Optional
     130: invokevirtual #105                // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     133: checkcast     #104                // class com/esotericsoftware/kryo/serializers/FieldSerializer$Optional
     136: astore        10
     138: aload         10
     140: ifnull        160
     143: aload_3
     144: aload         10
     146: invokeinterface #106,  1          // InterfaceMethod com/esotericsoftware/kryo/serializers/FieldSerializer$Optional.value:()Ljava/lang/String;
     151: invokevirtual #107                // Method com/esotericsoftware/kryo/util/ObjectMap.containsKey:(Ljava/lang/Object;)Z
     154: ifne          160
     157: goto          210
     160: aload         5
     162: aload         8
     164: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     169: pop
     170: aload         4
     172: iload         9
     174: invokestatic  #108                // Method java/lang/reflect/Modifier.isFinal:(I)Z
     177: ifne          206
     180: iload         9
     182: invokestatic  #75                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
     185: ifeq          206
     188: aload         8
     190: invokevirtual #109                // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
     193: invokevirtual #74                 // Method java/lang/Class.getModifiers:()I
     196: invokestatic  #75                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
     199: ifeq          206
     202: iconst_1
     203: goto          207
     206: iconst_0
     207: invokevirtual #96                 // Method com/esotericsoftware/kryo/util/IntArray.add:(I)V
     210: iinc          6, 1
     213: goto          26
     216: aload         5
     218: areturn
    Exception table:
       from    to  target type
         112   118   121   Class java/security/AccessControlException

  private void createCachedFields(com.esotericsoftware.kryo.util.IntArray, java.util.List<java.lang.reflect.Field>, java.util.List<com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField>, int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field useAsmEnabled:Z
       4: ifne          14
       7: aload_0
       8: getfield      #12                 // Field useMemRegions:Z
      11: ifne          115
      14: iconst_0
      15: istore        5
      17: aload_2
      18: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
      23: istore        6
      25: iload         5
      27: iload         6
      29: if_icmpge     112
      32: aload_2
      33: iload         5
      35: invokeinterface #97,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      40: checkcast     #98                 // class java/lang/reflect/Field
      43: astore        7
      45: iconst_m1
      46: istore        8
      48: aload_0
      49: getfield      #78                 // Field access:Ljava/lang/Object;
      52: ifnull        85
      55: aload_1
      56: iload         4
      58: iload         5
      60: iadd
      61: invokevirtual #110                // Method com/esotericsoftware/kryo/util/IntArray.get:(I)I
      64: iconst_1
      65: if_icmpne     85
      68: aload_0
      69: getfield      #78                 // Field access:Ljava/lang/Object;
      72: checkcast     #111                // class com/esotericsoftware/reflectasm/FieldAccess
      75: aload         7
      77: invokevirtual #112                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      80: invokevirtual #113                // Method com/esotericsoftware/reflectasm/FieldAccess.getIndex:(Ljava/lang/String;)I
      83: istore        8
      85: aload_3
      86: aload_0
      87: aload         7
      89: aload_3
      90: invokeinterface #80,  1           // InterfaceMethod java/util/List.size:()I
      95: iload         8
      97: invokevirtual #114                // Method newCachedField:(Ljava/lang/reflect/Field;II)Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     100: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     105: pop
     106: iinc          5, 1
     109: goto          25
     112: goto          129
     115: aload_0
     116: getfield      #40                 // Field unsafeUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil;
     119: aload_2
     120: aload_3
     121: iload         4
     123: aload_1
     124: invokeinterface #115,  5          // InterfaceMethod com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil.createUnsafeCacheFieldsAndRegions:(Ljava/util/List;Ljava/util/List;ILcom/esotericsoftware/kryo/util/IntArray;)V
     129: return

  public void setGenerics(com.esotericsoftware.kryo.Kryo, java.lang.Class[]);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #45                 // Field generics:[Ljava/lang/Class;
       5: aload_0
       6: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
       9: ifnull        25
      12: aload_0
      13: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
      16: arraylength
      17: ifle          25
      20: aload_0
      21: iconst_1
      22: invokevirtual #46                 // Method rebuildCachedFields:(Z)V
      25: return

  public java.lang.Class[] getGenerics();
    Code:
       0: aload_0
       1: getfield      #45                 // Field generics:[Ljava/lang/Class;
       4: areturn

  protected void initializeCachedFields();
    Code:
       0: return

  com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField newCachedField(java.lang.reflect.Field, int, int);
    Code:
       0: iconst_1
       1: anewarray     #116                // class java/lang/Class
       4: dup
       5: iconst_0
       6: aload_1
       7: invokevirtual #109                // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      10: aastore
      11: astore        4
      13: aload_1
      14: invokevirtual #117                // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
      17: astore        5
      19: aload         5
      21: aload         4
      23: iconst_0
      24: aaload
      25: if_acmpne     91
      28: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      31: ifeq          73
      34: ldc           #20                 // String kryo
      36: new           #21                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #118                // String Field
      45: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #112                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      52: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #119                // String :
      57: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload         4
      62: iconst_0
      63: aaload
      64: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      73: aload_0
      74: aload_1
      75: iload_3
      76: aload         4
      78: iconst_0
      79: aaload
      80: aload         5
      82: aconst_null
      83: invokevirtual #121                // Method newMatchingCachedField:(Ljava/lang/reflect/Field;ILjava/lang/Class;Ljava/lang/reflect/Type;[Ljava/lang/Class;)Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      86: astore        6
      88: goto          106
      91: aload_0
      92: getfield      #38                 // Field genericsUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil;
      95: aload_1
      96: iload_3
      97: aload         4
      99: aload         5
     101: invokevirtual #122                // Method com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil.newCachedFieldOfGenericType:(Ljava/lang/reflect/Field;I[Ljava/lang/Class;Ljava/lang/reflect/Type;)Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     104: astore        6
     106: aload         6
     108: instanceof    #123                // class com/esotericsoftware/kryo/serializers/ObjectField
     111: ifeq          119
     114: aload_0
     115: iconst_1
     116: putfield      #15                 // Field hasObjectFields:Z
     119: aload         6
     121: aload_1
     122: putfield      #93                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.field:Ljava/lang/reflect/Field;
     125: aload         6
     127: aload_0
     128: getfield      #18                 // Field varIntsEnabled:Z
     131: putfield      #124                // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.varIntsEnabled:Z
     134: aload_0
     135: getfield      #17                 // Field useAsmEnabled:Z
     138: ifne          156
     141: aload         6
     143: aload_0
     144: getfield      #40                 // Field unsafeUtil:Lcom/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil;
     147: aload_1
     148: invokeinterface #125,  2          // InterfaceMethod com/esotericsoftware/kryo/serializers/FieldSerializerUnsafeUtil.getObjectFieldOffset:(Ljava/lang/reflect/Field;)J
     153: putfield      #126                // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.offset:J
     156: aload         6
     158: aload_0
     159: getfield      #78                 // Field access:Ljava/lang/Object;
     162: checkcast     #111                // class com/esotericsoftware/reflectasm/FieldAccess
     165: putfield      #127                // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.access:Lcom/esotericsoftware/reflectasm/FieldAccess;
     168: aload         6
     170: iload_3
     171: putfield      #95                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.accessIndex:I
     174: aload         6
     176: aload_0
     177: getfield      #9                  // Field fieldsCanBeNull:Z
     180: ifeq          206
     183: aload         4
     185: iconst_0
     186: aaload
     187: invokevirtual #128                // Method java/lang/Class.isPrimitive:()Z
     190: ifne          206
     193: aload_1
     194: ldc           #129                // class com/esotericsoftware/kryo/NotNull
     196: invokevirtual #130                // Method java/lang/reflect/Field.isAnnotationPresent:(Ljava/lang/Class;)Z
     199: ifne          206
     202: iconst_1
     203: goto          207
     206: iconst_0
     207: putfield      #131                // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.canBeNull:Z
     210: aload_0
     211: getfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
     214: aload         4
     216: iconst_0
     217: aaload
     218: invokevirtual #132                // Method com/esotericsoftware/kryo/Kryo.isFinal:(Ljava/lang/Class;)Z
     221: ifne          231
     224: aload_0
     225: getfield      #133                // Field fixedFieldTypes:Z
     228: ifeq          240
     231: aload         6
     233: aload         4
     235: iconst_0
     236: aaload
     237: putfield      #134                // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.valueClass:Ljava/lang/Class;
     240: aload         6
     242: areturn

  com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField newMatchingCachedField(java.lang.reflect.Field, int, java.lang.Class, java.lang.reflect.Type, java.lang.Class[]);
    Code:
       0: iload_2
       1: iconst_m1
       2: if_icmpeq     22
       5: aload_0
       6: invokespecial #135                // Method getAsmFieldFactory:()Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
       9: aload_3
      10: aload_1
      11: aload_0
      12: invokeinterface #136,  4          // InterfaceMethod com/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory.createCachedField:(Ljava/lang/Class;Ljava/lang/reflect/Field;Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      17: astore        6
      19: goto          133
      22: aload_0
      23: getfield      #17                 // Field useAsmEnabled:Z
      26: ifne          46
      29: aload_0
      30: invokespecial #137                // Method getUnsafeFieldFactory:()Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      33: aload_3
      34: aload_1
      35: aload_0
      36: invokeinterface #136,  4          // InterfaceMethod com/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory.createCachedField:(Ljava/lang/Class;Ljava/lang/reflect/Field;Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      41: astore        6
      43: goto          133
      46: aload_0
      47: invokespecial #138                // Method getObjectFieldFactory:()Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      50: aload_3
      51: aload_1
      52: aload_0
      53: invokeinterface #136,  4          // InterfaceMethod com/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory.createCachedField:(Ljava/lang/Class;Ljava/lang/reflect/Field;Lcom/esotericsoftware/kryo/serializers/FieldSerializer;)Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      58: astore        6
      60: aload         5
      62: ifnull        78
      65: aload         6
      67: checkcast     #123                // class com/esotericsoftware/kryo/serializers/ObjectField
      70: aload         5
      72: putfield      #139                // Field com/esotericsoftware/kryo/serializers/ObjectField.generics:[Ljava/lang/Class;
      75: goto          133
      78: aload         4
      80: aload_0
      81: getfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
      84: invokestatic  #140                // Method com/esotericsoftware/kryo/serializers/FieldSerializerGenericsUtil.getGenerics:(Ljava/lang/reflect/Type;Lcom/esotericsoftware/kryo/Kryo;)[Ljava/lang/Class;
      87: astore        7
      89: aload         6
      91: checkcast     #123                // class com/esotericsoftware/kryo/serializers/ObjectField
      94: aload         7
      96: putfield      #139                // Field com/esotericsoftware/kryo/serializers/ObjectField.generics:[Ljava/lang/Class;
      99: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     102: ifeq          133
     105: ldc           #20                 // String kryo
     107: new           #21                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #141                // String Field generics:
     116: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload         7
     121: invokestatic  #48                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     124: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     133: aload         6
     135: areturn

  private com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory getAsmFieldFactory();
    Code:
       0: getstatic     #142                // Field asmFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
       3: ifnonnull     16
       6: new           #143                // class com/esotericsoftware/kryo/serializers/AsmCachedFieldFactory
       9: dup
      10: invokespecial #144                // Method com/esotericsoftware/kryo/serializers/AsmCachedFieldFactory."<init>":()V
      13: putstatic     #142                // Field asmFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      16: getstatic     #142                // Field asmFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      19: areturn

  private com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory getObjectFieldFactory();
    Code:
       0: getstatic     #145                // Field objectFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
       3: ifnonnull     16
       6: new           #146                // class com/esotericsoftware/kryo/serializers/ObjectCachedFieldFactory
       9: dup
      10: invokespecial #147                // Method com/esotericsoftware/kryo/serializers/ObjectCachedFieldFactory."<init>":()V
      13: putstatic     #145                // Field objectFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      16: getstatic     #145                // Field objectFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      19: areturn

  private com.esotericsoftware.kryo.serializers.FieldSerializer$CachedFieldFactory getUnsafeFieldFactory();
    Code:
       0: getstatic     #148                // Field unsafeFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
       3: ifnonnull     42
       6: aload_0
       7: invokevirtual #149                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #150                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      13: ldc           #151                // String com.esotericsoftware.kryo.serializers.UnsafeCachedFieldFactory
      15: invokevirtual #152                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      18: invokevirtual #153                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      21: checkcast     #154                // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory
      24: putstatic     #148                // Field unsafeFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      27: goto          42
      30: astore_1
      31: new           #69                 // class java/lang/RuntimeException
      34: dup
      35: ldc           #155                // String Cannot create UnsafeFieldFactory
      37: aload_1
      38: invokespecial #71                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
      42: getstatic     #148                // Field unsafeFieldFactory:Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedFieldFactory;
      45: areturn
    Exception table:
       from    to  target type
           6    27    30   Class java/lang/Exception

  public int compare(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField, com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField);
    Code:
       0: aload_1
       1: getfield      #93                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.field:Ljava/lang/reflect/Field;
       4: invokevirtual #112                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       7: aload_2
       8: getfield      #93                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.field:Ljava/lang/reflect/Field;
      11: invokevirtual #112                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      14: invokevirtual #156                // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      17: ireturn

  public void setFieldsCanBeNull(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field fieldsCanBeNull:Z
       5: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       8: ifeq          35
      11: ldc           #20                 // String kryo
      13: new           #21                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #157                // String setFieldsCanBeNull:
      22: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      29: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      35: aload_0
      36: invokevirtual #44                 // Method rebuildCachedFields:()V
      39: return

  public void setFieldsAsAccessible(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field setFieldsAsAccessible:Z
       5: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       8: ifeq          35
      11: ldc           #20                 // String kryo
      13: new           #21                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #158                // String setFieldsAsAccessible:
      22: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      29: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      35: aload_0
      36: invokevirtual #44                 // Method rebuildCachedFields:()V
      39: return

  public void setIgnoreSyntheticFields(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field ignoreSyntheticFields:Z
       5: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       8: ifeq          35
      11: ldc           #20                 // String kryo
      13: new           #21                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #159                // String setIgnoreSyntheticFields:
      22: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      29: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      35: aload_0
      36: invokevirtual #44                 // Method rebuildCachedFields:()V
      39: return

  public void setFixedFieldTypes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #133                // Field fixedFieldTypes:Z
       5: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       8: ifeq          35
      11: ldc           #20                 // String kryo
      13: new           #21                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #160                // String setFixedFieldTypes:
      22: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      29: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      35: aload_0
      36: invokevirtual #44                 // Method rebuildCachedFields:()V
      39: return

  public void setUseAsm(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field useAsmEnabled:Z
       5: aload_0
       6: getfield      #17                 // Field useAsmEnabled:Z
       9: ifne          36
      12: getstatic     #16                 // Field unsafeAvailable:Z
      15: ifne          36
      18: aload_0
      19: iconst_1
      20: putfield      #17                 // Field useAsmEnabled:Z
      23: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      26: ifeq          36
      29: ldc           #20                 // String kryo
      31: ldc           #35                 // String sun.misc.Unsafe is unavailable, using ASM.
      33: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      36: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      39: ifeq          66
      42: ldc           #20                 // String kryo
      44: new           #21                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #161                // String setUseAsm:
      53: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_1
      57: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      60: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      66: aload_0
      67: invokevirtual #44                 // Method rebuildCachedFields:()V
      70: return

  public void setCopyTransient(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field copyTransient:Z
       5: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, T);
    Code:
       0: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       3: ifeq          36
       6: ldc           #20                 // String kryo
       8: new           #21                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #162                // String FieldSerializer.write fields of class:
      17: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_3
      21: invokevirtual #149                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      24: invokevirtual #163                // Method java/lang/Class.getName:()Ljava/lang/String;
      27: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      36: aload_0
      37: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
      40: ifnull        54
      43: aload_0
      44: getfield      #45                 // Field generics:[Ljava/lang/Class;
      47: ifnull        54
      50: aload_0
      51: invokevirtual #44                 // Method rebuildCachedFields:()V
      54: aload_0
      55: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      58: ifnull        73
      61: aload_1
      62: aload_0
      63: getfield      #29                 // Field type:Ljava/lang/Class;
      66: aload_0
      67: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      70: invokevirtual #52                 // Method com/esotericsoftware/kryo/Kryo.pushGenericsScope:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Generics;)V
      73: aload_0
      74: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      77: astore        4
      79: iconst_0
      80: istore        5
      82: aload         4
      84: arraylength
      85: istore        6
      87: iload         5
      89: iload         6
      91: if_icmpge     110
      94: aload         4
      96: iload         5
      98: aaload
      99: aload_2
     100: aload_3
     101: invokevirtual #164                // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.write:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     104: iinc          5, 1
     107: goto          87
     110: aload_0
     111: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
     114: ifnull        121
     117: aload_1
     118: invokevirtual #87                 // Method com/esotericsoftware/kryo/Kryo.popGenericsScope:()V
     121: return

  public T read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<T>);
    Code:
       0: aload_0
       1: getfield      #31                 // Field typeParameters:[Ljava/lang/reflect/TypeVariable;
       4: ifnull        18
       7: aload_0
       8: getfield      #45                 // Field generics:[Ljava/lang/Class;
      11: ifnull        18
      14: aload_0
      15: invokevirtual #44                 // Method rebuildCachedFields:()V
      18: aload_0
      19: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      22: ifnull        34
      25: aload_1
      26: aload_3
      27: aload_0
      28: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      31: invokevirtual #52                 // Method com/esotericsoftware/kryo/Kryo.pushGenericsScope:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Generics;)V
      34: aload_0
      35: aload_1
      36: aload_2
      37: aload_3
      38: invokevirtual #165                // Method create:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
      41: astore        4
      43: aload_1
      44: aload         4
      46: invokevirtual #166                // Method com/esotericsoftware/kryo/Kryo.reference:(Ljava/lang/Object;)V
      49: aload_0
      50: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      53: astore        5
      55: iconst_0
      56: istore        6
      58: aload         5
      60: arraylength
      61: istore        7
      63: iload         6
      65: iload         7
      67: if_icmpge     87
      70: aload         5
      72: iload         6
      74: aaload
      75: aload_2
      76: aload         4
      78: invokevirtual #167                // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.read:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Object;)V
      81: iinc          6, 1
      84: goto          63
      87: aload         4
      89: astore        6
      91: aload_0
      92: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      95: ifnull        109
      98: aload_1
      99: invokevirtual #168                // Method com/esotericsoftware/kryo/Kryo.getGenericsScope:()Lcom/esotericsoftware/kryo/Generics;
     102: ifnull        109
     105: aload_1
     106: invokevirtual #87                 // Method com/esotericsoftware/kryo/Kryo.popGenericsScope:()V
     109: aload         6
     111: areturn
     112: astore        8
     114: aload_0
     115: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
     118: ifnull        132
     121: aload_1
     122: invokevirtual #168                // Method com/esotericsoftware/kryo/Kryo.getGenericsScope:()Lcom/esotericsoftware/kryo/Generics;
     125: ifnull        132
     128: aload_1
     129: invokevirtual #87                 // Method com/esotericsoftware/kryo/Kryo.popGenericsScope:()V
     132: aload         8
     134: athrow
    Exception table:
       from    to  target type
           0    91   112   any
         112   114   112   any

  protected T create(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<T>);
    Code:
       0: aload_1
       1: aload_3
       2: invokevirtual #169                // Method com/esotericsoftware/kryo/Kryo.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
       5: areturn

  public com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField getField(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     47
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: getfield      #93                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.field:Ljava/lang/reflect/Field;
      28: invokevirtual #112                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #170                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      35: ifeq          41
      38: aload         5
      40: areturn
      41: iinc          4, 1
      44: goto          11
      47: new           #171                // class java/lang/IllegalArgumentException
      50: dup
      51: new           #21                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #172                // String Field \"
      60: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_1
      64: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #173                // String \" not found on class:
      69: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #29                 // Field type:Ljava/lang/Class;
      76: invokevirtual #163                // Method java/lang/Class.getName:()Ljava/lang/String;
      79: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #174                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      88: athrow

  public void removeField(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       7: arraylength
       8: if_icmpge     96
      11: aload_0
      12: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      15: iload_2
      16: aaload
      17: astore_3
      18: aload_3
      19: getfield      #93                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.field:Ljava/lang/reflect/Field;
      22: invokevirtual #112                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #170                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          90
      32: aload_0
      33: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      36: arraylength
      37: iconst_1
      38: isub
      39: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
      42: astore        4
      44: aload_0
      45: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      48: iconst_0
      49: aload         4
      51: iconst_0
      52: iload_2
      53: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      56: aload_0
      57: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      60: iload_2
      61: iconst_1
      62: iadd
      63: aload         4
      65: iload_2
      66: aload         4
      68: arraylength
      69: iload_2
      70: isub
      71: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_0
      75: aload         4
      77: putfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      80: aload_0
      81: getfield      #8                  // Field removedFields:Ljava/util/HashSet;
      84: aload_3
      85: invokevirtual #176                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      88: pop
      89: return
      90: iinc          2, 1
      93: goto          2
      96: iconst_0
      97: istore_2
      98: iload_2
      99: aload_0
     100: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     103: arraylength
     104: if_icmpge     192
     107: aload_0
     108: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     111: iload_2
     112: aaload
     113: astore_3
     114: aload_3
     115: getfield      #93                 // Field com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.field:Ljava/lang/reflect/Field;
     118: invokevirtual #112                // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     121: aload_1
     122: invokevirtual #170                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifeq          186
     128: aload_0
     129: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     132: arraylength
     133: iconst_1
     134: isub
     135: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
     138: astore        4
     140: aload_0
     141: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     144: iconst_0
     145: aload         4
     147: iconst_0
     148: iload_2
     149: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     152: aload_0
     153: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     156: iload_2
     157: iconst_1
     158: iadd
     159: aload         4
     161: iload_2
     162: aload         4
     164: arraylength
     165: iload_2
     166: isub
     167: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     170: aload_0
     171: aload         4
     173: putfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     176: aload_0
     177: getfield      #8                  // Field removedFields:Ljava/util/HashSet;
     180: aload_3
     181: invokevirtual #176                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     184: pop
     185: return
     186: iinc          2, 1
     189: goto          98
     192: new           #171                // class java/lang/IllegalArgumentException
     195: dup
     196: new           #21                 // class java/lang/StringBuilder
     199: dup
     200: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     203: ldc           #172                // String Field \"
     205: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_1
     209: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: ldc           #173                // String \" not found on class:
     214: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     217: aload_0
     218: getfield      #29                 // Field type:Ljava/lang/Class;
     221: invokevirtual #163                // Method java/lang/Class.getName:()Ljava/lang/String;
     224: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     230: invokespecial #174                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     233: athrow

  public void removeField(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       7: arraylength
       8: if_icmpge     87
      11: aload_0
      12: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      15: iload_2
      16: aaload
      17: astore_3
      18: aload_3
      19: aload_1
      20: if_acmpne     81
      23: aload_0
      24: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      27: arraylength
      28: iconst_1
      29: isub
      30: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
      33: astore        4
      35: aload_0
      36: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      39: iconst_0
      40: aload         4
      42: iconst_0
      43: iload_2
      44: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: aload_0
      48: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      51: iload_2
      52: iconst_1
      53: iadd
      54: aload         4
      56: iload_2
      57: aload         4
      59: arraylength
      60: iload_2
      61: isub
      62: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      65: aload_0
      66: aload         4
      68: putfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      71: aload_0
      72: getfield      #8                  // Field removedFields:Ljava/util/HashSet;
      75: aload_3
      76: invokevirtual #176                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      79: pop
      80: return
      81: iinc          2, 1
      84: goto          2
      87: iconst_0
      88: istore_2
      89: iload_2
      90: aload_0
      91: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      94: arraylength
      95: if_icmpge     174
      98: aload_0
      99: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     102: iload_2
     103: aaload
     104: astore_3
     105: aload_3
     106: aload_1
     107: if_acmpne     168
     110: aload_0
     111: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     114: arraylength
     115: iconst_1
     116: isub
     117: anewarray     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
     120: astore        4
     122: aload_0
     123: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     126: iconst_0
     127: aload         4
     129: iconst_0
     130: iload_2
     131: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     134: aload_0
     135: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     138: iload_2
     139: iconst_1
     140: iadd
     141: aload         4
     143: iload_2
     144: aload         4
     146: arraylength
     147: iload_2
     148: isub
     149: invokestatic  #175                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     152: aload_0
     153: aload         4
     155: putfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
     158: aload_0
     159: getfield      #8                  // Field removedFields:Ljava/util/HashSet;
     162: aload_3
     163: invokevirtual #176                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     166: pop
     167: return
     168: iinc          2, 1
     171: goto          89
     174: new           #171                // class java/lang/IllegalArgumentException
     177: dup
     178: new           #21                 // class java/lang/StringBuilder
     181: dup
     182: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     185: ldc           #172                // String Field \"
     187: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_1
     191: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     194: ldc           #173                // String \" not found on class:
     196: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: aload_0
     200: getfield      #29                 // Field type:Ljava/lang/Class;
     203: invokevirtual #163                // Method java/lang/Class.getName:()Ljava/lang/String;
     206: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: invokespecial #174                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     215: athrow

  public com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField[] getFields();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       4: areturn

  public java.lang.Class getType();
    Code:
       0: aload_0
       1: getfield      #29                 // Field type:Ljava/lang/Class;
       4: areturn

  public com.esotericsoftware.kryo.Kryo getKryo();
    Code:
       0: aload_0
       1: getfield      #28                 // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
       4: areturn

  public boolean getUseAsmEnabled();
    Code:
       0: aload_0
       1: getfield      #17                 // Field useAsmEnabled:Z
       4: ireturn

  public boolean getUseMemRegions();
    Code:
       0: aload_0
       1: getfield      #12                 // Field useMemRegions:Z
       4: ireturn

  public boolean getCopyTransient();
    Code:
       0: aload_0
       1: getfield      #13                 // Field copyTransient:Z
       4: ireturn

  protected T createCopy(com.esotericsoftware.kryo.Kryo, T);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #149                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #169                // Method com/esotericsoftware/kryo/Kryo.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
       8: areturn

  public T copy(com.esotericsoftware.kryo.Kryo, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #177                // Method createCopy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Object;)Ljava/lang/Object;
       6: astore_3
       7: aload_1
       8: aload_3
       9: invokevirtual #166                // Method com/esotericsoftware/kryo/Kryo.reference:(Ljava/lang/Object;)V
      12: aload_0
      13: getfield      #13                 // Field copyTransient:Z
      16: ifeq          54
      19: iconst_0
      20: istore        4
      22: aload_0
      23: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      26: arraylength
      27: istore        5
      29: iload         4
      31: iload         5
      33: if_icmpge     54
      36: aload_0
      37: getfield      #5                  // Field transientFields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      40: iload         4
      42: aaload
      43: aload_2
      44: aload_3
      45: invokevirtual #178                // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.copy:(Ljava/lang/Object;Ljava/lang/Object;)V
      48: iinc          4, 1
      51: goto          29
      54: iconst_0
      55: istore        4
      57: aload_0
      58: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      61: arraylength
      62: istore        5
      64: iload         4
      66: iload         5
      68: if_icmpge     89
      71: aload_0
      72: getfield      #4                  // Field fields:[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      75: iload         4
      77: aaload
      78: aload_2
      79: aload_3
      80: invokevirtual #178                // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.copy:(Ljava/lang/Object;Ljava/lang/Object;)V
      83: iinc          4, 1
      86: goto          64
      89: aload_3
      90: areturn

  public final com.esotericsoftware.kryo.Generics getGenericsScope();
    Code:
       0: aload_0
       1: getfield      #51                 // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
       4: areturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
       5: aload_2
       6: checkcast     #3                  // class com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField
       9: invokevirtual #179                // Method compare:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;)I
      12: ireturn

  static {};
    Code:
       0: ldc           #1                  // class com/esotericsoftware/kryo/serializers/FieldSerializer
       2: invokevirtual #150                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: ldc           #180                // String com.esotericsoftware.kryo.util.UnsafeUtil
       7: invokevirtual #152                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      10: putstatic     #181                // Field unsafeUtilClass:Ljava/lang/Class;
      13: getstatic     #181                // Field unsafeUtilClass:Ljava/lang/Class;
      16: ldc           #182                // String unsafe
      18: iconst_0
      19: anewarray     #116                // class java/lang/Class
      22: invokevirtual #183                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      25: astore_0
      26: getstatic     #181                // Field unsafeUtilClass:Ljava/lang/Class;
      29: ldc           #184                // String sortFieldsByOffset
      31: iconst_1
      32: anewarray     #116                // class java/lang/Class
      35: dup
      36: iconst_0
      37: ldc           #185                // class java/util/List
      39: aastore
      40: invokevirtual #183                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      43: putstatic     #64                 // Field sortFieldsByOffsetMethod:Ljava/lang/reflect/Method;
      46: aload_0
      47: aconst_null
      48: iconst_0
      49: anewarray     #57                 // class java/lang/Object
      52: invokevirtual #65                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      55: astore_1
      56: aload_1
      57: ifnull        64
      60: iconst_1
      61: putstatic     #16                 // Field unsafeAvailable:Z
      64: goto          81
      67: astore_0
      68: getstatic     #19                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      71: ifeq          81
      74: ldc           #20                 // String kryo
      76: ldc           #187                // String sun.misc.Unsafe is unavailable.
      78: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      81: return
    Exception table:
       from    to  target type
           0    64    67   Class java/lang/Throwable
}
