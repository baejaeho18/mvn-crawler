Compiled from "BlowfishSerializer.java"
public class com.esotericsoftware.kryo.serializers.BlowfishSerializer extends com.esotericsoftware.kryo.Serializer {
  private final com.esotericsoftware.kryo.Serializer serializer;

  private static javax.crypto.spec.SecretKeySpec keySpec;

  public com.esotericsoftware.kryo.serializers.BlowfishSerializer(com.esotericsoftware.kryo.Serializer, byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
       9: new           #3                  // class javax/crypto/spec/SecretKeySpec
      12: dup
      13: aload_2
      14: ldc           #4                  // String Blowfish
      16: invokespecial #5                  // Method javax/crypto/spec/SecretKeySpec."<init>":([BLjava/lang/String;)V
      19: putstatic     #6                  // Field keySpec:Ljavax/crypto/spec/SecretKeySpec;
      22: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: iconst_1
       1: invokestatic  #8                  // Method getCipher:(I)Ljavax/crypto/Cipher;
       4: astore        4
       6: new           #9                  // class javax/crypto/CipherOutputStream
       9: dup
      10: aload_2
      11: aload         4
      13: invokespecial #10                 // Method javax/crypto/CipherOutputStream."<init>":(Ljava/io/OutputStream;Ljavax/crypto/Cipher;)V
      16: astore        5
      18: new           #11                 // class com/esotericsoftware/kryo/serializers/BlowfishSerializer$1
      21: dup
      22: aload_0
      23: aload         5
      25: sipush        256
      28: invokespecial #12                 // Method com/esotericsoftware/kryo/serializers/BlowfishSerializer$1."<init>":(Lcom/esotericsoftware/kryo/serializers/BlowfishSerializer;Ljava/io/OutputStream;I)V
      31: astore        6
      33: aload_0
      34: getfield      #2                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
      37: aload_1
      38: aload         6
      40: aload_3
      41: invokevirtual #13                 // Method com/esotericsoftware/kryo/Serializer.write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      44: aload         6
      46: invokevirtual #14                 // Method com/esotericsoftware/kryo/io/Output.flush:()V
      49: aload         5
      51: invokevirtual #15                 // Method javax/crypto/CipherOutputStream.close:()V
      54: goto          69
      57: astore        7
      59: new           #17                 // class com/esotericsoftware/kryo/KryoException
      62: dup
      63: aload         7
      65: invokespecial #18                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/Throwable;)V
      68: athrow
      69: return
    Exception table:
       from    to  target type
          49    54    57   Class java/io/IOException

  public java.lang.Object read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class);
    Code:
       0: iconst_2
       1: invokestatic  #8                  // Method getCipher:(I)Ljavax/crypto/Cipher;
       4: astore        4
       6: new           #19                 // class javax/crypto/CipherInputStream
       9: dup
      10: aload_2
      11: aload         4
      13: invokespecial #20                 // Method javax/crypto/CipherInputStream."<init>":(Ljava/io/InputStream;Ljavax/crypto/Cipher;)V
      16: astore        5
      18: aload_0
      19: getfield      #2                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
      22: aload_1
      23: new           #21                 // class com/esotericsoftware/kryo/io/Input
      26: dup
      27: aload         5
      29: sipush        256
      32: invokespecial #22                 // Method com/esotericsoftware/kryo/io/Input."<init>":(Ljava/io/InputStream;I)V
      35: aload_3
      36: invokevirtual #23                 // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
      39: areturn

  public java.lang.Object copy(com.esotericsoftware.kryo.Kryo, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
       4: aload_1
       5: aload_2
       6: invokevirtual #24                 // Method com/esotericsoftware/kryo/Serializer.copy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  private static javax.crypto.Cipher getCipher(int);
    Code:
       0: ldc           #4                  // String Blowfish
       2: invokestatic  #25                 // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
       5: astore_1
       6: aload_1
       7: iload_0
       8: getstatic     #6                  // Field keySpec:Ljavax/crypto/spec/SecretKeySpec;
      11: invokevirtual #26                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;)V
      14: aload_1
      15: areturn
      16: astore_1
      17: new           #17                 // class com/esotericsoftware/kryo/KryoException
      20: dup
      21: aload_1
      22: invokespecial #18                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/Exception
}
