Compiled from "ByteBufferOutput.java"
public class com.esotericsoftware.kryo.io.ByteBufferOutput extends com.esotericsoftware.kryo.io.Output {
  protected java.nio.ByteBuffer niobuffer;

  protected boolean varIntsEnabled;

  java.nio.ByteOrder byteOrder;

  protected static final java.nio.ByteOrder nativeOrder;

  public com.esotericsoftware.kryo.io.ByteBufferOutput();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/io/Output."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field varIntsEnabled:Z
       9: aload_0
      10: getstatic     #3                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      13: putfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
      16: return

  public com.esotericsoftware.kryo.io.ByteBufferOutput(int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: invokespecial #5                  // Method "<init>":(II)V
       6: return

  public com.esotericsoftware.kryo.io.ByteBufferOutput(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/io/Output."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field varIntsEnabled:Z
       9: aload_0
      10: getstatic     #3                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      13: putfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
      16: iload_2
      17: iconst_m1
      18: if_icmpge     48
      21: new           #6                  // class java/lang/IllegalArgumentException
      24: dup
      25: new           #7                  // class java/lang/StringBuilder
      28: dup
      29: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #9                  // String maxBufferSize cannot be < -1:
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: iload_2
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      41: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: iload_1
      50: putfield      #14                 // Field capacity:I
      53: aload_0
      54: iload_2
      55: iconst_m1
      56: if_icmpne     64
      59: ldc           #16                 // int 2147483647
      61: goto          65
      64: iload_2
      65: putfield      #17                 // Field maxCapacity:I
      68: aload_0
      69: iload_1
      70: invokestatic  #18                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      73: putfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      76: aload_0
      77: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      80: aload_0
      81: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
      84: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      87: pop
      88: return

  public com.esotericsoftware.kryo.io.ByteBufferOutput(java.io.OutputStream);
    Code:
       0: aload_0
       1: sipush        4096
       4: sipush        4096
       7: invokespecial #5                  // Method "<init>":(II)V
      10: aload_1
      11: ifnonnull     24
      14: new           #6                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #21                 // String outputStream cannot be null.
      20: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: putfield      #22                 // Field outputStream:Ljava/io/OutputStream;
      29: return

  public com.esotericsoftware.kryo.io.ByteBufferOutput(java.io.OutputStream, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_2
       3: invokespecial #5                  // Method "<init>":(II)V
       6: aload_1
       7: ifnonnull     20
      10: new           #6                  // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #21                 // String outputStream cannot be null.
      16: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: aload_1
      22: putfield      #22                 // Field outputStream:Ljava/io/OutputStream;
      25: return

  public com.esotericsoftware.kryo.io.ByteBufferOutput(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/io/Output."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field varIntsEnabled:Z
       9: aload_0
      10: getstatic     #3                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      13: putfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
      16: aload_0
      17: aload_1
      18: invokevirtual #23                 // Method setBuffer:(Ljava/nio/ByteBuffer;)V
      21: return

  public com.esotericsoftware.kryo.io.ByteBufferOutput(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/io/Output."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field varIntsEnabled:Z
       9: aload_0
      10: getstatic     #3                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      13: putfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
      16: aload_0
      17: aload_1
      18: iload_2
      19: invokevirtual #24                 // Method setBuffer:(Ljava/nio/ByteBuffer;I)V
      22: return

  public com.esotericsoftware.kryo.io.ByteBufferOutput(long, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/io/Output."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field varIntsEnabled:Z
       9: aload_0
      10: getstatic     #3                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
      13: putfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
      16: aload_0
      17: lload_1
      18: iload_3
      19: invokestatic  #25                 // Method com/esotericsoftware/kryo/util/UnsafeUtil.getDirectBufferAt:(JI)Ljava/nio/ByteBuffer;
      22: putfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      25: aload_0
      26: aload_0
      27: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      30: iload_3
      31: invokevirtual #24                 // Method setBuffer:(Ljava/nio/ByteBuffer;I)V
      34: return

  public void release();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method clear:()V
       4: aload_0
       5: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
       8: invokestatic  #27                 // Method com/esotericsoftware/kryo/util/UnsafeUtil.releaseBuffer:(Ljava/nio/ByteBuffer;)V
      11: aload_0
      12: aconst_null
      13: putfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      16: return

  public java.nio.ByteOrder order();
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
       4: areturn

  public void order(java.nio.ByteOrder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
       5: return

  public java.io.OutputStream getOutputStream();
    Code:
       0: aload_0
       1: getfield      #22                 // Field outputStream:Ljava/io/OutputStream;
       4: areturn

  public void setOutputStream(java.io.OutputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field outputStream:Ljava/io/OutputStream;
       5: aload_0
       6: iconst_0
       7: putfield      #28                 // Field position:I
      10: aload_0
      11: lconst_0
      12: putfield      #29                 // Field total:J
      15: return

  public void setBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #30                 // Method java/nio/ByteBuffer.capacity:()I
       6: invokevirtual #24                 // Method setBuffer:(Ljava/nio/ByteBuffer;I)V
       9: return

  public void setBuffer(java.nio.ByteBuffer, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #31                 // String buffer cannot be null.
      10: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: iconst_m1
      16: if_icmpge     46
      19: new           #6                  // class java/lang/IllegalArgumentException
      22: dup
      23: new           #7                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #9                  // String maxBufferSize cannot be < -1:
      32: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_2
      36: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: aload_1
      48: putfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      51: aload_0
      52: iload_2
      53: iconst_m1
      54: if_icmpne     62
      57: ldc           #16                 // int 2147483647
      59: goto          63
      62: iload_2
      63: putfield      #17                 // Field maxCapacity:I
      66: aload_0
      67: aload_1
      68: invokevirtual #32                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      71: putfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
      74: aload_0
      75: aload_1
      76: invokevirtual #30                 // Method java/nio/ByteBuffer.capacity:()I
      79: putfield      #14                 // Field capacity:I
      82: aload_0
      83: aload_1
      84: invokevirtual #33                 // Method java/nio/ByteBuffer.position:()I
      87: putfield      #28                 // Field position:I
      90: aload_0
      91: lconst_0
      92: putfield      #29                 // Field total:J
      95: aload_0
      96: aconst_null
      97: putfield      #22                 // Field outputStream:Ljava/io/OutputStream;
     100: return

  public java.nio.ByteBuffer getByteBuffer();
    Code:
       0: aload_0
       1: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      11: pop
      12: aload_0
      13: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      16: areturn

  public byte[] toBytes();
    Code:
       0: aload_0
       1: getfield      #28                 // Field position:I
       4: newarray       byte
       6: astore_1
       7: aload_0
       8: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      11: iconst_0
      12: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      15: pop
      16: aload_0
      17: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      20: aload_1
      21: iconst_0
      22: aload_0
      23: getfield      #28                 // Field position:I
      26: invokevirtual #35                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      29: pop
      30: aload_1
      31: areturn

  public void setPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field position:I
       5: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #36                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: aload_0
       9: iconst_0
      10: putfield      #28                 // Field position:I
      13: aload_0
      14: lconst_0
      15: putfield      #29                 // Field total:J
      18: return

  protected boolean require(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacity:I
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: isub
       9: iload_1
      10: if_icmplt     15
      13: iconst_0
      14: ireturn
      15: iload_1
      16: aload_0
      17: getfield      #17                 // Field maxCapacity:I
      20: if_icmple     62
      23: new           #37                 // class com/esotericsoftware/kryo/KryoException
      26: dup
      27: new           #7                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #38                 // String Buffer overflow. Max capacity:
      36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #17                 // Field maxCapacity:I
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #39                 // String , required:
      48: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: iload_1
      52: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #40                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: aload_0
      63: invokevirtual #41                 // Method flush:()V
      66: aload_0
      67: getfield      #14                 // Field capacity:I
      70: aload_0
      71: getfield      #28                 // Field position:I
      74: isub
      75: iload_1
      76: if_icmpge     263
      79: aload_0
      80: getfield      #14                 // Field capacity:I
      83: aload_0
      84: getfield      #17                 // Field maxCapacity:I
      87: if_icmpne     134
      90: new           #37                 // class com/esotericsoftware/kryo/KryoException
      93: dup
      94: new           #7                  // class java/lang/StringBuilder
      97: dup
      98: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #42                 // String Buffer overflow. Available:
     103: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: getfield      #14                 // Field capacity:I
     110: aload_0
     111: getfield      #28                 // Field position:I
     114: isub
     115: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     118: ldc           #39                 // String , required:
     120: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: iload_1
     124: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     127: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #40                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: aload_0
     135: getfield      #14                 // Field capacity:I
     138: ifne          146
     141: aload_0
     142: iconst_1
     143: putfield      #14                 // Field capacity:I
     146: aload_0
     147: aload_0
     148: getfield      #14                 // Field capacity:I
     151: iconst_2
     152: imul
     153: aload_0
     154: getfield      #17                 // Field maxCapacity:I
     157: invokestatic  #43                 // Method java/lang/Math.min:(II)I
     160: putfield      #14                 // Field capacity:I
     163: aload_0
     164: getfield      #14                 // Field capacity:I
     167: ifge          178
     170: aload_0
     171: aload_0
     172: getfield      #17                 // Field maxCapacity:I
     175: putfield      #14                 // Field capacity:I
     178: aload_0
     179: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     182: ifnull        205
     185: aload_0
     186: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     189: invokevirtual #44                 // Method java/nio/ByteBuffer.isDirect:()Z
     192: ifne          205
     195: aload_0
     196: getfield      #14                 // Field capacity:I
     199: invokestatic  #45                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
     202: goto          212
     205: aload_0
     206: getfield      #14                 // Field capacity:I
     209: invokestatic  #18                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
     212: astore_2
     213: aload_0
     214: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     217: iconst_0
     218: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     221: pop
     222: aload_0
     223: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     226: aload_0
     227: getfield      #28                 // Field position:I
     230: invokevirtual #46                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
     233: pop
     234: aload_2
     235: aload_0
     236: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     239: invokevirtual #47                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
     242: pop
     243: aload_2
     244: aload_0
     245: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     248: invokevirtual #32                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
     251: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     254: pop
     255: aload_0
     256: aload_2
     257: putfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     260: goto          66
     263: iconst_1
     264: ireturn

  public void flush() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #22                 // Field outputStream:Ljava/io/OutputStream;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #28                 // Field position:I
      12: newarray       byte
      14: astore_1
      15: aload_0
      16: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      19: iconst_0
      20: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      23: pop
      24: aload_0
      25: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      28: aload_1
      29: invokevirtual #48                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      32: pop
      33: aload_0
      34: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      37: iconst_0
      38: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      41: pop
      42: aload_0
      43: getfield      #22                 // Field outputStream:Ljava/io/OutputStream;
      46: aload_1
      47: iconst_0
      48: aload_0
      49: getfield      #28                 // Field position:I
      52: invokevirtual #49                 // Method java/io/OutputStream.write:([BII)V
      55: goto          68
      58: astore_1
      59: new           #37                 // class com/esotericsoftware/kryo/KryoException
      62: dup
      63: aload_1
      64: invokespecial #51                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/Throwable;)V
      67: athrow
      68: aload_0
      69: dup
      70: getfield      #29                 // Field total:J
      73: aload_0
      74: getfield      #28                 // Field position:I
      77: i2l
      78: ladd
      79: putfield      #29                 // Field total:J
      82: aload_0
      83: iconst_0
      84: putfield      #28                 // Field position:I
      87: return
    Exception table:
       from    to  target type
           8    55    58   Class java/io/IOException

  public void close() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method flush:()V
       4: aload_0
       5: getfield      #22                 // Field outputStream:Ljava/io/OutputStream;
       8: ifnull        22
      11: aload_0
      12: getfield      #22                 // Field outputStream:Ljava/io/OutputStream;
      15: invokevirtual #52                 // Method java/io/OutputStream.close:()V
      18: goto          22
      21: astore_1
      22: return
    Exception table:
       from    to  target type
          11    18    21   Class java/io/IOException

  public void write(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field position:I
       4: aload_0
       5: getfield      #14                 // Field capacity:I
       8: if_icmpne     17
      11: aload_0
      12: iconst_1
      13: invokevirtual #53                 // Method require:(I)Z
      16: pop
      17: aload_0
      18: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      21: iload_1
      22: i2b
      23: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      26: pop
      27: aload_0
      28: dup
      29: getfield      #28                 // Field position:I
      32: iconst_1
      33: iadd
      34: putfield      #28                 // Field position:I
      37: return

  public void write(byte[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #55                 // String bytes cannot be null.
      10: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: iconst_0
      17: aload_1
      18: arraylength
      19: invokevirtual #56                 // Method writeBytes:([BII)V
      22: return

  public void write(byte[], int, int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #56                 // Method writeBytes:([BII)V
       7: return

  public void writeByte(byte) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field position:I
       4: aload_0
       5: getfield      #14                 // Field capacity:I
       8: if_icmpne     17
      11: aload_0
      12: iconst_1
      13: invokevirtual #53                 // Method require:(I)Z
      16: pop
      17: aload_0
      18: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      21: iload_1
      22: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_0
      27: dup
      28: getfield      #28                 // Field position:I
      31: iconst_1
      32: iadd
      33: putfield      #28                 // Field position:I
      36: return

  public void writeByte(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #28                 // Field position:I
       4: aload_0
       5: getfield      #14                 // Field capacity:I
       8: if_icmpne     17
      11: aload_0
      12: iconst_1
      13: invokevirtual #53                 // Method require:(I)Z
      16: pop
      17: aload_0
      18: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      21: iload_1
      22: i2b
      23: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      26: pop
      27: aload_0
      28: dup
      29: getfield      #28                 // Field position:I
      32: iconst_1
      33: iadd
      34: putfield      #28                 // Field position:I
      37: return

  public void writeBytes(byte[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #55                 // String bytes cannot be null.
      10: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: iconst_0
      17: aload_1
      18: arraylength
      19: invokevirtual #56                 // Method writeBytes:([BII)V
      22: return

  public void writeBytes(byte[], int, int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #55                 // String bytes cannot be null.
      10: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #14                 // Field capacity:I
      18: aload_0
      19: getfield      #28                 // Field position:I
      22: isub
      23: iload_3
      24: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      27: istore        4
      29: aload_0
      30: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      33: aload_1
      34: iload_2
      35: iload         4
      37: invokevirtual #57                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      40: pop
      41: aload_0
      42: dup
      43: getfield      #28                 // Field position:I
      46: iload         4
      48: iadd
      49: putfield      #28                 // Field position:I
      52: iload_3
      53: iload         4
      55: isub
      56: istore_3
      57: iload_3
      58: ifne          62
      61: return
      62: iload_2
      63: iload         4
      65: iadd
      66: istore_2
      67: aload_0
      68: getfield      #14                 // Field capacity:I
      71: iload_3
      72: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      75: istore        4
      77: aload_0
      78: iload         4
      80: invokevirtual #53                 // Method require:(I)Z
      83: pop
      84: goto          29

  public void writeInt(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #53                 // Method require:(I)Z
       5: pop
       6: aload_0
       7: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      10: iload_1
      11: invokevirtual #58                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      14: pop
      15: aload_0
      16: dup
      17: getfield      #28                 // Field position:I
      20: iconst_4
      21: iadd
      22: putfield      #28                 // Field position:I
      25: return

  public int writeInt(int, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field varIntsEnabled:Z
       4: ifne          14
       7: aload_0
       8: iload_1
       9: invokevirtual #59                 // Method writeInt:(I)V
      12: iconst_4
      13: ireturn
      14: aload_0
      15: iload_1
      16: iload_2
      17: invokevirtual #60                 // Method writeVarInt:(IZ)I
      20: ireturn

  public int writeVarInt(int, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      11: pop
      12: iload_1
      13: istore_3
      14: iload_2
      15: ifne          27
      18: iload_3
      19: iconst_1
      20: ishl
      21: iload_3
      22: bipush        31
      24: ishr
      25: ixor
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iload_3
      31: bipush        127
      33: iand
      34: istore        4
      36: iload_3
      37: bipush        7
      39: iushr
      40: istore_3
      41: iload_3
      42: ifne          53
      45: aload_0
      46: iload         4
      48: invokevirtual #61                 // Method writeByte:(I)V
      51: iconst_1
      52: ireturn
      53: iload         4
      55: sipush        128
      58: ior
      59: istore        4
      61: iload         4
      63: iload_3
      64: bipush        127
      66: iand
      67: bipush        8
      69: ishl
      70: ior
      71: istore        4
      73: iload_3
      74: bipush        7
      76: iushr
      77: istore_3
      78: iload_3
      79: ifne          135
      82: aload_0
      83: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      86: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      89: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      92: pop
      93: aload_0
      94: iload         4
      96: invokevirtual #59                 // Method writeInt:(I)V
      99: aload_0
     100: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     103: aload_0
     104: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     107: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     110: pop
     111: aload_0
     112: dup
     113: getfield      #28                 // Field position:I
     116: iconst_2
     117: isub
     118: putfield      #28                 // Field position:I
     121: aload_0
     122: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     125: aload_0
     126: getfield      #28                 // Field position:I
     129: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     132: pop
     133: iconst_2
     134: ireturn
     135: iload         4
     137: ldc           #63                 // int 32768
     139: ior
     140: istore        4
     142: iload         4
     144: iload_3
     145: bipush        127
     147: iand
     148: bipush        16
     150: ishl
     151: ior
     152: istore        4
     154: iload_3
     155: bipush        7
     157: iushr
     158: istore_3
     159: iload_3
     160: ifne          216
     163: aload_0
     164: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     167: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     170: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     173: pop
     174: aload_0
     175: iload         4
     177: invokevirtual #59                 // Method writeInt:(I)V
     180: aload_0
     181: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     184: aload_0
     185: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     188: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     191: pop
     192: aload_0
     193: dup
     194: getfield      #28                 // Field position:I
     197: iconst_1
     198: isub
     199: putfield      #28                 // Field position:I
     202: aload_0
     203: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     206: aload_0
     207: getfield      #28                 // Field position:I
     210: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     213: pop
     214: iconst_3
     215: ireturn
     216: iload         4
     218: ldc           #64                 // int 8388608
     220: ior
     221: istore        4
     223: iload         4
     225: iload_3
     226: bipush        127
     228: iand
     229: bipush        24
     231: ishl
     232: ior
     233: istore        4
     235: iload_3
     236: bipush        7
     238: iushr
     239: istore_3
     240: iload_3
     241: ifne          285
     244: aload_0
     245: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     248: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     251: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     254: pop
     255: aload_0
     256: iload         4
     258: invokevirtual #59                 // Method writeInt:(I)V
     261: aload_0
     262: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     265: aload_0
     266: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     269: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     272: pop
     273: aload_0
     274: dup
     275: getfield      #28                 // Field position:I
     278: iconst_0
     279: isub
     280: putfield      #28                 // Field position:I
     283: iconst_4
     284: ireturn
     285: iload         4
     287: ldc           #65                 // int -2147483648
     289: ior
     290: istore        4
     292: iload         4
     294: i2l
     295: ldc2_w        #66                 // long 4294967295l
     298: land
     299: iload_3
     300: i2l
     301: bipush        32
     303: lshl
     304: lor
     305: lstore        5
     307: aload_0
     308: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     311: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     314: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     317: pop
     318: aload_0
     319: lload         5
     321: invokevirtual #68                 // Method writeLong:(J)V
     324: aload_0
     325: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     328: aload_0
     329: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     332: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     335: pop
     336: aload_0
     337: dup
     338: getfield      #28                 // Field position:I
     341: iconst_3
     342: isub
     343: putfield      #28                 // Field position:I
     346: aload_0
     347: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     350: aload_0
     351: getfield      #28                 // Field position:I
     354: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     357: pop
     358: iconst_5
     359: ireturn

  public void writeString(java.lang.String) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      11: pop
      12: aload_1
      13: ifnonnull     24
      16: aload_0
      17: sipush        128
      20: invokevirtual #61                 // Method writeByte:(I)V
      23: return
      24: aload_1
      25: invokevirtual #69                 // Method java/lang/String.length:()I
      28: istore_2
      29: iload_2
      30: ifne          41
      33: aload_0
      34: sipush        129
      37: invokevirtual #61                 // Method writeByte:(I)V
      40: return
      41: iconst_0
      42: istore_3
      43: iload_2
      44: iconst_1
      45: if_icmple     91
      48: iload_2
      49: bipush        64
      51: if_icmpge     91
      54: iconst_1
      55: istore_3
      56: iconst_0
      57: istore        4
      59: iload         4
      61: iload_2
      62: if_icmpge     91
      65: aload_1
      66: iload         4
      68: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
      71: istore        5
      73: iload         5
      75: bipush        127
      77: if_icmple     85
      80: iconst_0
      81: istore_3
      82: goto          91
      85: iinc          4, 1
      88: goto          59
      91: iload_3
      92: ifeq          182
      95: aload_0
      96: getfield      #14                 // Field capacity:I
      99: aload_0
     100: getfield      #28                 // Field position:I
     103: isub
     104: iload_2
     105: if_icmpge     117
     108: aload_0
     109: aload_1
     110: iload_2
     111: invokespecial #71                 // Method writeAscii_slow:(Ljava/lang/String;I)V
     114: goto          147
     117: aload_1
     118: invokevirtual #72                 // Method java/lang/String.getBytes:()[B
     121: astore        4
     123: aload_0
     124: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     127: aload         4
     129: iconst_0
     130: aload         4
     132: arraylength
     133: invokevirtual #57                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
     136: pop
     137: aload_0
     138: dup
     139: getfield      #28                 // Field position:I
     142: iload_2
     143: iadd
     144: putfield      #28                 // Field position:I
     147: aload_0
     148: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     151: aload_0
     152: getfield      #28                 // Field position:I
     155: iconst_1
     156: isub
     157: aload_0
     158: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     161: aload_0
     162: getfield      #28                 // Field position:I
     165: iconst_1
     166: isub
     167: invokevirtual #73                 // Method java/nio/ByteBuffer.get:(I)B
     170: sipush        128
     173: ior
     174: i2b
     175: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     178: pop
     179: goto          299
     182: aload_0
     183: iload_2
     184: iconst_1
     185: iadd
     186: invokespecial #75                 // Method writeUtf8Length:(I)V
     189: iconst_0
     190: istore        4
     192: aload_0
     193: getfield      #14                 // Field capacity:I
     196: aload_0
     197: getfield      #28                 // Field position:I
     200: isub
     201: iload_2
     202: if_icmplt     273
     205: aload_0
     206: getfield      #28                 // Field position:I
     209: istore        5
     211: iload         4
     213: iload_2
     214: if_icmpge     257
     217: aload_1
     218: iload         4
     220: invokevirtual #70                 // Method java/lang/String.charAt:(I)C
     223: istore        6
     225: iload         6
     227: bipush        127
     229: if_icmple     235
     232: goto          257
     235: aload_0
     236: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     239: iload         5
     241: iinc          5, 1
     244: iload         6
     246: i2b
     247: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     250: pop
     251: iinc          4, 1
     254: goto          211
     257: aload_0
     258: iload         5
     260: putfield      #28                 // Field position:I
     263: aload_0
     264: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     267: iload         5
     269: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     272: pop
     273: iload         4
     275: iload_2
     276: if_icmpge     287
     279: aload_0
     280: aload_1
     281: iload_2
     282: iload         4
     284: invokespecial #76                 // Method writeString_slow:(Ljava/lang/CharSequence;II)V
     287: aload_0
     288: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     291: aload_0
     292: getfield      #28                 // Field position:I
     295: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     298: pop
     299: return

  public void writeString(java.lang.CharSequence) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: sipush        128
       8: invokevirtual #61                 // Method writeByte:(I)V
      11: return
      12: aload_1
      13: invokeinterface #77,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      18: istore_2
      19: iload_2
      20: ifne          31
      23: aload_0
      24: sipush        129
      27: invokevirtual #61                 // Method writeByte:(I)V
      30: return
      31: aload_0
      32: iload_2
      33: iconst_1
      34: iadd
      35: invokespecial #75                 // Method writeUtf8Length:(I)V
      38: iconst_0
      39: istore_3
      40: aload_0
      41: getfield      #14                 // Field capacity:I
      44: aload_0
      45: getfield      #28                 // Field position:I
      48: isub
      49: iload_2
      50: if_icmplt     121
      53: aload_0
      54: getfield      #28                 // Field position:I
      57: istore        4
      59: iload_3
      60: iload_2
      61: if_icmpge     105
      64: aload_1
      65: iload_3
      66: invokeinterface #78,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      71: istore        5
      73: iload         5
      75: bipush        127
      77: if_icmple     83
      80: goto          105
      83: aload_0
      84: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      87: iload         4
      89: iinc          4, 1
      92: iload         5
      94: i2b
      95: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      98: pop
      99: iinc          3, 1
     102: goto          59
     105: aload_0
     106: iload         4
     108: putfield      #28                 // Field position:I
     111: aload_0
     112: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     115: iload         4
     117: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     120: pop
     121: iload_3
     122: iload_2
     123: if_icmpge     133
     126: aload_0
     127: aload_1
     128: iload_2
     129: iload_3
     130: invokespecial #76                 // Method writeString_slow:(Ljava/lang/CharSequence;II)V
     133: aload_0
     134: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     137: aload_0
     138: getfield      #28                 // Field position:I
     141: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     144: pop
     145: return

  public void writeAscii(java.lang.String) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: sipush        128
       8: invokevirtual #61                 // Method writeByte:(I)V
      11: return
      12: aload_1
      13: invokevirtual #69                 // Method java/lang/String.length:()I
      16: istore_2
      17: iload_2
      18: ifne          29
      21: aload_0
      22: sipush        129
      25: invokevirtual #61                 // Method writeByte:(I)V
      28: return
      29: aload_0
      30: getfield      #14                 // Field capacity:I
      33: aload_0
      34: getfield      #28                 // Field position:I
      37: isub
      38: iload_2
      39: if_icmpge     51
      42: aload_0
      43: aload_1
      44: iload_2
      45: invokespecial #71                 // Method writeAscii_slow:(Ljava/lang/String;I)V
      48: goto          78
      51: aload_1
      52: invokevirtual #72                 // Method java/lang/String.getBytes:()[B
      55: astore_3
      56: aload_0
      57: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      60: aload_3
      61: iconst_0
      62: aload_3
      63: arraylength
      64: invokevirtual #57                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      67: pop
      68: aload_0
      69: dup
      70: getfield      #28                 // Field position:I
      73: iload_2
      74: iadd
      75: putfield      #28                 // Field position:I
      78: aload_0
      79: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      82: aload_0
      83: getfield      #28                 // Field position:I
      86: iconst_1
      87: isub
      88: aload_0
      89: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      92: aload_0
      93: getfield      #28                 // Field position:I
      96: iconst_1
      97: isub
      98: invokevirtual #73                 // Method java/nio/ByteBuffer.get:(I)B
     101: sipush        128
     104: ior
     105: i2b
     106: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     109: pop
     110: return

  private void writeUtf8Length(int);
    Code:
       0: iload_1
       1: bipush        6
       3: iushr
       4: ifne          40
       7: aload_0
       8: iconst_1
       9: invokevirtual #53                 // Method require:(I)Z
      12: pop
      13: aload_0
      14: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      17: iload_1
      18: sipush        128
      21: ior
      22: i2b
      23: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      26: pop
      27: aload_0
      28: dup
      29: getfield      #28                 // Field position:I
      32: iconst_1
      33: iadd
      34: putfield      #28                 // Field position:I
      37: goto          356
      40: iload_1
      41: bipush        13
      43: iushr
      44: ifne          96
      47: aload_0
      48: iconst_2
      49: invokevirtual #53                 // Method require:(I)Z
      52: pop
      53: aload_0
      54: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      57: iload_1
      58: bipush        64
      60: ior
      61: sipush        128
      64: ior
      65: i2b
      66: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      69: pop
      70: aload_0
      71: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      74: iload_1
      75: bipush        6
      77: iushr
      78: i2b
      79: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      82: pop
      83: aload_0
      84: dup
      85: getfield      #28                 // Field position:I
      88: iconst_2
      89: iadd
      90: putfield      #28                 // Field position:I
      93: goto          356
      96: iload_1
      97: bipush        20
      99: iushr
     100: ifne          169
     103: aload_0
     104: iconst_3
     105: invokevirtual #53                 // Method require:(I)Z
     108: pop
     109: aload_0
     110: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     113: iload_1
     114: bipush        64
     116: ior
     117: sipush        128
     120: ior
     121: i2b
     122: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     125: pop
     126: aload_0
     127: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     130: iload_1
     131: bipush        6
     133: iushr
     134: sipush        128
     137: ior
     138: i2b
     139: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     142: pop
     143: aload_0
     144: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     147: iload_1
     148: bipush        13
     150: iushr
     151: i2b
     152: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     155: pop
     156: aload_0
     157: dup
     158: getfield      #28                 // Field position:I
     161: iconst_3
     162: iadd
     163: putfield      #28                 // Field position:I
     166: goto          356
     169: iload_1
     170: bipush        27
     172: iushr
     173: ifne          259
     176: aload_0
     177: iconst_4
     178: invokevirtual #53                 // Method require:(I)Z
     181: pop
     182: aload_0
     183: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     186: iload_1
     187: bipush        64
     189: ior
     190: sipush        128
     193: ior
     194: i2b
     195: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     198: pop
     199: aload_0
     200: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     203: iload_1
     204: bipush        6
     206: iushr
     207: sipush        128
     210: ior
     211: i2b
     212: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     215: pop
     216: aload_0
     217: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     220: iload_1
     221: bipush        13
     223: iushr
     224: sipush        128
     227: ior
     228: i2b
     229: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     232: pop
     233: aload_0
     234: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     237: iload_1
     238: bipush        20
     240: iushr
     241: i2b
     242: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     245: pop
     246: aload_0
     247: dup
     248: getfield      #28                 // Field position:I
     251: iconst_4
     252: iadd
     253: putfield      #28                 // Field position:I
     256: goto          356
     259: aload_0
     260: iconst_5
     261: invokevirtual #53                 // Method require:(I)Z
     264: pop
     265: aload_0
     266: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     269: iload_1
     270: bipush        64
     272: ior
     273: sipush        128
     276: ior
     277: i2b
     278: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     281: pop
     282: aload_0
     283: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     286: iload_1
     287: bipush        6
     289: iushr
     290: sipush        128
     293: ior
     294: i2b
     295: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     298: pop
     299: aload_0
     300: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     303: iload_1
     304: bipush        13
     306: iushr
     307: sipush        128
     310: ior
     311: i2b
     312: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     315: pop
     316: aload_0
     317: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     320: iload_1
     321: bipush        20
     323: iushr
     324: sipush        128
     327: ior
     328: i2b
     329: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     332: pop
     333: aload_0
     334: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     337: iload_1
     338: bipush        27
     340: iushr
     341: i2b
     342: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     345: pop
     346: aload_0
     347: dup
     348: getfield      #28                 // Field position:I
     351: iconst_5
     352: iadd
     353: putfield      #28                 // Field position:I
     356: return

  private void writeString_slow(java.lang.CharSequence, int, int);
    Code:
       0: iload_3
       1: iload_2
       2: if_icmpge     255
       5: aload_0
       6: getfield      #28                 // Field position:I
       9: aload_0
      10: getfield      #14                 // Field capacity:I
      13: if_icmpne     31
      16: aload_0
      17: aload_0
      18: getfield      #14                 // Field capacity:I
      21: iload_2
      22: iload_3
      23: isub
      24: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      27: invokevirtual #53                 // Method require:(I)Z
      30: pop
      31: aload_1
      32: iload_3
      33: invokeinterface #78,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      38: istore        4
      40: iload         4
      42: bipush        127
      44: if_icmpgt     72
      47: aload_0
      48: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      51: aload_0
      52: dup
      53: getfield      #28                 // Field position:I
      56: dup_x1
      57: iconst_1
      58: iadd
      59: putfield      #28                 // Field position:I
      62: iload         4
      64: i2b
      65: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      68: pop
      69: goto          249
      72: iload         4
      74: sipush        2047
      77: if_icmple     182
      80: aload_0
      81: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      84: aload_0
      85: dup
      86: getfield      #28                 // Field position:I
      89: dup_x1
      90: iconst_1
      91: iadd
      92: putfield      #28                 // Field position:I
      95: sipush        224
      98: iload         4
     100: bipush        12
     102: ishr
     103: bipush        15
     105: iand
     106: ior
     107: i2b
     108: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     111: pop
     112: aload_0
     113: iconst_2
     114: invokevirtual #53                 // Method require:(I)Z
     117: pop
     118: aload_0
     119: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     122: aload_0
     123: dup
     124: getfield      #28                 // Field position:I
     127: dup_x1
     128: iconst_1
     129: iadd
     130: putfield      #28                 // Field position:I
     133: sipush        128
     136: iload         4
     138: bipush        6
     140: ishr
     141: bipush        63
     143: iand
     144: ior
     145: i2b
     146: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     149: pop
     150: aload_0
     151: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     154: aload_0
     155: dup
     156: getfield      #28                 // Field position:I
     159: dup_x1
     160: iconst_1
     161: iadd
     162: putfield      #28                 // Field position:I
     165: sipush        128
     168: iload         4
     170: bipush        63
     172: iand
     173: ior
     174: i2b
     175: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     178: pop
     179: goto          249
     182: aload_0
     183: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     186: aload_0
     187: dup
     188: getfield      #28                 // Field position:I
     191: dup_x1
     192: iconst_1
     193: iadd
     194: putfield      #28                 // Field position:I
     197: sipush        192
     200: iload         4
     202: bipush        6
     204: ishr
     205: bipush        31
     207: iand
     208: ior
     209: i2b
     210: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     213: pop
     214: aload_0
     215: iconst_1
     216: invokevirtual #53                 // Method require:(I)Z
     219: pop
     220: aload_0
     221: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     224: aload_0
     225: dup
     226: getfield      #28                 // Field position:I
     229: dup_x1
     230: iconst_1
     231: iadd
     232: putfield      #28                 // Field position:I
     235: sipush        128
     238: iload         4
     240: bipush        63
     242: iand
     243: ior
     244: i2b
     245: invokevirtual #74                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
     248: pop
     249: iinc          3, 1
     252: goto          0
     255: return

  private void writeAscii_slow(java.lang.String, int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: iload_2
       9: aload_0
      10: getfield      #14                 // Field capacity:I
      13: aload_0
      14: getfield      #28                 // Field position:I
      17: isub
      18: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      21: istore        5
      23: iload         4
      25: iload_2
      26: if_icmpge     106
      29: iload_2
      30: newarray       byte
      32: astore        6
      34: aload_1
      35: iload         4
      37: iload         4
      39: iload         5
      41: iadd
      42: aload         6
      44: iconst_0
      45: invokevirtual #79                 // Method java/lang/String.getBytes:(II[BI)V
      48: aload_3
      49: aload         6
      51: iconst_0
      52: iload         5
      54: invokevirtual #57                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      57: pop
      58: iload         4
      60: iload         5
      62: iadd
      63: istore        4
      65: aload_0
      66: dup
      67: getfield      #28                 // Field position:I
      70: iload         5
      72: iadd
      73: putfield      #28                 // Field position:I
      76: iload_2
      77: iload         4
      79: isub
      80: aload_0
      81: getfield      #14                 // Field capacity:I
      84: invokestatic  #43                 // Method java/lang/Math.min:(II)I
      87: istore        5
      89: aload_0
      90: iload         5
      92: invokevirtual #53                 // Method require:(I)Z
      95: ifeq          103
      98: aload_0
      99: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     102: astore_3
     103: goto          23
     106: return

  public void writeFloat(float) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #53                 // Method require:(I)Z
       5: pop
       6: aload_0
       7: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      10: fload_1
      11: invokevirtual #80                 // Method java/nio/ByteBuffer.putFloat:(F)Ljava/nio/ByteBuffer;
      14: pop
      15: aload_0
      16: dup
      17: getfield      #28                 // Field position:I
      20: iconst_4
      21: iadd
      22: putfield      #28                 // Field position:I
      25: return

  public int writeFloat(float, float, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: fload_1
       2: fload_2
       3: fmul
       4: f2i
       5: iload_3
       6: invokevirtual #81                 // Method writeInt:(IZ)I
       9: ireturn

  public void writeShort(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #53                 // Method require:(I)Z
       5: pop
       6: aload_0
       7: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      10: iload_1
      11: i2s
      12: invokevirtual #82                 // Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
      15: pop
      16: aload_0
      17: dup
      18: getfield      #28                 // Field position:I
      21: iconst_2
      22: iadd
      23: putfield      #28                 // Field position:I
      26: return

  public void writeLong(long) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokevirtual #53                 // Method require:(I)Z
       6: pop
       7: aload_0
       8: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      11: lload_1
      12: invokevirtual #83                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      15: pop
      16: aload_0
      17: dup
      18: getfield      #28                 // Field position:I
      21: bipush        8
      23: iadd
      24: putfield      #28                 // Field position:I
      27: return

  public int writeLong(long, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field varIntsEnabled:Z
       4: ifne          15
       7: aload_0
       8: lload_1
       9: invokevirtual #68                 // Method writeLong:(J)V
      12: bipush        8
      14: ireturn
      15: aload_0
      16: lload_1
      17: iload_3
      18: invokevirtual #84                 // Method writeVarLong:(JZ)I
      21: ireturn

  public int writeVarLong(long, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_3
       1: ifne          13
       4: lload_1
       5: iconst_1
       6: lshl
       7: lload_1
       8: bipush        63
      10: lshr
      11: lxor
      12: lstore_1
      13: iconst_0
      14: istore        4
      16: lload_1
      17: ldc2_w        #85                 // long 127l
      20: land
      21: l2i
      22: istore        4
      24: lload_1
      25: bipush        7
      27: lushr
      28: lstore_1
      29: lload_1
      30: lconst_0
      31: lcmp
      32: ifne          43
      35: aload_0
      36: iload         4
      38: invokevirtual #61                 // Method writeByte:(I)V
      41: iconst_1
      42: ireturn
      43: iload         4
      45: sipush        128
      48: ior
      49: istore        4
      51: iload         4
      53: i2l
      54: lload_1
      55: ldc2_w        #85                 // long 127l
      58: land
      59: bipush        8
      61: lshl
      62: lor
      63: l2i
      64: istore        4
      66: lload_1
      67: bipush        7
      69: lushr
      70: lstore_1
      71: lload_1
      72: lconst_0
      73: lcmp
      74: ifne          130
      77: aload_0
      78: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      81: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      84: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      87: pop
      88: aload_0
      89: iload         4
      91: invokevirtual #59                 // Method writeInt:(I)V
      94: aload_0
      95: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      98: aload_0
      99: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     102: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     105: pop
     106: aload_0
     107: dup
     108: getfield      #28                 // Field position:I
     111: iconst_2
     112: isub
     113: putfield      #28                 // Field position:I
     116: aload_0
     117: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     120: aload_0
     121: getfield      #28                 // Field position:I
     124: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     127: pop
     128: iconst_2
     129: ireturn
     130: iload         4
     132: ldc           #63                 // int 32768
     134: ior
     135: istore        4
     137: iload         4
     139: i2l
     140: lload_1
     141: ldc2_w        #85                 // long 127l
     144: land
     145: bipush        16
     147: lshl
     148: lor
     149: l2i
     150: istore        4
     152: lload_1
     153: bipush        7
     155: lushr
     156: lstore_1
     157: lload_1
     158: lconst_0
     159: lcmp
     160: ifne          216
     163: aload_0
     164: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     167: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     170: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     173: pop
     174: aload_0
     175: iload         4
     177: invokevirtual #59                 // Method writeInt:(I)V
     180: aload_0
     181: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     184: aload_0
     185: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     188: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     191: pop
     192: aload_0
     193: dup
     194: getfield      #28                 // Field position:I
     197: iconst_1
     198: isub
     199: putfield      #28                 // Field position:I
     202: aload_0
     203: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     206: aload_0
     207: getfield      #28                 // Field position:I
     210: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     213: pop
     214: iconst_3
     215: ireturn
     216: iload         4
     218: ldc           #64                 // int 8388608
     220: ior
     221: istore        4
     223: iload         4
     225: i2l
     226: lload_1
     227: ldc2_w        #85                 // long 127l
     230: land
     231: bipush        24
     233: lshl
     234: lor
     235: l2i
     236: istore        4
     238: lload_1
     239: bipush        7
     241: lushr
     242: lstore_1
     243: lload_1
     244: lconst_0
     245: lcmp
     246: ifne          290
     249: aload_0
     250: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     253: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     256: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     259: pop
     260: aload_0
     261: iload         4
     263: invokevirtual #59                 // Method writeInt:(I)V
     266: aload_0
     267: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     270: aload_0
     271: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     274: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     277: pop
     278: aload_0
     279: dup
     280: getfield      #28                 // Field position:I
     283: iconst_0
     284: isub
     285: putfield      #28                 // Field position:I
     288: iconst_4
     289: ireturn
     290: iload         4
     292: ldc           #65                 // int -2147483648
     294: ior
     295: istore        4
     297: iload         4
     299: i2l
     300: ldc2_w        #66                 // long 4294967295l
     303: land
     304: lstore        5
     306: lload         5
     308: lload_1
     309: ldc2_w        #85                 // long 127l
     312: land
     313: bipush        32
     315: lshl
     316: lor
     317: lstore        5
     319: lload_1
     320: bipush        7
     322: lushr
     323: lstore_1
     324: lload_1
     325: lconst_0
     326: lcmp
     327: ifne          383
     330: aload_0
     331: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     334: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     337: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     340: pop
     341: aload_0
     342: lload         5
     344: invokevirtual #68                 // Method writeLong:(J)V
     347: aload_0
     348: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     351: aload_0
     352: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     355: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     358: pop
     359: aload_0
     360: dup
     361: getfield      #28                 // Field position:I
     364: iconst_3
     365: isub
     366: putfield      #28                 // Field position:I
     369: aload_0
     370: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     373: aload_0
     374: getfield      #28                 // Field position:I
     377: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     380: pop
     381: iconst_5
     382: ireturn
     383: lload         5
     385: ldc2_w        #87                 // long 549755813888l
     388: lor
     389: lstore        5
     391: lload         5
     393: lload_1
     394: ldc2_w        #85                 // long 127l
     397: land
     398: bipush        40
     400: lshl
     401: lor
     402: lstore        5
     404: lload_1
     405: bipush        7
     407: lushr
     408: lstore_1
     409: lload_1
     410: lconst_0
     411: lcmp
     412: ifne          469
     415: aload_0
     416: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     419: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     422: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     425: pop
     426: aload_0
     427: lload         5
     429: invokevirtual #68                 // Method writeLong:(J)V
     432: aload_0
     433: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     436: aload_0
     437: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     440: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     443: pop
     444: aload_0
     445: dup
     446: getfield      #28                 // Field position:I
     449: iconst_2
     450: isub
     451: putfield      #28                 // Field position:I
     454: aload_0
     455: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     458: aload_0
     459: getfield      #28                 // Field position:I
     462: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     465: pop
     466: bipush        6
     468: ireturn
     469: lload         5
     471: ldc2_w        #89                 // long 140737488355328l
     474: lor
     475: lstore        5
     477: lload         5
     479: lload_1
     480: ldc2_w        #85                 // long 127l
     483: land
     484: bipush        48
     486: lshl
     487: lor
     488: lstore        5
     490: lload_1
     491: bipush        7
     493: lushr
     494: lstore_1
     495: lload_1
     496: lconst_0
     497: lcmp
     498: ifne          555
     501: aload_0
     502: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     505: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     508: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     511: pop
     512: aload_0
     513: lload         5
     515: invokevirtual #68                 // Method writeLong:(J)V
     518: aload_0
     519: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     522: aload_0
     523: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     526: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     529: pop
     530: aload_0
     531: dup
     532: getfield      #28                 // Field position:I
     535: iconst_1
     536: isub
     537: putfield      #28                 // Field position:I
     540: aload_0
     541: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     544: aload_0
     545: getfield      #28                 // Field position:I
     548: invokevirtual #34                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     551: pop
     552: bipush        7
     554: ireturn
     555: lload         5
     557: ldc2_w        #91                 // long 36028797018963968l
     560: lor
     561: lstore        5
     563: lload         5
     565: lload_1
     566: ldc2_w        #85                 // long 127l
     569: land
     570: bipush        56
     572: lshl
     573: lor
     574: lstore        5
     576: lload_1
     577: bipush        7
     579: lushr
     580: lstore_1
     581: lload_1
     582: lconst_0
     583: lcmp
     584: ifne          619
     587: aload_0
     588: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     591: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     594: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     597: pop
     598: aload_0
     599: lload         5
     601: invokevirtual #68                 // Method writeLong:(J)V
     604: aload_0
     605: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     608: aload_0
     609: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     612: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     615: pop
     616: bipush        8
     618: ireturn
     619: lload         5
     621: ldc2_w        #93                 // long -9223372036854775808l
     624: lor
     625: lstore        5
     627: aload_0
     628: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     631: getstatic     #62                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
     634: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     637: pop
     638: aload_0
     639: lload         5
     641: invokevirtual #68                 // Method writeLong:(J)V
     644: aload_0
     645: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     648: aload_0
     649: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
     652: invokevirtual #20                 // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
     655: pop
     656: aload_0
     657: lload_1
     658: l2i
     659: i2b
     660: invokevirtual #95                 // Method write:(I)V
     663: bipush        9
     665: ireturn

  public int writeLongS(long, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_3
       1: ifne          13
       4: lload_1
       5: iconst_1
       6: lshl
       7: lload_1
       8: bipush        63
      10: lshr
      11: lxor
      12: lstore_1
      13: lload_1
      14: bipush        7
      16: lushr
      17: lconst_0
      18: lcmp
      19: ifne          51
      22: aload_0
      23: iconst_1
      24: invokevirtual #53                 // Method require:(I)Z
      27: pop
      28: aload_0
      29: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      32: lload_1
      33: l2i
      34: i2b
      35: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      38: pop
      39: aload_0
      40: dup
      41: getfield      #28                 // Field position:I
      44: iconst_1
      45: iadd
      46: putfield      #28                 // Field position:I
      49: iconst_1
      50: ireturn
      51: lload_1
      52: bipush        14
      54: lushr
      55: lconst_0
      56: lcmp
      57: ifne          111
      60: aload_0
      61: iconst_2
      62: invokevirtual #53                 // Method require:(I)Z
      65: pop
      66: aload_0
      67: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      70: lload_1
      71: ldc2_w        #85                 // long 127l
      74: land
      75: ldc2_w        #96                 // long 128l
      78: lor
      79: l2i
      80: i2b
      81: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      84: pop
      85: aload_0
      86: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      89: lload_1
      90: bipush        7
      92: lushr
      93: l2i
      94: i2b
      95: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      98: pop
      99: aload_0
     100: dup
     101: getfield      #28                 // Field position:I
     104: iconst_2
     105: iadd
     106: putfield      #28                 // Field position:I
     109: iconst_2
     110: ireturn
     111: lload_1
     112: bipush        21
     114: lushr
     115: lconst_0
     116: lcmp
     117: ifne          189
     120: aload_0
     121: iconst_3
     122: invokevirtual #53                 // Method require:(I)Z
     125: pop
     126: aload_0
     127: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     130: lload_1
     131: ldc2_w        #85                 // long 127l
     134: land
     135: ldc2_w        #96                 // long 128l
     138: lor
     139: l2i
     140: i2b
     141: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     144: pop
     145: aload_0
     146: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     149: lload_1
     150: bipush        7
     152: lushr
     153: ldc2_w        #96                 // long 128l
     156: lor
     157: l2i
     158: i2b
     159: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     162: pop
     163: aload_0
     164: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     167: lload_1
     168: bipush        14
     170: lushr
     171: l2i
     172: i2b
     173: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     176: pop
     177: aload_0
     178: dup
     179: getfield      #28                 // Field position:I
     182: iconst_3
     183: iadd
     184: putfield      #28                 // Field position:I
     187: iconst_3
     188: ireturn
     189: lload_1
     190: bipush        28
     192: lushr
     193: lconst_0
     194: lcmp
     195: ifne          285
     198: aload_0
     199: iconst_4
     200: invokevirtual #53                 // Method require:(I)Z
     203: pop
     204: aload_0
     205: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     208: lload_1
     209: ldc2_w        #85                 // long 127l
     212: land
     213: ldc2_w        #96                 // long 128l
     216: lor
     217: l2i
     218: i2b
     219: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     222: pop
     223: aload_0
     224: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     227: lload_1
     228: bipush        7
     230: lushr
     231: ldc2_w        #96                 // long 128l
     234: lor
     235: l2i
     236: i2b
     237: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     240: pop
     241: aload_0
     242: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     245: lload_1
     246: bipush        14
     248: lushr
     249: ldc2_w        #96                 // long 128l
     252: lor
     253: l2i
     254: i2b
     255: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     258: pop
     259: aload_0
     260: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     263: lload_1
     264: bipush        21
     266: lushr
     267: l2i
     268: i2b
     269: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     272: pop
     273: aload_0
     274: dup
     275: getfield      #28                 // Field position:I
     278: iconst_4
     279: iadd
     280: putfield      #28                 // Field position:I
     283: iconst_4
     284: ireturn
     285: lload_1
     286: bipush        35
     288: lushr
     289: lconst_0
     290: lcmp
     291: ifne          399
     294: aload_0
     295: iconst_5
     296: invokevirtual #53                 // Method require:(I)Z
     299: pop
     300: aload_0
     301: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     304: lload_1
     305: ldc2_w        #85                 // long 127l
     308: land
     309: ldc2_w        #96                 // long 128l
     312: lor
     313: l2i
     314: i2b
     315: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     318: pop
     319: aload_0
     320: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     323: lload_1
     324: bipush        7
     326: lushr
     327: ldc2_w        #96                 // long 128l
     330: lor
     331: l2i
     332: i2b
     333: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     336: pop
     337: aload_0
     338: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     341: lload_1
     342: bipush        14
     344: lushr
     345: ldc2_w        #96                 // long 128l
     348: lor
     349: l2i
     350: i2b
     351: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     354: pop
     355: aload_0
     356: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     359: lload_1
     360: bipush        21
     362: lushr
     363: ldc2_w        #96                 // long 128l
     366: lor
     367: l2i
     368: i2b
     369: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     372: pop
     373: aload_0
     374: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     377: lload_1
     378: bipush        28
     380: lushr
     381: l2i
     382: i2b
     383: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     386: pop
     387: aload_0
     388: dup
     389: getfield      #28                 // Field position:I
     392: iconst_5
     393: iadd
     394: putfield      #28                 // Field position:I
     397: iconst_5
     398: ireturn
     399: lload_1
     400: bipush        42
     402: lushr
     403: lconst_0
     404: lcmp
     405: ifne          534
     408: aload_0
     409: bipush        6
     411: invokevirtual #53                 // Method require:(I)Z
     414: pop
     415: aload_0
     416: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     419: lload_1
     420: ldc2_w        #85                 // long 127l
     423: land
     424: ldc2_w        #96                 // long 128l
     427: lor
     428: l2i
     429: i2b
     430: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     433: pop
     434: aload_0
     435: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     438: lload_1
     439: bipush        7
     441: lushr
     442: ldc2_w        #96                 // long 128l
     445: lor
     446: l2i
     447: i2b
     448: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     451: pop
     452: aload_0
     453: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     456: lload_1
     457: bipush        14
     459: lushr
     460: ldc2_w        #96                 // long 128l
     463: lor
     464: l2i
     465: i2b
     466: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     469: pop
     470: aload_0
     471: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     474: lload_1
     475: bipush        21
     477: lushr
     478: ldc2_w        #96                 // long 128l
     481: lor
     482: l2i
     483: i2b
     484: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     487: pop
     488: aload_0
     489: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     492: lload_1
     493: bipush        28
     495: lushr
     496: ldc2_w        #96                 // long 128l
     499: lor
     500: l2i
     501: i2b
     502: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     505: pop
     506: aload_0
     507: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     510: lload_1
     511: bipush        35
     513: lushr
     514: l2i
     515: i2b
     516: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     519: pop
     520: aload_0
     521: dup
     522: getfield      #28                 // Field position:I
     525: bipush        6
     527: iadd
     528: putfield      #28                 // Field position:I
     531: bipush        6
     533: ireturn
     534: lload_1
     535: bipush        49
     537: lushr
     538: lconst_0
     539: lcmp
     540: ifne          687
     543: aload_0
     544: bipush        7
     546: invokevirtual #53                 // Method require:(I)Z
     549: pop
     550: aload_0
     551: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     554: lload_1
     555: ldc2_w        #85                 // long 127l
     558: land
     559: ldc2_w        #96                 // long 128l
     562: lor
     563: l2i
     564: i2b
     565: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     568: pop
     569: aload_0
     570: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     573: lload_1
     574: bipush        7
     576: lushr
     577: ldc2_w        #96                 // long 128l
     580: lor
     581: l2i
     582: i2b
     583: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     586: pop
     587: aload_0
     588: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     591: lload_1
     592: bipush        14
     594: lushr
     595: ldc2_w        #96                 // long 128l
     598: lor
     599: l2i
     600: i2b
     601: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     604: pop
     605: aload_0
     606: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     609: lload_1
     610: bipush        21
     612: lushr
     613: ldc2_w        #96                 // long 128l
     616: lor
     617: l2i
     618: i2b
     619: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     622: pop
     623: aload_0
     624: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     627: lload_1
     628: bipush        28
     630: lushr
     631: ldc2_w        #96                 // long 128l
     634: lor
     635: l2i
     636: i2b
     637: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     640: pop
     641: aload_0
     642: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     645: lload_1
     646: bipush        35
     648: lushr
     649: ldc2_w        #96                 // long 128l
     652: lor
     653: l2i
     654: i2b
     655: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     658: pop
     659: aload_0
     660: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     663: lload_1
     664: bipush        42
     666: lushr
     667: l2i
     668: i2b
     669: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     672: pop
     673: aload_0
     674: dup
     675: getfield      #28                 // Field position:I
     678: bipush        7
     680: iadd
     681: putfield      #28                 // Field position:I
     684: bipush        7
     686: ireturn
     687: lload_1
     688: bipush        56
     690: lushr
     691: lconst_0
     692: lcmp
     693: ifne          858
     696: aload_0
     697: bipush        8
     699: invokevirtual #53                 // Method require:(I)Z
     702: pop
     703: aload_0
     704: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     707: lload_1
     708: ldc2_w        #85                 // long 127l
     711: land
     712: ldc2_w        #96                 // long 128l
     715: lor
     716: l2i
     717: i2b
     718: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     721: pop
     722: aload_0
     723: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     726: lload_1
     727: bipush        7
     729: lushr
     730: ldc2_w        #96                 // long 128l
     733: lor
     734: l2i
     735: i2b
     736: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     739: pop
     740: aload_0
     741: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     744: lload_1
     745: bipush        14
     747: lushr
     748: ldc2_w        #96                 // long 128l
     751: lor
     752: l2i
     753: i2b
     754: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     757: pop
     758: aload_0
     759: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     762: lload_1
     763: bipush        21
     765: lushr
     766: ldc2_w        #96                 // long 128l
     769: lor
     770: l2i
     771: i2b
     772: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     775: pop
     776: aload_0
     777: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     780: lload_1
     781: bipush        28
     783: lushr
     784: ldc2_w        #96                 // long 128l
     787: lor
     788: l2i
     789: i2b
     790: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     793: pop
     794: aload_0
     795: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     798: lload_1
     799: bipush        35
     801: lushr
     802: ldc2_w        #96                 // long 128l
     805: lor
     806: l2i
     807: i2b
     808: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     811: pop
     812: aload_0
     813: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     816: lload_1
     817: bipush        42
     819: lushr
     820: ldc2_w        #96                 // long 128l
     823: lor
     824: l2i
     825: i2b
     826: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     829: pop
     830: aload_0
     831: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     834: lload_1
     835: bipush        49
     837: lushr
     838: l2i
     839: i2b
     840: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     843: pop
     844: aload_0
     845: dup
     846: getfield      #28                 // Field position:I
     849: bipush        8
     851: iadd
     852: putfield      #28                 // Field position:I
     855: bipush        8
     857: ireturn
     858: aload_0
     859: bipush        9
     861: invokevirtual #53                 // Method require:(I)Z
     864: pop
     865: aload_0
     866: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     869: lload_1
     870: ldc2_w        #85                 // long 127l
     873: land
     874: ldc2_w        #96                 // long 128l
     877: lor
     878: l2i
     879: i2b
     880: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     883: pop
     884: aload_0
     885: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     888: lload_1
     889: bipush        7
     891: lushr
     892: ldc2_w        #96                 // long 128l
     895: lor
     896: l2i
     897: i2b
     898: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     901: pop
     902: aload_0
     903: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     906: lload_1
     907: bipush        14
     909: lushr
     910: ldc2_w        #96                 // long 128l
     913: lor
     914: l2i
     915: i2b
     916: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     919: pop
     920: aload_0
     921: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     924: lload_1
     925: bipush        21
     927: lushr
     928: ldc2_w        #96                 // long 128l
     931: lor
     932: l2i
     933: i2b
     934: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     937: pop
     938: aload_0
     939: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     942: lload_1
     943: bipush        28
     945: lushr
     946: ldc2_w        #96                 // long 128l
     949: lor
     950: l2i
     951: i2b
     952: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     955: pop
     956: aload_0
     957: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     960: lload_1
     961: bipush        35
     963: lushr
     964: ldc2_w        #96                 // long 128l
     967: lor
     968: l2i
     969: i2b
     970: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     973: pop
     974: aload_0
     975: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     978: lload_1
     979: bipush        42
     981: lushr
     982: ldc2_w        #96                 // long 128l
     985: lor
     986: l2i
     987: i2b
     988: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
     991: pop
     992: aload_0
     993: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
     996: lload_1
     997: bipush        49
     999: lushr
    1000: ldc2_w        #96                 // long 128l
    1003: lor
    1004: l2i
    1005: i2b
    1006: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1009: pop
    1010: aload_0
    1011: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
    1014: lload_1
    1015: bipush        56
    1017: lushr
    1018: l2i
    1019: i2b
    1020: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
    1023: pop
    1024: aload_0
    1025: dup
    1026: getfield      #28                 // Field position:I
    1029: bipush        9
    1031: iadd
    1032: putfield      #28                 // Field position:I
    1035: bipush        9
    1037: ireturn

  public void writeBoolean(boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #53                 // Method require:(I)Z
       5: pop
       6: aload_0
       7: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      10: iload_1
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: i2b
      20: invokevirtual #54                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      23: pop
      24: aload_0
      25: dup
      26: getfield      #28                 // Field position:I
      29: iconst_1
      30: iadd
      31: putfield      #28                 // Field position:I
      34: return

  public void writeChar(char) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #53                 // Method require:(I)Z
       5: pop
       6: aload_0
       7: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      10: iload_1
      11: invokevirtual #98                 // Method java/nio/ByteBuffer.putChar:(C)Ljava/nio/ByteBuffer;
      14: pop
      15: aload_0
      16: dup
      17: getfield      #28                 // Field position:I
      20: iconst_2
      21: iadd
      22: putfield      #28                 // Field position:I
      25: return

  public void writeDouble(double) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokevirtual #53                 // Method require:(I)Z
       6: pop
       7: aload_0
       8: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      11: dload_1
      12: invokevirtual #99                 // Method java/nio/ByteBuffer.putDouble:(D)Ljava/nio/ByteBuffer;
      15: pop
      16: aload_0
      17: dup
      18: getfield      #28                 // Field position:I
      21: bipush        8
      23: iadd
      24: putfield      #28                 // Field position:I
      27: return

  public int writeDouble(double, double, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: dmul
       4: d2l
       5: iload         5
       7: invokevirtual #100                // Method writeLong:(JZ)I
      10: ireturn

  public void writeInts(int[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacity:I
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: isub
       9: aload_1
      10: arraylength
      11: iconst_4
      12: imul
      13: if_icmplt     53
      16: aload_0
      17: invokespecial #101                // Method isNativeOrder:()Z
      20: ifeq          53
      23: aload_0
      24: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #102                // Method java/nio/ByteBuffer.asIntBuffer:()Ljava/nio/IntBuffer;
      30: astore_2
      31: aload_2
      32: aload_1
      33: invokevirtual #103                // Method java/nio/IntBuffer.put:([I)Ljava/nio/IntBuffer;
      36: pop
      37: aload_0
      38: dup
      39: getfield      #28                 // Field position:I
      42: aload_1
      43: arraylength
      44: iconst_4
      45: imul
      46: iadd
      47: putfield      #28                 // Field position:I
      50: goto          58
      53: aload_0
      54: aload_1
      55: invokespecial #104                // Method com/esotericsoftware/kryo/io/Output.writeInts:([I)V
      58: return

  public void writeLongs(long[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacity:I
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: isub
       9: aload_1
      10: arraylength
      11: bipush        8
      13: imul
      14: if_icmplt     55
      17: aload_0
      18: invokespecial #101                // Method isNativeOrder:()Z
      21: ifeq          55
      24: aload_0
      25: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #105                // Method java/nio/ByteBuffer.asLongBuffer:()Ljava/nio/LongBuffer;
      31: astore_2
      32: aload_2
      33: aload_1
      34: invokevirtual #106                // Method java/nio/LongBuffer.put:([J)Ljava/nio/LongBuffer;
      37: pop
      38: aload_0
      39: dup
      40: getfield      #28                 // Field position:I
      43: aload_1
      44: arraylength
      45: bipush        8
      47: imul
      48: iadd
      49: putfield      #28                 // Field position:I
      52: goto          60
      55: aload_0
      56: aload_1
      57: invokespecial #107                // Method com/esotericsoftware/kryo/io/Output.writeLongs:([J)V
      60: return

  public void writeFloats(float[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacity:I
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: isub
       9: aload_1
      10: arraylength
      11: iconst_4
      12: imul
      13: if_icmplt     53
      16: aload_0
      17: invokespecial #101                // Method isNativeOrder:()Z
      20: ifeq          53
      23: aload_0
      24: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #108                // Method java/nio/ByteBuffer.asFloatBuffer:()Ljava/nio/FloatBuffer;
      30: astore_2
      31: aload_2
      32: aload_1
      33: invokevirtual #109                // Method java/nio/FloatBuffer.put:([F)Ljava/nio/FloatBuffer;
      36: pop
      37: aload_0
      38: dup
      39: getfield      #28                 // Field position:I
      42: aload_1
      43: arraylength
      44: iconst_4
      45: imul
      46: iadd
      47: putfield      #28                 // Field position:I
      50: goto          58
      53: aload_0
      54: aload_1
      55: invokespecial #110                // Method com/esotericsoftware/kryo/io/Output.writeFloats:([F)V
      58: return

  public void writeShorts(short[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacity:I
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: isub
       9: aload_1
      10: arraylength
      11: iconst_2
      12: imul
      13: if_icmplt     53
      16: aload_0
      17: invokespecial #101                // Method isNativeOrder:()Z
      20: ifeq          53
      23: aload_0
      24: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #111                // Method java/nio/ByteBuffer.asShortBuffer:()Ljava/nio/ShortBuffer;
      30: astore_2
      31: aload_2
      32: aload_1
      33: invokevirtual #112                // Method java/nio/ShortBuffer.put:([S)Ljava/nio/ShortBuffer;
      36: pop
      37: aload_0
      38: dup
      39: getfield      #28                 // Field position:I
      42: aload_1
      43: arraylength
      44: iconst_2
      45: imul
      46: iadd
      47: putfield      #28                 // Field position:I
      50: goto          58
      53: aload_0
      54: aload_1
      55: invokespecial #113                // Method com/esotericsoftware/kryo/io/Output.writeShorts:([S)V
      58: return

  public void writeChars(char[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacity:I
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: isub
       9: aload_1
      10: arraylength
      11: iconst_2
      12: imul
      13: if_icmplt     53
      16: aload_0
      17: invokespecial #101                // Method isNativeOrder:()Z
      20: ifeq          53
      23: aload_0
      24: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      27: invokevirtual #114                // Method java/nio/ByteBuffer.asCharBuffer:()Ljava/nio/CharBuffer;
      30: astore_2
      31: aload_2
      32: aload_1
      33: invokevirtual #115                // Method java/nio/CharBuffer.put:([C)Ljava/nio/CharBuffer;
      36: pop
      37: aload_0
      38: dup
      39: getfield      #28                 // Field position:I
      42: aload_1
      43: arraylength
      44: iconst_2
      45: imul
      46: iadd
      47: putfield      #28                 // Field position:I
      50: goto          58
      53: aload_0
      54: aload_1
      55: invokespecial #116                // Method com/esotericsoftware/kryo/io/Output.writeChars:([C)V
      58: return

  public void writeDoubles(double[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field capacity:I
       4: aload_0
       5: getfield      #28                 // Field position:I
       8: isub
       9: aload_1
      10: arraylength
      11: bipush        8
      13: imul
      14: if_icmplt     55
      17: aload_0
      18: invokespecial #101                // Method isNativeOrder:()Z
      21: ifeq          55
      24: aload_0
      25: getfield      #19                 // Field niobuffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #117                // Method java/nio/ByteBuffer.asDoubleBuffer:()Ljava/nio/DoubleBuffer;
      31: astore_2
      32: aload_2
      33: aload_1
      34: invokevirtual #118                // Method java/nio/DoubleBuffer.put:([D)Ljava/nio/DoubleBuffer;
      37: pop
      38: aload_0
      39: dup
      40: getfield      #28                 // Field position:I
      43: aload_1
      44: arraylength
      45: bipush        8
      47: imul
      48: iadd
      49: putfield      #28                 // Field position:I
      52: goto          60
      55: aload_0
      56: aload_1
      57: invokespecial #119                // Method com/esotericsoftware/kryo/io/Output.writeDoubles:([D)V
      60: return

  private boolean isNativeOrder();
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteOrder:Ljava/nio/ByteOrder;
       4: getstatic     #120                // Field nativeOrder:Ljava/nio/ByteOrder;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean getVarIntsEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field varIntsEnabled:Z
       4: ireturn

  public void setVarIntsEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field varIntsEnabled:Z
       5: return

  static {};
    Code:
       0: invokestatic  #121                // Method java/nio/ByteOrder.nativeOrder:()Ljava/nio/ByteOrder;
       3: putstatic     #120                // Field nativeOrder:Ljava/nio/ByteOrder;
       6: return
}
