Compiled from "KryoPool.java"
public class com.esotericsoftware.kryo.pool.KryoPool$Builder {
  private final com.esotericsoftware.kryo.pool.KryoFactory factory;

  private java.util.Queue<com.esotericsoftware.kryo.Kryo> queue;

  private boolean softReferences;

  public com.esotericsoftware.kryo.pool.KryoPool$Builder(com.esotericsoftware.kryo.pool.KryoFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #4                  // Field queue:Ljava/util/Queue;
      15: aload_1
      16: ifnonnull     29
      19: new           #5                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #6                  // String factory must not be null
      25: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #8                  // Field factory:Lcom/esotericsoftware/kryo/pool/KryoFactory;
      34: return

  public com.esotericsoftware.kryo.pool.KryoPool$Builder queue(java.util.Queue<com.esotericsoftware.kryo.Kryo>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #5                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #9                  // String queue must not be null
      10: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field queue:Ljava/util/Queue;
      19: aload_0
      20: areturn

  public com.esotericsoftware.kryo.pool.KryoPool$Builder softReferences();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #10                 // Field softReferences:Z
       5: aload_0
       6: areturn

  public com.esotericsoftware.kryo.pool.KryoPool build();
    Code:
       0: aload_0
       1: getfield      #10                 // Field softReferences:Z
       4: ifeq          21
       7: new           #11                 // class com/esotericsoftware/kryo/pool/SoftReferenceQueue
      10: dup
      11: aload_0
      12: getfield      #4                  // Field queue:Ljava/util/Queue;
      15: invokespecial #12                 // Method com/esotericsoftware/kryo/pool/SoftReferenceQueue."<init>":(Ljava/util/Queue;)V
      18: goto          25
      21: aload_0
      22: getfield      #4                  // Field queue:Ljava/util/Queue;
      25: astore_1
      26: new           #13                 // class com/esotericsoftware/kryo/pool/KryoPoolQueueImpl
      29: dup
      30: aload_0
      31: getfield      #8                  // Field factory:Lcom/esotericsoftware/kryo/pool/KryoFactory;
      34: aload_1
      35: invokespecial #14                 // Method com/esotericsoftware/kryo/pool/KryoPoolQueueImpl."<init>":(Lcom/esotericsoftware/kryo/pool/KryoFactory;Ljava/util/Queue;)V
      38: areturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #20                 // String [queue.class=
      19: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #4                  // Field queue:Ljava/util/Queue;
      26: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #22                 // String , softReferences=
      34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #10                 // Field softReferences:Z
      41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      44: ldc           #24                 // String ]
      46: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: areturn
}
