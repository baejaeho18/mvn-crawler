Compiled from "Kryo.java"
public class com.esotericsoftware.kryo.Kryo {
  public static final byte NULL;

  public static final byte NOT_NULL;

  private static final int REF;

  private static final int NO_REF;

  private com.esotericsoftware.kryo.factories.SerializerFactory defaultSerializer;

  private final java.util.ArrayList<com.esotericsoftware.kryo.Kryo$DefaultSerializerEntry> defaultSerializers;

  private final int lowPriorityDefaultSerializerCount;

  private final com.esotericsoftware.kryo.ClassResolver classResolver;

  private int nextRegisterID;

  private java.lang.ClassLoader classLoader;

  private org.objenesis.strategy.InstantiatorStrategy strategy;

  private boolean registrationRequired;

  private int depth;

  private int maxDepth;

  private boolean autoReset;

  private volatile java.lang.Thread thread;

  private com.esotericsoftware.kryo.util.ObjectMap context;

  private com.esotericsoftware.kryo.util.ObjectMap graphContext;

  private com.esotericsoftware.kryo.ReferenceResolver referenceResolver;

  private final com.esotericsoftware.kryo.util.IntArray readReferenceIds;

  private boolean references;

  private boolean copyReferences;

  private java.lang.Object readObject;

  private int copyDepth;

  private boolean copyShallow;

  private com.esotericsoftware.kryo.util.IdentityMap originalToCopy;

  private java.lang.Object needsCopyReference;

  private com.esotericsoftware.kryo.Generics genericsScope;

  private boolean asmEnabled;

  private com.esotericsoftware.kryo.StreamFactory streamFactory;

  public com.esotericsoftware.kryo.Kryo();
    Code:
       0: aload_0
       1: new           #1                  // class com/esotericsoftware/kryo/util/DefaultClassResolver
       4: dup
       5: invokespecial #2                  // Method com/esotericsoftware/kryo/util/DefaultClassResolver."<init>":()V
       8: new           #3                  // class com/esotericsoftware/kryo/util/MapReferenceResolver
      11: dup
      12: invokespecial #4                  // Method com/esotericsoftware/kryo/util/MapReferenceResolver."<init>":()V
      15: new           #5                  // class com/esotericsoftware/kryo/util/DefaultStreamFactory
      18: dup
      19: invokespecial #6                  // Method com/esotericsoftware/kryo/util/DefaultStreamFactory."<init>":()V
      22: invokespecial #7                  // Method "<init>":(Lcom/esotericsoftware/kryo/ClassResolver;Lcom/esotericsoftware/kryo/ReferenceResolver;Lcom/esotericsoftware/kryo/StreamFactory;)V
      25: return

  public com.esotericsoftware.kryo.Kryo(com.esotericsoftware.kryo.ReferenceResolver);
    Code:
       0: aload_0
       1: new           #1                  // class com/esotericsoftware/kryo/util/DefaultClassResolver
       4: dup
       5: invokespecial #2                  // Method com/esotericsoftware/kryo/util/DefaultClassResolver."<init>":()V
       8: aload_1
       9: new           #5                  // class com/esotericsoftware/kryo/util/DefaultStreamFactory
      12: dup
      13: invokespecial #6                  // Method com/esotericsoftware/kryo/util/DefaultStreamFactory."<init>":()V
      16: invokespecial #7                  // Method "<init>":(Lcom/esotericsoftware/kryo/ClassResolver;Lcom/esotericsoftware/kryo/ReferenceResolver;Lcom/esotericsoftware/kryo/StreamFactory;)V
      19: return

  public com.esotericsoftware.kryo.Kryo(com.esotericsoftware.kryo.ClassResolver, com.esotericsoftware.kryo.ReferenceResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: new           #5                  // class com/esotericsoftware/kryo/util/DefaultStreamFactory
       6: dup
       7: invokespecial #6                  // Method com/esotericsoftware/kryo/util/DefaultStreamFactory."<init>":()V
      10: invokespecial #7                  // Method "<init>":(Lcom/esotericsoftware/kryo/ClassResolver;Lcom/esotericsoftware/kryo/ReferenceResolver;Lcom/esotericsoftware/kryo/StreamFactory;)V
      13: return

  public com.esotericsoftware.kryo.Kryo(com.esotericsoftware.kryo.ClassResolver, com.esotericsoftware.kryo.ReferenceResolver, com.esotericsoftware.kryo.StreamFactory);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class com/esotericsoftware/kryo/factories/ReflectionSerializerFactory
       8: dup
       9: ldc           #10                 // class com/esotericsoftware/kryo/serializers/FieldSerializer
      11: invokespecial #11                 // Method com/esotericsoftware/kryo/factories/ReflectionSerializerFactory."<init>":(Ljava/lang/Class;)V
      14: putfield      #12                 // Field defaultSerializer:Lcom/esotericsoftware/kryo/factories/SerializerFactory;
      17: aload_0
      18: new           #13                 // class java/util/ArrayList
      21: dup
      22: bipush        32
      24: invokespecial #14                 // Method java/util/ArrayList."<init>":(I)V
      27: putfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      30: aload_0
      31: aload_0
      32: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: invokevirtual #17                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      38: putfield      #18                 // Field classLoader:Ljava/lang/ClassLoader;
      41: aload_0
      42: new           #19                 // class com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy
      45: dup
      46: invokespecial #20                 // Method com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy."<init>":()V
      49: putfield      #21                 // Field strategy:Lorg/objenesis/strategy/InstantiatorStrategy;
      52: aload_0
      53: ldc           #23                 // int 2147483647
      55: putfield      #24                 // Field maxDepth:I
      58: aload_0
      59: iconst_1
      60: putfield      #25                 // Field autoReset:Z
      63: aload_0
      64: new           #26                 // class com/esotericsoftware/kryo/util/IntArray
      67: dup
      68: iconst_0
      69: invokespecial #27                 // Method com/esotericsoftware/kryo/util/IntArray."<init>":(I)V
      72: putfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
      75: aload_0
      76: iconst_1
      77: putfield      #29                 // Field copyReferences:Z
      80: aload_0
      81: iconst_0
      82: putfield      #30                 // Field asmEnabled:Z
      85: aload_1
      86: ifnonnull     99
      89: new           #31                 // class java/lang/IllegalArgumentException
      92: dup
      93: ldc           #32                 // String classResolver cannot be null.
      95: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: aload_1
     101: putfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
     104: aload_1
     105: aload_0
     106: invokeinterface #35,  2           // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.setKryo:(Lcom/esotericsoftware/kryo/Kryo;)V
     111: aload_0
     112: aload_3
     113: putfield      #36                 // Field streamFactory:Lcom/esotericsoftware/kryo/StreamFactory;
     116: aload_3
     117: aload_0
     118: invokeinterface #37,  2           // InterfaceMethod com/esotericsoftware/kryo/StreamFactory.setKryo:(Lcom/esotericsoftware/kryo/Kryo;)V
     123: aload_0
     124: aload_2
     125: putfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
     128: aload_2
     129: ifnull        144
     132: aload_2
     133: aload_0
     134: invokeinterface #39,  2           // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.setKryo:(Lcom/esotericsoftware/kryo/Kryo;)V
     139: aload_0
     140: iconst_1
     141: putfield      #40                 // Field references:Z
     144: aload_0
     145: ldc           #41                 // class "[B"
     147: ldc           #42                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$ByteArraySerializer
     149: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     152: aload_0
     153: ldc           #44                 // class "[C"
     155: ldc           #45                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$CharArraySerializer
     157: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     160: aload_0
     161: ldc           #46                 // class "[S"
     163: ldc           #47                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$ShortArraySerializer
     165: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     168: aload_0
     169: ldc           #48                 // class "[I"
     171: ldc           #49                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$IntArraySerializer
     173: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     176: aload_0
     177: ldc           #50                 // class "[J"
     179: ldc           #51                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$LongArraySerializer
     181: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     184: aload_0
     185: ldc           #52                 // class "[F"
     187: ldc           #53                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$FloatArraySerializer
     189: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     192: aload_0
     193: ldc           #54                 // class "[D"
     195: ldc           #55                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$DoubleArraySerializer
     197: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     200: aload_0
     201: ldc           #56                 // class "[Z"
     203: ldc           #57                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$BooleanArraySerializer
     205: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     208: aload_0
     209: ldc           #58                 // class "[Ljava/lang/String;"
     211: ldc           #59                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$StringArraySerializer
     213: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     216: aload_0
     217: ldc           #60                 // class "[Ljava/lang/Object;"
     219: ldc           #61                 // class com/esotericsoftware/kryo/serializers/DefaultArraySerializers$ObjectArraySerializer
     221: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     224: aload_0
     225: ldc           #62                 // class com/esotericsoftware/kryo/KryoSerializable
     227: ldc           #63                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$KryoSerializableSerializer
     229: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     232: aload_0
     233: ldc           #64                 // class java/math/BigInteger
     235: ldc           #65                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$BigIntegerSerializer
     237: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     240: aload_0
     241: ldc           #66                 // class java/math/BigDecimal
     243: ldc           #67                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$BigDecimalSerializer
     245: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     248: aload_0
     249: ldc           #68                 // class java/lang/Class
     251: ldc           #69                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$ClassSerializer
     253: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     256: aload_0
     257: ldc           #70                 // class java/util/Date
     259: ldc           #71                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$DateSerializer
     261: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     264: aload_0
     265: ldc           #72                 // class java/lang/Enum
     267: ldc           #73                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$EnumSerializer
     269: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     272: aload_0
     273: ldc           #74                 // class java/util/EnumSet
     275: ldc           #75                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$EnumSetSerializer
     277: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     280: aload_0
     281: ldc           #76                 // class java/util/Currency
     283: ldc           #77                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CurrencySerializer
     285: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     288: aload_0
     289: ldc           #78                 // class java/lang/StringBuffer
     291: ldc           #79                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$StringBufferSerializer
     293: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     296: aload_0
     297: ldc           #80                 // class java/lang/StringBuilder
     299: ldc           #81                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$StringBuilderSerializer
     301: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     304: aload_0
     305: getstatic     #82                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
     308: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     311: ldc           #83                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CollectionsEmptyListSerializer
     313: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     316: aload_0
     317: getstatic     #84                 // Field java/util/Collections.EMPTY_MAP:Ljava/util/Map;
     320: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     323: ldc           #85                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CollectionsEmptyMapSerializer
     325: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     328: aload_0
     329: getstatic     #86                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
     332: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     335: ldc           #87                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CollectionsEmptySetSerializer
     337: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     340: aload_0
     341: aconst_null
     342: invokestatic  #88                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     345: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     348: ldc           #89                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CollectionsSingletonListSerializer
     350: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     353: aload_0
     354: aconst_null
     355: aconst_null
     356: invokestatic  #90                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
     359: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     362: ldc           #91                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CollectionsSingletonMapSerializer
     364: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     367: aload_0
     368: aconst_null
     369: invokestatic  #92                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
     372: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     375: ldc           #93                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CollectionsSingletonSetSerializer
     377: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     380: aload_0
     381: ldc           #94                 // class java/util/TreeSet
     383: ldc           #95                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$TreeSetSerializer
     385: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     388: aload_0
     389: ldc           #96                 // class java/util/Collection
     391: ldc           #97                 // class com/esotericsoftware/kryo/serializers/CollectionSerializer
     393: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     396: aload_0
     397: ldc           #98                 // class java/util/TreeMap
     399: ldc           #99                 // class com/esotericsoftware/kryo/serializers/DefaultSerializers$TreeMapSerializer
     401: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     404: aload_0
     405: ldc           #100                // class java/util/Map
     407: ldc           #101                // class com/esotericsoftware/kryo/serializers/MapSerializer
     409: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     412: aload_0
     413: ldc           #102                // class java/util/TimeZone
     415: ldc           #103                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$TimeZoneSerializer
     417: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     420: aload_0
     421: ldc           #104                // class java/util/Calendar
     423: ldc           #105                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CalendarSerializer
     425: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     428: aload_0
     429: ldc           #106                // class java/util/Locale
     431: ldc           #107                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$LocaleSerializer
     433: invokevirtual #43                 // Method addDefaultSerializer:(Ljava/lang/Class;Ljava/lang/Class;)V
     436: aload_0
     437: aload_0
     438: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
     441: invokevirtual #108                // Method java/util/ArrayList.size:()I
     444: putfield      #109                // Field lowPriorityDefaultSerializerCount:I
     447: aload_0
     448: getstatic     #110                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     451: new           #111                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$IntSerializer
     454: dup
     455: invokespecial #112                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$IntSerializer."<init>":()V
     458: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     461: pop
     462: aload_0
     463: ldc           #114                // class java/lang/String
     465: new           #115                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$StringSerializer
     468: dup
     469: invokespecial #116                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$StringSerializer."<init>":()V
     472: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     475: pop
     476: aload_0
     477: getstatic     #117                // Field java/lang/Float.TYPE:Ljava/lang/Class;
     480: new           #118                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$FloatSerializer
     483: dup
     484: invokespecial #119                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$FloatSerializer."<init>":()V
     487: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     490: pop
     491: aload_0
     492: getstatic     #120                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
     495: new           #121                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$BooleanSerializer
     498: dup
     499: invokespecial #122                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$BooleanSerializer."<init>":()V
     502: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     505: pop
     506: aload_0
     507: getstatic     #123                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     510: new           #124                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$ByteSerializer
     513: dup
     514: invokespecial #125                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$ByteSerializer."<init>":()V
     517: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     520: pop
     521: aload_0
     522: getstatic     #126                // Field java/lang/Character.TYPE:Ljava/lang/Class;
     525: new           #127                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$CharSerializer
     528: dup
     529: invokespecial #128                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$CharSerializer."<init>":()V
     532: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     535: pop
     536: aload_0
     537: getstatic     #129                // Field java/lang/Short.TYPE:Ljava/lang/Class;
     540: new           #130                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$ShortSerializer
     543: dup
     544: invokespecial #131                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$ShortSerializer."<init>":()V
     547: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     550: pop
     551: aload_0
     552: getstatic     #132                // Field java/lang/Long.TYPE:Ljava/lang/Class;
     555: new           #133                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$LongSerializer
     558: dup
     559: invokespecial #134                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$LongSerializer."<init>":()V
     562: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     565: pop
     566: aload_0
     567: getstatic     #135                // Field java/lang/Double.TYPE:Ljava/lang/Class;
     570: new           #136                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$DoubleSerializer
     573: dup
     574: invokespecial #137                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$DoubleSerializer."<init>":()V
     577: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     580: pop
     581: aload_0
     582: getstatic     #138                // Field java/lang/Void.TYPE:Ljava/lang/Class;
     585: new           #139                // class com/esotericsoftware/kryo/serializers/DefaultSerializers$VoidSerializer
     588: dup
     589: invokespecial #140                // Method com/esotericsoftware/kryo/serializers/DefaultSerializers$VoidSerializer."<init>":()V
     592: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
     595: pop
     596: return

  public void setDefaultSerializer(com.esotericsoftware.kryo.factories.SerializerFactory);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #141                // String serializer cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #12                 // Field defaultSerializer:Lcom/esotericsoftware/kryo/factories/SerializerFactory;
      19: return

  public void setDefaultSerializer(java.lang.Class<? extends com.esotericsoftware.kryo.Serializer>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #141                // String serializer cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: new           #9                  // class com/esotericsoftware/kryo/factories/ReflectionSerializerFactory
      18: dup
      19: aload_1
      20: invokespecial #11                 // Method com/esotericsoftware/kryo/factories/ReflectionSerializerFactory."<init>":(Ljava/lang/Class;)V
      23: putfield      #12                 // Field defaultSerializer:Lcom/esotericsoftware/kryo/factories/SerializerFactory;
      26: return

  public void addDefaultSerializer(java.lang.Class, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #142                // String type cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #141                // String serializer cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #143                // class com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry
      31: dup
      32: aload_1
      33: new           #144                // class com/esotericsoftware/kryo/factories/PseudoSerializerFactory
      36: dup
      37: aload_2
      38: invokespecial #145                // Method com/esotericsoftware/kryo/factories/PseudoSerializerFactory."<init>":(Lcom/esotericsoftware/kryo/Serializer;)V
      41: invokespecial #146                // Method com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry."<init>":(Ljava/lang/Class;Lcom/esotericsoftware/kryo/factories/SerializerFactory;)V
      44: astore_3
      45: aload_0
      46: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      49: aload_0
      50: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      53: invokevirtual #108                // Method java/util/ArrayList.size:()I
      56: aload_0
      57: getfield      #109                // Field lowPriorityDefaultSerializerCount:I
      60: isub
      61: aload_3
      62: invokevirtual #147                // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      65: return

  public void addDefaultSerializer(java.lang.Class, com.esotericsoftware.kryo.factories.SerializerFactory);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #142                // String type cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #148                // String serializerFactory cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #143                // class com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry
      31: dup
      32: aload_1
      33: aload_2
      34: invokespecial #146                // Method com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry."<init>":(Ljava/lang/Class;Lcom/esotericsoftware/kryo/factories/SerializerFactory;)V
      37: astore_3
      38: aload_0
      39: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      42: aload_0
      43: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      46: invokevirtual #108                // Method java/util/ArrayList.size:()I
      49: aload_0
      50: getfield      #109                // Field lowPriorityDefaultSerializerCount:I
      53: isub
      54: aload_3
      55: invokevirtual #147                // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      58: return

  public void addDefaultSerializer(java.lang.Class, java.lang.Class<? extends com.esotericsoftware.kryo.Serializer>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #142                // String type cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #149                // String serializerClass cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: new           #143                // class com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry
      31: dup
      32: aload_1
      33: new           #9                  // class com/esotericsoftware/kryo/factories/ReflectionSerializerFactory
      36: dup
      37: aload_2
      38: invokespecial #11                 // Method com/esotericsoftware/kryo/factories/ReflectionSerializerFactory."<init>":(Ljava/lang/Class;)V
      41: invokespecial #146                // Method com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry."<init>":(Ljava/lang/Class;Lcom/esotericsoftware/kryo/factories/SerializerFactory;)V
      44: astore_3
      45: aload_0
      46: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      49: aload_0
      50: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      53: invokevirtual #108                // Method java/util/ArrayList.size:()I
      56: aload_0
      57: getfield      #109                // Field lowPriorityDefaultSerializerCount:I
      60: isub
      61: aload_3
      62: invokevirtual #147                // Method java/util/ArrayList.add:(ILjava/lang/Object;)V
      65: return

  public com.esotericsoftware.kryo.Serializer getDefaultSerializer(java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #142                // String type cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #150                // Method getDefaultSerializerForAnnotatedType:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      19: astore_2
      20: aload_2
      21: ifnull        26
      24: aload_2
      25: areturn
      26: iconst_0
      27: istore_3
      28: aload_0
      29: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      32: invokevirtual #108                // Method java/util/ArrayList.size:()I
      35: istore        4
      37: iload_3
      38: iload         4
      40: if_icmpge     91
      43: aload_0
      44: getfield      #15                 // Field defaultSerializers:Ljava/util/ArrayList;
      47: iload_3
      48: invokevirtual #151                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
      51: checkcast     #143                // class com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry
      54: astore        5
      56: aload         5
      58: getfield      #152                // Field com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry.type:Ljava/lang/Class;
      61: aload_1
      62: invokevirtual #153                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      65: ifeq          85
      68: aload         5
      70: getfield      #154                // Field com/esotericsoftware/kryo/Kryo$DefaultSerializerEntry.serializerFactory:Lcom/esotericsoftware/kryo/factories/SerializerFactory;
      73: aload_0
      74: aload_1
      75: invokeinterface #155,  3          // InterfaceMethod com/esotericsoftware/kryo/factories/SerializerFactory.makeSerializer:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      80: astore        6
      82: aload         6
      84: areturn
      85: iinc          3, 1
      88: goto          37
      91: aload_0
      92: aload_1
      93: invokevirtual #156                // Method newDefaultSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      96: areturn

  protected com.esotericsoftware.kryo.Serializer getDefaultSerializerForAnnotatedType(java.lang.Class);
    Code:
       0: aload_1
       1: ldc           #157                // class com/esotericsoftware/kryo/DefaultSerializer
       3: invokevirtual #158                // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifeq          31
       9: aload_1
      10: ldc           #157                // class com/esotericsoftware/kryo/DefaultSerializer
      12: invokevirtual #159                // Method java/lang/Class.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      15: checkcast     #157                // class com/esotericsoftware/kryo/DefaultSerializer
      18: astore_2
      19: aload_0
      20: aload_2
      21: invokeinterface #160,  1          // InterfaceMethod com/esotericsoftware/kryo/DefaultSerializer.value:()Ljava/lang/Class;
      26: aload_1
      27: invokestatic  #161                // Method com/esotericsoftware/kryo/factories/ReflectionSerializerFactory.makeSerializer:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Class;Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      30: areturn
      31: aconst_null
      32: areturn

  protected com.esotericsoftware.kryo.Serializer newDefaultSerializer(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #12                 // Field defaultSerializer:Lcom/esotericsoftware/kryo/factories/SerializerFactory;
       4: aload_0
       5: aload_1
       6: invokeinterface #155,  3          // InterfaceMethod com/esotericsoftware/kryo/factories/SerializerFactory.makeSerializer:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      11: areturn

  public com.esotericsoftware.kryo.Registration register(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
       4: aload_1
       5: invokeinterface #162,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      10: astore_2
      11: aload_2
      12: ifnull        17
      15: aload_2
      16: areturn
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_1
      21: invokevirtual #163                // Method getDefaultSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      24: invokevirtual #113                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Lcom/esotericsoftware/kryo/Registration;
      27: areturn

  public com.esotericsoftware.kryo.Registration register(java.lang.Class, int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
       4: aload_1
       5: invokeinterface #162,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      10: astore_3
      11: aload_3
      12: ifnull        17
      15: aload_3
      16: areturn
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_1
      21: invokevirtual #163                // Method getDefaultSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      24: iload_2
      25: invokevirtual #164                // Method register:(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;I)Lcom/esotericsoftware/kryo/Registration;
      28: areturn

  public com.esotericsoftware.kryo.Registration register(java.lang.Class, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_0
       1: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
       4: aload_1
       5: invokeinterface #162,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      10: astore_3
      11: aload_3
      12: ifnull        22
      15: aload_3
      16: aload_2
      17: invokevirtual #165                // Method com/esotericsoftware/kryo/Registration.setSerializer:(Lcom/esotericsoftware/kryo/Serializer;)V
      20: aload_3
      21: areturn
      22: aload_0
      23: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
      26: new           #166                // class com/esotericsoftware/kryo/Registration
      29: dup
      30: aload_1
      31: aload_2
      32: aload_0
      33: invokevirtual #167                // Method getNextRegistrationId:()I
      36: invokespecial #168                // Method com/esotericsoftware/kryo/Registration."<init>":(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;I)V
      39: invokeinterface #169,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.register:(Lcom/esotericsoftware/kryo/Registration;)Lcom/esotericsoftware/kryo/Registration;
      44: areturn

  public com.esotericsoftware.kryo.Registration register(java.lang.Class, com.esotericsoftware.kryo.Serializer, int);
    Code:
       0: iload_3
       1: ifge          31
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #80                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #171                // String id must be >= 0:
      17: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_3
      21: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: new           #166                // class com/esotericsoftware/kryo/Registration
      35: dup
      36: aload_1
      37: aload_2
      38: iload_3
      39: invokespecial #168                // Method com/esotericsoftware/kryo/Registration."<init>":(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;I)V
      42: invokevirtual #175                // Method register:(Lcom/esotericsoftware/kryo/Registration;)Lcom/esotericsoftware/kryo/Registration;
      45: areturn

  public com.esotericsoftware.kryo.Registration register(com.esotericsoftware.kryo.Registration);
    Code:
       0: aload_1
       1: invokevirtual #176                // Method com/esotericsoftware/kryo/Registration.getId:()I
       4: istore_2
       5: iload_2
       6: ifge          36
       9: new           #31                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #80                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #177                // String id must be > 0:
      22: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_2
      26: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_1
      38: invokevirtual #176                // Method com/esotericsoftware/kryo/Registration.getId:()I
      41: invokevirtual #178                // Method getRegistration:(I)Lcom/esotericsoftware/kryo/Registration;
      44: astore_3
      45: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
      48: ifeq          109
      51: aload_3
      52: ifnull        109
      55: aload_3
      56: invokevirtual #180                // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
      59: aload_1
      60: invokevirtual #180                // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
      63: if_acmpeq     109
      66: new           #80                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #181                // String An existing registration with a different type already uses ID:
      75: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_1
      79: invokevirtual #176                // Method com/esotericsoftware/kryo/Registration.getId:()I
      82: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: ldc           #182                // String \nExisting registration:
      87: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_3
      91: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #184                // String \nUnable to set registration:
      96: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_1
     100: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokestatic  #185                // Method com/esotericsoftware/minlog/Log.debug:(Ljava/lang/String;)V
     109: aload_0
     110: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
     113: aload_1
     114: invokeinterface #169,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.register:(Lcom/esotericsoftware/kryo/Registration;)Lcom/esotericsoftware/kryo/Registration;
     119: areturn

  public int getNextRegistrationId();
    Code:
       0: aload_0
       1: getfield      #186                // Field nextRegisterID:I
       4: bipush        -2
       6: if_icmpeq     43
       9: aload_0
      10: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
      13: aload_0
      14: getfield      #186                // Field nextRegisterID:I
      17: invokeinterface #187,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(I)Lcom/esotericsoftware/kryo/Registration;
      22: ifnonnull     30
      25: aload_0
      26: getfield      #186                // Field nextRegisterID:I
      29: ireturn
      30: aload_0
      31: dup
      32: getfield      #186                // Field nextRegisterID:I
      35: iconst_1
      36: iadd
      37: putfield      #186                // Field nextRegisterID:I
      40: goto          0
      43: new           #188                // class com/esotericsoftware/kryo/KryoException
      46: dup
      47: ldc           #189                // String No registration IDs are available.
      49: invokespecial #190                // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
      52: athrow

  public com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #142                // String type cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
      18: aload_1
      19: invokeinterface #162,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      24: astore_2
      25: aload_2
      26: ifnonnull     187
      29: aload_1
      30: invokestatic  #191                // Method java/lang/reflect/Proxy.isProxyClass:(Ljava/lang/Class;)Z
      33: ifeq          46
      36: aload_0
      37: ldc           #192                // class java/lang/reflect/InvocationHandler
      39: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      42: astore_2
      43: goto          118
      46: aload_1
      47: invokevirtual #194                // Method java/lang/Class.isEnum:()Z
      50: ifne          74
      53: ldc           #72                 // class java/lang/Enum
      55: aload_1
      56: invokevirtual #153                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      59: ifeq          74
      62: aload_0
      63: aload_1
      64: invokevirtual #195                // Method java/lang/Class.getEnclosingClass:()Ljava/lang/Class;
      67: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      70: astore_2
      71: goto          118
      74: ldc           #74                 // class java/util/EnumSet
      76: aload_1
      77: invokevirtual #153                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      80: ifeq          98
      83: aload_0
      84: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
      87: ldc           #74                 // class java/util/EnumSet
      89: invokeinterface #162,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      94: astore_2
      95: goto          118
      98: aload_0
      99: aload_1
     100: invokevirtual #196                // Method isClousre:(Ljava/lang/Class;)Z
     103: ifeq          118
     106: aload_0
     107: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
     110: ldc           #197                // class com/esotericsoftware/kryo/Kryo$Closure
     112: invokeinterface #162,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
     117: astore_2
     118: aload_2
     119: ifnonnull     187
     122: aload_0
     123: getfield      #198                // Field registrationRequired:Z
     126: ifeq          176
     129: new           #31                 // class java/lang/IllegalArgumentException
     132: dup
     133: new           #80                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
     140: ldc           #199                // String Class is not registered:
     142: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload_1
     146: invokestatic  #200                // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     149: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: ldc           #201                // String \nNote: To register this class use: kryo.register(
     154: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: aload_1
     158: invokestatic  #200                // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     161: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: ldc           #202                // String .class);
     166: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: aload_0
     177: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
     180: aload_1
     181: invokeinterface #203,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.registerImplicit:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
     186: astore_2
     187: aload_2
     188: areturn

  public com.esotericsoftware.kryo.Registration getRegistration(int);
    Code:
       0: aload_0
       1: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
       4: iload_1
       5: invokeinterface #187,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.getRegistration:(I)Lcom/esotericsoftware/kryo/Registration;
      10: areturn

  public com.esotericsoftware.kryo.Serializer getSerializer(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
       5: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
       8: areturn

  public com.esotericsoftware.kryo.Registration writeClass(com.esotericsoftware.kryo.io.Output, java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #205                // String output cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
      18: aload_1
      19: aload_2
      20: invokeinterface #206,  3          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.writeClass:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      25: astore_3
      26: aload_0
      27: getfield      #207                // Field depth:I
      30: ifne          44
      33: aload_0
      34: getfield      #25                 // Field autoReset:Z
      37: ifeq          44
      40: aload_0
      41: invokevirtual #208                // Method reset:()V
      44: aload_3
      45: areturn
      46: astore        4
      48: aload_0
      49: getfield      #207                // Field depth:I
      52: ifne          66
      55: aload_0
      56: getfield      #25                 // Field autoReset:Z
      59: ifeq          66
      62: aload_0
      63: invokevirtual #208                // Method reset:()V
      66: aload         4
      68: athrow
    Exception table:
       from    to  target type
          14    26    46   any
          46    48    46   any

  public void writeObject(com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #205                // String output cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #209                // String object cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokespecial #210                // Method beginObject:()V
      32: aload_0
      33: getfield      #40                 // Field references:Z
      36: ifeq          91
      39: aload_0
      40: aload_1
      41: aload_2
      42: iconst_0
      43: invokevirtual #211                // Method writeReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Z)Z
      46: ifeq          91
      49: aload_0
      50: aload_2
      51: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      57: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
      60: aload_0
      61: aconst_null
      62: invokevirtual #212                // Method com/esotericsoftware/kryo/Serializer.setGenerics:(Lcom/esotericsoftware/kryo/Kryo;[Ljava/lang/Class;)V
      65: aload_0
      66: dup
      67: getfield      #207                // Field depth:I
      70: iconst_1
      71: isub
      72: dup_x1
      73: putfield      #207                // Field depth:I
      76: ifne          90
      79: aload_0
      80: getfield      #25                 // Field autoReset:Z
      83: ifeq          90
      86: aload_0
      87: invokevirtual #208                // Method reset:()V
      90: return
      91: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      94: ifne          111
      97: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     100: ifeq          117
     103: aload_0
     104: getfield      #207                // Field depth:I
     107: iconst_1
     108: if_icmpne     117
     111: ldc           #214                // String Write
     113: aload_2
     114: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     117: aload_0
     118: aload_2
     119: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     122: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
     125: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
     128: aload_0
     129: aload_1
     130: aload_2
     131: invokevirtual #216                // Method com/esotericsoftware/kryo/Serializer.write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     134: aload_0
     135: dup
     136: getfield      #207                // Field depth:I
     139: iconst_1
     140: isub
     141: dup_x1
     142: putfield      #207                // Field depth:I
     145: ifne          190
     148: aload_0
     149: getfield      #25                 // Field autoReset:Z
     152: ifeq          190
     155: aload_0
     156: invokevirtual #208                // Method reset:()V
     159: goto          190
     162: astore_3
     163: aload_0
     164: dup
     165: getfield      #207                // Field depth:I
     168: iconst_1
     169: isub
     170: dup_x1
     171: putfield      #207                // Field depth:I
     174: ifne          188
     177: aload_0
     178: getfield      #25                 // Field autoReset:Z
     181: ifeq          188
     184: aload_0
     185: invokevirtual #208                // Method reset:()V
     188: aload_3
     189: athrow
     190: return
    Exception table:
       from    to  target type
          32    65   162   any
          91   134   162   any

  public void writeObject(com.esotericsoftware.kryo.io.Output, java.lang.Object, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #205                // String output cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #209                // String object cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_3
      29: ifnonnull     42
      32: new           #31                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #141                // String serializer cannot be null.
      38: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: invokespecial #210                // Method beginObject:()V
      46: aload_0
      47: getfield      #40                 // Field references:Z
      50: ifeq          95
      53: aload_0
      54: aload_1
      55: aload_2
      56: iconst_0
      57: invokevirtual #211                // Method writeReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Z)Z
      60: ifeq          95
      63: aload_3
      64: aload_0
      65: aconst_null
      66: invokevirtual #212                // Method com/esotericsoftware/kryo/Serializer.setGenerics:(Lcom/esotericsoftware/kryo/Kryo;[Ljava/lang/Class;)V
      69: aload_0
      70: dup
      71: getfield      #207                // Field depth:I
      74: iconst_1
      75: isub
      76: dup_x1
      77: putfield      #207                // Field depth:I
      80: ifne          94
      83: aload_0
      84: getfield      #25                 // Field autoReset:Z
      87: ifeq          94
      90: aload_0
      91: invokevirtual #208                // Method reset:()V
      94: return
      95: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      98: ifne          115
     101: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     104: ifeq          121
     107: aload_0
     108: getfield      #207                // Field depth:I
     111: iconst_1
     112: if_icmpne     121
     115: ldc           #214                // String Write
     117: aload_2
     118: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     121: aload_3
     122: aload_0
     123: aload_1
     124: aload_2
     125: invokevirtual #216                // Method com/esotericsoftware/kryo/Serializer.write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     128: aload_0
     129: dup
     130: getfield      #207                // Field depth:I
     133: iconst_1
     134: isub
     135: dup_x1
     136: putfield      #207                // Field depth:I
     139: ifne          186
     142: aload_0
     143: getfield      #25                 // Field autoReset:Z
     146: ifeq          186
     149: aload_0
     150: invokevirtual #208                // Method reset:()V
     153: goto          186
     156: astore        4
     158: aload_0
     159: dup
     160: getfield      #207                // Field depth:I
     163: iconst_1
     164: isub
     165: dup_x1
     166: putfield      #207                // Field depth:I
     169: ifne          183
     172: aload_0
     173: getfield      #25                 // Field autoReset:Z
     176: ifeq          183
     179: aload_0
     180: invokevirtual #208                // Method reset:()V
     183: aload         4
     185: athrow
     186: return
    Exception table:
       from    to  target type
          46    69   156   any
          95   128   156   any
         156   158   156   any

  public void writeObjectOrNull(com.esotericsoftware.kryo.io.Output, java.lang.Object, java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #205                // String output cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokespecial #210                // Method beginObject:()V
      18: aload_0
      19: aload_3
      20: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      23: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
      26: astore        4
      28: aload_0
      29: getfield      #40                 // Field references:Z
      32: ifeq          78
      35: aload_0
      36: aload_1
      37: aload_2
      38: iconst_1
      39: invokevirtual #211                // Method writeReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Z)Z
      42: ifeq          152
      45: aload         4
      47: aload_0
      48: aconst_null
      49: invokevirtual #212                // Method com/esotericsoftware/kryo/Serializer.setGenerics:(Lcom/esotericsoftware/kryo/Kryo;[Ljava/lang/Class;)V
      52: aload_0
      53: dup
      54: getfield      #207                // Field depth:I
      57: iconst_1
      58: isub
      59: dup_x1
      60: putfield      #207                // Field depth:I
      63: ifne          77
      66: aload_0
      67: getfield      #25                 // Field autoReset:Z
      70: ifeq          77
      73: aload_0
      74: invokevirtual #208                // Method reset:()V
      77: return
      78: aload         4
      80: invokevirtual #217                // Method com/esotericsoftware/kryo/Serializer.getAcceptsNull:()Z
      83: ifne          152
      86: aload_2
      87: ifnonnull     147
      90: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      93: ifne          110
      96: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
      99: ifeq          116
     102: aload_0
     103: getfield      #207                // Field depth:I
     106: iconst_1
     107: if_icmpne     116
     110: ldc           #214                // String Write
     112: aload_2
     113: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     116: aload_1
     117: iconst_0
     118: invokevirtual #219                // Method com/esotericsoftware/kryo/io/Output.writeByte:(B)V
     121: aload_0
     122: dup
     123: getfield      #207                // Field depth:I
     126: iconst_1
     127: isub
     128: dup_x1
     129: putfield      #207                // Field depth:I
     132: ifne          146
     135: aload_0
     136: getfield      #25                 // Field autoReset:Z
     139: ifeq          146
     142: aload_0
     143: invokevirtual #208                // Method reset:()V
     146: return
     147: aload_1
     148: iconst_1
     149: invokevirtual #219                // Method com/esotericsoftware/kryo/io/Output.writeByte:(B)V
     152: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     155: ifne          172
     158: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     161: ifeq          178
     164: aload_0
     165: getfield      #207                // Field depth:I
     168: iconst_1
     169: if_icmpne     178
     172: ldc           #214                // String Write
     174: aload_2
     175: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     178: aload         4
     180: aload_0
     181: aload_1
     182: aload_2
     183: invokevirtual #216                // Method com/esotericsoftware/kryo/Serializer.write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     186: aload_0
     187: dup
     188: getfield      #207                // Field depth:I
     191: iconst_1
     192: isub
     193: dup_x1
     194: putfield      #207                // Field depth:I
     197: ifne          244
     200: aload_0
     201: getfield      #25                 // Field autoReset:Z
     204: ifeq          244
     207: aload_0
     208: invokevirtual #208                // Method reset:()V
     211: goto          244
     214: astore        5
     216: aload_0
     217: dup
     218: getfield      #207                // Field depth:I
     221: iconst_1
     222: isub
     223: dup_x1
     224: putfield      #207                // Field depth:I
     227: ifne          241
     230: aload_0
     231: getfield      #25                 // Field autoReset:Z
     234: ifeq          241
     237: aload_0
     238: invokevirtual #208                // Method reset:()V
     241: aload         5
     243: athrow
     244: return
    Exception table:
       from    to  target type
          18    52   214   any
          78   121   214   any
         147   186   214   any
         214   216   214   any

  public void writeObjectOrNull(com.esotericsoftware.kryo.io.Output, java.lang.Object, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #205                // String output cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_3
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #141                // String serializer cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokespecial #210                // Method beginObject:()V
      32: aload_0
      33: getfield      #40                 // Field references:Z
      36: ifeq          81
      39: aload_0
      40: aload_1
      41: aload_2
      42: iconst_1
      43: invokevirtual #211                // Method writeReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Z)Z
      46: ifeq          154
      49: aload_3
      50: aload_0
      51: aconst_null
      52: invokevirtual #212                // Method com/esotericsoftware/kryo/Serializer.setGenerics:(Lcom/esotericsoftware/kryo/Kryo;[Ljava/lang/Class;)V
      55: aload_0
      56: dup
      57: getfield      #207                // Field depth:I
      60: iconst_1
      61: isub
      62: dup_x1
      63: putfield      #207                // Field depth:I
      66: ifne          80
      69: aload_0
      70: getfield      #25                 // Field autoReset:Z
      73: ifeq          80
      76: aload_0
      77: invokevirtual #208                // Method reset:()V
      80: return
      81: aload_3
      82: invokevirtual #217                // Method com/esotericsoftware/kryo/Serializer.getAcceptsNull:()Z
      85: ifne          154
      88: aload_2
      89: ifnonnull     149
      92: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      95: ifne          112
      98: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     101: ifeq          118
     104: aload_0
     105: getfield      #207                // Field depth:I
     108: iconst_1
     109: if_icmpne     118
     112: ldc           #214                // String Write
     114: aconst_null
     115: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     118: aload_1
     119: iconst_0
     120: invokevirtual #219                // Method com/esotericsoftware/kryo/io/Output.writeByte:(B)V
     123: aload_0
     124: dup
     125: getfield      #207                // Field depth:I
     128: iconst_1
     129: isub
     130: dup_x1
     131: putfield      #207                // Field depth:I
     134: ifne          148
     137: aload_0
     138: getfield      #25                 // Field autoReset:Z
     141: ifeq          148
     144: aload_0
     145: invokevirtual #208                // Method reset:()V
     148: return
     149: aload_1
     150: iconst_1
     151: invokevirtual #219                // Method com/esotericsoftware/kryo/io/Output.writeByte:(B)V
     154: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     157: ifne          174
     160: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     163: ifeq          180
     166: aload_0
     167: getfield      #207                // Field depth:I
     170: iconst_1
     171: if_icmpne     180
     174: ldc           #214                // String Write
     176: aload_2
     177: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     180: aload_3
     181: aload_0
     182: aload_1
     183: aload_2
     184: invokevirtual #216                // Method com/esotericsoftware/kryo/Serializer.write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     187: aload_0
     188: dup
     189: getfield      #207                // Field depth:I
     192: iconst_1
     193: isub
     194: dup_x1
     195: putfield      #207                // Field depth:I
     198: ifne          245
     201: aload_0
     202: getfield      #25                 // Field autoReset:Z
     205: ifeq          245
     208: aload_0
     209: invokevirtual #208                // Method reset:()V
     212: goto          245
     215: astore        4
     217: aload_0
     218: dup
     219: getfield      #207                // Field depth:I
     222: iconst_1
     223: isub
     224: dup_x1
     225: putfield      #207                // Field depth:I
     228: ifne          242
     231: aload_0
     232: getfield      #25                 // Field autoReset:Z
     235: ifeq          242
     238: aload_0
     239: invokevirtual #208                // Method reset:()V
     242: aload         4
     244: athrow
     245: return
    Exception table:
       from    to  target type
          32    55   215   any
          81   123   215   any
         149   187   215   any
         215   217   215   any

  public void writeClassAndObject(com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #205                // String output cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokespecial #210                // Method beginObject:()V
      18: aload_2
      19: ifnonnull     55
      22: aload_0
      23: aload_1
      24: aconst_null
      25: invokevirtual #220                // Method writeClass:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      28: pop
      29: aload_0
      30: dup
      31: getfield      #207                // Field depth:I
      34: iconst_1
      35: isub
      36: dup_x1
      37: putfield      #207                // Field depth:I
      40: ifne          54
      43: aload_0
      44: getfield      #25                 // Field autoReset:Z
      47: ifeq          54
      50: aload_0
      51: invokevirtual #208                // Method reset:()V
      54: return
      55: aload_0
      56: aload_1
      57: aload_2
      58: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #220                // Method writeClass:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      64: astore_3
      65: aload_0
      66: getfield      #40                 // Field references:Z
      69: ifeq          117
      72: aload_0
      73: aload_1
      74: aload_2
      75: iconst_0
      76: invokevirtual #211                // Method writeReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Z)Z
      79: ifeq          117
      82: aload_3
      83: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
      86: aload_0
      87: aconst_null
      88: invokevirtual #212                // Method com/esotericsoftware/kryo/Serializer.setGenerics:(Lcom/esotericsoftware/kryo/Kryo;[Ljava/lang/Class;)V
      91: aload_0
      92: dup
      93: getfield      #207                // Field depth:I
      96: iconst_1
      97: isub
      98: dup_x1
      99: putfield      #207                // Field depth:I
     102: ifne          116
     105: aload_0
     106: getfield      #25                 // Field autoReset:Z
     109: ifeq          116
     112: aload_0
     113: invokevirtual #208                // Method reset:()V
     116: return
     117: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     120: ifne          137
     123: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     126: ifeq          143
     129: aload_0
     130: getfield      #207                // Field depth:I
     133: iconst_1
     134: if_icmpne     143
     137: ldc           #214                // String Write
     139: aload_2
     140: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     143: aload_3
     144: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
     147: aload_0
     148: aload_1
     149: aload_2
     150: invokevirtual #216                // Method com/esotericsoftware/kryo/Serializer.write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     153: aload_0
     154: dup
     155: getfield      #207                // Field depth:I
     158: iconst_1
     159: isub
     160: dup_x1
     161: putfield      #207                // Field depth:I
     164: ifne          211
     167: aload_0
     168: getfield      #25                 // Field autoReset:Z
     171: ifeq          211
     174: aload_0
     175: invokevirtual #208                // Method reset:()V
     178: goto          211
     181: astore        4
     183: aload_0
     184: dup
     185: getfield      #207                // Field depth:I
     188: iconst_1
     189: isub
     190: dup_x1
     191: putfield      #207                // Field depth:I
     194: ifne          208
     197: aload_0
     198: getfield      #25                 // Field autoReset:Z
     201: ifeq          208
     204: aload_0
     205: invokevirtual #208                // Method reset:()V
     208: aload         4
     210: athrow
     211: return
    Exception table:
       from    to  target type
          18    29   181   any
          55    91   181   any
         117   153   181   any
         181   183   181   any

  boolean writeReferenceOrNull(com.esotericsoftware.kryo.io.Output, java.lang.Object, boolean);
    Code:
       0: aload_2
       1: ifnonnull     39
       4: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
       7: ifne          24
      10: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
      13: ifeq          30
      16: aload_0
      17: getfield      #207                // Field depth:I
      20: iconst_1
      21: if_icmpne     30
      24: ldc           #214                // String Write
      26: aconst_null
      27: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
      30: aload_1
      31: iconst_0
      32: iconst_1
      33: invokevirtual #221                // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
      36: pop
      37: iconst_1
      38: ireturn
      39: aload_0
      40: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      43: aload_2
      44: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      47: invokeinterface #222,  2          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.useReferences:(Ljava/lang/Class;)Z
      52: ifne          68
      55: iload_3
      56: ifeq          66
      59: aload_1
      60: iconst_1
      61: iconst_1
      62: invokevirtual #221                // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
      65: pop
      66: iconst_0
      67: ireturn
      68: aload_0
      69: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      72: aload_2
      73: invokeinterface #223,  2          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.getWrittenId:(Ljava/lang/Object;)I
      78: istore        4
      80: iload         4
      82: iconst_m1
      83: if_icmpeq     141
      86: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
      89: ifeq          129
      92: ldc           #224                // String kryo
      94: new           #80                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #225                // String Write object reference
     103: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: iload         4
     108: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     111: ldc           #226                // String :
     113: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_2
     117: invokestatic  #227                // Method com/esotericsoftware/kryo/util/Util.string:(Ljava/lang/Object;)Ljava/lang/String;
     120: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokestatic  #228                // Method com/esotericsoftware/minlog/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
     129: aload_1
     130: iload         4
     132: iconst_2
     133: iadd
     134: iconst_1
     135: invokevirtual #221                // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
     138: pop
     139: iconst_1
     140: ireturn
     141: aload_0
     142: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
     145: aload_2
     146: invokeinterface #229,  2          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.addWrittenObject:(Ljava/lang/Object;)I
     151: istore        4
     153: aload_1
     154: iconst_1
     155: iconst_1
     156: invokevirtual #221                // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
     159: pop
     160: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     163: ifeq          203
     166: ldc           #224                // String kryo
     168: new           #80                 // class java/lang/StringBuilder
     171: dup
     172: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #230                // String Write initial object reference
     177: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: iload         4
     182: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     185: ldc           #226                // String :
     187: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: aload_2
     191: invokestatic  #227                // Method com/esotericsoftware/kryo/util/Util.string:(Ljava/lang/Object;)Ljava/lang/String;
     194: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokestatic  #231                // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     203: iconst_0
     204: ireturn

  public com.esotericsoftware.kryo.Registration readClass(com.esotericsoftware.kryo.io.Input);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #232                // String input cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
      18: aload_1
      19: invokeinterface #233,  2          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.readClass:(Lcom/esotericsoftware/kryo/io/Input;)Lcom/esotericsoftware/kryo/Registration;
      24: astore_2
      25: aload_0
      26: getfield      #207                // Field depth:I
      29: ifne          43
      32: aload_0
      33: getfield      #25                 // Field autoReset:Z
      36: ifeq          43
      39: aload_0
      40: invokevirtual #208                // Method reset:()V
      43: aload_2
      44: areturn
      45: astore_3
      46: aload_0
      47: getfield      #207                // Field depth:I
      50: ifne          64
      53: aload_0
      54: getfield      #25                 // Field autoReset:Z
      57: ifeq          64
      60: aload_0
      61: invokevirtual #208                // Method reset:()V
      64: aload_3
      65: athrow
    Exception table:
       from    to  target type
          14    25    45   any

  public <T> T readObject(com.esotericsoftware.kryo.io.Input, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #232                // String input cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #142                // String type cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokespecial #210                // Method beginObject:()V
      32: aload_0
      33: getfield      #40                 // Field references:Z
      36: ifeq          123
      39: aload_0
      40: aload_1
      41: aload_2
      42: iconst_0
      43: invokevirtual #234                // Method readReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Z)I
      46: istore        4
      48: iload         4
      50: iconst_m1
      51: if_icmpne     88
      54: aload_0
      55: getfield      #235                // Field readObject:Ljava/lang/Object;
      58: astore        5
      60: aload_0
      61: dup
      62: getfield      #207                // Field depth:I
      65: iconst_1
      66: isub
      67: dup_x1
      68: putfield      #207                // Field depth:I
      71: ifne          85
      74: aload_0
      75: getfield      #25                 // Field autoReset:Z
      78: ifeq          85
      81: aload_0
      82: invokevirtual #208                // Method reset:()V
      85: aload         5
      87: areturn
      88: aload_0
      89: aload_2
      90: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      93: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
      96: aload_0
      97: aload_1
      98: aload_2
      99: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     102: astore_3
     103: iload         4
     105: aload_0
     106: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     109: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
     112: if_icmpne     120
     115: aload_0
     116: aload_3
     117: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     120: goto          138
     123: aload_0
     124: aload_2
     125: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
     128: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
     131: aload_0
     132: aload_1
     133: aload_2
     134: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     137: astore_3
     138: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     141: ifne          158
     144: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     147: ifeq          164
     150: aload_0
     151: getfield      #207                // Field depth:I
     154: iconst_1
     155: if_icmpne     164
     158: ldc           #239                // String Read
     160: aload_3
     161: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     164: aload_3
     165: astore        4
     167: aload_0
     168: dup
     169: getfield      #207                // Field depth:I
     172: iconst_1
     173: isub
     174: dup_x1
     175: putfield      #207                // Field depth:I
     178: ifne          192
     181: aload_0
     182: getfield      #25                 // Field autoReset:Z
     185: ifeq          192
     188: aload_0
     189: invokevirtual #208                // Method reset:()V
     192: aload         4
     194: areturn
     195: astore        6
     197: aload_0
     198: dup
     199: getfield      #207                // Field depth:I
     202: iconst_1
     203: isub
     204: dup_x1
     205: putfield      #207                // Field depth:I
     208: ifne          222
     211: aload_0
     212: getfield      #25                 // Field autoReset:Z
     215: ifeq          222
     218: aload_0
     219: invokevirtual #208                // Method reset:()V
     222: aload         6
     224: athrow
    Exception table:
       from    to  target type
          32    60   195   any
          88   167   195   any
         195   197   195   any

  public <T> T readObject(com.esotericsoftware.kryo.io.Input, java.lang.Class<T>, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #232                // String input cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #142                // String type cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_3
      29: ifnonnull     42
      32: new           #31                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #141                // String serializer cannot be null.
      38: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: invokespecial #210                // Method beginObject:()V
      46: aload_0
      47: getfield      #40                 // Field references:Z
      50: ifeq          132
      53: aload_0
      54: aload_1
      55: aload_2
      56: iconst_0
      57: invokevirtual #234                // Method readReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Z)I
      60: istore        5
      62: iload         5
      64: iconst_m1
      65: if_icmpne     102
      68: aload_0
      69: getfield      #235                // Field readObject:Ljava/lang/Object;
      72: astore        6
      74: aload_0
      75: dup
      76: getfield      #207                // Field depth:I
      79: iconst_1
      80: isub
      81: dup_x1
      82: putfield      #207                // Field depth:I
      85: ifne          99
      88: aload_0
      89: getfield      #25                 // Field autoReset:Z
      92: ifeq          99
      95: aload_0
      96: invokevirtual #208                // Method reset:()V
      99: aload         6
     101: areturn
     102: aload_3
     103: aload_0
     104: aload_1
     105: aload_2
     106: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     109: astore        4
     111: iload         5
     113: aload_0
     114: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     117: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
     120: if_icmpne     129
     123: aload_0
     124: aload         4
     126: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     129: goto          141
     132: aload_3
     133: aload_0
     134: aload_1
     135: aload_2
     136: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     139: astore        4
     141: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     144: ifne          161
     147: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     150: ifeq          168
     153: aload_0
     154: getfield      #207                // Field depth:I
     157: iconst_1
     158: if_icmpne     168
     161: ldc           #239                // String Read
     163: aload         4
     165: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     168: aload         4
     170: astore        5
     172: aload_0
     173: dup
     174: getfield      #207                // Field depth:I
     177: iconst_1
     178: isub
     179: dup_x1
     180: putfield      #207                // Field depth:I
     183: ifne          197
     186: aload_0
     187: getfield      #25                 // Field autoReset:Z
     190: ifeq          197
     193: aload_0
     194: invokevirtual #208                // Method reset:()V
     197: aload         5
     199: areturn
     200: astore        7
     202: aload_0
     203: dup
     204: getfield      #207                // Field depth:I
     207: iconst_1
     208: isub
     209: dup_x1
     210: putfield      #207                // Field depth:I
     213: ifne          227
     216: aload_0
     217: getfield      #25                 // Field autoReset:Z
     220: ifeq          227
     223: aload_0
     224: invokevirtual #208                // Method reset:()V
     227: aload         7
     229: athrow
    Exception table:
       from    to  target type
          46    74   200   any
         102   172   200   any
         200   202   200   any

  public <T> T readObjectOrNull(com.esotericsoftware.kryo.io.Input, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #232                // String input cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #142                // String type cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokespecial #210                // Method beginObject:()V
      32: aload_0
      33: getfield      #40                 // Field references:Z
      36: ifeq          123
      39: aload_0
      40: aload_1
      41: aload_2
      42: iconst_1
      43: invokevirtual #234                // Method readReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Z)I
      46: istore        4
      48: iload         4
      50: iconst_m1
      51: if_icmpne     88
      54: aload_0
      55: getfield      #235                // Field readObject:Ljava/lang/Object;
      58: astore        5
      60: aload_0
      61: dup
      62: getfield      #207                // Field depth:I
      65: iconst_1
      66: isub
      67: dup_x1
      68: putfield      #207                // Field depth:I
      71: ifne          85
      74: aload_0
      75: getfield      #25                 // Field autoReset:Z
      78: ifeq          85
      81: aload_0
      82: invokevirtual #208                // Method reset:()V
      85: aload         5
      87: areturn
      88: aload_0
      89: aload_2
      90: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      93: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
      96: aload_0
      97: aload_1
      98: aload_2
      99: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     102: astore_3
     103: iload         4
     105: aload_0
     106: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     109: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
     112: if_icmpne     120
     115: aload_0
     116: aload_3
     117: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     120: goto          214
     123: aload_0
     124: aload_2
     125: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
     128: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
     131: astore        4
     133: aload         4
     135: invokevirtual #217                // Method com/esotericsoftware/kryo/Serializer.getAcceptsNull:()Z
     138: ifne          205
     141: aload_1
     142: invokevirtual #240                // Method com/esotericsoftware/kryo/io/Input.readByte:()B
     145: ifne          205
     148: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     151: ifne          168
     154: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     157: ifeq          174
     160: aload_0
     161: getfield      #207                // Field depth:I
     164: iconst_1
     165: if_icmpne     174
     168: ldc           #239                // String Read
     170: aconst_null
     171: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     174: aconst_null
     175: astore        5
     177: aload_0
     178: dup
     179: getfield      #207                // Field depth:I
     182: iconst_1
     183: isub
     184: dup_x1
     185: putfield      #207                // Field depth:I
     188: ifne          202
     191: aload_0
     192: getfield      #25                 // Field autoReset:Z
     195: ifeq          202
     198: aload_0
     199: invokevirtual #208                // Method reset:()V
     202: aload         5
     204: areturn
     205: aload         4
     207: aload_0
     208: aload_1
     209: aload_2
     210: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     213: astore_3
     214: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     217: ifne          234
     220: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     223: ifeq          240
     226: aload_0
     227: getfield      #207                // Field depth:I
     230: iconst_1
     231: if_icmpne     240
     234: ldc           #239                // String Read
     236: aload_3
     237: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     240: aload_3
     241: astore        4
     243: aload_0
     244: dup
     245: getfield      #207                // Field depth:I
     248: iconst_1
     249: isub
     250: dup_x1
     251: putfield      #207                // Field depth:I
     254: ifne          268
     257: aload_0
     258: getfield      #25                 // Field autoReset:Z
     261: ifeq          268
     264: aload_0
     265: invokevirtual #208                // Method reset:()V
     268: aload         4
     270: areturn
     271: astore        6
     273: aload_0
     274: dup
     275: getfield      #207                // Field depth:I
     278: iconst_1
     279: isub
     280: dup_x1
     281: putfield      #207                // Field depth:I
     284: ifne          298
     287: aload_0
     288: getfield      #25                 // Field autoReset:Z
     291: ifeq          298
     294: aload_0
     295: invokevirtual #208                // Method reset:()V
     298: aload         6
     300: athrow
    Exception table:
       from    to  target type
          32    60   271   any
          88   177   271   any
         205   243   271   any
         271   273   271   any

  public <T> T readObjectOrNull(com.esotericsoftware.kryo.io.Input, java.lang.Class<T>, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #232                // String input cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #142                // String type cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_3
      29: ifnonnull     42
      32: new           #31                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #141                // String serializer cannot be null.
      38: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: invokespecial #210                // Method beginObject:()V
      46: aload_0
      47: getfield      #40                 // Field references:Z
      50: ifeq          132
      53: aload_0
      54: aload_1
      55: aload_2
      56: iconst_1
      57: invokevirtual #234                // Method readReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Z)I
      60: istore        5
      62: iload         5
      64: iconst_m1
      65: if_icmpne     102
      68: aload_0
      69: getfield      #235                // Field readObject:Ljava/lang/Object;
      72: astore        6
      74: aload_0
      75: dup
      76: getfield      #207                // Field depth:I
      79: iconst_1
      80: isub
      81: dup_x1
      82: putfield      #207                // Field depth:I
      85: ifne          99
      88: aload_0
      89: getfield      #25                 // Field autoReset:Z
      92: ifeq          99
      95: aload_0
      96: invokevirtual #208                // Method reset:()V
      99: aload         6
     101: areturn
     102: aload_3
     103: aload_0
     104: aload_1
     105: aload_2
     106: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     109: astore        4
     111: iload         5
     113: aload_0
     114: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     117: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
     120: if_icmpne     129
     123: aload_0
     124: aload         4
     126: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     129: goto          212
     132: aload_3
     133: invokevirtual #217                // Method com/esotericsoftware/kryo/Serializer.getAcceptsNull:()Z
     136: ifne          203
     139: aload_1
     140: invokevirtual #240                // Method com/esotericsoftware/kryo/io/Input.readByte:()B
     143: ifne          203
     146: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     149: ifne          166
     152: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     155: ifeq          172
     158: aload_0
     159: getfield      #207                // Field depth:I
     162: iconst_1
     163: if_icmpne     172
     166: ldc           #239                // String Read
     168: aconst_null
     169: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     172: aconst_null
     173: astore        5
     175: aload_0
     176: dup
     177: getfield      #207                // Field depth:I
     180: iconst_1
     181: isub
     182: dup_x1
     183: putfield      #207                // Field depth:I
     186: ifne          200
     189: aload_0
     190: getfield      #25                 // Field autoReset:Z
     193: ifeq          200
     196: aload_0
     197: invokevirtual #208                // Method reset:()V
     200: aload         5
     202: areturn
     203: aload_3
     204: aload_0
     205: aload_1
     206: aload_2
     207: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     210: astore        4
     212: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     215: ifne          232
     218: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     221: ifeq          239
     224: aload_0
     225: getfield      #207                // Field depth:I
     228: iconst_1
     229: if_icmpne     239
     232: ldc           #239                // String Read
     234: aload         4
     236: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     239: aload         4
     241: astore        5
     243: aload_0
     244: dup
     245: getfield      #207                // Field depth:I
     248: iconst_1
     249: isub
     250: dup_x1
     251: putfield      #207                // Field depth:I
     254: ifne          268
     257: aload_0
     258: getfield      #25                 // Field autoReset:Z
     261: ifeq          268
     264: aload_0
     265: invokevirtual #208                // Method reset:()V
     268: aload         5
     270: areturn
     271: astore        7
     273: aload_0
     274: dup
     275: getfield      #207                // Field depth:I
     278: iconst_1
     279: isub
     280: dup_x1
     281: putfield      #207                // Field depth:I
     284: ifne          298
     287: aload_0
     288: getfield      #25                 // Field autoReset:Z
     291: ifeq          298
     294: aload_0
     295: invokevirtual #208                // Method reset:()V
     298: aload         7
     300: athrow
    Exception table:
       from    to  target type
          46    74   271   any
         102   175   271   any
         203   243   271   any
         271   273   271   any

  public java.lang.Object readClassAndObject(com.esotericsoftware.kryo.io.Input);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #232                // String input cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokespecial #210                // Method beginObject:()V
      18: aload_0
      19: aload_1
      20: invokevirtual #241                // Method readClass:(Lcom/esotericsoftware/kryo/io/Input;)Lcom/esotericsoftware/kryo/Registration;
      23: astore_2
      24: aload_2
      25: ifnonnull     57
      28: aconst_null
      29: astore_3
      30: aload_0
      31: dup
      32: getfield      #207                // Field depth:I
      35: iconst_1
      36: isub
      37: dup_x1
      38: putfield      #207                // Field depth:I
      41: ifne          55
      44: aload_0
      45: getfield      #25                 // Field autoReset:Z
      48: ifeq          55
      51: aload_0
      52: invokevirtual #208                // Method reset:()V
      55: aload_3
      56: areturn
      57: aload_2
      58: invokevirtual #180                // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
      61: astore_3
      62: aload_0
      63: getfield      #40                 // Field references:Z
      66: ifeq          160
      69: aload_2
      70: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
      73: aload_0
      74: aconst_null
      75: invokevirtual #212                // Method com/esotericsoftware/kryo/Serializer.setGenerics:(Lcom/esotericsoftware/kryo/Kryo;[Ljava/lang/Class;)V
      78: aload_0
      79: aload_1
      80: aload_3
      81: iconst_0
      82: invokevirtual #234                // Method readReferenceOrNull:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Z)I
      85: istore        5
      87: iload         5
      89: iconst_m1
      90: if_icmpne     127
      93: aload_0
      94: getfield      #235                // Field readObject:Ljava/lang/Object;
      97: astore        6
      99: aload_0
     100: dup
     101: getfield      #207                // Field depth:I
     104: iconst_1
     105: isub
     106: dup_x1
     107: putfield      #207                // Field depth:I
     110: ifne          124
     113: aload_0
     114: getfield      #25                 // Field autoReset:Z
     117: ifeq          124
     120: aload_0
     121: invokevirtual #208                // Method reset:()V
     124: aload         6
     126: areturn
     127: aload_2
     128: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
     131: aload_0
     132: aload_1
     133: aload_3
     134: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     137: astore        4
     139: iload         5
     141: aload_0
     142: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     145: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
     148: if_icmpne     157
     151: aload_0
     152: aload         4
     154: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     157: goto          172
     160: aload_2
     161: invokevirtual #204                // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
     164: aload_0
     165: aload_1
     166: aload_3
     167: invokevirtual #236                // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
     170: astore        4
     172: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     175: ifne          192
     178: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     181: ifeq          199
     184: aload_0
     185: getfield      #207                // Field depth:I
     188: iconst_1
     189: if_icmpne     199
     192: ldc           #239                // String Read
     194: aload         4
     196: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     199: aload         4
     201: astore        5
     203: aload_0
     204: dup
     205: getfield      #207                // Field depth:I
     208: iconst_1
     209: isub
     210: dup_x1
     211: putfield      #207                // Field depth:I
     214: ifne          228
     217: aload_0
     218: getfield      #25                 // Field autoReset:Z
     221: ifeq          228
     224: aload_0
     225: invokevirtual #208                // Method reset:()V
     228: aload         5
     230: areturn
     231: astore        7
     233: aload_0
     234: dup
     235: getfield      #207                // Field depth:I
     238: iconst_1
     239: isub
     240: dup_x1
     241: putfield      #207                // Field depth:I
     244: ifne          258
     247: aload_0
     248: getfield      #25                 // Field autoReset:Z
     251: ifeq          258
     254: aload_0
     255: invokevirtual #208                // Method reset:()V
     258: aload         7
     260: athrow
    Exception table:
       from    to  target type
          18    30   231   any
          57    99   231   any
         127   203   231   any
         231   233   231   any

  int readReferenceOrNull(com.esotericsoftware.kryo.io.Input, java.lang.Class, boolean);
    Code:
       0: aload_2
       1: invokevirtual #242                // Method java/lang/Class.isPrimitive:()Z
       4: ifeq          12
       7: aload_2
       8: invokestatic  #243                // Method com/esotericsoftware/kryo/util/Util.getWrapperClass:(Ljava/lang/Class;)Ljava/lang/Class;
      11: astore_2
      12: aload_0
      13: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      16: aload_2
      17: invokeinterface #222,  2          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.useReferences:(Ljava/lang/Class;)Z
      22: istore        4
      24: iload_3
      25: ifeq          95
      28: aload_1
      29: iconst_1
      30: invokevirtual #244                // Method com/esotericsoftware/kryo/io/Input.readVarInt:(Z)I
      33: istore        5
      35: iload         5
      37: ifne          73
      40: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      43: ifne          60
      46: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
      49: ifeq          66
      52: aload_0
      53: getfield      #207                // Field depth:I
      56: iconst_1
      57: if_icmpne     66
      60: ldc           #239                // String Read
      62: aconst_null
      63: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
      66: aload_0
      67: aconst_null
      68: putfield      #235                // Field readObject:Ljava/lang/Object;
      71: iconst_m1
      72: ireturn
      73: iload         4
      75: ifne          124
      78: aload_0
      79: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
      82: bipush        -2
      84: invokevirtual #245                // Method com/esotericsoftware/kryo/util/IntArray.add:(I)V
      87: aload_0
      88: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
      91: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
      94: ireturn
      95: iload         4
      97: ifne          117
     100: aload_0
     101: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     104: bipush        -2
     106: invokevirtual #245                // Method com/esotericsoftware/kryo/util/IntArray.add:(I)V
     109: aload_0
     110: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     113: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
     116: ireturn
     117: aload_1
     118: iconst_1
     119: invokevirtual #244                // Method com/esotericsoftware/kryo/io/Input.readVarInt:(Z)I
     122: istore        5
     124: iload         5
     126: iconst_1
     127: if_icmpne     202
     130: aload_0
     131: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
     134: aload_2
     135: invokeinterface #246,  2          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.nextReadId:(Ljava/lang/Class;)I
     140: istore        5
     142: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     145: ifeq          185
     148: ldc           #224                // String kryo
     150: new           #80                 // class java/lang/StringBuilder
     153: dup
     154: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
     157: ldc           #247                // String Read initial object reference
     159: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: iload         5
     164: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     167: ldc           #226                // String :
     169: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_2
     173: invokestatic  #200                // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     176: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokestatic  #231                // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     185: aload_0
     186: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     189: iload         5
     191: invokevirtual #245                // Method com/esotericsoftware/kryo/util/IntArray.add:(I)V
     194: aload_0
     195: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
     198: getfield      #237                // Field com/esotericsoftware/kryo/util/IntArray.size:I
     201: ireturn
     202: iinc          5, -2
     205: aload_0
     206: aload_0
     207: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
     210: aload_2
     211: iload         5
     213: invokeinterface #248,  3          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.getReadObject:(Ljava/lang/Class;I)Ljava/lang/Object;
     218: putfield      #235                // Field readObject:Ljava/lang/Object;
     221: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     224: ifeq          267
     227: ldc           #224                // String kryo
     229: new           #80                 // class java/lang/StringBuilder
     232: dup
     233: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
     236: ldc           #249                // String Read object reference
     238: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: iload         5
     243: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     246: ldc           #226                // String :
     248: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: aload_0
     252: getfield      #235                // Field readObject:Ljava/lang/Object;
     255: invokestatic  #227                // Method com/esotericsoftware/kryo/util/Util.string:(Ljava/lang/Object;)Ljava/lang/String;
     258: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     261: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     264: invokestatic  #228                // Method com/esotericsoftware/minlog/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
     267: iconst_m1
     268: ireturn

  public void reference(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #250                // Field copyDepth:I
       4: ifle          49
       7: aload_0
       8: getfield      #251                // Field needsCopyReference:Ljava/lang/Object;
      11: ifnull        85
      14: aload_1
      15: ifnonnull     28
      18: new           #31                 // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #209                // String object cannot be null.
      24: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      32: aload_0
      33: getfield      #251                // Field needsCopyReference:Ljava/lang/Object;
      36: aload_1
      37: invokevirtual #253                // Method com/esotericsoftware/kryo/util/IdentityMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: aconst_null
      43: putfield      #251                // Field needsCopyReference:Ljava/lang/Object;
      46: goto          85
      49: aload_0
      50: getfield      #40                 // Field references:Z
      53: ifeq          85
      56: aload_1
      57: ifnull        85
      60: aload_0
      61: getfield      #28                 // Field readReferenceIds:Lcom/esotericsoftware/kryo/util/IntArray;
      64: invokevirtual #254                // Method com/esotericsoftware/kryo/util/IntArray.pop:()I
      67: istore_2
      68: iload_2
      69: bipush        -2
      71: if_icmpeq     85
      74: aload_0
      75: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      78: iload_2
      79: aload_1
      80: invokeinterface #255,  3          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.setReadObject:(ILjava/lang/Object;)V
      85: return

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #207                // Field depth:I
       5: aload_0
       6: getfield      #256                // Field graphContext:Lcom/esotericsoftware/kryo/util/ObjectMap;
       9: ifnull        19
      12: aload_0
      13: getfield      #256                // Field graphContext:Lcom/esotericsoftware/kryo/util/ObjectMap;
      16: invokevirtual #257                // Method com/esotericsoftware/kryo/util/ObjectMap.clear:()V
      19: aload_0
      20: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
      23: invokeinterface #258,  1          // InterfaceMethod com/esotericsoftware/kryo/ClassResolver.reset:()V
      28: aload_0
      29: getfield      #40                 // Field references:Z
      32: ifeq          49
      35: aload_0
      36: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      39: invokeinterface #259,  1          // InterfaceMethod com/esotericsoftware/kryo/ReferenceResolver.reset:()V
      44: aload_0
      45: aconst_null
      46: putfield      #235                // Field readObject:Ljava/lang/Object;
      49: aload_0
      50: iconst_0
      51: putfield      #250                // Field copyDepth:I
      54: aload_0
      55: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      58: ifnull        71
      61: aload_0
      62: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      65: sipush        2048
      68: invokevirtual #260                // Method com/esotericsoftware/kryo/util/IdentityMap.clear:(I)V
      71: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      74: ifeq          85
      77: ldc           #224                // String kryo
      79: ldc_w         #261                // String Object graph complete.
      82: invokestatic  #231                // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      85: return

  public <T> T copy(T);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #262                // Field copyShallow:Z
      10: ifeq          15
      13: aload_1
      14: areturn
      15: aload_0
      16: dup
      17: getfield      #250                // Field copyDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #250                // Field copyDepth:I
      25: aload_0
      26: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      29: ifnonnull     43
      32: aload_0
      33: new           #263                // class com/esotericsoftware/kryo/util/IdentityMap
      36: dup
      37: invokespecial #264                // Method com/esotericsoftware/kryo/util/IdentityMap."<init>":()V
      40: putfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      43: aload_0
      44: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      47: aload_1
      48: invokevirtual #265                // Method com/esotericsoftware/kryo/util/IdentityMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: astore_2
      52: aload_2
      53: ifnull        78
      56: aload_2
      57: astore_3
      58: aload_0
      59: dup
      60: getfield      #250                // Field copyDepth:I
      63: iconst_1
      64: isub
      65: dup_x1
      66: putfield      #250                // Field copyDepth:I
      69: ifne          76
      72: aload_0
      73: invokevirtual #208                // Method reset:()V
      76: aload_3
      77: areturn
      78: aload_0
      79: getfield      #29                 // Field copyReferences:Z
      82: ifeq          90
      85: aload_0
      86: aload_1
      87: putfield      #251                // Field needsCopyReference:Ljava/lang/Object;
      90: aload_1
      91: instanceof    #266                // class com/esotericsoftware/kryo/KryoCopyable
      94: ifeq          111
      97: aload_1
      98: checkcast     #266                // class com/esotericsoftware/kryo/KryoCopyable
     101: aload_0
     102: invokeinterface #267,  2          // InterfaceMethod com/esotericsoftware/kryo/KryoCopyable.copy:(Lcom/esotericsoftware/kryo/Kryo;)Ljava/lang/Object;
     107: astore_3
     108: goto          125
     111: aload_0
     112: aload_1
     113: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     116: invokevirtual #268                // Method getSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
     119: aload_0
     120: aload_1
     121: invokevirtual #269                // Method com/esotericsoftware/kryo/Serializer.copy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Object;)Ljava/lang/Object;
     124: astore_3
     125: aload_0
     126: getfield      #251                // Field needsCopyReference:Ljava/lang/Object;
     129: ifnull        137
     132: aload_0
     133: aload_3
     134: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     137: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     140: ifne          157
     143: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     146: ifeq          164
     149: aload_0
     150: getfield      #250                // Field copyDepth:I
     153: iconst_1
     154: if_icmpne     164
     157: ldc_w         #270                // String Copy
     160: aload_3
     161: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     164: aload_3
     165: astore        4
     167: aload_0
     168: dup
     169: getfield      #250                // Field copyDepth:I
     172: iconst_1
     173: isub
     174: dup_x1
     175: putfield      #250                // Field copyDepth:I
     178: ifne          185
     181: aload_0
     182: invokevirtual #208                // Method reset:()V
     185: aload         4
     187: areturn
     188: astore        5
     190: aload_0
     191: dup
     192: getfield      #250                // Field copyDepth:I
     195: iconst_1
     196: isub
     197: dup_x1
     198: putfield      #250                // Field copyDepth:I
     201: ifne          208
     204: aload_0
     205: invokevirtual #208                // Method reset:()V
     208: aload         5
     210: athrow
    Exception table:
       from    to  target type
          25    58   188   any
          78   167   188   any
         188   190   188   any

  public <T> T copy(T, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #262                // Field copyShallow:Z
      10: ifeq          15
      13: aload_1
      14: areturn
      15: aload_0
      16: dup
      17: getfield      #250                // Field copyDepth:I
      20: iconst_1
      21: iadd
      22: putfield      #250                // Field copyDepth:I
      25: aload_0
      26: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      29: ifnonnull     43
      32: aload_0
      33: new           #263                // class com/esotericsoftware/kryo/util/IdentityMap
      36: dup
      37: invokespecial #264                // Method com/esotericsoftware/kryo/util/IdentityMap."<init>":()V
      40: putfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      43: aload_0
      44: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      47: aload_1
      48: invokevirtual #265                // Method com/esotericsoftware/kryo/util/IdentityMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: astore_3
      52: aload_3
      53: ifnull        80
      56: aload_3
      57: astore        4
      59: aload_0
      60: dup
      61: getfield      #250                // Field copyDepth:I
      64: iconst_1
      65: isub
      66: dup_x1
      67: putfield      #250                // Field copyDepth:I
      70: ifne          77
      73: aload_0
      74: invokevirtual #208                // Method reset:()V
      77: aload         4
      79: areturn
      80: aload_0
      81: getfield      #29                 // Field copyReferences:Z
      84: ifeq          92
      87: aload_0
      88: aload_1
      89: putfield      #251                // Field needsCopyReference:Ljava/lang/Object;
      92: aload_1
      93: instanceof    #266                // class com/esotericsoftware/kryo/KryoCopyable
      96: ifeq          114
      99: aload_1
     100: checkcast     #266                // class com/esotericsoftware/kryo/KryoCopyable
     103: aload_0
     104: invokeinterface #267,  2          // InterfaceMethod com/esotericsoftware/kryo/KryoCopyable.copy:(Lcom/esotericsoftware/kryo/Kryo;)Ljava/lang/Object;
     109: astore        4
     111: goto          122
     114: aload_2
     115: aload_0
     116: aload_1
     117: invokevirtual #269                // Method com/esotericsoftware/kryo/Serializer.copy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Object;)Ljava/lang/Object;
     120: astore        4
     122: aload_0
     123: getfield      #251                // Field needsCopyReference:Ljava/lang/Object;
     126: ifnull        135
     129: aload_0
     130: aload         4
     132: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     135: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     138: ifne          155
     141: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     144: ifeq          163
     147: aload_0
     148: getfield      #250                // Field copyDepth:I
     151: iconst_1
     152: if_icmpne     163
     155: ldc_w         #270                // String Copy
     158: aload         4
     160: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     163: aload         4
     165: astore        5
     167: aload_0
     168: dup
     169: getfield      #250                // Field copyDepth:I
     172: iconst_1
     173: isub
     174: dup_x1
     175: putfield      #250                // Field copyDepth:I
     178: ifne          185
     181: aload_0
     182: invokevirtual #208                // Method reset:()V
     185: aload         5
     187: areturn
     188: astore        6
     190: aload_0
     191: dup
     192: getfield      #250                // Field copyDepth:I
     195: iconst_1
     196: isub
     197: dup_x1
     198: putfield      #250                // Field copyDepth:I
     201: ifne          208
     204: aload_0
     205: invokevirtual #208                // Method reset:()V
     208: aload         6
     210: athrow
    Exception table:
       from    to  target type
          25    59   188   any
          80   167   188   any
         188   190   188   any

  public <T> T copyShallow(T);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: dup
       8: getfield      #250                // Field copyDepth:I
      11: iconst_1
      12: iadd
      13: putfield      #250                // Field copyDepth:I
      16: aload_0
      17: iconst_1
      18: putfield      #262                // Field copyShallow:Z
      21: aload_0
      22: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      25: ifnonnull     39
      28: aload_0
      29: new           #263                // class com/esotericsoftware/kryo/util/IdentityMap
      32: dup
      33: invokespecial #264                // Method com/esotericsoftware/kryo/util/IdentityMap."<init>":()V
      36: putfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      39: aload_0
      40: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      43: aload_1
      44: invokevirtual #265                // Method com/esotericsoftware/kryo/util/IdentityMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: astore_2
      48: aload_2
      49: ifnull        79
      52: aload_2
      53: astore_3
      54: aload_0
      55: iconst_0
      56: putfield      #262                // Field copyShallow:Z
      59: aload_0
      60: dup
      61: getfield      #250                // Field copyDepth:I
      64: iconst_1
      65: isub
      66: dup_x1
      67: putfield      #250                // Field copyDepth:I
      70: ifne          77
      73: aload_0
      74: invokevirtual #208                // Method reset:()V
      77: aload_3
      78: areturn
      79: aload_0
      80: getfield      #29                 // Field copyReferences:Z
      83: ifeq          91
      86: aload_0
      87: aload_1
      88: putfield      #251                // Field needsCopyReference:Ljava/lang/Object;
      91: aload_1
      92: instanceof    #266                // class com/esotericsoftware/kryo/KryoCopyable
      95: ifeq          112
      98: aload_1
      99: checkcast     #266                // class com/esotericsoftware/kryo/KryoCopyable
     102: aload_0
     103: invokeinterface #267,  2          // InterfaceMethod com/esotericsoftware/kryo/KryoCopyable.copy:(Lcom/esotericsoftware/kryo/Kryo;)Ljava/lang/Object;
     108: astore_3
     109: goto          126
     112: aload_0
     113: aload_1
     114: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     117: invokevirtual #268                // Method getSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
     120: aload_0
     121: aload_1
     122: invokevirtual #269                // Method com/esotericsoftware/kryo/Serializer.copy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Object;)Ljava/lang/Object;
     125: astore_3
     126: aload_0
     127: getfield      #251                // Field needsCopyReference:Ljava/lang/Object;
     130: ifnull        138
     133: aload_0
     134: aload_3
     135: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     138: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     141: ifne          158
     144: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     147: ifeq          165
     150: aload_0
     151: getfield      #250                // Field copyDepth:I
     154: iconst_1
     155: if_icmpne     165
     158: ldc_w         #271                // String Shallow copy
     161: aload_3
     162: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     165: aload_3
     166: astore        4
     168: aload_0
     169: iconst_0
     170: putfield      #262                // Field copyShallow:Z
     173: aload_0
     174: dup
     175: getfield      #250                // Field copyDepth:I
     178: iconst_1
     179: isub
     180: dup_x1
     181: putfield      #250                // Field copyDepth:I
     184: ifne          191
     187: aload_0
     188: invokevirtual #208                // Method reset:()V
     191: aload         4
     193: areturn
     194: astore        5
     196: aload_0
     197: iconst_0
     198: putfield      #262                // Field copyShallow:Z
     201: aload_0
     202: dup
     203: getfield      #250                // Field copyDepth:I
     206: iconst_1
     207: isub
     208: dup_x1
     209: putfield      #250                // Field copyDepth:I
     212: ifne          219
     215: aload_0
     216: invokevirtual #208                // Method reset:()V
     219: aload         5
     221: athrow
    Exception table:
       from    to  target type
          21    54   194   any
          79   168   194   any
         194   196   194   any

  public <T> T copyShallow(T, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: dup
       8: getfield      #250                // Field copyDepth:I
      11: iconst_1
      12: iadd
      13: putfield      #250                // Field copyDepth:I
      16: aload_0
      17: iconst_1
      18: putfield      #262                // Field copyShallow:Z
      21: aload_0
      22: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      25: ifnonnull     39
      28: aload_0
      29: new           #263                // class com/esotericsoftware/kryo/util/IdentityMap
      32: dup
      33: invokespecial #264                // Method com/esotericsoftware/kryo/util/IdentityMap."<init>":()V
      36: putfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      39: aload_0
      40: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
      43: aload_1
      44: invokevirtual #265                // Method com/esotericsoftware/kryo/util/IdentityMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: astore_3
      48: aload_3
      49: ifnull        81
      52: aload_3
      53: astore        4
      55: aload_0
      56: iconst_0
      57: putfield      #262                // Field copyShallow:Z
      60: aload_0
      61: dup
      62: getfield      #250                // Field copyDepth:I
      65: iconst_1
      66: isub
      67: dup_x1
      68: putfield      #250                // Field copyDepth:I
      71: ifne          78
      74: aload_0
      75: invokevirtual #208                // Method reset:()V
      78: aload         4
      80: areturn
      81: aload_0
      82: getfield      #29                 // Field copyReferences:Z
      85: ifeq          93
      88: aload_0
      89: aload_1
      90: putfield      #251                // Field needsCopyReference:Ljava/lang/Object;
      93: aload_1
      94: instanceof    #266                // class com/esotericsoftware/kryo/KryoCopyable
      97: ifeq          115
     100: aload_1
     101: checkcast     #266                // class com/esotericsoftware/kryo/KryoCopyable
     104: aload_0
     105: invokeinterface #267,  2          // InterfaceMethod com/esotericsoftware/kryo/KryoCopyable.copy:(Lcom/esotericsoftware/kryo/Kryo;)Ljava/lang/Object;
     110: astore        4
     112: goto          123
     115: aload_2
     116: aload_0
     117: aload_1
     118: invokevirtual #269                // Method com/esotericsoftware/kryo/Serializer.copy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Object;)Ljava/lang/Object;
     121: astore        4
     123: aload_0
     124: getfield      #251                // Field needsCopyReference:Ljava/lang/Object;
     127: ifnull        136
     130: aload_0
     131: aload         4
     133: invokevirtual #238                // Method reference:(Ljava/lang/Object;)V
     136: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
     139: ifne          156
     142: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     145: ifeq          164
     148: aload_0
     149: getfield      #250                // Field copyDepth:I
     152: iconst_1
     153: if_icmpne     164
     156: ldc_w         #271                // String Shallow copy
     159: aload         4
     161: invokestatic  #215                // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
     164: aload         4
     166: astore        5
     168: aload_0
     169: iconst_0
     170: putfield      #262                // Field copyShallow:Z
     173: aload_0
     174: dup
     175: getfield      #250                // Field copyDepth:I
     178: iconst_1
     179: isub
     180: dup_x1
     181: putfield      #250                // Field copyDepth:I
     184: ifne          191
     187: aload_0
     188: invokevirtual #208                // Method reset:()V
     191: aload         5
     193: areturn
     194: astore        6
     196: aload_0
     197: iconst_0
     198: putfield      #262                // Field copyShallow:Z
     201: aload_0
     202: dup
     203: getfield      #250                // Field copyDepth:I
     206: iconst_1
     207: isub
     208: dup_x1
     209: putfield      #250                // Field copyDepth:I
     212: ifne          219
     215: aload_0
     216: invokevirtual #208                // Method reset:()V
     219: aload         6
     221: athrow
    Exception table:
       from    to  target type
          21    55   194   any
          81   168   194   any
         194   196   194   any

  private void beginObject();
    Code:
       0: getstatic     #179                // Field com/esotericsoftware/minlog/Log.DEBUG:Z
       3: ifeq          44
       6: aload_0
       7: getfield      #207                // Field depth:I
      10: ifne          23
      13: aload_0
      14: invokestatic  #272                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      17: putfield      #273                // Field thread:Ljava/lang/Thread;
      20: goto          44
      23: aload_0
      24: getfield      #273                // Field thread:Ljava/lang/Thread;
      27: invokestatic  #272                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      30: if_acmpeq     44
      33: new           #274                // class java/util/ConcurrentModificationException
      36: dup
      37: ldc_w         #275                // String Kryo must not be accessed concurrently by multiple threads.
      40: invokespecial #276                // Method java/util/ConcurrentModificationException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #207                // Field depth:I
      48: aload_0
      49: getfield      #24                 // Field maxDepth:I
      52: if_icmpne     86
      55: new           #188                // class com/esotericsoftware/kryo/KryoException
      58: dup
      59: new           #80                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      66: ldc_w         #277                // String Max depth exceeded:
      69: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #207                // Field depth:I
      76: invokevirtual #173                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #190                // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: aload_0
      87: dup
      88: getfield      #207                // Field depth:I
      91: iconst_1
      92: iadd
      93: putfield      #207                // Field depth:I
      96: return

  public com.esotericsoftware.kryo.ClassResolver getClassResolver();
    Code:
       0: aload_0
       1: getfield      #34                 // Field classResolver:Lcom/esotericsoftware/kryo/ClassResolver;
       4: areturn

  public com.esotericsoftware.kryo.ReferenceResolver getReferenceResolver();
    Code:
       0: aload_0
       1: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
       4: areturn

  public void setClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc_w         #278                // String classLoader cannot be null.
      11: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #18                 // Field classLoader:Ljava/lang/ClassLoader;
      20: return

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #18                 // Field classLoader:Ljava/lang/ClassLoader;
       4: areturn

  public void setRegistrationRequired(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #198                // Field registrationRequired:Z
       5: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
       8: ifeq          36
      11: ldc           #224                // String kryo
      13: new           #80                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      20: ldc_w         #279                // String Registration required:
      23: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #280                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      30: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokestatic  #231                // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      36: return

  public boolean isRegistrationRequired();
    Code:
       0: aload_0
       1: getfield      #198                // Field registrationRequired:Z
       4: ireturn

  public boolean setReferences(boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #40                 // Field references:Z
       5: if_icmpne     10
       8: iload_1
       9: ireturn
      10: aload_0
      11: iload_1
      12: putfield      #40                 // Field references:Z
      15: iload_1
      16: ifeq          37
      19: aload_0
      20: getfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      23: ifnonnull     37
      26: aload_0
      27: new           #3                  // class com/esotericsoftware/kryo/util/MapReferenceResolver
      30: dup
      31: invokespecial #4                  // Method com/esotericsoftware/kryo/util/MapReferenceResolver."<init>":()V
      34: putfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      37: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      40: ifeq          68
      43: ldc           #224                // String kryo
      45: new           #80                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      52: ldc_w         #281                // String References:
      55: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: iload_1
      59: invokevirtual #280                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      62: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokestatic  #231                // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      68: iload_1
      69: ifne          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn

  public void setCopyReferences(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field copyReferences:Z
       5: return

  public void setReferenceResolver(com.esotericsoftware.kryo.ReferenceResolver);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc_w         #282                // String referenceResolver cannot be null.
      11: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: iconst_1
      17: putfield      #40                 // Field references:Z
      20: aload_0
      21: aload_1
      22: putfield      #38                 // Field referenceResolver:Lcom/esotericsoftware/kryo/ReferenceResolver;
      25: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
      28: ifeq          62
      31: ldc           #224                // String kryo
      33: new           #80                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      40: ldc_w         #283                // String Reference resolver:
      43: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokevirtual #284                // Method java/lang/Class.getName:()Ljava/lang/String;
      53: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokestatic  #231                // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      62: return

  public boolean getReferences();
    Code:
       0: aload_0
       1: getfield      #40                 // Field references:Z
       4: ireturn

  public void setInstantiatorStrategy(org.objenesis.strategy.InstantiatorStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field strategy:Lorg/objenesis/strategy/InstantiatorStrategy;
       5: return

  public org.objenesis.strategy.InstantiatorStrategy getInstantiatorStrategy();
    Code:
       0: aload_0
       1: getfield      #21                 // Field strategy:Lorg/objenesis/strategy/InstantiatorStrategy;
       4: areturn

  protected org.objenesis.instantiator.ObjectInstantiator newInstantiator(java.lang.Class);
    Code:
       0: aload_0
       1: getfield      #21                 // Field strategy:Lorg/objenesis/strategy/InstantiatorStrategy;
       4: aload_1
       5: invokeinterface #285,  2          // InterfaceMethod org/objenesis/strategy/InstantiatorStrategy.newInstantiatorOf:(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;
      10: areturn

  public <T> T newInstance(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #193                // Method getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
       5: astore_2
       6: aload_2
       7: invokevirtual #286                // Method com/esotericsoftware/kryo/Registration.getInstantiator:()Lorg/objenesis/instantiator/ObjectInstantiator;
      10: astore_3
      11: aload_3
      12: ifnonnull     26
      15: aload_0
      16: aload_1
      17: invokevirtual #287                // Method newInstantiator:(Ljava/lang/Class;)Lorg/objenesis/instantiator/ObjectInstantiator;
      20: astore_3
      21: aload_2
      22: aload_3
      23: invokevirtual #288                // Method com/esotericsoftware/kryo/Registration.setInstantiator:(Lorg/objenesis/instantiator/ObjectInstantiator;)V
      26: aload_3
      27: invokeinterface #289,  1          // InterfaceMethod org/objenesis/instantiator/ObjectInstantiator.newInstance:()Ljava/lang/Object;
      32: areturn

  public com.esotericsoftware.kryo.util.ObjectMap getContext();
    Code:
       0: aload_0
       1: getfield      #290                // Field context:Lcom/esotericsoftware/kryo/util/ObjectMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #291                // class com/esotericsoftware/kryo/util/ObjectMap
      11: dup
      12: invokespecial #292                // Method com/esotericsoftware/kryo/util/ObjectMap."<init>":()V
      15: putfield      #290                // Field context:Lcom/esotericsoftware/kryo/util/ObjectMap;
      18: aload_0
      19: getfield      #290                // Field context:Lcom/esotericsoftware/kryo/util/ObjectMap;
      22: areturn

  public com.esotericsoftware.kryo.util.ObjectMap getGraphContext();
    Code:
       0: aload_0
       1: getfield      #256                // Field graphContext:Lcom/esotericsoftware/kryo/util/ObjectMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #291                // class com/esotericsoftware/kryo/util/ObjectMap
      11: dup
      12: invokespecial #292                // Method com/esotericsoftware/kryo/util/ObjectMap."<init>":()V
      15: putfield      #256                // Field graphContext:Lcom/esotericsoftware/kryo/util/ObjectMap;
      18: aload_0
      19: getfield      #256                // Field graphContext:Lcom/esotericsoftware/kryo/util/ObjectMap;
      22: areturn

  public int getDepth();
    Code:
       0: aload_0
       1: getfield      #207                // Field depth:I
       4: ireturn

  public com.esotericsoftware.kryo.util.IdentityMap getOriginalToCopyMap();
    Code:
       0: aload_0
       1: getfield      #252                // Field originalToCopy:Lcom/esotericsoftware/kryo/util/IdentityMap;
       4: areturn

  public void setAutoReset(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field autoReset:Z
       5: return

  public void setMaxDepth(int);
    Code:
       0: iload_1
       1: ifgt          15
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc_w         #293                // String maxDepth must be > 0.
      11: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: iload_1
      17: putfield      #24                 // Field maxDepth:I
      20: return

  public boolean isFinal(java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #142                // String type cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #294                // Method java/lang/Class.isArray:()Z
      18: ifeq          32
      21: aload_1
      22: invokestatic  #295                // Method com/esotericsoftware/kryo/util/Util.getElementClass:(Ljava/lang/Class;)Ljava/lang/Class;
      25: invokevirtual #296                // Method java/lang/Class.getModifiers:()I
      28: invokestatic  #297                // Method java/lang/reflect/Modifier.isFinal:(I)Z
      31: ireturn
      32: aload_1
      33: invokevirtual #296                // Method java/lang/Class.getModifiers:()I
      36: invokestatic  #297                // Method java/lang/reflect/Modifier.isFinal:(I)Z
      39: ireturn

  public boolean isClousre(java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #31                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #142                // String type cannot be null.
      10: invokespecial #33                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #284                // Method java/lang/Class.getName:()Ljava/lang/String;
      18: bipush        47
      20: invokevirtual #298                // Method java/lang/String.indexOf:(I)I
      23: iflt          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public void pushGenericsScope(java.lang.Class, com.esotericsoftware.kryo.Generics);
    Code:
       0: getstatic     #213                // Field com/esotericsoftware/minlog/Log.TRACE:Z
       3: ifeq          43
       6: ldc           #224                // String kryo
       8: new           #80                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #170                // Method java/lang/StringBuilder."<init>":()V
      15: ldc_w         #299                // String Settting a new generics scope for class
      18: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #284                // Method java/lang/Class.getName:()Ljava/lang/String;
      25: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #226                // String :
      30: invokevirtual #172                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: invokevirtual #174                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokestatic  #231                // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      43: aload_0
      44: getfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      47: astore_3
      48: aload_2
      49: invokevirtual #301                // Method com/esotericsoftware/kryo/Generics.getParentScope:()Lcom/esotericsoftware/kryo/Generics;
      52: ifnull        67
      55: new           #302                // class com/esotericsoftware/kryo/Generics
      58: dup
      59: aload_2
      60: invokevirtual #303                // Method com/esotericsoftware/kryo/Generics.getMappings:()Ljava/util/Map;
      63: invokespecial #304                // Method com/esotericsoftware/kryo/Generics."<init>":(Ljava/util/Map;)V
      66: astore_2
      67: aload_0
      68: aload_2
      69: putfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      72: aload_0
      73: getfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      76: aload_3
      77: invokevirtual #305                // Method com/esotericsoftware/kryo/Generics.setParentScope:(Lcom/esotericsoftware/kryo/Generics;)V
      80: return

  public void popGenericsScope();
    Code:
       0: aload_0
       1: getfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
       4: astore_1
       5: aload_0
       6: getfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
       9: ifnull        23
      12: aload_0
      13: aload_0
      14: getfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      17: invokevirtual #301                // Method com/esotericsoftware/kryo/Generics.getParentScope:()Lcom/esotericsoftware/kryo/Generics;
      20: putfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
      23: aload_1
      24: ifnull        31
      27: aload_1
      28: invokevirtual #306                // Method com/esotericsoftware/kryo/Generics.resetParentScope:()V
      31: return

  public com.esotericsoftware.kryo.Generics getGenericsScope();
    Code:
       0: aload_0
       1: getfield      #300                // Field genericsScope:Lcom/esotericsoftware/kryo/Generics;
       4: areturn

  public com.esotericsoftware.kryo.StreamFactory getStreamFactory();
    Code:
       0: aload_0
       1: getfield      #36                 // Field streamFactory:Lcom/esotericsoftware/kryo/StreamFactory;
       4: areturn

  public void setStreamFactory(com.esotericsoftware.kryo.StreamFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field streamFactory:Lcom/esotericsoftware/kryo/StreamFactory;
       5: return

  public void setAsmEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field asmEnabled:Z
       5: return

  public boolean getAsmEnabled();
    Code:
       0: aload_0
       1: getfield      #30                 // Field asmEnabled:Z
       4: ireturn
}
