Compiled from "DefaultClassResolver.java"
public class com.esotericsoftware.kryo.util.DefaultClassResolver implements com.esotericsoftware.kryo.ClassResolver {
  public static final byte NAME;

  protected com.esotericsoftware.kryo.Kryo kryo;

  protected final com.esotericsoftware.kryo.util.IntMap<com.esotericsoftware.kryo.Registration> idToRegistration;

  protected final com.esotericsoftware.kryo.util.ObjectMap<java.lang.Class, com.esotericsoftware.kryo.Registration> classToRegistration;

  protected com.esotericsoftware.kryo.util.IdentityObjectIntMap<java.lang.Class> classToNameId;

  protected com.esotericsoftware.kryo.util.IntMap<java.lang.Class> nameIdToClass;

  protected com.esotericsoftware.kryo.util.ObjectMap<java.lang.String, java.lang.Class> nameToClass;

  protected int nextNameId;

  private int memoizedClassId;

  private com.esotericsoftware.kryo.Registration memoizedClassIdValue;

  private java.lang.Class memoizedClass;

  private com.esotericsoftware.kryo.Registration memoizedClassValue;

  public com.esotericsoftware.kryo.util.DefaultClassResolver();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/esotericsoftware/kryo/util/IntMap
       8: dup
       9: invokespecial #3                  // Method com/esotericsoftware/kryo/util/IntMap."<init>":()V
      12: putfield      #4                  // Field idToRegistration:Lcom/esotericsoftware/kryo/util/IntMap;
      15: aload_0
      16: new           #5                  // class com/esotericsoftware/kryo/util/ObjectMap
      19: dup
      20: invokespecial #6                  // Method com/esotericsoftware/kryo/util/ObjectMap."<init>":()V
      23: putfield      #7                  // Field classToRegistration:Lcom/esotericsoftware/kryo/util/ObjectMap;
      26: aload_0
      27: iconst_m1
      28: putfield      #8                  // Field memoizedClassId:I
      31: return

  public void setKryo(com.esotericsoftware.kryo.Kryo);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
       5: return

  public com.esotericsoftware.kryo.Registration register(com.esotericsoftware.kryo.Registration);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String registration cannot be null.
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #13                 // Method com/esotericsoftware/kryo/Registration.getId:()I
      18: iconst_m1
      19: if_icmpeq     109
      22: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      25: ifeq          93
      28: ldc           #16                 // String kryo
      30: new           #17                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #19                 // String Register class ID
      39: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #13                 // Method com/esotericsoftware/kryo/Registration.getId:()I
      46: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #22                 // String :
      51: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #23                 // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
      58: invokestatic  #24                 // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
      61: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #25                 // String  (
      66: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #26                 // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
      73: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      76: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
      79: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #29                 // String )
      84: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      93: aload_0
      94: getfield      #4                  // Field idToRegistration:Lcom/esotericsoftware/kryo/util/IntMap;
      97: aload_1
      98: invokevirtual #13                 // Method com/esotericsoftware/kryo/Registration.getId:()I
     101: aload_1
     102: invokevirtual #32                 // Method com/esotericsoftware/kryo/util/IntMap.put:(ILjava/lang/Object;)Ljava/lang/Object;
     105: pop
     106: goto          168
     109: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     112: ifeq          168
     115: ldc           #16                 // String kryo
     117: new           #17                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #33                 // String Register class name:
     126: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_1
     130: invokevirtual #23                 // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
     133: invokestatic  #24                 // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     136: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     139: ldc           #25                 // String  (
     141: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_1
     145: invokevirtual #26                 // Method com/esotericsoftware/kryo/Registration.getSerializer:()Lcom/esotericsoftware/kryo/Serializer;
     148: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     151: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     154: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: ldc           #29                 // String )
     159: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     168: aload_0
     169: getfield      #7                  // Field classToRegistration:Lcom/esotericsoftware/kryo/util/ObjectMap;
     172: aload_1
     173: invokevirtual #23                 // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
     176: aload_1
     177: invokevirtual #34                 // Method com/esotericsoftware/kryo/util/ObjectMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: aload_1
     182: invokevirtual #23                 // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
     185: invokevirtual #35                 // Method java/lang/Class.isPrimitive:()Z
     188: ifeq          207
     191: aload_0
     192: getfield      #7                  // Field classToRegistration:Lcom/esotericsoftware/kryo/util/ObjectMap;
     195: aload_1
     196: invokevirtual #23                 // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
     199: invokestatic  #36                 // Method com/esotericsoftware/kryo/util/Util.getWrapperClass:(Ljava/lang/Class;)Ljava/lang/Class;
     202: aload_1
     203: invokevirtual #34                 // Method com/esotericsoftware/kryo/util/ObjectMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: pop
     207: aload_1
     208: areturn

  public com.esotericsoftware.kryo.Registration registerImplicit(java.lang.Class);
    Code:
       0: aload_0
       1: new           #37                 // class com/esotericsoftware/kryo/Registration
       4: dup
       5: aload_1
       6: aload_0
       7: getfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
      10: aload_1
      11: invokevirtual #38                 // Method com/esotericsoftware/kryo/Kryo.getDefaultSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      14: iconst_m1
      15: invokespecial #39                 // Method com/esotericsoftware/kryo/Registration."<init>":(Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;I)V
      18: invokevirtual #40                 // Method register:(Lcom/esotericsoftware/kryo/Registration;)Lcom/esotericsoftware/kryo/Registration;
      21: areturn

  public com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #41                 // Field memoizedClass:Ljava/lang/Class;
       5: if_acmpne     13
       8: aload_0
       9: getfield      #42                 // Field memoizedClassValue:Lcom/esotericsoftware/kryo/Registration;
      12: areturn
      13: aload_0
      14: getfield      #7                  // Field classToRegistration:Lcom/esotericsoftware/kryo/util/ObjectMap;
      17: aload_1
      18: invokevirtual #43                 // Method com/esotericsoftware/kryo/util/ObjectMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #37                 // class com/esotericsoftware/kryo/Registration
      24: astore_2
      25: aload_2
      26: ifnull        39
      29: aload_0
      30: aload_1
      31: putfield      #41                 // Field memoizedClass:Ljava/lang/Class;
      34: aload_0
      35: aload_2
      36: putfield      #42                 // Field memoizedClassValue:Lcom/esotericsoftware/kryo/Registration;
      39: aload_2
      40: areturn

  public com.esotericsoftware.kryo.Registration getRegistration(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field idToRegistration:Lcom/esotericsoftware/kryo/util/IntMap;
       4: iload_1
       5: invokevirtual #44                 // Method com/esotericsoftware/kryo/util/IntMap.get:(I)Ljava/lang/Object;
       8: checkcast     #37                 // class com/esotericsoftware/kryo/Registration
      11: areturn

  public com.esotericsoftware.kryo.Registration writeClass(com.esotericsoftware.kryo.io.Output, java.lang.Class);
    Code:
       0: aload_2
       1: ifnonnull     42
       4: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       7: ifne          27
      10: getstatic     #45                 // Field com/esotericsoftware/minlog/Log.DEBUG:Z
      13: ifeq          33
      16: aload_0
      17: getfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
      20: invokevirtual #46                 // Method com/esotericsoftware/kryo/Kryo.getDepth:()I
      23: iconst_1
      24: if_icmpne     33
      27: ldc           #47                 // String Write
      29: aconst_null
      30: invokestatic  #48                 // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
      33: aload_1
      34: iconst_0
      35: iconst_1
      36: invokevirtual #50                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
      39: pop
      40: aconst_null
      41: areturn
      42: aload_0
      43: getfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
      46: aload_2
      47: invokevirtual #51                 // Method com/esotericsoftware/kryo/Kryo.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      50: astore_3
      51: aload_3
      52: invokevirtual #13                 // Method com/esotericsoftware/kryo/Registration.getId:()I
      55: iconst_m1
      56: if_icmpne     69
      59: aload_0
      60: aload_1
      61: aload_2
      62: aload_3
      63: invokevirtual #52                 // Method writeName:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Class;Lcom/esotericsoftware/kryo/Registration;)V
      66: goto          126
      69: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      72: ifeq          114
      75: ldc           #16                 // String kryo
      77: new           #17                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      84: ldc           #53                 // String Write class
      86: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_3
      90: invokevirtual #13                 // Method com/esotericsoftware/kryo/Registration.getId:()I
      93: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: ldc           #22                 // String :
      98: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_2
     102: invokestatic  #24                 // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     105: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     114: aload_1
     115: aload_3
     116: invokevirtual #13                 // Method com/esotericsoftware/kryo/Registration.getId:()I
     119: iconst_2
     120: iadd
     121: iconst_1
     122: invokevirtual #50                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
     125: pop
     126: aload_3
     127: areturn

  protected void writeName(com.esotericsoftware.kryo.io.Output, java.lang.Class, com.esotericsoftware.kryo.Registration);
    Code:
       0: aload_1
       1: iconst_1
       2: iconst_1
       3: invokevirtual #50                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
       6: pop
       7: aload_0
       8: getfield      #54                 // Field classToNameId:Lcom/esotericsoftware/kryo/util/IdentityObjectIntMap;
      11: ifnull        83
      14: aload_0
      15: getfield      #54                 // Field classToNameId:Lcom/esotericsoftware/kryo/util/IdentityObjectIntMap;
      18: aload_2
      19: iconst_m1
      20: invokevirtual #55                 // Method com/esotericsoftware/kryo/util/IdentityObjectIntMap.get:(Ljava/lang/Object;I)I
      23: istore        4
      25: iload         4
      27: iconst_m1
      28: if_icmpeq     83
      31: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      34: ifeq          74
      37: ldc           #16                 // String kryo
      39: new           #17                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #56                 // String Write class name reference
      48: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: iload         4
      53: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: ldc           #22                 // String :
      58: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokestatic  #24                 // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
      65: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      74: aload_1
      75: iload         4
      77: iconst_1
      78: invokevirtual #50                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
      81: pop
      82: return
      83: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      86: ifeq          116
      89: ldc           #16                 // String kryo
      91: new           #17                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #57                 // String Write class name:
     100: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_2
     104: invokestatic  #24                 // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     107: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     116: aload_0
     117: dup
     118: getfield      #58                 // Field nextNameId:I
     121: dup_x1
     122: iconst_1
     123: iadd
     124: putfield      #58                 // Field nextNameId:I
     127: istore        4
     129: aload_0
     130: getfield      #54                 // Field classToNameId:Lcom/esotericsoftware/kryo/util/IdentityObjectIntMap;
     133: ifnonnull     147
     136: aload_0
     137: new           #59                 // class com/esotericsoftware/kryo/util/IdentityObjectIntMap
     140: dup
     141: invokespecial #60                 // Method com/esotericsoftware/kryo/util/IdentityObjectIntMap."<init>":()V
     144: putfield      #54                 // Field classToNameId:Lcom/esotericsoftware/kryo/util/IdentityObjectIntMap;
     147: aload_0
     148: getfield      #54                 // Field classToNameId:Lcom/esotericsoftware/kryo/util/IdentityObjectIntMap;
     151: aload_2
     152: iload         4
     154: invokevirtual #61                 // Method com/esotericsoftware/kryo/util/IdentityObjectIntMap.put:(Ljava/lang/Object;I)V
     157: aload_1
     158: iload         4
     160: iconst_1
     161: invokevirtual #50                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
     164: pop
     165: aload_1
     166: aload_2
     167: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
     170: invokevirtual #62                 // Method com/esotericsoftware/kryo/io/Output.writeString:(Ljava/lang/String;)V
     173: return

  public com.esotericsoftware.kryo.Registration readClass(com.esotericsoftware.kryo.io.Input);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #63                 // Method com/esotericsoftware/kryo/io/Input.readVarInt:(Z)I
       5: istore_2
       6: iload_2
       7: lookupswitch  { // 2
                     0: 32
                     1: 63
               default: 69
          }
      32: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      35: ifne          55
      38: getstatic     #45                 // Field com/esotericsoftware/minlog/Log.DEBUG:Z
      41: ifeq          61
      44: aload_0
      45: getfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
      48: invokevirtual #46                 // Method com/esotericsoftware/kryo/Kryo.getDepth:()I
      51: iconst_1
      52: if_icmpne     61
      55: ldc           #64                 // String Read
      57: aconst_null
      58: invokestatic  #48                 // Method com/esotericsoftware/kryo/util/Util.log:(Ljava/lang/String;Ljava/lang/Object;)V
      61: aconst_null
      62: areturn
      63: aload_0
      64: aload_1
      65: invokevirtual #65                 // Method readName:(Lcom/esotericsoftware/kryo/io/Input;)Lcom/esotericsoftware/kryo/Registration;
      68: areturn
      69: iload_2
      70: aload_0
      71: getfield      #8                  // Field memoizedClassId:I
      74: if_icmpne     82
      77: aload_0
      78: getfield      #66                 // Field memoizedClassIdValue:Lcom/esotericsoftware/kryo/Registration;
      81: areturn
      82: aload_0
      83: getfield      #4                  // Field idToRegistration:Lcom/esotericsoftware/kryo/util/IntMap;
      86: iload_2
      87: iconst_2
      88: isub
      89: invokevirtual #44                 // Method com/esotericsoftware/kryo/util/IntMap.get:(I)Ljava/lang/Object;
      92: checkcast     #37                 // class com/esotericsoftware/kryo/Registration
      95: astore_3
      96: aload_3
      97: ifnonnull     129
     100: new           #67                 // class com/esotericsoftware/kryo/KryoException
     103: dup
     104: new           #17                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #68                 // String Encountered unregistered class ID:
     113: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: iload_2
     117: iconst_2
     118: isub
     119: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     122: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #69                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
     128: athrow
     129: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     132: ifeq          176
     135: ldc           #16                 // String kryo
     137: new           #17                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #70                 // String Read class
     146: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: iload_2
     150: iconst_2
     151: isub
     152: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     155: ldc           #22                 // String :
     157: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_3
     161: invokevirtual #23                 // Method com/esotericsoftware/kryo/Registration.getType:()Ljava/lang/Class;
     164: invokestatic  #24                 // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     167: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     176: aload_0
     177: iload_2
     178: putfield      #8                  // Field memoizedClassId:I
     181: aload_0
     182: aload_3
     183: putfield      #66                 // Field memoizedClassIdValue:Lcom/esotericsoftware/kryo/Registration;
     186: aload_3
     187: areturn

  protected com.esotericsoftware.kryo.Registration readName(com.esotericsoftware.kryo.io.Input);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #63                 // Method com/esotericsoftware/kryo/io/Input.readVarInt:(Z)I
       5: istore_2
       6: aload_0
       7: getfield      #71                 // Field nameIdToClass:Lcom/esotericsoftware/kryo/util/IntMap;
      10: ifnonnull     24
      13: aload_0
      14: new           #2                  // class com/esotericsoftware/kryo/util/IntMap
      17: dup
      18: invokespecial #3                  // Method com/esotericsoftware/kryo/util/IntMap."<init>":()V
      21: putfield      #71                 // Field nameIdToClass:Lcom/esotericsoftware/kryo/util/IntMap;
      24: aload_0
      25: getfield      #71                 // Field nameIdToClass:Lcom/esotericsoftware/kryo/util/IntMap;
      28: iload_2
      29: invokevirtual #44                 // Method com/esotericsoftware/kryo/util/IntMap.get:(I)Ljava/lang/Object;
      32: checkcast     #72                 // class java/lang/Class
      35: astore_3
      36: aload_3
      37: ifnonnull     179
      40: aload_1
      41: invokevirtual #73                 // Method com/esotericsoftware/kryo/io/Input.readString:()Ljava/lang/String;
      44: astore        4
      46: aload_0
      47: aload         4
      49: invokevirtual #74                 // Method getTypeByName:(Ljava/lang/String;)Ljava/lang/Class;
      52: astore_3
      53: aload_3
      54: ifnonnull     135
      57: aload         4
      59: iconst_0
      60: aload_0
      61: getfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
      64: invokevirtual #75                 // Method com/esotericsoftware/kryo/Kryo.getClassLoader:()Ljava/lang/ClassLoader;
      67: invokestatic  #76                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      70: astore_3
      71: goto          106
      74: astore        5
      76: new           #67                 // class com/esotericsoftware/kryo/KryoException
      79: dup
      80: new           #17                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #78                 // String Unable to find class:
      89: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload         4
      94: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: aload         5
     102: invokespecial #79                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: athrow
     106: aload_0
     107: getfield      #80                 // Field nameToClass:Lcom/esotericsoftware/kryo/util/ObjectMap;
     110: ifnonnull     124
     113: aload_0
     114: new           #5                  // class com/esotericsoftware/kryo/util/ObjectMap
     117: dup
     118: invokespecial #6                  // Method com/esotericsoftware/kryo/util/ObjectMap."<init>":()V
     121: putfield      #80                 // Field nameToClass:Lcom/esotericsoftware/kryo/util/ObjectMap;
     124: aload_0
     125: getfield      #80                 // Field nameToClass:Lcom/esotericsoftware/kryo/util/ObjectMap;
     128: aload         4
     130: aload_3
     131: invokevirtual #34                 // Method com/esotericsoftware/kryo/util/ObjectMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: aload_0
     136: getfield      #71                 // Field nameIdToClass:Lcom/esotericsoftware/kryo/util/IntMap;
     139: iload_2
     140: aload_3
     141: invokevirtual #32                 // Method com/esotericsoftware/kryo/util/IntMap.put:(ILjava/lang/Object;)Ljava/lang/Object;
     144: pop
     145: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     148: ifeq          176
     151: ldc           #16                 // String kryo
     153: new           #17                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #81                 // String Read class name:
     162: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload         4
     167: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     176: goto          221
     179: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     182: ifeq          221
     185: ldc           #16                 // String kryo
     187: new           #17                 // class java/lang/StringBuilder
     190: dup
     191: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
     194: ldc           #82                 // String Read class name reference
     196: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: iload_2
     200: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     203: ldc           #22                 // String :
     205: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_3
     209: invokestatic  #24                 // Method com/esotericsoftware/kryo/util/Util.className:(Ljava/lang/Class;)Ljava/lang/String;
     212: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: invokestatic  #31                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     221: aload_0
     222: getfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
     225: aload_3
     226: invokevirtual #51                 // Method com/esotericsoftware/kryo/Kryo.getRegistration:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
     229: areturn
    Exception table:
       from    to  target type
          57    71    74   Class java/lang/ClassNotFoundException

  protected java.lang.Class<?> getTypeByName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #80                 // Field nameToClass:Lcom/esotericsoftware/kryo/util/ObjectMap;
       4: ifnull        21
       7: aload_0
       8: getfield      #80                 // Field nameToClass:Lcom/esotericsoftware/kryo/util/ObjectMap;
      11: aload_1
      12: invokevirtual #43                 // Method com/esotericsoftware/kryo/util/ObjectMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #72                 // class java/lang/Class
      18: goto          22
      21: aconst_null
      22: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #9                  // Field kryo:Lcom/esotericsoftware/kryo/Kryo;
       4: invokevirtual #83                 // Method com/esotericsoftware/kryo/Kryo.isRegistrationRequired:()Z
       7: ifne          43
      10: aload_0
      11: getfield      #54                 // Field classToNameId:Lcom/esotericsoftware/kryo/util/IdentityObjectIntMap;
      14: ifnull        24
      17: aload_0
      18: getfield      #54                 // Field classToNameId:Lcom/esotericsoftware/kryo/util/IdentityObjectIntMap;
      21: invokevirtual #84                 // Method com/esotericsoftware/kryo/util/IdentityObjectIntMap.clear:()V
      24: aload_0
      25: getfield      #71                 // Field nameIdToClass:Lcom/esotericsoftware/kryo/util/IntMap;
      28: ifnull        38
      31: aload_0
      32: getfield      #71                 // Field nameIdToClass:Lcom/esotericsoftware/kryo/util/IntMap;
      35: invokevirtual #85                 // Method com/esotericsoftware/kryo/util/IntMap.clear:()V
      38: aload_0
      39: iconst_0
      40: putfield      #58                 // Field nextNameId:I
      43: return
}
