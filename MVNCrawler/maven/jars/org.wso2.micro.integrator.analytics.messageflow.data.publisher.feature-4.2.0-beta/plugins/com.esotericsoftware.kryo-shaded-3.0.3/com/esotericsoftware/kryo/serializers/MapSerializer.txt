Compiled from "MapSerializer.java"
public class com.esotericsoftware.kryo.serializers.MapSerializer extends com.esotericsoftware.kryo.Serializer<java.util.Map> {
  private java.lang.Class keyClass;

  private java.lang.Class valueClass;

  private com.esotericsoftware.kryo.Serializer keySerializer;

  private com.esotericsoftware.kryo.Serializer valueSerializer;

  private boolean keysCanBeNull;

  private boolean valuesCanBeNull;

  private java.lang.Class keyGenericType;

  private java.lang.Class valueGenericType;

  public com.esotericsoftware.kryo.serializers.MapSerializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field keysCanBeNull:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field valuesCanBeNull:Z
      14: return

  public void setKeysCanBeNull(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field keysCanBeNull:Z
       5: return

  public void setKeyClass(java.lang.Class, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field keyClass:Ljava/lang/Class;
       5: aload_0
       6: aload_2
       7: putfield      #5                  // Field keySerializer:Lcom/esotericsoftware/kryo/Serializer;
      10: return

  public void setValueClass(java.lang.Class, com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field valueClass:Ljava/lang/Class;
       5: aload_0
       6: aload_2
       7: putfield      #7                  // Field valueSerializer:Lcom/esotericsoftware/kryo/Serializer;
      10: return

  public void setValuesCanBeNull(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field valuesCanBeNull:Z
       5: return

  public void setGenerics(com.esotericsoftware.kryo.Kryo, java.lang.Class[]);
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #8                  // Field keyGenericType:Ljava/lang/Class;
       5: aload_0
       6: aconst_null
       7: putfield      #9                  // Field valueGenericType:Ljava/lang/Class;
      10: aload_2
      11: ifnull        71
      14: aload_2
      15: arraylength
      16: ifle          71
      19: aload_2
      20: iconst_0
      21: aaload
      22: ifnull        42
      25: aload_1
      26: aload_2
      27: iconst_0
      28: aaload
      29: invokevirtual #10                 // Method com/esotericsoftware/kryo/Kryo.isFinal:(Ljava/lang/Class;)Z
      32: ifeq          42
      35: aload_0
      36: aload_2
      37: iconst_0
      38: aaload
      39: putfield      #8                  // Field keyGenericType:Ljava/lang/Class;
      42: aload_2
      43: arraylength
      44: iconst_1
      45: if_icmple     71
      48: aload_2
      49: iconst_1
      50: aaload
      51: ifnull        71
      54: aload_1
      55: aload_2
      56: iconst_1
      57: aaload
      58: invokevirtual #10                 // Method com/esotericsoftware/kryo/Kryo.isFinal:(Ljava/lang/Class;)Z
      61: ifeq          71
      64: aload_0
      65: aload_2
      66: iconst_1
      67: aaload
      68: putfield      #9                  // Field valueGenericType:Ljava/lang/Class;
      71: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.util.Map);
    Code:
       0: aload_3
       1: invokeinterface #11,  1           // InterfaceMethod java/util/Map.size:()I
       6: istore        4
       8: aload_2
       9: iload         4
      11: iconst_1
      12: invokevirtual #12                 // Method com/esotericsoftware/kryo/io/Output.writeInt:(IZ)I
      15: pop
      16: aload_0
      17: getfield      #5                  // Field keySerializer:Lcom/esotericsoftware/kryo/Serializer;
      20: astore        5
      22: aload_0
      23: getfield      #8                  // Field keyGenericType:Ljava/lang/Class;
      26: ifnull        49
      29: aload         5
      31: ifnonnull     44
      34: aload_1
      35: aload_0
      36: getfield      #8                  // Field keyGenericType:Ljava/lang/Class;
      39: invokevirtual #13                 // Method com/esotericsoftware/kryo/Kryo.getSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      42: astore        5
      44: aload_0
      45: aconst_null
      46: putfield      #8                  // Field keyGenericType:Ljava/lang/Class;
      49: aload_0
      50: getfield      #7                  // Field valueSerializer:Lcom/esotericsoftware/kryo/Serializer;
      53: astore        6
      55: aload_0
      56: getfield      #9                  // Field valueGenericType:Ljava/lang/Class;
      59: ifnull        82
      62: aload         6
      64: ifnonnull     77
      67: aload_1
      68: aload_0
      69: getfield      #9                  // Field valueGenericType:Ljava/lang/Class;
      72: invokevirtual #13                 // Method com/esotericsoftware/kryo/Kryo.getSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      75: astore        6
      77: aload_0
      78: aconst_null
      79: putfield      #9                  // Field valueGenericType:Ljava/lang/Class;
      82: aload_3
      83: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      88: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      93: astore        7
      95: aload         7
      97: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          236
     105: aload         7
     107: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #18                 // class java/util/Map$Entry
     115: astore        8
     117: aload         5
     119: ifnull        163
     122: aload_0
     123: getfield      #2                  // Field keysCanBeNull:Z
     126: ifeq          146
     129: aload_1
     130: aload_2
     131: aload         8
     133: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     138: aload         5
     140: invokevirtual #20                 // Method com/esotericsoftware/kryo/Kryo.writeObjectOrNull:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Lcom/esotericsoftware/kryo/Serializer;)V
     143: goto          175
     146: aload_1
     147: aload_2
     148: aload         8
     150: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     155: aload         5
     157: invokevirtual #21                 // Method com/esotericsoftware/kryo/Kryo.writeObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Lcom/esotericsoftware/kryo/Serializer;)V
     160: goto          175
     163: aload_1
     164: aload_2
     165: aload         8
     167: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     172: invokevirtual #22                 // Method com/esotericsoftware/kryo/Kryo.writeClassAndObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     175: aload         6
     177: ifnull        221
     180: aload_0
     181: getfield      #3                  // Field valuesCanBeNull:Z
     184: ifeq          204
     187: aload_1
     188: aload_2
     189: aload         8
     191: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     196: aload         6
     198: invokevirtual #20                 // Method com/esotericsoftware/kryo/Kryo.writeObjectOrNull:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Lcom/esotericsoftware/kryo/Serializer;)V
     201: goto          233
     204: aload_1
     205: aload_2
     206: aload         8
     208: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     213: aload         6
     215: invokevirtual #21                 // Method com/esotericsoftware/kryo/Kryo.writeObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;Lcom/esotericsoftware/kryo/Serializer;)V
     218: goto          233
     221: aload_1
     222: aload_2
     223: aload         8
     225: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     230: invokevirtual #22                 // Method com/esotericsoftware/kryo/Kryo.writeClassAndObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
     233: goto          95
     236: return

  protected java.util.Map create(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<java.util.Map>);
    Code:
       0: aload_1
       1: aload_3
       2: invokevirtual #24                 // Method com/esotericsoftware/kryo/Kryo.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
       5: checkcast     #25                 // class java/util/Map
       8: areturn

  public java.util.Map read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<java.util.Map>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #26                 // Method create:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/util/Map;
       7: astore        4
       9: aload_2
      10: iconst_1
      11: invokevirtual #27                 // Method com/esotericsoftware/kryo/io/Input.readInt:(Z)I
      14: istore        5
      16: aload_0
      17: getfield      #4                  // Field keyClass:Ljava/lang/Class;
      20: astore        6
      22: aload_0
      23: getfield      #6                  // Field valueClass:Ljava/lang/Class;
      26: astore        7
      28: aload_0
      29: getfield      #5                  // Field keySerializer:Lcom/esotericsoftware/kryo/Serializer;
      32: astore        8
      34: aload_0
      35: getfield      #8                  // Field keyGenericType:Ljava/lang/Class;
      38: ifnull        65
      41: aload_0
      42: getfield      #8                  // Field keyGenericType:Ljava/lang/Class;
      45: astore        6
      47: aload         8
      49: ifnonnull     60
      52: aload_1
      53: aload         6
      55: invokevirtual #13                 // Method com/esotericsoftware/kryo/Kryo.getSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      58: astore        8
      60: aload_0
      61: aconst_null
      62: putfield      #8                  // Field keyGenericType:Ljava/lang/Class;
      65: aload_0
      66: getfield      #7                  // Field valueSerializer:Lcom/esotericsoftware/kryo/Serializer;
      69: astore        9
      71: aload_0
      72: getfield      #9                  // Field valueGenericType:Ljava/lang/Class;
      75: ifnull        102
      78: aload_0
      79: getfield      #9                  // Field valueGenericType:Ljava/lang/Class;
      82: astore        7
      84: aload         9
      86: ifnonnull     97
      89: aload_1
      90: aload         7
      92: invokevirtual #13                 // Method com/esotericsoftware/kryo/Kryo.getSerializer:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Serializer;
      95: astore        9
      97: aload_0
      98: aconst_null
      99: putfield      #9                  // Field valueGenericType:Ljava/lang/Class;
     102: aload_1
     103: aload         4
     105: invokevirtual #28                 // Method com/esotericsoftware/kryo/Kryo.reference:(Ljava/lang/Object;)V
     108: iconst_0
     109: istore        10
     111: iload         10
     113: iload         5
     115: if_icmpge     230
     118: aload         8
     120: ifnull        158
     123: aload_0
     124: getfield      #2                  // Field keysCanBeNull:Z
     127: ifeq          144
     130: aload_1
     131: aload_2
     132: aload         6
     134: aload         8
     136: invokevirtual #29                 // Method com/esotericsoftware/kryo/Kryo.readObjectOrNull:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Ljava/lang/Object;
     139: astore        11
     141: goto          165
     144: aload_1
     145: aload_2
     146: aload         6
     148: aload         8
     150: invokevirtual #30                 // Method com/esotericsoftware/kryo/Kryo.readObject:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Ljava/lang/Object;
     153: astore        11
     155: goto          165
     158: aload_1
     159: aload_2
     160: invokevirtual #31                 // Method com/esotericsoftware/kryo/Kryo.readClassAndObject:(Lcom/esotericsoftware/kryo/io/Input;)Ljava/lang/Object;
     163: astore        11
     165: aload         9
     167: ifnull        205
     170: aload_0
     171: getfield      #3                  // Field valuesCanBeNull:Z
     174: ifeq          191
     177: aload_1
     178: aload_2
     179: aload         7
     181: aload         9
     183: invokevirtual #29                 // Method com/esotericsoftware/kryo/Kryo.readObjectOrNull:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Ljava/lang/Object;
     186: astore        12
     188: goto          212
     191: aload_1
     192: aload_2
     193: aload         7
     195: aload         9
     197: invokevirtual #30                 // Method com/esotericsoftware/kryo/Kryo.readObject:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;Lcom/esotericsoftware/kryo/Serializer;)Ljava/lang/Object;
     200: astore        12
     202: goto          212
     205: aload_1
     206: aload_2
     207: invokevirtual #31                 // Method com/esotericsoftware/kryo/Kryo.readClassAndObject:(Lcom/esotericsoftware/kryo/io/Input;)Ljava/lang/Object;
     210: astore        12
     212: aload         4
     214: aload         11
     216: aload         12
     218: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     223: pop
     224: iinc          10, 1
     227: goto          111
     230: aload         4
     232: areturn

  protected java.util.Map createCopy(com.esotericsoftware.kryo.Kryo, java.util.Map);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #24                 // Method com/esotericsoftware/kryo/Kryo.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #25                 // class java/util/Map
      11: areturn

  public java.util.Map copy(com.esotericsoftware.kryo.Kryo, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #34                 // Method createCopy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/util/Map;)Ljava/util/Map;
       6: astore_3
       7: aload_2
       8: invokeinterface #14,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          74
      30: aload         4
      32: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #18                 // class java/util/Map$Entry
      40: astore        5
      42: aload_3
      43: aload_1
      44: aload         5
      46: invokeinterface #19,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: invokevirtual #35                 // Method com/esotericsoftware/kryo/Kryo.copy:(Ljava/lang/Object;)Ljava/lang/Object;
      54: aload_1
      55: aload         5
      57: invokeinterface #23,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      62: invokevirtual #35                 // Method com/esotericsoftware/kryo/Kryo.copy:(Ljava/lang/Object;)Ljava/lang/Object;
      65: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: goto          20
      74: aload_3
      75: areturn

  public java.lang.Object copy(com.esotericsoftware.kryo.Kryo, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #25                 // class java/util/Map
       6: invokevirtual #36                 // Method copy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/util/Map;)Ljava/util/Map;
       9: areturn

  public java.lang.Object read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #37                 // Method read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/util/Map;
       7: areturn

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: checkcast     #25                 // class java/util/Map
       7: invokevirtual #38                 // Method write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/util/Map;)V
      10: return
}
