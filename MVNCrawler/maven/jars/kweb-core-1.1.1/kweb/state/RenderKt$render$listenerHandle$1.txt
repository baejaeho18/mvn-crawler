Compiled from "render.kt"
final class kweb.state.RenderKt$render$listenerHandle$1 extends kotlin.jvm.internal.Lambda implements kotlin.jvm.functions.Function2<T, T, kotlin.Unit> {
  final java.util.concurrent.atomic.AtomicReference<kweb.state.RenderState> $renderState;

  final kweb.ElementCreator<?> $this_render;

  final java.util.concurrent.atomic.AtomicReference<kweb.ElementCreator<kweb.Element>> $previousElementCreator;

  final kweb.state.RenderFragment $renderFragment;

  final kotlin.jvm.functions.Function2<kweb.ElementCreator<? extends kweb.Element>, T, kotlin.Unit> $block;

  final kweb.state.KVal<T> $value;

  kweb.state.RenderKt$render$listenerHandle$1(java.util.concurrent.atomic.AtomicReference<kweb.state.RenderState>, kweb.ElementCreator<?>, java.util.concurrent.atomic.AtomicReference<kweb.ElementCreator<kweb.Element>>, kweb.state.RenderFragment, kotlin.jvm.functions.Function2<? super kweb.ElementCreator<? extends kweb.Element>, ? super T, kotlin.Unit>, kweb.state.KVal<T>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field $renderState:Ljava/util/concurrent/atomic/AtomicReference;
       5: aload_0
       6: aload_2
       7: putfield      #18                 // Field $this_render:Lkweb/ElementCreator;
      10: aload_0
      11: aload_3
      12: putfield      #21                 // Field $previousElementCreator:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload         4
      18: putfield      #25                 // Field $renderFragment:Lkweb/state/RenderFragment;
      21: aload_0
      22: aload         5
      24: putfield      #29                 // Field $block:Lkotlin/jvm/functions/Function2;
      27: aload_0
      28: aload         6
      30: putfield      #33                 // Field $value:Lkweb/state/KVal;
      33: aload_0
      34: iconst_2
      35: invokespecial #36                 // Method kotlin/jvm/internal/Lambda."<init>":(I)V
      38: return

  public final void invoke(T, T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field $renderState:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #50                 // class kweb/state/RenderState
      10: dup
      11: ifnonnull     19
      14: pop
      15: iconst_m1
      16: goto          27
      19: getstatic     #56                 // Field kweb/state/RenderKt$render$listenerHandle$1$WhenMappings.$EnumSwitchMapping$0:[I
      22: swap
      23: invokevirtual #60                 // Method kweb/state/RenderState.ordinal:()I
      26: iaload
      27: tableswitch   { // 1 to 2
                     1: 48
                     2: 78
               default: 88
          }
      48: aload_0
      49: getfield      #18                 // Field $this_render:Lkweb/ElementCreator;
      52: aload_0
      53: getfield      #14                 // Field $renderState:Ljava/util/concurrent/atomic/AtomicReference;
      56: aload_0
      57: getfield      #21                 // Field $previousElementCreator:Ljava/util/concurrent/atomic/AtomicReference;
      60: aload_0
      61: getfield      #25                 // Field $renderFragment:Lkweb/state/RenderFragment;
      64: aload_0
      65: getfield      #29                 // Field $block:Lkotlin/jvm/functions/Function2;
      68: aload_0
      69: getfield      #33                 // Field $value:Lkweb/state/KVal;
      72: invokestatic  #66                 // Method kweb/state/RenderKt.access$render$renderLoop:(Lkweb/ElementCreator;Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;Lkweb/state/RenderFragment;Lkotlin/jvm/functions/Function2;Lkweb/state/KVal;)V
      75: goto          88
      78: aload_0
      79: getfield      #14                 // Field $renderState:Ljava/util/concurrent/atomic/AtomicReference;
      82: getstatic     #70                 // Field kweb/state/RenderState.RENDERING_WITH_PENDING_CHANGE:Lkweb/state/RenderState;
      85: invokevirtual #74                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      88: return

  public java.lang.Object invoke(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #77                 // Method invoke:(Ljava/lang/Object;Ljava/lang/Object;)V
       6: getstatic     #83                 // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
       9: areturn
}
