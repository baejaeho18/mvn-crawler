Compiled from "PacketReader.java"
class nl.vv32.rcon.PacketReader {
  private final nl.vv32.rcon.PacketReader$Source source;

  private final java.nio.ByteBuffer buffer;

  public nl.vv32.rcon.PacketReader(nl.vv32.rcon.PacketReader$Source, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field source:Lnl/vv32/rcon/PacketReader$Source;
       9: aload_0
      10: iload_2
      11: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      14: getstatic     #4                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      17: invokevirtual #5                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      20: putfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      23: return

  public nl.vv32.rcon.Packet read() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #8                  // Method readUntilAvailable:(I)V
       5: aload_0
       6: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       9: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      12: pop
      13: aload_0
      14: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      17: invokevirtual #10                 // Method java/nio/ByteBuffer.getInt:()I
      20: istore_1
      21: aload_0
      22: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      25: invokevirtual #11                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      28: pop
      29: aload_0
      30: iload_1
      31: invokespecial #8                  // Method readUntilAvailable:(I)V
      34: aload_0
      35: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      38: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;
      41: pop
      42: aload_0
      43: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      46: iload_1
      47: invokestatic  #12                 // Method nl/vv32/rcon/PacketCodec.decode:(Ljava/nio/ByteBuffer;I)Lnl/vv32/rcon/Packet;
      50: astore_2
      51: aload_0
      52: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      55: invokevirtual #11                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      58: pop
      59: aload_2
      60: areturn

  private void readUntilAvailable(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #13                 // Method java/nio/ByteBuffer.position:()I
       7: iload_1
       8: if_icmpge     36
      11: aload_0
      12: getfield      #2                  // Field source:Lnl/vv32/rcon/PacketReader$Source;
      15: aload_0
      16: getfield      #6                  // Field buffer:Ljava/nio/ByteBuffer;
      19: invokeinterface #14,  2           // InterfaceMethod nl/vv32/rcon/PacketReader$Source.read:(Ljava/nio/ByteBuffer;)I
      24: iconst_m1
      25: if_icmpne     0
      28: new           #15                 // class java/io/EOFException
      31: dup
      32: invokespecial #16                 // Method java/io/EOFException."<init>":()V
      35: athrow
      36: return
}
