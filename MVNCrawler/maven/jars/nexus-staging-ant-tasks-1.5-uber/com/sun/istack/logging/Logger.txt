Compiled from "Logger.java"
public class com.sun.istack.logging.Logger {
  private static final java.lang.String WS_LOGGING_SUBSYSTEM_NAME_ROOT;

  private static final java.lang.String ROOT_WS_PACKAGE;

  private static final java.util.logging.Level METHOD_CALL_LEVEL_VALUE;

  private final java.lang.String componentClassName;

  private final java.util.logging.Logger logger;

  protected com.sun.istack.logging.Logger(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #3                  // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #4                  // String [
      14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_2
      18: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #6                  // String ]
      23: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: putfield      #8                  // Field componentClassName:Ljava/lang/String;
      32: aload_0
      33: aload_1
      34: invokestatic  #9                  // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
      37: putfield      #10                 // Field logger:Ljava/util/logging/Logger;
      40: return

  public static com.sun.istack.logging.Logger getLogger(java.lang.Class<?>);
    Code:
       0: new           #11                 // class com/sun/istack/logging/Logger
       3: dup
       4: aload_0
       5: invokestatic  #12                 // Method getSystemLoggerName:(Ljava/lang/Class;)Ljava/lang/String;
       8: aload_0
       9: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: invokespecial #14                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: areturn

  public static com.sun.istack.logging.Logger getLogger(java.lang.String, java.lang.Class<?>);
    Code:
       0: new           #11                 // class com/sun/istack/logging/Logger
       3: dup
       4: aload_0
       5: aload_1
       6: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: invokespecial #14                 // Method "<init>":(Ljava/lang/String;Ljava/lang/String;)V
      12: areturn

  static final java.lang.String getSystemLoggerName(java.lang.Class<?>);
    Code:
       0: new           #2                  // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #15                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       8: invokevirtual #16                 // Method java/lang/Package.getName:()Ljava/lang/String;
      11: invokespecial #17                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      14: astore_1
      15: aload_1
      16: ldc           #18                 // String com.sun.xml.ws.
      18: invokevirtual #19                 // Method java/lang/StringBuilder.lastIndexOf:(Ljava/lang/String;)I
      21: istore_2
      22: iload_2
      23: iconst_m1
      24: if_icmple     107
      27: aload_1
      28: iconst_0
      29: iload_2
      30: ldc           #18                 // String com.sun.xml.ws.
      32: invokevirtual #20                 // Method java/lang/String.length:()I
      35: iadd
      36: ldc           #21                 // String
      38: invokevirtual #22                 // Method java/lang/StringBuilder.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: new           #23                 // class java/util/StringTokenizer
      45: dup
      46: aload_1
      47: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: ldc           #24                 // String .
      52: invokespecial #25                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      55: astore_3
      56: new           #2                  // class java/lang/StringBuilder
      59: dup
      60: ldc           #26                 // String com.sun.metro
      62: invokespecial #17                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      65: ldc           #24                 // String .
      67: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: astore_1
      71: aload_3
      72: invokevirtual #27                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      75: ifeq          107
      78: aload_3
      79: invokevirtual #28                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      82: astore        4
      84: ldc           #29                 // String api
      86: aload         4
      88: invokevirtual #30                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifeq          100
      94: aload_3
      95: invokevirtual #28                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      98: astore        4
     100: aload_1
     101: aload         4
     103: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: pop
     107: aload_1
     108: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn

  public void log(java.util.logging.Level, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      16: aload_1
      17: aload_0
      18: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      21: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      24: aload_2
      25: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      28: return

  public void log(java.util.logging.Level, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      16: aload_1
      17: aload_0
      18: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      21: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      24: aload_2
      25: aload_3
      26: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      29: return

  public void finest(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: return

  public void finest(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: aload_2
      30: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return

  public void finer(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #36                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #36                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: return

  public void finer(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #36                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #36                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: aload_2
      30: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return

  public void fine(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #37                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: return

  public void fine(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #37                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #37                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: aload_2
      30: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return

  public void info(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #38                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #38                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: return

  public void info(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #38                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #38                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: aload_2
      30: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return

  public void config(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #39                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #39                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: return

  public void config(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #39                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #39                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: aload_2
      30: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return

  public void warning(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: return

  public void warning(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: aload_2
      30: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return

  public void severe(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      32: return

  public void severe(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      21: aload_0
      22: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      25: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      28: aload_1
      29: aload_2
      30: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      33: return

  public boolean isMethodCallLoggable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #42                 // Field METHOD_CALL_LEVEL_VALUE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ireturn

  public boolean isLoggable(java.util.logging.Level);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       8: ireturn

  public void setLevel(java.util.logging.Level);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokevirtual #43                 // Method java/util/logging/Logger.setLevel:(Ljava/util/logging/Level;)V
       8: return

  public void entering();
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #42                 // Field METHOD_CALL_LEVEL_VALUE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: aload_0
      19: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      22: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      25: invokevirtual #44                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;)V
      28: return

  public void entering(java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #42                 // Field METHOD_CALL_LEVEL_VALUE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: aload_0
      19: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      22: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #45                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      29: return

  public void exiting();
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #42                 // Field METHOD_CALL_LEVEL_VALUE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: aload_0
      19: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      22: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      25: invokevirtual #46                 // Method java/util/logging/Logger.exiting:(Ljava/lang/String;Ljava/lang/String;)V
      28: return

  public void exiting(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #42                 // Field METHOD_CALL_LEVEL_VALUE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      18: aload_0
      19: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      22: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      25: aload_1
      26: invokevirtual #47                 // Method java/util/logging/Logger.exiting:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      29: return

  public <T extends java.lang.Throwable> T logSevereException(T, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          69
      13: aload_2
      14: ifnonnull     41
      17: aload_0
      18: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      21: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      24: aload_0
      25: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      28: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      35: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      38: goto          69
      41: aload_1
      42: aload_2
      43: invokevirtual #49                 // Method java/lang/Throwable.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      46: pop
      47: aload_0
      48: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      51: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      54: aload_0
      55: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      58: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      61: aload_1
      62: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      65: aload_2
      66: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      69: aload_1
      70: areturn

  public <T extends java.lang.Throwable> T logSevereException(T, boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          73
      13: iload_2
      14: ifeq          52
      17: aload_1
      18: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      21: ifnull        52
      24: aload_0
      25: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      31: aload_0
      32: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      35: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      42: aload_1
      43: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      46: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      49: goto          73
      52: aload_0
      53: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      56: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      59: aload_0
      60: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      63: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      66: aload_1
      67: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      70: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      73: aload_1
      74: areturn

  public <T extends java.lang.Throwable> T logSevereException(T);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifeq          69
      13: aload_1
      14: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      17: ifnonnull     44
      20: aload_0
      21: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      24: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      27: aload_0
      28: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      31: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      34: aload_1
      35: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      38: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: goto          69
      44: aload_0
      45: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      48: getstatic     #41                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      51: aload_0
      52: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      55: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      58: aload_1
      59: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      62: aload_1
      63: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      66: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      69: aload_1
      70: areturn

  public <T extends java.lang.Throwable> T logException(T, java.lang.Throwable, java.util.logging.Level);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: aload_3
       5: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       8: ifeq          63
      11: aload_2
      12: ifnonnull     37
      15: aload_0
      16: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      19: aload_3
      20: aload_0
      21: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      24: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      27: aload_1
      28: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      31: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      34: goto          63
      37: aload_1
      38: aload_2
      39: invokevirtual #49                 // Method java/lang/Throwable.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      42: pop
      43: aload_0
      44: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      47: aload_3
      48: aload_0
      49: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      52: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      55: aload_1
      56: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      59: aload_2
      60: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      63: aload_1
      64: areturn

  public <T extends java.lang.Throwable> T logException(T, boolean, java.util.logging.Level);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: aload_3
       5: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       8: ifeq          67
      11: iload_2
      12: ifeq          48
      15: aload_1
      16: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      19: ifnull        48
      22: aload_0
      23: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      26: aload_3
      27: aload_0
      28: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      31: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      34: aload_1
      35: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      38: aload_1
      39: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      42: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      45: goto          67
      48: aload_0
      49: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      52: aload_3
      53: aload_0
      54: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      57: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      60: aload_1
      61: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      64: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      67: aload_1
      68: areturn

  public <T extends java.lang.Throwable> T logException(T, java.util.logging.Level);
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
       4: aload_2
       5: invokevirtual #31                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       8: ifeq          63
      11: aload_1
      12: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      15: ifnonnull     40
      18: aload_0
      19: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      22: aload_2
      23: aload_0
      24: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      27: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      30: aload_1
      31: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      34: invokevirtual #33                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      37: goto          63
      40: aload_0
      41: getfield      #10                 // Field logger:Ljava/util/logging/Logger;
      44: aload_2
      45: aload_0
      46: getfield      #8                  // Field componentClassName:Ljava/lang/String;
      49: invokestatic  #32                 // Method getCallerMethodName:()Ljava/lang/String;
      52: aload_1
      53: invokevirtual #48                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      56: aload_1
      57: invokevirtual #50                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      60: invokevirtual #34                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      63: aload_1
      64: areturn

  private static java.lang.String getCallerMethodName();
    Code:
       0: iconst_5
       1: invokestatic  #51                 // Method getStackMethodName:(I)Ljava/lang/String;
       4: areturn

  private static java.lang.String getStackMethodName(int);
    Code:
       0: invokestatic  #52                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #53                 // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
       6: astore_2
       7: aload_2
       8: arraylength
       9: iload_0
      10: iconst_1
      11: iadd
      12: if_icmple     25
      15: aload_2
      16: iload_0
      17: aaload
      18: invokevirtual #54                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      21: astore_1
      22: goto          28
      25: ldc           #55                 // String UNKNOWN METHOD
      27: astore_1
      28: aload_1
      29: areturn

  static {};
    Code:
       0: getstatic     #35                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       3: putstatic     #42                 // Field METHOD_CALL_LEVEL_VALUE:Ljava/util/logging/Level;
       6: return
}
