Compiled from "LazySingletonContextProvider.java"
public abstract class com.sun.jersey.core.impl.provider.xml.LazySingletonContextProvider<T> implements com.sun.jersey.spi.inject.InjectableProvider<javax.ws.rs.core.Context, java.lang.reflect.Type> {
  private final java.lang.Class<T> t;

  private final java.util.concurrent.atomic.AtomicReference<T> rf;

  protected com.sun.jersey.core.impl.provider.xml.LazySingletonContextProvider(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      12: putfield      #5                  // Field rf:Ljava/util/concurrent/atomic/AtomicReference;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field t:Ljava/lang/Class;
      20: return

  public com.sun.jersey.core.spi.component.ComponentScope getScope();
    Code:
       0: getstatic     #7                  // Field com/sun/jersey/core/spi/component/ComponentScope.Singleton:Lcom/sun/jersey/core/spi/component/ComponentScope;
       3: areturn

  public com.sun.jersey.spi.inject.Injectable<T> getInjectable(com.sun.jersey.core.spi.component.ComponentContext, javax.ws.rs.core.Context, java.lang.reflect.Type);
    Code:
       0: aload_3
       1: aload_0
       2: getfield      #6                  // Field t:Ljava/lang/Class;
       5: if_acmpne     17
       8: new           #8                  // class com/sun/jersey/core/impl/provider/xml/LazySingletonContextProvider$1
      11: dup
      12: aload_0
      13: invokespecial #9                  // Method com/sun/jersey/core/impl/provider/xml/LazySingletonContextProvider$1."<init>":(Lcom/sun/jersey/core/impl/provider/xml/LazySingletonContextProvider;)V
      16: areturn
      17: aconst_null
      18: areturn

  private T get();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rf:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: astore_1
       8: aload_1
       9: ifnonnull     35
      12: aload_0
      13: invokevirtual #11                 // Method getInstance:()Ljava/lang/Object;
      16: astore_2
      17: aload_0
      18: getfield      #5                  // Field rf:Ljava/util/concurrent/atomic/AtomicReference;
      21: aconst_null
      22: aload_2
      23: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: pop
      27: aload_0
      28: getfield      #5                  // Field rf:Ljava/util/concurrent/atomic/AtomicReference;
      31: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      34: astore_1
      35: aload_1
      36: areturn

  protected abstract T getInstance();

  public com.sun.jersey.spi.inject.Injectable getInjectable(com.sun.jersey.core.spi.component.ComponentContext, java.lang.annotation.Annotation, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #13                 // class javax/ws/rs/core/Context
       6: aload_3
       7: checkcast     #14                 // class java/lang/reflect/Type
      10: invokevirtual #15                 // Method getInjectable:(Lcom/sun/jersey/core/spi/component/ComponentContext;Ljavax/ws/rs/core/Context;Ljava/lang/reflect/Type;)Lcom/sun/jersey/spi/inject/Injectable;
      13: areturn

  static java.lang.Object access$000(com.sun.jersey.core.impl.provider.xml.LazySingletonContextProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method get:()Ljava/lang/Object;
       4: areturn
}
