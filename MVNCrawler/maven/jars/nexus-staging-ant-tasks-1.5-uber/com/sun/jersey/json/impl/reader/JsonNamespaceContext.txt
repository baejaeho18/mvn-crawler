Compiled from "JsonNamespaceContext.java"
public class com.sun.jersey.json.impl.reader.JsonNamespaceContext implements javax.xml.namespace.NamespaceContext {
  static final java.lang.String PrefixPREFIX;

  private final java.util.Map<java.lang.String, java.lang.String> ns2pMap;

  private final java.util.Map<java.lang.String, java.lang.String> p2nsMap;

  private int nsCount;

  public com.sun.jersey.json.impl.reader.JsonNamespaceContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field ns2pMap:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field p2nsMap:Ljava/util/Map;
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field nsCount:I
      31: return

  protected int getNamespaceCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nsCount:I
       4: ireturn

  public java.lang.String getNamespaceURI(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: ldc           #9                  // String
      14: aload_1
      15: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          24
      21: ldc           #9                  // String
      23: areturn
      24: aload_0
      25: getfield      #5                  // Field p2nsMap:Ljava/util/Map;
      28: aload_1
      29: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      34: ifeq          51
      37: aload_0
      38: getfield      #5                  // Field p2nsMap:Ljava/util/Map;
      41: aload_1
      42: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #13                 // class java/lang/String
      50: areturn
      51: aconst_null
      52: areturn

  public java.lang.String getPrefix(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":()V
      11: athrow
      12: ldc           #9                  // String
      14: aload_1
      15: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          24
      21: ldc           #9                  // String
      23: areturn
      24: aload_0
      25: getfield      #4                  // Field ns2pMap:Ljava/util/Map;
      28: aload_1
      29: invokeinterface #11,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      34: ifeq          51
      37: aload_0
      38: getfield      #4                  // Field ns2pMap:Ljava/util/Map;
      41: aload_1
      42: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #13                 // class java/lang/String
      50: areturn
      51: new           #14                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #16                 // String ns
      60: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: dup
      65: getfield      #6                  // Field nsCount:I
      68: iconst_1
      69: iadd
      70: dup_x1
      71: putfield      #6                  // Field nsCount:I
      74: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      77: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: astore_2
      81: aload_0
      82: getfield      #4                  // Field ns2pMap:Ljava/util/Map;
      85: aload_1
      86: aload_2
      87: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_0
      94: getfield      #5                  // Field p2nsMap:Ljava/util/Map;
      97: aload_2
      98: aload_1
      99: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     104: pop
     105: aload_2
     106: areturn

  public java.util.Iterator getPrefixes(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field p2nsMap:Ljava/util/Map;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: areturn
}
