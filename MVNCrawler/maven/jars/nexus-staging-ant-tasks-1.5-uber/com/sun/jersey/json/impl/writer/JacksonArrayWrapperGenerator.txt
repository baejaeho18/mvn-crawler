Compiled from "JacksonArrayWrapperGenerator.java"
public class com.sun.jersey.json.impl.writer.JacksonArrayWrapperGenerator extends org.codehaus.jackson.JsonGenerator {
  com.sun.jersey.json.impl.writer.JacksonArrayWrapperGenerator$State state;

  int depth;

  final org.codehaus.jackson.JsonGenerator generator;

  private boolean isClosed;

  final int arrayDepth;

  private com.sun.jersey.json.impl.writer.JacksonArrayWrapperGenerator();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lorg/codehaus/jackson/JsonGenerator;I)V
       6: return

  private com.sun.jersey.json.impl.writer.JacksonArrayWrapperGenerator(org.codehaus.jackson.JsonGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(Lorg/codehaus/jackson/JsonGenerator;I)V
       6: return

  private com.sun.jersey.json.impl.writer.JacksonArrayWrapperGenerator(org.codehaus.jackson.JsonGenerator, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/codehaus/jackson/JsonGenerator."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.START:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
       8: putfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field depth:I
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field isClosed:Z
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      26: aload_0
      27: iload_2
      28: putfield      #8                  // Field arrayDepth:I
      31: return

  public static org.codehaus.jackson.JsonGenerator createArrayWrapperGenerator(org.codehaus.jackson.JsonGenerator);
    Code:
       0: new           #9                  // class com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method "<init>":(Lorg/codehaus/jackson/JsonGenerator;)V
       8: areturn

  public static org.codehaus.jackson.JsonGenerator createArrayWrapperGenerator(org.codehaus.jackson.JsonGenerator, int);
    Code:
       0: new           #9                  // class com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator
       3: dup
       4: aload_0
       5: iload_1
       6: invokespecial #1                  // Method "<init>":(Lorg/codehaus/jackson/JsonGenerator;I)V
       9: areturn

  private void aboutToWriteANonNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field depth:I
       4: aload_0
       5: getfield      #8                  // Field arrayDepth:I
       8: if_icmpne     69
      11: aload_0
      12: getfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      15: getstatic     #3                  // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.START:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      18: if_acmpne     38
      21: aload_0
      22: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      25: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
      28: aload_0
      29: getstatic     #12                 // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.IN_THE_MIDDLE:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      32: putfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      35: goto          69
      38: aload_0
      39: getfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      42: getstatic     #13                 // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.AFTER_NULL:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      45: if_acmpne     69
      48: aload_0
      49: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      52: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
      55: aload_0
      56: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      59: invokevirtual #14                 // Method org/codehaus/jackson/JsonGenerator.writeNull:()V
      62: aload_0
      63: getstatic     #12                 // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.IN_THE_MIDDLE:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      66: putfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      69: return

  public void enableFeature(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #15                 // Method org/codehaus/jackson/JsonGenerator.enableFeature:(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
       8: return

  public org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #16                 // Method org/codehaus/jackson/JsonGenerator.enable:(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
       8: areturn

  public void disableFeature(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #17                 // Method org/codehaus/jackson/JsonGenerator.disableFeature:(Lorg/codehaus/jackson/JsonGenerator$Feature;)V
       8: return

  public org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #18                 // Method org/codehaus/jackson/JsonGenerator.disable:(Lorg/codehaus/jackson/JsonGenerator$Feature;)Lorg/codehaus/jackson/JsonGenerator;
       8: areturn

  public void setFeature(org.codehaus.jackson.JsonGenerator$Feature, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: iload_2
       6: invokevirtual #19                 // Method org/codehaus/jackson/JsonGenerator.setFeature:(Lorg/codehaus/jackson/JsonGenerator$Feature;Z)V
       9: return

  public boolean isFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #20                 // Method org/codehaus/jackson/JsonGenerator.isFeatureEnabled:(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
       8: ireturn

  public boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #21                 // Method org/codehaus/jackson/JsonGenerator.isEnabled:(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
       8: ireturn

  public org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter();
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: invokevirtual #22                 // Method org/codehaus/jackson/JsonGenerator.useDefaultPrettyPrinter:()Lorg/codehaus/jackson/JsonGenerator;
       7: areturn

  public org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec);
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #23                 // Method org/codehaus/jackson/JsonGenerator.setCodec:(Lorg/codehaus/jackson/ObjectCodec;)Lorg/codehaus/jackson/JsonGenerator;
       8: areturn

  public org.codehaus.jackson.ObjectCodec getCodec();
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: invokevirtual #24                 // Method org/codehaus/jackson/JsonGenerator.getCodec:()Lorg/codehaus/jackson/ObjectCodec;
       7: areturn

  public void writeRawValue(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #26                 // Method org/codehaus/jackson/JsonGenerator.writeRawValue:(Ljava/lang/String;)V
      12: return

  public void writeRawValue(java.lang.String, int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #27                 // Method org/codehaus/jackson/JsonGenerator.writeRawValue:(Ljava/lang/String;II)V
      14: return

  public void writeRawValue(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #28                 // Method org/codehaus/jackson/JsonGenerator.writeRaw:([CII)V
      14: return

  public void writeNumber(java.math.BigInteger) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #29                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
      12: return

  public void writeObject(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #30                 // Method org/codehaus/jackson/JsonGenerator.writeObject:(Ljava/lang/Object;)V
      12: return

  public void writeTree(org.codehaus.jackson.JsonNode) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #31                 // Method org/codehaus/jackson/JsonGenerator.writeTree:(Lorg/codehaus/jackson/JsonNode;)V
      12: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isClosed:Z
       4: ireturn

  public org.codehaus.jackson.JsonStreamContext getOutputContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: invokevirtual #32                 // Method org/codehaus/jackson/JsonGenerator.getOutputContext:()Lorg/codehaus/jackson/JsonStreamContext;
       7: areturn

  public void writeStartArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
      11: return

  public void writeEndArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: invokevirtual #33                 // Method org/codehaus/jackson/JsonGenerator.writeEndArray:()V
       7: return

  public void writeStartObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field arrayDepth:I
       4: ifle          35
       7: aload_0
       8: getfield      #5                  // Field depth:I
      11: aload_0
      12: getfield      #8                  // Field arrayDepth:I
      15: if_icmpne     35
      18: aload_0
      19: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      22: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
      25: aload_0
      26: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      29: invokevirtual #34                 // Method org/codehaus/jackson/JsonGenerator.writeStartObject:()V
      32: goto          46
      35: aload_0
      36: invokespecial #25                 // Method aboutToWriteANonNull:()V
      39: aload_0
      40: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      43: invokevirtual #34                 // Method org/codehaus/jackson/JsonGenerator.writeStartObject:()V
      46: aload_0
      47: dup
      48: getfield      #5                  // Field depth:I
      51: iconst_1
      52: iadd
      53: putfield      #5                  // Field depth:I
      56: return

  public void writeEndObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field arrayDepth:I
       4: ifle          35
       7: aload_0
       8: getfield      #5                  // Field depth:I
      11: aload_0
      12: getfield      #8                  // Field arrayDepth:I
      15: if_icmpne     35
      18: aload_0
      19: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      22: invokevirtual #35                 // Method org/codehaus/jackson/JsonGenerator.writeEndObject:()V
      25: aload_0
      26: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      29: invokevirtual #33                 // Method org/codehaus/jackson/JsonGenerator.writeEndArray:()V
      32: goto          42
      35: aload_0
      36: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      39: invokevirtual #35                 // Method org/codehaus/jackson/JsonGenerator.writeEndObject:()V
      42: aload_0
      43: dup
      44: getfield      #5                  // Field depth:I
      47: iconst_1
      48: isub
      49: putfield      #5                  // Field depth:I
      52: return

  public void writeFieldName(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #36                 // Method org/codehaus/jackson/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
       8: return

  public void writeString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #37                 // Method org/codehaus/jackson/JsonGenerator.writeString:(Ljava/lang/String;)V
      12: return

  public void writeString(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #38                 // Method org/codehaus/jackson/JsonGenerator.writeString:([CII)V
      14: return

  public void writeRawUTF8String(byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #39                 // Method org/codehaus/jackson/JsonGenerator.writeRawUTF8String:([BII)V
      14: return

  public void writeUTF8String(byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #40                 // Method org/codehaus/jackson/JsonGenerator.writeUTF8String:([BII)V
      14: return

  public void writeRaw(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #41                 // Method org/codehaus/jackson/JsonGenerator.writeRaw:(Ljava/lang/String;)V
      12: return

  public void writeRaw(java.lang.String, int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #42                 // Method org/codehaus/jackson/JsonGenerator.writeRaw:(Ljava/lang/String;II)V
      14: return

  public void writeRaw(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: iload_2
      10: iload_3
      11: invokevirtual #28                 // Method org/codehaus/jackson/JsonGenerator.writeRaw:([CII)V
      14: return

  public void writeRaw(char) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: iload_1
       9: invokevirtual #43                 // Method org/codehaus/jackson/JsonGenerator.writeRaw:(C)V
      12: return

  public void writeBinary(org.codehaus.jackson.Base64Variant, byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: aload_2
      10: iload_3
      11: iload         4
      13: invokevirtual #44                 // Method org/codehaus/jackson/JsonGenerator.writeBinary:(Lorg/codehaus/jackson/Base64Variant;[BII)V
      16: return

  public void writeNumber(int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: iload_1
       9: invokevirtual #45                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(I)V
      12: return

  public void writeNumber(long) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: lload_1
       9: invokevirtual #46                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(J)V
      12: return

  public void writeNumber(double) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: dload_1
       9: invokevirtual #47                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(D)V
      12: return

  public void writeNumber(float) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: fload_1
       9: invokevirtual #48                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(F)V
      12: return

  public void writeNumber(java.math.BigDecimal) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #49                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V
      12: return

  public void writeNumber(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: aload_1
       9: invokevirtual #50                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(Ljava/lang/String;)V
      12: return

  public void writeBoolean(boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: invokespecial #25                 // Method aboutToWriteANonNull:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: iload_1
       9: invokevirtual #51                 // Method org/codehaus/jackson/JsonGenerator.writeBoolean:(Z)V
      12: return

  public void writeNull() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: getstatic     #52                 // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$1.$SwitchMap$com$sun$jersey$json$impl$writer$JacksonArrayWrapperGenerator$State:[I
       3: aload_0
       4: getfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
       7: invokevirtual #53                 // Method com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 46
               default: 67
          }
      36: aload_0
      37: getstatic     #13                 // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.AFTER_NULL:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      40: putfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      43: goto          74
      46: aload_0
      47: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      50: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
      53: aload_0
      54: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      57: invokevirtual #14                 // Method org/codehaus/jackson/JsonGenerator.writeNull:()V
      60: aload_0
      61: getstatic     #12                 // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.IN_THE_MIDDLE:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      64: putfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      67: aload_0
      68: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      71: invokevirtual #14                 // Method org/codehaus/jackson/JsonGenerator.writeNull:()V
      74: return

  public void copyCurrentEvent(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: getstatic     #54                 // Field org/codehaus/jackson/JsonToken.VALUE_NULL:Lorg/codehaus/jackson/JsonToken;
       3: aload_1
       4: invokevirtual #55                 // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       7: if_acmpeq     25
      10: aload_0
      11: invokespecial #25                 // Method aboutToWriteANonNull:()V
      14: aload_0
      15: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      18: aload_1
      19: invokevirtual #56                 // Method org/codehaus/jackson/JsonGenerator.copyCurrentEvent:(Lorg/codehaus/jackson/JsonParser;)V
      22: goto          29
      25: aload_0
      26: invokevirtual #57                 // Method writeNull:()V
      29: return

  public void copyCurrentStructure(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       4: aload_1
       5: invokevirtual #58                 // Method org/codehaus/jackson/JsonGenerator.copyCurrentStructure:(Lorg/codehaus/jackson/JsonParser;)V
       8: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field depth:I
       4: aload_0
       5: getfield      #8                  // Field arrayDepth:I
       8: if_icmpne     72
      11: getstatic     #52                 // Field com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$1.$SwitchMap$com$sun$jersey$json$impl$writer$JacksonArrayWrapperGenerator$State:[I
      14: aload_0
      15: getfield      #4                  // Field state:Lcom/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State;
      18: invokevirtual #53                 // Method com/sun/jersey/json/impl/writer/JacksonArrayWrapperGenerator$State.ordinal:()I
      21: iaload
      22: tableswitch   { // 1 to 3
                     1: 58
                     2: 58
                     3: 48
               default: 72
          }
      48: aload_0
      49: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      52: invokevirtual #33                 // Method org/codehaus/jackson/JsonGenerator.writeEndArray:()V
      55: goto          72
      58: aload_0
      59: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      62: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator.writeStartArray:()V
      65: aload_0
      66: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      69: invokevirtual #33                 // Method org/codehaus/jackson/JsonGenerator.writeEndArray:()V
      72: aload_0
      73: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
      76: invokevirtual #59                 // Method org/codehaus/jackson/JsonGenerator.flush:()V
      79: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method flush:()V
       4: aload_0
       5: getfield      #7                  // Field generator:Lorg/codehaus/jackson/JsonGenerator;
       8: invokevirtual #61                 // Method org/codehaus/jackson/JsonGenerator.close:()V
      11: aload_0
      12: iconst_1
      13: putfield      #6                  // Field isClosed:Z
      16: return
}
