Compiled from "BaseJSONMarshaller.java"
public class com.sun.jersey.json.impl.BaseJSONMarshaller implements com.sun.jersey.api.json.JSONMarshaller,com.sun.jersey.api.json.JSONConfigurated {
  private static final java.nio.charset.Charset UTF8;

  protected final javax.xml.bind.Marshaller jaxbMarshaller;

  private final javax.xml.bind.JAXBContext jaxbContext;

  protected com.sun.jersey.api.json.JSONConfiguration jsonConfig;

  public com.sun.jersey.json.impl.BaseJSONMarshaller(javax.xml.bind.JAXBContext, com.sun.jersey.api.json.JSONConfiguration) throws javax.xml.bind.JAXBException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method javax/xml/bind/JAXBContext.createMarshaller:()Ljavax/xml/bind/Marshaller;
       5: aload_1
       6: aload_2
       7: invokespecial #2                  // Method "<init>":(Ljavax/xml/bind/Marshaller;Ljavax/xml/bind/JAXBContext;Lcom/sun/jersey/api/json/JSONConfiguration;)V
      10: return

  public com.sun.jersey.json.impl.BaseJSONMarshaller(javax.xml.bind.Marshaller, javax.xml.bind.JAXBContext, com.sun.jersey.api.json.JSONConfiguration);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #4                  // Field jsonConfig:Lcom/sun/jersey/api/json/JSONConfiguration;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field jaxbContext:Ljavax/xml/bind/JAXBContext;
      14: aload_0
      15: aload_1
      16: putfield      #6                  // Field jaxbMarshaller:Ljavax/xml/bind/Marshaller;
      19: return

  public com.sun.jersey.api.json.JSONConfiguration getJSONConfiguration();
    Code:
       0: aload_0
       1: getfield      #4                  // Field jsonConfig:Lcom/sun/jersey/api/json/JSONConfiguration;
       4: areturn

  public void marshallToJSON(java.lang.Object, java.io.OutputStream) throws javax.xml.bind.JAXBException;
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String The output stream is null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: new           #10                 // class java/io/OutputStreamWriter
      19: dup
      20: aload_2
      21: getstatic     #11                 // Field UTF8:Ljava/nio/charset/Charset;
      24: invokespecial #12                 // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      27: invokevirtual #13                 // Method marshallToJSON:(Ljava/lang/Object;Ljava/io/Writer;)V
      30: return

  public void marshallToJSON(java.lang.Object, java.io.Writer) throws javax.xml.bind.JAXBException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #14                 // String The JAXB element is null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #7                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #15                 // String The writer is null
      24: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #6                  // Field jaxbMarshaller:Ljavax/xml/bind/Marshaller;
      32: aload_1
      33: aload_0
      34: aload_2
      35: aload_1
      36: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokespecial #17                 // Method getXMLStreamWriter:(Ljava/io/Writer;Ljava/lang/Class;)Ljavax/xml/stream/XMLStreamWriter;
      42: invokeinterface #18,  3           // InterfaceMethod javax/xml/bind/Marshaller.marshal:(Ljava/lang/Object;Ljavax/xml/stream/XMLStreamWriter;)V
      47: return

  private javax.xml.stream.XMLStreamWriter getXMLStreamWriter(java.io.Writer, java.lang.Class<?>) throws javax.xml.bind.JAXBException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field jsonConfig:Lcom/sun/jersey/api/json/JSONConfiguration;
       5: aload_2
       6: aload_0
       7: getfield      #5                  // Field jaxbContext:Ljavax/xml/bind/JAXBContext;
      10: invokestatic  #19                 // Method com/sun/jersey/json/impl/Stax2JsonFactory.createWriter:(Ljava/io/Writer;Lcom/sun/jersey/api/json/JSONConfiguration;Ljava/lang/Class;Ljavax/xml/bind/JAXBContext;)Ljavax/xml/stream/XMLStreamWriter;
      13: areturn
      14: astore_3
      15: new           #21                 // class javax/xml/bind/JAXBException
      18: dup
      19: aload_3
      20: invokespecial #22                 // Method javax/xml/bind/JAXBException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public void setProperty(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException;
    Code:
       0: return

  static {};
    Code:
       0: ldc           #23                 // String UTF-8
       2: invokestatic  #24                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #11                 // Field UTF8:Ljava/nio/charset/Charset;
       8: return
}
