Compiled from "AsyncViewUniformInterface.java"
public interface com.sun.jersey.api.client.AsyncViewUniformInterface {
  public abstract <T> java.util.concurrent.Future<T> head(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> head(T);

  public abstract <T> java.util.concurrent.Future<T> options(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> options(T);

  public abstract <T> java.util.concurrent.Future<T> get(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> get(T);

  public abstract <T> java.util.concurrent.Future<T> put(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> put(T);

  public abstract <T> java.util.concurrent.Future<T> put(java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> put(T, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> post(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> post(T);

  public abstract <T> java.util.concurrent.Future<T> post(java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> post(T, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> delete(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> delete(T);

  public abstract <T> java.util.concurrent.Future<T> delete(java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> delete(T, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, T);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, T, java.lang.Object);
}
