Compiled from "AsyncUniformInterface.java"
public interface com.sun.jersey.api.client.AsyncUniformInterface {
  public abstract java.util.concurrent.Future<com.sun.jersey.api.client.ClientResponse> head();

  public abstract java.util.concurrent.Future<com.sun.jersey.api.client.ClientResponse> head(com.sun.jersey.api.client.async.ITypeListener<com.sun.jersey.api.client.ClientResponse>);

  public abstract <T> java.util.concurrent.Future<T> options(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> options(com.sun.jersey.api.client.GenericType<T>);

  public abstract <T> java.util.concurrent.Future<T> options(com.sun.jersey.api.client.async.ITypeListener<T>);

  public abstract <T> java.util.concurrent.Future<T> get(java.lang.Class<T>) throws com.sun.jersey.api.client.UniformInterfaceException;

  public abstract <T> java.util.concurrent.Future<T> get(com.sun.jersey.api.client.GenericType<T>) throws com.sun.jersey.api.client.UniformInterfaceException;

  public abstract <T> java.util.concurrent.Future<T> get(com.sun.jersey.api.client.async.ITypeListener<T>);

  public abstract java.util.concurrent.Future<?> put();

  public abstract java.util.concurrent.Future<?> put(java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> put(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> put(com.sun.jersey.api.client.GenericType<T>);

  public abstract <T> java.util.concurrent.Future<T> put(com.sun.jersey.api.client.async.ITypeListener<T>);

  public abstract <T> java.util.concurrent.Future<T> put(java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> put(com.sun.jersey.api.client.GenericType<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> put(com.sun.jersey.api.client.async.ITypeListener<T>, java.lang.Object);

  public abstract java.util.concurrent.Future<?> post();

  public abstract java.util.concurrent.Future<?> post(java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> post(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> post(com.sun.jersey.api.client.GenericType<T>);

  public abstract <T> java.util.concurrent.Future<T> post(com.sun.jersey.api.client.async.ITypeListener<T>);

  public abstract <T> java.util.concurrent.Future<T> post(java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> post(com.sun.jersey.api.client.GenericType<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> post(com.sun.jersey.api.client.async.ITypeListener<T>, java.lang.Object);

  public abstract java.util.concurrent.Future<?> delete();

  public abstract java.util.concurrent.Future<?> delete(java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> delete(java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> delete(com.sun.jersey.api.client.GenericType<T>);

  public abstract <T> java.util.concurrent.Future<T> delete(com.sun.jersey.api.client.async.ITypeListener<T>);

  public abstract <T> java.util.concurrent.Future<T> delete(java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> delete(com.sun.jersey.api.client.GenericType<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> delete(com.sun.jersey.api.client.async.ITypeListener<T>, java.lang.Object);

  public abstract java.util.concurrent.Future<?> method(java.lang.String);

  public abstract java.util.concurrent.Future<?> method(java.lang.String, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, java.lang.Class<T>);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, com.sun.jersey.api.client.GenericType<T>);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, com.sun.jersey.api.client.async.ITypeListener<T>);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, java.lang.Class<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, com.sun.jersey.api.client.GenericType<T>, java.lang.Object);

  public abstract <T> java.util.concurrent.Future<T> method(java.lang.String, com.sun.jersey.api.client.async.ITypeListener<T>, java.lang.Object);
}
