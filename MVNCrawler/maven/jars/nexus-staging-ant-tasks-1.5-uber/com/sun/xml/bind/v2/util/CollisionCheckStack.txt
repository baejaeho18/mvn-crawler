Compiled from "CollisionCheckStack.java"
public final class com.sun.xml.bind.v2.util.CollisionCheckStack<E> extends java.util.AbstractList<E> {
  private java.lang.Object[] data;

  private int[] next;

  private int size;

  private boolean useIdentity;

  private final int[] initialHash;

  static final boolean $assertionsDisabled;

  public com.sun.xml.bind.v2.util.CollisionCheckStack();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractList."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field size:I
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field useIdentity:Z
      14: aload_0
      15: bipush        17
      17: newarray       int
      19: putfield      #4                  // Field initialHash:[I
      22: aload_0
      23: bipush        16
      25: anewarray     #5                  // class java/lang/Object
      28: putfield      #6                  // Field data:[Ljava/lang/Object;
      31: aload_0
      32: bipush        16
      34: newarray       int
      36: putfield      #7                  // Field next:[I
      39: return

  public void setUseIdentity(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field useIdentity:Z
       5: return

  public boolean getUseIdentity();
    Code:
       0: aload_0
       1: getfield      #3                  // Field useIdentity:Z
       4: ireturn

  public boolean push(E);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Ljava/lang/Object;
       4: arraylength
       5: aload_0
       6: getfield      #2                  // Field size:I
       9: if_icmpne     16
      12: aload_0
      13: invokespecial #8                  // Method expandCapacity:()V
      16: aload_0
      17: getfield      #6                  // Field data:[Ljava/lang/Object;
      20: aload_0
      21: getfield      #2                  // Field size:I
      24: aload_1
      25: aastore
      26: aload_0
      27: aload_1
      28: invokespecial #9                  // Method hash:(Ljava/lang/Object;)I
      31: istore_2
      32: aload_0
      33: aload_1
      34: iload_2
      35: invokespecial #10                 // Method findDuplicate:(Ljava/lang/Object;I)Z
      38: istore_3
      39: aload_0
      40: getfield      #7                  // Field next:[I
      43: aload_0
      44: getfield      #2                  // Field size:I
      47: aload_0
      48: getfield      #4                  // Field initialHash:[I
      51: iload_2
      52: iaload
      53: iastore
      54: aload_0
      55: getfield      #4                  // Field initialHash:[I
      58: iload_2
      59: aload_0
      60: getfield      #2                  // Field size:I
      63: iconst_1
      64: iadd
      65: iastore
      66: aload_0
      67: dup
      68: getfield      #2                  // Field size:I
      71: iconst_1
      72: iadd
      73: putfield      #2                  // Field size:I
      76: iload_3
      77: ireturn

  public void pushNocheck(E);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Ljava/lang/Object;
       4: arraylength
       5: aload_0
       6: getfield      #2                  // Field size:I
       9: if_icmpne     16
      12: aload_0
      13: invokespecial #8                  // Method expandCapacity:()V
      16: aload_0
      17: getfield      #6                  // Field data:[Ljava/lang/Object;
      20: aload_0
      21: getfield      #2                  // Field size:I
      24: aload_1
      25: aastore
      26: aload_0
      27: getfield      #7                  // Field next:[I
      30: aload_0
      31: getfield      #2                  // Field size:I
      34: iconst_m1
      35: iastore
      36: aload_0
      37: dup
      38: getfield      #2                  // Field size:I
      41: iconst_1
      42: iadd
      43: putfield      #2                  // Field size:I
      46: return

  public E get(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Ljava/lang/Object;
       4: iload_1
       5: aaload
       6: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: ireturn

  private int hash(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field useIdentity:Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #11                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      11: goto          18
      14: aload_1
      15: invokevirtual #12                 // Method java/lang/Object.hashCode:()I
      18: ldc           #13                 // int 2147483647
      20: iand
      21: aload_0
      22: getfield      #4                  // Field initialHash:[I
      25: arraylength
      26: irem
      27: ireturn

  public E pop();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field size:I
       5: iconst_1
       6: isub
       7: putfield      #2                  // Field size:I
      10: aload_0
      11: getfield      #6                  // Field data:[Ljava/lang/Object;
      14: aload_0
      15: getfield      #2                  // Field size:I
      18: aaload
      19: astore_1
      20: aload_0
      21: getfield      #6                  // Field data:[Ljava/lang/Object;
      24: aload_0
      25: getfield      #2                  // Field size:I
      28: aconst_null
      29: aastore
      30: aload_0
      31: getfield      #7                  // Field next:[I
      34: aload_0
      35: getfield      #2                  // Field size:I
      38: iaload
      39: istore_2
      40: iload_2
      41: ifge          47
      44: goto          89
      47: aload_0
      48: aload_1
      49: invokespecial #9                  // Method hash:(Ljava/lang/Object;)I
      52: istore_3
      53: getstatic     #14                 // Field $assertionsDisabled:Z
      56: ifne          82
      59: aload_0
      60: getfield      #4                  // Field initialHash:[I
      63: iload_3
      64: iaload
      65: aload_0
      66: getfield      #2                  // Field size:I
      69: iconst_1
      70: iadd
      71: if_icmpeq     82
      74: new           #15                 // class java/lang/AssertionError
      77: dup
      78: invokespecial #16                 // Method java/lang/AssertionError."<init>":()V
      81: athrow
      82: aload_0
      83: getfield      #4                  // Field initialHash:[I
      86: iload_3
      87: iload_2
      88: iastore
      89: aload_1
      90: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Ljava/lang/Object;
       4: aload_0
       5: getfield      #2                  // Field size:I
       8: iconst_1
       9: isub
      10: aaload
      11: areturn

  private boolean findDuplicate(E, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialHash:[I
       4: iload_2
       5: iaload
       6: istore_3
       7: iload_3
       8: ifeq          58
      11: iinc          3, -1
      14: aload_0
      15: getfield      #6                  // Field data:[Ljava/lang/Object;
      18: iload_3
      19: aaload
      20: astore        4
      22: aload_0
      23: getfield      #3                  // Field useIdentity:Z
      26: ifeq          37
      29: aload         4
      31: aload_1
      32: if_acmpne     48
      35: iconst_1
      36: ireturn
      37: aload_1
      38: aload         4
      40: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: aload_0
      49: getfield      #7                  // Field next:[I
      52: iload_3
      53: iaload
      54: istore_3
      55: goto          7
      58: iconst_0
      59: ireturn

  private void expandCapacity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field data:[Ljava/lang/Object;
       4: arraylength
       5: istore_1
       6: iload_1
       7: iconst_2
       8: imul
       9: istore_2
      10: iload_2
      11: anewarray     #5                  // class java/lang/Object
      14: astore_3
      15: iload_2
      16: newarray       int
      18: astore        4
      20: aload_0
      21: getfield      #6                  // Field data:[Ljava/lang/Object;
      24: iconst_0
      25: aload_3
      26: iconst_0
      27: iload_1
      28: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      31: aload_0
      32: getfield      #7                  // Field next:[I
      35: iconst_0
      36: aload         4
      38: iconst_0
      39: iload_1
      40: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_0
      44: aload_3
      45: putfield      #6                  // Field data:[Ljava/lang/Object;
      48: aload_0
      49: aload         4
      51: putfield      #7                  // Field next:[I
      54: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #2                  // Field size:I
       4: ifle          20
       7: aload_0
       8: iconst_0
       9: putfield      #2                  // Field size:I
      12: aload_0
      13: getfield      #4                  // Field initialHash:[I
      16: iconst_0
      17: invokestatic  #19                 // Method java/util/Arrays.fill:([II)V
      20: return

  public java.lang.String getCycleString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #22                 // Method size:()I
      12: iconst_1
      13: isub
      14: istore_2
      15: aload_0
      16: iload_2
      17: invokevirtual #23                 // Method get:(I)Ljava/lang/Object;
      20: astore_3
      21: aload_1
      22: aload_3
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: pop
      27: aload_1
      28: ldc           #25                 // String  ->
      30: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: aload_0
      35: iinc          2, -1
      38: iload_2
      39: invokevirtual #23                 // Method get:(I)Ljava/lang/Object;
      42: astore        4
      44: aload_1
      45: aload         4
      47: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_3
      52: aload         4
      54: if_acmpne     27
      57: aload_1
      58: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  static {};
    Code:
       0: ldc_w         #28                 // class com/sun/xml/bind/v2/util/CollisionCheckStack
       3: invokevirtual #29                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #14                 // Field $assertionsDisabled:Z
      17: return
}
