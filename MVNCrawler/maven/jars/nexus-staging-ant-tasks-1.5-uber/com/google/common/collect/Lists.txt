Compiled from "Lists.java"
public final class com.google.common.collect.Lists {
  private com.google.common.collect.Lists();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <E> java.util.ArrayList<E> newArrayList();
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
       7: areturn

  public static <E> java.util.ArrayList<E> newArrayList(E...);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: arraylength
       7: invokestatic  #5                  // Method computeArrayListCapacity:(I)I
      10: istore_1
      11: new           #2                  // class java/util/ArrayList
      14: dup
      15: iload_1
      16: invokespecial #6                  // Method java/util/ArrayList."<init>":(I)V
      19: astore_2
      20: aload_2
      21: aload_0
      22: invokestatic  #7                  // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      25: pop
      26: aload_2
      27: areturn

  static int computeArrayListCapacity(int);
    Code:
       0: iload_0
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      12: ldc2_w        #9                  // long 5l
      15: iload_0
      16: i2l
      17: ladd
      18: iload_0
      19: bipush        10
      21: idiv
      22: i2l
      23: ladd
      24: invokestatic  #11                 // Method com/google/common/primitives/Ints.saturatedCast:(J)I
      27: ireturn

  public static <E> java.util.ArrayList<E> newArrayList(java.lang.Iterable<? extends E>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #12                 // class java/util/Collection
       9: ifeq          26
      12: new           #2                  // class java/util/ArrayList
      15: dup
      16: aload_0
      17: invokestatic  #13                 // Method com/google/common/collect/Collections2.cast:(Ljava/lang/Iterable;)Ljava/util/Collection;
      20: invokespecial #14                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      23: goto          35
      26: aload_0
      27: invokeinterface #15,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      32: invokestatic  #16                 // Method newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;
      35: areturn

  public static <E> java.util.ArrayList<E> newArrayList(java.util.Iterator<? extends E>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: invokestatic  #17                 // Method newArrayList:()Ljava/util/ArrayList;
       8: astore_1
       9: aload_0
      10: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          32
      18: aload_1
      19: aload_0
      20: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: invokevirtual #20                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      28: pop
      29: goto          9
      32: aload_1
      33: areturn

  public static <E> java.util.ArrayList<E> newArrayListWithCapacity(int);
    Code:
       0: iload_0
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      12: new           #2                  // class java/util/ArrayList
      15: dup
      16: iload_0
      17: invokespecial #6                  // Method java/util/ArrayList."<init>":(I)V
      20: areturn

  public static <E> java.util.ArrayList<E> newArrayListWithExpectedSize(int);
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: iload_0
       5: invokestatic  #5                  // Method computeArrayListCapacity:(I)I
       8: invokespecial #6                  // Method java/util/ArrayList."<init>":(I)V
      11: areturn

  public static <E> java.util.LinkedList<E> newLinkedList();
    Code:
       0: new           #21                 // class java/util/LinkedList
       3: dup
       4: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
       7: areturn

  public static <E> java.util.LinkedList<E> newLinkedList(java.lang.Iterable<? extends E>);
    Code:
       0: invokestatic  #23                 // Method newLinkedList:()Ljava/util/LinkedList;
       3: astore_1
       4: aload_0
       5: invokeinterface #15,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          36
      20: aload_2
      21: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: astore_3
      27: aload_1
      28: aload_3
      29: invokevirtual #24                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      32: pop
      33: goto          11
      36: aload_1
      37: areturn

  public static <E> java.util.List<E> asList(E, E[]);
    Code:
       0: new           #25                 // class com/google/common/collect/Lists$OnePlusArrayList
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #26                 // Method com/google/common/collect/Lists$OnePlusArrayList."<init>":(Ljava/lang/Object;[Ljava/lang/Object;)V
       9: areturn

  public static <E> java.util.List<E> asList(E, E, E[]);
    Code:
       0: new           #27                 // class com/google/common/collect/Lists$TwoPlusArrayList
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #28                 // Method com/google/common/collect/Lists$TwoPlusArrayList."<init>":(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)V
      10: areturn

  public static <F, T> java.util.List<T> transform(java.util.List<F>, com.google.common.base.Function<? super F, ? extends T>);
    Code:
       0: aload_0
       1: instanceof    #29                 // class java/util/RandomAccess
       4: ifeq          19
       7: new           #30                 // class com/google/common/collect/Lists$TransformingRandomAccessList
      10: dup
      11: aload_0
      12: aload_1
      13: invokespecial #31                 // Method com/google/common/collect/Lists$TransformingRandomAccessList."<init>":(Ljava/util/List;Lcom/google/common/base/Function;)V
      16: goto          28
      19: new           #32                 // class com/google/common/collect/Lists$TransformingSequentialList
      22: dup
      23: aload_0
      24: aload_1
      25: invokespecial #33                 // Method com/google/common/collect/Lists$TransformingSequentialList."<init>":(Ljava/util/List;Lcom/google/common/base/Function;)V
      28: areturn

  public static <T> java.util.List<java.util.List<T>> partition(java.util.List<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      17: aload_0
      18: instanceof    #29                 // class java/util/RandomAccess
      21: ifeq          36
      24: new           #34                 // class com/google/common/collect/Lists$RandomAccessPartition
      27: dup
      28: aload_0
      29: iload_1
      30: invokespecial #35                 // Method com/google/common/collect/Lists$RandomAccessPartition."<init>":(Ljava/util/List;I)V
      33: goto          45
      36: new           #36                 // class com/google/common/collect/Lists$Partition
      39: dup
      40: aload_0
      41: iload_1
      42: invokespecial #37                 // Method com/google/common/collect/Lists$Partition."<init>":(Ljava/util/List;I)V
      45: areturn

  public static com.google.common.collect.ImmutableList<java.lang.Character> charactersOf(java.lang.String);
    Code:
       0: new           #38                 // class com/google/common/collect/Lists$StringAsImmutableList
       3: dup
       4: aload_0
       5: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #39                 // class java/lang/String
      11: invokespecial #40                 // Method com/google/common/collect/Lists$StringAsImmutableList."<init>":(Ljava/lang/String;)V
      14: areturn

  public static java.util.List<java.lang.Character> charactersOf(java.lang.CharSequence);
    Code:
       0: new           #41                 // class com/google/common/collect/Lists$CharSequenceAsList
       3: dup
       4: aload_0
       5: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #42                 // class java/lang/CharSequence
      11: invokespecial #43                 // Method com/google/common/collect/Lists$CharSequenceAsList."<init>":(Ljava/lang/CharSequence;)V
      14: areturn

  public static <T> java.util.List<T> reverse(java.util.List<T>);
    Code:
       0: aload_0
       1: instanceof    #44                 // class com/google/common/collect/Lists$ReverseList
       4: ifeq          15
       7: aload_0
       8: checkcast     #44                 // class com/google/common/collect/Lists$ReverseList
      11: invokevirtual #45                 // Method com/google/common/collect/Lists$ReverseList.getForwardList:()Ljava/util/List;
      14: areturn
      15: aload_0
      16: instanceof    #29                 // class java/util/RandomAccess
      19: ifeq          31
      22: new           #46                 // class com/google/common/collect/Lists$RandomAccessReverseList
      25: dup
      26: aload_0
      27: invokespecial #47                 // Method com/google/common/collect/Lists$RandomAccessReverseList."<init>":(Ljava/util/List;)V
      30: areturn
      31: new           #44                 // class com/google/common/collect/Lists$ReverseList
      34: dup
      35: aload_0
      36: invokespecial #48                 // Method com/google/common/collect/Lists$ReverseList."<init>":(Ljava/util/List;)V
      39: areturn

  static int hashCodeImpl(java.util.List<?>);
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: invokeinterface #49,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          46
      18: aload_2
      19: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: bipush        31
      27: iload_1
      28: imul
      29: aload_3
      30: ifnonnull     37
      33: iconst_0
      34: goto          41
      37: aload_3
      38: invokevirtual #50                 // Method java/lang/Object.hashCode:()I
      41: iadd
      42: istore_1
      43: goto          9
      46: iload_1
      47: ireturn

  static boolean equalsImpl(java.util.List<?>, java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       5: if_acmpne     10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: instanceof    #51                 // class java/util/List
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: checkcast     #51                 // class java/util/List
      23: astore_2
      24: aload_0
      25: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      30: aload_2
      31: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
      36: if_icmpne     61
      39: aload_0
      40: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      45: aload_2
      46: invokeinterface #53,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: invokestatic  #54                 // Method com/google/common/collect/Iterators.elementsEqual:(Ljava/util/Iterator;Ljava/util/Iterator;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  static <E> boolean addAllImpl(java.util.List<E>, int, java.lang.Iterable<? extends E>);
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: iload_1
       4: invokeinterface #55,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
       9: astore        4
      11: aload_2
      12: invokeinterface #15,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      17: astore        5
      19: aload         5
      21: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          52
      29: aload         5
      31: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: astore        6
      38: aload         4
      40: aload         6
      42: invokeinterface #56,  2           // InterfaceMethod java/util/ListIterator.add:(Ljava/lang/Object;)V
      47: iconst_1
      48: istore_3
      49: goto          19
      52: iload_3
      53: ireturn

  static int indexOfImpl(java.util.List<?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #57,  1           // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #58,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z
      13: ifeq          36
      16: aload_1
      17: aload_2
      18: invokeinterface #59,  1           // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      23: invokestatic  #60                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ifeq          7
      29: aload_2
      30: invokeinterface #61,  1           // InterfaceMethod java/util/ListIterator.previousIndex:()I
      35: ireturn
      36: iconst_m1
      37: ireturn

  static int lastIndexOfImpl(java.util.List<?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #52,  1           // InterfaceMethod java/util/List.size:()I
       7: invokeinterface #55,  2           // InterfaceMethod java/util/List.listIterator:(I)Ljava/util/ListIterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #62,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z
      19: ifeq          42
      22: aload_1
      23: aload_2
      24: invokeinterface #63,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;
      29: invokestatic  #60                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifeq          13
      35: aload_2
      36: invokeinterface #64,  1           // InterfaceMethod java/util/ListIterator.nextIndex:()I
      41: ireturn
      42: iconst_m1
      43: ireturn

  static <E> java.util.ListIterator<E> listIteratorImpl(java.util.List<E>, int);
    Code:
       0: new           #65                 // class com/google/common/collect/Lists$AbstractListWrapper
       3: dup
       4: aload_0
       5: invokespecial #66                 // Method com/google/common/collect/Lists$AbstractListWrapper."<init>":(Ljava/util/List;)V
       8: iload_1
       9: invokevirtual #67                 // Method com/google/common/collect/Lists$AbstractListWrapper.listIterator:(I)Ljava/util/ListIterator;
      12: areturn

  static <E> java.util.List<E> subListImpl(java.util.List<E>, int, int);
    Code:
       0: aload_0
       1: instanceof    #29                 // class java/util/RandomAccess
       4: ifeq          19
       7: new           #68                 // class com/google/common/collect/Lists$1
      10: dup
      11: aload_0
      12: invokespecial #69                 // Method com/google/common/collect/Lists$1."<init>":(Ljava/util/List;)V
      15: astore_3
      16: goto          28
      19: new           #70                 // class com/google/common/collect/Lists$2
      22: dup
      23: aload_0
      24: invokespecial #71                 // Method com/google/common/collect/Lists$2."<init>":(Ljava/util/List;)V
      27: astore_3
      28: aload_3
      29: iload_1
      30: iload_2
      31: invokeinterface #72,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      36: areturn
}
