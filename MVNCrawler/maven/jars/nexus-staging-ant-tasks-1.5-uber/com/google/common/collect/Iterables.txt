Compiled from "Iterables.java"
public final class com.google.common.collect.Iterables {
  private com.google.common.collect.Iterables();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> java.lang.Iterable<T> unmodifiableIterable(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #4                  // class com/google/common/collect/Iterables$UnmodifiableIterable
       9: ifne          19
      12: aload_0
      13: instanceof    #5                  // class com/google/common/collect/ImmutableCollection
      16: ifeq          21
      19: aload_0
      20: areturn
      21: new           #4                  // class com/google/common/collect/Iterables$UnmodifiableIterable
      24: dup
      25: aload_0
      26: aconst_null
      27: invokespecial #6                  // Method com/google/common/collect/Iterables$UnmodifiableIterable."<init>":(Ljava/lang/Iterable;Lcom/google/common/collect/Iterables$1;)V
      30: areturn

  public static <E> java.lang.Iterable<E> unmodifiableIterable(com.google.common.collect.ImmutableCollection<E>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #7                  // class java/lang/Iterable
       7: areturn

  public static int size(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: instanceof    #8                  // class java/util/Collection
       4: ifeq          19
       7: aload_0
       8: checkcast     #8                  // class java/util/Collection
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.size:()I
      16: goto          28
      19: aload_0
      20: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      25: invokestatic  #11                 // Method com/google/common/collect/Iterators.size:(Ljava/util/Iterator;)I
      28: ireturn

  public static boolean contains(java.lang.Iterable<?>, java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #8                  // class java/util/Collection
       4: ifeq          26
       7: aload_0
       8: checkcast     #8                  // class java/util/Collection
      11: astore_2
      12: aload_2
      13: aload_1
      14: invokeinterface #12,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      19: ireturn
      20: astore_3
      21: iconst_0
      22: ireturn
      23: astore_3
      24: iconst_0
      25: ireturn
      26: aload_0
      27: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      32: aload_1
      33: invokestatic  #15                 // Method com/google/common/collect/Iterators.contains:(Ljava/util/Iterator;Ljava/lang/Object;)Z
      36: ireturn
    Exception table:
       from    to  target type
          12    19    20   Class java/lang/NullPointerException
          12    19    23   Class java/lang/ClassCastException

  public static boolean removeAll(java.lang.Iterable<?>, java.util.Collection<?>);
    Code:
       0: aload_0
       1: instanceof    #8                  // class java/util/Collection
       4: ifeq          26
       7: aload_0
       8: checkcast     #8                  // class java/util/Collection
      11: aload_1
      12: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #8                  // class java/util/Collection
      18: invokeinterface #16,  2           // InterfaceMethod java/util/Collection.removeAll:(Ljava/util/Collection;)Z
      23: goto          36
      26: aload_0
      27: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      32: aload_1
      33: invokestatic  #17                 // Method com/google/common/collect/Iterators.removeAll:(Ljava/util/Iterator;Ljava/util/Collection;)Z
      36: ireturn

  public static boolean retainAll(java.lang.Iterable<?>, java.util.Collection<?>);
    Code:
       0: aload_0
       1: instanceof    #8                  // class java/util/Collection
       4: ifeq          26
       7: aload_0
       8: checkcast     #8                  // class java/util/Collection
      11: aload_1
      12: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #8                  // class java/util/Collection
      18: invokeinterface #18,  2           // InterfaceMethod java/util/Collection.retainAll:(Ljava/util/Collection;)Z
      23: goto          36
      26: aload_0
      27: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      32: aload_1
      33: invokestatic  #19                 // Method com/google/common/collect/Iterators.retainAll:(Ljava/util/Iterator;Ljava/util/Collection;)Z
      36: ireturn

  public static <T> boolean removeIf(java.lang.Iterable<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: instanceof    #20                 // class java/util/RandomAccess
       4: ifeq          29
       7: aload_0
       8: instanceof    #21                 // class java/util/List
      11: ifeq          29
      14: aload_0
      15: checkcast     #21                 // class java/util/List
      18: aload_1
      19: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #22                 // class com/google/common/base/Predicate
      25: invokestatic  #23                 // Method removeIfFromRandomAccessList:(Ljava/util/List;Lcom/google/common/base/Predicate;)Z
      28: ireturn
      29: aload_0
      30: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      35: aload_1
      36: invokestatic  #24                 // Method com/google/common/collect/Iterators.removeIf:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Z
      39: ireturn

  private static <T> boolean removeIfFromRandomAccessList(java.util.List<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iload_2
       5: aload_0
       6: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      11: if_icmpge     72
      14: aload_0
      15: iload_2
      16: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      21: astore        4
      23: aload_1
      24: aload         4
      26: invokeinterface #27,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      31: ifne          66
      34: iload_2
      35: iload_3
      36: if_icmple     63
      39: aload_0
      40: iload_3
      41: aload         4
      43: invokeinterface #28,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: goto          63
      52: astore        5
      54: aload_0
      55: aload_1
      56: iload_3
      57: iload_2
      58: invokestatic  #30                 // Method slowRemoveIfForRemainingElements:(Ljava/util/List;Lcom/google/common/base/Predicate;II)V
      61: iconst_1
      62: ireturn
      63: iinc          3, 1
      66: iinc          2, 1
      69: goto          4
      72: aload_0
      73: iload_3
      74: aload_0
      75: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
      80: invokeinterface #31,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      85: invokeinterface #32,  1           // InterfaceMethod java/util/List.clear:()V
      90: iload_2
      91: iload_3
      92: if_icmpeq     99
      95: iconst_1
      96: goto          100
      99: iconst_0
     100: ireturn
    Exception table:
       from    to  target type
          39    49    52   Class java/lang/UnsupportedOperationException

  private static <T> void slowRemoveIfForRemainingElements(java.util.List<T>, com.google.common.base.Predicate<? super T>, int, int);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: isub
       8: istore        4
      10: iload         4
      12: iload_3
      13: if_icmple     48
      16: aload_1
      17: aload_0
      18: iload         4
      20: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: invokeinterface #27,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      30: ifeq          42
      33: aload_0
      34: iload         4
      36: invokeinterface #33,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      41: pop
      42: iinc          4, -1
      45: goto          10
      48: iload_3
      49: iconst_1
      50: isub
      51: istore        4
      53: iload         4
      55: iload_2
      56: if_icmplt     74
      59: aload_0
      60: iload         4
      62: invokeinterface #33,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      67: pop
      68: iinc          4, -1
      71: goto          53
      74: return

  public static boolean elementsEqual(java.lang.Iterable<?>, java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      12: invokestatic  #34                 // Method com/google/common/collect/Iterators.elementsEqual:(Ljava/util/Iterator;Ljava/util/Iterator;)Z
      15: ireturn

  public static java.lang.String toString(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: invokestatic  #35                 // Method com/google/common/collect/Iterators.toString:(Ljava/util/Iterator;)Ljava/lang/String;
       9: areturn

  public static <T> T getOnlyElement(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: invokestatic  #36                 // Method com/google/common/collect/Iterators.getOnlyElement:(Ljava/util/Iterator;)Ljava/lang/Object;
       9: areturn

  public static <T> T getOnlyElement(java.lang.Iterable<T>, T);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #37                 // Method com/google/common/collect/Iterators.getOnlyElement:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static <T> T[] toArray(java.lang.Iterable<? extends T>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method toCollection:(Ljava/lang/Iterable;)Ljava/util/Collection;
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.size:()I
      12: invokestatic  #39                 // Method com/google/common/collect/ObjectArrays.newArray:(Ljava/lang/Class;I)[Ljava/lang/Object;
      15: astore_3
      16: aload_2
      17: aload_3
      18: invokeinterface #40,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      23: areturn

  static java.lang.Object[] toArray(java.lang.Iterable<?>);
    Code:
       0: aload_0
       1: invokestatic  #38                 // Method toCollection:(Ljava/lang/Iterable;)Ljava/util/Collection;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
       9: areturn

  private static <E> java.util.Collection<E> toCollection(java.lang.Iterable<E>);
    Code:
       0: aload_0
       1: instanceof    #8                  // class java/util/Collection
       4: ifeq          14
       7: aload_0
       8: checkcast     #8                  // class java/util/Collection
      11: goto          23
      14: aload_0
      15: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      20: invokestatic  #42                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;
      23: areturn

  public static <T> boolean addAll(java.util.Collection<T>, java.lang.Iterable<? extends T>);
    Code:
       0: aload_1
       1: instanceof    #8                  // class java/util/Collection
       4: ifeq          20
       7: aload_1
       8: invokestatic  #43                 // Method com/google/common/collect/Collections2.cast:(Ljava/lang/Iterable;)Ljava/util/Collection;
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokeinterface #44,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      19: ireturn
      20: aload_0
      21: aload_1
      22: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      27: invokestatic  #45                 // Method com/google/common/collect/Iterators.addAll:(Ljava/util/Collection;Ljava/util/Iterator;)Z
      30: ireturn

  public static int frequency(java.lang.Iterable<?>, java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #46                 // class com/google/common/collect/Multiset
       4: ifeq          18
       7: aload_0
       8: checkcast     #46                 // class com/google/common/collect/Multiset
      11: aload_1
      12: invokeinterface #47,  2           // InterfaceMethod com/google/common/collect/Multiset.count:(Ljava/lang/Object;)I
      17: ireturn
      18: aload_0
      19: instanceof    #48                 // class java/util/Set
      22: ifeq          44
      25: aload_0
      26: checkcast     #48                 // class java/util/Set
      29: aload_1
      30: invokeinterface #49,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ireturn
      44: aload_0
      45: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      50: aload_1
      51: invokestatic  #50                 // Method com/google/common/collect/Iterators.frequency:(Ljava/util/Iterator;Ljava/lang/Object;)I
      54: ireturn

  public static <T> java.lang.Iterable<T> cycle(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #51                 // class com/google/common/collect/Iterables$1
       8: dup
       9: aload_0
      10: invokespecial #52                 // Method com/google/common/collect/Iterables$1."<init>":(Ljava/lang/Iterable;)V
      13: areturn

  public static <T> java.lang.Iterable<T> cycle(T...);
    Code:
       0: aload_0
       1: invokestatic  #53                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
       4: invokestatic  #54                 // Method cycle:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
       7: areturn

  public static <T> java.lang.Iterable<T> concat(java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_2
      11: anewarray     #7                  // class java/lang/Iterable
      14: dup
      15: iconst_0
      16: aload_0
      17: aastore
      18: dup
      19: iconst_1
      20: aload_1
      21: aastore
      22: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      25: invokestatic  #56                 // Method concat:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      28: areturn

  public static <T> java.lang.Iterable<T> concat(java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: iconst_3
      16: anewarray     #7                  // class java/lang/Iterable
      19: dup
      20: iconst_0
      21: aload_0
      22: aastore
      23: dup
      24: iconst_1
      25: aload_1
      26: aastore
      27: dup
      28: iconst_2
      29: aload_2
      30: aastore
      31: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: invokestatic  #56                 // Method concat:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      37: areturn

  public static <T> java.lang.Iterable<T> concat(java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>, java.lang.Iterable<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_3
      16: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: iconst_4
      21: anewarray     #7                  // class java/lang/Iterable
      24: dup
      25: iconst_0
      26: aload_0
      27: aastore
      28: dup
      29: iconst_1
      30: aload_1
      31: aastore
      32: dup
      33: iconst_2
      34: aload_2
      35: aastore
      36: dup
      37: iconst_3
      38: aload_3
      39: aastore
      40: invokestatic  #55                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      43: invokestatic  #56                 // Method concat:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
      46: areturn

  public static <T> java.lang.Iterable<T> concat(java.lang.Iterable<? extends T>...);
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       4: invokestatic  #56                 // Method concat:(Ljava/lang/Iterable;)Ljava/lang/Iterable;
       7: areturn

  public static <T> java.lang.Iterable<T> concat(java.lang.Iterable<? extends java.lang.Iterable<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #58                 // class com/google/common/collect/Iterables$2
       8: dup
       9: aload_0
      10: invokespecial #59                 // Method com/google/common/collect/Iterables$2."<init>":(Ljava/lang/Iterable;)V
      13: areturn

  private static <T> com.google.common.collect.UnmodifiableIterator<java.util.Iterator<? extends T>> iterators(java.lang.Iterable<? extends java.lang.Iterable<? extends T>>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: new           #60                 // class com/google/common/collect/Iterables$3
      10: dup
      11: aload_1
      12: invokespecial #61                 // Method com/google/common/collect/Iterables$3."<init>":(Ljava/util/Iterator;)V
      15: areturn

  public static <T> java.lang.Iterable<java.util.List<T>> partition(java.lang.Iterable<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #62                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      17: new           #63                 // class com/google/common/collect/Iterables$4
      20: dup
      21: aload_0
      22: iload_1
      23: invokespecial #64                 // Method com/google/common/collect/Iterables$4."<init>":(Ljava/lang/Iterable;I)V
      26: areturn

  public static <T> java.lang.Iterable<java.util.List<T>> paddedPartition(java.lang.Iterable<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #62                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      17: new           #65                 // class com/google/common/collect/Iterables$5
      20: dup
      21: aload_0
      22: iload_1
      23: invokespecial #66                 // Method com/google/common/collect/Iterables$5."<init>":(Ljava/lang/Iterable;I)V
      26: areturn

  public static <T> java.lang.Iterable<T> filter(java.lang.Iterable<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #67                 // class com/google/common/collect/Iterables$6
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #68                 // Method com/google/common/collect/Iterables$6."<init>":(Ljava/lang/Iterable;Lcom/google/common/base/Predicate;)V
      19: areturn

  public static <T> java.lang.Iterable<T> filter(java.lang.Iterable<?>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #69                 // class com/google/common/collect/Iterables$7
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #70                 // Method com/google/common/collect/Iterables$7."<init>":(Ljava/lang/Iterable;Ljava/lang/Class;)V
      19: areturn

  public static <T> boolean any(java.lang.Iterable<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #71                 // Method com/google/common/collect/Iterators.any:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Z
      10: ireturn

  public static <T> boolean all(java.lang.Iterable<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #72                 // Method com/google/common/collect/Iterators.all:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Z
      10: ireturn

  public static <T> T find(java.lang.Iterable<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #73                 // Method com/google/common/collect/Iterators.find:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Ljava/lang/Object;
      10: areturn

  public static <T> T find(java.lang.Iterable<T>, com.google.common.base.Predicate<? super T>, T);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: aload_2
       8: invokestatic  #74                 // Method com/google/common/collect/Iterators.find:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public static <T> int indexOf(java.lang.Iterable<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #75                 // Method com/google/common/collect/Iterators.indexOf:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)I
      10: ireturn

  public static <F, T> java.lang.Iterable<T> transform(java.lang.Iterable<F>, com.google.common.base.Function<? super F, ? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #76                 // class com/google/common/collect/Iterables$8
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #77                 // Method com/google/common/collect/Iterables$8."<init>":(Ljava/lang/Iterable;Lcom/google/common/base/Function;)V
      19: areturn

  public static <T> T get(java.lang.Iterable<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #21                 // class java/util/List
       9: ifeq          23
      12: aload_0
      13: checkcast     #21                 // class java/util/List
      16: iload_1
      17: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      22: areturn
      23: aload_0
      24: instanceof    #8                  // class java/util/Collection
      27: ifeq          49
      30: aload_0
      31: checkcast     #8                  // class java/util/Collection
      34: astore_2
      35: iload_1
      36: aload_2
      37: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.size:()I
      42: invokestatic  #78                 // Method com/google/common/base/Preconditions.checkElementIndex:(II)I
      45: pop
      46: goto          53
      49: iload_1
      50: invokestatic  #79                 // Method checkNonnegativeIndex:(I)V
      53: aload_0
      54: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      59: iload_1
      60: invokestatic  #80                 // Method com/google/common/collect/Iterators.get:(Ljava/util/Iterator;I)Ljava/lang/Object;
      63: areturn

  private static void checkNonnegativeIndex(int);
    Code:
       0: iload_0
       1: ifge          31
       4: new           #81                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: new           #82                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #84                 // String position cannot be negative:
      17: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: invokevirtual #86                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #87                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #88                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: return

  public static <T> T get(java.lang.Iterable<T>, int, T);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: invokestatic  #79                 // Method checkNonnegativeIndex:(I)V
       9: aload_0
      10: iload_1
      11: invokestatic  #89                 // Method get:(Ljava/lang/Iterable;I)Ljava/lang/Object;
      14: areturn
      15: astore_3
      16: aload_2
      17: areturn
    Exception table:
       from    to  target type
           9    14    15   Class java/lang/IndexOutOfBoundsException

  public static <T> T getFirst(java.lang.Iterable<T>, T);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: aload_1
       7: invokestatic  #90                 // Method com/google/common/collect/Iterators.getNext:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public static <T> T getLast(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: instanceof    #21                 // class java/util/List
       4: ifeq          34
       7: aload_0
       8: checkcast     #21                 // class java/util/List
      11: astore_1
      12: aload_1
      13: invokeinterface #91,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      18: ifeq          29
      21: new           #92                 // class java/util/NoSuchElementException
      24: dup
      25: invokespecial #93                 // Method java/util/NoSuchElementException."<init>":()V
      28: athrow
      29: aload_1
      30: invokestatic  #94                 // Method getLastInNonemptyList:(Ljava/util/List;)Ljava/lang/Object;
      33: areturn
      34: aload_0
      35: instanceof    #95                 // class java/util/SortedSet
      38: ifeq          53
      41: aload_0
      42: checkcast     #95                 // class java/util/SortedSet
      45: astore_1
      46: aload_1
      47: invokeinterface #96,  1           // InterfaceMethod java/util/SortedSet.last:()Ljava/lang/Object;
      52: areturn
      53: aload_0
      54: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      59: invokestatic  #97                 // Method com/google/common/collect/Iterators.getLast:(Ljava/util/Iterator;)Ljava/lang/Object;
      62: areturn

  public static <T> T getLast(java.lang.Iterable<T>, T);
    Code:
       0: aload_0
       1: instanceof    #8                  // class java/util/Collection
       4: ifeq          23
       7: aload_0
       8: checkcast     #8                  // class java/util/Collection
      11: astore_2
      12: aload_2
      13: invokeinterface #98,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      18: ifeq          23
      21: aload_1
      22: areturn
      23: aload_0
      24: instanceof    #21                 // class java/util/List
      27: ifeq          40
      30: aload_0
      31: checkcast     #21                 // class java/util/List
      34: astore_2
      35: aload_2
      36: invokestatic  #94                 // Method getLastInNonemptyList:(Ljava/util/List;)Ljava/lang/Object;
      39: areturn
      40: aload_0
      41: instanceof    #95                 // class java/util/SortedSet
      44: ifeq          59
      47: aload_0
      48: checkcast     #95                 // class java/util/SortedSet
      51: astore_2
      52: aload_2
      53: invokeinterface #96,  1           // InterfaceMethod java/util/SortedSet.last:()Ljava/lang/Object;
      58: areturn
      59: aload_0
      60: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      65: aload_1
      66: invokestatic  #99                 // Method com/google/common/collect/Iterators.getLast:(Ljava/util/Iterator;Ljava/lang/Object;)Ljava/lang/Object;
      69: areturn

  private static <T> T getLastInNonemptyList(java.util.List<T>);
    Code:
       0: aload_0
       1: aload_0
       2: invokeinterface #25,  1           // InterfaceMethod java/util/List.size:()I
       7: iconst_1
       8: isub
       9: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      14: areturn

  public static <T> java.lang.Iterable<T> skip(java.lang.Iterable<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #100                // String number to skip cannot be negative
      16: invokestatic  #101                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: aload_0
      20: instanceof    #21                 // class java/util/List
      23: ifeq          41
      26: aload_0
      27: checkcast     #21                 // class java/util/List
      30: astore_2
      31: new           #102                // class com/google/common/collect/Iterables$9
      34: dup
      35: iload_1
      36: aload_2
      37: invokespecial #103                // Method com/google/common/collect/Iterables$9."<init>":(ILjava/util/List;)V
      40: areturn
      41: new           #104                // class com/google/common/collect/Iterables$10
      44: dup
      45: aload_0
      46: iload_1
      47: invokespecial #105                // Method com/google/common/collect/Iterables$10."<init>":(Ljava/lang/Iterable;I)V
      50: areturn

  public static <T> java.lang.Iterable<T> limit(java.lang.Iterable<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #106                // String limit is negative
      16: invokestatic  #101                // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: new           #107                // class com/google/common/collect/Iterables$11
      22: dup
      23: aload_0
      24: iload_1
      25: invokespecial #108                // Method com/google/common/collect/Iterables$11."<init>":(Ljava/lang/Iterable;I)V
      28: areturn

  public static <T> java.lang.Iterable<T> consumingIterable(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: instanceof    #109                // class java/util/Queue
       4: ifeq          16
       7: new           #110                // class com/google/common/collect/Iterables$12
      10: dup
      11: aload_0
      12: invokespecial #111                // Method com/google/common/collect/Iterables$12."<init>":(Ljava/lang/Iterable;)V
      15: areturn
      16: aload_0
      17: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: new           #112                // class com/google/common/collect/Iterables$13
      24: dup
      25: aload_0
      26: invokespecial #113                // Method com/google/common/collect/Iterables$13."<init>":(Ljava/lang/Iterable;)V
      29: areturn

  public static <T> java.lang.Iterable<T> reverse(java.util.List<T>);
    Code:
       0: aload_0
       1: invokestatic  #114                // Method com/google/common/collect/Lists.reverse:(Ljava/util/List;)Ljava/util/List;
       4: areturn

  public static <T> boolean isEmpty(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: invokeinterface #115,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  static boolean remove(java.lang.Iterable<?>, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #115,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          37
      16: aload_2
      17: invokeinterface #116,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: aload_1
      23: invokestatic  #117                // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ifeq          7
      29: aload_2
      30: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.remove:()V
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  static com.google.common.collect.UnmodifiableIterator access$100(java.lang.Iterable);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method iterators:(Ljava/lang/Iterable;)Lcom/google/common/collect/UnmodifiableIterator;
       4: areturn
}
