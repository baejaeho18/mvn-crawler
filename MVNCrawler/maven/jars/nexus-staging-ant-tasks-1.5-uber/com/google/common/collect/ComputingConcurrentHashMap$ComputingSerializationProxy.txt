Compiled from "ComputingConcurrentHashMap.java"
final class com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy<K, V> extends com.google.common.collect.CustomConcurrentHashMap$AbstractSerializationProxy<K, V> {
  final com.google.common.base.Function<? super K, ? extends V> computingFunction;

  private static final long serialVersionUID;

  com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy(com.google.common.collect.CustomConcurrentHashMap$Strength, com.google.common.collect.CustomConcurrentHashMap$Strength, com.google.common.base.Equivalence<java.lang.Object>, com.google.common.base.Equivalence<java.lang.Object>, long, long, int, int, com.google.common.collect.MapMaker$RemovalListener<? super K, ? super V>, java.util.concurrent.ConcurrentMap<K, V>, com.google.common.base.Function<? super K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: lload         5
       8: lload         7
      10: iload         9
      12: iload         10
      14: aload         11
      16: aload         12
      18: invokespecial #1                  // Method com/google/common/collect/CustomConcurrentHashMap$AbstractSerializationProxy."<init>":(Lcom/google/common/collect/CustomConcurrentHashMap$Strength;Lcom/google/common/collect/CustomConcurrentHashMap$Strength;Lcom/google/common/base/Equivalence;Lcom/google/common/base/Equivalence;JJIILcom/google/common/collect/MapMaker$RemovalListener;Ljava/util/concurrent/ConcurrentMap;)V
      21: aload_0
      22: aload         13
      24: putfield      #2                  // Field computingFunction:Lcom/google/common/base/Function;
      27: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method writeMapTo:(Ljava/io/ObjectOutputStream;)V
       9: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method readMapMaker:(Ljava/io/ObjectInputStream;)Lcom/google/common/collect/MapMaker;
       9: astore_2
      10: aload_0
      11: aload_2
      12: aload_0
      13: getfield      #2                  // Field computingFunction:Lcom/google/common/base/Function;
      16: invokevirtual #7                  // Method com/google/common/collect/MapMaker.makeComputingMap:(Lcom/google/common/base/Function;)Ljava/util/concurrent/ConcurrentMap;
      19: putfield      #8                  // Field delegate:Ljava/util/concurrent/ConcurrentMap;
      22: aload_0
      23: aload_1
      24: invokevirtual #9                  // Method readEntries:(Ljava/io/ObjectInputStream;)V
      27: return

  java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #8                  // Field delegate:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
