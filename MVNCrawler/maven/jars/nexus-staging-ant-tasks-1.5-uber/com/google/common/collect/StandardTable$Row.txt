Compiled from "StandardTable.java"
class com.google.common.collect.StandardTable$Row extends java.util.AbstractMap<C, V> {
  final R rowKey;

  java.util.Map<C, V> backingRowMap;

  java.util.Set<C> keySet;

  java.util.Set<java.util.Map$Entry<C, V>> entrySet;

  final com.google.common.collect.StandardTable this$0;

  com.google.common.collect.StandardTable$Row(R);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractMap."<init>":()V
       9: aload_0
      10: aload_2
      11: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: putfield      #4                  // Field rowKey:Ljava/lang/Object;
      17: return

  java.util.Map<C, V> backingRowMap();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       4: ifnull        38
       7: aload_0
       8: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          50
      19: aload_0
      20: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
      23: getfield      #7                  // Field com/google/common/collect/StandardTable.backingMap:Ljava/util/Map;
      26: aload_0
      27: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      30: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      35: ifeq          50
      38: aload_0
      39: aload_0
      40: invokevirtual #9                  // Method computeBackingRowMap:()Ljava/util/Map;
      43: dup_x1
      44: putfield      #5                  // Field backingRowMap:Ljava/util/Map;
      47: goto          54
      50: aload_0
      51: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      54: areturn

  java.util.Map<C, V> computeBackingRowMap();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
       4: getfield      #7                  // Field com/google/common/collect/StandardTable.backingMap:Ljava/util/Map;
       7: aload_0
       8: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      11: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #11                 // class java/util/Map
      19: areturn

  void maintainEmptyInvariant();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method backingRowMap:()Ljava/util/Map;
       4: ifnull        41
       7: aload_0
       8: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          41
      19: aload_0
      20: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
      23: getfield      #7                  // Field com/google/common/collect/StandardTable.backingMap:Ljava/util/Map;
      26: aload_0
      27: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      30: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_0
      37: aconst_null
      38: putfield      #5                  // Field backingRowMap:Ljava/util/Map;
      41: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method backingRowMap:()Ljava/util/Map;
       4: astore_2
       5: aload_1
       6: ifnull        25
       9: aload_2
      10: ifnull        25
      13: aload_2
      14: aload_1
      15: invokestatic  #14                 // Method com/google/common/collect/Maps.safeContainsKey:(Ljava/util/Map;Ljava/lang/Object;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method backingRowMap:()Ljava/util/Map;
       4: astore_2
       5: aload_1
       6: ifnull        21
       9: aload_2
      10: ifnull        21
      13: aload_2
      14: aload_1
      15: invokestatic  #15                 // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      18: goto          22
      21: aconst_null
      22: areturn

  public V put(C, V);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      14: ifnull        41
      17: aload_0
      18: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      26: ifne          41
      29: aload_0
      30: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      33: aload_1
      34: aload_2
      35: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: areturn
      41: aload_0
      42: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
      45: aload_0
      46: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      49: aload_1
      50: aload_2
      51: invokevirtual #17                 // Method com/google/common/collect/StandardTable.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method backingRowMap:()Ljava/util/Map;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_2
      12: aload_1
      13: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      18: astore_3
      19: aload_0
      20: invokevirtual #18                 // Method maintainEmptyInvariant:()V
      23: aload_3
      24: areturn
      25: astore_2
      26: aconst_null
      27: areturn
    Exception table:
       from    to  target type
           0    10    25   Class java/lang/ClassCastException
          11    24    25   Class java/lang/ClassCastException

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method backingRowMap:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Map.clear:()V
      15: aload_0
      16: invokevirtual #18                 // Method maintainEmptyInvariant:()V
      19: return

  public java.util.Set<C> keySet();
    Code:
       0: aload_0
       1: getfield      #21                 // Field keySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     23
       9: aload_0
      10: new           #22                 // class com/google/common/collect/StandardTable$Row$1
      13: dup
      14: aload_0
      15: invokespecial #23                 // Method com/google/common/collect/StandardTable$Row$1."<init>":(Lcom/google/common/collect/StandardTable$Row;)V
      18: dup_x1
      19: putfield      #21                 // Field keySet:Ljava/util/Set;
      22: areturn
      23: aload_1
      24: areturn

  public java.util.Set<java.util.Map$Entry<C, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #24                 // Field entrySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     24
       9: aload_0
      10: new           #25                 // class com/google/common/collect/StandardTable$Row$RowEntrySet
      13: dup
      14: aload_0
      15: aconst_null
      16: invokespecial #26                 // Method com/google/common/collect/StandardTable$Row$RowEntrySet."<init>":(Lcom/google/common/collect/StandardTable$Row;Lcom/google/common/collect/StandardTable$1;)V
      19: dup_x1
      20: putfield      #24                 // Field entrySet:Ljava/util/Set;
      23: areturn
      24: aload_1
      25: areturn
}
