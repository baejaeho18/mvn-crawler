Compiled from "Iterators.java"
public final class com.google.common.collect.Iterators {
  static final com.google.common.collect.UnmodifiableIterator<java.lang.Object> EMPTY_ITERATOR;

  private static final java.util.Iterator<java.lang.Object> EMPTY_MODIFIABLE_ITERATOR;

  private com.google.common.collect.Iterators();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> com.google.common.collect.UnmodifiableIterator<T> emptyIterator();
    Code:
       0: getstatic     #2                  // Field EMPTY_ITERATOR:Lcom/google/common/collect/UnmodifiableIterator;
       3: areturn

  static <T> java.util.Iterator<T> emptyModifiableIterator();
    Code:
       0: getstatic     #3                  // Field EMPTY_MODIFIABLE_ITERATOR:Ljava/util/Iterator;
       3: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> unmodifiableIterator(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #5                  // class com/google/common/collect/UnmodifiableIterator
       9: ifeq          17
      12: aload_0
      13: checkcast     #5                  // class com/google/common/collect/UnmodifiableIterator
      16: areturn
      17: new           #6                  // class com/google/common/collect/Iterators$3
      20: dup
      21: aload_0
      22: invokespecial #7                  // Method com/google/common/collect/Iterators$3."<init>":(Ljava/util/Iterator;)V
      25: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> unmodifiableIterator(com.google.common.collect.UnmodifiableIterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #5                  // class com/google/common/collect/UnmodifiableIterator
       7: areturn

  public static int size(java.util.Iterator<?>);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       8: ifeq          24
      11: aload_0
      12: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      17: pop
      18: iinc          1, 1
      21: goto          2
      24: iload_1
      25: ireturn

  public static boolean contains(java.util.Iterator<?>, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     24
       4: aload_0
       5: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      10: ifeq          48
      13: aload_0
      14: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      19: ifnonnull     4
      22: iconst_1
      23: ireturn
      24: aload_0
      25: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          48
      33: aload_1
      34: aload_0
      35: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: invokevirtual #10                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      43: ifeq          24
      46: iconst_1
      47: ireturn
      48: iconst_0
      49: ireturn

  public static boolean removeAll(java.util.Iterator<?>, java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_1
      17: aload_0
      18: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokeinterface #11,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      28: ifeq          7
      31: aload_0
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.remove:()V
      37: iconst_1
      38: istore_2
      39: goto          7
      42: iload_2
      43: ireturn

  public static <T> boolean removeIf(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_1
      17: aload_0
      18: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokeinterface #13,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      28: ifeq          7
      31: aload_0
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.remove:()V
      37: iconst_1
      38: istore_2
      39: goto          7
      42: iload_2
      43: ireturn

  public static boolean retainAll(java.util.Iterator<?>, java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_1
      17: aload_0
      18: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokeinterface #11,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      28: ifne          7
      31: aload_0
      32: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.remove:()V
      37: iconst_1
      38: istore_2
      39: goto          7
      42: iload_2
      43: ireturn

  public static boolean elementsEqual(java.util.Iterator<?>, java.util.Iterator<?>);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          47
       9: aload_1
      10: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: astore_2
      27: aload_1
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: astore_3
      34: aload_2
      35: aload_3
      36: invokestatic  #14                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifne          44
      42: iconst_0
      43: ireturn
      44: goto          0
      47: aload_1
      48: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifne          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public static java.lang.String toString(java.util.Iterator<?>);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifne          12
       9: ldc           #15                 // String []
      11: areturn
      12: new           #16                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      19: astore_1
      20: aload_1
      21: bipush        91
      23: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_0
      37: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          64
      45: aload_1
      46: ldc           #20                 // String ,
      48: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: pop
      61: goto          36
      64: aload_1
      65: bipush        93
      67: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      70: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn

  public static <T> T getOnlyElement(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       6: astore_1
       7: aload_0
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifne          18
      16: aload_1
      17: areturn
      18: new           #16                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      25: astore_2
      26: aload_2
      27: new           #16                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #23                 // String expected one element but was: <
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: iconst_0
      51: istore_3
      52: iload_3
      53: iconst_4
      54: if_icmpge     101
      57: aload_0
      58: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          101
      66: aload_2
      67: new           #16                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #20                 // String ,
      76: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: iinc          3, 1
      98: goto          52
     101: aload_0
     102: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     107: ifeq          117
     110: aload_2
     111: ldc           #24                 // String , ...
     113: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: pop
     117: aload_2
     118: bipush        62
     120: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     123: pop
     124: new           #25                 // class java/lang/IllegalArgumentException
     127: dup
     128: aload_2
     129: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     135: athrow

  public static <T> T getOnlyElement(java.util.Iterator<T>, T);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          16
       9: aload_0
      10: invokestatic  #27                 // Method getOnlyElement:(Ljava/util/Iterator;)Ljava/lang/Object;
      13: goto          17
      16: aload_1
      17: areturn

  public static <T> T[] toArray(java.util.Iterator<? extends T>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokestatic  #28                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/util/Iterator;)Ljava/util/ArrayList;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokestatic  #29                 // Method com/google/common/collect/Iterables.toArray:(Ljava/lang/Iterable;Ljava/lang/Class;)[Ljava/lang/Object;
      10: areturn

  public static <T> boolean addAll(java.util.Collection<T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_1
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: iload_2
      17: aload_0
      18: aload_1
      19: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: invokeinterface #30,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      29: ior
      30: istore_2
      31: goto          7
      34: iload_2
      35: ireturn

  public static int frequency(java.util.Iterator<?>, java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: ifnonnull     30
       6: aload_0
       7: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      12: ifeq          58
      15: aload_0
      16: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: ifnonnull     6
      24: iinc          2, 1
      27: goto          6
      30: aload_0
      31: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          58
      39: aload_1
      40: aload_0
      41: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: invokevirtual #10                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          30
      52: iinc          2, 1
      55: goto          30
      58: iload_2
      59: ireturn

  public static <T> java.util.Iterator<T> cycle(java.lang.Iterable<T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #31                 // class com/google/common/collect/Iterators$4
       8: dup
       9: aload_0
      10: invokespecial #32                 // Method com/google/common/collect/Iterators$4."<init>":(Ljava/lang/Iterable;)V
      13: areturn

  public static <T> java.util.Iterator<T> cycle(T...);
    Code:
       0: aload_0
       1: invokestatic  #33                 // Method com/google/common/collect/Lists.newArrayList:([Ljava/lang/Object;)Ljava/util/ArrayList;
       4: invokestatic  #34                 // Method cycle:(Ljava/lang/Iterable;)Ljava/util/Iterator;
       7: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: iconst_2
      11: anewarray     #35                 // class java/util/Iterator
      14: dup
      15: iconst_0
      16: aload_0
      17: aastore
      18: dup
      19: iconst_1
      20: aload_1
      21: aastore
      22: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      25: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      30: invokestatic  #38                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      33: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>, java.util.Iterator<? extends T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: iconst_3
      16: anewarray     #35                 // class java/util/Iterator
      19: dup
      20: iconst_0
      21: aload_0
      22: aastore
      23: dup
      24: iconst_1
      25: aload_1
      26: aastore
      27: dup
      28: iconst_2
      29: aload_2
      30: aastore
      31: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      34: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: invokestatic  #38                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      42: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>, java.util.Iterator<? extends T>, java.util.Iterator<? extends T>, java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_2
      11: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_3
      16: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: iconst_4
      21: anewarray     #35                 // class java/util/Iterator
      24: dup
      25: iconst_0
      26: aload_0
      27: aastore
      28: dup
      29: iconst_1
      30: aload_1
      31: aastore
      32: dup
      33: iconst_2
      34: aload_2
      35: aastore
      36: dup
      37: iconst_3
      38: aload_3
      39: aastore
      40: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      43: invokeinterface #37,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      48: invokestatic  #38                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      51: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends T>...);
    Code:
       0: aload_0
       1: invokestatic  #39                 // Method com/google/common/collect/ImmutableList.copyOf:([Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #40                 // Method com/google/common/collect/ImmutableList.iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       7: invokestatic  #38                 // Method concat:(Ljava/util/Iterator;)Ljava/util/Iterator;
      10: areturn

  public static <T> java.util.Iterator<T> concat(java.util.Iterator<? extends java.util.Iterator<? extends T>>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #41                 // class com/google/common/collect/Iterators$5
       8: dup
       9: aload_0
      10: invokespecial #42                 // Method com/google/common/collect/Iterators$5."<init>":(Ljava/util/Iterator;)V
      13: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<java.util.List<T>> partition(java.util.Iterator<T>, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #43                 // Method partitionImpl:(Ljava/util/Iterator;IZ)Lcom/google/common/collect/UnmodifiableIterator;
       6: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<java.util.List<T>> paddedPartition(java.util.Iterator<T>, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokestatic  #43                 // Method partitionImpl:(Ljava/util/Iterator;IZ)Lcom/google/common/collect/UnmodifiableIterator;
       6: areturn

  private static <T> com.google.common.collect.UnmodifiableIterator<java.util.List<T>> partitionImpl(java.util.Iterator<T>, int, boolean);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      17: new           #45                 // class com/google/common/collect/Iterators$6
      20: dup
      21: aload_0
      22: iload_1
      23: iload_2
      24: invokespecial #46                 // Method com/google/common/collect/Iterators$6."<init>":(Ljava/util/Iterator;IZ)V
      27: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> filter(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #47                 // class com/google/common/collect/Iterators$7
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #48                 // Method com/google/common/collect/Iterators$7."<init>":(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)V
      19: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> filter(java.util.Iterator<?>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #49                 // Method com/google/common/base/Predicates.instanceOf:(Ljava/lang/Class;)Lcom/google/common/base/Predicate;
       5: invokestatic  #50                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       8: areturn

  public static <T> boolean any(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          36
      14: aload_0
      15: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: astore_2
      21: aload_1
      22: aload_2
      23: invokeinterface #13,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      28: ifeq          33
      31: iconst_1
      32: ireturn
      33: goto          5
      36: iconst_0
      37: ireturn

  public static <T> boolean all(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          36
      14: aload_0
      15: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: astore_2
      21: aload_1
      22: aload_2
      23: invokeinterface #13,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      28: ifne          33
      31: iconst_0
      32: ireturn
      33: goto          5
      36: iconst_1
      37: ireturn

  public static <T> T find(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       5: invokevirtual #51                 // Method com/google/common/collect/UnmodifiableIterator.next:()Ljava/lang/Object;
       8: areturn

  public static <T> T find(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #50                 // Method filter:(Ljava/util/Iterator;Lcom/google/common/base/Predicate;)Lcom/google/common/collect/UnmodifiableIterator;
       5: astore_3
       6: aload_3
       7: invokevirtual #52                 // Method com/google/common/collect/UnmodifiableIterator.hasNext:()Z
      10: ifeq          20
      13: aload_3
      14: invokevirtual #51                 // Method com/google/common/collect/UnmodifiableIterator.next:()Ljava/lang/Object;
      17: goto          21
      20: aload_2
      21: areturn

  public static <T> int indexOf(java.util.Iterator<T>, com.google.common.base.Predicate<? super T>);
    Code:
       0: aload_1
       1: ldc           #53                 // String predicate
       3: invokestatic  #54                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: iconst_0
       8: istore_2
       9: aload_0
      10: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          43
      18: aload_0
      19: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: aload_1
      26: aload_3
      27: invokeinterface #13,  2           // InterfaceMethod com/google/common/base/Predicate.apply:(Ljava/lang/Object;)Z
      32: ifeq          37
      35: iload_2
      36: ireturn
      37: iinc          2, 1
      40: goto          9
      43: iconst_m1
      44: ireturn

  public static <F, T> java.util.Iterator<T> transform(java.util.Iterator<F>, com.google.common.base.Function<? super F, ? extends T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #55                 // class com/google/common/collect/Iterators$8
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #56                 // Method com/google/common/collect/Iterators$8."<init>":(Ljava/util/Iterator;Lcom/google/common/base/Function;)V
      19: areturn

  public static <T> T get(java.util.Iterator<T>, int);
    Code:
       0: iload_1
       1: invokestatic  #57                 // Method checkNonnegative:(I)V
       4: iconst_0
       5: istore_2
       6: aload_0
       7: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      12: ifeq          35
      15: aload_0
      16: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      21: astore_3
      22: iload_2
      23: iinc          2, 1
      26: iload_1
      27: if_icmpne     32
      30: aload_3
      31: areturn
      32: goto          6
      35: new           #58                 // class java/lang/IndexOutOfBoundsException
      38: dup
      39: new           #16                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #59                 // String position (
      48: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: iload_1
      52: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #61                 // String ) must be less than the number of elements that remained (
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: iload_2
      61: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc           #62                 // String )
      66: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #63                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      75: athrow

  private static void checkNonnegative(int);
    Code:
       0: iload_0
       1: ifge          36
       4: new           #58                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: new           #16                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #59                 // String position (
      17: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #64                 // String ) must not be negative
      26: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #63                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: return

  public static <T> T get(java.util.Iterator<T>, int, T);
    Code:
       0: iload_1
       1: invokestatic  #57                 // Method checkNonnegative:(I)V
       4: aload_0
       5: iload_1
       6: invokestatic  #65                 // Method get:(Ljava/util/Iterator;I)Ljava/lang/Object;
       9: areturn
      10: astore_3
      11: aload_2
      12: areturn
    Exception table:
       from    to  target type
           4     9    10   Class java/lang/IndexOutOfBoundsException

  public static <T> T getNext(java.util.Iterator<T>, T);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          18
       9: aload_0
      10: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      15: goto          19
      18: aload_1
      19: areturn

  public static <T> T getLast(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       6: astore_1
       7: aload_0
       8: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifne          18
      16: aload_1
      17: areturn
      18: goto          0

  public static <T> T getLast(java.util.Iterator<T>, T);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       6: ifeq          16
       9: aload_0
      10: invokestatic  #66                 // Method getLast:(Ljava/util/Iterator;)Ljava/lang/Object;
      13: goto          17
      16: aload_1
      17: areturn

  public static <T> int skip(java.util.Iterator<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #67                 // String number to skip cannot be negative
      16: invokestatic  #68                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: iconst_0
      20: istore_2
      21: iload_2
      22: iload_1
      23: if_icmpge     48
      26: aload_0
      27: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          48
      35: aload_0
      36: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: pop
      42: iinc          2, 1
      45: goto          21
      48: iload_2
      49: ireturn

  public static <T> java.util.Iterator<T> limit(java.util.Iterator<T>, int);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #69                 // String limit is negative
      16: invokestatic  #68                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      19: new           #70                 // class com/google/common/collect/Iterators$9
      22: dup
      23: iload_1
      24: aload_0
      25: invokespecial #71                 // Method com/google/common/collect/Iterators$9."<init>":(ILjava/util/Iterator;)V
      28: areturn

  public static <T> java.util.Iterator<T> consumingIterator(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #72                 // class com/google/common/collect/Iterators$10
       8: dup
       9: aload_0
      10: invokespecial #73                 // Method com/google/common/collect/Iterators$10."<init>":(Ljava/util/Iterator;)V
      13: areturn

  static void clear(java.util.Iterator<?>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          30
      14: aload_0
      15: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: pop
      21: aload_0
      22: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.remove:()V
      27: goto          5
      30: return

  public static <T> com.google.common.collect.UnmodifiableIterator<T> forArray(T...);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #74                 // class com/google/common/collect/Iterators$11
       8: dup
       9: aload_0
      10: arraylength
      11: aload_0
      12: invokespecial #75                 // Method com/google/common/collect/Iterators$11."<init>":(I[Ljava/lang/Object;)V
      15: areturn

  static <T> com.google.common.collect.UnmodifiableIterator<T> forArray(T[], int, int);
    Code:
       0: iload_2
       1: iflt          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: invokestatic  #44                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      12: iload_1
      13: iload_2
      14: iadd
      15: istore_3
      16: iload_1
      17: iload_3
      18: aload_0
      19: arraylength
      20: invokestatic  #76                 // Method com/google/common/base/Preconditions.checkPositionIndexes:(III)V
      23: new           #77                 // class com/google/common/collect/Iterators$12
      26: dup
      27: iload_2
      28: aload_0
      29: iload_1
      30: invokespecial #78                 // Method com/google/common/collect/Iterators$12."<init>":(I[Ljava/lang/Object;I)V
      33: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> singletonIterator(T);
    Code:
       0: new           #79                 // class com/google/common/collect/Iterators$13
       3: dup
       4: aload_0
       5: invokespecial #80                 // Method com/google/common/collect/Iterators$13."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static <T> com.google.common.collect.UnmodifiableIterator<T> forEnumeration(java.util.Enumeration<T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #81                 // class com/google/common/collect/Iterators$14
       8: dup
       9: aload_0
      10: invokespecial #82                 // Method com/google/common/collect/Iterators$14."<init>":(Ljava/util/Enumeration;)V
      13: areturn

  public static <T> java.util.Enumeration<T> asEnumeration(java.util.Iterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #83                 // class com/google/common/collect/Iterators$15
       8: dup
       9: aload_0
      10: invokespecial #84                 // Method com/google/common/collect/Iterators$15."<init>":(Ljava/util/Iterator;)V
      13: areturn

  public static <T> com.google.common.collect.PeekingIterator<T> peekingIterator(java.util.Iterator<? extends T>);
    Code:
       0: aload_0
       1: instanceof    #85                 // class com/google/common/collect/Iterators$PeekingImpl
       4: ifeq          14
       7: aload_0
       8: checkcast     #85                 // class com/google/common/collect/Iterators$PeekingImpl
      11: astore_1
      12: aload_1
      13: areturn
      14: new           #85                 // class com/google/common/collect/Iterators$PeekingImpl
      17: dup
      18: aload_0
      19: invokespecial #86                 // Method com/google/common/collect/Iterators$PeekingImpl."<init>":(Ljava/util/Iterator;)V
      22: areturn

  public static <T> com.google.common.collect.PeekingIterator<T> peekingIterator(com.google.common.collect.PeekingIterator<T>);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #87                 // class com/google/common/collect/PeekingIterator
       7: areturn

  static {};
    Code:
       0: new           #88                 // class com/google/common/collect/Iterators$1
       3: dup
       4: invokespecial #89                 // Method com/google/common/collect/Iterators$1."<init>":()V
       7: putstatic     #2                  // Field EMPTY_ITERATOR:Lcom/google/common/collect/UnmodifiableIterator;
      10: new           #90                 // class com/google/common/collect/Iterators$2
      13: dup
      14: invokespecial #91                 // Method com/google/common/collect/Iterators$2."<init>":()V
      17: putstatic     #3                  // Field EMPTY_MODIFIABLE_ITERATOR:Ljava/util/Iterator;
      20: return
}
