Compiled from "Atomics.java"
public final class com.google.common.util.concurrent.Atomics {
  private com.google.common.util.concurrent.Atomics();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <V> java.util.concurrent.atomic.AtomicReference<V> newReference();
    Code:
       0: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: areturn

  public static <V> java.util.concurrent.atomic.AtomicReference<V> newReference(V);
    Code:
       0: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       8: areturn

  public static <E> java.util.concurrent.atomic.AtomicReferenceArray<E> newReferenceArray(int);
    Code:
       0: new           #5                  // class java/util/concurrent/atomic/AtomicReferenceArray
       3: dup
       4: iload_0
       5: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
       8: areturn

  public static <E> java.util.concurrent.atomic.AtomicReferenceArray<E> newReferenceArray(E[]);
    Code:
       0: new           #5                  // class java/util/concurrent/atomic/AtomicReferenceArray
       3: dup
       4: aload_0
       5: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":([Ljava/lang/Object;)V
       8: areturn
}
