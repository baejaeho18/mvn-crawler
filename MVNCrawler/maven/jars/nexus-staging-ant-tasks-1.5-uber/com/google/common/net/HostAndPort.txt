Compiled from "HostAndPort.java"
public final class com.google.common.net.HostAndPort {
  private static final int NO_PORT;

  private final java.lang.String host;

  private final int port;

  private final boolean hasBracketlessColons;

  private static final java.util.regex.Pattern BRACKET_PATTERN;

  private com.google.common.net.HostAndPort(java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field host:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field port:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field hasBracketlessColons:Z
      19: return

  public java.lang.String getHostText();
    Code:
       0: aload_0
       1: getfield      #2                  // Field host:Ljava/lang/String;
       4: areturn

  public boolean hasPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field port:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int getPort();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: ireturn

  public int getPortOrDefault(int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: goto          15
      14: iload_1
      15: ireturn

  public static com.google.common.net.HostAndPort fromParts(java.lang.String, int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_0
       8: invokestatic  #9                  // Method fromString:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;
      11: astore_2
      12: aload_2
      13: invokevirtual #5                  // Method hasPort:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      27: new           #10                 // class com/google/common/net/HostAndPort
      30: dup
      31: aload_2
      32: getfield      #2                  // Field host:Ljava/lang/String;
      35: iload_1
      36: aload_2
      37: getfield      #4                  // Field hasBracketlessColons:Z
      40: invokespecial #11                 // Method "<init>":(Ljava/lang/String;IZ)V
      43: areturn

  public static com.google.common.net.HostAndPort fromString(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aconst_null
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_0
      10: ldc           #13                 // String [
      12: invokevirtual #14                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifeq          62
      18: getstatic     #15                 // Field BRACKET_PATTERN:Ljava/util/regex/Pattern;
      21: aload_0
      22: invokevirtual #16                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      25: astore        4
      27: aload         4
      29: invokevirtual #17                 // Method java/util/regex/Matcher.matches:()Z
      32: ldc           #18                 // String Invalid bracketed host/port: %s
      34: iconst_1
      35: anewarray     #19                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_0
      41: aastore
      42: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      45: aload         4
      47: iconst_1
      48: invokevirtual #21                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      51: astore_1
      52: aload         4
      54: iconst_2
      55: invokevirtual #21                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      58: astore_2
      59: goto          122
      62: aload_0
      63: bipush        58
      65: invokevirtual #22                 // Method java/lang/String.indexOf:(I)I
      68: istore        4
      70: iload         4
      72: iflt          109
      75: aload_0
      76: bipush        58
      78: iload         4
      80: iconst_1
      81: iadd
      82: invokevirtual #23                 // Method java/lang/String.indexOf:(II)I
      85: iconst_m1
      86: if_icmpne     109
      89: aload_0
      90: iconst_0
      91: iload         4
      93: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      96: astore_1
      97: aload_0
      98: iload         4
     100: iconst_1
     101: iadd
     102: invokevirtual #25                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     105: astore_2
     106: goto          122
     109: aload_0
     110: astore_1
     111: iload         4
     113: iflt          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: istore_3
     122: iconst_m1
     123: istore        4
     125: aload_2
     126: ifnull        185
     129: aload_2
     130: invokestatic  #26                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     133: istore        4
     135: goto          167
     138: astore        5
     140: new           #28                 // class java/lang/IllegalArgumentException
     143: dup
     144: new           #29                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #31                 // String Unparseable port number:
     153: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     166: athrow
     167: iload         4
     169: invokestatic  #7                  // Method isValidPort:(I)Z
     172: ldc           #35                 // String Port number out of range: %s
     174: iconst_1
     175: anewarray     #19                 // class java/lang/Object
     178: dup
     179: iconst_0
     180: aload_0
     181: aastore
     182: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     185: new           #10                 // class com/google/common/net/HostAndPort
     188: dup
     189: aload_1
     190: iload         4
     192: iload_3
     193: invokespecial #11                 // Method "<init>":(Ljava/lang/String;IZ)V
     196: areturn
    Exception table:
       from    to  target type
         129   135   138   Class java/lang/NumberFormatException

  public com.google.common.net.HostAndPort withDefaultPort(int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_0
       8: invokevirtual #5                  // Method hasPort:()Z
      11: ifne          22
      14: aload_0
      15: getfield      #3                  // Field port:I
      18: iload_1
      19: if_icmpne     24
      22: aload_0
      23: areturn
      24: new           #10                 // class com/google/common/net/HostAndPort
      27: dup
      28: aload_0
      29: getfield      #2                  // Field host:Ljava/lang/String;
      32: iload_1
      33: aload_0
      34: getfield      #4                  // Field hasBracketlessColons:Z
      37: invokespecial #11                 // Method "<init>":(Ljava/lang/String;IZ)V
      40: areturn

  public com.google.common.net.HostAndPort requireBracketsForIPv6();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hasBracketlessColons:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #36                 // String Possible bracketless IPv6 literal: %s
      14: iconst_1
      15: anewarray     #19                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #2                  // Field host:Ljava/lang/String;
      24: aastore
      25: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class com/google/common/net/HostAndPort
      11: ifeq          61
      14: aload_1
      15: checkcast     #10                 // class com/google/common/net/HostAndPort
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field host:Ljava/lang/String;
      23: aload_2
      24: getfield      #2                  // Field host:Ljava/lang/String;
      27: invokestatic  #37                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ifeq          59
      33: aload_0
      34: getfield      #3                  // Field port:I
      37: aload_2
      38: getfield      #3                  // Field port:I
      41: if_icmpne     59
      44: aload_0
      45: getfield      #4                  // Field hasBracketlessColons:Z
      48: aload_2
      49: getfield      #4                  // Field hasBracketlessColons:Z
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #19                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field host:Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field port:I
      17: invokestatic  #38                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #4                  // Field hasBracketlessColons:Z
      27: invokestatic  #39                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      30: aastore
      31: invokestatic  #40                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      34: ireturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #2                  // Field host:Ljava/lang/String;
       8: invokevirtual #41                 // Method java/lang/String.length:()I
      11: bipush        7
      13: iadd
      14: invokespecial #42                 // Method java/lang/StringBuilder."<init>":(I)V
      17: astore_1
      18: aload_0
      19: getfield      #2                  // Field host:Ljava/lang/String;
      22: bipush        58
      24: invokevirtual #22                 // Method java/lang/String.indexOf:(I)I
      27: iflt          52
      30: aload_1
      31: bipush        91
      33: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field host:Ljava/lang/String;
      40: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: bipush        93
      45: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: pop
      49: goto          61
      52: aload_1
      53: aload_0
      54: getfield      #2                  // Field host:Ljava/lang/String;
      57: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: invokevirtual #5                  // Method hasPort:()Z
      65: ifeq          82
      68: aload_1
      69: bipush        58
      71: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #3                  // Field port:I
      78: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: pop
      82: aload_1
      83: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: areturn

  private static boolean isValidPort(int);
    Code:
       0: iload_0
       1: iflt          14
       4: iload_0
       5: ldc           #45                 // int 65535
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  static {};
    Code:
       0: ldc           #46                 // String ^\\[(.*:.*)\\](?::(\\d*))?$
       2: invokestatic  #47                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #15                 // Field BRACKET_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
