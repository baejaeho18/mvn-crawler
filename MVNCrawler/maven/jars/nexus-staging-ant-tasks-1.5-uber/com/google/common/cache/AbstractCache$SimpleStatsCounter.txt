Compiled from "AbstractCache.java"
public class com.google.common.cache.AbstractCache$SimpleStatsCounter implements com.google.common.cache.AbstractCache$StatsCounter {
  private final java.util.concurrent.atomic.AtomicLong hitCount;

  private final java.util.concurrent.atomic.AtomicLong missCount;

  private final java.util.concurrent.atomic.AtomicLong loadSuccessCount;

  private final java.util.concurrent.atomic.AtomicLong loadExceptionCount;

  private final java.util.concurrent.atomic.AtomicLong totalLoadTime;

  private final java.util.concurrent.atomic.AtomicLong evictionCount;

  public com.google.common.cache.AbstractCache$SimpleStatsCounter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field hitCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #5                  // Field missCount:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      30: dup
      31: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      34: putfield      #6                  // Field loadSuccessCount:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      41: dup
      42: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      45: putfield      #7                  // Field loadExceptionCount:Ljava/util/concurrent/atomic/AtomicLong;
      48: aload_0
      49: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      52: dup
      53: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      56: putfield      #8                  // Field totalLoadTime:Ljava/util/concurrent/atomic/AtomicLong;
      59: aload_0
      60: new           #2                  // class java/util/concurrent/atomic/AtomicLong
      63: dup
      64: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      67: putfield      #9                  // Field evictionCount:Ljava/util/concurrent/atomic/AtomicLong;
      70: return

  public void recordHit();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hitCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public void recordLoadSuccess(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field missCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #6                  // Field loadSuccessCount:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      15: pop2
      16: aload_0
      17: getfield      #8                  // Field totalLoadTime:Ljava/util/concurrent/atomic/AtomicLong;
      20: lload_1
      21: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      24: pop2
      25: return

  public void recordLoadException(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field missCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: aload_0
       9: getfield      #7                  // Field loadExceptionCount:Ljava/util/concurrent/atomic/AtomicLong;
      12: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      15: pop2
      16: aload_0
      17: getfield      #8                  // Field totalLoadTime:Ljava/util/concurrent/atomic/AtomicLong;
      20: lload_1
      21: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      24: pop2
      25: return

  public void recordConcurrentMiss();
    Code:
       0: aload_0
       1: getfield      #5                  // Field missCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public void recordEviction();
    Code:
       0: aload_0
       1: getfield      #9                  // Field evictionCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public com.google.common.cache.CacheStats snapshot();
    Code:
       0: new           #12                 // class com/google/common/cache/CacheStats
       3: dup
       4: aload_0
       5: getfield      #4                  // Field hitCount:Ljava/util/concurrent/atomic/AtomicLong;
       8: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      11: aload_0
      12: getfield      #5                  // Field missCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      18: aload_0
      19: getfield      #6                  // Field loadSuccessCount:Ljava/util/concurrent/atomic/AtomicLong;
      22: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      25: aload_0
      26: getfield      #7                  // Field loadExceptionCount:Ljava/util/concurrent/atomic/AtomicLong;
      29: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      32: aload_0
      33: getfield      #8                  // Field totalLoadTime:Ljava/util/concurrent/atomic/AtomicLong;
      36: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      39: aload_0
      40: getfield      #9                  // Field evictionCount:Ljava/util/concurrent/atomic/AtomicLong;
      43: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      46: invokespecial #14                 // Method com/google/common/cache/CacheStats."<init>":(JJJJJJ)V
      49: areturn

  public void incrementBy(com.google.common.cache.AbstractCache$StatsCounter);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod com/google/common/cache/AbstractCache$StatsCounter.snapshot:()Lcom/google/common/cache/CacheStats;
       6: astore_2
       7: aload_0
       8: getfield      #4                  // Field hitCount:Ljava/util/concurrent/atomic/AtomicLong;
      11: aload_2
      12: invokevirtual #16                 // Method com/google/common/cache/CacheStats.hitCount:()J
      15: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      18: pop2
      19: aload_0
      20: getfield      #5                  // Field missCount:Ljava/util/concurrent/atomic/AtomicLong;
      23: aload_2
      24: invokevirtual #17                 // Method com/google/common/cache/CacheStats.missCount:()J
      27: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      30: pop2
      31: aload_0
      32: getfield      #6                  // Field loadSuccessCount:Ljava/util/concurrent/atomic/AtomicLong;
      35: aload_2
      36: invokevirtual #18                 // Method com/google/common/cache/CacheStats.loadSuccessCount:()J
      39: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      42: pop2
      43: aload_0
      44: getfield      #7                  // Field loadExceptionCount:Ljava/util/concurrent/atomic/AtomicLong;
      47: aload_2
      48: invokevirtual #19                 // Method com/google/common/cache/CacheStats.loadExceptionCount:()J
      51: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      54: pop2
      55: aload_0
      56: getfield      #8                  // Field totalLoadTime:Ljava/util/concurrent/atomic/AtomicLong;
      59: aload_2
      60: invokevirtual #20                 // Method com/google/common/cache/CacheStats.totalLoadTime:()J
      63: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      66: pop2
      67: aload_0
      68: getfield      #9                  // Field evictionCount:Ljava/util/concurrent/atomic/AtomicLong;
      71: aload_2
      72: invokevirtual #21                 // Method com/google/common/cache/CacheStats.evictionCount:()J
      75: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      78: pop2
      79: return
}
