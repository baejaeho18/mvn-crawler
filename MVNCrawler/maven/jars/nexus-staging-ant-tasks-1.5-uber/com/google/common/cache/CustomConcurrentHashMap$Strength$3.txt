Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.cache.CustomConcurrentHashMap$Strength$3 extends com.google.common.cache.CustomConcurrentHashMap$Strength {
  com.google.common.cache.CustomConcurrentHashMap$Strength$3(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method com/google/common/cache/CustomConcurrentHashMap$Strength."<init>":(Ljava/lang/String;ILcom/google/common/cache/CustomConcurrentHashMap$1;)V
       7: return

  <K, V> com.google.common.cache.CustomConcurrentHashMap$ValueReference<K, V> referenceValue(com.google.common.cache.CustomConcurrentHashMap$Segment<K, V>, com.google.common.cache.CustomConcurrentHashMap$ReferenceEntry<K, V>, V);
    Code:
       0: new           #2                  // class com/google/common/cache/CustomConcurrentHashMap$WeakValueReference
       3: dup
       4: aload_1
       5: getfield      #3                  // Field com/google/common/cache/CustomConcurrentHashMap$Segment.valueReferenceQueue:Ljava/lang/ref/ReferenceQueue;
       8: aload_3
       9: aload_2
      10: invokespecial #4                  // Method com/google/common/cache/CustomConcurrentHashMap$WeakValueReference."<init>":(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;Lcom/google/common/cache/CustomConcurrentHashMap$ReferenceEntry;)V
      13: areturn

  com.google.common.base.Equivalence<java.lang.Object> defaultEquivalence();
    Code:
       0: invokestatic  #5                  // Method com/google/common/base/Equivalences.identity:()Lcom/google/common/base/Equivalence;
       3: areturn
}
