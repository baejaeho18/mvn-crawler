Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.cache.CustomConcurrentHashMap$EntryFactory$5 extends com.google.common.cache.CustomConcurrentHashMap$EntryFactory {
  com.google.common.cache.CustomConcurrentHashMap$EntryFactory$5(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method com/google/common/cache/CustomConcurrentHashMap$EntryFactory."<init>":(Ljava/lang/String;ILcom/google/common/cache/CustomConcurrentHashMap$1;)V
       7: return

  <K, V> com.google.common.cache.CustomConcurrentHashMap$ReferenceEntry<K, V> newEntry(com.google.common.cache.CustomConcurrentHashMap$Segment<K, V>, K, int, com.google.common.cache.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: new           #2                  // class com/google/common/cache/CustomConcurrentHashMap$SoftEntry
       3: dup
       4: aload_1
       5: getfield      #3                  // Field com/google/common/cache/CustomConcurrentHashMap$Segment.keyReferenceQueue:Ljava/lang/ref/ReferenceQueue;
       8: aload_2
       9: iload_3
      10: aload         4
      12: invokespecial #4                  // Method com/google/common/cache/CustomConcurrentHashMap$SoftEntry."<init>":(Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;ILcom/google/common/cache/CustomConcurrentHashMap$ReferenceEntry;)V
      15: areturn
}
