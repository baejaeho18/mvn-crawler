Compiled from "CustomConcurrentHashMap.java"
final class com.google.common.cache.CustomConcurrentHashMap$StrongValueReference<K, V> implements com.google.common.cache.CustomConcurrentHashMap$ValueReference<K, V> {
  final V referent;

  com.google.common.cache.CustomConcurrentHashMap$StrongValueReference(V);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field referent:Ljava/lang/Object;
       9: return

  public V get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field referent:Ljava/lang/Object;
       4: areturn

  public com.google.common.cache.CustomConcurrentHashMap$ReferenceEntry<K, V> getEntry();
    Code:
       0: aconst_null
       1: areturn

  public com.google.common.cache.CustomConcurrentHashMap$ValueReference<K, V> copyFor(java.lang.ref.ReferenceQueue<V>, com.google.common.cache.CustomConcurrentHashMap$ReferenceEntry<K, V>);
    Code:
       0: aload_0
       1: areturn

  public boolean isComputingReference();
    Code:
       0: iconst_0
       1: ireturn

  public V waitForValue();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method get:()Ljava/lang/Object;
       4: areturn

  public void notifyNewValue(V);
    Code:
       0: return
}
