Compiled from "Splitter.java"
abstract class com.google.common.base.Splitter$SplittingIterator extends com.google.common.base.Splitter$AbstractIterator<java.lang.String> {
  final java.lang.CharSequence toSplit;

  final com.google.common.base.CharMatcher trimmer;

  final boolean omitEmptyStrings;

  int offset;

  int limit;

  abstract int separatorStart(int);

  abstract int separatorEnd(int);

  protected com.google.common.base.Splitter$SplittingIterator(com.google.common.base.Splitter, java.lang.CharSequence);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method com/google/common/base/Splitter$AbstractIterator."<init>":(Lcom/google/common/base/Splitter$1;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field offset:I
      10: aload_0
      11: aload_1
      12: invokestatic  #3                  // Method com/google/common/base/Splitter.access$300:(Lcom/google/common/base/Splitter;)Lcom/google/common/base/CharMatcher;
      15: putfield      #4                  // Field trimmer:Lcom/google/common/base/CharMatcher;
      18: aload_0
      19: aload_1
      20: invokestatic  #5                  // Method com/google/common/base/Splitter.access$400:(Lcom/google/common/base/Splitter;)Z
      23: putfield      #6                  // Field omitEmptyStrings:Z
      26: aload_0
      27: aload_1
      28: invokestatic  #7                  // Method com/google/common/base/Splitter.access$500:(Lcom/google/common/base/Splitter;)I
      31: putfield      #8                  // Field limit:I
      34: aload_0
      35: aload_2
      36: putfield      #9                  // Field toSplit:Ljava/lang/CharSequence;
      39: return

  protected java.lang.String computeNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field offset:I
       4: iconst_m1
       5: if_icmpeq     216
       8: aload_0
       9: getfield      #2                  // Field offset:I
      12: istore_1
      13: aload_0
      14: aload_0
      15: getfield      #2                  // Field offset:I
      18: invokevirtual #10                 // Method separatorStart:(I)I
      21: istore_3
      22: iload_3
      23: iconst_m1
      24: if_icmpne     45
      27: aload_0
      28: getfield      #9                  // Field toSplit:Ljava/lang/CharSequence;
      31: invokeinterface #11,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      36: istore_2
      37: aload_0
      38: iconst_m1
      39: putfield      #2                  // Field offset:I
      42: goto          56
      45: iload_3
      46: istore_2
      47: aload_0
      48: aload_0
      49: iload_3
      50: invokevirtual #12                 // Method separatorEnd:(I)I
      53: putfield      #2                  // Field offset:I
      56: iload_1
      57: iload_2
      58: if_icmpge     87
      61: aload_0
      62: getfield      #4                  // Field trimmer:Lcom/google/common/base/CharMatcher;
      65: aload_0
      66: getfield      #9                  // Field toSplit:Ljava/lang/CharSequence;
      69: iload_1
      70: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      75: invokevirtual #14                 // Method com/google/common/base/CharMatcher.matches:(C)Z
      78: ifeq          87
      81: iinc          1, 1
      84: goto          56
      87: iload_2
      88: iload_1
      89: if_icmple     120
      92: aload_0
      93: getfield      #4                  // Field trimmer:Lcom/google/common/base/CharMatcher;
      96: aload_0
      97: getfield      #9                  // Field toSplit:Ljava/lang/CharSequence;
     100: iload_2
     101: iconst_1
     102: isub
     103: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     108: invokevirtual #14                 // Method com/google/common/base/CharMatcher.matches:(C)Z
     111: ifeq          120
     114: iinc          2, -1
     117: goto          87
     120: aload_0
     121: getfield      #6                  // Field omitEmptyStrings:Z
     124: ifeq          135
     127: iload_1
     128: iload_2
     129: if_icmpne     135
     132: goto          0
     135: aload_0
     136: getfield      #8                  // Field limit:I
     139: iconst_1
     140: if_icmpne     191
     143: aload_0
     144: getfield      #9                  // Field toSplit:Ljava/lang/CharSequence;
     147: invokeinterface #11,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     152: istore_2
     153: aload_0
     154: iconst_m1
     155: putfield      #2                  // Field offset:I
     158: iload_2
     159: iload_1
     160: if_icmple     201
     163: aload_0
     164: getfield      #4                  // Field trimmer:Lcom/google/common/base/CharMatcher;
     167: aload_0
     168: getfield      #9                  // Field toSplit:Ljava/lang/CharSequence;
     171: iload_2
     172: iconst_1
     173: isub
     174: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     179: invokevirtual #14                 // Method com/google/common/base/CharMatcher.matches:(C)Z
     182: ifeq          201
     185: iinc          2, -1
     188: goto          158
     191: aload_0
     192: dup
     193: getfield      #8                  // Field limit:I
     196: iconst_1
     197: isub
     198: putfield      #8                  // Field limit:I
     201: aload_0
     202: getfield      #9                  // Field toSplit:Ljava/lang/CharSequence;
     205: iload_1
     206: iload_2
     207: invokeinterface #15,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
     212: invokevirtual #16                 // Method java/lang/Object.toString:()Ljava/lang/String;
     215: areturn
     216: aload_0
     217: invokevirtual #17                 // Method endOfData:()Ljava/lang/Object;
     220: checkcast     #18                 // class java/lang/String
     223: areturn

  protected java.lang.Object computeNext();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method computeNext:()Ljava/lang/String;
       4: areturn
}
