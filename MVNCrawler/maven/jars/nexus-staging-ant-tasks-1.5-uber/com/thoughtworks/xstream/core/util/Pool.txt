Compiled from "Pool.java"
public class com.thoughtworks.xstream.core.util.Pool {
  private final int initialPoolSize;

  private final int maxPoolSize;

  private final com.thoughtworks.xstream.core.util.Pool$Factory factory;

  private transient java.lang.Object[] pool;

  private transient int nextAvailable;

  private transient java.lang.Object mutex;

  public com.thoughtworks.xstream.core.util.Pool(int, int, com.thoughtworks.xstream.core.util.Pool$Factory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/Object
       8: dup
       9: invokespecial #1                  // Method java/lang/Object."<init>":()V
      12: putfield      #3                  // Field mutex:Ljava/lang/Object;
      15: aload_0
      16: iload_1
      17: putfield      #4                  // Field initialPoolSize:I
      20: aload_0
      21: iload_2
      22: putfield      #5                  // Field maxPoolSize:I
      25: aload_0
      26: aload_3
      27: putfield      #6                  // Field factory:Lcom/thoughtworks/xstream/core/util/Pool$Factory;
      30: return

  public java.lang.Object fetchFromPool();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mutex:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field pool:[Ljava/lang/Object;
      11: ifnonnull     56
      14: aload_0
      15: aload_0
      16: getfield      #5                  // Field maxPoolSize:I
      19: anewarray     #2                  // class java/lang/Object
      22: putfield      #7                  // Field pool:[Ljava/lang/Object;
      25: aload_0
      26: aload_0
      27: getfield      #4                  // Field initialPoolSize:I
      30: putfield      #8                  // Field nextAvailable:I
      33: aload_0
      34: getfield      #8                  // Field nextAvailable:I
      37: ifle          56
      40: aload_0
      41: aload_0
      42: getfield      #6                  // Field factory:Lcom/thoughtworks/xstream/core/util/Pool$Factory;
      45: invokeinterface #9,  1            // InterfaceMethod com/thoughtworks/xstream/core/util/Pool$Factory.newInstance:()Ljava/lang/Object;
      50: invokevirtual #10                 // Method putInPool:(Ljava/lang/Object;)V
      53: goto          33
      56: aload_0
      57: getfield      #8                  // Field nextAvailable:I
      60: aload_0
      61: getfield      #5                  // Field maxPoolSize:I
      64: if_icmpne     108
      67: aload_0
      68: getfield      #3                  // Field mutex:Ljava/lang/Object;
      71: invokevirtual #11                 // Method java/lang/Object.wait:()V
      74: goto          56
      77: astore_3
      78: new           #13                 // class java/lang/RuntimeException
      81: dup
      82: new           #14                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #16                 // String Interrupted whilst waiting for a free item in the pool :
      91: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_3
      95: invokevirtual #18                 // Method java/lang/InterruptedException.getMessage:()Ljava/lang/String;
      98: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: aload_0
     109: getfield      #7                  // Field pool:[Ljava/lang/Object;
     112: aload_0
     113: dup
     114: getfield      #8                  // Field nextAvailable:I
     117: dup_x1
     118: iconst_1
     119: iadd
     120: putfield      #8                  // Field nextAvailable:I
     123: aaload
     124: astore_1
     125: aload_1
     126: ifnonnull     154
     129: aload_0
     130: getfield      #6                  // Field factory:Lcom/thoughtworks/xstream/core/util/Pool$Factory;
     133: invokeinterface #9,  1            // InterfaceMethod com/thoughtworks/xstream/core/util/Pool$Factory.newInstance:()Ljava/lang/Object;
     138: astore_1
     139: aload_0
     140: aload_1
     141: invokevirtual #10                 // Method putInPool:(Ljava/lang/Object;)V
     144: aload_0
     145: dup
     146: getfield      #8                  // Field nextAvailable:I
     149: iconst_1
     150: iadd
     151: putfield      #8                  // Field nextAvailable:I
     154: aload_2
     155: monitorexit
     156: goto          166
     159: astore        4
     161: aload_2
     162: monitorexit
     163: aload         4
     165: athrow
     166: aload_1
     167: areturn
    Exception table:
       from    to  target type
          67    74    77   Class java/lang/InterruptedException
           7   156   159   any
         159   163   159   any

  protected void putInPool(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mutex:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field pool:[Ljava/lang/Object;
      11: aload_0
      12: dup
      13: getfield      #8                  // Field nextAvailable:I
      16: iconst_1
      17: isub
      18: dup_x1
      19: putfield      #8                  // Field nextAvailable:I
      22: aload_1
      23: aastore
      24: aload_0
      25: getfield      #3                  // Field mutex:Ljava/lang/Object;
      28: invokevirtual #21                 // Method java/lang/Object.notify:()V
      31: aload_2
      32: monitorexit
      33: goto          41
      36: astore_3
      37: aload_2
      38: monitorexit
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    33    36   any
          36    39    36   any

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: new           #2                  // class java/lang/Object
       4: dup
       5: invokespecial #1                  // Method java/lang/Object."<init>":()V
       8: putfield      #3                  // Field mutex:Ljava/lang/Object;
      11: aload_0
      12: areturn
}
