Compiled from "TreeMarshaller.java"
public class com.thoughtworks.xstream.core.TreeMarshaller implements com.thoughtworks.xstream.converters.MarshallingContext {
  protected com.thoughtworks.xstream.io.HierarchicalStreamWriter writer;

  protected com.thoughtworks.xstream.converters.ConverterLookup converterLookup;

  private com.thoughtworks.xstream.mapper.Mapper mapper;

  private com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects;

  private com.thoughtworks.xstream.converters.DataHolder dataHolder;

  public com.thoughtworks.xstream.core.TreeMarshaller(com.thoughtworks.xstream.io.HierarchicalStreamWriter, com.thoughtworks.xstream.converters.ConverterLookup, com.thoughtworks.xstream.mapper.Mapper);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class com/thoughtworks/xstream/core/util/ObjectIdDictionary
       8: dup
       9: invokespecial #3                  // Method com/thoughtworks/xstream/core/util/ObjectIdDictionary."<init>":()V
      12: putfield      #4                  // Field parentObjects:Lcom/thoughtworks/xstream/core/util/ObjectIdDictionary;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field writer:Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field converterLookup:Lcom/thoughtworks/xstream/converters/ConverterLookup;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field mapper:Lcom/thoughtworks/xstream/mapper/Mapper;
      30: return

  public void convertAnother(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #8                  // Method convertAnother:(Ljava/lang/Object;Lcom/thoughtworks/xstream/converters/Converter;)V
       6: return

  public void convertAnother(java.lang.Object, com.thoughtworks.xstream.converters.Converter);
    Code:
       0: aload_2
       1: ifnonnull     21
       4: aload_0
       5: getfield      #6                  // Field converterLookup:Lcom/thoughtworks/xstream/converters/ConverterLookup;
       8: aload_1
       9: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokeinterface #10,  2           // InterfaceMethod com/thoughtworks/xstream/converters/ConverterLookup.lookupConverterForType:(Ljava/lang/Class;)Lcom/thoughtworks/xstream/converters/Converter;
      17: astore_2
      18: goto          72
      21: aload_2
      22: aload_1
      23: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokeinterface #11,  2           // InterfaceMethod com/thoughtworks/xstream/converters/Converter.canConvert:(Ljava/lang/Class;)Z
      31: ifne          72
      34: new           #12                 // class com/thoughtworks/xstream/converters/ConversionException
      37: dup
      38: ldc           #13                 // String Explicit selected converter cannot handle item
      40: invokespecial #14                 // Method com/thoughtworks/xstream/converters/ConversionException."<init>":(Ljava/lang/String;)V
      43: astore_3
      44: aload_3
      45: ldc           #15                 // String item-type
      47: aload_1
      48: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      51: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      54: invokevirtual #17                 // Method com/thoughtworks/xstream/converters/ConversionException.add:(Ljava/lang/String;Ljava/lang/String;)V
      57: aload_3
      58: ldc           #18                 // String converter-type
      60: aload_2
      61: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      64: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      67: invokevirtual #17                 // Method com/thoughtworks/xstream/converters/ConversionException.add:(Ljava/lang/String;Ljava/lang/String;)V
      70: aload_3
      71: athrow
      72: aload_0
      73: aload_1
      74: aload_2
      75: invokevirtual #19                 // Method convert:(Ljava/lang/Object;Lcom/thoughtworks/xstream/converters/Converter;)V
      78: return

  protected void convert(java.lang.Object, com.thoughtworks.xstream.converters.Converter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parentObjects:Lcom/thoughtworks/xstream/core/util/ObjectIdDictionary;
       4: aload_1
       5: invokevirtual #20                 // Method com/thoughtworks/xstream/core/util/ObjectIdDictionary.containsId:(Ljava/lang/Object;)Z
       8: ifeq          49
      11: new           #21                 // class com/thoughtworks/xstream/core/TreeMarshaller$CircularReferenceException
      14: dup
      15: ldc           #22                 // String Recursive reference to parent object
      17: invokespecial #23                 // Method com/thoughtworks/xstream/core/TreeMarshaller$CircularReferenceException."<init>":(Ljava/lang/String;)V
      20: astore_3
      21: aload_3
      22: ldc           #15                 // String item-type
      24: aload_1
      25: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokevirtual #17                 // Method com/thoughtworks/xstream/converters/ConversionException.add:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload_3
      35: ldc           #18                 // String converter-type
      37: aload_2
      38: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      41: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      44: invokevirtual #17                 // Method com/thoughtworks/xstream/converters/ConversionException.add:(Ljava/lang/String;Ljava/lang/String;)V
      47: aload_3
      48: athrow
      49: aload_0
      50: getfield      #4                  // Field parentObjects:Lcom/thoughtworks/xstream/core/util/ObjectIdDictionary;
      53: aload_1
      54: ldc           #24                 // String
      56: invokevirtual #25                 // Method com/thoughtworks/xstream/core/util/ObjectIdDictionary.associateId:(Ljava/lang/Object;Ljava/lang/Object;)V
      59: aload_2
      60: aload_1
      61: aload_0
      62: getfield      #5                  // Field writer:Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;
      65: aload_0
      66: invokeinterface #26,  4           // InterfaceMethod com/thoughtworks/xstream/converters/Converter.marshal:(Ljava/lang/Object;Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;Lcom/thoughtworks/xstream/converters/MarshallingContext;)V
      71: aload_0
      72: getfield      #4                  // Field parentObjects:Lcom/thoughtworks/xstream/core/util/ObjectIdDictionary;
      75: aload_1
      76: invokevirtual #27                 // Method com/thoughtworks/xstream/core/util/ObjectIdDictionary.removeId:(Ljava/lang/Object;)V
      79: return

  public void start(java.lang.Object, com.thoughtworks.xstream.converters.DataHolder);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #28                 // Field dataHolder:Lcom/thoughtworks/xstream/converters/DataHolder;
       5: aload_1
       6: ifnonnull     40
       9: aload_0
      10: getfield      #5                  // Field writer:Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;
      13: aload_0
      14: getfield      #7                  // Field mapper:Lcom/thoughtworks/xstream/mapper/Mapper;
      17: aconst_null
      18: invokeinterface #29,  2           // InterfaceMethod com/thoughtworks/xstream/mapper/Mapper.serializedClass:(Ljava/lang/Class;)Ljava/lang/String;
      23: invokeinterface #30,  2           // InterfaceMethod com/thoughtworks/xstream/io/HierarchicalStreamWriter.startNode:(Ljava/lang/String;)V
      28: aload_0
      29: getfield      #5                  // Field writer:Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;
      32: invokeinterface #31,  1           // InterfaceMethod com/thoughtworks/xstream/io/HierarchicalStreamWriter.endNode:()V
      37: goto          78
      40: aload_0
      41: getfield      #5                  // Field writer:Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;
      44: aload_0
      45: getfield      #7                  // Field mapper:Lcom/thoughtworks/xstream/mapper/Mapper;
      48: aload_1
      49: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      52: invokeinterface #29,  2           // InterfaceMethod com/thoughtworks/xstream/mapper/Mapper.serializedClass:(Ljava/lang/Class;)Ljava/lang/String;
      57: aload_1
      58: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokestatic  #32                 // Method com/thoughtworks/xstream/io/ExtendedHierarchicalStreamWriterHelper.startNode:(Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;Ljava/lang/String;Ljava/lang/Class;)V
      64: aload_0
      65: aload_1
      66: invokevirtual #33                 // Method convertAnother:(Ljava/lang/Object;)V
      69: aload_0
      70: getfield      #5                  // Field writer:Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;
      73: invokeinterface #31,  1           // InterfaceMethod com/thoughtworks/xstream/io/HierarchicalStreamWriter.endNode:()V
      78: return

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method lazilyCreateDataHolder:()V
       4: aload_0
       5: getfield      #28                 // Field dataHolder:Lcom/thoughtworks/xstream/converters/DataHolder;
       8: aload_1
       9: invokeinterface #35,  2           // InterfaceMethod com/thoughtworks/xstream/converters/DataHolder.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method lazilyCreateDataHolder:()V
       4: aload_0
       5: getfield      #28                 // Field dataHolder:Lcom/thoughtworks/xstream/converters/DataHolder;
       8: aload_1
       9: aload_2
      10: invokeinterface #36,  3           // InterfaceMethod com/thoughtworks/xstream/converters/DataHolder.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      15: return

  public java.util.Iterator keys();
    Code:
       0: aload_0
       1: invokespecial #34                 // Method lazilyCreateDataHolder:()V
       4: aload_0
       5: getfield      #28                 // Field dataHolder:Lcom/thoughtworks/xstream/converters/DataHolder;
       8: invokeinterface #37,  1           // InterfaceMethod com/thoughtworks/xstream/converters/DataHolder.keys:()Ljava/util/Iterator;
      13: areturn

  private void lazilyCreateDataHolder();
    Code:
       0: aload_0
       1: getfield      #28                 // Field dataHolder:Lcom/thoughtworks/xstream/converters/DataHolder;
       4: ifnonnull     18
       7: aload_0
       8: new           #38                 // class com/thoughtworks/xstream/core/MapBackedDataHolder
      11: dup
      12: invokespecial #39                 // Method com/thoughtworks/xstream/core/MapBackedDataHolder."<init>":()V
      15: putfield      #28                 // Field dataHolder:Lcom/thoughtworks/xstream/converters/DataHolder;
      18: return

  protected com.thoughtworks.xstream.mapper.Mapper getMapper();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mapper:Lcom/thoughtworks/xstream/mapper/Mapper;
       4: areturn
}
