Compiled from "WeakCache.java"
public class com.thoughtworks.xstream.core.util.WeakCache extends java.util.AbstractMap {
  private final java.util.Map map;

  public com.thoughtworks.xstream.core.util.WeakCache();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/WeakHashMap
       4: dup
       5: invokespecial #2                  // Method java/util/WeakHashMap."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljava/util/Map;)V
      11: return

  public com.thoughtworks.xstream.core.util.WeakCache(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field map:Ljava/util/Map;
       9: return

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class java/lang/ref/Reference
      13: astore_2
      14: aload_2
      15: ifnull        25
      18: aload_2
      19: invokevirtual #8                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      22: goto          26
      25: aconst_null
      26: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: aload_0
       6: aload_2
       7: invokevirtual #9                  // Method createReference:(Ljava/lang/Object;)Ljava/lang/ref/Reference;
      10: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #7                  // class java/lang/ref/Reference
      18: astore_3
      19: aload_3
      20: ifnonnull     27
      23: aconst_null
      24: goto          31
      27: aload_3
      28: invokevirtual #8                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      31: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class java/lang/ref/Reference
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: aconst_null
      19: goto          26
      22: aload_2
      23: invokevirtual #8                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      26: areturn

  protected java.lang.ref.Reference createReference(java.lang.Object);
    Code:
       0: new           #12                 // class java/lang/ref/WeakReference
       3: dup
       4: aload_1
       5: invokespecial #13                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
       8: areturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: new           #14                 // class com/thoughtworks/xstream/core/util/WeakCache$1
       4: dup
       5: aload_0
       6: aload_1
       7: invokespecial #15                 // Method com/thoughtworks/xstream/core/util/WeakCache$1."<init>":(Lcom/thoughtworks/xstream/core/util/WeakCache;Ljava/lang/Object;)V
      10: iconst_0
      11: invokespecial #16                 // Method iterate:(Lcom/thoughtworks/xstream/core/util/WeakCache$Visitor;I)Ljava/lang/Object;
      14: checkcast     #17                 // class java/lang/Boolean
      17: astore_2
      18: aload_2
      19: getstatic     #18                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      22: if_acmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Map.size:()I
       9: ifne          14
      12: iconst_0
      13: ireturn
      14: iconst_1
      15: newarray       int
      17: astore_1
      18: aload_1
      19: iconst_0
      20: iconst_0
      21: iastore
      22: aload_0
      23: new           #20                 // class com/thoughtworks/xstream/core/util/WeakCache$2
      26: dup
      27: aload_0
      28: aload_1
      29: invokespecial #21                 // Method com/thoughtworks/xstream/core/util/WeakCache$2."<init>":(Lcom/thoughtworks/xstream/core/util/WeakCache;[I)V
      32: iconst_0
      33: invokespecial #16                 // Method iterate:(Lcom/thoughtworks/xstream/core/util/WeakCache$Visitor;I)Ljava/lang/Object;
      36: pop
      37: aload_1
      38: iconst_0
      39: iaload
      40: ireturn

  public java.util.Collection values();
    Code:
       0: new           #22                 // class java/util/ArrayList
       3: dup
       4: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field map:Ljava/util/Map;
      12: invokeinterface #19,  1           // InterfaceMethod java/util/Map.size:()I
      17: ifeq          35
      20: aload_0
      21: new           #24                 // class com/thoughtworks/xstream/core/util/WeakCache$3
      24: dup
      25: aload_0
      26: aload_1
      27: invokespecial #25                 // Method com/thoughtworks/xstream/core/util/WeakCache$3."<init>":(Lcom/thoughtworks/xstream/core/util/WeakCache;Ljava/util/Collection;)V
      30: iconst_0
      31: invokespecial #16                 // Method iterate:(Lcom/thoughtworks/xstream/core/util/WeakCache$Visitor;I)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: areturn

  public java.util.Set entrySet();
    Code:
       0: new           #26                 // class java/util/HashSet
       3: dup
       4: invokespecial #27                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field map:Ljava/util/Map;
      12: invokeinterface #19,  1           // InterfaceMethod java/util/Map.size:()I
      17: ifeq          35
      20: aload_0
      21: new           #28                 // class com/thoughtworks/xstream/core/util/WeakCache$4
      24: dup
      25: aload_0
      26: aload_1
      27: invokespecial #29                 // Method com/thoughtworks/xstream/core/util/WeakCache$4."<init>":(Lcom/thoughtworks/xstream/core/util/WeakCache;Ljava/util/Set;)V
      30: iconst_2
      31: invokespecial #16                 // Method iterate:(Lcom/thoughtworks/xstream/core/util/WeakCache$Visitor;I)Ljava/lang/Object;
      34: pop
      35: aload_1
      36: areturn

  private java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor, int);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #5                  // Field map:Ljava/util/Map;
       6: invokeinterface #30,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      11: invokeinterface #31,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload_3
      19: ifnonnull     145
      22: aload         4
      24: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          145
      32: aload         4
      34: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #34                 // class java/util/Map$Entry
      42: astore        5
      44: aload         5
      46: invokeinterface #35,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: checkcast     #7                  // class java/lang/ref/Reference
      54: astore        6
      56: aload         6
      58: invokevirtual #8                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      61: astore        7
      63: aload         7
      65: ifnonnull     78
      68: aload         4
      70: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.remove:()V
      75: goto          18
      78: iload_2
      79: tableswitch   { // 0 to 2
                     0: 104
                     1: 116
                     2: 133
               default: 142
          }
     104: aload_1
     105: aload         7
     107: invokeinterface #37,  2           // InterfaceMethod com/thoughtworks/xstream/core/util/WeakCache$Visitor.visit:(Ljava/lang/Object;)Ljava/lang/Object;
     112: astore_3
     113: goto          142
     116: aload_1
     117: aload         5
     119: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     124: invokeinterface #37,  2           // InterfaceMethod com/thoughtworks/xstream/core/util/WeakCache$Visitor.visit:(Ljava/lang/Object;)Ljava/lang/Object;
     129: astore_3
     130: goto          142
     133: aload_1
     134: aload         5
     136: invokeinterface #37,  2           // InterfaceMethod com/thoughtworks/xstream/core/util/WeakCache$Visitor.visit:(Ljava/lang/Object;)Ljava/lang/Object;
     141: astore_3
     142: goto          18
     145: aload_3
     146: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      10: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field map:Ljava/util/Map;
       4: invokevirtual #44                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn
}
