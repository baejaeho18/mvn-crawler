Compiled from "StatefulWriter.java"
public class com.thoughtworks.xstream.io.StatefulWriter extends com.thoughtworks.xstream.io.WriterWrapper {
  public static int STATE_OPEN;

  public static int STATE_NODE_START;

  public static int STATE_VALUE;

  public static int STATE_NODE_END;

  public static int STATE_CLOSED;

  private transient int state;

  private transient int balance;

  private transient com.thoughtworks.xstream.core.util.FastStack attributes;

  public com.thoughtworks.xstream.io.StatefulWriter(com.thoughtworks.xstream.io.HierarchicalStreamWriter);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/thoughtworks/xstream/io/WriterWrapper."<init>":(Lcom/thoughtworks/xstream/io/HierarchicalStreamWriter;)V
       5: aload_0
       6: getstatic     #2                  // Field STATE_OPEN:I
       9: putfield      #3                  // Field state:I
      12: aload_0
      13: new           #4                  // class com/thoughtworks/xstream/core/util/FastStack
      16: dup
      17: bipush        16
      19: invokespecial #5                  // Method com/thoughtworks/xstream/core/util/FastStack."<init>":(I)V
      22: putfield      #6                  // Field attributes:Lcom/thoughtworks/xstream/core/util/FastStack;
      25: return

  public void startNode(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method startNodeCommon:()V
       4: aload_0
       5: aload_1
       6: invokespecial #8                  // Method com/thoughtworks/xstream/io/WriterWrapper.startNode:(Ljava/lang/String;)V
       9: return

  public void startNode(java.lang.String, java.lang.Class);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method startNodeCommon:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #9                  // Method com/thoughtworks/xstream/io/WriterWrapper.startNode:(Ljava/lang/String;Ljava/lang/Class;)V
      10: return

  private void startNodeCommon();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #3                  // Field state:I
       8: getstatic     #11                 // Field STATE_VALUE:I
      11: if_icmpne     31
      14: new           #12                 // class com/thoughtworks/xstream/io/StreamException
      17: dup
      18: new           #13                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #14                 // String Opening node after writing text
      24: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: invokespecial #16                 // Method com/thoughtworks/xstream/io/StreamException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: aload_0
      32: getstatic     #17                 // Field STATE_NODE_START:I
      35: putfield      #3                  // Field state:I
      38: aload_0
      39: dup
      40: getfield      #18                 // Field balance:I
      43: iconst_1
      44: iadd
      45: putfield      #18                 // Field balance:I
      48: aload_0
      49: getfield      #6                  // Field attributes:Lcom/thoughtworks/xstream/core/util/FastStack;
      52: new           #19                 // class java/util/HashSet
      55: dup
      56: invokespecial #20                 // Method java/util/HashSet."<init>":()V
      59: invokevirtual #21                 // Method com/thoughtworks/xstream/core/util/FastStack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: return

  public void addAttribute(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #3                  // Field state:I
       8: getstatic     #17                 // Field STATE_NODE_START:I
      11: if_icmpeq     53
      14: new           #12                 // class com/thoughtworks/xstream/io/StreamException
      17: dup
      18: new           #13                 // class java/lang/IllegalStateException
      21: dup
      22: new           #22                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #24                 // String Writing attribute \'
      31: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #26                 // String \' without an opened node
      40: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      49: invokespecial #16                 // Method com/thoughtworks/xstream/io/StreamException."<init>":(Ljava/lang/Throwable;)V
      52: athrow
      53: aload_0
      54: getfield      #6                  // Field attributes:Lcom/thoughtworks/xstream/core/util/FastStack;
      57: invokevirtual #28                 // Method com/thoughtworks/xstream/core/util/FastStack.peek:()Ljava/lang/Object;
      60: checkcast     #29                 // class java/util/Set
      63: astore_3
      64: aload_3
      65: aload_1
      66: invokeinterface #30,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      71: ifeq          113
      74: new           #12                 // class com/thoughtworks/xstream/io/StreamException
      77: dup
      78: new           #13                 // class java/lang/IllegalStateException
      81: dup
      82: new           #22                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #24                 // String Writing attribute \'
      91: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #31                 // String \' twice
     100: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     109: invokespecial #16                 // Method com/thoughtworks/xstream/io/StreamException."<init>":(Ljava/lang/Throwable;)V
     112: athrow
     113: aload_3
     114: aload_1
     115: invokeinterface #32,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     120: pop
     121: aload_0
     122: aload_1
     123: aload_2
     124: invokespecial #33                 // Method com/thoughtworks/xstream/io/WriterWrapper.addAttribute:(Ljava/lang/String;Ljava/lang/String;)V
     127: return

  public void setValue(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #3                  // Field state:I
       8: getstatic     #17                 // Field STATE_NODE_START:I
      11: if_icmpeq     31
      14: new           #12                 // class com/thoughtworks/xstream/io/StreamException
      17: dup
      18: new           #13                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #34                 // String Writing text without an opened node
      24: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: invokespecial #16                 // Method com/thoughtworks/xstream/io/StreamException."<init>":(Ljava/lang/Throwable;)V
      30: athrow
      31: aload_0
      32: getstatic     #11                 // Field STATE_VALUE:I
      35: putfield      #3                  // Field state:I
      38: aload_0
      39: aload_1
      40: invokespecial #35                 // Method com/thoughtworks/xstream/io/WriterWrapper.setValue:(Ljava/lang/String;)V
      43: return

  public void endNode();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method checkClosed:()V
       4: aload_0
       5: dup
       6: getfield      #18                 // Field balance:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #18                 // Field balance:I
      15: ifne          35
      18: new           #12                 // class com/thoughtworks/xstream/io/StreamException
      21: dup
      22: new           #13                 // class java/lang/IllegalStateException
      25: dup
      26: ldc           #36                 // String Unbalanced node
      28: invokespecial #15                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: invokespecial #16                 // Method com/thoughtworks/xstream/io/StreamException."<init>":(Ljava/lang/Throwable;)V
      34: athrow
      35: aload_0
      36: getfield      #6                  // Field attributes:Lcom/thoughtworks/xstream/core/util/FastStack;
      39: invokevirtual #37                 // Method com/thoughtworks/xstream/core/util/FastStack.popSilently:()V
      42: aload_0
      43: getstatic     #38                 // Field STATE_NODE_END:I
      46: putfield      #3                  // Field state:I
      49: aload_0
      50: invokespecial #39                 // Method com/thoughtworks/xstream/io/WriterWrapper.endNode:()V
      53: return

  public void flush();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method checkClosed:()V
       4: aload_0
       5: invokespecial #40                 // Method com/thoughtworks/xstream/io/WriterWrapper.flush:()V
       8: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: getstatic     #38                 // Field STATE_NODE_END:I
       7: if_icmpeq     20
      10: aload_0
      11: getfield      #3                  // Field state:I
      14: getstatic     #2                  // Field STATE_OPEN:I
      17: if_icmpeq     20
      20: aload_0
      21: getstatic     #41                 // Field STATE_CLOSED:I
      24: putfield      #3                  // Field state:I
      27: aload_0
      28: invokespecial #42                 // Method com/thoughtworks/xstream/io/WriterWrapper.close:()V
      31: return

  private void checkClosed();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: getstatic     #41                 // Field STATE_CLOSED:I
       7: if_icmpne     27
      10: new           #12                 // class com/thoughtworks/xstream/io/StreamException
      13: dup
      14: new           #43                 // class java/io/IOException
      17: dup
      18: ldc           #44                 // String Writing on a closed stream
      20: invokespecial #45                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      23: invokespecial #16                 // Method com/thoughtworks/xstream/io/StreamException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
      27: return

  public int state();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: ireturn

  private java.lang.Object readResolve();
    Code:
       0: aload_0
       1: new           #4                  // class com/thoughtworks/xstream/core/util/FastStack
       4: dup
       5: bipush        16
       7: invokespecial #5                  // Method com/thoughtworks/xstream/core/util/FastStack."<init>":(I)V
      10: putfield      #6                  // Field attributes:Lcom/thoughtworks/xstream/core/util/FastStack;
      13: aload_0
      14: areturn

  static {};
    Code:
       0: iconst_0
       1: putstatic     #2                  // Field STATE_OPEN:I
       4: iconst_1
       5: putstatic     #17                 // Field STATE_NODE_START:I
       8: iconst_2
       9: putstatic     #11                 // Field STATE_VALUE:I
      12: iconst_3
      13: putstatic     #38                 // Field STATE_NODE_END:I
      16: iconst_4
      17: putstatic     #41                 // Field STATE_CLOSED:I
      20: return
}
