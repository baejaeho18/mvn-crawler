Compiled from "AbstractXmlReader.java"
public abstract class com.thoughtworks.xstream.io.xml.AbstractXmlReader extends com.thoughtworks.xstream.io.AbstractReader {
  protected com.thoughtworks.xstream.io.xml.AbstractXmlReader();
    Code:
       0: aload_0
       1: new           #1                  // class com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder
       4: dup
       5: invokespecial #2                  // Method com/thoughtworks/xstream/io/xml/XmlFriendlyNameCoder."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Lcom/thoughtworks/xstream/io/naming/NameCoder;)V
      11: return

  protected com.thoughtworks.xstream.io.xml.AbstractXmlReader(com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lcom/thoughtworks/xstream/io/naming/NameCoder;)V
       5: return

  protected com.thoughtworks.xstream.io.xml.AbstractXmlReader(com.thoughtworks.xstream.io.naming.NameCoder);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/thoughtworks/xstream/io/AbstractReader."<init>":(Lcom/thoughtworks/xstream/io/naming/NameCoder;)V
       5: return

  public java.lang.String unescapeXmlName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method decodeNode:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn

  protected java.lang.String escapeXmlName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method encodeNode:(Ljava/lang/String;)Ljava/lang/String;
       5: areturn
}
