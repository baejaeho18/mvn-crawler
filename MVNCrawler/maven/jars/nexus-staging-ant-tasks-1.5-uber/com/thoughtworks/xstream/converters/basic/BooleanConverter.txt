Compiled from "BooleanConverter.java"
public class com.thoughtworks.xstream.converters.basic.BooleanConverter extends com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter {
  public static final com.thoughtworks.xstream.converters.basic.BooleanConverter TRUE_FALSE;

  public static final com.thoughtworks.xstream.converters.basic.BooleanConverter YES_NO;

  public static final com.thoughtworks.xstream.converters.basic.BooleanConverter BINARY;

  private final java.lang.String positive;

  private final java.lang.String negative;

  private final boolean caseSensitive;

  public com.thoughtworks.xstream.converters.basic.BooleanConverter(java.lang.String, java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/thoughtworks/xstream/converters/basic/AbstractSingleValueConverter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field positive:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field negative:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field caseSensitive:Z
      19: return

  public com.thoughtworks.xstream.converters.basic.BooleanConverter();
    Code:
       0: aload_0
       1: ldc           #5                  // String true
       3: ldc           #6                  // String false
       5: iconst_0
       6: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
       9: return

  public boolean shouldConvert(java.lang.Class, java.lang.Object);
    Code:
       0: iconst_1
       1: ireturn

  public boolean canConvert(java.lang.Class);
    Code:
       0: aload_1
       1: getstatic     #8                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
       4: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifne          20
      10: aload_1
      11: ldc_w         #10                 // class java/lang/Boolean
      14: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.Object fromString(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field caseSensitive:Z
       4: ifeq          28
       7: aload_0
       8: getfield      #2                  // Field positive:Ljava/lang/String;
      11: aload_1
      12: invokevirtual #11                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          24
      18: getstatic     #12                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      21: goto          27
      24: getstatic     #13                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      27: areturn
      28: aload_0
      29: getfield      #2                  // Field positive:Ljava/lang/String;
      32: aload_1
      33: invokevirtual #14                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      36: ifeq          45
      39: getstatic     #12                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      42: goto          48
      45: getstatic     #13                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      48: areturn

  public java.lang.String toString(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #10                 // class java/lang/Boolean
       4: astore_2
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          31
      13: aload_2
      14: invokevirtual #15                 // Method java/lang/Boolean.booleanValue:()Z
      17: ifeq          27
      20: aload_0
      21: getfield      #2                  // Field positive:Ljava/lang/String;
      24: goto          31
      27: aload_0
      28: getfield      #3                  // Field negative:Ljava/lang/String;
      31: areturn

  static {};
    Code:
       0: new           #16                 // class com/thoughtworks/xstream/converters/basic/BooleanConverter
       3: dup
       4: ldc           #5                  // String true
       6: ldc           #6                  // String false
       8: iconst_0
       9: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      12: putstatic     #17                 // Field TRUE_FALSE:Lcom/thoughtworks/xstream/converters/basic/BooleanConverter;
      15: new           #16                 // class com/thoughtworks/xstream/converters/basic/BooleanConverter
      18: dup
      19: ldc           #18                 // String yes
      21: ldc           #19                 // String no
      23: iconst_0
      24: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      27: putstatic     #20                 // Field YES_NO:Lcom/thoughtworks/xstream/converters/basic/BooleanConverter;
      30: new           #16                 // class com/thoughtworks/xstream/converters/basic/BooleanConverter
      33: dup
      34: ldc           #21                 // String 1
      36: ldc           #22                 // String 0
      38: iconst_1
      39: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      42: putstatic     #23                 // Field BINARY:Lcom/thoughtworks/xstream/converters/basic/BooleanConverter;
      45: return
}
