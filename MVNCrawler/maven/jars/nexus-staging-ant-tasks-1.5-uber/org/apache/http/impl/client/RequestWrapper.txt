Compiled from "RequestWrapper.java"
public class org.apache.http.impl.client.RequestWrapper extends org.apache.http.message.AbstractHttpMessage implements org.apache.http.client.methods.HttpUriRequest {
  private final org.apache.http.HttpRequest original;

  private java.net.URI uri;

  private java.lang.String method;

  private org.apache.http.ProtocolVersion version;

  private int execCount;

  public org.apache.http.impl.client.RequestWrapper(org.apache.http.HttpRequest) throws org.apache.http.ProtocolException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/http/message/AbstractHttpMessage."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String HTTP request may not be null
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field original:Lorg/apache/http/HttpRequest;
      23: aload_0
      24: aload_1
      25: invokeinterface #6,  1            // InterfaceMethod org/apache/http/HttpRequest.getParams:()Lorg/apache/http/params/HttpParams;
      30: invokevirtual #7                  // Method setParams:(Lorg/apache/http/params/HttpParams;)V
      33: aload_0
      34: aload_1
      35: invokeinterface #8,  1            // InterfaceMethod org/apache/http/HttpRequest.getAllHeaders:()[Lorg/apache/http/Header;
      40: invokevirtual #9                  // Method setHeaders:([Lorg/apache/http/Header;)V
      43: aload_1
      44: instanceof    #10                 // class org/apache/http/client/methods/HttpUriRequest
      47: ifeq          84
      50: aload_0
      51: aload_1
      52: checkcast     #10                 // class org/apache/http/client/methods/HttpUriRequest
      55: invokeinterface #11,  1           // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.getURI:()Ljava/net/URI;
      60: putfield      #12                 // Field uri:Ljava/net/URI;
      63: aload_0
      64: aload_1
      65: checkcast     #10                 // class org/apache/http/client/methods/HttpUriRequest
      68: invokeinterface #13,  1           // InterfaceMethod org/apache/http/client/methods/HttpUriRequest.getMethod:()Ljava/lang/String;
      73: putfield      #14                 // Field method:Ljava/lang/String;
      76: aload_0
      77: aconst_null
      78: putfield      #15                 // Field version:Lorg/apache/http/ProtocolVersion;
      81: goto          165
      84: aload_1
      85: invokeinterface #16,  1           // InterfaceMethod org/apache/http/HttpRequest.getRequestLine:()Lorg/apache/http/RequestLine;
      90: astore_2
      91: aload_0
      92: new           #17                 // class java/net/URI
      95: dup
      96: aload_2
      97: invokeinterface #18,  1           // InterfaceMethod org/apache/http/RequestLine.getUri:()Ljava/lang/String;
     102: invokespecial #19                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     105: putfield      #12                 // Field uri:Ljava/net/URI;
     108: goto          145
     111: astore_3
     112: new           #21                 // class org/apache/http/ProtocolException
     115: dup
     116: new           #22                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #24                 // String Invalid request URI:
     125: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_2
     129: invokeinterface #18,  1           // InterfaceMethod org/apache/http/RequestLine.getUri:()Ljava/lang/String;
     134: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: aload_3
     141: invokespecial #27                 // Method org/apache/http/ProtocolException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     144: athrow
     145: aload_0
     146: aload_2
     147: invokeinterface #28,  1           // InterfaceMethod org/apache/http/RequestLine.getMethod:()Ljava/lang/String;
     152: putfield      #14                 // Field method:Ljava/lang/String;
     155: aload_0
     156: aload_1
     157: invokeinterface #29,  1           // InterfaceMethod org/apache/http/HttpRequest.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
     162: putfield      #15                 // Field version:Lorg/apache/http/ProtocolVersion;
     165: aload_0
     166: iconst_0
     167: putfield      #30                 // Field execCount:I
     170: return
    Exception table:
       from    to  target type
          91   108   111   Class java/net/URISyntaxException

  public void resetHeaders();
    Code:
       0: aload_0
       1: getfield      #31                 // Field headergroup:Lorg/apache/http/message/HeaderGroup;
       4: invokevirtual #32                 // Method org/apache/http/message/HeaderGroup.clear:()V
       7: aload_0
       8: aload_0
       9: getfield      #5                  // Field original:Lorg/apache/http/HttpRequest;
      12: invokeinterface #8,  1            // InterfaceMethod org/apache/http/HttpRequest.getAllHeaders:()[Lorg/apache/http/Header;
      17: invokevirtual #9                  // Method setHeaders:([Lorg/apache/http/Header;)V
      20: return

  public java.lang.String getMethod();
    Code:
       0: aload_0
       1: getfield      #14                 // Field method:Ljava/lang/String;
       4: areturn

  public void setMethod(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #33                 // String Method name may not be null
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #14                 // Field method:Ljava/lang/String;
      19: return

  public org.apache.http.ProtocolVersion getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #15                 // Field version:Lorg/apache/http/ProtocolVersion;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: invokevirtual #34                 // Method getParams:()Lorg/apache/http/params/HttpParams;
      12: invokestatic  #35                 // Method org/apache/http/params/HttpProtocolParams.getVersion:(Lorg/apache/http/params/HttpParams;)Lorg/apache/http/ProtocolVersion;
      15: putfield      #15                 // Field version:Lorg/apache/http/ProtocolVersion;
      18: aload_0
      19: getfield      #15                 // Field version:Lorg/apache/http/ProtocolVersion;
      22: areturn

  public void setProtocolVersion(org.apache.http.ProtocolVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field version:Lorg/apache/http/ProtocolVersion;
       5: return

  public java.net.URI getURI();
    Code:
       0: aload_0
       1: getfield      #12                 // Field uri:Ljava/net/URI;
       4: areturn

  public void setURI(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field uri:Ljava/net/URI;
       5: return

  public org.apache.http.RequestLine getRequestLine();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method getMethod:()Ljava/lang/String;
       4: astore_1
       5: aload_0
       6: invokevirtual #37                 // Method getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
       9: astore_2
      10: aconst_null
      11: astore_3
      12: aload_0
      13: getfield      #12                 // Field uri:Ljava/net/URI;
      16: ifnull        27
      19: aload_0
      20: getfield      #12                 // Field uri:Ljava/net/URI;
      23: invokevirtual #38                 // Method java/net/URI.toASCIIString:()Ljava/lang/String;
      26: astore_3
      27: aload_3
      28: ifnull        38
      31: aload_3
      32: invokevirtual #39                 // Method java/lang/String.length:()I
      35: ifne          41
      38: ldc           #40                 // String /
      40: astore_3
      41: new           #41                 // class org/apache/http/message/BasicRequestLine
      44: dup
      45: aload_1
      46: aload_3
      47: aload_2
      48: invokespecial #42                 // Method org/apache/http/message/BasicRequestLine."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/http/ProtocolVersion;)V
      51: areturn

  public void abort() throws java.lang.UnsupportedOperationException;
    Code:
       0: new           #43                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #44                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isAborted();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.http.HttpRequest getOriginal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field original:Lorg/apache/http/HttpRequest;
       4: areturn

  public boolean isRepeatable();
    Code:
       0: iconst_1
       1: ireturn

  public int getExecCount();
    Code:
       0: aload_0
       1: getfield      #30                 // Field execCount:I
       4: ireturn

  public void incrementExecCount();
    Code:
       0: aload_0
       1: dup
       2: getfield      #30                 // Field execCount:I
       5: iconst_1
       6: iadd
       7: putfield      #30                 // Field execCount:I
      10: return
}
