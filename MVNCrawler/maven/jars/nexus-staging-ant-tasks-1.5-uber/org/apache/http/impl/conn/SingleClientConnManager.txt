Compiled from "SingleClientConnManager.java"
public class org.apache.http.impl.conn.SingleClientConnManager implements org.apache.http.conn.ClientConnectionManager {
  private final org.apache.commons.logging.Log log;

  public static final java.lang.String MISUSE_MESSAGE;

  protected final org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;

  protected final org.apache.http.conn.ClientConnectionOperator connOperator;

  protected final boolean alwaysShutDown;

  protected volatile org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry;

  protected volatile org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn;

  protected volatile long lastReleaseTime;

  protected volatile long connectionExpiresTime;

  protected volatile boolean isShutDown;

  public org.apache.http.impl.conn.SingleClientConnManager(org.apache.http.params.HttpParams, org.apache.http.conn.scheme.SchemeRegistry);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
       5: return

  public org.apache.http.impl.conn.SingleClientConnManager(org.apache.http.conn.scheme.SchemeRegistry);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      15: aload_1
      16: ifnonnull     29
      19: new           #6                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #7                  // String Scheme registry must not be null.
      25: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #9                  // Field schemeRegistry:Lorg/apache/http/conn/scheme/SchemeRegistry;
      34: aload_0
      35: aload_0
      36: aload_1
      37: invokevirtual #10                 // Method createConnectionOperator:(Lorg/apache/http/conn/scheme/SchemeRegistry;)Lorg/apache/http/conn/ClientConnectionOperator;
      40: putfield      #11                 // Field connOperator:Lorg/apache/http/conn/ClientConnectionOperator;
      43: aload_0
      44: new           #12                 // class org/apache/http/impl/conn/SingleClientConnManager$PoolEntry
      47: dup
      48: aload_0
      49: invokespecial #13                 // Method org/apache/http/impl/conn/SingleClientConnManager$PoolEntry."<init>":(Lorg/apache/http/impl/conn/SingleClientConnManager;)V
      52: putfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      55: aload_0
      56: aconst_null
      57: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
      60: aload_0
      61: ldc2_w        #16                 // long -1l
      64: putfield      #18                 // Field lastReleaseTime:J
      67: aload_0
      68: iconst_0
      69: putfield      #19                 // Field alwaysShutDown:Z
      72: aload_0
      73: iconst_0
      74: putfield      #20                 // Field isShutDown:Z
      77: return

  public org.apache.http.impl.conn.SingleClientConnManager();
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method org/apache/http/impl/conn/SchemeRegistryFactory.createDefault:()Lorg/apache/http/conn/scheme/SchemeRegistry;
       4: invokespecial #1                  // Method "<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
       7: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method shutdown:()V
       4: aload_0
       5: invokespecial #23                 // Method java/lang/Object.finalize:()V
       8: goto          18
      11: astore_1
      12: aload_0
      13: invokespecial #23                 // Method java/lang/Object.finalize:()V
      16: aload_1
      17: athrow
      18: return
    Exception table:
       from    to  target type
           0     4    11   any
          11    12    11   any

  public org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry();
    Code:
       0: aload_0
       1: getfield      #9                  // Field schemeRegistry:Lorg/apache/http/conn/scheme/SchemeRegistry;
       4: areturn

  protected org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry);
    Code:
       0: new           #24                 // class org/apache/http/impl/conn/DefaultClientConnectionOperator
       3: dup
       4: aload_1
       5: invokespecial #25                 // Method org/apache/http/impl/conn/DefaultClientConnectionOperator."<init>":(Lorg/apache/http/conn/scheme/SchemeRegistry;)V
       8: areturn

  protected final void assertStillUp() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field isShutDown:Z
       4: ifeq          17
       7: new           #26                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #27                 // String Manager is shut down.
      13: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public final org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
    Code:
       0: new           #29                 // class org/apache/http/impl/conn/SingleClientConnManager$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #30                 // Method org/apache/http/impl/conn/SingleClientConnManager$1."<init>":(Lorg/apache/http/impl/conn/SingleClientConnManager;Lorg/apache/http/conn/routing/HttpRoute;Ljava/lang/Object;)V
      10: areturn

  public org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #6                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #31                 // String Route may not be null.
      10: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #32                 // Method assertStillUp:()V
      18: aload_0
      19: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      22: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      27: ifeq          58
      30: aload_0
      31: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      34: new           #34                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #36                 // String Get connection for route
      43: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      58: aload_0
      59: dup
      60: astore_3
      61: monitorenter
      62: aload_0
      63: getfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
      66: ifnull        79
      69: new           #26                 // class java/lang/IllegalStateException
      72: dup
      73: ldc           #41                 // String Invalid use of SingleClientConnManager: connection still allocated.\nMake sure to release the connection before allocating another one.
      75: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      78: athrow
      79: iconst_0
      80: istore        4
      82: iconst_0
      83: istore        5
      85: aload_0
      86: invokevirtual #42                 // Method closeExpiredConnections:()V
      89: aload_0
      90: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      93: getfield      #43                 // Field org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.connection:Lorg/apache/http/conn/OperatedClientConnection;
      96: invokeinterface #44,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isOpen:()Z
     101: ifeq          140
     104: aload_0
     105: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
     108: getfield      #45                 // Field org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.tracker:Lorg/apache/http/conn/routing/RouteTracker;
     111: astore        6
     113: aload         6
     115: ifnull        130
     118: aload         6
     120: invokevirtual #46                 // Method org/apache/http/conn/routing/RouteTracker.toRoute:()Lorg/apache/http/conn/routing/HttpRoute;
     123: aload_1
     124: invokevirtual #47                 // Method org/apache/http/conn/routing/HttpRoute.equals:(Ljava/lang/Object;)Z
     127: ifne          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: istore        5
     137: goto          143
     140: iconst_1
     141: istore        4
     143: iload         5
     145: ifeq          176
     148: iconst_1
     149: istore        4
     151: aload_0
     152: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
     155: invokevirtual #48                 // Method org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.shutdown:()V
     158: goto          176
     161: astore        6
     163: aload_0
     164: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     167: ldc           #50                 // String Problem shutting down connection.
     169: aload         6
     171: invokeinterface #51,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     176: iload         4
     178: ifeq          193
     181: aload_0
     182: new           #12                 // class org/apache/http/impl/conn/SingleClientConnManager$PoolEntry
     185: dup
     186: aload_0
     187: invokespecial #13                 // Method org/apache/http/impl/conn/SingleClientConnManager$PoolEntry."<init>":(Lorg/apache/http/impl/conn/SingleClientConnManager;)V
     190: putfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
     193: aload_0
     194: new           #52                 // class org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter
     197: dup
     198: aload_0
     199: aload_0
     200: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
     203: aload_1
     204: invokespecial #53                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter."<init>":(Lorg/apache/http/impl/conn/SingleClientConnManager;Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;Lorg/apache/http/conn/routing/HttpRoute;)V
     207: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
     210: aload_0
     211: getfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
     214: aload_3
     215: monitorexit
     216: areturn
     217: astore        7
     219: aload_3
     220: monitorexit
     221: aload         7
     223: athrow
    Exception table:
       from    to  target type
         151   158   161   Class java/io/IOException
          62   216   217   any
         217   221   217   any

  public void releaseConnection(org.apache.http.conn.ManagedClientConnection, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method assertStillUp:()V
       4: aload_1
       5: instanceof    #52                 // class org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter
       8: ifne          21
      11: new           #6                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #54                 // String Connection class mismatch, connection not obtained from this manager.
      17: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      25: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      30: ifeq          61
      33: aload_0
      34: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      37: new           #34                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #55                 // String Releasing connection
      46: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      53: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      61: aload_1
      62: checkcast     #52                 // class org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter
      65: astore        5
      67: aload         5
      69: dup
      70: astore        6
      72: monitorenter
      73: aload         5
      75: getfield      #56                 // Field org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.poolEntry:Lorg/apache/http/impl/conn/AbstractPoolEntry;
      78: ifnonnull     85
      81: aload         6
      83: monitorexit
      84: return
      85: aload         5
      87: invokevirtual #57                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.getManager:()Lorg/apache/http/conn/ClientConnectionManager;
      90: astore        7
      92: aload         7
      94: ifnull        113
      97: aload         7
      99: aload_0
     100: if_acmpeq     113
     103: new           #6                  // class java/lang/IllegalArgumentException
     106: dup
     107: ldc           #58                 // String Connection not obtained from this manager.
     109: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     112: athrow
     113: aload         5
     115: invokevirtual #59                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.isOpen:()Z
     118: ifeq          164
     121: aload_0
     122: getfield      #19                 // Field alwaysShutDown:Z
     125: ifne          136
     128: aload         5
     130: invokevirtual #60                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.isMarkedReusable:()Z
     133: ifne          164
     136: aload_0
     137: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     140: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     145: ifeq          159
     148: aload_0
     149: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     152: ldc           #61                 // String Released connection open but not reusable.
     154: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     159: aload         5
     161: invokevirtual #62                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.shutdown:()V
     164: aload         5
     166: invokevirtual #63                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.detach:()V
     169: aload_0
     170: dup
     171: astore        8
     173: monitorenter
     174: aload_0
     175: aconst_null
     176: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
     179: aload_0
     180: invokestatic  #64                 // Method java/lang/System.currentTimeMillis:()J
     183: putfield      #18                 // Field lastReleaseTime:J
     186: lload_2
     187: lconst_0
     188: lcmp
     189: ifle          210
     192: aload_0
     193: aload         4
     195: lload_2
     196: invokevirtual #65                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     199: aload_0
     200: getfield      #18                 // Field lastReleaseTime:J
     203: ladd
     204: putfield      #66                 // Field connectionExpiresTime:J
     207: goto          217
     210: aload_0
     211: ldc2_w        #67                 // long 9223372036854775807l
     214: putfield      #66                 // Field connectionExpiresTime:J
     217: aload         8
     219: monitorexit
     220: goto          231
     223: astore        9
     225: aload         8
     227: monitorexit
     228: aload         9
     230: athrow
     231: goto          403
     234: astore        8
     236: aload_0
     237: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     240: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     245: ifeq          261
     248: aload_0
     249: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
     252: ldc           #69                 // String Exception shutting down released connection.
     254: aload         8
     256: invokeinterface #51,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     261: aload         5
     263: invokevirtual #63                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.detach:()V
     266: aload_0
     267: dup
     268: astore        8
     270: monitorenter
     271: aload_0
     272: aconst_null
     273: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
     276: aload_0
     277: invokestatic  #64                 // Method java/lang/System.currentTimeMillis:()J
     280: putfield      #18                 // Field lastReleaseTime:J
     283: lload_2
     284: lconst_0
     285: lcmp
     286: ifle          307
     289: aload_0
     290: aload         4
     292: lload_2
     293: invokevirtual #65                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     296: aload_0
     297: getfield      #18                 // Field lastReleaseTime:J
     300: ladd
     301: putfield      #66                 // Field connectionExpiresTime:J
     304: goto          314
     307: aload_0
     308: ldc2_w        #67                 // long 9223372036854775807l
     311: putfield      #66                 // Field connectionExpiresTime:J
     314: aload         8
     316: monitorexit
     317: goto          328
     320: astore        10
     322: aload         8
     324: monitorexit
     325: aload         10
     327: athrow
     328: goto          403
     331: astore        11
     333: aload         5
     335: invokevirtual #63                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.detach:()V
     338: aload_0
     339: dup
     340: astore        12
     342: monitorenter
     343: aload_0
     344: aconst_null
     345: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
     348: aload_0
     349: invokestatic  #64                 // Method java/lang/System.currentTimeMillis:()J
     352: putfield      #18                 // Field lastReleaseTime:J
     355: lload_2
     356: lconst_0
     357: lcmp
     358: ifle          379
     361: aload_0
     362: aload         4
     364: lload_2
     365: invokevirtual #65                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
     368: aload_0
     369: getfield      #18                 // Field lastReleaseTime:J
     372: ladd
     373: putfield      #66                 // Field connectionExpiresTime:J
     376: goto          386
     379: aload_0
     380: ldc2_w        #67                 // long 9223372036854775807l
     383: putfield      #66                 // Field connectionExpiresTime:J
     386: aload         12
     388: monitorexit
     389: goto          400
     392: astore        13
     394: aload         12
     396: monitorexit
     397: aload         13
     399: athrow
     400: aload         11
     402: athrow
     403: aload         6
     405: monitorexit
     406: goto          417
     409: astore        14
     411: aload         6
     413: monitorexit
     414: aload         14
     416: athrow
     417: return
    Exception table:
       from    to  target type
         174   220   223   any
         223   228   223   any
         113   164   234   Class java/io/IOException
         271   317   320   any
         320   325   320   any
         113   164   331   any
         234   261   331   any
         343   389   392   any
         392   397   392   any
         331   333   331   any
          73    84   409   any
          85   406   409   any
         409   414   409   any

  public void closeExpiredConnections();
    Code:
       0: aload_0
       1: getfield      #66                 // Field connectionExpiresTime:J
       4: lstore_1
       5: invokestatic  #64                 // Method java/lang/System.currentTimeMillis:()J
       8: lload_1
       9: lcmp
      10: iflt          21
      13: aload_0
      14: lconst_0
      15: getstatic     #70                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      18: invokevirtual #71                 // Method closeIdleConnections:(JLjava/util/concurrent/TimeUnit;)V
      21: return

  public void closeIdleConnections(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method assertStillUp:()V
       4: aload_3
       5: ifnonnull     18
       8: new           #6                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #72                 // String Time unit must not be null.
      14: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: dup
      20: astore        4
      22: monitorenter
      23: aload_0
      24: getfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
      27: ifnonnull     91
      30: aload_0
      31: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      34: getfield      #43                 // Field org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.connection:Lorg/apache/http/conn/OperatedClientConnection;
      37: invokeinterface #44,  1           // InterfaceMethod org/apache/http/conn/OperatedClientConnection.isOpen:()Z
      42: ifeq          91
      45: invokestatic  #64                 // Method java/lang/System.currentTimeMillis:()J
      48: aload_3
      49: lload_1
      50: invokevirtual #65                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      53: lsub
      54: lstore        5
      56: aload_0
      57: getfield      #18                 // Field lastReleaseTime:J
      60: lload         5
      62: lcmp
      63: ifgt          91
      66: aload_0
      67: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      70: invokevirtual #73                 // Method org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.close:()V
      73: goto          91
      76: astore        7
      78: aload_0
      79: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      82: ldc           #74                 // String Problem closing idle connection.
      84: aload         7
      86: invokeinterface #51,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      91: aload         4
      93: monitorexit
      94: goto          105
      97: astore        8
      99: aload         4
     101: monitorexit
     102: aload         8
     104: athrow
     105: return
    Exception table:
       from    to  target type
          66    73    76   Class java/io/IOException
          23    94    97   any
          97   102    97   any

  public void shutdown();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #20                 // Field isShutDown:Z
       5: aload_0
       6: dup
       7: astore_1
       8: monitorenter
       9: aload_0
      10: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      13: ifnull        23
      16: aload_0
      17: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      20: invokevirtual #48                 // Method org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.shutdown:()V
      23: aload_0
      24: aconst_null
      25: putfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      28: aload_0
      29: aconst_null
      30: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
      33: goto          75
      36: astore_2
      37: aload_0
      38: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      41: ldc           #75                 // String Problem while shutting down manager.
      43: aload_2
      44: invokeinterface #51,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      49: aload_0
      50: aconst_null
      51: putfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      54: aload_0
      55: aconst_null
      56: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
      59: goto          75
      62: astore_3
      63: aload_0
      64: aconst_null
      65: putfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      68: aload_0
      69: aconst_null
      70: putfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
      73: aload_3
      74: athrow
      75: aload_1
      76: monitorexit
      77: goto          87
      80: astore        4
      82: aload_1
      83: monitorexit
      84: aload         4
      86: athrow
      87: return
    Exception table:
       from    to  target type
           9    23    36   Class java/io/IOException
           9    23    62   any
          36    49    62   any
          62    63    62   any
           9    77    80   any
          80    84    80   any

  protected void revokeConnection();
    Code:
       0: aload_0
       1: getfield      #15                 // Field managedConn:Lorg/apache/http/impl/conn/SingleClientConnManager$ConnAdapter;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_1
      11: invokevirtual #63                 // Method org/apache/http/impl/conn/SingleClientConnManager$ConnAdapter.detach:()V
      14: aload_0
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: getfield      #14                 // Field uniquePoolEntry:Lorg/apache/http/impl/conn/SingleClientConnManager$PoolEntry;
      22: invokevirtual #48                 // Method org/apache/http/impl/conn/SingleClientConnManager$PoolEntry.shutdown:()V
      25: goto          41
      28: astore_3
      29: aload_0
      30: getfield      #5                  // Field log:Lorg/apache/commons/logging/Log;
      33: ldc           #76                 // String Problem while shutting down connection.
      35: aload_3
      36: invokeinterface #51,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: aload_2
      42: monitorexit
      43: goto          53
      46: astore        4
      48: aload_2
      49: monitorexit
      50: aload         4
      52: athrow
      53: return
    Exception table:
       from    to  target type
          18    25    28   Class java/io/IOException
          18    43    46   any
          46    50    46   any
}
