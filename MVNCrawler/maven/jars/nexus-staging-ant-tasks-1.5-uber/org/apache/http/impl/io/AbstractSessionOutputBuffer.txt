Compiled from "AbstractSessionOutputBuffer.java"
public abstract class org.apache.http.impl.io.AbstractSessionOutputBuffer implements org.apache.http.io.SessionOutputBuffer,org.apache.http.io.BufferInfo {
  private static final java.nio.charset.Charset ASCII;

  private static final byte[] CRLF;

  private java.io.OutputStream outstream;

  private org.apache.http.util.ByteArrayBuffer buffer;

  private java.nio.charset.Charset charset;

  private java.nio.charset.CharsetEncoder encoder;

  private java.nio.ByteBuffer bbuf;

  private boolean ascii;

  private int minChunkLimit;

  private org.apache.http.impl.io.HttpTransportMetricsImpl metrics;

  private java.nio.charset.CodingErrorAction onMalformedInputAction;

  private java.nio.charset.CodingErrorAction onUnMappableInputAction;

  public org.apache.http.impl.io.AbstractSessionOutputBuffer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field ascii:Z
       9: aload_0
      10: sipush        512
      13: putfield      #3                  // Field minChunkLimit:I
      16: return

  protected void init(java.io.OutputStream, int, org.apache.http.params.HttpParams);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #4                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #5                  // String Input stream may not be null
      10: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_2
      15: ifgt          28
      18: new           #4                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #7                  // String Buffer size may not be negative or zero
      24: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_3
      29: ifnonnull     42
      32: new           #4                  // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #8                  // String HTTP parameters may not be null
      38: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: putfield      #9                  // Field outstream:Ljava/io/OutputStream;
      47: aload_0
      48: new           #10                 // class org/apache/http/util/ByteArrayBuffer
      51: dup
      52: iload_2
      53: invokespecial #11                 // Method org/apache/http/util/ByteArrayBuffer."<init>":(I)V
      56: putfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      59: aload_0
      60: aload_3
      61: invokestatic  #13                 // Method org/apache/http/params/HttpProtocolParams.getHttpElementCharset:(Lorg/apache/http/params/HttpParams;)Ljava/lang/String;
      64: invokestatic  #14                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      67: putfield      #15                 // Field charset:Ljava/nio/charset/Charset;
      70: aload_0
      71: aload_0
      72: getfield      #15                 // Field charset:Ljava/nio/charset/Charset;
      75: getstatic     #16                 // Field ASCII:Ljava/nio/charset/Charset;
      78: invokevirtual #17                 // Method java/nio/charset/Charset.equals:(Ljava/lang/Object;)Z
      81: putfield      #2                  // Field ascii:Z
      84: aload_0
      85: aconst_null
      86: putfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      89: aload_0
      90: aload_3
      91: ldc           #19                 // String http.connection.min-chunk-limit
      93: sipush        512
      96: invokeinterface #20,  3           // InterfaceMethod org/apache/http/params/HttpParams.getIntParameter:(Ljava/lang/String;I)I
     101: putfield      #3                  // Field minChunkLimit:I
     104: aload_0
     105: aload_0
     106: invokevirtual #21                 // Method createTransportMetrics:()Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
     109: putfield      #22                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
     112: aload_0
     113: aload_3
     114: invokestatic  #23                 // Method org/apache/http/params/HttpProtocolParams.getMalformedInputAction:(Lorg/apache/http/params/HttpParams;)Ljava/nio/charset/CodingErrorAction;
     117: putfield      #24                 // Field onMalformedInputAction:Ljava/nio/charset/CodingErrorAction;
     120: aload_0
     121: aload_3
     122: invokestatic  #25                 // Method org/apache/http/params/HttpProtocolParams.getUnmappableInputAction:(Lorg/apache/http/params/HttpParams;)Ljava/nio/charset/CodingErrorAction;
     125: putfield      #26                 // Field onUnMappableInputAction:Ljava/nio/charset/CodingErrorAction;
     128: return

  protected org.apache.http.impl.io.HttpTransportMetricsImpl createTransportMetrics();
    Code:
       0: new           #27                 // class org/apache/http/impl/io/HttpTransportMetricsImpl
       3: dup
       4: invokespecial #28                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl."<init>":()V
       7: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #29                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
       7: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #30                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
       7: ireturn

  public int available();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method capacity:()I
       4: aload_0
       5: invokevirtual #32                 // Method length:()I
       8: isub
       9: ireturn

  protected void flushBuffer() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #30                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
       7: istore_1
       8: iload_1
       9: ifle          44
      12: aload_0
      13: getfield      #9                  // Field outstream:Ljava/io/OutputStream;
      16: aload_0
      17: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      20: invokevirtual #33                 // Method org/apache/http/util/ByteArrayBuffer.buffer:()[B
      23: iconst_0
      24: iload_1
      25: invokevirtual #34                 // Method java/io/OutputStream.write:([BII)V
      28: aload_0
      29: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      32: invokevirtual #35                 // Method org/apache/http/util/ByteArrayBuffer.clear:()V
      35: aload_0
      36: getfield      #22                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      39: iload_1
      40: i2l
      41: invokevirtual #36                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl.incrementBytesTransferred:(J)V
      44: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method flushBuffer:()V
       4: aload_0
       5: getfield      #9                  // Field outstream:Ljava/io/OutputStream;
       8: invokevirtual #38                 // Method java/io/OutputStream.flush:()V
      11: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: iload_3
       6: aload_0
       7: getfield      #3                  // Field minChunkLimit:I
      10: if_icmpgt     24
      13: iload_3
      14: aload_0
      15: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      18: invokevirtual #29                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
      21: if_icmple     50
      24: aload_0
      25: invokevirtual #37                 // Method flushBuffer:()V
      28: aload_0
      29: getfield      #9                  // Field outstream:Ljava/io/OutputStream;
      32: aload_1
      33: iload_2
      34: iload_3
      35: invokevirtual #34                 // Method java/io/OutputStream.write:([BII)V
      38: aload_0
      39: getfield      #22                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
      42: iload_3
      43: i2l
      44: invokevirtual #36                 // Method org/apache/http/impl/io/HttpTransportMetricsImpl.incrementBytesTransferred:(J)V
      47: goto          87
      50: aload_0
      51: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      54: invokevirtual #29                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
      57: aload_0
      58: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      61: invokevirtual #30                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
      64: isub
      65: istore        4
      67: iload_3
      68: iload         4
      70: if_icmple     77
      73: aload_0
      74: invokevirtual #37                 // Method flushBuffer:()V
      77: aload_0
      78: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      81: aload_1
      82: iload_2
      83: iload_3
      84: invokevirtual #39                 // Method org/apache/http/util/ByteArrayBuffer.append:([BII)V
      87: return

  public void write(byte[]) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: iconst_0
       8: aload_1
       9: arraylength
      10: invokevirtual #40                 // Method write:([BII)V
      13: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
       4: invokevirtual #41                 // Method org/apache/http/util/ByteArrayBuffer.isFull:()Z
       7: ifeq          14
      10: aload_0
      11: invokevirtual #37                 // Method flushBuffer:()V
      14: aload_0
      15: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      18: iload_1
      19: invokevirtual #42                 // Method org/apache/http/util/ByteArrayBuffer.append:(I)V
      22: return

  public void writeLine(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #43                 // Method java/lang/String.length:()I
       9: ifle          57
      12: aload_0
      13: getfield      #2                  // Field ascii:Z
      16: ifeq          47
      19: iconst_0
      20: istore_2
      21: iload_2
      22: aload_1
      23: invokevirtual #43                 // Method java/lang/String.length:()I
      26: if_icmpge     44
      29: aload_0
      30: aload_1
      31: iload_2
      32: invokevirtual #44                 // Method java/lang/String.charAt:(I)C
      35: invokevirtual #45                 // Method write:(I)V
      38: iinc          2, 1
      41: goto          21
      44: goto          57
      47: aload_1
      48: invokestatic  #46                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      51: astore_2
      52: aload_0
      53: aload_2
      54: invokespecial #47                 // Method writeEncoded:(Ljava/nio/CharBuffer;)V
      57: aload_0
      58: getstatic     #48                 // Field CRLF:[B
      61: invokevirtual #49                 // Method write:([B)V
      64: return

  public void writeLine(org.apache.http.util.CharArrayBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #2                  // Field ascii:Z
       9: ifeq          94
      12: iconst_0
      13: istore_2
      14: aload_1
      15: invokevirtual #50                 // Method org/apache/http/util/CharArrayBuffer.length:()I
      18: istore_3
      19: iload_3
      20: ifle          91
      23: aload_0
      24: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      27: invokevirtual #29                 // Method org/apache/http/util/ByteArrayBuffer.capacity:()I
      30: aload_0
      31: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      34: invokevirtual #30                 // Method org/apache/http/util/ByteArrayBuffer.length:()I
      37: isub
      38: istore        4
      40: iload         4
      42: iload_3
      43: invokestatic  #51                 // Method java/lang/Math.min:(II)I
      46: istore        4
      48: iload         4
      50: ifle          64
      53: aload_0
      54: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      57: aload_1
      58: iload_2
      59: iload         4
      61: invokevirtual #52                 // Method org/apache/http/util/ByteArrayBuffer.append:(Lorg/apache/http/util/CharArrayBuffer;II)V
      64: aload_0
      65: getfield      #12                 // Field buffer:Lorg/apache/http/util/ByteArrayBuffer;
      68: invokevirtual #41                 // Method org/apache/http/util/ByteArrayBuffer.isFull:()Z
      71: ifeq          78
      74: aload_0
      75: invokevirtual #37                 // Method flushBuffer:()V
      78: iload_2
      79: iload         4
      81: iadd
      82: istore_2
      83: iload_3
      84: iload         4
      86: isub
      87: istore_3
      88: goto          19
      91: goto          112
      94: aload_1
      95: invokevirtual #53                 // Method org/apache/http/util/CharArrayBuffer.buffer:()[C
      98: iconst_0
      99: aload_1
     100: invokevirtual #50                 // Method org/apache/http/util/CharArrayBuffer.length:()I
     103: invokestatic  #54                 // Method java/nio/CharBuffer.wrap:([CII)Ljava/nio/CharBuffer;
     106: astore_2
     107: aload_0
     108: aload_2
     109: invokespecial #47                 // Method writeEncoded:(Ljava/nio/CharBuffer;)V
     112: aload_0
     113: getstatic     #48                 // Field CRLF:[B
     116: invokevirtual #49                 // Method write:([B)V
     119: return

  private void writeEncoded(java.nio.CharBuffer) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method java/nio/CharBuffer.hasRemaining:()Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      12: ifnonnull     50
      15: aload_0
      16: aload_0
      17: getfield      #15                 // Field charset:Ljava/nio/charset/Charset;
      20: invokevirtual #56                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
      23: putfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      26: aload_0
      27: getfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      30: aload_0
      31: getfield      #24                 // Field onMalformedInputAction:Ljava/nio/charset/CodingErrorAction;
      34: invokevirtual #57                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      37: pop
      38: aload_0
      39: getfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      42: aload_0
      43: getfield      #26                 // Field onUnMappableInputAction:Ljava/nio/charset/CodingErrorAction;
      46: invokevirtual #58                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;
      49: pop
      50: aload_0
      51: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
      54: ifnonnull     67
      57: aload_0
      58: sipush        1024
      61: invokestatic  #60                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      64: putfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
      67: aload_0
      68: getfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      71: invokevirtual #61                 // Method java/nio/charset/CharsetEncoder.reset:()Ljava/nio/charset/CharsetEncoder;
      74: pop
      75: aload_1
      76: invokevirtual #55                 // Method java/nio/CharBuffer.hasRemaining:()Z
      79: ifeq          104
      82: aload_0
      83: getfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
      86: aload_1
      87: aload_0
      88: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
      91: iconst_1
      92: invokevirtual #62                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;
      95: astore_2
      96: aload_0
      97: aload_2
      98: invokespecial #63                 // Method handleEncodingResult:(Ljava/nio/charset/CoderResult;)V
     101: goto          75
     104: aload_0
     105: getfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;
     108: aload_0
     109: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
     112: invokevirtual #64                 // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;
     115: astore_2
     116: aload_0
     117: aload_2
     118: invokespecial #63                 // Method handleEncodingResult:(Ljava/nio/charset/CoderResult;)V
     121: aload_0
     122: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
     125: invokevirtual #65                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     128: pop
     129: return

  private void handleEncodingResult(java.nio.charset.CoderResult) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method java/nio/charset/CoderResult.isError:()Z
       4: ifeq          11
       7: aload_1
       8: invokevirtual #67                 // Method java/nio/charset/CoderResult.throwException:()V
      11: aload_0
      12: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
      15: invokevirtual #68                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      18: pop
      19: aload_0
      20: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
      23: invokevirtual #69                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      26: ifeq          43
      29: aload_0
      30: aload_0
      31: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
      34: invokevirtual #70                 // Method java/nio/ByteBuffer.get:()B
      37: invokevirtual #45                 // Method write:(I)V
      40: goto          19
      43: aload_0
      44: getfield      #59                 // Field bbuf:Ljava/nio/ByteBuffer;
      47: invokevirtual #71                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      50: pop
      51: return

  public org.apache.http.io.HttpTransportMetrics getMetrics();
    Code:
       0: aload_0
       1: getfield      #22                 // Field metrics:Lorg/apache/http/impl/io/HttpTransportMetricsImpl;
       4: areturn

  static {};
    Code:
       0: ldc           #72                 // String US-ASCII
       2: invokestatic  #14                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #16                 // Field ASCII:Ljava/nio/charset/Charset;
       8: iconst_2
       9: newarray       byte
      11: dup
      12: iconst_0
      13: bipush        13
      15: bastore
      16: dup
      17: iconst_1
      18: bipush        10
      20: bastore
      21: putstatic     #48                 // Field CRLF:[B
      24: return
}
