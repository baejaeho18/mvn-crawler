Compiled from "DefaultConnectionReuseStrategy.java"
public class org.apache.http.impl.DefaultConnectionReuseStrategy implements org.apache.http.ConnectionReuseStrategy {
  public org.apache.http.impl.DefaultConnectionReuseStrategy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean keepAlive(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #2                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #3                  // String HTTP response may not be null.
      10: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #2                  // class java/lang/IllegalArgumentException
      21: dup
      22: ldc           #5                  // String HTTP context may not be null.
      24: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_1
      29: invokeinterface #6,  1            // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
      34: invokeinterface #7,  1            // InterfaceMethod org/apache/http/StatusLine.getProtocolVersion:()Lorg/apache/http/ProtocolVersion;
      39: astore_3
      40: aload_1
      41: ldc           #8                  // String Transfer-Encoding
      43: invokeinterface #9,  2            // InterfaceMethod org/apache/http/HttpResponse.getFirstHeader:(Ljava/lang/String;)Lorg/apache/http/Header;
      48: astore        4
      50: aload         4
      52: ifnull        72
      55: ldc           #10                 // String chunked
      57: aload         4
      59: invokeinterface #11,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
      64: invokevirtual #12                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      67: ifne          134
      70: iconst_0
      71: ireturn
      72: aload_0
      73: aload_1
      74: invokespecial #13                 // Method canResponseHaveBody:(Lorg/apache/http/HttpResponse;)Z
      77: ifeq          134
      80: aload_1
      81: ldc           #14                 // String Content-Length
      83: invokeinterface #15,  2           // InterfaceMethod org/apache/http/HttpResponse.getHeaders:(Ljava/lang/String;)[Lorg/apache/http/Header;
      88: astore        5
      90: aload         5
      92: arraylength
      93: iconst_1
      94: if_icmpne     132
      97: aload         5
      99: iconst_0
     100: aaload
     101: astore        6
     103: aload         6
     105: invokeinterface #11,  1           // InterfaceMethod org/apache/http/Header.getValue:()Ljava/lang/String;
     110: invokestatic  #16                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     113: istore        7
     115: iload         7
     117: ifge          122
     120: iconst_0
     121: ireturn
     122: goto          129
     125: astore        7
     127: iconst_0
     128: ireturn
     129: goto          134
     132: iconst_0
     133: ireturn
     134: aload_1
     135: ldc           #18                 // String Connection
     137: invokeinterface #19,  2           // InterfaceMethod org/apache/http/HttpResponse.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;
     142: astore        5
     144: aload         5
     146: invokeinterface #20,  1           // InterfaceMethod org/apache/http/HeaderIterator.hasNext:()Z
     151: ifne          164
     154: aload_1
     155: ldc           #21                 // String Proxy-Connection
     157: invokeinterface #19,  2           // InterfaceMethod org/apache/http/HttpResponse.headerIterator:(Ljava/lang/String;)Lorg/apache/http/HeaderIterator;
     162: astore        5
     164: aload         5
     166: invokeinterface #20,  1           // InterfaceMethod org/apache/http/HeaderIterator.hasNext:()Z
     171: ifeq          246
     174: aload_0
     175: aload         5
     177: invokevirtual #22                 // Method createTokenIterator:(Lorg/apache/http/HeaderIterator;)Lorg/apache/http/TokenIterator;
     180: astore        6
     182: iconst_0
     183: istore        7
     185: aload         6
     187: invokeinterface #23,  1           // InterfaceMethod org/apache/http/TokenIterator.hasNext:()Z
     192: ifeq          232
     195: aload         6
     197: invokeinterface #24,  1           // InterfaceMethod org/apache/http/TokenIterator.nextToken:()Ljava/lang/String;
     202: astore        8
     204: ldc           #25                 // String Close
     206: aload         8
     208: invokevirtual #12                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     211: ifeq          216
     214: iconst_0
     215: ireturn
     216: ldc           #26                 // String Keep-Alive
     218: aload         8
     220: invokevirtual #12                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     223: ifeq          229
     226: iconst_1
     227: istore        7
     229: goto          185
     232: iload         7
     234: ifeq          239
     237: iconst_1
     238: ireturn
     239: goto          246
     242: astore        6
     244: iconst_0
     245: ireturn
     246: aload_3
     247: getstatic     #28                 // Field org/apache/http/HttpVersion.HTTP_1_0:Lorg/apache/http/HttpVersion;
     250: invokevirtual #29                 // Method org/apache/http/ProtocolVersion.lessEquals:(Lorg/apache/http/ProtocolVersion;)Z
     253: ifne          260
     256: iconst_1
     257: goto          261
     260: iconst_0
     261: ireturn
    Exception table:
       from    to  target type
         103   121   125   Class java/lang/NumberFormatException
         174   215   242   Class org/apache/http/ParseException
         216   238   242   Class org/apache/http/ParseException

  protected org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator);
    Code:
       0: new           #30                 // class org/apache/http/message/BasicTokenIterator
       3: dup
       4: aload_1
       5: invokespecial #31                 // Method org/apache/http/message/BasicTokenIterator."<init>":(Lorg/apache/http/HeaderIterator;)V
       8: areturn

  private boolean canResponseHaveBody(org.apache.http.HttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod org/apache/http/HttpResponse.getStatusLine:()Lorg/apache/http/StatusLine;
       6: invokeinterface #32,  1           // InterfaceMethod org/apache/http/StatusLine.getStatusCode:()I
      11: istore_2
      12: iload_2
      13: sipush        200
      16: if_icmplt     44
      19: iload_2
      20: sipush        204
      23: if_icmpeq     44
      26: iload_2
      27: sipush        304
      30: if_icmpeq     44
      33: iload_2
      34: sipush        205
      37: if_icmpeq     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn
}
