Compiled from "AuthenticationStrategy.java"
public interface org.apache.http.client.AuthenticationStrategy {
  public abstract boolean isAuthenticationRequested(org.apache.http.HttpHost, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext);

  public abstract java.util.Map<java.lang.String, org.apache.http.Header> getChallenges(org.apache.http.HttpHost, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.MalformedChallengeException;

  public abstract java.util.Queue<org.apache.http.auth.AuthOption> select(java.util.Map<java.lang.String, org.apache.http.Header>, org.apache.http.HttpHost, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.MalformedChallengeException;

  public abstract void authSucceeded(org.apache.http.HttpHost, org.apache.http.auth.AuthScheme, org.apache.http.protocol.HttpContext);

  public abstract void authFailed(org.apache.http.HttpHost, org.apache.http.auth.AuthScheme, org.apache.http.protocol.HttpContext);
}
