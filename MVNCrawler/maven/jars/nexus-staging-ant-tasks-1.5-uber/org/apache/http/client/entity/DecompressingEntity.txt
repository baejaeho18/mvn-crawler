Compiled from "DecompressingEntity.java"
abstract class org.apache.http.client.entity.DecompressingEntity extends org.apache.http.entity.HttpEntityWrapper {
  private static final int BUFFER_SIZE;

  private java.io.InputStream content;

  public org.apache.http.client.entity.DecompressingEntity(org.apache.http.HttpEntity);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/http/entity/HttpEntityWrapper."<init>":(Lorg/apache/http/HttpEntity;)V
       5: return

  abstract java.io.InputStream getDecompressingInputStream(java.io.InputStream) throws java.io.IOException;

  public java.io.InputStream getContent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field wrappedEntity:Lorg/apache/http/HttpEntity;
       4: invokeinterface #3,  1            // InterfaceMethod org/apache/http/HttpEntity.isStreaming:()Z
       9: ifeq          41
      12: aload_0
      13: getfield      #4                  // Field content:Ljava/io/InputStream;
      16: ifnonnull     36
      19: aload_0
      20: aload_0
      21: aload_0
      22: getfield      #2                  // Field wrappedEntity:Lorg/apache/http/HttpEntity;
      25: invokeinterface #5,  1            // InterfaceMethod org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
      30: invokevirtual #6                  // Method getDecompressingInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
      33: putfield      #4                  // Field content:Ljava/io/InputStream;
      36: aload_0
      37: getfield      #4                  // Field content:Ljava/io/InputStream;
      40: areturn
      41: aload_0
      42: aload_0
      43: getfield      #2                  // Field wrappedEntity:Lorg/apache/http/HttpEntity;
      46: invokeinterface #5,  1            // InterfaceMethod org/apache/http/HttpEntity.getContent:()Ljava/io/InputStream;
      51: invokevirtual #6                  // Method getDecompressingInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;
      54: areturn

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #8                  // String Output stream may not be null
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #10                 // Method getContent:()Ljava/io/InputStream;
      18: astore_2
      19: sipush        2048
      22: newarray       byte
      24: astore_3
      25: aload_2
      26: aload_3
      27: invokevirtual #11                 // Method java/io/InputStream.read:([B)I
      30: dup
      31: istore        4
      33: iconst_m1
      34: if_icmpeq     48
      37: aload_1
      38: aload_3
      39: iconst_0
      40: iload         4
      42: invokevirtual #12                 // Method java/io/OutputStream.write:([BII)V
      45: goto          25
      48: aload_2
      49: invokevirtual #13                 // Method java/io/InputStream.close:()V
      52: goto          64
      55: astore        5
      57: aload_2
      58: invokevirtual #13                 // Method java/io/InputStream.close:()V
      61: aload         5
      63: athrow
      64: return
    Exception table:
       from    to  target type
          19    48    55   any
          55    57    55   any
}
