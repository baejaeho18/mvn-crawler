Compiled from "RouteSpecificPool.java"
abstract class org.apache.http.pool.RouteSpecificPool<T, C, E extends org.apache.http.pool.PoolEntry<T, C>> {
  private final T route;

  private final java.util.Set<E> leased;

  private final java.util.LinkedList<E> available;

  private final java.util.LinkedList<org.apache.http.pool.PoolEntryFuture<E>> pending;

  org.apache.http.pool.RouteSpecificPool(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field route:Ljava/lang/Object;
       9: aload_0
      10: new           #3                  // class java/util/HashSet
      13: dup
      14: invokespecial #4                  // Method java/util/HashSet."<init>":()V
      17: putfield      #5                  // Field leased:Ljava/util/Set;
      20: aload_0
      21: new           #6                  // class java/util/LinkedList
      24: dup
      25: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      28: putfield      #8                  // Field available:Ljava/util/LinkedList;
      31: aload_0
      32: new           #6                  // class java/util/LinkedList
      35: dup
      36: invokespecial #7                  // Method java/util/LinkedList."<init>":()V
      39: putfield      #9                  // Field pending:Ljava/util/LinkedList;
      42: return

  protected abstract E createEntry(C);

  public final T getRoute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field route:Ljava/lang/Object;
       4: areturn

  public int getLeasedCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field leased:Ljava/util/Set;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public int getPendingCount();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       4: invokevirtual #11                 // Method java/util/LinkedList.size:()I
       7: ireturn

  public int getAvailableCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #11                 // Method java/util/LinkedList.size:()I
       7: ireturn

  public int getAllocatedCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #11                 // Method java/util/LinkedList.size:()I
       7: aload_0
       8: getfield      #5                  // Field leased:Ljava/util/Set;
      11: invokeinterface #10,  1           // InterfaceMethod java/util/Set.size:()I
      16: iadd
      17: ireturn

  public E getFree(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #12                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifne          130
      10: aload_1
      11: ifnull        74
      14: aload_0
      15: getfield      #8                  // Field available:Ljava/util/LinkedList;
      18: invokevirtual #13                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          74
      31: aload_2
      32: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #16                 // class org/apache/http/pool/PoolEntry
      40: astore_3
      41: aload_1
      42: aload_3
      43: invokevirtual #17                 // Method org/apache/http/pool/PoolEntry.getState:()Ljava/lang/Object;
      46: invokevirtual #18                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      49: ifeq          71
      52: aload_2
      53: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.remove:()V
      58: aload_0
      59: getfield      #5                  // Field leased:Ljava/util/Set;
      62: aload_3
      63: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      68: pop
      69: aload_3
      70: areturn
      71: goto          22
      74: aload_0
      75: getfield      #8                  // Field available:Ljava/util/LinkedList;
      78: invokevirtual #13                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      81: astore_2
      82: aload_2
      83: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          130
      91: aload_2
      92: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #16                 // class org/apache/http/pool/PoolEntry
     100: astore_3
     101: aload_3
     102: invokevirtual #17                 // Method org/apache/http/pool/PoolEntry.getState:()Ljava/lang/Object;
     105: ifnonnull     127
     108: aload_2
     109: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.remove:()V
     114: aload_0
     115: getfield      #5                  // Field leased:Ljava/util/Set;
     118: aload_3
     119: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload_3
     126: areturn
     127: goto          82
     130: aconst_null
     131: areturn

  public E getLastUsed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field available:Ljava/util/LinkedList;
       4: invokevirtual #12                 // Method java/util/LinkedList.isEmpty:()Z
       7: ifne          21
      10: aload_0
      11: getfield      #8                  // Field available:Ljava/util/LinkedList;
      14: invokevirtual #21                 // Method java/util/LinkedList.getLast:()Ljava/lang/Object;
      17: checkcast     #16                 // class org/apache/http/pool/PoolEntry
      20: areturn
      21: aconst_null
      22: areturn

  public boolean remove(E);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #22                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #23                 // String Pool entry may not be null
      10: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #8                  // Field available:Ljava/util/LinkedList;
      18: aload_1
      19: invokevirtual #25                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      22: ifne          40
      25: aload_0
      26: getfield      #5                  // Field leased:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #26,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      35: ifne          40
      38: iconst_0
      39: ireturn
      40: iconst_1
      41: ireturn

  public void free(E, boolean);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #22                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #23                 // String Pool entry may not be null
      10: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field leased:Ljava/util/Set;
      18: aload_1
      19: invokeinterface #26,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      24: istore_3
      25: iload_3
      26: ifne          61
      29: new           #27                 // class java/lang/IllegalStateException
      32: dup
      33: new           #28                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #30                 // String Entry
      42: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_1
      46: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: ldc           #33                 // String  has not been leased from this pool
      51: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #35                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: iload_2
      62: ifeq          73
      65: aload_0
      66: getfield      #8                  // Field available:Ljava/util/LinkedList;
      69: aload_1
      70: invokevirtual #36                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      73: return

  public E add(C);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #37                 // Method createEntry:(Ljava/lang/Object;)Lorg/apache/http/pool/PoolEntry;
       5: astore_2
       6: aload_0
       7: getfield      #5                  // Field leased:Ljava/util/Set;
      10: aload_2
      11: invokeinterface #20,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_2
      18: areturn

  public void queue(org.apache.http.pool.PoolEntryFuture<E>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       9: aload_1
      10: invokevirtual #38                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public org.apache.http.pool.PoolEntryFuture<E> nextPending();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       4: invokevirtual #39                 // Method java/util/LinkedList.poll:()Ljava/lang/Object;
       7: checkcast     #40                 // class org/apache/http/pool/PoolEntryFuture
      10: areturn

  public void unqueue(org.apache.http.pool.PoolEntryFuture<E>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       9: aload_1
      10: invokevirtual #25                 // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      13: pop
      14: return

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #9                  // Field pending:Ljava/util/LinkedList;
       4: invokevirtual #41                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_1
      18: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #40                 // class org/apache/http/pool/PoolEntryFuture
      26: astore_2
      27: aload_2
      28: iconst_1
      29: invokevirtual #42                 // Method org/apache/http/pool/PoolEntryFuture.cancel:(Z)Z
      32: pop
      33: goto          8
      36: aload_0
      37: getfield      #9                  // Field pending:Ljava/util/LinkedList;
      40: invokevirtual #43                 // Method java/util/LinkedList.clear:()V
      43: aload_0
      44: getfield      #8                  // Field available:Ljava/util/LinkedList;
      47: invokevirtual #41                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      50: astore_1
      51: aload_1
      52: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          77
      60: aload_1
      61: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #16                 // class org/apache/http/pool/PoolEntry
      69: astore_2
      70: aload_2
      71: invokevirtual #44                 // Method org/apache/http/pool/PoolEntry.close:()V
      74: goto          51
      77: aload_0
      78: getfield      #8                  // Field available:Ljava/util/LinkedList;
      81: invokevirtual #43                 // Method java/util/LinkedList.clear:()V
      84: aload_0
      85: getfield      #5                  // Field leased:Ljava/util/Set;
      88: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      93: astore_1
      94: aload_1
      95: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          120
     103: aload_1
     104: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #16                 // class org/apache/http/pool/PoolEntry
     112: astore_2
     113: aload_2
     114: invokevirtual #44                 // Method org/apache/http/pool/PoolEntry.close:()V
     117: goto          94
     120: aload_0
     121: getfield      #5                  // Field leased:Ljava/util/Set;
     124: invokeinterface #46,  1           // InterfaceMethod java/util/Set.clear:()V
     129: return

  public java.lang.String toString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #47                 // String [route:
      11: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field route:Ljava/lang/Object;
      20: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #48                 // String ][leased:
      27: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #5                  // Field leased:Ljava/util/Set;
      36: invokeinterface #10,  1           // InterfaceMethod java/util/Set.size:()I
      41: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: pop
      45: aload_1
      46: ldc           #50                 // String ][available:
      48: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: aload_0
      54: getfield      #8                  // Field available:Ljava/util/LinkedList;
      57: invokevirtual #11                 // Method java/util/LinkedList.size:()I
      60: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: pop
      64: aload_1
      65: ldc           #51                 // String ][pending:
      67: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: aload_1
      72: aload_0
      73: getfield      #9                  // Field pending:Ljava/util/LinkedList;
      76: invokevirtual #11                 // Method java/util/LinkedList.size:()I
      79: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      82: pop
      83: aload_1
      84: ldc           #52                 // String ]
      86: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_1
      91: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: areturn
}
