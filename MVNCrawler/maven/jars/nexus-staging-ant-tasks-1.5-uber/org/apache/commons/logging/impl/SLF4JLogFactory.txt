Compiled from "SLF4JLogFactory.java"
public class org.apache.commons.logging.impl.SLF4JLogFactory extends org.apache.commons.logging.LogFactory {
  java.util.Map loggerMap;

  public static final java.lang.String LOG_PROPERTY;

  protected java.util.Hashtable attributes;

  static java.lang.Class class$org$apache$commons$logging$impl$SLF4JLogFactory;

  public org.apache.commons.logging.impl.SLF4JLogFactory();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/apache/commons/logging/LogFactory."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/Hashtable
       8: dup
       9: invokespecial #8                  // Method java/util/Hashtable."<init>":()V
      12: putfield      #9                  // Field attributes:Ljava/util/Hashtable;
      15: aload_0
      16: new           #10                 // class java/util/HashMap
      19: dup
      20: invokespecial #11                 // Method java/util/HashMap."<init>":()V
      23: putfield      #12                 // Field loggerMap:Ljava/util/Map;
      26: return

  public java.lang.Object getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field attributes:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #13                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public java.lang.String[] getAttributeNames();
    Code:
       0: new           #14                 // class java/util/ArrayList
       3: dup
       4: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #9                  // Field attributes:Ljava/util/Hashtable;
      12: invokevirtual #16                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
      15: astore_2
      16: aload_2
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      22: ifeq          44
      25: aload_1
      26: aload_2
      27: invokeinterface #18,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      32: checkcast     #19                 // class java/lang/String
      35: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: goto          16
      44: aload_1
      45: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
      50: anewarray     #19                 // class java/lang/String
      53: astore_3
      54: iconst_0
      55: istore        4
      57: iload         4
      59: aload_3
      60: arraylength
      61: if_icmpge     85
      64: aload_3
      65: iload         4
      67: aload_1
      68: iload         4
      70: invokeinterface #22,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      75: checkcast     #19                 // class java/lang/String
      78: aastore
      79: iinc          4, 1
      82: goto          57
      85: aload_3
      86: areturn

  public org.apache.commons.logging.Log getInstance(java.lang.Class) throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokevirtual #24                 // Method getInstance:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;
       8: areturn

  public org.apache.commons.logging.Log getInstance(java.lang.String) throws org.apache.commons.logging.LogConfigurationException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #12                 // Field loggerMap:Ljava/util/Map;
       6: dup
       7: astore_3
       8: monitorenter
       9: aload_0
      10: getfield      #12                 // Field loggerMap:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #26                 // class org/apache/commons/logging/Log
      22: astore_2
      23: aload_2
      24: ifnonnull     79
      27: aload_1
      28: invokestatic  #27                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      31: astore        4
      33: aload         4
      35: instanceof    #28                 // class org/slf4j/spi/LocationAwareLogger
      38: ifeq          57
      41: new           #29                 // class org/apache/commons/logging/impl/SLF4JLocationAwareLog
      44: dup
      45: aload         4
      47: checkcast     #28                 // class org/slf4j/spi/LocationAwareLogger
      50: invokespecial #30                 // Method org/apache/commons/logging/impl/SLF4JLocationAwareLog."<init>":(Lorg/slf4j/spi/LocationAwareLogger;)V
      53: astore_2
      54: goto          67
      57: new           #31                 // class org/apache/commons/logging/impl/SLF4JLog
      60: dup
      61: aload         4
      63: invokespecial #32                 // Method org/apache/commons/logging/impl/SLF4JLog."<init>":(Lorg/slf4j/Logger;)V
      66: astore_2
      67: aload_0
      68: getfield      #12                 // Field loggerMap:Ljava/util/Map;
      71: aload_1
      72: aload_2
      73: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_3
      80: monitorexit
      81: goto          91
      84: astore        5
      86: aload_3
      87: monitorexit
      88: aload         5
      90: athrow
      91: aload_2
      92: areturn
    Exception table:
       from    to  target type
           9    81    84   any
          84    88    84   any

  public void release();
    Code:
       0: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
       3: new           #35                 // class java/lang/StringBuffer
       6: dup
       7: invokespecial #36                 // Method java/lang/StringBuffer."<init>":()V
      10: ldc           #37                 // String WARN: The method
      12: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      15: getstatic     #39                 // Field class$org$apache$commons$logging$impl$SLF4JLogFactory:Ljava/lang/Class;
      18: ifnonnull     33
      21: ldc           #40                 // String org.apache.commons.logging.impl.SLF4JLogFactory
      23: invokestatic  #41                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      26: dup
      27: putstatic     #39                 // Field class$org$apache$commons$logging$impl$SLF4JLogFactory:Ljava/lang/Class;
      30: goto          36
      33: getstatic     #39                 // Field class$org$apache$commons$logging$impl$SLF4JLogFactory:Ljava/lang/Class;
      36: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      39: ldc           #43                 // String #release() was invoked.
      41: invokevirtual #38                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      44: invokevirtual #44                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      47: invokevirtual #45                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      50: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
      53: ldc           #46                 // String WARN: Please see http://www.slf4j.org/codes.html#release for an explanation.
      55: invokevirtual #45                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      58: getstatic     #34                 // Field java/lang/System.out:Ljava/io/PrintStream;
      61: invokevirtual #47                 // Method java/io/PrintStream.flush:()V
      64: return

  public void removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field attributes:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #48                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  public void setAttribute(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     16
       4: aload_0
       5: getfield      #9                  // Field attributes:Ljava/util/Hashtable;
       8: aload_1
       9: invokevirtual #48                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      12: pop
      13: goto          26
      16: aload_0
      17: getfield      #9                  // Field attributes:Ljava/util/Hashtable;
      20: aload_1
      21: aload_2
      22: invokevirtual #49                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      25: pop
      26: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException
}
