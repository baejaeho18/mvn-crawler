Compiled from "JDBCDynaClass.java"
abstract class org.apache.commons.beanutils.JDBCDynaClass implements org.apache.commons.beanutils.DynaClass,java.io.Serializable {
  protected boolean lowerCase;

  private boolean useColumnLabel;

  protected org.apache.commons.beanutils.DynaProperty[] properties;

  protected java.util.Map propertiesMap;

  private java.util.Map columnNameXref;

  static java.lang.Class class$java$sql$Date;

  static java.lang.Class class$java$sql$Timestamp;

  static java.lang.Class class$java$sql$Time;

  static java.lang.Class class$java$lang$Object;

  org.apache.commons.beanutils.JDBCDynaClass();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #7                  // Field lowerCase:Z
       9: aload_0
      10: aconst_null
      11: putfield      #8                  // Field properties:[Lorg/apache/commons/beanutils/DynaProperty;
      14: aload_0
      15: new           #9                  // class java/util/HashMap
      18: dup
      19: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      22: putfield      #11                 // Field propertiesMap:Ljava/util/Map;
      25: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public org.apache.commons.beanutils.DynaProperty getDynaProperty(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #14                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #15                 // String No property name specified
      10: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #11                 // Field propertiesMap:Ljava/util/Map;
      18: aload_1
      19: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #18                 // class org/apache/commons/beanutils/DynaProperty
      27: areturn

  public org.apache.commons.beanutils.DynaProperty[] getDynaProperties();
    Code:
       0: aload_0
       1: getfield      #8                  // Field properties:[Lorg/apache/commons/beanutils/DynaProperty;
       4: areturn

  public org.apache.commons.beanutils.DynaBean newInstance() throws java.lang.IllegalAccessException, java.lang.InstantiationException;
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #20                 // String newInstance() not supported
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void setUseColumnLabel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field useColumnLabel:Z
       5: return

  protected java.lang.Class loadClass(java.lang.String) throws java.sql.SQLException;
    Code:
       0: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #24                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_2
       7: aload_2
       8: ifnonnull     19
      11: aload_0
      12: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #25                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      18: astore_2
      19: aload_1
      20: iconst_0
      21: aload_2
      22: invokestatic  #26                 // Method java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;
      25: areturn
      26: astore_2
      27: new           #28                 // class java/sql/SQLException
      30: dup
      31: new           #29                 // class java/lang/StringBuffer
      34: dup
      35: invokespecial #30                 // Method java/lang/StringBuffer."<init>":()V
      38: ldc           #31                 // String Cannot load column class \'
      40: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: aload_1
      44: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      47: ldc           #33                 // String \':
      49: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: aload_2
      53: invokevirtual #34                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
      56: invokevirtual #35                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      59: invokespecial #36                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      62: athrow
    Exception table:
       from    to  target type
           0    25    26   Class java/lang/Exception

  protected org.apache.commons.beanutils.DynaProperty createDynaProperty(java.sql.ResultSetMetaData, int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #22                 // Field useColumnLabel:Z
       6: ifeq          17
       9: aload_1
      10: iload_2
      11: invokeinterface #37,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;
      16: astore_3
      17: aload_3
      18: ifnull        31
      21: aload_3
      22: invokevirtual #38                 // Method java/lang/String.trim:()Ljava/lang/String;
      25: invokevirtual #39                 // Method java/lang/String.length:()I
      28: ifne          39
      31: aload_1
      32: iload_2
      33: invokeinterface #40,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnName:(I)Ljava/lang/String;
      38: astore_3
      39: aload_0
      40: getfield      #7                  // Field lowerCase:Z
      43: ifeq          53
      46: aload_3
      47: invokevirtual #41                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      50: goto          54
      53: aload_3
      54: astore        4
      56: aload         4
      58: aload_3
      59: invokevirtual #42                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      62: ifne          96
      65: aload_0
      66: getfield      #43                 // Field columnNameXref:Ljava/util/Map;
      69: ifnonnull     83
      72: aload_0
      73: new           #9                  // class java/util/HashMap
      76: dup
      77: invokespecial #10                 // Method java/util/HashMap."<init>":()V
      80: putfield      #43                 // Field columnNameXref:Ljava/util/Map;
      83: aload_0
      84: getfield      #43                 // Field columnNameXref:Ljava/util/Map;
      87: aload         4
      89: aload_3
      90: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: aconst_null
      97: astore        5
      99: aload_1
     100: iload_2
     101: invokeinterface #45,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnType:(I)I
     106: istore        6
     108: iload         6
     110: tableswitch   { // 91 to 93
                    91: 136
                    92: 198
                    93: 167
               default: 229
          }
     136: new           #18                 // class org/apache/commons/beanutils/DynaProperty
     139: dup
     140: aload         4
     142: getstatic     #46                 // Field class$java$sql$Date:Ljava/lang/Class;
     145: ifnonnull     160
     148: ldc           #47                 // String java.sql.Date
     150: invokestatic  #48                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     153: dup
     154: putstatic     #46                 // Field class$java$sql$Date:Ljava/lang/Class;
     157: goto          163
     160: getstatic     #46                 // Field class$java$sql$Date:Ljava/lang/Class;
     163: invokespecial #49                 // Method org/apache/commons/beanutils/DynaProperty."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
     166: areturn
     167: new           #18                 // class org/apache/commons/beanutils/DynaProperty
     170: dup
     171: aload         4
     173: getstatic     #50                 // Field class$java$sql$Timestamp:Ljava/lang/Class;
     176: ifnonnull     191
     179: ldc           #51                 // String java.sql.Timestamp
     181: invokestatic  #48                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     184: dup
     185: putstatic     #50                 // Field class$java$sql$Timestamp:Ljava/lang/Class;
     188: goto          194
     191: getstatic     #50                 // Field class$java$sql$Timestamp:Ljava/lang/Class;
     194: invokespecial #49                 // Method org/apache/commons/beanutils/DynaProperty."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
     197: areturn
     198: new           #18                 // class org/apache/commons/beanutils/DynaProperty
     201: dup
     202: aload         4
     204: getstatic     #52                 // Field class$java$sql$Time:Ljava/lang/Class;
     207: ifnonnull     222
     210: ldc           #53                 // String java.sql.Time
     212: invokestatic  #48                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     215: dup
     216: putstatic     #52                 // Field class$java$sql$Time:Ljava/lang/Class;
     219: goto          225
     222: getstatic     #52                 // Field class$java$sql$Time:Ljava/lang/Class;
     225: invokespecial #49                 // Method org/apache/commons/beanutils/DynaProperty."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
     228: areturn
     229: aload_1
     230: iload_2
     231: invokeinterface #54,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnClassName:(I)Ljava/lang/String;
     236: astore        5
     238: goto          243
     241: astore        6
     243: getstatic     #55                 // Field class$java$lang$Object:Ljava/lang/Class;
     246: ifnonnull     261
     249: ldc           #56                 // String java.lang.Object
     251: invokestatic  #48                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     254: dup
     255: putstatic     #55                 // Field class$java$lang$Object:Ljava/lang/Class;
     258: goto          264
     261: getstatic     #55                 // Field class$java$lang$Object:Ljava/lang/Class;
     264: astore        6
     266: aload         5
     268: ifnull        279
     271: aload_0
     272: aload         5
     274: invokevirtual #57                 // Method loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     277: astore        6
     279: new           #18                 // class org/apache/commons/beanutils/DynaProperty
     282: dup
     283: aload         4
     285: aload         6
     287: invokespecial #49                 // Method org/apache/commons/beanutils/DynaProperty."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
     290: areturn
    Exception table:
       from    to  target type
          99   166   241   Class java/sql/SQLException
         167   197   241   Class java/sql/SQLException
         198   228   241   Class java/sql/SQLException
         229   238   241   Class java/sql/SQLException

  protected void introspect(java.sql.ResultSet) throws java.sql.SQLException;
    Code:
       0: new           #58                 // class java/util/ArrayList
       3: dup
       4: invokespecial #59                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #60,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
      14: astore_3
      15: aload_3
      16: invokeinterface #61,  1           // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I
      21: istore        4
      23: iconst_1
      24: istore        5
      26: iload         5
      28: iload         4
      30: if_icmpgt     60
      33: aload_0
      34: aload_3
      35: iload         5
      37: invokevirtual #62                 // Method createDynaProperty:(Ljava/sql/ResultSetMetaData;I)Lorg/apache/commons/beanutils/DynaProperty;
      40: astore        6
      42: aload         6
      44: ifnull        54
      47: aload_2
      48: aload         6
      50: invokevirtual #63                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      53: pop
      54: iinc          5, 1
      57: goto          26
      60: aload_0
      61: aload_2
      62: aload_2
      63: invokevirtual #64                 // Method java/util/ArrayList.size:()I
      66: anewarray     #18                 // class org/apache/commons/beanutils/DynaProperty
      69: invokevirtual #65                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      72: checkcast     #66                 // class "[Lorg/apache/commons/beanutils/DynaProperty;"
      75: checkcast     #66                 // class "[Lorg/apache/commons/beanutils/DynaProperty;"
      78: putfield      #8                  // Field properties:[Lorg/apache/commons/beanutils/DynaProperty;
      81: iconst_0
      82: istore        5
      84: iload         5
      86: aload_0
      87: getfield      #8                  // Field properties:[Lorg/apache/commons/beanutils/DynaProperty;
      90: arraylength
      91: if_icmpge     127
      94: aload_0
      95: getfield      #11                 // Field propertiesMap:Ljava/util/Map;
      98: aload_0
      99: getfield      #8                  // Field properties:[Lorg/apache/commons/beanutils/DynaProperty;
     102: iload         5
     104: aaload
     105: invokevirtual #67                 // Method org/apache/commons/beanutils/DynaProperty.getName:()Ljava/lang/String;
     108: aload_0
     109: getfield      #8                  // Field properties:[Lorg/apache/commons/beanutils/DynaProperty;
     112: iload         5
     114: aaload
     115: invokeinterface #44,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     120: pop
     121: iinc          5, 1
     124: goto          84
     127: return

  protected java.lang.Object getObject(java.sql.ResultSet, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #68                 // Method getDynaProperty:(Ljava/lang/String;)Lorg/apache/commons/beanutils/DynaProperty;
       5: astore_3
       6: aload_3
       7: ifnonnull     42
      10: new           #14                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #29                 // class java/lang/StringBuffer
      17: dup
      18: invokespecial #30                 // Method java/lang/StringBuffer."<init>":()V
      21: ldc           #69                 // String Invalid name \'
      23: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      26: aload_2
      27: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: ldc           #70                 // String \'
      32: invokevirtual #32                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: invokevirtual #35                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      38: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_2
      44: invokevirtual #71                 // Method getColumnName:(Ljava/lang/String;)Ljava/lang/String;
      47: astore        4
      49: aload_3
      50: invokevirtual #72                 // Method org/apache/commons/beanutils/DynaProperty.getType:()Ljava/lang/Class;
      53: astore        5
      55: aload         5
      57: getstatic     #46                 // Field class$java$sql$Date:Ljava/lang/Class;
      60: ifnonnull     75
      63: ldc           #47                 // String java.sql.Date
      65: invokestatic  #48                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      68: dup
      69: putstatic     #46                 // Field class$java$sql$Date:Ljava/lang/Class;
      72: goto          78
      75: getstatic     #46                 // Field class$java$sql$Date:Ljava/lang/Class;
      78: invokevirtual #73                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      81: ifeq          93
      84: aload_1
      85: aload         4
      87: invokeinterface #74,  2           // InterfaceMethod java/sql/ResultSet.getDate:(Ljava/lang/String;)Ljava/sql/Date;
      92: areturn
      93: aload         5
      95: getstatic     #50                 // Field class$java$sql$Timestamp:Ljava/lang/Class;
      98: ifnonnull     113
     101: ldc           #51                 // String java.sql.Timestamp
     103: invokestatic  #48                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     106: dup
     107: putstatic     #50                 // Field class$java$sql$Timestamp:Ljava/lang/Class;
     110: goto          116
     113: getstatic     #50                 // Field class$java$sql$Timestamp:Ljava/lang/Class;
     116: invokevirtual #73                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     119: ifeq          131
     122: aload_1
     123: aload         4
     125: invokeinterface #75,  2           // InterfaceMethod java/sql/ResultSet.getTimestamp:(Ljava/lang/String;)Ljava/sql/Timestamp;
     130: areturn
     131: aload         5
     133: getstatic     #52                 // Field class$java$sql$Time:Ljava/lang/Class;
     136: ifnonnull     151
     139: ldc           #53                 // String java.sql.Time
     141: invokestatic  #48                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
     144: dup
     145: putstatic     #52                 // Field class$java$sql$Time:Ljava/lang/Class;
     148: goto          154
     151: getstatic     #52                 // Field class$java$sql$Time:Ljava/lang/Class;
     154: invokevirtual #73                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     157: ifeq          169
     160: aload_1
     161: aload         4
     163: invokeinterface #76,  2           // InterfaceMethod java/sql/ResultSet.getTime:(Ljava/lang/String;)Ljava/sql/Time;
     168: areturn
     169: aload_1
     170: aload         4
     172: invokeinterface #77,  2           // InterfaceMethod java/sql/ResultSet.getObject:(Ljava/lang/String;)Ljava/lang/Object;
     177: areturn

  protected java.lang.String getColumnName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #43                 // Field columnNameXref:Ljava/util/Map;
       4: ifnull        34
       7: aload_0
       8: getfield      #43                 // Field columnNameXref:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #78,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      17: ifeq          34
      20: aload_0
      21: getfield      #43                 // Field columnNameXref:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #79                 // class java/lang/String
      33: areturn
      34: aload_1
      35: areturn

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException
}
