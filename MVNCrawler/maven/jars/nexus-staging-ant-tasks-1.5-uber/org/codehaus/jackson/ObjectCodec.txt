Compiled from "ObjectCodec.java"
public abstract class org.codehaus.jackson.ObjectCodec {
  protected org.codehaus.jackson.ObjectCodec();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract <T> T readValue(org.codehaus.jackson.JsonParser, java.lang.Class<T>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract <T> T readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference<?>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract <T> T readValue(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract <T> java.util.Iterator<T> readValues(org.codehaus.jackson.JsonParser, java.lang.Class<T>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract <T> java.util.Iterator<T> readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.TypeReference<?>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract <T> java.util.Iterator<T> readValues(org.codehaus.jackson.JsonParser, org.codehaus.jackson.type.JavaType) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract void writeValue(org.codehaus.jackson.JsonGenerator, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract void writeTree(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.JsonNode) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract org.codehaus.jackson.JsonNode createObjectNode();

  public abstract org.codehaus.jackson.JsonNode createArrayNode();

  public abstract org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode);

  public abstract <T> T treeToValue(org.codehaus.jackson.JsonNode, java.lang.Class<T>) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
}
