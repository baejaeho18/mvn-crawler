Compiled from "JsonGeneratorBase.java"
public abstract class org.codehaus.jackson.impl.JsonGeneratorBase extends org.codehaus.jackson.JsonGenerator {
  protected org.codehaus.jackson.ObjectCodec _objectCodec;

  protected int _features;

  protected boolean _cfgNumbersAsStrings;

  protected org.codehaus.jackson.impl.JsonWriteContext _writeContext;

  protected boolean _closed;

  protected org.codehaus.jackson.impl.JsonGeneratorBase(int, org.codehaus.jackson.ObjectCodec);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/JsonGenerator."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field _features:I
       9: aload_0
      10: invokestatic  #3                  // Method org/codehaus/jackson/impl/JsonWriteContext.createRootContext:()Lorg/codehaus/jackson/impl/JsonWriteContext;
      13: putfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
      21: aload_0
      22: aload_0
      23: getstatic     #6                  // Field org/codehaus/jackson/JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS:Lorg/codehaus/jackson/JsonGenerator$Feature;
      26: invokevirtual #7                  // Method isEnabled:(Lorg/codehaus/jackson/JsonGenerator$Feature;)Z
      29: putfield      #8                  // Field _cfgNumbersAsStrings:Z
      32: return

  public org.codehaus.jackson.Version version();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #10                 // Method org/codehaus/jackson/util/VersionUtil.versionFor:(Ljava/lang/Class;)Lorg/codehaus/jackson/Version;
       7: areturn

  public org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field _features:I
       5: aload_1
       6: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator$Feature.getMask:()I
       9: ior
      10: putfield      #2                  // Field _features:I
      13: aload_1
      14: getstatic     #6                  // Field org/codehaus/jackson/JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS:Lorg/codehaus/jackson/JsonGenerator$Feature;
      17: if_acmpne     28
      20: aload_0
      21: iconst_1
      22: putfield      #8                  // Field _cfgNumbersAsStrings:Z
      25: goto          42
      28: aload_1
      29: getstatic     #12                 // Field org/codehaus/jackson/JsonGenerator$Feature.ESCAPE_NON_ASCII:Lorg/codehaus/jackson/JsonGenerator$Feature;
      32: if_acmpne     42
      35: aload_0
      36: bipush        127
      38: invokevirtual #13                 // Method setHighestNonEscapedChar:(I)Lorg/codehaus/jackson/JsonGenerator;
      41: pop
      42: aload_0
      43: areturn

  public org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field _features:I
       5: aload_1
       6: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator$Feature.getMask:()I
       9: iconst_m1
      10: ixor
      11: iand
      12: putfield      #2                  // Field _features:I
      15: aload_1
      16: getstatic     #6                  // Field org/codehaus/jackson/JsonGenerator$Feature.WRITE_NUMBERS_AS_STRINGS:Lorg/codehaus/jackson/JsonGenerator$Feature;
      19: if_acmpne     30
      22: aload_0
      23: iconst_0
      24: putfield      #8                  // Field _cfgNumbersAsStrings:Z
      27: goto          43
      30: aload_1
      31: getstatic     #12                 // Field org/codehaus/jackson/JsonGenerator$Feature.ESCAPE_NON_ASCII:Lorg/codehaus/jackson/JsonGenerator$Feature;
      34: if_acmpne     43
      37: aload_0
      38: iconst_0
      39: invokevirtual #13                 // Method setHighestNonEscapedChar:(I)Lorg/codehaus/jackson/JsonGenerator;
      42: pop
      43: aload_0
      44: areturn

  public final boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _features:I
       4: aload_1
       5: invokevirtual #11                 // Method org/codehaus/jackson/JsonGenerator$Feature.getMask:()I
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter();
    Code:
       0: aload_0
       1: new           #14                 // class org/codehaus/jackson/util/DefaultPrettyPrinter
       4: dup
       5: invokespecial #15                 // Method org/codehaus/jackson/util/DefaultPrettyPrinter."<init>":()V
       8: invokevirtual #16                 // Method setPrettyPrinter:(Lorg/codehaus/jackson/PrettyPrinter;)Lorg/codehaus/jackson/JsonGenerator;
      11: areturn

  public org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
       5: aload_0
       6: areturn

  public final org.codehaus.jackson.ObjectCodec getCodec();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
       4: areturn

  public final org.codehaus.jackson.impl.JsonWriteContext getOutputContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
       4: areturn

  public void writeStartArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: ldc           #17                 // String start an array
       3: invokevirtual #18                 // Method _verifyValueWrite:(Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      11: invokevirtual #19                 // Method org/codehaus/jackson/impl/JsonWriteContext.createChildArrayContext:()Lorg/codehaus/jackson/impl/JsonWriteContext;
      14: putfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      17: aload_0
      18: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      21: ifnull        37
      24: aload_0
      25: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      28: aload_0
      29: invokeinterface #21,  2           // InterfaceMethod org/codehaus/jackson/PrettyPrinter.writeStartArray:(Lorg/codehaus/jackson/JsonGenerator;)V
      34: goto          41
      37: aload_0
      38: invokevirtual #22                 // Method _writeStartArray:()V
      41: return

  protected void _writeStartArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: return

  public void writeEndArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
       4: invokevirtual #23                 // Method org/codehaus/jackson/impl/JsonWriteContext.inArray:()Z
       7: ifne          39
      10: aload_0
      11: new           #24                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #26                 // String Current context not an ARRAY but
      20: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      27: invokevirtual #28                 // Method org/codehaus/jackson/impl/JsonWriteContext.getTypeDesc:()Ljava/lang/String;
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokevirtual #30                 // Method _reportError:(Ljava/lang/String;)V
      39: aload_0
      40: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      43: ifnull        66
      46: aload_0
      47: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      50: aload_0
      51: aload_0
      52: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      55: invokevirtual #31                 // Method org/codehaus/jackson/impl/JsonWriteContext.getEntryCount:()I
      58: invokeinterface #32,  3           // InterfaceMethod org/codehaus/jackson/PrettyPrinter.writeEndArray:(Lorg/codehaus/jackson/JsonGenerator;I)V
      63: goto          70
      66: aload_0
      67: invokevirtual #33                 // Method _writeEndArray:()V
      70: aload_0
      71: aload_0
      72: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      75: invokevirtual #34                 // Method org/codehaus/jackson/impl/JsonWriteContext.getParent:()Lorg/codehaus/jackson/impl/JsonWriteContext;
      78: putfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      81: return

  protected void _writeEndArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: return

  public void writeStartObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: ldc           #35                 // String start an object
       3: invokevirtual #18                 // Method _verifyValueWrite:(Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      11: invokevirtual #36                 // Method org/codehaus/jackson/impl/JsonWriteContext.createChildObjectContext:()Lorg/codehaus/jackson/impl/JsonWriteContext;
      14: putfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      17: aload_0
      18: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      21: ifnull        37
      24: aload_0
      25: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      28: aload_0
      29: invokeinterface #37,  2           // InterfaceMethod org/codehaus/jackson/PrettyPrinter.writeStartObject:(Lorg/codehaus/jackson/JsonGenerator;)V
      34: goto          41
      37: aload_0
      38: invokevirtual #38                 // Method _writeStartObject:()V
      41: return

  protected void _writeStartObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: return

  public void writeEndObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
       4: invokevirtual #39                 // Method org/codehaus/jackson/impl/JsonWriteContext.inObject:()Z
       7: ifne          39
      10: aload_0
      11: new           #24                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #40                 // String Current context not an object but
      20: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      27: invokevirtual #28                 // Method org/codehaus/jackson/impl/JsonWriteContext.getTypeDesc:()Ljava/lang/String;
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokevirtual #30                 // Method _reportError:(Ljava/lang/String;)V
      39: aload_0
      40: aload_0
      41: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      44: invokevirtual #34                 // Method org/codehaus/jackson/impl/JsonWriteContext.getParent:()Lorg/codehaus/jackson/impl/JsonWriteContext;
      47: putfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      50: aload_0
      51: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      54: ifnull        77
      57: aload_0
      58: getfield      #20                 // Field _cfgPrettyPrinter:Lorg/codehaus/jackson/PrettyPrinter;
      61: aload_0
      62: aload_0
      63: getfield      #4                  // Field _writeContext:Lorg/codehaus/jackson/impl/JsonWriteContext;
      66: invokevirtual #31                 // Method org/codehaus/jackson/impl/JsonWriteContext.getEntryCount:()I
      69: invokeinterface #41,  3           // InterfaceMethod org/codehaus/jackson/PrettyPrinter.writeEndObject:(Lorg/codehaus/jackson/JsonGenerator;I)V
      74: goto          81
      77: aload_0
      78: invokevirtual #42                 // Method _writeEndObject:()V
      81: return

  protected void _writeEndObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: return

  public void writeRawValue(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: ldc           #43                 // String write raw value
       3: invokevirtual #18                 // Method _verifyValueWrite:(Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #44                 // Method writeRaw:(Ljava/lang/String;)V
      11: return

  public void writeRawValue(java.lang.String, int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: ldc           #43                 // String write raw value
       3: invokevirtual #18                 // Method _verifyValueWrite:(Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokevirtual #45                 // Method writeRaw:(Ljava/lang/String;II)V
      13: return

  public void writeRawValue(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_0
       1: ldc           #43                 // String write raw value
       3: invokevirtual #18                 // Method _verifyValueWrite:(Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: iload_2
       9: iload_3
      10: invokevirtual #46                 // Method writeRaw:([CII)V
      13: return

  public void writeObject(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #47                 // Method writeNull:()V
       8: goto          33
      11: aload_0
      12: getfield      #5                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
      15: ifnull        28
      18: aload_0
      19: getfield      #5                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
      22: aload_0
      23: aload_1
      24: invokevirtual #48                 // Method org/codehaus/jackson/ObjectCodec.writeValue:(Lorg/codehaus/jackson/JsonGenerator;Ljava/lang/Object;)V
      27: return
      28: aload_0
      29: aload_1
      30: invokevirtual #49                 // Method _writeSimpleObject:(Ljava/lang/Object;)V
      33: return

  public void writeTree(org.codehaus.jackson.JsonNode) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #47                 // Method writeNull:()V
       8: goto          37
      11: aload_0
      12: getfield      #5                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
      15: ifnonnull     28
      18: new           #50                 // class java/lang/IllegalStateException
      21: dup
      22: ldc           #51                 // String No ObjectCodec defined for the generator, can not serialize JsonNode-based trees
      24: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #5                  // Field _objectCodec:Lorg/codehaus/jackson/ObjectCodec;
      32: aload_0
      33: aload_1
      34: invokevirtual #53                 // Method org/codehaus/jackson/ObjectCodec.writeTree:(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/JsonNode;)V
      37: return

  public abstract void flush() throws java.io.IOException;

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #54                 // Field _closed:Z
       5: return

  public boolean isClosed();
    Code:
       0: aload_0
       1: getfield      #54                 // Field _closed:Z
       4: ireturn

  public final void copyCurrentEvent(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       4: astore_2
       5: aload_2
       6: ifnonnull     15
       9: aload_0
      10: ldc           #56                 // String No current event to copy
      12: invokevirtual #30                 // Method _reportError:(Ljava/lang/String;)V
      15: getstatic     #57                 // Field org/codehaus/jackson/impl/JsonGeneratorBase$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      18: aload_2
      19: invokevirtual #58                 // Method org/codehaus/jackson/JsonToken.ordinal:()I
      22: iaload
      23: tableswitch   { // 1 to 12
                     1: 84
                     2: 91
                     3: 98
                     4: 105
                     5: 112
                     6: 123
                     7: 160
                     8: 229
                     9: 301
                    10: 309
                    11: 317
                    12: 324
               default: 335
          }
      84: aload_0
      85: invokevirtual #59                 // Method writeStartObject:()V
      88: goto          339
      91: aload_0
      92: invokevirtual #60                 // Method writeEndObject:()V
      95: goto          339
      98: aload_0
      99: invokevirtual #61                 // Method writeStartArray:()V
     102: goto          339
     105: aload_0
     106: invokevirtual #62                 // Method writeEndArray:()V
     109: goto          339
     112: aload_0
     113: aload_1
     114: invokevirtual #63                 // Method org/codehaus/jackson/JsonParser.getCurrentName:()Ljava/lang/String;
     117: invokevirtual #64                 // Method writeFieldName:(Ljava/lang/String;)V
     120: goto          339
     123: aload_1
     124: invokevirtual #65                 // Method org/codehaus/jackson/JsonParser.hasTextCharacters:()Z
     127: ifeq          149
     130: aload_0
     131: aload_1
     132: invokevirtual #66                 // Method org/codehaus/jackson/JsonParser.getTextCharacters:()[C
     135: aload_1
     136: invokevirtual #67                 // Method org/codehaus/jackson/JsonParser.getTextOffset:()I
     139: aload_1
     140: invokevirtual #68                 // Method org/codehaus/jackson/JsonParser.getTextLength:()I
     143: invokevirtual #69                 // Method writeString:([CII)V
     146: goto          339
     149: aload_0
     150: aload_1
     151: invokevirtual #70                 // Method org/codehaus/jackson/JsonParser.getText:()Ljava/lang/String;
     154: invokevirtual #71                 // Method writeString:(Ljava/lang/String;)V
     157: goto          339
     160: getstatic     #72                 // Field org/codehaus/jackson/impl/JsonGeneratorBase$1.$SwitchMap$org$codehaus$jackson$JsonParser$NumberType:[I
     163: aload_1
     164: invokevirtual #73                 // Method org/codehaus/jackson/JsonParser.getNumberType:()Lorg/codehaus/jackson/JsonParser$NumberType;
     167: invokevirtual #74                 // Method org/codehaus/jackson/JsonParser$NumberType.ordinal:()I
     170: iaload
     171: lookupswitch  { // 2
                     1: 196
                     2: 207
               default: 218
          }
     196: aload_0
     197: aload_1
     198: invokevirtual #75                 // Method org/codehaus/jackson/JsonParser.getIntValue:()I
     201: invokevirtual #76                 // Method writeNumber:(I)V
     204: goto          339
     207: aload_0
     208: aload_1
     209: invokevirtual #77                 // Method org/codehaus/jackson/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;
     212: invokevirtual #78                 // Method writeNumber:(Ljava/math/BigInteger;)V
     215: goto          339
     218: aload_0
     219: aload_1
     220: invokevirtual #79                 // Method org/codehaus/jackson/JsonParser.getLongValue:()J
     223: invokevirtual #80                 // Method writeNumber:(J)V
     226: goto          339
     229: getstatic     #72                 // Field org/codehaus/jackson/impl/JsonGeneratorBase$1.$SwitchMap$org$codehaus$jackson$JsonParser$NumberType:[I
     232: aload_1
     233: invokevirtual #73                 // Method org/codehaus/jackson/JsonParser.getNumberType:()Lorg/codehaus/jackson/JsonParser$NumberType;
     236: invokevirtual #74                 // Method org/codehaus/jackson/JsonParser$NumberType.ordinal:()I
     239: iaload
     240: lookupswitch  { // 2
                     3: 268
                     4: 279
               default: 290
          }
     268: aload_0
     269: aload_1
     270: invokevirtual #81                 // Method org/codehaus/jackson/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;
     273: invokevirtual #82                 // Method writeNumber:(Ljava/math/BigDecimal;)V
     276: goto          339
     279: aload_0
     280: aload_1
     281: invokevirtual #83                 // Method org/codehaus/jackson/JsonParser.getFloatValue:()F
     284: invokevirtual #84                 // Method writeNumber:(F)V
     287: goto          339
     290: aload_0
     291: aload_1
     292: invokevirtual #85                 // Method org/codehaus/jackson/JsonParser.getDoubleValue:()D
     295: invokevirtual #86                 // Method writeNumber:(D)V
     298: goto          339
     301: aload_0
     302: iconst_1
     303: invokevirtual #87                 // Method writeBoolean:(Z)V
     306: goto          339
     309: aload_0
     310: iconst_0
     311: invokevirtual #87                 // Method writeBoolean:(Z)V
     314: goto          339
     317: aload_0
     318: invokevirtual #47                 // Method writeNull:()V
     321: goto          339
     324: aload_0
     325: aload_1
     326: invokevirtual #88                 // Method org/codehaus/jackson/JsonParser.getEmbeddedObject:()Ljava/lang/Object;
     329: invokevirtual #89                 // Method writeObject:(Ljava/lang/Object;)V
     332: goto          339
     335: aload_0
     336: invokevirtual #90                 // Method _cantHappen:()V
     339: return

  public final void copyCurrentStructure(org.codehaus.jackson.JsonParser) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       4: astore_2
       5: aload_2
       6: getstatic     #91                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
       9: if_acmpne     25
      12: aload_0
      13: aload_1
      14: invokevirtual #63                 // Method org/codehaus/jackson/JsonParser.getCurrentName:()Ljava/lang/String;
      17: invokevirtual #64                 // Method writeFieldName:(Ljava/lang/String;)V
      20: aload_1
      21: invokevirtual #92                 // Method org/codehaus/jackson/JsonParser.nextToken:()Lorg/codehaus/jackson/JsonToken;
      24: astore_2
      25: getstatic     #57                 // Field org/codehaus/jackson/impl/JsonGeneratorBase$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      28: aload_2
      29: invokevirtual #58                 // Method org/codehaus/jackson/JsonToken.ordinal:()I
      32: iaload
      33: lookupswitch  { // 2
                     1: 89
                     3: 60
               default: 118
          }
      60: aload_0
      61: invokevirtual #61                 // Method writeStartArray:()V
      64: aload_1
      65: invokevirtual #92                 // Method org/codehaus/jackson/JsonParser.nextToken:()Lorg/codehaus/jackson/JsonToken;
      68: getstatic     #93                 // Field org/codehaus/jackson/JsonToken.END_ARRAY:Lorg/codehaus/jackson/JsonToken;
      71: if_acmpeq     82
      74: aload_0
      75: aload_1
      76: invokevirtual #94                 // Method copyCurrentStructure:(Lorg/codehaus/jackson/JsonParser;)V
      79: goto          64
      82: aload_0
      83: invokevirtual #62                 // Method writeEndArray:()V
      86: goto          123
      89: aload_0
      90: invokevirtual #59                 // Method writeStartObject:()V
      93: aload_1
      94: invokevirtual #92                 // Method org/codehaus/jackson/JsonParser.nextToken:()Lorg/codehaus/jackson/JsonToken;
      97: getstatic     #95                 // Field org/codehaus/jackson/JsonToken.END_OBJECT:Lorg/codehaus/jackson/JsonToken;
     100: if_acmpeq     111
     103: aload_0
     104: aload_1
     105: invokevirtual #94                 // Method copyCurrentStructure:(Lorg/codehaus/jackson/JsonParser;)V
     108: goto          93
     111: aload_0
     112: invokevirtual #60                 // Method writeEndObject:()V
     115: goto          123
     118: aload_0
     119: aload_1
     120: invokevirtual #96                 // Method copyCurrentEvent:(Lorg/codehaus/jackson/JsonParser;)V
     123: return

  protected abstract void _releaseBuffers();

  protected abstract void _verifyValueWrite(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;

  protected void _reportError(java.lang.String) throws org.codehaus.jackson.JsonGenerationException;
    Code:
       0: new           #97                 // class org/codehaus/jackson/JsonGenerationException
       3: dup
       4: aload_1
       5: invokespecial #98                 // Method org/codehaus/jackson/JsonGenerationException."<init>":(Ljava/lang/String;)V
       8: athrow

  protected void _cantHappen();
    Code:
       0: new           #99                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #100                // String Internal error: should never end up through this code path
       6: invokespecial #101                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void _writeSimpleObject(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #47                 // Method writeNull:()V
       8: return
       9: aload_1
      10: instanceof    #102                // class java/lang/String
      13: ifeq          25
      16: aload_0
      17: aload_1
      18: checkcast     #102                // class java/lang/String
      21: invokevirtual #71                 // Method writeString:(Ljava/lang/String;)V
      24: return
      25: aload_1
      26: instanceof    #103                // class java/lang/Number
      29: ifeq          206
      32: aload_1
      33: checkcast     #103                // class java/lang/Number
      36: astore_2
      37: aload_2
      38: instanceof    #104                // class java/lang/Integer
      41: ifeq          53
      44: aload_0
      45: aload_2
      46: invokevirtual #105                // Method java/lang/Number.intValue:()I
      49: invokevirtual #76                 // Method writeNumber:(I)V
      52: return
      53: aload_2
      54: instanceof    #106                // class java/lang/Long
      57: ifeq          69
      60: aload_0
      61: aload_2
      62: invokevirtual #107                // Method java/lang/Number.longValue:()J
      65: invokevirtual #80                 // Method writeNumber:(J)V
      68: return
      69: aload_2
      70: instanceof    #108                // class java/lang/Double
      73: ifeq          85
      76: aload_0
      77: aload_2
      78: invokevirtual #109                // Method java/lang/Number.doubleValue:()D
      81: invokevirtual #86                 // Method writeNumber:(D)V
      84: return
      85: aload_2
      86: instanceof    #110                // class java/lang/Float
      89: ifeq          101
      92: aload_0
      93: aload_2
      94: invokevirtual #111                // Method java/lang/Number.floatValue:()F
      97: invokevirtual #84                 // Method writeNumber:(F)V
     100: return
     101: aload_2
     102: instanceof    #112                // class java/lang/Short
     105: ifeq          117
     108: aload_0
     109: aload_2
     110: invokevirtual #113                // Method java/lang/Number.shortValue:()S
     113: invokevirtual #76                 // Method writeNumber:(I)V
     116: return
     117: aload_2
     118: instanceof    #114                // class java/lang/Byte
     121: ifeq          133
     124: aload_0
     125: aload_2
     126: invokevirtual #115                // Method java/lang/Number.byteValue:()B
     129: invokevirtual #76                 // Method writeNumber:(I)V
     132: return
     133: aload_2
     134: instanceof    #116                // class java/math/BigInteger
     137: ifeq          149
     140: aload_0
     141: aload_2
     142: checkcast     #116                // class java/math/BigInteger
     145: invokevirtual #78                 // Method writeNumber:(Ljava/math/BigInteger;)V
     148: return
     149: aload_2
     150: instanceof    #117                // class java/math/BigDecimal
     153: ifeq          165
     156: aload_0
     157: aload_2
     158: checkcast     #117                // class java/math/BigDecimal
     161: invokevirtual #82                 // Method writeNumber:(Ljava/math/BigDecimal;)V
     164: return
     165: aload_2
     166: instanceof    #118                // class java/util/concurrent/atomic/AtomicInteger
     169: ifeq          184
     172: aload_0
     173: aload_2
     174: checkcast     #118                // class java/util/concurrent/atomic/AtomicInteger
     177: invokevirtual #119                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     180: invokevirtual #76                 // Method writeNumber:(I)V
     183: return
     184: aload_2
     185: instanceof    #120                // class java/util/concurrent/atomic/AtomicLong
     188: ifeq          203
     191: aload_0
     192: aload_2
     193: checkcast     #120                // class java/util/concurrent/atomic/AtomicLong
     196: invokevirtual #121                // Method java/util/concurrent/atomic/AtomicLong.get:()J
     199: invokevirtual #80                 // Method writeNumber:(J)V
     202: return
     203: goto          263
     206: aload_1
     207: instanceof    #122                // class "[B"
     210: ifeq          225
     213: aload_0
     214: aload_1
     215: checkcast     #122                // class "[B"
     218: checkcast     #122                // class "[B"
     221: invokevirtual #123                // Method writeBinary:([B)V
     224: return
     225: aload_1
     226: instanceof    #124                // class java/lang/Boolean
     229: ifeq          244
     232: aload_0
     233: aload_1
     234: checkcast     #124                // class java/lang/Boolean
     237: invokevirtual #125                // Method java/lang/Boolean.booleanValue:()Z
     240: invokevirtual #87                 // Method writeBoolean:(Z)V
     243: return
     244: aload_1
     245: instanceof    #126                // class java/util/concurrent/atomic/AtomicBoolean
     248: ifeq          263
     251: aload_0
     252: aload_1
     253: checkcast     #126                // class java/util/concurrent/atomic/AtomicBoolean
     256: invokevirtual #127                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     259: invokevirtual #87                 // Method writeBoolean:(Z)V
     262: return
     263: new           #50                 // class java/lang/IllegalStateException
     266: dup
     267: new           #24                 // class java/lang/StringBuilder
     270: dup
     271: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     274: ldc           #128                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed
     276: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: aload_1
     280: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     283: invokevirtual #129                // Method java/lang/Class.getName:()Ljava/lang/String;
     286: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     289: ldc           #130                // String )
     291: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     297: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     300: athrow

  protected final void _throwInternal();
    Code:
       0: new           #99                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #131                // String Internal error: this code path should never get executed
       6: invokespecial #101                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected void _reportUnsupportedOperation();
    Code:
       0: new           #132                // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #24                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #133                // String Operation not supported by generator of type
      13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #129                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #134                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  public org.codehaus.jackson.JsonStreamContext getOutputContext();
    Code:
       0: aload_0
       1: invokevirtual #135                // Method getOutputContext:()Lorg/codehaus/jackson/impl/JsonWriteContext;
       4: areturn
}
