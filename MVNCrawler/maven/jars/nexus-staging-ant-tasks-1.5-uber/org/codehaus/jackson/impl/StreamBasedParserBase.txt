Compiled from "StreamBasedParserBase.java"
public abstract class org.codehaus.jackson.impl.StreamBasedParserBase extends org.codehaus.jackson.impl.JsonParserBase {
  protected java.io.InputStream _inputStream;

  protected byte[] _inputBuffer;

  protected boolean _bufferRecyclable;

  protected org.codehaus.jackson.impl.StreamBasedParserBase(org.codehaus.jackson.io.IOContext, int, java.io.InputStream, byte[], int, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/codehaus/jackson/impl/JsonParserBase."<init>":(Lorg/codehaus/jackson/io/IOContext;I)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field _inputStream:Ljava/io/InputStream;
      11: aload_0
      12: aload         4
      14: putfield      #3                  // Field _inputBuffer:[B
      17: aload_0
      18: iload         5
      20: putfield      #4                  // Field _inputPtr:I
      23: aload_0
      24: iload         6
      26: putfield      #5                  // Field _inputEnd:I
      29: aload_0
      30: iload         7
      32: putfield      #6                  // Field _bufferRecyclable:Z
      35: return

  public int releaseBuffered(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field _inputEnd:I
       4: aload_0
       5: getfield      #4                  // Field _inputPtr:I
       8: isub
       9: istore_2
      10: iload_2
      11: iconst_1
      12: if_icmpge     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #4                  // Field _inputPtr:I
      21: istore_3
      22: aload_1
      23: aload_0
      24: getfield      #3                  // Field _inputBuffer:[B
      27: iload_3
      28: iload_2
      29: invokevirtual #7                  // Method java/io/OutputStream.write:([BII)V
      32: iload_2
      33: ireturn

  public java.lang.Object getInputSource();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _inputStream:Ljava/io/InputStream;
       4: areturn

  protected final boolean loadMore() throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field _currInputProcessed:J
       5: aload_0
       6: getfield      #5                  // Field _inputEnd:I
       9: i2l
      10: ladd
      11: putfield      #8                  // Field _currInputProcessed:J
      14: aload_0
      15: dup
      16: getfield      #9                  // Field _currInputRowStart:I
      19: aload_0
      20: getfield      #5                  // Field _inputEnd:I
      23: isub
      24: putfield      #9                  // Field _currInputRowStart:I
      27: aload_0
      28: getfield      #2                  // Field _inputStream:Ljava/io/InputStream;
      31: ifnull        112
      34: aload_0
      35: getfield      #2                  // Field _inputStream:Ljava/io/InputStream;
      38: aload_0
      39: getfield      #3                  // Field _inputBuffer:[B
      42: iconst_0
      43: aload_0
      44: getfield      #3                  // Field _inputBuffer:[B
      47: arraylength
      48: invokevirtual #10                 // Method java/io/InputStream.read:([BII)I
      51: istore_1
      52: iload_1
      53: ifle          68
      56: aload_0
      57: iconst_0
      58: putfield      #4                  // Field _inputPtr:I
      61: aload_0
      62: iload_1
      63: putfield      #5                  // Field _inputEnd:I
      66: iconst_1
      67: ireturn
      68: aload_0
      69: invokevirtual #11                 // Method _closeInput:()V
      72: iload_1
      73: ifne          112
      76: new           #12                 // class java/io/IOException
      79: dup
      80: new           #13                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #15                 // String InputStream.read() returned 0 characters when trying to read
      89: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: getfield      #3                  // Field _inputBuffer:[B
      96: arraylength
      97: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     100: ldc           #18                 // String  bytes
     102: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     108: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     111: athrow
     112: iconst_0
     113: ireturn

  protected final boolean _loadToHaveAtLeast(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _inputStream:Ljava/io/InputStream;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #5                  // Field _inputEnd:I
      13: aload_0
      14: getfield      #4                  // Field _inputPtr:I
      17: isub
      18: istore_2
      19: iload_2
      20: ifle          82
      23: aload_0
      24: getfield      #4                  // Field _inputPtr:I
      27: ifle          82
      30: aload_0
      31: dup
      32: getfield      #8                  // Field _currInputProcessed:J
      35: aload_0
      36: getfield      #4                  // Field _inputPtr:I
      39: i2l
      40: ladd
      41: putfield      #8                  // Field _currInputProcessed:J
      44: aload_0
      45: dup
      46: getfield      #9                  // Field _currInputRowStart:I
      49: aload_0
      50: getfield      #4                  // Field _inputPtr:I
      53: isub
      54: putfield      #9                  // Field _currInputRowStart:I
      57: aload_0
      58: getfield      #3                  // Field _inputBuffer:[B
      61: aload_0
      62: getfield      #4                  // Field _inputPtr:I
      65: aload_0
      66: getfield      #3                  // Field _inputBuffer:[B
      69: iconst_0
      70: iload_2
      71: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_0
      75: iload_2
      76: putfield      #5                  // Field _inputEnd:I
      79: goto          87
      82: aload_0
      83: iconst_0
      84: putfield      #5                  // Field _inputEnd:I
      87: aload_0
      88: iconst_0
      89: putfield      #4                  // Field _inputPtr:I
      92: aload_0
      93: getfield      #5                  // Field _inputEnd:I
      96: iload_1
      97: if_icmpge     186
     100: aload_0
     101: getfield      #2                  // Field _inputStream:Ljava/io/InputStream;
     104: aload_0
     105: getfield      #3                  // Field _inputBuffer:[B
     108: aload_0
     109: getfield      #5                  // Field _inputEnd:I
     112: aload_0
     113: getfield      #3                  // Field _inputBuffer:[B
     116: arraylength
     117: aload_0
     118: getfield      #5                  // Field _inputEnd:I
     121: isub
     122: invokevirtual #10                 // Method java/io/InputStream.read:([BII)I
     125: istore_3
     126: iload_3
     127: iconst_1
     128: if_icmpge     173
     131: aload_0
     132: invokevirtual #11                 // Method _closeInput:()V
     135: iload_3
     136: ifne          171
     139: new           #12                 // class java/io/IOException
     142: dup
     143: new           #13                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     150: ldc           #15                 // String InputStream.read() returned 0 characters when trying to read
     152: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: iload_2
     156: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     159: ldc           #18                 // String  bytes
     161: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     170: athrow
     171: iconst_0
     172: ireturn
     173: aload_0
     174: dup
     175: getfield      #5                  // Field _inputEnd:I
     178: iload_3
     179: iadd
     180: putfield      #5                  // Field _inputEnd:I
     183: goto          92
     186: iconst_1
     187: ireturn

  protected void _closeInput() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _inputStream:Ljava/io/InputStream;
       4: ifnull        39
       7: aload_0
       8: getfield      #22                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
      11: invokevirtual #23                 // Method org/codehaus/jackson/io/IOContext.isResourceManaged:()Z
      14: ifne          27
      17: aload_0
      18: getstatic     #24                 // Field org/codehaus/jackson/JsonParser$Feature.AUTO_CLOSE_SOURCE:Lorg/codehaus/jackson/JsonParser$Feature;
      21: invokevirtual #25                 // Method isEnabled:(Lorg/codehaus/jackson/JsonParser$Feature;)Z
      24: ifeq          34
      27: aload_0
      28: getfield      #2                  // Field _inputStream:Ljava/io/InputStream;
      31: invokevirtual #26                 // Method java/io/InputStream.close:()V
      34: aload_0
      35: aconst_null
      36: putfield      #2                  // Field _inputStream:Ljava/io/InputStream;
      39: return

  protected void _releaseBuffers() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/codehaus/jackson/impl/JsonParserBase._releaseBuffers:()V
       4: aload_0
       5: getfield      #6                  // Field _bufferRecyclable:Z
       8: ifeq          33
      11: aload_0
      12: getfield      #3                  // Field _inputBuffer:[B
      15: astore_1
      16: aload_1
      17: ifnull        33
      20: aload_0
      21: aconst_null
      22: putfield      #3                  // Field _inputBuffer:[B
      25: aload_0
      26: getfield      #22                 // Field _ioContext:Lorg/codehaus/jackson/io/IOContext;
      29: aload_1
      30: invokevirtual #28                 // Method org/codehaus/jackson/io/IOContext.releaseReadIOBuffer:([B)V
      33: return
}
