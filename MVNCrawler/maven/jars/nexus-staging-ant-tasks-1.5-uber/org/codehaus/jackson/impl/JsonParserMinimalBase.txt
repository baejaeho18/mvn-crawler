Compiled from "JsonParserMinimalBase.java"
public abstract class org.codehaus.jackson.impl.JsonParserMinimalBase extends org.codehaus.jackson.JsonParser {
  protected static final int INT_TAB;

  protected static final int INT_LF;

  protected static final int INT_CR;

  protected static final int INT_SPACE;

  protected static final int INT_LBRACKET;

  protected static final int INT_RBRACKET;

  protected static final int INT_LCURLY;

  protected static final int INT_RCURLY;

  protected static final int INT_QUOTE;

  protected static final int INT_BACKSLASH;

  protected static final int INT_SLASH;

  protected static final int INT_COLON;

  protected static final int INT_COMMA;

  protected static final int INT_ASTERISK;

  protected static final int INT_APOSTROPHE;

  protected static final int INT_b;

  protected static final int INT_f;

  protected static final int INT_n;

  protected static final int INT_r;

  protected static final int INT_t;

  protected static final int INT_u;

  protected org.codehaus.jackson.impl.JsonParserMinimalBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/JsonParser."<init>":()V
       4: return

  protected org.codehaus.jackson.impl.JsonParserMinimalBase(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method org/codehaus/jackson/JsonParser."<init>":(I)V
       5: return

  public abstract org.codehaus.jackson.JsonToken nextToken() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public org.codehaus.jackson.JsonParser skipChildren() throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #4                  // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpeq     22
      10: aload_0
      11: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      14: getstatic     #5                  // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
      17: if_acmpeq     22
      20: aload_0
      21: areturn
      22: iconst_1
      23: istore_1
      24: aload_0
      25: invokevirtual #6                  // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
      28: astore_2
      29: aload_2
      30: ifnonnull     39
      33: aload_0
      34: invokevirtual #7                  // Method _handleEOF:()V
      37: aload_0
      38: areturn
      39: getstatic     #8                  // Field org/codehaus/jackson/impl/JsonParserMinimalBase$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      42: aload_2
      43: invokevirtual #9                  // Method org/codehaus/jackson/JsonToken.ordinal:()I
      46: iaload
      47: tableswitch   { // 1 to 4
                     1: 76
                     2: 76
                     3: 82
                     4: 82
               default: 91
          }
      76: iinc          1, 1
      79: goto          91
      82: iinc          1, -1
      85: iload_1
      86: ifne          91
      89: aload_0
      90: areturn
      91: goto          24

  protected abstract void _handleEOF() throws org.codehaus.jackson.JsonParseException;

  public abstract java.lang.String getCurrentName() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract void close() throws java.io.IOException;

  public abstract boolean isClosed();

  public abstract org.codehaus.jackson.JsonStreamContext getParsingContext();

  public abstract java.lang.String getText() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract char[] getTextCharacters() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract boolean hasTextCharacters();

  public abstract int getTextLength() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract int getTextOffset() throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public abstract byte[] getBinaryValue(org.codehaus.jackson.Base64Variant) throws java.io.IOException, org.codehaus.jackson.JsonParseException;

  public boolean getValueAsBoolean(boolean) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        112
       7: getstatic     #8                  // Field org/codehaus/jackson/impl/JsonParserMinimalBase$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      10: aload_0
      11: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      14: invokevirtual #9                  // Method org/codehaus/jackson/JsonToken.ordinal:()I
      17: iaload
      18: tableswitch   { // 5 to 10
                     5: 56
                     6: 69
                     7: 71
                     8: 71
                     9: 73
                    10: 93
               default: 112
          }
      56: aload_0
      57: invokevirtual #10                 // Method getIntValue:()I
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: iconst_1
      70: ireturn
      71: iconst_0
      72: ireturn
      73: aload_0
      74: invokevirtual #11                 // Method getEmbeddedObject:()Ljava/lang/Object;
      77: astore_2
      78: aload_2
      79: instanceof    #12                 // class java/lang/Boolean
      82: ifeq          93
      85: aload_2
      86: checkcast     #12                 // class java/lang/Boolean
      89: invokevirtual #13                 // Method java/lang/Boolean.booleanValue:()Z
      92: ireturn
      93: aload_0
      94: invokevirtual #14                 // Method getText:()Ljava/lang/String;
      97: invokevirtual #15                 // Method java/lang/String.trim:()Ljava/lang/String;
     100: astore_2
     101: ldc           #16                 // String true
     103: aload_2
     104: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     107: ifeq          112
     110: iconst_1
     111: ireturn
     112: iload_1
     113: ireturn

  public int getValueAsInt(int) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        98
       7: getstatic     #8                  // Field org/codehaus/jackson/impl/JsonParserMinimalBase$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      10: aload_0
      11: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      14: invokevirtual #9                  // Method org/codehaus/jackson/JsonToken.ordinal:()I
      17: iaload
      18: tableswitch   { // 5 to 11
                     5: 60
                     6: 65
                     7: 67
                     8: 67
                     9: 78
                    10: 69
                    11: 60
               default: 98
          }
      60: aload_0
      61: invokevirtual #10                 // Method getIntValue:()I
      64: ireturn
      65: iconst_1
      66: ireturn
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #14                 // Method getText:()Ljava/lang/String;
      73: iload_1
      74: invokestatic  #18                 // Method org/codehaus/jackson/io/NumberInput.parseAsInt:(Ljava/lang/String;I)I
      77: ireturn
      78: aload_0
      79: invokevirtual #11                 // Method getEmbeddedObject:()Ljava/lang/Object;
      82: astore_2
      83: aload_2
      84: instanceof    #19                 // class java/lang/Number
      87: ifeq          98
      90: aload_2
      91: checkcast     #19                 // class java/lang/Number
      94: invokevirtual #20                 // Method java/lang/Number.intValue:()I
      97: ireturn
      98: iload_1
      99: ireturn

  public long getValueAsLong(long) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        98
       7: getstatic     #8                  // Field org/codehaus/jackson/impl/JsonParserMinimalBase$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      10: aload_0
      11: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      14: invokevirtual #9                  // Method org/codehaus/jackson/JsonToken.ordinal:()I
      17: iaload
      18: tableswitch   { // 5 to 11
                     5: 60
                     6: 65
                     7: 67
                     8: 67
                     9: 78
                    10: 69
                    11: 60
               default: 98
          }
      60: aload_0
      61: invokevirtual #21                 // Method getLongValue:()J
      64: lreturn
      65: lconst_1
      66: lreturn
      67: lconst_0
      68: lreturn
      69: aload_0
      70: invokevirtual #14                 // Method getText:()Ljava/lang/String;
      73: lload_1
      74: invokestatic  #22                 // Method org/codehaus/jackson/io/NumberInput.parseAsLong:(Ljava/lang/String;J)J
      77: lreturn
      78: aload_0
      79: invokevirtual #11                 // Method getEmbeddedObject:()Ljava/lang/Object;
      82: astore_3
      83: aload_3
      84: instanceof    #19                 // class java/lang/Number
      87: ifeq          98
      90: aload_3
      91: checkcast     #19                 // class java/lang/Number
      94: invokevirtual #23                 // Method java/lang/Number.longValue:()J
      97: lreturn
      98: lload_1
      99: lreturn

  public double getValueAsDouble(double) throws java.io.IOException, org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
       4: ifnull        98
       7: getstatic     #8                  // Field org/codehaus/jackson/impl/JsonParserMinimalBase$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
      10: aload_0
      11: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      14: invokevirtual #9                  // Method org/codehaus/jackson/JsonToken.ordinal:()I
      17: iaload
      18: tableswitch   { // 5 to 11
                     5: 60
                     6: 65
                     7: 67
                     8: 67
                     9: 78
                    10: 69
                    11: 60
               default: 98
          }
      60: aload_0
      61: invokevirtual #24                 // Method getDoubleValue:()D
      64: dreturn
      65: dconst_1
      66: dreturn
      67: dconst_0
      68: dreturn
      69: aload_0
      70: invokevirtual #14                 // Method getText:()Ljava/lang/String;
      73: dload_1
      74: invokestatic  #25                 // Method org/codehaus/jackson/io/NumberInput.parseAsDouble:(Ljava/lang/String;D)D
      77: dreturn
      78: aload_0
      79: invokevirtual #11                 // Method getEmbeddedObject:()Ljava/lang/Object;
      82: astore_3
      83: aload_3
      84: instanceof    #19                 // class java/lang/Number
      87: ifeq          98
      90: aload_3
      91: checkcast     #19                 // class java/lang/Number
      94: invokevirtual #26                 // Method java/lang/Number.doubleValue:()D
      97: dreturn
      98: dload_1
      99: dreturn

  protected void _reportUnexpectedChar(int, java.lang.String) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: new           #27                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #29                 // String Unexpected character (
       9: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: iload_1
      13: invokestatic  #31                 // Method _getCharDesc:(I)Ljava/lang/String;
      16: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String )
      21: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: astore_3
      28: aload_2
      29: ifnull        56
      32: new           #27                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      39: aload_3
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #34                 // String :
      45: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_2
      49: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: astore_3
      56: aload_0
      57: aload_3
      58: invokevirtual #35                 // Method _reportError:(Ljava/lang/String;)V
      61: return

  protected void _reportInvalidEOF() throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: new           #27                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #36                 // String  in
      10: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_0
      14: getfield      #3                  // Field _currToken:Lorg/codehaus/jackson/JsonToken;
      17: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokevirtual #38                 // Method _reportInvalidEOF:(Ljava/lang/String;)V
      26: return

  protected void _reportInvalidEOF(java.lang.String) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: new           #27                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #39                 // String Unexpected end-of-input
      10: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      20: invokevirtual #35                 // Method _reportError:(Ljava/lang/String;)V
      23: return

  protected void _reportInvalidEOFInValue() throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: ldc           #40                 // String  in a value
       3: invokevirtual #38                 // Method _reportInvalidEOF:(Ljava/lang/String;)V
       6: return

  protected void _throwInvalidSpace(int) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: iload_1
       1: i2c
       2: istore_2
       3: new           #27                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #41                 // String Illegal character (
      12: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: iload_2
      16: invokestatic  #31                 // Method _getCharDesc:(I)Ljava/lang/String;
      19: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #42                 // String ): only regular white space (\\r, \\n, \\t) is allowed between tokens
      24: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokevirtual #35                 // Method _reportError:(Ljava/lang/String;)V
      36: return

  protected void _throwUnquotedSpace(int, java.lang.String) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: getstatic     #43                 // Field org/codehaus/jackson/JsonParser$Feature.ALLOW_UNQUOTED_CONTROL_CHARS:Lorg/codehaus/jackson/JsonParser$Feature;
       4: invokevirtual #44                 // Method isEnabled:(Lorg/codehaus/jackson/JsonParser$Feature;)Z
       7: ifeq          16
      10: iload_1
      11: bipush        32
      13: if_icmplt     58
      16: iload_1
      17: i2c
      18: istore_3
      19: new           #27                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #45                 // String Illegal unquoted character (
      28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: iload_3
      32: invokestatic  #31                 // Method _getCharDesc:(I)Ljava/lang/String;
      35: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #46                 // String ): has to be escaped using backslash to be included in
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_2
      44: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: astore        4
      52: aload_0
      53: aload         4
      55: invokevirtual #35                 // Method _reportError:(Ljava/lang/String;)V
      58: return

  protected char _handleUnrecognizedCharacterEscape(char) throws org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: getstatic     #47                 // Field org/codehaus/jackson/JsonParser$Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER:Lorg/codehaus/jackson/JsonParser$Feature;
       4: invokevirtual #44                 // Method isEnabled:(Lorg/codehaus/jackson/JsonParser$Feature;)Z
       7: ifeq          12
      10: iload_1
      11: ireturn
      12: iload_1
      13: bipush        39
      15: if_icmpne     30
      18: aload_0
      19: getstatic     #48                 // Field org/codehaus/jackson/JsonParser$Feature.ALLOW_SINGLE_QUOTES:Lorg/codehaus/jackson/JsonParser$Feature;
      22: invokevirtual #44                 // Method isEnabled:(Lorg/codehaus/jackson/JsonParser$Feature;)Z
      25: ifeq          30
      28: iload_1
      29: ireturn
      30: aload_0
      31: new           #27                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #49                 // String Unrecognized character escape
      40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload_1
      44: invokestatic  #31                 // Method _getCharDesc:(I)Ljava/lang/String;
      47: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #35                 // Method _reportError:(Ljava/lang/String;)V
      56: iload_1
      57: ireturn

  protected static final java.lang.String _getCharDesc(int);
    Code:
       0: iload_0
       1: i2c
       2: istore_1
       3: iload_1
       4: invokestatic  #50                 // Method java/lang/Character.isISOControl:(C)Z
       7: ifeq          35
      10: new           #27                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #51                 // String (CTRL-CHAR, code
      19: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_0
      23: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: ldc           #32                 // String )
      28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn
      35: iload_0
      36: sipush        255
      39: if_icmple     88
      42: new           #27                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #53                 // String \'
      51: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload_1
      55: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      58: ldc           #55                 // String \' (code
      60: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: iload_0
      64: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #56                 // String  / 0x
      69: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: iload_0
      73: invokestatic  #57                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      76: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #32                 // String )
      81: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn
      88: new           #27                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #53                 // String \'
      97: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: iload_1
     101: invokevirtual #54                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     104: ldc           #55                 // String \' (code
     106: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: iload_0
     110: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     113: ldc           #32                 // String )
     115: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: areturn

  protected final void _reportError(java.lang.String) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method _constructError:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonParseException;
       5: athrow

  protected final void _wrapError(java.lang.String, java.lang.Throwable) throws org.codehaus.jackson.JsonParseException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #59                 // Method _constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/codehaus/jackson/JsonParseException;
       6: athrow

  protected final void _throwInternal();
    Code:
       0: new           #60                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #61                 // String Internal error: this code path should never get executed
       6: invokespecial #62                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected final org.codehaus.jackson.JsonParseException _constructError(java.lang.String, java.lang.Throwable);
    Code:
       0: new           #63                 // class org/codehaus/jackson/JsonParseException
       3: dup
       4: aload_1
       5: aload_0
       6: invokevirtual #64                 // Method getCurrentLocation:()Lorg/codehaus/jackson/JsonLocation;
       9: aload_2
      10: invokespecial #65                 // Method org/codehaus/jackson/JsonParseException."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/JsonLocation;Ljava/lang/Throwable;)V
      13: areturn
}
