Compiled from "SimpleFilterProvider.java"
public class org.codehaus.jackson.map.ser.impl.SimpleFilterProvider extends org.codehaus.jackson.map.ser.FilterProvider {
  protected final java.util.Map<java.lang.String, org.codehaus.jackson.map.ser.BeanPropertyFilter> _filtersById;

  protected org.codehaus.jackson.map.ser.BeanPropertyFilter _defaultFilter;

  protected boolean _cfgFailOnUnknownId;

  public org.codehaus.jackson.map.ser.impl.SimpleFilterProvider();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/map/ser/FilterProvider."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field _cfgFailOnUnknownId:Z
       9: aload_0
      10: new           #3                  // class java/util/HashMap
      13: dup
      14: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      17: putfield      #5                  // Field _filtersById:Ljava/util/Map;
      20: return

  public org.codehaus.jackson.map.ser.impl.SimpleFilterProvider(java.util.Map<java.lang.String, org.codehaus.jackson.map.ser.BeanPropertyFilter>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/map/ser/FilterProvider."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field _cfgFailOnUnknownId:Z
       9: aload_0
      10: new           #3                  // class java/util/HashMap
      13: dup
      14: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      17: putfield      #5                  // Field _filtersById:Ljava/util/Map;
      20: return

  public org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setDefaultFilter(org.codehaus.jackson.map.ser.BeanPropertyFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field _defaultFilter:Lorg/codehaus/jackson/map/ser/BeanPropertyFilter;
       5: aload_0
       6: areturn

  public org.codehaus.jackson.map.ser.BeanPropertyFilter getDefaultFilter();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _defaultFilter:Lorg/codehaus/jackson/map/ser/BeanPropertyFilter;
       4: areturn

  public org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field _cfgFailOnUnknownId:Z
       5: aload_0
       6: areturn

  public boolean willFailOnUnknownId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _cfgFailOnUnknownId:Z
       4: ireturn

  public org.codehaus.jackson.map.ser.impl.SimpleFilterProvider addFilter(java.lang.String, org.codehaus.jackson.map.ser.BeanPropertyFilter);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public org.codehaus.jackson.map.ser.BeanPropertyFilter removeFilter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/codehaus/jackson/map/ser/BeanPropertyFilter
      13: areturn

  public org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #9                  // class org/codehaus/jackson/map/ser/BeanPropertyFilter
      13: astore_2
      14: aload_2
      15: ifnonnull     81
      18: aload_0
      19: getfield      #6                  // Field _defaultFilter:Lorg/codehaus/jackson/map/ser/BeanPropertyFilter;
      22: astore_2
      23: aload_2
      24: ifnonnull     81
      27: aload_0
      28: getfield      #2                  // Field _cfgFailOnUnknownId:Z
      31: ifeq          81
      34: new           #11                 // class java/lang/IllegalArgumentException
      37: dup
      38: new           #12                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #14                 // String No filter configured with id \'
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: ldc           #17                 // String \' (type
      56: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: invokevirtual #19                 // Method java/lang/Class.getName:()Ljava/lang/String;
      66: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #20                 // String )
      71: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_2
      82: areturn
}
