Compiled from "ContainerSerializerBase.java"
public abstract class org.codehaus.jackson.map.ser.std.ContainerSerializerBase<T> extends org.codehaus.jackson.map.ser.std.SerializerBase<T> {
  protected org.codehaus.jackson.map.ser.std.ContainerSerializerBase(java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/codehaus/jackson/map/ser/std/SerializerBase."<init>":(Ljava/lang/Class;)V
       5: return

  protected org.codehaus.jackson.map.ser.std.ContainerSerializerBase(java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method org/codehaus/jackson/map/ser/std/SerializerBase."<init>":(Ljava/lang/Class;Z)V
       6: return

  public org.codehaus.jackson.map.ser.std.ContainerSerializerBase<?> withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #3                  // Method _withValueTypeSerializer:(Lorg/codehaus/jackson/map/TypeSerializer;)Lorg/codehaus/jackson/map/ser/std/ContainerSerializerBase;
      11: areturn

  public abstract org.codehaus.jackson.map.ser.std.ContainerSerializerBase<?> _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer);
}
