Compiled from "StdTypeResolverBuilder.java"
public class org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder implements org.codehaus.jackson.map.jsontype.TypeResolverBuilder<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder> {
  protected org.codehaus.jackson.annotate.JsonTypeInfo$Id _idType;

  protected org.codehaus.jackson.annotate.JsonTypeInfo$As _includeAs;

  protected java.lang.String _typeProperty;

  protected java.lang.Class<?> _defaultImpl;

  protected org.codehaus.jackson.map.jsontype.TypeIdResolver _customIdResolver;

  public java.lang.Class<?> getDefaultImpl();
    Code:
       0: aload_0
       1: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
       4: areturn

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id, org.codehaus.jackson.map.jsontype.TypeIdResolver);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #4                  // String idType can not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #6                  // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      19: aload_0
      20: aload_2
      21: putfield      #7                  // Field _customIdResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      24: aload_0
      25: aload_1
      26: invokevirtual #8                  // Method org/codehaus/jackson/annotate/JsonTypeInfo$Id.getDefaultPropertyName:()Ljava/lang/String;
      29: putfield      #9                  // Field _typeProperty:Ljava/lang/String;
      32: aload_0
      33: areturn

  public org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: iconst_0
       6: invokevirtual #10                 // Method idResolver:(Lorg/codehaus/jackson/map/MapperConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;ZZ)Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
       9: astore        5
      11: getstatic     #11                 // Field org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder$1.$SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As:[I
      14: aload_0
      15: getfield      #12                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
      18: invokevirtual #13                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$As.ordinal:()I
      21: iaload
      22: tableswitch   { // 1 to 4
                     1: 52
                     2: 64
                     3: 80
                     4: 92
               default: 108
          }
      52: new           #14                 // class org/codehaus/jackson/map/jsontype/impl/AsArrayTypeSerializer
      55: dup
      56: aload         5
      58: aload         4
      60: invokespecial #15                 // Method org/codehaus/jackson/map/jsontype/impl/AsArrayTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;)V
      63: areturn
      64: new           #16                 // class org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeSerializer
      67: dup
      68: aload         5
      70: aload         4
      72: aload_0
      73: getfield      #9                  // Field _typeProperty:Ljava/lang/String;
      76: invokespecial #17                 // Method org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/String;)V
      79: areturn
      80: new           #18                 // class org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeSerializer
      83: dup
      84: aload         5
      86: aload         4
      88: invokespecial #19                 // Method org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;)V
      91: areturn
      92: new           #20                 // class org/codehaus/jackson/map/jsontype/impl/AsExternalTypeSerializer
      95: dup
      96: aload         5
      98: aload         4
     100: aload_0
     101: getfield      #9                  // Field _typeProperty:Ljava/lang/String;
     104: invokespecial #21                 // Method org/codehaus/jackson/map/jsontype/impl/AsExternalTypeSerializer."<init>":(Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/String;)V
     107: areturn
     108: new           #22                 // class java/lang/IllegalStateException
     111: dup
     112: new           #23                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #25                 // String Do not know how to construct standard type serializer for inclusion type:
     121: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_0
     125: getfield      #12                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
     128: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     137: athrow

  public org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_0
       5: iconst_1
       6: invokevirtual #10                 // Method idResolver:(Lorg/codehaus/jackson/map/MapperConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;ZZ)Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
       9: astore        5
      11: getstatic     #11                 // Field org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder$1.$SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$As:[I
      14: aload_0
      15: getfield      #12                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
      18: invokevirtual #13                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$As.ordinal:()I
      21: iaload
      22: tableswitch   { // 1 to 4
                     1: 52
                     2: 69
                     3: 90
                     4: 107
               default: 128
          }
      52: new           #30                 // class org/codehaus/jackson/map/jsontype/impl/AsArrayTypeDeserializer
      55: dup
      56: aload_2
      57: aload         5
      59: aload         4
      61: aload_0
      62: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
      65: invokespecial #31                 // Method org/codehaus/jackson/map/jsontype/impl/AsArrayTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;)V
      68: areturn
      69: new           #32                 // class org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeDeserializer
      72: dup
      73: aload_2
      74: aload         5
      76: aload         4
      78: aload_0
      79: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
      82: aload_0
      83: getfield      #9                  // Field _typeProperty:Ljava/lang/String;
      86: invokespecial #33                 // Method org/codehaus/jackson/map/jsontype/impl/AsPropertyTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;Ljava/lang/String;)V
      89: areturn
      90: new           #34                 // class org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeDeserializer
      93: dup
      94: aload_2
      95: aload         5
      97: aload         4
      99: aload_0
     100: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
     103: invokespecial #35                 // Method org/codehaus/jackson/map/jsontype/impl/AsWrapperTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;)V
     106: areturn
     107: new           #36                 // class org/codehaus/jackson/map/jsontype/impl/AsExternalTypeDeserializer
     110: dup
     111: aload_2
     112: aload         5
     114: aload         4
     116: aload_0
     117: getfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
     120: aload_0
     121: getfield      #9                  // Field _typeProperty:Ljava/lang/String;
     124: invokespecial #37                 // Method org/codehaus/jackson/map/jsontype/impl/AsExternalTypeDeserializer."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;Lorg/codehaus/jackson/map/BeanProperty;Ljava/lang/Class;Ljava/lang/String;)V
     127: areturn
     128: new           #22                 // class java/lang/IllegalStateException
     131: dup
     132: new           #23                 // class java/lang/StringBuilder
     135: dup
     136: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     139: ldc           #25                 // String Do not know how to construct standard type serializer for inclusion type:
     141: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: aload_0
     145: getfield      #12                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
     148: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     151: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     154: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     157: athrow

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #38                 // String includeAs can not be null
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #12                 // Field _includeAs:Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;
      19: aload_0
      20: areturn

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #39                 // Method java/lang/String.length:()I
       8: ifne          19
      11: aload_0
      12: getfield      #6                  // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      15: invokevirtual #8                  // Method org/codehaus/jackson/annotate/JsonTypeInfo$Id.getDefaultPropertyName:()Ljava/lang/String;
      18: astore_1
      19: aload_0
      20: aload_1
      21: putfield      #9                  // Field _typeProperty:Ljava/lang/String;
      24: aload_0
      25: areturn

  public org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field _defaultImpl:Ljava/lang/Class;
       5: aload_0
       6: areturn

  public java.lang.String getTypeProperty();
    Code:
       0: aload_0
       1: getfield      #9                  // Field _typeProperty:Ljava/lang/String;
       4: areturn

  protected org.codehaus.jackson.map.jsontype.TypeIdResolver idResolver(org.codehaus.jackson.map.MapperConfig<?>, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, boolean, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field _customIdResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
       4: ifnull        12
       7: aload_0
       8: getfield      #7                  // Field _customIdResolver:Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;
      11: areturn
      12: aload_0
      13: getfield      #6                  // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      16: ifnonnull     29
      19: new           #22                 // class java/lang/IllegalStateException
      22: dup
      23: ldc           #40                 // String Can not build, \'init()\' not yet called
      25: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: getstatic     #41                 // Field org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder$1.$SwitchMap$org$codehaus$jackson$annotate$JsonTypeInfo$Id:[I
      32: aload_0
      33: getfield      #6                  // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
      36: invokevirtual #42                 // Method org/codehaus/jackson/annotate/JsonTypeInfo$Id.ordinal:()I
      39: iaload
      40: tableswitch   { // 1 to 5
                     1: 76
                     2: 89
                     3: 102
                     4: 113
                     5: 113
               default: 113
          }
      76: new           #43                 // class org/codehaus/jackson/map/jsontype/impl/ClassNameIdResolver
      79: dup
      80: aload_2
      81: aload_1
      82: invokevirtual #44                 // Method org/codehaus/jackson/map/MapperConfig.getTypeFactory:()Lorg/codehaus/jackson/map/type/TypeFactory;
      85: invokespecial #45                 // Method org/codehaus/jackson/map/jsontype/impl/ClassNameIdResolver."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/type/TypeFactory;)V
      88: areturn
      89: new           #46                 // class org/codehaus/jackson/map/jsontype/impl/MinimalClassNameIdResolver
      92: dup
      93: aload_2
      94: aload_1
      95: invokevirtual #44                 // Method org/codehaus/jackson/map/MapperConfig.getTypeFactory:()Lorg/codehaus/jackson/map/type/TypeFactory;
      98: invokespecial #47                 // Method org/codehaus/jackson/map/jsontype/impl/MinimalClassNameIdResolver."<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/map/type/TypeFactory;)V
     101: areturn
     102: aload_1
     103: aload_2
     104: aload_3
     105: iload         4
     107: iload         5
     109: invokestatic  #48                 // Method org/codehaus/jackson/map/jsontype/impl/TypeNameIdResolver.construct:(Lorg/codehaus/jackson/map/MapperConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;ZZ)Lorg/codehaus/jackson/map/jsontype/impl/TypeNameIdResolver;
     112: areturn
     113: new           #22                 // class java/lang/IllegalStateException
     116: dup
     117: new           #23                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #49                 // String Do not know how to construct standard type id resolver for idType:
     126: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: getfield      #6                  // Field _idType:Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;
     133: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     136: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     142: athrow

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method defaultImpl:(Ljava/lang/Class;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       5: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method typeProperty:(Ljava/lang/String;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       5: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method inclusion:(Lorg/codehaus/jackson/annotate/JsonTypeInfo$As;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       5: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id, org.codehaus.jackson.map.jsontype.TypeIdResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #53                 // Method init:(Lorg/codehaus/jackson/annotate/JsonTypeInfo$Id;Lorg/codehaus/jackson/map/jsontype/TypeIdResolver;)Lorg/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder;
       6: areturn
}
