Compiled from "BeanDescription.java"
public abstract class org.codehaus.jackson.map.BeanDescription {
  protected final org.codehaus.jackson.type.JavaType _type;

  protected org.codehaus.jackson.map.BeanDescription(org.codehaus.jackson.type.JavaType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _type:Lorg/codehaus/jackson/type/JavaType;
       9: return

  public org.codehaus.jackson.type.JavaType getType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _type:Lorg/codehaus/jackson/type/JavaType;
       4: areturn

  public java.lang.Class<?> getBeanClass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _type:Lorg/codehaus/jackson/type/JavaType;
       4: invokevirtual #3                  // Method org/codehaus/jackson/type/JavaType.getRawClass:()Ljava/lang/Class;
       7: areturn

  public abstract org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo();

  public abstract boolean hasKnownClassAnnotations();

  public abstract org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType();

  public abstract org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type);

  public abstract org.codehaus.jackson.map.util.Annotations getClassAnnotations();

  public abstract java.util.List<org.codehaus.jackson.map.BeanPropertyDefinition> findProperties();

  public abstract java.util.Map<java.lang.Object, org.codehaus.jackson.map.introspect.AnnotatedMember> findInjectables();

  public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter();

  public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter();

  public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod();

  public abstract org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor();

  public abstract java.util.Set<java.lang.String> getIgnoredPropertyNames();

  public abstract java.util.LinkedHashMap<java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod> findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker<?>, java.util.Collection<java.lang.String>);

  public abstract java.util.LinkedHashMap<java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod> findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker<?>);

  public abstract java.util.LinkedHashMap<java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedField> findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker<?>, java.util.Collection<java.lang.String>);

  public abstract java.util.Map<java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedField> findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker<?>, java.util.Collection<java.lang.String>);
}
