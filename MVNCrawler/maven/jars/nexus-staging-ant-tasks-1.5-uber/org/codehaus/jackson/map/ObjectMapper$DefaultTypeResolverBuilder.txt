Compiled from "ObjectMapper.java"
public class org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder extends org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder {
  protected final org.codehaus.jackson.map.ObjectMapper$DefaultTyping _appliesFor;

  public org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder(org.codehaus.jackson.map.ObjectMapper$DefaultTyping);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _appliesFor:Lorg/codehaus/jackson/map/ObjectMapper$DefaultTyping;
       9: return

  public org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #3                  // Method useForType:(Lorg/codehaus/jackson/type/JavaType;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokespecial #4                  // Method org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder.buildTypeDeserializer:(Lorg/codehaus/jackson/map/DeserializationConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;Lorg/codehaus/jackson/map/BeanProperty;)Lorg/codehaus/jackson/map/TypeDeserializer;
      17: goto          21
      20: aconst_null
      21: areturn

  public org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #3                  // Method useForType:(Lorg/codehaus/jackson/type/JavaType;)Z
       5: ifeq          20
       8: aload_0
       9: aload_1
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokespecial #5                  // Method org/codehaus/jackson/map/jsontype/impl/StdTypeResolverBuilder.buildTypeSerializer:(Lorg/codehaus/jackson/map/SerializationConfig;Lorg/codehaus/jackson/type/JavaType;Ljava/util/Collection;Lorg/codehaus/jackson/map/BeanProperty;)Lorg/codehaus/jackson/map/TypeSerializer;
      17: goto          21
      20: aconst_null
      21: areturn

  public boolean useForType(org.codehaus.jackson.type.JavaType);
    Code:
       0: getstatic     #6                  // Field org/codehaus/jackson/map/ObjectMapper$2.$SwitchMap$org$codehaus$jackson$map$ObjectMapper$DefaultTyping:[I
       3: aload_0
       4: getfield      #2                  // Field _appliesFor:Lorg/codehaus/jackson/map/ObjectMapper$DefaultTyping;
       7: invokevirtual #7                  // Method org/codehaus/jackson/map/ObjectMapper$DefaultTyping.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 3
                     1: 36
                     2: 48
                     3: 71
               default: 96
          }
      36: aload_1
      37: invokevirtual #8                  // Method org/codehaus/jackson/type/JavaType.isArrayType:()Z
      40: ifeq          48
      43: aload_1
      44: invokevirtual #9                  // Method org/codehaus/jackson/type/JavaType.getContentType:()Lorg/codehaus/jackson/type/JavaType;
      47: astore_1
      48: aload_1
      49: invokevirtual #10                 // Method org/codehaus/jackson/type/JavaType.getRawClass:()Ljava/lang/Class;
      52: ldc_w         #11                 // class java/lang/Object
      55: if_acmpeq     65
      58: aload_1
      59: invokevirtual #12                 // Method org/codehaus/jackson/type/JavaType.isConcrete:()Z
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn
      71: aload_1
      72: invokevirtual #8                  // Method org/codehaus/jackson/type/JavaType.isArrayType:()Z
      75: ifeq          83
      78: aload_1
      79: invokevirtual #9                  // Method org/codehaus/jackson/type/JavaType.getContentType:()Lorg/codehaus/jackson/type/JavaType;
      82: astore_1
      83: aload_1
      84: invokevirtual #13                 // Method org/codehaus/jackson/type/JavaType.isFinal:()Z
      87: ifne          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ireturn
      96: aload_1
      97: invokevirtual #10                 // Method org/codehaus/jackson/type/JavaType.getRawClass:()Ljava/lang/Class;
     100: ldc_w         #11                 // class java/lang/Object
     103: if_acmpne     110
     106: iconst_1
     107: goto          111
     110: iconst_0
     111: ireturn
}
