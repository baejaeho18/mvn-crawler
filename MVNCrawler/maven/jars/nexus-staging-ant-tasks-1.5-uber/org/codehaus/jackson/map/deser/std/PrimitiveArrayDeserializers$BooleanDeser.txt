Compiled from "PrimitiveArrayDeserializers.java"
final class org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser extends org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$Base<boolean[]> {
  public org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers$BooleanDeser();
    Code:
       0: aload_0
       1: ldc_w         #1                  // class "[Z"
       4: invokespecial #2                  // Method org/codehaus/jackson/map/deser/std/PrimitiveArrayDeserializers$Base."<init>":(Ljava/lang/Class;)V
       7: return

  public boolean[] deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method org/codehaus/jackson/JsonParser.isExpectedStartArrayToken:()Z
       4: ifne          14
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #4                  // Method handleNonArray:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)[Z
      13: areturn
      14: aload_2
      15: invokevirtual #5                  // Method org/codehaus/jackson/map/DeserializationContext.getArrayBuilders:()Lorg/codehaus/jackson/map/util/ArrayBuilders;
      18: invokevirtual #6                  // Method org/codehaus/jackson/map/util/ArrayBuilders.getBooleanBuilder:()Lorg/codehaus/jackson/map/util/ArrayBuilders$BooleanBuilder;
      21: astore_3
      22: aload_3
      23: invokevirtual #7                  // Method org/codehaus/jackson/map/util/ArrayBuilders$BooleanBuilder.resetAndStart:()Ljava/lang/Object;
      26: checkcast     #1                  // class "[Z"
      29: astore        4
      31: iconst_0
      32: istore        5
      34: aload_1
      35: invokevirtual #8                  // Method org/codehaus/jackson/JsonParser.nextToken:()Lorg/codehaus/jackson/JsonToken;
      38: getstatic     #9                  // Field org/codehaus/jackson/JsonToken.END_ARRAY:Lorg/codehaus/jackson/JsonToken;
      41: if_acmpeq     89
      44: aload_0
      45: aload_1
      46: aload_2
      47: invokevirtual #10                 // Method _parseBooleanPrimitive:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Z
      50: istore        6
      52: iload         5
      54: aload         4
      56: arraylength
      57: if_icmplt     76
      60: aload_3
      61: aload         4
      63: iload         5
      65: invokevirtual #11                 // Method org/codehaus/jackson/map/util/ArrayBuilders$BooleanBuilder.appendCompletedChunk:(Ljava/lang/Object;I)Ljava/lang/Object;
      68: checkcast     #1                  // class "[Z"
      71: astore        4
      73: iconst_0
      74: istore        5
      76: aload         4
      78: iload         5
      80: iinc          5, 1
      83: iload         6
      85: bastore
      86: goto          34
      89: aload_3
      90: aload         4
      92: iload         5
      94: invokevirtual #12                 // Method org/codehaus/jackson/map/util/ArrayBuilders$BooleanBuilder.completeAndClearBuffer:(Ljava/lang/Object;I)Ljava/lang/Object;
      97: checkcast     #1                  // class "[Z"
     100: areturn

  private final boolean[] handleNonArray(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       4: getstatic     #14                 // Field org/codehaus/jackson/JsonToken.VALUE_STRING:Lorg/codehaus/jackson/JsonToken;
       7: if_acmpne     32
      10: aload_2
      11: getstatic     #15                 // Field org/codehaus/jackson/map/DeserializationConfig$Feature.ACCEPT_EMPTY_STRING_AS_NULL_OBJECT:Lorg/codehaus/jackson/map/DeserializationConfig$Feature;
      14: invokevirtual #16                 // Method org/codehaus/jackson/map/DeserializationContext.isEnabled:(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)Z
      17: ifeq          32
      20: aload_1
      21: invokevirtual #17                 // Method org/codehaus/jackson/JsonParser.getText:()Ljava/lang/String;
      24: invokevirtual #18                 // Method java/lang/String.length:()I
      27: ifne          32
      30: aconst_null
      31: areturn
      32: aload_2
      33: getstatic     #19                 // Field org/codehaus/jackson/map/DeserializationConfig$Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY:Lorg/codehaus/jackson/map/DeserializationConfig$Feature;
      36: invokevirtual #16                 // Method org/codehaus/jackson/map/DeserializationContext.isEnabled:(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)Z
      39: ifne          51
      42: aload_2
      43: aload_0
      44: getfield      #20                 // Field _valueClass:Ljava/lang/Class;
      47: invokevirtual #21                 // Method org/codehaus/jackson/map/DeserializationContext.mappingException:(Ljava/lang/Class;)Lorg/codehaus/jackson/map/JsonMappingException;
      50: athrow
      51: iconst_1
      52: newarray       boolean
      54: dup
      55: iconst_0
      56: aload_0
      57: aload_1
      58: aload_2
      59: invokevirtual #10                 // Method _parseBooleanPrimitive:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Z
      62: bastore
      63: areturn

  public java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #22                 // Method deserialize:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)[Z
       6: areturn
}
