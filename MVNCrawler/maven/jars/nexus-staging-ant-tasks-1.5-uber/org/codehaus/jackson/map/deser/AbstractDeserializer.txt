Compiled from "AbstractDeserializer.java"
public class org.codehaus.jackson.map.deser.AbstractDeserializer extends org.codehaus.jackson.map.JsonDeserializer<java.lang.Object> {
  protected final org.codehaus.jackson.type.JavaType _baseType;

  public org.codehaus.jackson.map.deser.AbstractDeserializer(org.codehaus.jackson.type.JavaType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/map/JsonDeserializer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _baseType:Lorg/codehaus/jackson/type/JavaType;
       9: return

  public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: getstatic     #3                  // Field org/codehaus/jackson/map/deser/AbstractDeserializer$1.$SwitchMap$org$codehaus$jackson$JsonToken:[I
       3: aload_1
       4: invokevirtual #4                  // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
       7: invokevirtual #5                  // Method org/codehaus/jackson/JsonToken.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 8
                     1: 56
                     2: 61
                     3: 84
                     4: 107
                     5: 111
                     6: 115
                     7: 120
                     8: 122
               default: 129
          }
      56: aload_1
      57: invokevirtual #6                  // Method org/codehaus/jackson/JsonParser.getText:()Ljava/lang/String;
      60: areturn
      61: aload_2
      62: getstatic     #7                  // Field org/codehaus/jackson/map/DeserializationConfig$Feature.USE_BIG_INTEGER_FOR_INTS:Lorg/codehaus/jackson/map/DeserializationConfig$Feature;
      65: invokevirtual #8                  // Method org/codehaus/jackson/map/DeserializationContext.isEnabled:(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)Z
      68: ifeq          76
      71: aload_1
      72: invokevirtual #9                  // Method org/codehaus/jackson/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;
      75: areturn
      76: aload_1
      77: invokevirtual #10                 // Method org/codehaus/jackson/JsonParser.getIntValue:()I
      80: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: areturn
      84: aload_2
      85: getstatic     #12                 // Field org/codehaus/jackson/map/DeserializationConfig$Feature.USE_BIG_DECIMAL_FOR_FLOATS:Lorg/codehaus/jackson/map/DeserializationConfig$Feature;
      88: invokevirtual #8                  // Method org/codehaus/jackson/map/DeserializationContext.isEnabled:(Lorg/codehaus/jackson/map/DeserializationConfig$Feature;)Z
      91: ifeq          99
      94: aload_1
      95: invokevirtual #13                 // Method org/codehaus/jackson/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;
      98: areturn
      99: aload_1
     100: invokevirtual #14                 // Method org/codehaus/jackson/JsonParser.getDoubleValue:()D
     103: invokestatic  #15                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
     106: areturn
     107: getstatic     #16                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
     110: areturn
     111: getstatic     #17                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
     114: areturn
     115: aload_1
     116: invokevirtual #18                 // Method org/codehaus/jackson/JsonParser.getEmbeddedObject:()Ljava/lang/Object;
     119: areturn
     120: aconst_null
     121: areturn
     122: aload_3
     123: aload_1
     124: aload_2
     125: invokevirtual #19                 // Method org/codehaus/jackson/map/TypeDeserializer.deserializeTypedFromAny:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
     128: areturn
     129: aload_3
     130: aload_1
     131: aload_2
     132: invokevirtual #20                 // Method org/codehaus/jackson/map/TypeDeserializer.deserializeTypedFromObject:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
     135: areturn

  public java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field _baseType:Lorg/codehaus/jackson/type/JavaType;
       5: invokevirtual #21                 // Method org/codehaus/jackson/type/JavaType.getRawClass:()Ljava/lang/Class;
       8: ldc           #22                 // String abstract types can only be instantiated with additional type information
      10: invokevirtual #23                 // Method org/codehaus/jackson/map/DeserializationContext.instantiationException:(Ljava/lang/Class;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
      13: athrow
}
