Compiled from "BasicClassIntrospector.java"
public final class org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter extends org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter {
  public org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/map/introspect/BasicClassIntrospector$SetterMethodFilter."<init>":()V
       4: return

  public boolean includeMethod(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/codehaus/jackson/map/introspect/BasicClassIntrospector$SetterMethodFilter.includeMethod:(Ljava/lang/reflect/Method;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: invokestatic  #3                  // Method org/codehaus/jackson/map/util/ClassUtil.hasGetterSignature:(Ljava/lang/reflect/Method;)Z
      14: ifne          19
      17: iconst_0
      18: ireturn
      19: aload_1
      20: invokevirtual #4                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      23: astore_2
      24: ldc_w         #5                  // class java/util/Collection
      27: aload_2
      28: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      31: ifne          44
      34: ldc_w         #7                  // class java/util/Map
      37: aload_2
      38: invokevirtual #6                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      41: ifeq          46
      44: iconst_1
      45: ireturn
      46: iconst_0
      47: ireturn
}
