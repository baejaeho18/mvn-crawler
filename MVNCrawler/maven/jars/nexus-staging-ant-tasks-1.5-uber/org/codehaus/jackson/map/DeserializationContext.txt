Compiled from "DeserializationContext.java"
public abstract class org.codehaus.jackson.map.DeserializationContext {
  protected final org.codehaus.jackson.map.DeserializationConfig _config;

  protected final int _featureFlags;

  protected org.codehaus.jackson.map.DeserializationContext(org.codehaus.jackson.map.DeserializationConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _config:Lorg/codehaus/jackson/map/DeserializationConfig;
       9: aload_0
      10: aload_1
      11: getfield      #3                  // Field org/codehaus/jackson/map/DeserializationConfig._featureFlags:I
      14: putfield      #4                  // Field _featureFlags:I
      17: return

  public org.codehaus.jackson.map.DeserializationConfig getConfig();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _config:Lorg/codehaus/jackson/map/DeserializationConfig;
       4: areturn

  public org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider();
    Code:
       0: aconst_null
       1: areturn

  public boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature);
    Code:
       0: aload_0
       1: getfield      #4                  // Field _featureFlags:I
       4: aload_1
       5: invokevirtual #5                  // Method org/codehaus/jackson/map/DeserializationConfig$Feature.getMask:()I
       8: iand
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public org.codehaus.jackson.Base64Variant getBase64Variant();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _config:Lorg/codehaus/jackson/map/DeserializationConfig;
       4: invokevirtual #6                  // Method org/codehaus/jackson/map/DeserializationConfig.getBase64Variant:()Lorg/codehaus/jackson/Base64Variant;
       7: areturn

  public abstract org.codehaus.jackson.JsonParser getParser();

  public final org.codehaus.jackson.node.JsonNodeFactory getNodeFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _config:Lorg/codehaus/jackson/map/DeserializationConfig;
       4: invokevirtual #7                  // Method org/codehaus/jackson/map/DeserializationConfig.getNodeFactory:()Lorg/codehaus/jackson/node/JsonNodeFactory;
       7: areturn

  public org.codehaus.jackson.type.JavaType constructType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _config:Lorg/codehaus/jackson/map/DeserializationConfig;
       4: aload_1
       5: invokevirtual #8                  // Method org/codehaus/jackson/map/DeserializationConfig.constructType:(Ljava/lang/Class;)Lorg/codehaus/jackson/type/JavaType;
       8: areturn

  public org.codehaus.jackson.map.type.TypeFactory getTypeFactory();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _config:Lorg/codehaus/jackson/map/DeserializationConfig;
       4: invokevirtual #9                  // Method org/codehaus/jackson/map/DeserializationConfig.getTypeFactory:()Lorg/codehaus/jackson/map/type/TypeFactory;
       7: areturn

  public abstract java.lang.Object findInjectableValue(java.lang.Object, org.codehaus.jackson.map.BeanProperty, java.lang.Object);

  public abstract org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer();

  public abstract void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer);

  public abstract org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders();

  public abstract java.util.Date parseDate(java.lang.String) throws java.lang.IllegalArgumentException;

  public abstract java.util.Calendar constructCalendar(java.util.Date);

  public abstract boolean handleUnknownProperty(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.JsonDeserializer<?>, java.lang.Object, java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

  public abstract org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class<?>);

  public abstract org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class<?>, org.codehaus.jackson.JsonToken);

  public org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getParser:()Lorg/codehaus/jackson/JsonParser;
       4: aload_1
       5: invokestatic  #11                 // Method org/codehaus/jackson/map/JsonMappingException.from:(Lorg/codehaus/jackson/JsonParser;Ljava/lang/String;)Lorg/codehaus/jackson/map/JsonMappingException;
       8: areturn

  public abstract org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class<?>, java.lang.Throwable);

  public abstract org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class<?>, java.lang.String);

  public abstract org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class<?>, java.lang.String);

  public abstract org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class<?>, java.lang.String);

  public abstract org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class<?>, java.lang.String, java.lang.String);

  public abstract org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser, org.codehaus.jackson.JsonToken, java.lang.String);

  public abstract org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object, java.lang.String);

  public abstract org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType, java.lang.String);
}
