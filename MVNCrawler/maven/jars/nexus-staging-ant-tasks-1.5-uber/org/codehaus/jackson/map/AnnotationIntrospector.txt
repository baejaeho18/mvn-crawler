Compiled from "AnnotationIntrospector.java"
public abstract class org.codehaus.jackson.map.AnnotationIntrospector {
  public org.codehaus.jackson.map.AnnotationIntrospector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static org.codehaus.jackson.map.AnnotationIntrospector nopInstance();
    Code:
       0: getstatic     #2                  // Field org/codehaus/jackson/map/introspect/NopAnnotationIntrospector.instance:Lorg/codehaus/jackson/map/introspect/NopAnnotationIntrospector;
       3: areturn

  public static org.codehaus.jackson.map.AnnotationIntrospector pair(org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.AnnotationIntrospector);
    Code:
       0: new           #3                  // class org/codehaus/jackson/map/AnnotationIntrospector$Pair
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #4                  // Method org/codehaus/jackson/map/AnnotationIntrospector$Pair."<init>":(Lorg/codehaus/jackson/map/AnnotationIntrospector;Lorg/codehaus/jackson/map/AnnotationIntrospector;)V
       9: areturn

  public java.util.Collection<org.codehaus.jackson.map.AnnotationIntrospector> allIntrospectors();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
       4: areturn

  public java.util.Collection<org.codehaus.jackson.map.AnnotationIntrospector> allIntrospectors(java.util.Collection<org.codehaus.jackson.map.AnnotationIntrospector>);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #6,  2            // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
       7: pop
       8: aload_1
       9: areturn

  public abstract boolean isHandled(java.lang.annotation.Annotation);

  public java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass);
    Code:
       0: aconst_null
       1: areturn

  public abstract java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass);

  public abstract java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass);

  public abstract java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass);

  public java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass);
    Code:
       0: aconst_null
       1: areturn

  public org.codehaus.jackson.map.introspect.VisibilityChecker<?> findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.map.introspect.VisibilityChecker<?>);
    Code:
       0: aload_2
       1: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder<?> findTypeResolver(org.codehaus.jackson.map.MapperConfig<?>, org.codehaus.jackson.map.introspect.AnnotatedClass, org.codehaus.jackson.type.JavaType);
    Code:
       0: aconst_null
       1: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder<?> findPropertyTypeResolver(org.codehaus.jackson.map.MapperConfig<?>, org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.type.JavaType);
    Code:
       0: aconst_null
       1: areturn

  public org.codehaus.jackson.map.jsontype.TypeResolverBuilder<?> findPropertyContentTypeResolver(org.codehaus.jackson.map.MapperConfig<?>, org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.type.JavaType);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List<org.codehaus.jackson.map.jsontype.NamedType> findSubtypes(org.codehaus.jackson.map.introspect.Annotated);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass);
    Code:
       0: aconst_null
       1: areturn

  public org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Boolean shouldUnwrapProperty(org.codehaus.jackson.map.introspect.AnnotatedMember);
    Code:
       0: aconst_null
       1: areturn

  public boolean hasIgnoreMarker(org.codehaus.jackson.map.introspect.AnnotatedMember);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/codehaus/jackson/map/introspect/AnnotatedMethod
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #7                  // class org/codehaus/jackson/map/introspect/AnnotatedMethod
      12: invokevirtual #8                  // Method isIgnorableMethod:(Lorg/codehaus/jackson/map/introspect/AnnotatedMethod;)Z
      15: ireturn
      16: aload_1
      17: instanceof    #9                  // class org/codehaus/jackson/map/introspect/AnnotatedField
      20: ifeq          32
      23: aload_0
      24: aload_1
      25: checkcast     #9                  // class org/codehaus/jackson/map/introspect/AnnotatedField
      28: invokevirtual #10                 // Method isIgnorableField:(Lorg/codehaus/jackson/map/introspect/AnnotatedField;)Z
      31: ireturn
      32: aload_1
      33: instanceof    #11                 // class org/codehaus/jackson/map/introspect/AnnotatedConstructor
      36: ifeq          48
      39: aload_0
      40: aload_1
      41: checkcast     #11                 // class org/codehaus/jackson/map/introspect/AnnotatedConstructor
      44: invokevirtual #12                 // Method isIgnorableConstructor:(Lorg/codehaus/jackson/map/introspect/AnnotatedConstructor;)Z
      47: ireturn
      48: iconst_0
      49: ireturn

  public java.lang.Object findInjectableValueId(org.codehaus.jackson.map.introspect.AnnotatedMember);
    Code:
       0: aconst_null
       1: areturn

  public abstract boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod);

  public abstract boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor);

  public abstract boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField);

  public abstract java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated);

  public java.lang.Class<? extends org.codehaus.jackson.map.JsonSerializer<?>> findKeySerializer(org.codehaus.jackson.map.introspect.Annotated);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Class<? extends org.codehaus.jackson.map.JsonSerializer<?>> findContentSerializer(org.codehaus.jackson.map.introspect.Annotated);
    Code:
       0: aconst_null
       1: areturn

  public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion);
    Code:
       0: aload_2
       1: areturn

  public abstract java.lang.Class<?> findSerializationType(org.codehaus.jackson.map.introspect.Annotated);

  public java.lang.Class<?> findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Class<?> findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType);
    Code:
       0: aconst_null
       1: areturn

  public abstract org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated);

  public abstract java.lang.Class<?>[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated);

  public abstract java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass);

  public abstract java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass);

  public abstract java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod);

  public abstract boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod);

  public abstract java.lang.String findEnumValue(java.lang.Enum<?>);

  public abstract java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField);

  public abstract java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated);

  public abstract java.lang.Class<? extends org.codehaus.jackson.map.KeyDeserializer> findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated);

  public abstract java.lang.Class<? extends org.codehaus.jackson.map.JsonDeserializer<?>> findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated);

  public abstract java.lang.Class<?> findDeserializationType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String);

  public abstract java.lang.Class<?> findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String);

  public abstract java.lang.Class<?> findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated, org.codehaus.jackson.type.JavaType, java.lang.String);

  public java.lang.Object findValueInstantiator(org.codehaus.jackson.map.introspect.AnnotatedClass);
    Code:
       0: aconst_null
       1: areturn

  public abstract java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod);

  public boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod);
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod);
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated);
    Code:
       0: iconst_0
       1: ireturn

  public abstract java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField);

  public abstract java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter);
}
