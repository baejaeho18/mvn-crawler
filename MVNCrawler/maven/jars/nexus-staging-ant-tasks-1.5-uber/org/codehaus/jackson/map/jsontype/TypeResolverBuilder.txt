Compiled from "TypeResolverBuilder.java"
public interface org.codehaus.jackson.map.jsontype.TypeResolverBuilder<T extends org.codehaus.jackson.map.jsontype.TypeResolverBuilder<T>> {
  public abstract java.lang.Class<?> getDefaultImpl();

  public abstract org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);

  public abstract org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, java.util.Collection<org.codehaus.jackson.map.jsontype.NamedType>, org.codehaus.jackson.map.BeanProperty);

  public abstract T init(org.codehaus.jackson.annotate.JsonTypeInfo$Id, org.codehaus.jackson.map.jsontype.TypeIdResolver);

  public abstract T inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As);

  public abstract T typeProperty(java.lang.String);

  public abstract T defaultImpl(java.lang.Class<?>);
}
