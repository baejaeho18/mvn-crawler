Compiled from "MappingIterator.java"
public class org.codehaus.jackson.map.MappingIterator<T> implements java.util.Iterator<T> {
  protected static final org.codehaus.jackson.map.MappingIterator<?> EMPTY_ITERATOR;

  protected final org.codehaus.jackson.type.JavaType _type;

  protected final org.codehaus.jackson.map.DeserializationContext _context;

  protected final org.codehaus.jackson.map.JsonDeserializer<T> _deserializer;

  protected final org.codehaus.jackson.JsonParser _parser;

  protected org.codehaus.jackson.map.MappingIterator(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.JsonDeserializer<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _type:Lorg/codehaus/jackson/type/JavaType;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field _parser:Lorg/codehaus/jackson/JsonParser;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field _context:Lorg/codehaus/jackson/map/DeserializationContext;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field _deserializer:Lorg/codehaus/jackson/map/JsonDeserializer;
      25: aload_2
      26: ifnull        57
      29: aload_2
      30: invokevirtual #6                  // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
      33: getstatic     #7                  // Field org/codehaus/jackson/JsonToken.START_ARRAY:Lorg/codehaus/jackson/JsonToken;
      36: if_acmpne     57
      39: aload_2
      40: invokevirtual #8                  // Method org/codehaus/jackson/JsonParser.getParsingContext:()Lorg/codehaus/jackson/JsonStreamContext;
      43: astore        5
      45: aload         5
      47: invokevirtual #9                  // Method org/codehaus/jackson/JsonStreamContext.inRoot:()Z
      50: ifne          57
      53: aload_2
      54: invokevirtual #10                 // Method org/codehaus/jackson/JsonParser.clearCurrentToken:()V
      57: return

  protected static <T> org.codehaus.jackson.map.MappingIterator<T> emptyIterator();
    Code:
       0: getstatic     #11                 // Field EMPTY_ITERATOR:Lorg/codehaus/jackson/map/MappingIterator;
       3: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method hasNextValue:()Z
       4: ireturn
       5: astore_1
       6: new           #14                 // class org/codehaus/jackson/map/RuntimeJsonMappingException
       9: dup
      10: aload_1
      11: invokevirtual #15                 // Method org/codehaus/jackson/map/JsonMappingException.getMessage:()Ljava/lang/String;
      14: aload_1
      15: invokespecial #16                 // Method org/codehaus/jackson/map/RuntimeJsonMappingException."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/map/JsonMappingException;)V
      18: athrow
      19: astore_1
      20: new           #18                 // class java/lang/RuntimeException
      23: dup
      24: aload_1
      25: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      28: aload_1
      29: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: athrow
    Exception table:
       from    to  target type
           0     4     5   Class org/codehaus/jackson/map/JsonMappingException
           0     4    19   Class java/io/IOException

  public T next();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method nextValue:()Ljava/lang/Object;
       4: areturn
       5: astore_1
       6: new           #14                 // class org/codehaus/jackson/map/RuntimeJsonMappingException
       9: dup
      10: aload_1
      11: invokevirtual #15                 // Method org/codehaus/jackson/map/JsonMappingException.getMessage:()Ljava/lang/String;
      14: aload_1
      15: invokespecial #16                 // Method org/codehaus/jackson/map/RuntimeJsonMappingException."<init>":(Ljava/lang/String;Lorg/codehaus/jackson/map/JsonMappingException;)V
      18: athrow
      19: astore_1
      20: new           #18                 // class java/lang/RuntimeException
      23: dup
      24: aload_1
      25: invokevirtual #19                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      28: aload_1
      29: invokespecial #20                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: athrow
    Exception table:
       from    to  target type
           0     4     5   Class org/codehaus/jackson/map/JsonMappingException
           0     4    19   Class java/io/IOException

  public void remove();
    Code:
       0: new           #22                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #23                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean hasNextValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field _parser:Lorg/codehaus/jackson/JsonParser;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #3                  // Field _parser:Lorg/codehaus/jackson/JsonParser;
      13: invokevirtual #6                  // Method org/codehaus/jackson/JsonParser.getCurrentToken:()Lorg/codehaus/jackson/JsonToken;
      16: astore_1
      17: aload_1
      18: ifnonnull     51
      21: aload_0
      22: getfield      #3                  // Field _parser:Lorg/codehaus/jackson/JsonParser;
      25: invokevirtual #24                 // Method org/codehaus/jackson/JsonParser.nextToken:()Lorg/codehaus/jackson/JsonToken;
      28: astore_1
      29: aload_1
      30: ifnonnull     42
      33: aload_0
      34: getfield      #3                  // Field _parser:Lorg/codehaus/jackson/JsonParser;
      37: invokevirtual #25                 // Method org/codehaus/jackson/JsonParser.close:()V
      40: iconst_0
      41: ireturn
      42: aload_1
      43: getstatic     #26                 // Field org/codehaus/jackson/JsonToken.END_ARRAY:Lorg/codehaus/jackson/JsonToken;
      46: if_acmpne     51
      49: iconst_0
      50: ireturn
      51: iconst_1
      52: ireturn

  public T nextValue() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field _deserializer:Lorg/codehaus/jackson/map/JsonDeserializer;
       4: aload_0
       5: getfield      #3                  // Field _parser:Lorg/codehaus/jackson/JsonParser;
       8: aload_0
       9: getfield      #4                  // Field _context:Lorg/codehaus/jackson/map/DeserializationContext;
      12: invokevirtual #27                 // Method org/codehaus/jackson/map/JsonDeserializer.deserialize:(Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;)Ljava/lang/Object;
      15: astore_1
      16: aload_0
      17: getfield      #3                  // Field _parser:Lorg/codehaus/jackson/JsonParser;
      20: invokevirtual #10                 // Method org/codehaus/jackson/JsonParser.clearCurrentToken:()V
      23: aload_1
      24: areturn

  static {};
    Code:
       0: new           #28                 // class org/codehaus/jackson/map/MappingIterator
       3: dup
       4: aconst_null
       5: aconst_null
       6: aconst_null
       7: aconst_null
       8: invokespecial #29                 // Method "<init>":(Lorg/codehaus/jackson/type/JavaType;Lorg/codehaus/jackson/JsonParser;Lorg/codehaus/jackson/map/DeserializationContext;Lorg/codehaus/jackson/map/JsonDeserializer;)V
      11: putstatic     #11                 // Field EMPTY_ITERATOR:Lorg/codehaus/jackson/map/MappingIterator;
      14: return
}
