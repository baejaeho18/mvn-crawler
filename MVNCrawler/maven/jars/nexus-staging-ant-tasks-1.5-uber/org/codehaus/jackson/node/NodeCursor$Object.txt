Compiled from "NodeCursor.java"
public final class org.codehaus.jackson.node.NodeCursor$Object extends org.codehaus.jackson.node.NodeCursor {
  java.util.Iterator<java.util.Map$Entry<java.lang.String, org.codehaus.jackson.JsonNode>> _contents;

  java.util.Map$Entry<java.lang.String, org.codehaus.jackson.JsonNode> _current;

  boolean _needEntry;

  public org.codehaus.jackson.node.NodeCursor$Object(org.codehaus.jackson.JsonNode, org.codehaus.jackson.node.NodeCursor);
    Code:
       0: aload_0
       1: iconst_2
       2: aload_2
       3: invokespecial #1                  // Method org/codehaus/jackson/node/NodeCursor."<init>":(ILorg/codehaus/jackson/node/NodeCursor;)V
       6: aload_0
       7: aload_1
       8: checkcast     #2                  // class org/codehaus/jackson/node/ObjectNode
      11: invokevirtual #3                  // Method org/codehaus/jackson/node/ObjectNode.getFields:()Ljava/util/Iterator;
      14: putfield      #4                  // Field _contents:Ljava/util/Iterator;
      17: aload_0
      18: iconst_1
      19: putfield      #5                  // Field _needEntry:Z
      22: return

  public java.lang.String getCurrentName();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _current:Ljava/util/Map$Entry;
       4: ifnonnull     11
       7: aconst_null
       8: goto          23
      11: aload_0
      12: getfield      #6                  // Field _current:Ljava/util/Map$Entry;
      15: invokeinterface #7,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      20: checkcast     #8                  // class java/lang/String
      23: areturn

  public org.codehaus.jackson.JsonToken nextToken();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _needEntry:Z
       4: ifeq          51
       7: aload_0
       8: getfield      #4                  // Field _contents:Ljava/util/Iterator;
      11: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifne          26
      19: aload_0
      20: aconst_null
      21: putfield      #6                  // Field _current:Ljava/util/Map$Entry;
      24: aconst_null
      25: areturn
      26: aload_0
      27: iconst_0
      28: putfield      #5                  // Field _needEntry:Z
      31: aload_0
      32: aload_0
      33: getfield      #4                  // Field _contents:Ljava/util/Iterator;
      36: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #11                 // class java/util/Map$Entry
      44: putfield      #6                  // Field _current:Ljava/util/Map$Entry;
      47: getstatic     #12                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
      50: areturn
      51: aload_0
      52: iconst_1
      53: putfield      #5                  // Field _needEntry:Z
      56: aload_0
      57: getfield      #6                  // Field _current:Ljava/util/Map$Entry;
      60: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      65: checkcast     #14                 // class org/codehaus/jackson/JsonNode
      68: invokevirtual #15                 // Method org/codehaus/jackson/JsonNode.asToken:()Lorg/codehaus/jackson/JsonToken;
      71: areturn

  public org.codehaus.jackson.JsonToken nextValue();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
       4: astore_1
       5: aload_1
       6: getstatic     #12                 // Field org/codehaus/jackson/JsonToken.FIELD_NAME:Lorg/codehaus/jackson/JsonToken;
       9: if_acmpne     17
      12: aload_0
      13: invokevirtual #16                 // Method nextToken:()Lorg/codehaus/jackson/JsonToken;
      16: astore_1
      17: aload_1
      18: areturn

  public org.codehaus.jackson.JsonToken endToken();
    Code:
       0: getstatic     #17                 // Field org/codehaus/jackson/JsonToken.END_OBJECT:Lorg/codehaus/jackson/JsonToken;
       3: areturn

  public org.codehaus.jackson.JsonNode currentNode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field _current:Ljava/util/Map$Entry;
       4: ifnonnull     11
       7: aconst_null
       8: goto          23
      11: aload_0
      12: getfield      #6                  // Field _current:Ljava/util/Map$Entry;
      15: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      20: checkcast     #14                 // class org/codehaus/jackson/JsonNode
      23: areturn

  public boolean currentHasChildren();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method currentNode:()Lorg/codehaus/jackson/JsonNode;
       4: checkcast     #19                 // class org/codehaus/jackson/node/ContainerNode
       7: invokevirtual #20                 // Method org/codehaus/jackson/node/ContainerNode.size:()I
      10: ifle          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public org.codehaus.jackson.JsonStreamContext getParent();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/codehaus/jackson/node/NodeCursor.getParent:()Lorg/codehaus/jackson/node/NodeCursor;
       4: areturn
}
