Compiled from "BigIntegerNode.java"
public final class org.codehaus.jackson.node.BigIntegerNode extends org.codehaus.jackson.node.NumericNode {
  protected final java.math.BigInteger _value;

  public org.codehaus.jackson.node.BigIntegerNode(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/codehaus/jackson/node/NumericNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _value:Ljava/math/BigInteger;
       9: return

  public static org.codehaus.jackson.node.BigIntegerNode valueOf(java.math.BigInteger);
    Code:
       0: new           #3                  // class org/codehaus/jackson/node/BigIntegerNode
       3: dup
       4: aload_0
       5: invokespecial #4                  // Method "<init>":(Ljava/math/BigInteger;)V
       8: areturn

  public org.codehaus.jackson.JsonToken asToken();
    Code:
       0: getstatic     #5                  // Field org/codehaus/jackson/JsonToken.VALUE_NUMBER_INT:Lorg/codehaus/jackson/JsonToken;
       3: areturn

  public org.codehaus.jackson.JsonParser$NumberType getNumberType();
    Code:
       0: getstatic     #6                  // Field org/codehaus/jackson/JsonParser$NumberType.BIG_INTEGER:Lorg/codehaus/jackson/JsonParser$NumberType;
       3: areturn

  public boolean isIntegralNumber();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isBigInteger();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Number getNumberValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       4: areturn

  public int getIntValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       4: invokevirtual #7                  // Method java/math/BigInteger.intValue:()I
       7: ireturn

  public long getLongValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       4: invokevirtual #8                  // Method java/math/BigInteger.longValue:()J
       7: lreturn

  public java.math.BigInteger getBigIntegerValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       4: areturn

  public double getDoubleValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       4: invokevirtual #9                  // Method java/math/BigInteger.doubleValue:()D
       7: dreturn

  public java.math.BigDecimal getDecimalValue();
    Code:
       0: new           #10                 // class java/math/BigDecimal
       3: dup
       4: aload_0
       5: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       8: invokespecial #11                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      11: areturn

  public java.lang.String asText();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       4: invokevirtual #12                 // Method java/math/BigInteger.toString:()Ljava/lang/String;
       7: areturn

  public boolean asBoolean(boolean);
    Code:
       0: getstatic     #13                 // Field java/math/BigInteger.ZERO:Ljava/math/BigInteger;
       3: aload_0
       4: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       7: invokevirtual #14                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public final void serialize(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       5: invokevirtual #15                 // Method org/codehaus/jackson/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V
       8: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_0
      18: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #3                  // class org/codehaus/jackson/node/BigIntegerNode
      30: getfield      #2                  // Field _value:Ljava/math/BigInteger;
      33: aload_0
      34: getfield      #2                  // Field _value:Ljava/math/BigInteger;
      37: if_acmpne     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _value:Ljava/math/BigInteger;
       4: invokevirtual #17                 // Method java/math/BigInteger.hashCode:()I
       7: ireturn
}
