Compiled from "ObjectNode.java"
public class org.codehaus.jackson.node.ObjectNode extends org.codehaus.jackson.node.ContainerNode {
  protected java.util.LinkedHashMap<java.lang.String, org.codehaus.jackson.JsonNode> _children;

  public org.codehaus.jackson.node.ObjectNode(org.codehaus.jackson.node.JsonNodeFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/codehaus/jackson/node/ContainerNode."<init>":(Lorg/codehaus/jackson/node/JsonNodeFactory;)V
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      10: return

  public org.codehaus.jackson.JsonToken asToken();
    Code:
       0: getstatic     #3                  // Field org/codehaus/jackson/JsonToken.START_OBJECT:Lorg/codehaus/jackson/JsonToken;
       3: areturn

  public boolean isObject();
    Code:
       0: iconst_1
       1: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      15: invokevirtual #4                  // Method java/util/LinkedHashMap.size:()I
      18: ireturn

  public java.util.Iterator<org.codehaus.jackson.JsonNode> getElements();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     13
       7: invokestatic  #5                  // Method org/codehaus/jackson/node/ContainerNode$NoNodesIterator.instance:()Lorg/codehaus/jackson/node/ContainerNode$NoNodesIterator;
      10: goto          25
      13: aload_0
      14: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      17: invokevirtual #6                  // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      20: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      25: areturn

  public org.codehaus.jackson.JsonNode get(int);
    Code:
       0: aconst_null
       1: areturn

  public org.codehaus.jackson.JsonNode get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        19
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: aload_1
      12: invokevirtual #8                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      18: areturn
      19: aconst_null
      20: areturn

  public java.util.Iterator<java.lang.String> getFieldNames();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     13
       7: invokestatic  #10                 // Method org/codehaus/jackson/node/ContainerNode$NoStringsIterator.instance:()Lorg/codehaus/jackson/node/ContainerNode$NoStringsIterator;
      10: goto          25
      13: aload_0
      14: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      17: invokevirtual #11                 // Method java/util/LinkedHashMap.keySet:()Ljava/util/Set;
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: areturn

  public org.codehaus.jackson.JsonNode path(int);
    Code:
       0: invokestatic  #13                 // Method org/codehaus/jackson/node/MissingNode.getInstance:()Lorg/codehaus/jackson/node/MissingNode;
       3: areturn

  public org.codehaus.jackson.JsonNode path(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        25
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: aload_1
      12: invokevirtual #8                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      18: astore_2
      19: aload_2
      20: ifnull        25
      23: aload_2
      24: areturn
      25: invokestatic  #13                 // Method org/codehaus/jackson/node/MissingNode.getInstance:()Lorg/codehaus/jackson/node/MissingNode;
      28: areturn

  public java.util.Iterator<java.util.Map$Entry<java.lang.String, org.codehaus.jackson.JsonNode>> getFields();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     11
       7: getstatic     #14                 // Field org/codehaus/jackson/node/ObjectNode$NoFieldsIterator.instance:Lorg/codehaus/jackson/node/ObjectNode$NoFieldsIterator;
      10: areturn
      11: aload_0
      12: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      15: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      18: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: areturn

  public org.codehaus.jackson.node.ObjectNode with(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     21
       7: aload_0
       8: new           #16                 // class java/util/LinkedHashMap
      11: dup
      12: invokespecial #17                 // Method java/util/LinkedHashMap."<init>":()V
      15: putfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      18: goto          96
      21: aload_0
      22: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      25: aload_1
      26: invokevirtual #8                  // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      32: astore_2
      33: aload_2
      34: ifnull        96
      37: aload_2
      38: instanceof    #18                 // class org/codehaus/jackson/node/ObjectNode
      41: ifeq          49
      44: aload_2
      45: checkcast     #18                 // class org/codehaus/jackson/node/ObjectNode
      48: areturn
      49: new           #19                 // class java/lang/UnsupportedOperationException
      52: dup
      53: new           #20                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #22                 // String Property \'
      62: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_1
      66: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #24                 // String \' has value that is not of type ObjectNode (but
      71: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_2
      75: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      78: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      81: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #27                 // String )
      86: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: invokespecial #29                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      95: athrow
      96: aload_0
      97: invokevirtual #30                 // Method objectNode:()Lorg/codehaus/jackson/node/ObjectNode;
     100: astore_2
     101: aload_0
     102: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
     105: aload_1
     106: aload_2
     107: invokevirtual #31                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     110: pop
     111: aload_2
     112: areturn

  public org.codehaus.jackson.JsonNode findValue(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        88
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          88
      29: aload_2
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          62
      52: aload_3
      53: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      58: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      61: areturn
      62: aload_3
      63: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      68: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      71: aload_1
      72: invokevirtual #39                 // Method org/codehaus/jackson/JsonNode.findValue:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      75: astore        4
      77: aload         4
      79: ifnull        85
      82: aload         4
      84: areturn
      85: goto          20
      88: aconst_null
      89: areturn

  public java.util.List<org.codehaus.jackson.JsonNode> findValues(java.lang.String, java.util.List<org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        102
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          102
      29: aload_3
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore        4
      40: aload_1
      41: aload         4
      43: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          83
      54: aload_2
      55: ifnonnull     66
      58: new           #40                 // class java/util/ArrayList
      61: dup
      62: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      65: astore_2
      66: aload_2
      67: aload         4
      69: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          99
      83: aload         4
      85: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      90: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      93: aload_1
      94: aload_2
      95: invokevirtual #43                 // Method org/codehaus/jackson/JsonNode.findValues:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      98: astore_2
      99: goto          20
     102: aload_2
     103: areturn

  public java.util.List<java.lang.String> findValuesAsText(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        108
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          108
      29: aload_3
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore        4
      40: aload_1
      41: aload         4
      43: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          89
      54: aload_2
      55: ifnonnull     66
      58: new           #40                 // class java/util/ArrayList
      61: dup
      62: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      65: astore_2
      66: aload_2
      67: aload         4
      69: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      74: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      77: invokevirtual #44                 // Method org/codehaus/jackson/JsonNode.asText:()Ljava/lang/String;
      80: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: goto          105
      89: aload         4
      91: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      96: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      99: aload_1
     100: aload_2
     101: invokevirtual #45                 // Method org/codehaus/jackson/JsonNode.findValuesAsText:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
     104: astore_2
     105: goto          20
     108: aload_2
     109: areturn

  public org.codehaus.jackson.node.ObjectNode findParent(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        83
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          83
      29: aload_2
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          54
      52: aload_0
      53: areturn
      54: aload_3
      55: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      60: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      63: aload_1
      64: invokevirtual #46                 // Method org/codehaus/jackson/JsonNode.findParent:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
      67: astore        4
      69: aload         4
      71: ifnull        80
      74: aload         4
      76: checkcast     #18                 // class org/codehaus/jackson/node/ObjectNode
      79: areturn
      80: goto          20
      83: aconst_null
      84: areturn

  public java.util.List<org.codehaus.jackson.JsonNode> findParents(java.lang.String, java.util.List<org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        96
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          96
      29: aload_3
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore        4
      40: aload_1
      41: aload         4
      43: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      48: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          77
      54: aload_2
      55: ifnonnull     66
      58: new           #40                 // class java/util/ArrayList
      61: dup
      62: invokespecial #41                 // Method java/util/ArrayList."<init>":()V
      65: astore_2
      66: aload_2
      67: aload_0
      68: invokeinterface #42,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          93
      77: aload         4
      79: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      84: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      87: aload_1
      88: aload_2
      89: invokevirtual #47                 // Method org/codehaus/jackson/JsonNode.findParents:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      92: astore_2
      93: goto          20
      96: aload_2
      97: areturn

  public final void serialize(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_1
       1: invokevirtual #48                 // Method org/codehaus/jackson/JsonGenerator.writeStartObject:()V
       4: aload_0
       5: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       8: ifnull        76
      11: aload_0
      12: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      15: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      18: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          76
      33: aload_3
      34: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #35                 // class java/util/Map$Entry
      42: astore        4
      44: aload_1
      45: aload         4
      47: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: checkcast     #49                 // class java/lang/String
      55: invokevirtual #50                 // Method org/codehaus/jackson/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      58: aload         4
      60: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      65: checkcast     #51                 // class org/codehaus/jackson/node/BaseJsonNode
      68: aload_1
      69: aload_2
      70: invokevirtual #52                 // Method org/codehaus/jackson/node/BaseJsonNode.serialize:(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      73: goto          24
      76: aload_1
      77: invokevirtual #53                 // Method org/codehaus/jackson/JsonGenerator.writeEndObject:()V
      80: return

  public void serializeWithType(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;
    Code:
       0: aload_3
       1: aload_0
       2: aload_1
       3: invokevirtual #54                 // Method org/codehaus/jackson/map/TypeSerializer.writeTypePrefixForObject:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
       6: aload_0
       7: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      10: ifnull        81
      13: aload_0
      14: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      17: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      20: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          81
      37: aload         4
      39: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #35                 // class java/util/Map$Entry
      47: astore        5
      49: aload_1
      50: aload         5
      52: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: checkcast     #49                 // class java/lang/String
      60: invokevirtual #50                 // Method org/codehaus/jackson/JsonGenerator.writeFieldName:(Ljava/lang/String;)V
      63: aload         5
      65: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      70: checkcast     #51                 // class org/codehaus/jackson/node/BaseJsonNode
      73: aload_1
      74: aload_2
      75: invokevirtual #52                 // Method org/codehaus/jackson/node/BaseJsonNode.serialize:(Lorg/codehaus/jackson/JsonGenerator;Lorg/codehaus/jackson/map/SerializerProvider;)V
      78: goto          27
      81: aload_3
      82: aload_0
      83: aload_1
      84: invokevirtual #55                 // Method org/codehaus/jackson/map/TypeSerializer.writeTypeSuffixForObject:(Ljava/lang/Object;Lorg/codehaus/jackson/JsonGenerator;)V
      87: return

  public org.codehaus.jackson.JsonNode put(java.lang.String, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_2
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
       8: astore_2
       9: aload_0
      10: aload_1
      11: aload_2
      12: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      15: areturn

  public org.codehaus.jackson.JsonNode remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        19
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: aload_1
      12: invokevirtual #58                 // Method java/util/LinkedHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      18: areturn
      19: aconst_null
      20: areturn

  public org.codehaus.jackson.node.ObjectNode remove(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        45
       7: aload_1
       8: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          45
      23: aload_2
      24: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #49                 // class java/lang/String
      32: astore_3
      33: aload_0
      34: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      37: aload_3
      38: invokevirtual #58                 // Method java/util/LinkedHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: goto          14
      45: aload_0
      46: areturn

  public org.codehaus.jackson.node.ObjectNode removeAll();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       5: aload_0
       6: areturn

  public org.codehaus.jackson.JsonNode putAll(java.util.Map<java.lang.String, org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     22
       7: aload_0
       8: new           #16                 // class java/util/LinkedHashMap
      11: dup
      12: aload_1
      13: invokespecial #60                 // Method java/util/LinkedHashMap."<init>":(Ljava/util/Map;)V
      16: putfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      19: goto          94
      22: aload_1
      23: invokeinterface #61,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      28: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          94
      43: aload_2
      44: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #35                 // class java/util/Map$Entry
      52: astore_3
      53: aload_3
      54: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      62: astore        4
      64: aload         4
      66: ifnonnull     75
      69: aload_0
      70: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
      73: astore        4
      75: aload_0
      76: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      79: aload_3
      80: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      85: aload         4
      87: invokevirtual #31                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: goto          34
      94: aload_0
      95: areturn

  public org.codehaus.jackson.JsonNode putAll(org.codehaus.jackson.node.ObjectNode);
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method size:()I
       4: istore_2
       5: iload_2
       6: ifle          36
       9: aload_0
      10: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      13: ifnonnull     28
      16: aload_0
      17: new           #16                 // class java/util/LinkedHashMap
      20: dup
      21: iload_2
      22: invokespecial #63                 // Method java/util/LinkedHashMap."<init>":(I)V
      25: putfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      28: aload_1
      29: aload_0
      30: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      33: invokevirtual #64                 // Method putContentsTo:(Ljava/util/Map;)V
      36: aload_0
      37: areturn

  public org.codehaus.jackson.node.ObjectNode retain(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        63
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          63
      29: aload_2
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: invokeinterface #65,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      51: ifne          60
      54: aload_2
      55: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.remove:()V
      60: goto          20
      63: aload_0
      64: areturn

  public org.codehaus.jackson.node.ObjectNode retain(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #67                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #68                 // Method retain:(Ljava/util/Collection;)Lorg/codehaus/jackson/node/ObjectNode;
       8: areturn

  public org.codehaus.jackson.node.ArrayNode putArray(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method arrayNode:()Lorg/codehaus/jackson/node/ArrayNode;
       4: astore_2
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      11: pop
      12: aload_2
      13: areturn

  public org.codehaus.jackson.node.ObjectNode putObject(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method objectNode:()Lorg/codehaus/jackson/node/ObjectNode;
       4: astore_2
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      11: pop
      12: aload_2
      13: areturn

  public void putPOJO(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_2
       4: invokevirtual #70                 // Method POJONode:(Ljava/lang/Object;)Lorg/codehaus/jackson/node/POJONode;
       7: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      10: pop
      11: return

  public void putNull(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
       6: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
       9: pop
      10: return

  public void put(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: iload_2
       4: invokevirtual #71                 // Method numberNode:(I)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      10: pop
      11: return

  public void put(java.lang.String, java.lang.Integer);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: aload_1
       6: aload_0
       7: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
      10: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      13: pop
      14: goto          31
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_2
      21: invokevirtual #72                 // Method java/lang/Integer.intValue:()I
      24: invokevirtual #71                 // Method numberNode:(I)Lorg/codehaus/jackson/node/NumericNode;
      27: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      30: pop
      31: return

  public void put(java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: lload_2
       4: invokevirtual #73                 // Method numberNode:(J)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      10: pop
      11: return

  public void put(java.lang.String, java.lang.Long);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: aload_1
       6: aload_0
       7: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
      10: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      13: pop
      14: goto          31
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_2
      21: invokevirtual #74                 // Method java/lang/Long.longValue:()J
      24: invokevirtual #73                 // Method numberNode:(J)Lorg/codehaus/jackson/node/NumericNode;
      27: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      30: pop
      31: return

  public void put(java.lang.String, float);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: fload_2
       4: invokevirtual #75                 // Method numberNode:(F)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      10: pop
      11: return

  public void put(java.lang.String, java.lang.Float);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: aload_1
       6: aload_0
       7: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
      10: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      13: pop
      14: goto          31
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_2
      21: invokevirtual #76                 // Method java/lang/Float.floatValue:()F
      24: invokevirtual #75                 // Method numberNode:(F)Lorg/codehaus/jackson/node/NumericNode;
      27: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      30: pop
      31: return

  public void put(java.lang.String, double);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: dload_2
       4: invokevirtual #77                 // Method numberNode:(D)Lorg/codehaus/jackson/node/NumericNode;
       7: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      10: pop
      11: return

  public void put(java.lang.String, java.lang.Double);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: aload_1
       6: aload_0
       7: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
      10: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      13: pop
      14: goto          31
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_2
      21: invokevirtual #78                 // Method java/lang/Double.doubleValue:()D
      24: invokevirtual #77                 // Method numberNode:(D)Lorg/codehaus/jackson/node/NumericNode;
      27: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      30: pop
      31: return

  public void put(java.lang.String, java.math.BigDecimal);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: invokevirtual #79                 // Method putNull:(Ljava/lang/String;)V
       9: goto          23
      12: aload_0
      13: aload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #80                 // Method numberNode:(Ljava/math/BigDecimal;)Lorg/codehaus/jackson/node/NumericNode;
      19: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      22: pop
      23: return

  public void put(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: aload_1
       6: invokevirtual #79                 // Method putNull:(Ljava/lang/String;)V
       9: goto          23
      12: aload_0
      13: aload_1
      14: aload_0
      15: aload_2
      16: invokevirtual #81                 // Method textNode:(Ljava/lang/String;)Lorg/codehaus/jackson/node/TextNode;
      19: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      22: pop
      23: return

  public void put(java.lang.String, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: iload_2
       4: invokevirtual #82                 // Method booleanNode:(Z)Lorg/codehaus/jackson/node/BooleanNode;
       7: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      10: pop
      11: return

  public void put(java.lang.String, java.lang.Boolean);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: aload_1
       6: aload_0
       7: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
      10: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      13: pop
      14: goto          31
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_2
      21: invokevirtual #83                 // Method java/lang/Boolean.booleanValue:()Z
      24: invokevirtual #82                 // Method booleanNode:(Z)Lorg/codehaus/jackson/node/BooleanNode;
      27: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      30: pop
      31: return

  public void put(java.lang.String, byte[]);
    Code:
       0: aload_2
       1: ifnonnull     17
       4: aload_0
       5: aload_1
       6: aload_0
       7: invokevirtual #56                 // Method nullNode:()Lorg/codehaus/jackson/node/NullNode;
      10: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      13: pop
      14: goto          28
      17: aload_0
      18: aload_1
      19: aload_0
      20: aload_2
      21: invokevirtual #84                 // Method binaryNode:([B)Lorg/codehaus/jackson/node/BinaryNode;
      24: invokespecial #57                 // Method _put:(Ljava/lang/String;Lorg/codehaus/jackson/JsonNode;)Lorg/codehaus/jackson/JsonNode;
      27: pop
      28: return

  protected void putContentsTo(java.util.Map<java.lang.String, org.codehaus.jackson.JsonNode>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnull        61
       7: aload_0
       8: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      11: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      14: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          61
      29: aload_2
      30: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #35                 // class java/util/Map$Entry
      38: astore_3
      39: aload_1
      40: aload_3
      41: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      46: aload_3
      47: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: invokeinterface #85,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: goto          20
      61: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_0
      18: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #18                 // class org/codehaus/jackson/node/ObjectNode
      30: astore_2
      31: aload_2
      32: invokevirtual #62                 // Method size:()I
      35: aload_0
      36: invokevirtual #62                 // Method size:()I
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: aload_0
      45: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      48: ifnull        136
      51: aload_0
      52: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      55: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      58: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      63: astore_3
      64: aload_3
      65: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          136
      73: aload_3
      74: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #35                 // class java/util/Map$Entry
      82: astore        4
      84: aload         4
      86: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      91: checkcast     #49                 // class java/lang/String
      94: astore        5
      96: aload         4
      98: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     103: checkcast     #9                  // class org/codehaus/jackson/JsonNode
     106: astore        6
     108: aload_2
     109: aload         5
     111: invokevirtual #86                 // Method get:(Ljava/lang/String;)Lorg/codehaus/jackson/JsonNode;
     114: astore        7
     116: aload         7
     118: ifnull        131
     121: aload         7
     123: aload         6
     125: invokevirtual #87                 // Method org/codehaus/jackson/JsonNode.equals:(Ljava/lang/Object;)Z
     128: ifne          133
     131: iconst_0
     132: ireturn
     133: goto          64
     136: iconst_1
     137: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     11
       7: iconst_m1
       8: goto          18
      11: aload_0
      12: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      15: invokevirtual #88                 // Method java/util/LinkedHashMap.hashCode:()I
      18: ireturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: bipush        32
       6: aload_0
       7: invokevirtual #62                 // Method size:()I
      10: iconst_4
      11: ishl
      12: iadd
      13: invokespecial #89                 // Method java/lang/StringBuilder."<init>":(I)V
      16: astore_1
      17: aload_1
      18: ldc           #90                 // String {
      20: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      28: ifnull        122
      31: iconst_0
      32: istore_2
      33: aload_0
      34: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      37: invokevirtual #15                 // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      40: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      45: astore_3
      46: aload_3
      47: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          122
      55: aload_3
      56: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #35                 // class java/util/Map$Entry
      64: astore        4
      66: iload_2
      67: ifle          77
      70: aload_1
      71: ldc           #91                 // String ,
      73: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: pop
      77: iinc          2, 1
      80: aload_1
      81: aload         4
      83: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      88: checkcast     #49                 // class java/lang/String
      91: invokestatic  #92                 // Method org/codehaus/jackson/node/TextNode.appendQuoted:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
      94: aload_1
      95: bipush        58
      97: invokevirtual #93                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     100: pop
     101: aload_1
     102: aload         4
     104: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     109: checkcast     #9                  // class org/codehaus/jackson/JsonNode
     112: invokevirtual #94                 // Method org/codehaus/jackson/JsonNode.toString:()Ljava/lang/String;
     115: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: pop
     119: goto          46
     122: aload_1
     123: ldc           #95                 // String }
     125: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: pop
     129: aload_1
     130: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: areturn

  private final org.codehaus.jackson.JsonNode _put(java.lang.String, org.codehaus.jackson.JsonNode);
    Code:
       0: aload_0
       1: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
       4: ifnonnull     18
       7: aload_0
       8: new           #16                 // class java/util/LinkedHashMap
      11: dup
      12: invokespecial #17                 // Method java/util/LinkedHashMap."<init>":()V
      15: putfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      18: aload_0
      19: getfield      #2                  // Field _children:Ljava/util/LinkedHashMap;
      22: aload_1
      23: aload_2
      24: invokevirtual #31                 // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #9                  // class org/codehaus/jackson/JsonNode
      30: areturn

  public org.codehaus.jackson.node.ContainerNode removeAll();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method removeAll:()Lorg/codehaus/jackson/node/ObjectNode;
       4: areturn

  public org.codehaus.jackson.JsonNode with(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #97                 // Method with:(Ljava/lang/String;)Lorg/codehaus/jackson/node/ObjectNode;
       5: areturn

  public org.codehaus.jackson.JsonNode findParent(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #98                 // Method findParent:(Ljava/lang/String;)Lorg/codehaus/jackson/node/ObjectNode;
       5: areturn
}
