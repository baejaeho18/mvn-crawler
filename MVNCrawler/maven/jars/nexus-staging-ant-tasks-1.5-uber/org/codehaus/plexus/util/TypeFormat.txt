Compiled from "TypeFormat.java"
public final class org.codehaus.plexus.util.TypeFormat {
  private static final char[] DIGITS;

  private static final int[] INT_POW_10;

  private static final long[] LONG_POW_10;

  private static final double LOG_10;

  private static final float FLOAT_RELATIVE_ERROR;

  private static final double DOUBLE_RELATIVE_ERROR;

  private static java.lang.String[] LEADING_ZEROS;

  private static final double[] DOUBLE_POW_10;

  private org.codehaus.plexus.util.TypeFormat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int indexOf(java.lang.CharSequence, java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_3
       7: iconst_0
       8: iload_2
       9: invokestatic  #3                  // Method java/lang/Math.max:(II)I
      12: istore_2
      13: iload_3
      14: ifeq          121
      17: aload_0
      18: iconst_0
      19: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      24: istore        4
      26: aload_1
      27: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      32: iload_3
      33: isub
      34: istore        5
      36: iload_2
      37: istore        6
      39: iload         6
      41: iload         5
      43: if_icmpgt     119
      46: aload_1
      47: iload         6
      49: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      54: iload         4
      56: if_icmpne     113
      59: iconst_1
      60: istore        7
      62: iconst_1
      63: istore        8
      65: iload         8
      67: iload_3
      68: if_icmpge     105
      71: aload_1
      72: iload         6
      74: iload         8
      76: iadd
      77: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      82: aload_0
      83: iload         8
      85: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      90: if_icmpeq     99
      93: iconst_0
      94: istore        7
      96: goto          105
      99: iinc          8, 1
     102: goto          65
     105: iload         7
     107: ifeq          113
     110: iload         6
     112: ireturn
     113: iinc          6, 1
     116: goto          39
     119: iconst_m1
     120: ireturn
     121: iconst_0
     122: iload_2
     123: invokestatic  #5                  // Method java/lang/Math.min:(II)I
     126: ireturn

  public static boolean parseBoolean(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       6: iconst_4
       7: if_icmpne     110
      10: aload_0
      11: iconst_0
      12: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      17: bipush        116
      19: if_icmpeq     34
      22: aload_0
      23: iconst_0
      24: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      29: bipush        84
      31: if_icmpne     110
      34: aload_0
      35: iconst_1
      36: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      41: bipush        114
      43: if_icmpeq     58
      46: aload_0
      47: iconst_1
      48: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      53: bipush        82
      55: if_icmpne     110
      58: aload_0
      59: iconst_2
      60: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      65: bipush        117
      67: if_icmpeq     82
      70: aload_0
      71: iconst_2
      72: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      77: bipush        85
      79: if_icmpne     110
      82: aload_0
      83: iconst_3
      84: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      89: bipush        101
      91: if_icmpeq     106
      94: aload_0
      95: iconst_3
      96: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     101: bipush        69
     103: if_icmpne     110
     106: iconst_1
     107: goto          111
     110: iconst_0
     111: ireturn

  public static short parseShort(java.lang.CharSequence);
    Code:
       0: aload_0
       1: bipush        10
       3: invokestatic  #6                  // Method parseShort:(Ljava/lang/CharSequence;I)S
       6: ireturn

  public static short parseShort(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
       7: bipush        45
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_2
      18: iconst_0
      19: istore_3
      20: iload_2
      21: ifeq          30
      24: sipush        -32768
      27: goto          33
      30: sipush        -32767
      33: istore        4
      35: iload         4
      37: iload_1
      38: idiv
      39: istore        5
      41: aload_0
      42: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      47: istore        6
      49: iload_2
      50: ifne          65
      53: aload_0
      54: iconst_0
      55: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      60: bipush        43
      62: if_icmpne     69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: istore        7
      72: aload_0
      73: iload         7
      75: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      80: iload_1
      81: invokestatic  #7                  // Method java/lang/Character.digit:(CI)I
      84: istore        8
      86: iload_3
      87: iload_1
      88: imul
      89: istore        9
      91: iload         8
      93: iflt          112
      96: iload_3
      97: iload         5
      99: if_icmplt     112
     102: iload         9
     104: iload         4
     106: iload         8
     108: iadd
     109: if_icmpge     147
     112: new           #8                  // class java/lang/NumberFormatException
     115: dup
     116: new           #9                  // class java/lang/StringBuilder
     119: dup
     120: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #11                 // String For input characters: \"
     125: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     132: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #14                 // String \"
     137: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     146: athrow
     147: iload         9
     149: iload         8
     151: isub
     152: istore_3
     153: iinc          7, 1
     156: iload         7
     158: iload         6
     160: if_icmplt     166
     163: goto          169
     166: goto          72
     169: iload_2
     170: ifeq          177
     173: iload_3
     174: goto          179
     177: iload_3
     178: ineg
     179: i2s
     180: ireturn
     181: astore_2
     182: new           #8                  // class java/lang/NumberFormatException
     185: dup
     186: new           #9                  // class java/lang/StringBuilder
     189: dup
     190: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     193: ldc           #11                 // String For input characters: \"
     195: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: aload_0
     199: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     202: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: ldc           #14                 // String \"
     207: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     216: athrow
    Exception table:
       from    to  target type
           0   180   181   Class java/lang/IndexOutOfBoundsException

  public static int parseInt(java.lang.CharSequence);
    Code:
       0: aload_0
       1: bipush        10
       3: invokestatic  #18                 // Method parseInt:(Ljava/lang/CharSequence;I)I
       6: ireturn

  public static int parseInt(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
       7: bipush        45
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_2
      18: iconst_0
      19: istore_3
      20: iload_2
      21: ifeq          29
      24: ldc           #19                 // int -2147483648
      26: goto          31
      29: ldc           #20                 // int -2147483647
      31: istore        4
      33: iload         4
      35: iload_1
      36: idiv
      37: istore        5
      39: aload_0
      40: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      45: istore        6
      47: iload_2
      48: ifne          63
      51: aload_0
      52: iconst_0
      53: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      58: bipush        43
      60: if_icmpne     67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: istore        7
      70: aload_0
      71: iload         7
      73: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      78: iload_1
      79: invokestatic  #7                  // Method java/lang/Character.digit:(CI)I
      82: istore        8
      84: iload_3
      85: iload_1
      86: imul
      87: istore        9
      89: iload         8
      91: iflt          110
      94: iload_3
      95: iload         5
      97: if_icmplt     110
     100: iload         9
     102: iload         4
     104: iload         8
     106: iadd
     107: if_icmpge     145
     110: new           #8                  // class java/lang/NumberFormatException
     113: dup
     114: new           #9                  // class java/lang/StringBuilder
     117: dup
     118: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #11                 // String For input characters: \"
     123: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload_0
     127: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     130: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #14                 // String \"
     135: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     144: athrow
     145: iload         9
     147: iload         8
     149: isub
     150: istore_3
     151: iinc          7, 1
     154: iload         7
     156: iload         6
     158: if_icmplt     164
     161: goto          167
     164: goto          70
     167: iload_2
     168: ifeq          175
     171: iload_3
     172: goto          177
     175: iload_3
     176: ineg
     177: ireturn
     178: astore_2
     179: new           #8                  // class java/lang/NumberFormatException
     182: dup
     183: new           #9                  // class java/lang/StringBuilder
     186: dup
     187: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     190: ldc           #11                 // String For input characters: \"
     192: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: aload_0
     196: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     199: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     202: ldc           #14                 // String \"
     204: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     207: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     213: athrow
    Exception table:
       from    to  target type
           0   177   178   Class java/lang/IndexOutOfBoundsException

  public static long parseLong(java.lang.CharSequence);
    Code:
       0: aload_0
       1: bipush        10
       3: invokestatic  #21                 // Method parseLong:(Ljava/lang/CharSequence;I)J
       6: lreturn

  public static long parseLong(java.lang.CharSequence, int);
    Code:
       0: aload_0
       1: iconst_0
       2: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
       7: bipush        45
       9: if_icmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_2
      18: lconst_0
      19: lstore_3
      20: iload_2
      21: ifeq          30
      24: ldc2_w        #22                 // long -9223372036854775808l
      27: goto          33
      30: ldc2_w        #24                 // long -9223372036854775807l
      33: lstore        5
      35: lload         5
      37: iload_1
      38: i2l
      39: ldiv
      40: lstore        7
      42: aload_0
      43: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
      48: istore        9
      50: iload_2
      51: ifne          66
      54: aload_0
      55: iconst_0
      56: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      61: bipush        43
      63: if_icmpne     70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: istore        10
      73: aload_0
      74: iload         10
      76: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      81: iload_1
      82: invokestatic  #7                  // Method java/lang/Character.digit:(CI)I
      85: istore        11
      87: lload_3
      88: iload_1
      89: i2l
      90: lmul
      91: lstore        12
      93: iload         11
      95: iflt          117
      98: lload_3
      99: lload         7
     101: lcmp
     102: iflt          117
     105: lload         12
     107: lload         5
     109: iload         11
     111: i2l
     112: ladd
     113: lcmp
     114: ifge          152
     117: new           #8                  // class java/lang/NumberFormatException
     120: dup
     121: new           #9                  // class java/lang/StringBuilder
     124: dup
     125: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #11                 // String For input characters: \"
     130: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_0
     134: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     137: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #14                 // String \"
     142: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: lload         12
     154: iload         11
     156: i2l
     157: lsub
     158: lstore_3
     159: iinc          10, 1
     162: iload         10
     164: iload         9
     166: if_icmplt     172
     169: goto          175
     172: goto          73
     175: iload_2
     176: ifeq          183
     179: lload_3
     180: goto          185
     183: lload_3
     184: lneg
     185: lreturn
     186: astore_2
     187: new           #8                  // class java/lang/NumberFormatException
     190: dup
     191: new           #9                  // class java/lang/StringBuilder
     194: dup
     195: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #11                 // String For input characters: \"
     200: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_0
     204: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     207: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: ldc           #14                 // String \"
     212: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     218: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     221: athrow
    Exception table:
       from    to  target type
           0   185   186   Class java/lang/IndexOutOfBoundsException

  public static float parseFloat(java.lang.CharSequence);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method parseDouble:(Ljava/lang/CharSequence;)D
       4: dstore_1
       5: dload_1
       6: ldc2_w        #27                 // double 1.401298464324817E-45d
       9: dcmpl
      10: iflt          24
      13: dload_1
      14: ldc2_w        #29                 // double 3.4028234663852886E38d
      17: dcmpg
      18: ifgt          24
      21: dload_1
      22: d2f
      23: freturn
      24: new           #8                  // class java/lang/NumberFormatException
      27: dup
      28: new           #9                  // class java/lang/StringBuilder
      31: dup
      32: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #31                 // String Float overflow for input characters: \"
      37: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_0
      41: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #14                 // String \"
      49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      58: athrow

  public static double parseDouble(java.lang.CharSequence) throws java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod java/lang/CharSequence.length:()I
       6: istore_1
       7: dconst_0
       8: dstore_2
       9: iconst_0
      10: istore        4
      12: aload_0
      13: iconst_0
      14: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      19: bipush        45
      21: if_icmpne     28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore        5
      31: iload         5
      33: ifne          48
      36: aload_0
      37: iconst_0
      38: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      43: bipush        43
      45: if_icmpne     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: istore        6
      55: aload_0
      56: iload         6
      58: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      63: bipush        78
      65: if_icmpeq     81
      68: aload_0
      69: iload         6
      71: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
      76: bipush        73
      78: if_icmpne     132
      81: aload_0
      82: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      85: ldc           #32                 // String NaN
      87: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      90: ifeq          97
      93: ldc2_w        #34                 // double NaNd
      96: dreturn
      97: aload_0
      98: iload         6
     100: iload_1
     101: invokeinterface #36,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
     106: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     109: ldc           #37                 // String Infinity
     111: invokevirtual #33                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     114: ifeq          132
     117: iload         5
     119: ifeq          128
     122: ldc2_w        #38                 // double -Infinityd
     125: goto          131
     128: ldc2_w        #40                 // double Infinityd
     131: dreturn
     132: iconst_0
     133: istore        7
     135: aload_0
     136: iload         6
     138: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     143: istore        8
     145: iload         8
     147: bipush        46
     149: if_icmpne     163
     152: iload         7
     154: ifne          163
     157: iconst_1
     158: istore        7
     160: goto          253
     163: iload         8
     165: bipush        101
     167: if_icmpeq     268
     170: iload         8
     172: bipush        69
     174: if_icmpne     180
     177: goto          268
     180: iload         8
     182: bipush        48
     184: if_icmplt     218
     187: iload         8
     189: bipush        57
     191: if_icmpgt     218
     194: dload_2
     195: ldc2_w        #42                 // double 10.0d
     198: dmul
     199: iload         8
     201: bipush        48
     203: isub
     204: i2d
     205: dadd
     206: dstore_2
     207: iload         7
     209: ifeq          253
     212: iinc          4, -1
     215: goto          253
     218: new           #8                  // class java/lang/NumberFormatException
     221: dup
     222: new           #9                  // class java/lang/StringBuilder
     225: dup
     226: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     229: ldc           #11                 // String For input characters: \"
     231: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     234: aload_0
     235: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     238: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: ldc           #14                 // String \"
     243: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     246: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     252: athrow
     253: iinc          6, 1
     256: iload         6
     258: iload_1
     259: if_icmplt     265
     262: goto          268
     265: goto          135
     268: iload         5
     270: ifeq          278
     273: dload_2
     274: dneg
     275: goto          279
     278: dload_2
     279: dstore_2
     280: iload         6
     282: iload_1
     283: if_icmpge     460
     286: iinc          6, 1
     289: aload_0
     290: iload         6
     292: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     297: bipush        45
     299: if_icmpne     306
     302: iconst_1
     303: goto          307
     306: iconst_0
     307: istore        8
     309: iload         8
     311: ifne          327
     314: aload_0
     315: iload         6
     317: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     322: bipush        43
     324: if_icmpne     334
     327: iload         6
     329: iconst_1
     330: iadd
     331: goto          336
     334: iload         6
     336: istore        6
     338: iconst_0
     339: istore        9
     341: aload_0
     342: iload         6
     344: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C
     349: istore        10
     351: iload         10
     353: bipush        48
     355: if_icmplt     392
     358: iload         10
     360: bipush        57
     362: if_icmpgt     392
     365: iload         9
     367: bipush        10
     369: imul
     370: iload         10
     372: bipush        48
     374: isub
     375: iadd
     376: istore        9
     378: iload         9
     380: ldc           #44                 // int 10000000
     382: if_icmple     427
     385: ldc           #44                 // int 10000000
     387: istore        9
     389: goto          427
     392: new           #8                  // class java/lang/NumberFormatException
     395: dup
     396: new           #9                  // class java/lang/StringBuilder
     399: dup
     400: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     403: ldc           #11                 // String For input characters: \"
     405: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     408: aload_0
     409: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     412: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     415: ldc           #14                 // String \"
     417: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     420: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     423: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     426: athrow
     427: iinc          6, 1
     430: iload         6
     432: iload_1
     433: if_icmplt     439
     436: goto          442
     439: goto          341
     442: iload         4
     444: iload         8
     446: ifeq          455
     449: iload         9
     451: ineg
     452: goto          457
     455: iload         9
     457: iadd
     458: istore        4
     460: dload_2
     461: iload         4
     463: invokestatic  #45                 // Method multE:(DI)D
     466: dreturn
     467: astore_1
     468: new           #8                  // class java/lang/NumberFormatException
     471: dup
     472: new           #9                  // class java/lang/StringBuilder
     475: dup
     476: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     479: ldc           #11                 // String For input characters: \"
     481: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     484: aload_0
     485: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
     488: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     491: ldc           #14                 // String \"
     493: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     496: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     499: invokespecial #16                 // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
     502: athrow
    Exception table:
       from    to  target type
           0    96   467   Class java/lang/IndexOutOfBoundsException
          97   131   467   Class java/lang/IndexOutOfBoundsException
         132   466   467   Class java/lang/IndexOutOfBoundsException

  public static java.lang.StringBuffer format(boolean, java.lang.StringBuffer);
    Code:
       0: iload_0
       1: ifeq          13
       4: aload_1
       5: ldc           #46                 // String true
       7: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      10: goto          19
      13: aload_1
      14: ldc           #48                 // String false
      16: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: areturn

  public static java.lang.StringBuffer format(short, java.lang.StringBuffer);
    Code:
       0: iload_0
       1: aload_1
       2: invokestatic  #49                 // Method format:(ILjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
       5: areturn

  public static java.lang.StringBuffer format(short, int, java.lang.StringBuffer);
    Code:
       0: iload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #50                 // Method format:(IILjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
       6: areturn

  public static java.lang.StringBuffer format(int, java.lang.StringBuffer);
    Code:
       0: iload_0
       1: ifgt          38
       4: iload_0
       5: ldc           #19                 // int -2147483648
       7: if_icmpne     17
      10: aload_1
      11: ldc           #51                 // String -2147483648
      13: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      16: areturn
      17: iload_0
      18: ifne          28
      21: aload_1
      22: bipush        48
      24: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      27: areturn
      28: iload_0
      29: ineg
      30: istore_0
      31: aload_1
      32: bipush        45
      34: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      37: pop
      38: iconst_1
      39: istore_2
      40: iload_2
      41: bipush        10
      43: if_icmpge     61
      46: iload_0
      47: getstatic     #53                 // Field INT_POW_10:[I
      50: iload_2
      51: iaload
      52: if_icmplt     61
      55: iinc          2, 1
      58: goto          40
      61: iinc          2, -1
      64: iload_2
      65: iflt          103
      68: getstatic     #53                 // Field INT_POW_10:[I
      71: iload_2
      72: iaload
      73: istore_3
      74: iload_0
      75: iload_3
      76: idiv
      77: istore        4
      79: iload_0
      80: iload         4
      82: iload_3
      83: imul
      84: isub
      85: istore_0
      86: aload_1
      87: getstatic     #54                 // Field DIGITS:[C
      90: iload         4
      92: caload
      93: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      96: pop
      97: iinc          2, -1
     100: goto          64
     103: aload_1
     104: areturn

  public static java.lang.StringBuffer format(int, int, java.lang.StringBuffer);
    Code:
       0: iload_1
       1: bipush        10
       3: if_icmpne     12
       6: iload_0
       7: aload_2
       8: invokestatic  #49                 // Method format:(ILjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
      11: areturn
      12: iload_1
      13: iconst_2
      14: if_icmplt     23
      17: iload_1
      18: bipush        36
      20: if_icmple     50
      23: new           #55                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #9                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #56                 // String radix:
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: iload_1
      40: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #58                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: iload_0
      51: ifge          64
      54: aload_2
      55: bipush        45
      57: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      60: pop
      61: goto          67
      64: iload_0
      65: ineg
      66: istore_0
      67: iload_0
      68: iload_1
      69: aload_2
      70: invokestatic  #59                 // Method format2:(IILjava/lang/StringBuffer;)V
      73: aload_2
      74: areturn

  private static void format2(int, int, java.lang.StringBuffer);
    Code:
       0: iload_0
       1: iload_1
       2: ineg
       3: if_icmpgt     30
       6: iload_0
       7: iload_1
       8: idiv
       9: iload_1
      10: aload_2
      11: invokestatic  #59                 // Method format2:(IILjava/lang/StringBuffer;)V
      14: aload_2
      15: getstatic     #54                 // Field DIGITS:[C
      18: iload_0
      19: iload_1
      20: irem
      21: ineg
      22: caload
      23: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      26: pop
      27: goto          41
      30: aload_2
      31: getstatic     #54                 // Field DIGITS:[C
      34: iload_0
      35: ineg
      36: caload
      37: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      40: pop
      41: return

  public static java.lang.StringBuffer format(long, java.lang.StringBuffer);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifgt          44
       6: lload_0
       7: ldc2_w        #22                 // long -9223372036854775808l
      10: lcmp
      11: ifne          21
      14: aload_2
      15: ldc           #60                 // String -9223372036854775808
      17: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      20: areturn
      21: lload_0
      22: lconst_0
      23: lcmp
      24: ifne          34
      27: aload_2
      28: bipush        48
      30: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      33: areturn
      34: lload_0
      35: lneg
      36: lstore_0
      37: aload_2
      38: bipush        45
      40: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      43: pop
      44: iconst_1
      45: istore_3
      46: iload_3
      47: bipush        19
      49: if_icmpge     68
      52: lload_0
      53: getstatic     #61                 // Field LONG_POW_10:[J
      56: iload_3
      57: laload
      58: lcmp
      59: iflt          68
      62: iinc          3, 1
      65: goto          46
      68: iinc          3, -1
      71: iload_3
      72: iflt          115
      75: getstatic     #61                 // Field LONG_POW_10:[J
      78: iload_3
      79: laload
      80: lstore        4
      82: lload_0
      83: lload         4
      85: ldiv
      86: l2i
      87: istore        6
      89: lload_0
      90: iload         6
      92: i2l
      93: lload         4
      95: lmul
      96: lsub
      97: lstore_0
      98: aload_2
      99: getstatic     #54                 // Field DIGITS:[C
     102: iload         6
     104: caload
     105: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     108: pop
     109: iinc          3, -1
     112: goto          71
     115: aload_2
     116: areturn

  public static java.lang.StringBuffer format(long, int, java.lang.StringBuffer);
    Code:
       0: iload_2
       1: bipush        10
       3: if_icmpne     12
       6: lload_0
       7: aload_3
       8: invokestatic  #62                 // Method format:(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
      11: areturn
      12: iload_2
      13: iconst_2
      14: if_icmplt     23
      17: iload_2
      18: bipush        36
      20: if_icmple     50
      23: new           #55                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #9                  // class java/lang/StringBuilder
      30: dup
      31: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #56                 // String radix:
      36: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: iload_2
      40: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #58                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: lload_0
      51: lconst_0
      52: lcmp
      53: ifge          66
      56: aload_3
      57: bipush        45
      59: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      62: pop
      63: goto          69
      66: lload_0
      67: lneg
      68: lstore_0
      69: lload_0
      70: iload_2
      71: aload_3
      72: invokestatic  #63                 // Method format2:(JILjava/lang/StringBuffer;)V
      75: aload_3
      76: areturn

  private static void format2(long, int, java.lang.StringBuffer);
    Code:
       0: lload_0
       1: iload_2
       2: ineg
       3: i2l
       4: lcmp
       5: ifgt          35
       8: lload_0
       9: iload_2
      10: i2l
      11: ldiv
      12: iload_2
      13: aload_3
      14: invokestatic  #63                 // Method format2:(JILjava/lang/StringBuffer;)V
      17: aload_3
      18: getstatic     #54                 // Field DIGITS:[C
      21: lload_0
      22: iload_2
      23: i2l
      24: lrem
      25: lneg
      26: l2i
      27: caload
      28: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      31: pop
      32: goto          47
      35: aload_3
      36: getstatic     #54                 // Field DIGITS:[C
      39: lload_0
      40: lneg
      41: l2i
      42: caload
      43: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      46: pop
      47: return

  public static java.lang.StringBuffer format(float, java.lang.StringBuffer);
    Code:
       0: fload_0
       1: fconst_0
       2: aload_1
       3: invokestatic  #64                 // Method format:(FFLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
       6: areturn

  public static java.lang.StringBuffer format(float, float, java.lang.StringBuffer);
    Code:
       0: fload_1
       1: fconst_0
       2: fcmpl
       3: ifle          11
       6: iconst_1
       7: istore_3
       8: goto          59
      11: fload_1
      12: fconst_0
      13: fcmpl
      14: ifne          49
      17: fload_0
      18: fconst_0
      19: fcmpl
      20: ifeq          42
      23: iconst_0
      24: istore_3
      25: fload_0
      26: getstatic     #65                 // Field FLOAT_RELATIVE_ERROR:F
      29: fmul
      30: invokestatic  #66                 // Method java/lang/Math.abs:(F)F
      33: ldc           #67                 // float 1.4E-45f
      35: invokestatic  #68                 // Method java/lang/Math.max:(FF)F
      38: fstore_1
      39: goto          59
      42: aload_2
      43: ldc           #69                 // String 0.0
      45: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: areturn
      49: new           #55                 // class java/lang/IllegalArgumentException
      52: dup
      53: ldc           #70                 // String precision: Negative values not allowed
      55: invokespecial #58                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: fload_0
      60: f2d
      61: fload_1
      62: f2d
      63: iload_3
      64: aload_2
      65: invokestatic  #71                 // Method format:(DDZLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
      68: areturn

  public static java.lang.StringBuffer format(double, java.lang.StringBuffer);
    Code:
       0: dload_0
       1: dconst_0
       2: aload_2
       3: invokestatic  #72                 // Method format:(DDLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
       6: areturn

  public static java.lang.StringBuffer format(double, int, java.lang.StringBuffer);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmplt     33
       5: iload_2
       6: bipush        19
       8: if_icmpgt     33
      11: dload_0
      12: getstatic     #73                 // Field DOUBLE_POW_10:[D
      15: iload_2
      16: iconst_1
      17: isub
      18: daload
      19: ddiv
      20: invokestatic  #74                 // Method java/lang/Math.abs:(D)D
      23: dstore        4
      25: dload_0
      26: dload         4
      28: aload_3
      29: invokestatic  #72                 // Method format:(DDLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
      32: areturn
      33: new           #55                 // class java/lang/IllegalArgumentException
      36: dup
      37: new           #9                  // class java/lang/StringBuilder
      40: dup
      41: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #75                 // String digits:
      46: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_2
      50: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #76                 // String  is not in range [1 .. 19]
      55: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #58                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow

  public static java.lang.StringBuffer format(double, double, java.lang.StringBuffer);
    Code:
       0: iconst_0
       1: istore        5
       3: dload_2
       4: dconst_0
       5: dcmpl
       6: ifle          15
       9: iconst_1
      10: istore        5
      12: goto          69
      15: dload_2
      16: dconst_0
      17: dcmpl
      18: ifne          53
      21: dload_0
      22: dconst_0
      23: dcmpl
      24: ifeq          45
      27: dload_0
      28: getstatic     #77                 // Field DOUBLE_RELATIVE_ERROR:D
      31: dmul
      32: invokestatic  #74                 // Method java/lang/Math.abs:(D)D
      35: ldc2_w        #78                 // double 4.9E-324d
      38: invokestatic  #80                 // Method java/lang/Math.max:(DD)D
      41: dstore_2
      42: goto          69
      45: aload         4
      47: ldc           #69                 // String 0.0
      49: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: areturn
      53: dload_2
      54: dconst_0
      55: dcmpg
      56: ifge          69
      59: new           #55                 // class java/lang/IllegalArgumentException
      62: dup
      63: ldc           #70                 // String precision: Negative values not allowed
      65: invokespecial #58                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: dload_0
      70: dload_2
      71: iload         5
      73: aload         4
      75: invokestatic  #71                 // Method format:(DDZLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
      78: areturn

  private static java.lang.StringBuffer format(double, double, boolean, java.lang.StringBuffer);
    Code:
       0: dload_0
       1: invokestatic  #81                 // Method java/lang/Double.isNaN:(D)Z
       4: ifeq          15
       7: aload         5
       9: ldc           #32                 // String NaN
      11: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      14: areturn
      15: dload_0
      16: invokestatic  #82                 // Method java/lang/Double.isInfinite:(D)Z
      19: ifeq          46
      22: dload_0
      23: dconst_0
      24: dcmpl
      25: iflt          38
      28: aload         5
      30: ldc           #37                 // String Infinity
      32: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      35: goto          45
      38: aload         5
      40: ldc           #83                 // String -Infinity
      42: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      45: areturn
      46: dload_0
      47: dconst_0
      48: dcmpg
      49: ifge          63
      52: dload_0
      53: dneg
      54: dstore_0
      55: aload         5
      57: bipush        45
      59: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      62: pop
      63: dload_2
      64: invokestatic  #84                 // Method java/lang/Math.log:(D)D
      67: getstatic     #85                 // Field LOG_10:D
      70: ddiv
      71: invokestatic  #86                 // Method java/lang/Math.floor:(D)D
      74: d2i
      75: istore        6
      77: dload_0
      78: iload         6
      80: ineg
      81: invokestatic  #45                 // Method multE:(DI)D
      84: dstore        7
      86: dload         7
      88: ldc2_w        #87                 // double 9.223372036854776E18d
      91: dcmpl
      92: iflt          105
      95: new           #55                 // class java/lang/IllegalArgumentException
      98: dup
      99: ldc           #89                 // String Specified precision would result in too many digits
     101: invokespecial #58                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload         5
     107: invokevirtual #90                 // Method java/lang/StringBuffer.length:()I
     110: istore        9
     112: dload         7
     114: invokestatic  #91                 // Method java/lang/Math.round:(D)J
     117: aload         5
     119: invokestatic  #62                 // Method format:(JLjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
     122: pop
     123: aload         5
     125: invokevirtual #90                 // Method java/lang/StringBuffer.length:()I
     128: iload         9
     130: isub
     131: istore        10
     133: iload         10
     135: iload         6
     137: iadd
     138: istore        11
     140: iconst_0
     141: istore        12
     143: iload         11
     145: getstatic     #92                 // Field LEADING_ZEROS:[Ljava/lang/String;
     148: arraylength
     149: ineg
     150: if_icmple     160
     153: iload         11
     155: iload         10
     157: if_icmple     178
     160: aload         5
     162: iload         9
     164: iconst_1
     165: iadd
     166: bipush        46
     168: invokevirtual #93                 // Method java/lang/StringBuffer.insert:(IC)Ljava/lang/StringBuffer;
     171: pop
     172: iconst_1
     173: istore        12
     175: goto          214
     178: iload         11
     180: ifle          199
     183: aload         5
     185: iload         9
     187: iload         11
     189: iadd
     190: bipush        46
     192: invokevirtual #93                 // Method java/lang/StringBuffer.insert:(IC)Ljava/lang/StringBuffer;
     195: pop
     196: goto          214
     199: aload         5
     201: iload         9
     203: getstatic     #92                 // Field LEADING_ZEROS:[Ljava/lang/String;
     206: iload         11
     208: ineg
     209: aaload
     210: invokevirtual #94                 // Method java/lang/StringBuffer.insert:(ILjava/lang/String;)Ljava/lang/StringBuffer;
     213: pop
     214: iload         4
     216: ifne          250
     219: aload         5
     221: invokevirtual #90                 // Method java/lang/StringBuffer.length:()I
     224: istore        13
     226: iinc          13, -1
     229: aload         5
     231: iload         13
     233: invokevirtual #95                 // Method java/lang/StringBuffer.charAt:(I)C
     236: bipush        48
     238: if_icmpeq     226
     241: aload         5
     243: iload         13
     245: iconst_1
     246: iadd
     247: invokevirtual #96                 // Method java/lang/StringBuffer.setLength:(I)V
     250: aload         5
     252: aload         5
     254: invokevirtual #90                 // Method java/lang/StringBuffer.length:()I
     257: iconst_1
     258: isub
     259: invokevirtual #95                 // Method java/lang/StringBuffer.charAt:(I)C
     262: bipush        46
     264: if_icmpne     295
     267: iload         4
     269: ifeq          287
     272: aload         5
     274: aload         5
     276: invokevirtual #90                 // Method java/lang/StringBuffer.length:()I
     279: iconst_1
     280: isub
     281: invokevirtual #96                 // Method java/lang/StringBuffer.setLength:(I)V
     284: goto          295
     287: aload         5
     289: bipush        48
     291: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     294: pop
     295: iload         12
     297: ifeq          318
     300: aload         5
     302: bipush        69
     304: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     307: pop
     308: iload         11
     310: iconst_1
     311: isub
     312: aload         5
     314: invokestatic  #49                 // Method format:(ILjava/lang/StringBuffer;)Ljava/lang/StringBuffer;
     317: pop
     318: aload         5
     320: areturn

  private static final double multE(double, int);
    Code:
       0: iload_2
       1: iflt          44
       4: iload_2
       5: sipush        308
       8: if_icmpgt     19
      11: dload_0
      12: getstatic     #73                 // Field DOUBLE_POW_10:[D
      15: iload_2
      16: daload
      17: dmul
      18: dreturn
      19: dload_0
      20: ldc2_w        #97                 // double 1.0E21d
      23: dmul
      24: dstore_0
      25: sipush        308
      28: iload_2
      29: bipush        21
      31: isub
      32: invokestatic  #5                  // Method java/lang/Math.min:(II)I
      35: istore_2
      36: dload_0
      37: getstatic     #73                 // Field DOUBLE_POW_10:[D
      40: iload_2
      41: daload
      42: dmul
      43: dreturn
      44: iload_2
      45: sipush        -308
      48: if_icmplt     60
      51: dload_0
      52: getstatic     #73                 // Field DOUBLE_POW_10:[D
      55: iload_2
      56: ineg
      57: daload
      58: ddiv
      59: dreturn
      60: dload_0
      61: ldc2_w        #97                 // double 1.0E21d
      64: ddiv
      65: dstore_0
      66: sipush        -308
      69: iload_2
      70: bipush        21
      72: iadd
      73: invokestatic  #3                  // Method java/lang/Math.max:(II)I
      76: istore_2
      77: dload_0
      78: getstatic     #73                 // Field DOUBLE_POW_10:[D
      81: iload_2
      82: ineg
      83: daload
      84: ddiv
      85: dreturn

  static {};
    Code:
       0: bipush        36
       2: newarray       char
       4: dup
       5: iconst_0
       6: bipush        48
       8: castore
       9: dup
      10: iconst_1
      11: bipush        49
      13: castore
      14: dup
      15: iconst_2
      16: bipush        50
      18: castore
      19: dup
      20: iconst_3
      21: bipush        51
      23: castore
      24: dup
      25: iconst_4
      26: bipush        52
      28: castore
      29: dup
      30: iconst_5
      31: bipush        53
      33: castore
      34: dup
      35: bipush        6
      37: bipush        54
      39: castore
      40: dup
      41: bipush        7
      43: bipush        55
      45: castore
      46: dup
      47: bipush        8
      49: bipush        56
      51: castore
      52: dup
      53: bipush        9
      55: bipush        57
      57: castore
      58: dup
      59: bipush        10
      61: bipush        97
      63: castore
      64: dup
      65: bipush        11
      67: bipush        98
      69: castore
      70: dup
      71: bipush        12
      73: bipush        99
      75: castore
      76: dup
      77: bipush        13
      79: bipush        100
      81: castore
      82: dup
      83: bipush        14
      85: bipush        101
      87: castore
      88: dup
      89: bipush        15
      91: bipush        102
      93: castore
      94: dup
      95: bipush        16
      97: bipush        103
      99: castore
     100: dup
     101: bipush        17
     103: bipush        104
     105: castore
     106: dup
     107: bipush        18
     109: bipush        105
     111: castore
     112: dup
     113: bipush        19
     115: bipush        106
     117: castore
     118: dup
     119: bipush        20
     121: bipush        107
     123: castore
     124: dup
     125: bipush        21
     127: bipush        108
     129: castore
     130: dup
     131: bipush        22
     133: bipush        109
     135: castore
     136: dup
     137: bipush        23
     139: bipush        110
     141: castore
     142: dup
     143: bipush        24
     145: bipush        111
     147: castore
     148: dup
     149: bipush        25
     151: bipush        112
     153: castore
     154: dup
     155: bipush        26
     157: bipush        113
     159: castore
     160: dup
     161: bipush        27
     163: bipush        114
     165: castore
     166: dup
     167: bipush        28
     169: bipush        115
     171: castore
     172: dup
     173: bipush        29
     175: bipush        116
     177: castore
     178: dup
     179: bipush        30
     181: bipush        117
     183: castore
     184: dup
     185: bipush        31
     187: bipush        118
     189: castore
     190: dup
     191: bipush        32
     193: bipush        119
     195: castore
     196: dup
     197: bipush        33
     199: bipush        120
     201: castore
     202: dup
     203: bipush        34
     205: bipush        121
     207: castore
     208: dup
     209: bipush        35
     211: bipush        122
     213: castore
     214: putstatic     #54                 // Field DIGITS:[C
     217: bipush        10
     219: newarray       int
     221: putstatic     #53                 // Field INT_POW_10:[I
     224: iconst_1
     225: istore_0
     226: iconst_0
     227: istore_1
     228: iload_1
     229: bipush        10
     231: if_icmpge     251
     234: getstatic     #53                 // Field INT_POW_10:[I
     237: iload_1
     238: iload_0
     239: iastore
     240: iload_0
     241: bipush        10
     243: imul
     244: istore_0
     245: iinc          1, 1
     248: goto          228
     251: bipush        19
     253: newarray       long
     255: putstatic     #61                 // Field LONG_POW_10:[J
     258: lconst_1
     259: lstore_0
     260: iconst_0
     261: istore_2
     262: iload_2
     263: bipush        19
     265: if_icmpge     286
     268: getstatic     #61                 // Field LONG_POW_10:[J
     271: iload_2
     272: lload_0
     273: lastore
     274: lload_0
     275: ldc2_w        #99                 // long 10l
     278: lmul
     279: lstore_0
     280: iinc          2, 1
     283: goto          262
     286: ldc2_w        #42                 // double 10.0d
     289: invokestatic  #84                 // Method java/lang/Math.log:(D)D
     292: putstatic     #85                 // Field LOG_10:D
     295: ldc2_w        #101                // double 2.0d
     298: ldc2_w        #103                // double -24.0d
     301: invokestatic  #105                // Method java/lang/Math.pow:(DD)D
     304: d2f
     305: putstatic     #65                 // Field FLOAT_RELATIVE_ERROR:F
     308: ldc2_w        #101                // double 2.0d
     311: ldc2_w        #106                // double -53.0d
     314: invokestatic  #105                // Method java/lang/Math.pow:(DD)D
     317: putstatic     #77                 // Field DOUBLE_RELATIVE_ERROR:D
     320: iconst_3
     321: anewarray     #108                // class java/lang/String
     324: dup
     325: iconst_0
     326: ldc           #109                // String 0.
     328: aastore
     329: dup
     330: iconst_1
     331: ldc           #69                 // String 0.0
     333: aastore
     334: dup
     335: iconst_2
     336: ldc           #110                // String 0.00
     338: aastore
     339: putstatic     #92                 // Field LEADING_ZEROS:[Ljava/lang/String;
     342: sipush        309
     345: newarray       double
     347: dup
     348: iconst_0
     349: dconst_1
     350: dastore
     351: dup
     352: iconst_1
     353: ldc2_w        #42                 // double 10.0d
     356: dastore
     357: dup
     358: iconst_2
     359: ldc2_w        #111                // double 100.0d
     362: dastore
     363: dup
     364: iconst_3
     365: ldc2_w        #113                // double 1000.0d
     368: dastore
     369: dup
     370: iconst_4
     371: ldc2_w        #115                // double 10000.0d
     374: dastore
     375: dup
     376: iconst_5
     377: ldc2_w        #117                // double 100000.0d
     380: dastore
     381: dup
     382: bipush        6
     384: ldc2_w        #119                // double 1000000.0d
     387: dastore
     388: dup
     389: bipush        7
     391: ldc2_w        #121                // double 1.0E7d
     394: dastore
     395: dup
     396: bipush        8
     398: ldc2_w        #123                // double 1.0E8d
     401: dastore
     402: dup
     403: bipush        9
     405: ldc2_w        #125                // double 1.0E9d
     408: dastore
     409: dup
     410: bipush        10
     412: ldc2_w        #127                // double 1.0E10d
     415: dastore
     416: dup
     417: bipush        11
     419: ldc2_w        #129                // double 1.0E11d
     422: dastore
     423: dup
     424: bipush        12
     426: ldc2_w        #131                // double 1.0E12d
     429: dastore
     430: dup
     431: bipush        13
     433: ldc2_w        #133                // double 1.0E13d
     436: dastore
     437: dup
     438: bipush        14
     440: ldc2_w        #135                // double 1.0E14d
     443: dastore
     444: dup
     445: bipush        15
     447: ldc2_w        #137                // double 1.0E15d
     450: dastore
     451: dup
     452: bipush        16
     454: ldc2_w        #139                // double 1.0E16d
     457: dastore
     458: dup
     459: bipush        17
     461: ldc2_w        #141                // double 1.0E17d
     464: dastore
     465: dup
     466: bipush        18
     468: ldc2_w        #143                // double 1.0E18d
     471: dastore
     472: dup
     473: bipush        19
     475: ldc2_w        #145                // double 1.0E19d
     478: dastore
     479: dup
     480: bipush        20
     482: ldc2_w        #147                // double 1.0E20d
     485: dastore
     486: dup
     487: bipush        21
     489: ldc2_w        #97                 // double 1.0E21d
     492: dastore
     493: dup
     494: bipush        22
     496: ldc2_w        #149                // double 1.0E22d
     499: dastore
     500: dup
     501: bipush        23
     503: ldc2_w        #151                // double 9.999999999999999E22d
     506: dastore
     507: dup
     508: bipush        24
     510: ldc2_w        #153                // double 1.0E24d
     513: dastore
     514: dup
     515: bipush        25
     517: ldc2_w        #155                // double 1.0E25d
     520: dastore
     521: dup
     522: bipush        26
     524: ldc2_w        #157                // double 1.0E26d
     527: dastore
     528: dup
     529: bipush        27
     531: ldc2_w        #159                // double 1.0E27d
     534: dastore
     535: dup
     536: bipush        28
     538: ldc2_w        #161                // double 1.0E28d
     541: dastore
     542: dup
     543: bipush        29
     545: ldc2_w        #163                // double 1.0E29d
     548: dastore
     549: dup
     550: bipush        30
     552: ldc2_w        #165                // double 1.0E30d
     555: dastore
     556: dup
     557: bipush        31
     559: ldc2_w        #167                // double 1.0E31d
     562: dastore
     563: dup
     564: bipush        32
     566: ldc2_w        #169                // double 1.0E32d
     569: dastore
     570: dup
     571: bipush        33
     573: ldc2_w        #171                // double 1.0E33d
     576: dastore
     577: dup
     578: bipush        34
     580: ldc2_w        #173                // double 1.0E34d
     583: dastore
     584: dup
     585: bipush        35
     587: ldc2_w        #175                // double 1.0E35d
     590: dastore
     591: dup
     592: bipush        36
     594: ldc2_w        #177                // double 1.0E36d
     597: dastore
     598: dup
     599: bipush        37
     601: ldc2_w        #179                // double 1.0E37d
     604: dastore
     605: dup
     606: bipush        38
     608: ldc2_w        #181                // double 1.0E38d
     611: dastore
     612: dup
     613: bipush        39
     615: ldc2_w        #183                // double 1.0E39d
     618: dastore
     619: dup
     620: bipush        40
     622: ldc2_w        #185                // double 1.0E40d
     625: dastore
     626: dup
     627: bipush        41
     629: ldc2_w        #187                // double 1.0E41d
     632: dastore
     633: dup
     634: bipush        42
     636: ldc2_w        #189                // double 1.0E42d
     639: dastore
     640: dup
     641: bipush        43
     643: ldc2_w        #191                // double 1.0E43d
     646: dastore
     647: dup
     648: bipush        44
     650: ldc2_w        #193                // double 1.0E44d
     653: dastore
     654: dup
     655: bipush        45
     657: ldc2_w        #195                // double 1.0E45d
     660: dastore
     661: dup
     662: bipush        46
     664: ldc2_w        #197                // double 1.0E46d
     667: dastore
     668: dup
     669: bipush        47
     671: ldc2_w        #199                // double 1.0E47d
     674: dastore
     675: dup
     676: bipush        48
     678: ldc2_w        #201                // double 1.0E48d
     681: dastore
     682: dup
     683: bipush        49
     685: ldc2_w        #203                // double 1.0E49d
     688: dastore
     689: dup
     690: bipush        50
     692: ldc2_w        #205                // double 1.0E50d
     695: dastore
     696: dup
     697: bipush        51
     699: ldc2_w        #207                // double 1.0E51d
     702: dastore
     703: dup
     704: bipush        52
     706: ldc2_w        #209                // double 1.0E52d
     709: dastore
     710: dup
     711: bipush        53
     713: ldc2_w        #211                // double 1.0E53d
     716: dastore
     717: dup
     718: bipush        54
     720: ldc2_w        #213                // double 1.0E54d
     723: dastore
     724: dup
     725: bipush        55
     727: ldc2_w        #215                // double 1.0E55d
     730: dastore
     731: dup
     732: bipush        56
     734: ldc2_w        #217                // double 1.0E56d
     737: dastore
     738: dup
     739: bipush        57
     741: ldc2_w        #219                // double 1.0E57d
     744: dastore
     745: dup
     746: bipush        58
     748: ldc2_w        #221                // double 1.0E58d
     751: dastore
     752: dup
     753: bipush        59
     755: ldc2_w        #223                // double 1.0E59d
     758: dastore
     759: dup
     760: bipush        60
     762: ldc2_w        #225                // double 1.0E60d
     765: dastore
     766: dup
     767: bipush        61
     769: ldc2_w        #227                // double 1.0E61d
     772: dastore
     773: dup
     774: bipush        62
     776: ldc2_w        #229                // double 1.0E62d
     779: dastore
     780: dup
     781: bipush        63
     783: ldc2_w        #231                // double 1.0E63d
     786: dastore
     787: dup
     788: bipush        64
     790: ldc2_w        #233                // double 1.0E64d
     793: dastore
     794: dup
     795: bipush        65
     797: ldc2_w        #235                // double 1.0E65d
     800: dastore
     801: dup
     802: bipush        66
     804: ldc2_w        #237                // double 1.0E66d
     807: dastore
     808: dup
     809: bipush        67
     811: ldc2_w        #239                // double 1.0E67d
     814: dastore
     815: dup
     816: bipush        68
     818: ldc2_w        #241                // double 1.0E68d
     821: dastore
     822: dup
     823: bipush        69
     825: ldc2_w        #243                // double 1.0E69d
     828: dastore
     829: dup
     830: bipush        70
     832: ldc2_w        #245                // double 1.0E70d
     835: dastore
     836: dup
     837: bipush        71
     839: ldc2_w        #247                // double 1.0E71d
     842: dastore
     843: dup
     844: bipush        72
     846: ldc2_w        #249                // double 1.0E72d
     849: dastore
     850: dup
     851: bipush        73
     853: ldc2_w        #251                // double 1.0E73d
     856: dastore
     857: dup
     858: bipush        74
     860: ldc2_w        #253                // double 1.0E74d
     863: dastore
     864: dup
     865: bipush        75
     867: ldc2_w        #255                // double 1.0E75d
     870: dastore
     871: dup
     872: bipush        76
     874: ldc2_w        #257                // double 1.0E76d
     877: dastore
     878: dup
     879: bipush        77
     881: ldc2_w        #259                // double 1.0E77d
     884: dastore
     885: dup
     886: bipush        78
     888: ldc2_w        #261                // double 1.0E78d
     891: dastore
     892: dup
     893: bipush        79
     895: ldc2_w        #263                // double 1.0E79d
     898: dastore
     899: dup
     900: bipush        80
     902: ldc2_w        #265                // double 1.0E80d
     905: dastore
     906: dup
     907: bipush        81
     909: ldc2_w        #267                // double 1.0E81d
     912: dastore
     913: dup
     914: bipush        82
     916: ldc2_w        #269                // double 1.0E82d
     919: dastore
     920: dup
     921: bipush        83
     923: ldc2_w        #271                // double 1.0E83d
     926: dastore
     927: dup
     928: bipush        84
     930: ldc2_w        #273                // double 1.0E84d
     933: dastore
     934: dup
     935: bipush        85
     937: ldc2_w        #275                // double 1.0E85d
     940: dastore
     941: dup
     942: bipush        86
     944: ldc2_w        #277                // double 1.0E86d
     947: dastore
     948: dup
     949: bipush        87
     951: ldc2_w        #279                // double 1.0E87d
     954: dastore
     955: dup
     956: bipush        88
     958: ldc2_w        #281                // double 1.0E88d
     961: dastore
     962: dup
     963: bipush        89
     965: ldc2_w        #283                // double 1.0E89d
     968: dastore
     969: dup
     970: bipush        90
     972: ldc2_w        #285                // double 1.0E90d
     975: dastore
     976: dup
     977: bipush        91
     979: ldc2_w        #287                // double 1.0E91d
     982: dastore
     983: dup
     984: bipush        92
     986: ldc2_w        #289                // double 1.0E92d
     989: dastore
     990: dup
     991: bipush        93
     993: ldc2_w        #291                // double 1.0E93d
     996: dastore
     997: dup
     998: bipush        94
    1000: ldc2_w        #293                // double 1.0E94d
    1003: dastore
    1004: dup
    1005: bipush        95
    1007: ldc2_w        #295                // double 1.0E95d
    1010: dastore
    1011: dup
    1012: bipush        96
    1014: ldc2_w        #297                // double 1.0E96d
    1017: dastore
    1018: dup
    1019: bipush        97
    1021: ldc2_w        #299                // double 1.0E97d
    1024: dastore
    1025: dup
    1026: bipush        98
    1028: ldc2_w        #301                // double 1.0E98d
    1031: dastore
    1032: dup
    1033: bipush        99
    1035: ldc2_w        #303                // double 1.0E99d
    1038: dastore
    1039: dup
    1040: bipush        100
    1042: ldc2_w        #305                // double 1.0E100d
    1045: dastore
    1046: dup
    1047: bipush        101
    1049: ldc2_w        #307                // double 1.0E101d
    1052: dastore
    1053: dup
    1054: bipush        102
    1056: ldc2_w        #309                // double 1.0E102d
    1059: dastore
    1060: dup
    1061: bipush        103
    1063: ldc2_w        #311                // double 1.0E103d
    1066: dastore
    1067: dup
    1068: bipush        104
    1070: ldc2_w        #313                // double 1.0E104d
    1073: dastore
    1074: dup
    1075: bipush        105
    1077: ldc2_w        #315                // double 1.0E105d
    1080: dastore
    1081: dup
    1082: bipush        106
    1084: ldc2_w        #317                // double 1.0E106d
    1087: dastore
    1088: dup
    1089: bipush        107
    1091: ldc2_w        #319                // double 1.0E107d
    1094: dastore
    1095: dup
    1096: bipush        108
    1098: ldc2_w        #321                // double 1.0E108d
    1101: dastore
    1102: dup
    1103: bipush        109
    1105: ldc2_w        #323                // double 1.0E109d
    1108: dastore
    1109: dup
    1110: bipush        110
    1112: ldc2_w        #325                // double 1.0E110d
    1115: dastore
    1116: dup
    1117: bipush        111
    1119: ldc2_w        #327                // double 1.0E111d
    1122: dastore
    1123: dup
    1124: bipush        112
    1126: ldc2_w        #329                // double 1.0E112d
    1129: dastore
    1130: dup
    1131: bipush        113
    1133: ldc2_w        #331                // double 1.0E113d
    1136: dastore
    1137: dup
    1138: bipush        114
    1140: ldc2_w        #333                // double 1.0E114d
    1143: dastore
    1144: dup
    1145: bipush        115
    1147: ldc2_w        #335                // double 1.0E115d
    1150: dastore
    1151: dup
    1152: bipush        116
    1154: ldc2_w        #337                // double 1.0E116d
    1157: dastore
    1158: dup
    1159: bipush        117
    1161: ldc2_w        #339                // double 1.0E117d
    1164: dastore
    1165: dup
    1166: bipush        118
    1168: ldc2_w        #341                // double 1.0E118d
    1171: dastore
    1172: dup
    1173: bipush        119
    1175: ldc2_w        #343                // double 1.0E119d
    1178: dastore
    1179: dup
    1180: bipush        120
    1182: ldc2_w        #345                // double 1.0E120d
    1185: dastore
    1186: dup
    1187: bipush        121
    1189: ldc2_w        #347                // double 1.0E121d
    1192: dastore
    1193: dup
    1194: bipush        122
    1196: ldc2_w        #349                // double 1.0E122d
    1199: dastore
    1200: dup
    1201: bipush        123
    1203: ldc2_w        #351                // double 1.0E123d
    1206: dastore
    1207: dup
    1208: bipush        124
    1210: ldc2_w        #353                // double 1.0E124d
    1213: dastore
    1214: dup
    1215: bipush        125
    1217: ldc2_w        #355                // double 1.0E125d
    1220: dastore
    1221: dup
    1222: bipush        126
    1224: ldc2_w        #357                // double 1.0E126d
    1227: dastore
    1228: dup
    1229: bipush        127
    1231: ldc2_w        #359                // double 1.0E127d
    1234: dastore
    1235: dup
    1236: sipush        128
    1239: ldc2_w        #361                // double 1.0E128d
    1242: dastore
    1243: dup
    1244: sipush        129
    1247: ldc2_w        #363                // double 1.0E129d
    1250: dastore
    1251: dup
    1252: sipush        130
    1255: ldc2_w        #365                // double 1.0E130d
    1258: dastore
    1259: dup
    1260: sipush        131
    1263: ldc2_w        #367                // double 1.0E131d
    1266: dastore
    1267: dup
    1268: sipush        132
    1271: ldc2_w        #369                // double 1.0E132d
    1274: dastore
    1275: dup
    1276: sipush        133
    1279: ldc2_w        #371                // double 1.0E133d
    1282: dastore
    1283: dup
    1284: sipush        134
    1287: ldc2_w        #373                // double 1.0E134d
    1290: dastore
    1291: dup
    1292: sipush        135
    1295: ldc2_w        #375                // double 1.0E135d
    1298: dastore
    1299: dup
    1300: sipush        136
    1303: ldc2_w        #377                // double 1.0E136d
    1306: dastore
    1307: dup
    1308: sipush        137
    1311: ldc2_w        #379                // double 1.0E137d
    1314: dastore
    1315: dup
    1316: sipush        138
    1319: ldc2_w        #381                // double 1.0E138d
    1322: dastore
    1323: dup
    1324: sipush        139
    1327: ldc2_w        #383                // double 1.0E139d
    1330: dastore
    1331: dup
    1332: sipush        140
    1335: ldc2_w        #385                // double 1.0E140d
    1338: dastore
    1339: dup
    1340: sipush        141
    1343: ldc2_w        #387                // double 1.0E141d
    1346: dastore
    1347: dup
    1348: sipush        142
    1351: ldc2_w        #389                // double 1.0E142d
    1354: dastore
    1355: dup
    1356: sipush        143
    1359: ldc2_w        #391                // double 1.0E143d
    1362: dastore
    1363: dup
    1364: sipush        144
    1367: ldc2_w        #393                // double 1.0E144d
    1370: dastore
    1371: dup
    1372: sipush        145
    1375: ldc2_w        #395                // double 1.0E145d
    1378: dastore
    1379: dup
    1380: sipush        146
    1383: ldc2_w        #397                // double 1.0E146d
    1386: dastore
    1387: dup
    1388: sipush        147
    1391: ldc2_w        #399                // double 1.0E147d
    1394: dastore
    1395: dup
    1396: sipush        148
    1399: ldc2_w        #401                // double 1.0E148d
    1402: dastore
    1403: dup
    1404: sipush        149
    1407: ldc2_w        #403                // double 1.0E149d
    1410: dastore
    1411: dup
    1412: sipush        150
    1415: ldc2_w        #405                // double 1.0E150d
    1418: dastore
    1419: dup
    1420: sipush        151
    1423: ldc2_w        #407                // double 1.0E151d
    1426: dastore
    1427: dup
    1428: sipush        152
    1431: ldc2_w        #409                // double 1.0E152d
    1434: dastore
    1435: dup
    1436: sipush        153
    1439: ldc2_w        #411                // double 1.0E153d
    1442: dastore
    1443: dup
    1444: sipush        154
    1447: ldc2_w        #413                // double 1.0E154d
    1450: dastore
    1451: dup
    1452: sipush        155
    1455: ldc2_w        #415                // double 1.0E155d
    1458: dastore
    1459: dup
    1460: sipush        156
    1463: ldc2_w        #417                // double 1.0E156d
    1466: dastore
    1467: dup
    1468: sipush        157
    1471: ldc2_w        #419                // double 1.0E157d
    1474: dastore
    1475: dup
    1476: sipush        158
    1479: ldc2_w        #421                // double 1.0E158d
    1482: dastore
    1483: dup
    1484: sipush        159
    1487: ldc2_w        #423                // double 1.0E159d
    1490: dastore
    1491: dup
    1492: sipush        160
    1495: ldc2_w        #425                // double 1.0E160d
    1498: dastore
    1499: dup
    1500: sipush        161
    1503: ldc2_w        #427                // double 1.0E161d
    1506: dastore
    1507: dup
    1508: sipush        162
    1511: ldc2_w        #429                // double 1.0E162d
    1514: dastore
    1515: dup
    1516: sipush        163
    1519: ldc2_w        #431                // double 1.0E163d
    1522: dastore
    1523: dup
    1524: sipush        164
    1527: ldc2_w        #433                // double 1.0E164d
    1530: dastore
    1531: dup
    1532: sipush        165
    1535: ldc2_w        #435                // double 1.0E165d
    1538: dastore
    1539: dup
    1540: sipush        166
    1543: ldc2_w        #437                // double 1.0E166d
    1546: dastore
    1547: dup
    1548: sipush        167
    1551: ldc2_w        #439                // double 1.0E167d
    1554: dastore
    1555: dup
    1556: sipush        168
    1559: ldc2_w        #441                // double 1.0E168d
    1562: dastore
    1563: dup
    1564: sipush        169
    1567: ldc2_w        #443                // double 1.0E169d
    1570: dastore
    1571: dup
    1572: sipush        170
    1575: ldc2_w        #445                // double 1.0E170d
    1578: dastore
    1579: dup
    1580: sipush        171
    1583: ldc2_w        #447                // double 1.0E171d
    1586: dastore
    1587: dup
    1588: sipush        172
    1591: ldc2_w        #449                // double 1.0E172d
    1594: dastore
    1595: dup
    1596: sipush        173
    1599: ldc2_w        #451                // double 1.0E173d
    1602: dastore
    1603: dup
    1604: sipush        174
    1607: ldc2_w        #453                // double 1.0E174d
    1610: dastore
    1611: dup
    1612: sipush        175
    1615: ldc2_w        #455                // double 1.0E175d
    1618: dastore
    1619: dup
    1620: sipush        176
    1623: ldc2_w        #457                // double 1.0E176d
    1626: dastore
    1627: dup
    1628: sipush        177
    1631: ldc2_w        #459                // double 1.0E177d
    1634: dastore
    1635: dup
    1636: sipush        178
    1639: ldc2_w        #461                // double 1.0E178d
    1642: dastore
    1643: dup
    1644: sipush        179
    1647: ldc2_w        #463                // double 1.0E179d
    1650: dastore
    1651: dup
    1652: sipush        180
    1655: ldc2_w        #465                // double 1.0E180d
    1658: dastore
    1659: dup
    1660: sipush        181
    1663: ldc2_w        #467                // double 1.0E181d
    1666: dastore
    1667: dup
    1668: sipush        182
    1671: ldc2_w        #469                // double 1.0E182d
    1674: dastore
    1675: dup
    1676: sipush        183
    1679: ldc2_w        #471                // double 1.0E183d
    1682: dastore
    1683: dup
    1684: sipush        184
    1687: ldc2_w        #473                // double 1.0E184d
    1690: dastore
    1691: dup
    1692: sipush        185
    1695: ldc2_w        #475                // double 1.0E185d
    1698: dastore
    1699: dup
    1700: sipush        186
    1703: ldc2_w        #477                // double 1.0E186d
    1706: dastore
    1707: dup
    1708: sipush        187
    1711: ldc2_w        #479                // double 1.0E187d
    1714: dastore
    1715: dup
    1716: sipush        188
    1719: ldc2_w        #481                // double 1.0E188d
    1722: dastore
    1723: dup
    1724: sipush        189
    1727: ldc2_w        #483                // double 1.0E189d
    1730: dastore
    1731: dup
    1732: sipush        190
    1735: ldc2_w        #485                // double 1.0E190d
    1738: dastore
    1739: dup
    1740: sipush        191
    1743: ldc2_w        #487                // double 1.0E191d
    1746: dastore
    1747: dup
    1748: sipush        192
    1751: ldc2_w        #489                // double 1.0E192d
    1754: dastore
    1755: dup
    1756: sipush        193
    1759: ldc2_w        #491                // double 1.0E193d
    1762: dastore
    1763: dup
    1764: sipush        194
    1767: ldc2_w        #493                // double 1.0E194d
    1770: dastore
    1771: dup
    1772: sipush        195
    1775: ldc2_w        #495                // double 1.0E195d
    1778: dastore
    1779: dup
    1780: sipush        196
    1783: ldc2_w        #497                // double 1.0E196d
    1786: dastore
    1787: dup
    1788: sipush        197
    1791: ldc2_w        #499                // double 1.0E197d
    1794: dastore
    1795: dup
    1796: sipush        198
    1799: ldc2_w        #501                // double 1.0E198d
    1802: dastore
    1803: dup
    1804: sipush        199
    1807: ldc2_w        #503                // double 1.0E199d
    1810: dastore
    1811: dup
    1812: sipush        200
    1815: ldc2_w        #505                // double 1.0E200d
    1818: dastore
    1819: dup
    1820: sipush        201
    1823: ldc2_w        #507                // double 1.0E201d
    1826: dastore
    1827: dup
    1828: sipush        202
    1831: ldc2_w        #509                // double 1.0E202d
    1834: dastore
    1835: dup
    1836: sipush        203
    1839: ldc2_w        #511                // double 1.0E203d
    1842: dastore
    1843: dup
    1844: sipush        204
    1847: ldc2_w        #513                // double 1.0E204d
    1850: dastore
    1851: dup
    1852: sipush        205
    1855: ldc2_w        #515                // double 1.0E205d
    1858: dastore
    1859: dup
    1860: sipush        206
    1863: ldc2_w        #517                // double 1.0E206d
    1866: dastore
    1867: dup
    1868: sipush        207
    1871: ldc2_w        #519                // double 1.0E207d
    1874: dastore
    1875: dup
    1876: sipush        208
    1879: ldc2_w        #521                // double 1.0E208d
    1882: dastore
    1883: dup
    1884: sipush        209
    1887: ldc2_w        #523                // double 1.0E209d
    1890: dastore
    1891: dup
    1892: sipush        210
    1895: ldc2_w        #525                // double 1.0E210d
    1898: dastore
    1899: dup
    1900: sipush        211
    1903: ldc2_w        #527                // double 1.0E211d
    1906: dastore
    1907: dup
    1908: sipush        212
    1911: ldc2_w        #529                // double 1.0E212d
    1914: dastore
    1915: dup
    1916: sipush        213
    1919: ldc2_w        #531                // double 1.0E213d
    1922: dastore
    1923: dup
    1924: sipush        214
    1927: ldc2_w        #533                // double 1.0E214d
    1930: dastore
    1931: dup
    1932: sipush        215
    1935: ldc2_w        #535                // double 1.0E215d
    1938: dastore
    1939: dup
    1940: sipush        216
    1943: ldc2_w        #537                // double 1.0E216d
    1946: dastore
    1947: dup
    1948: sipush        217
    1951: ldc2_w        #539                // double 1.0E217d
    1954: dastore
    1955: dup
    1956: sipush        218
    1959: ldc2_w        #541                // double 1.0E218d
    1962: dastore
    1963: dup
    1964: sipush        219
    1967: ldc2_w        #543                // double 1.0E219d
    1970: dastore
    1971: dup
    1972: sipush        220
    1975: ldc2_w        #545                // double 1.0E220d
    1978: dastore
    1979: dup
    1980: sipush        221
    1983: ldc2_w        #547                // double 1.0E221d
    1986: dastore
    1987: dup
    1988: sipush        222
    1991: ldc2_w        #549                // double 1.0E222d
    1994: dastore
    1995: dup
    1996: sipush        223
    1999: ldc2_w        #551                // double 1.0E223d
    2002: dastore
    2003: dup
    2004: sipush        224
    2007: ldc2_w        #553                // double 1.0E224d
    2010: dastore
    2011: dup
    2012: sipush        225
    2015: ldc2_w        #555                // double 1.0E225d
    2018: dastore
    2019: dup
    2020: sipush        226
    2023: ldc2_w        #557                // double 1.0E226d
    2026: dastore
    2027: dup
    2028: sipush        227
    2031: ldc2_w        #559                // double 1.0E227d
    2034: dastore
    2035: dup
    2036: sipush        228
    2039: ldc2_w        #561                // double 1.0E228d
    2042: dastore
    2043: dup
    2044: sipush        229
    2047: ldc2_w        #563                // double 1.0E229d
    2050: dastore
    2051: dup
    2052: sipush        230
    2055: ldc2_w        #565                // double 1.0E230d
    2058: dastore
    2059: dup
    2060: sipush        231
    2063: ldc2_w        #567                // double 1.0E231d
    2066: dastore
    2067: dup
    2068: sipush        232
    2071: ldc2_w        #569                // double 1.0E232d
    2074: dastore
    2075: dup
    2076: sipush        233
    2079: ldc2_w        #571                // double 1.0E233d
    2082: dastore
    2083: dup
    2084: sipush        234
    2087: ldc2_w        #573                // double 1.0E234d
    2090: dastore
    2091: dup
    2092: sipush        235
    2095: ldc2_w        #575                // double 1.0E235d
    2098: dastore
    2099: dup
    2100: sipush        236
    2103: ldc2_w        #577                // double 1.0E236d
    2106: dastore
    2107: dup
    2108: sipush        237
    2111: ldc2_w        #579                // double 1.0E237d
    2114: dastore
    2115: dup
    2116: sipush        238
    2119: ldc2_w        #581                // double 1.0E238d
    2122: dastore
    2123: dup
    2124: sipush        239
    2127: ldc2_w        #583                // double 1.0E239d
    2130: dastore
    2131: dup
    2132: sipush        240
    2135: ldc2_w        #585                // double 1.0E240d
    2138: dastore
    2139: dup
    2140: sipush        241
    2143: ldc2_w        #587                // double 1.0E241d
    2146: dastore
    2147: dup
    2148: sipush        242
    2151: ldc2_w        #589                // double 1.0E242d
    2154: dastore
    2155: dup
    2156: sipush        243
    2159: ldc2_w        #591                // double 1.0E243d
    2162: dastore
    2163: dup
    2164: sipush        244
    2167: ldc2_w        #593                // double 1.0E244d
    2170: dastore
    2171: dup
    2172: sipush        245
    2175: ldc2_w        #595                // double 1.0E245d
    2178: dastore
    2179: dup
    2180: sipush        246
    2183: ldc2_w        #597                // double 1.0E246d
    2186: dastore
    2187: dup
    2188: sipush        247
    2191: ldc2_w        #599                // double 1.0E247d
    2194: dastore
    2195: dup
    2196: sipush        248
    2199: ldc2_w        #601                // double 1.0E248d
    2202: dastore
    2203: dup
    2204: sipush        249
    2207: ldc2_w        #603                // double 1.0E249d
    2210: dastore
    2211: dup
    2212: sipush        250
    2215: ldc2_w        #605                // double 1.0E250d
    2218: dastore
    2219: dup
    2220: sipush        251
    2223: ldc2_w        #607                // double 1.0E251d
    2226: dastore
    2227: dup
    2228: sipush        252
    2231: ldc2_w        #609                // double 1.0E252d
    2234: dastore
    2235: dup
    2236: sipush        253
    2239: ldc2_w        #611                // double 1.0E253d
    2242: dastore
    2243: dup
    2244: sipush        254
    2247: ldc2_w        #613                // double 1.0E254d
    2250: dastore
    2251: dup
    2252: sipush        255
    2255: ldc2_w        #615                // double 1.0E255d
    2258: dastore
    2259: dup
    2260: sipush        256
    2263: ldc2_w        #617                // double 1.0E256d
    2266: dastore
    2267: dup
    2268: sipush        257
    2271: ldc2_w        #619                // double 1.0E257d
    2274: dastore
    2275: dup
    2276: sipush        258
    2279: ldc2_w        #621                // double 1.0E258d
    2282: dastore
    2283: dup
    2284: sipush        259
    2287: ldc2_w        #623                // double 1.0E259d
    2290: dastore
    2291: dup
    2292: sipush        260
    2295: ldc2_w        #625                // double 1.0E260d
    2298: dastore
    2299: dup
    2300: sipush        261
    2303: ldc2_w        #627                // double 1.0E261d
    2306: dastore
    2307: dup
    2308: sipush        262
    2311: ldc2_w        #629                // double 1.0E262d
    2314: dastore
    2315: dup
    2316: sipush        263
    2319: ldc2_w        #631                // double 1.0E263d
    2322: dastore
    2323: dup
    2324: sipush        264
    2327: ldc2_w        #633                // double 1.0E264d
    2330: dastore
    2331: dup
    2332: sipush        265
    2335: ldc2_w        #635                // double 1.0E265d
    2338: dastore
    2339: dup
    2340: sipush        266
    2343: ldc2_w        #637                // double 1.0E266d
    2346: dastore
    2347: dup
    2348: sipush        267
    2351: ldc2_w        #639                // double 1.0E267d
    2354: dastore
    2355: dup
    2356: sipush        268
    2359: ldc2_w        #641                // double 1.0E268d
    2362: dastore
    2363: dup
    2364: sipush        269
    2367: ldc2_w        #643                // double 1.0E269d
    2370: dastore
    2371: dup
    2372: sipush        270
    2375: ldc2_w        #645                // double 1.0E270d
    2378: dastore
    2379: dup
    2380: sipush        271
    2383: ldc2_w        #647                // double 1.0E271d
    2386: dastore
    2387: dup
    2388: sipush        272
    2391: ldc2_w        #649                // double 1.0E272d
    2394: dastore
    2395: dup
    2396: sipush        273
    2399: ldc2_w        #651                // double 1.0E273d
    2402: dastore
    2403: dup
    2404: sipush        274
    2407: ldc2_w        #653                // double 1.0E274d
    2410: dastore
    2411: dup
    2412: sipush        275
    2415: ldc2_w        #655                // double 1.0E275d
    2418: dastore
    2419: dup
    2420: sipush        276
    2423: ldc2_w        #657                // double 1.0E276d
    2426: dastore
    2427: dup
    2428: sipush        277
    2431: ldc2_w        #659                // double 1.0E277d
    2434: dastore
    2435: dup
    2436: sipush        278
    2439: ldc2_w        #661                // double 1.0E278d
    2442: dastore
    2443: dup
    2444: sipush        279
    2447: ldc2_w        #663                // double 1.0E279d
    2450: dastore
    2451: dup
    2452: sipush        280
    2455: ldc2_w        #665                // double 1.0E280d
    2458: dastore
    2459: dup
    2460: sipush        281
    2463: ldc2_w        #667                // double 1.0E281d
    2466: dastore
    2467: dup
    2468: sipush        282
    2471: ldc2_w        #669                // double 1.0E282d
    2474: dastore
    2475: dup
    2476: sipush        283
    2479: ldc2_w        #671                // double 1.0E283d
    2482: dastore
    2483: dup
    2484: sipush        284
    2487: ldc2_w        #673                // double 1.0E284d
    2490: dastore
    2491: dup
    2492: sipush        285
    2495: ldc2_w        #675                // double 1.0E285d
    2498: dastore
    2499: dup
    2500: sipush        286
    2503: ldc2_w        #677                // double 1.0E286d
    2506: dastore
    2507: dup
    2508: sipush        287
    2511: ldc2_w        #679                // double 1.0E287d
    2514: dastore
    2515: dup
    2516: sipush        288
    2519: ldc2_w        #681                // double 1.0E288d
    2522: dastore
    2523: dup
    2524: sipush        289
    2527: ldc2_w        #683                // double 1.0E289d
    2530: dastore
    2531: dup
    2532: sipush        290
    2535: ldc2_w        #685                // double 1.0E290d
    2538: dastore
    2539: dup
    2540: sipush        291
    2543: ldc2_w        #687                // double 1.0E291d
    2546: dastore
    2547: dup
    2548: sipush        292
    2551: ldc2_w        #689                // double 1.0E292d
    2554: dastore
    2555: dup
    2556: sipush        293
    2559: ldc2_w        #691                // double 1.0E293d
    2562: dastore
    2563: dup
    2564: sipush        294
    2567: ldc2_w        #693                // double 1.0E294d
    2570: dastore
    2571: dup
    2572: sipush        295
    2575: ldc2_w        #695                // double 1.0E295d
    2578: dastore
    2579: dup
    2580: sipush        296
    2583: ldc2_w        #697                // double 1.0E296d
    2586: dastore
    2587: dup
    2588: sipush        297
    2591: ldc2_w        #699                // double 1.0E297d
    2594: dastore
    2595: dup
    2596: sipush        298
    2599: ldc2_w        #701                // double 1.0E298d
    2602: dastore
    2603: dup
    2604: sipush        299
    2607: ldc2_w        #703                // double 1.0E299d
    2610: dastore
    2611: dup
    2612: sipush        300
    2615: ldc2_w        #705                // double 1.0E300d
    2618: dastore
    2619: dup
    2620: sipush        301
    2623: ldc2_w        #707                // double 1.0E301d
    2626: dastore
    2627: dup
    2628: sipush        302
    2631: ldc2_w        #709                // double 1.0E302d
    2634: dastore
    2635: dup
    2636: sipush        303
    2639: ldc2_w        #711                // double 1.0E303d
    2642: dastore
    2643: dup
    2644: sipush        304
    2647: ldc2_w        #713                // double 1.0E304d
    2650: dastore
    2651: dup
    2652: sipush        305
    2655: ldc2_w        #715                // double 1.0E305d
    2658: dastore
    2659: dup
    2660: sipush        306
    2663: ldc2_w        #717                // double 1.0E306d
    2666: dastore
    2667: dup
    2668: sipush        307
    2671: ldc2_w        #719                // double 1.0E307d
    2674: dastore
    2675: dup
    2676: sipush        308
    2679: ldc2_w        #721                // double 1.0E308d
    2682: dastore
    2683: putstatic     #73                 // Field DOUBLE_POW_10:[D
    2686: return
}
