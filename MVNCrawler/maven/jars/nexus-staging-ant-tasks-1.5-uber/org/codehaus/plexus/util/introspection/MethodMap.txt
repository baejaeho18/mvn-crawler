Compiled from "MethodMap.java"
public class org.codehaus.plexus.util.introspection.MethodMap {
  private static final int MORE_SPECIFIC;

  private static final int LESS_SPECIFIC;

  private static final int INCOMPARABLE;

  java.util.Map<java.lang.String, java.util.List<java.lang.reflect.Method>> methodByNameMap;

  public org.codehaus.plexus.util.introspection.MethodMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/Hashtable
       8: dup
       9: invokespecial #3                  // Method java/util/Hashtable."<init>":()V
      12: putfield      #4                  // Field methodByNameMap:Ljava/util/Map;
      15: return

  public void add(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #6                  // Method get:(Ljava/lang/String;)Ljava/util/List;
      10: astore_3
      11: aload_3
      12: ifnonnull     35
      15: new           #7                  // class java/util/ArrayList
      18: dup
      19: invokespecial #8                  // Method java/util/ArrayList."<init>":()V
      22: astore_3
      23: aload_0
      24: getfield      #4                  // Field methodByNameMap:Ljava/util/Map;
      27: aload_2
      28: aload_3
      29: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_3
      36: aload_1
      37: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      42: pop
      43: return

  public java.util.List<java.lang.reflect.Method> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field methodByNameMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #12                 // class java/util/List
      13: areturn

  public java.lang.reflect.Method find(java.lang.String, java.lang.Object[]) throws org.codehaus.plexus.util.introspection.MethodMap$AmbiguousException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method get:(Ljava/lang/String;)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: arraylength
      14: istore        4
      16: iload         4
      18: anewarray     #13                 // class java/lang/Class
      21: astore        5
      23: iconst_0
      24: istore        6
      26: iload         6
      28: iload         4
      30: if_icmpge     64
      33: aload_2
      34: iload         6
      36: aaload
      37: astore        7
      39: aload         5
      41: iload         6
      43: aload         7
      45: ifnonnull     52
      48: aconst_null
      49: goto          57
      52: aload         7
      54: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      57: aastore
      58: iinc          6, 1
      61: goto          26
      64: aload_3
      65: aload         5
      67: invokestatic  #15                 // Method getMostSpecific:(Ljava/util/List;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      70: areturn

  private static java.lang.reflect.Method getMostSpecific(java.util.List, java.lang.Class[]) throws org.codehaus.plexus.util.introspection.MethodMap$AmbiguousException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method getApplicables:(Ljava/util/List;[Ljava/lang/Class;)Ljava/util/LinkedList;
       5: astore_2
       6: aload_2
       7: invokevirtual #17                 // Method java/util/LinkedList.isEmpty:()Z
      10: ifeq          15
      13: aconst_null
      14: areturn
      15: aload_2
      16: invokevirtual #18                 // Method java/util/LinkedList.size:()I
      19: iconst_1
      20: if_icmpne     31
      23: aload_2
      24: invokevirtual #19                 // Method java/util/LinkedList.getFirst:()Ljava/lang/Object;
      27: checkcast     #20                 // class java/lang/reflect/Method
      30: areturn
      31: new           #21                 // class java/util/LinkedList
      34: dup
      35: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
      38: astore_3
      39: aload_2
      40: invokevirtual #23                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      43: astore        4
      45: aload         4
      47: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      52: ifeq          178
      55: aload         4
      57: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #20                 // class java/lang/reflect/Method
      65: astore        5
      67: aload         5
      69: invokevirtual #26                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      72: astore        6
      74: iconst_0
      75: istore        7
      77: aload_3
      78: invokevirtual #27                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      81: astore        8
      83: iload         7
      85: ifne          164
      88: aload         8
      90: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          164
      98: aload         8
     100: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #20                 // class java/lang/reflect/Method
     108: astore        9
     110: aload         6
     112: aload         9
     114: invokevirtual #26                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
     117: invokestatic  #28                 // Method moreSpecific:([Ljava/lang/Class;[Ljava/lang/Class;)I
     120: lookupswitch  { // 2
                     0: 148
                     1: 158
               default: 161
          }
     148: aload         8
     150: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.remove:()V
     155: goto          161
     158: iconst_1
     159: istore        7
     161: goto          83
     164: iload         7
     166: ifne          175
     169: aload_3
     170: aload         5
     172: invokevirtual #30                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
     175: goto          45
     178: aload_3
     179: invokevirtual #18                 // Method java/util/LinkedList.size:()I
     182: iconst_1
     183: if_icmple     194
     186: new           #31                 // class org/codehaus/plexus/util/introspection/MethodMap$AmbiguousException
     189: dup
     190: invokespecial #32                 // Method org/codehaus/plexus/util/introspection/MethodMap$AmbiguousException."<init>":()V
     193: athrow
     194: aload_3
     195: invokevirtual #19                 // Method java/util/LinkedList.getFirst:()Ljava/lang/Object;
     198: checkcast     #20                 // class java/lang/reflect/Method
     201: areturn

  private static int moreSpecific(java.lang.Class[], java.lang.Class[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_0
       3: istore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: aload_0
      10: arraylength
      11: if_icmpge     79
      14: aload_0
      15: iload         4
      17: aaload
      18: aload_1
      19: iload         4
      21: aaload
      22: if_acmpeq     73
      25: iload_2
      26: ifne          43
      29: aload_1
      30: iload         4
      32: aaload
      33: aload_0
      34: iload         4
      36: aaload
      37: invokestatic  #33                 // Method isStrictMethodInvocationConvertible:(Ljava/lang/Class;Ljava/lang/Class;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: istore_2
      49: iload_3
      50: ifne          67
      53: aload_0
      54: iload         4
      56: aaload
      57: aload_1
      58: iload         4
      60: aaload
      61: invokestatic  #33                 // Method isStrictMethodInvocationConvertible:(Ljava/lang/Class;Ljava/lang/Class;)Z
      64: ifeq          71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: istore_3
      73: iinc          4, 1
      76: goto          7
      79: iload_2
      80: ifeq          91
      83: iload_3
      84: ifeq          89
      87: iconst_2
      88: ireturn
      89: iconst_0
      90: ireturn
      91: iload_3
      92: ifeq          97
      95: iconst_1
      96: ireturn
      97: iconst_2
      98: ireturn

  private static java.util.LinkedList<java.lang.reflect.Method> getApplicables(java.util.List, java.lang.Class[]);
    Code:
       0: new           #21                 // class java/util/LinkedList
       3: dup
       4: invokespecial #22                 // Method java/util/LinkedList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #34,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_3
      25: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        4
      32: aload         4
      34: checkcast     #20                 // class java/lang/reflect/Method
      37: astore        5
      39: aload         5
      41: aload_1
      42: invokestatic  #35                 // Method isApplicable:(Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z
      45: ifeq          55
      48: aload_2
      49: aload         5
      51: invokevirtual #36                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
      54: pop
      55: goto          15
      58: aload_2
      59: areturn

  private static boolean isApplicable(java.lang.reflect.Method, java.lang.Class[]);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       4: astore_2
       5: aload_2
       6: arraylength
       7: aload_1
       8: arraylength
       9: if_icmpeq     14
      12: iconst_0
      13: ireturn
      14: iconst_0
      15: istore_3
      16: iload_3
      17: aload_1
      18: arraylength
      19: if_icmpge     42
      22: aload_2
      23: iload_3
      24: aaload
      25: aload_1
      26: iload_3
      27: aaload
      28: invokestatic  #37                 // Method isMethodInvocationConvertible:(Ljava/lang/Class;Ljava/lang/Class;)Z
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: iinc          3, 1
      39: goto          16
      42: iconst_1
      43: ireturn

  private static boolean isMethodInvocationConvertible(java.lang.Class, java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: invokevirtual #38                 // Method java/lang/Class.isPrimitive:()Z
       8: ifne          13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: ifnull        27
      17: aload_0
      18: aload_1
      19: invokevirtual #39                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: aload_0
      28: invokevirtual #38                 // Method java/lang/Class.isPrimitive:()Z
      31: ifeq          267
      34: aload_0
      35: getstatic     #40                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      38: if_acmpne     50
      41: aload_1
      42: ldc_w         #41                 // class java/lang/Boolean
      45: if_acmpne     50
      48: iconst_1
      49: ireturn
      50: aload_0
      51: getstatic     #42                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      54: if_acmpne     66
      57: aload_1
      58: ldc_w         #43                 // class java/lang/Character
      61: if_acmpne     66
      64: iconst_1
      65: ireturn
      66: aload_0
      67: getstatic     #44                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      70: if_acmpne     82
      73: aload_1
      74: ldc_w         #45                 // class java/lang/Byte
      77: if_acmpne     82
      80: iconst_1
      81: ireturn
      82: aload_0
      83: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      86: if_acmpne     105
      89: aload_1
      90: ldc_w         #47                 // class java/lang/Short
      93: if_acmpeq     103
      96: aload_1
      97: ldc_w         #45                 // class java/lang/Byte
     100: if_acmpne     105
     103: iconst_1
     104: ireturn
     105: aload_0
     106: getstatic     #48                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     109: if_acmpne     135
     112: aload_1
     113: ldc_w         #49                 // class java/lang/Integer
     116: if_acmpeq     133
     119: aload_1
     120: ldc_w         #47                 // class java/lang/Short
     123: if_acmpeq     133
     126: aload_1
     127: ldc_w         #45                 // class java/lang/Byte
     130: if_acmpne     135
     133: iconst_1
     134: ireturn
     135: aload_0
     136: getstatic     #50                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     139: if_acmpne     172
     142: aload_1
     143: ldc_w         #51                 // class java/lang/Long
     146: if_acmpeq     170
     149: aload_1
     150: ldc_w         #49                 // class java/lang/Integer
     153: if_acmpeq     170
     156: aload_1
     157: ldc_w         #47                 // class java/lang/Short
     160: if_acmpeq     170
     163: aload_1
     164: ldc_w         #45                 // class java/lang/Byte
     167: if_acmpne     172
     170: iconst_1
     171: ireturn
     172: aload_0
     173: getstatic     #52                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     176: if_acmpne     216
     179: aload_1
     180: ldc_w         #53                 // class java/lang/Float
     183: if_acmpeq     214
     186: aload_1
     187: ldc_w         #51                 // class java/lang/Long
     190: if_acmpeq     214
     193: aload_1
     194: ldc_w         #49                 // class java/lang/Integer
     197: if_acmpeq     214
     200: aload_1
     201: ldc_w         #47                 // class java/lang/Short
     204: if_acmpeq     214
     207: aload_1
     208: ldc_w         #45                 // class java/lang/Byte
     211: if_acmpne     216
     214: iconst_1
     215: ireturn
     216: aload_0
     217: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     220: if_acmpne     267
     223: aload_1
     224: ldc_w         #55                 // class java/lang/Double
     227: if_acmpeq     265
     230: aload_1
     231: ldc_w         #53                 // class java/lang/Float
     234: if_acmpeq     265
     237: aload_1
     238: ldc_w         #51                 // class java/lang/Long
     241: if_acmpeq     265
     244: aload_1
     245: ldc_w         #49                 // class java/lang/Integer
     248: if_acmpeq     265
     251: aload_1
     252: ldc_w         #47                 // class java/lang/Short
     255: if_acmpeq     265
     258: aload_1
     259: ldc_w         #45                 // class java/lang/Byte
     262: if_acmpne     267
     265: iconst_1
     266: ireturn
     267: iconst_0
     268: ireturn

  private static boolean isStrictMethodInvocationConvertible(java.lang.Class, java.lang.Class);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: invokevirtual #38                 // Method java/lang/Class.isPrimitive:()Z
       8: ifne          13
      11: iconst_1
      12: ireturn
      13: aload_0
      14: aload_1
      15: invokevirtual #39                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      18: ifeq          23
      21: iconst_1
      22: ireturn
      23: aload_0
      24: invokevirtual #38                 // Method java/lang/Class.isPrimitive:()Z
      27: ifeq          180
      30: aload_0
      31: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      34: if_acmpne     46
      37: aload_1
      38: getstatic     #44                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      41: if_acmpne     46
      44: iconst_1
      45: ireturn
      46: aload_0
      47: getstatic     #48                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      50: if_acmpne     69
      53: aload_1
      54: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      57: if_acmpeq     67
      60: aload_1
      61: getstatic     #44                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      64: if_acmpne     69
      67: iconst_1
      68: ireturn
      69: aload_0
      70: getstatic     #50                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
      73: if_acmpne     99
      76: aload_1
      77: getstatic     #48                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      80: if_acmpeq     97
      83: aload_1
      84: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      87: if_acmpeq     97
      90: aload_1
      91: getstatic     #44                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      94: if_acmpne     99
      97: iconst_1
      98: ireturn
      99: aload_0
     100: getstatic     #52                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     103: if_acmpne     136
     106: aload_1
     107: getstatic     #50                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     110: if_acmpeq     134
     113: aload_1
     114: getstatic     #48                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     117: if_acmpeq     134
     120: aload_1
     121: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
     124: if_acmpeq     134
     127: aload_1
     128: getstatic     #44                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     131: if_acmpne     136
     134: iconst_1
     135: ireturn
     136: aload_0
     137: getstatic     #54                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
     140: if_acmpne     180
     143: aload_1
     144: getstatic     #52                 // Field java/lang/Float.TYPE:Ljava/lang/Class;
     147: if_acmpeq     178
     150: aload_1
     151: getstatic     #50                 // Field java/lang/Long.TYPE:Ljava/lang/Class;
     154: if_acmpeq     178
     157: aload_1
     158: getstatic     #48                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
     161: if_acmpeq     178
     164: aload_1
     165: getstatic     #46                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
     168: if_acmpeq     178
     171: aload_1
     172: getstatic     #44                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
     175: if_acmpne     180
     178: iconst_1
     179: ireturn
     180: iconst_0
     181: ireturn
}
