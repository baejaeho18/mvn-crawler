Compiled from "Shell.java"
public class org.codehaus.plexus.util.cli.shell.Shell implements java.lang.Cloneable {
  private static final char[] DEFAULT_QUOTING_TRIGGER_CHARS;

  private java.lang.String shellCommand;

  private java.util.List shellArgs;

  private boolean quotedArgumentsEnabled;

  private java.lang.String executable;

  private java.lang.String workingDir;

  private boolean quotedExecutableEnabled;

  private boolean doubleQuotedArgumentEscaped;

  private boolean singleQuotedArgumentEscaped;

  private boolean doubleQuotedExecutableEscaped;

  private boolean singleQuotedExecutableEscaped;

  private char argQuoteDelimiter;

  private char exeQuoteDelimiter;

  public org.codehaus.plexus.util.cli.shell.Shell();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field shellArgs:Ljava/util/List;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field quotedArgumentsEnabled:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field quotedExecutableEnabled:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field doubleQuotedArgumentEscaped:Z
      30: aload_0
      31: iconst_0
      32: putfield      #8                  // Field singleQuotedArgumentEscaped:Z
      35: aload_0
      36: iconst_0
      37: putfield      #9                  // Field doubleQuotedExecutableEscaped:Z
      40: aload_0
      41: iconst_0
      42: putfield      #10                 // Field singleQuotedExecutableEscaped:Z
      45: aload_0
      46: bipush        34
      48: putfield      #11                 // Field argQuoteDelimiter:C
      51: aload_0
      52: bipush        34
      54: putfield      #12                 // Field exeQuoteDelimiter:C
      57: return

  public void setShellCommand(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field shellCommand:Ljava/lang/String;
       5: return

  public java.lang.String getShellCommand();
    Code:
       0: aload_0
       1: getfield      #13                 // Field shellCommand:Ljava/lang/String;
       4: areturn

  public void setShellArgs(java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field shellArgs:Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: getfield      #4                  // Field shellArgs:Ljava/util/List;
      13: aload_1
      14: invokestatic  #15                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: invokeinterface #16,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      22: pop
      23: return

  public java.lang.String[] getShellArgs();
    Code:
       0: aload_0
       1: getfield      #4                  // Field shellArgs:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #4                  // Field shellArgs:Ljava/util/List;
      11: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #4                  // Field shellArgs:Ljava/util/List;
      25: aload_0
      26: getfield      #4                  // Field shellArgs:Ljava/util/List;
      29: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      34: anewarray     #19                 // class java/lang/String
      37: invokeinterface #20,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      42: checkcast     #21                 // class "[Ljava/lang/String;"
      45: checkcast     #21                 // class "[Ljava/lang/String;"
      48: areturn

  public java.util.List getCommandLine(java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #22                 // Method getRawCommandLine:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
       6: areturn

  protected java.util.List getRawCommandLine(java.lang.String, java.lang.String[]);
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: new           #23                 // class java/lang/StringBuffer
      11: dup
      12: invokespecial #24                 // Method java/lang/StringBuffer."<init>":()V
      15: astore        4
      17: aload_1
      18: ifnull        100
      21: aload_0
      22: invokevirtual #25                 // Method getExecutionPreamble:()Ljava/lang/String;
      25: astore        5
      27: aload         5
      29: ifnull        40
      32: aload         4
      34: aload         5
      36: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      39: pop
      40: aload_0
      41: invokevirtual #27                 // Method isQuotedExecutableEnabled:()Z
      44: ifeq          90
      47: aload_0
      48: aload_0
      49: invokevirtual #28                 // Method isSingleQuotedExecutableEscaped:()Z
      52: aload_0
      53: invokevirtual #29                 // Method isDoubleQuotedExecutableEscaped:()Z
      56: invokevirtual #30                 // Method getEscapeChars:(ZZ)[C
      59: astore        6
      61: aload         4
      63: aload_0
      64: invokevirtual #31                 // Method getExecutable:()Ljava/lang/String;
      67: aload_0
      68: invokevirtual #32                 // Method getExecutableQuoteDelimiter:()C
      71: aload         6
      73: aload_0
      74: invokevirtual #33                 // Method getQuotingTriggerChars:()[C
      77: bipush        92
      79: iconst_0
      80: invokestatic  #34                 // Method org/codehaus/plexus/util/StringUtils.quoteAndEscape:(Ljava/lang/String;C[C[CCZ)Ljava/lang/String;
      83: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      86: pop
      87: goto          100
      90: aload         4
      92: aload_0
      93: invokevirtual #31                 // Method getExecutable:()Ljava/lang/String;
      96: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      99: pop
     100: iconst_0
     101: istore        5
     103: iload         5
     105: aload_2
     106: arraylength
     107: if_icmpge     192
     110: aload         4
     112: invokevirtual #35                 // Method java/lang/StringBuffer.length:()I
     115: ifle          126
     118: aload         4
     120: ldc           #36                 // String
     122: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     125: pop
     126: aload_0
     127: invokevirtual #37                 // Method isQuotedArgumentsEnabled:()Z
     130: ifeq          176
     133: aload_0
     134: aload_0
     135: invokevirtual #28                 // Method isSingleQuotedExecutableEscaped:()Z
     138: aload_0
     139: invokevirtual #29                 // Method isDoubleQuotedExecutableEscaped:()Z
     142: invokevirtual #30                 // Method getEscapeChars:(ZZ)[C
     145: astore        6
     147: aload         4
     149: aload_2
     150: iload         5
     152: aaload
     153: aload_0
     154: invokevirtual #38                 // Method getArgumentQuoteDelimiter:()C
     157: aload         6
     159: aload_0
     160: invokevirtual #33                 // Method getQuotingTriggerChars:()[C
     163: bipush        92
     165: iconst_0
     166: invokestatic  #34                 // Method org/codehaus/plexus/util/StringUtils.quoteAndEscape:(Ljava/lang/String;C[C[CCZ)Ljava/lang/String;
     169: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     172: pop
     173: goto          186
     176: aload         4
     178: aload_2
     179: iload         5
     181: aaload
     182: invokevirtual #26                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     185: pop
     186: iinc          5, 1
     189: goto          103
     192: aload_3
     193: aload         4
     195: invokevirtual #39                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     198: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     203: pop
     204: aload_3
     205: areturn

  protected char[] getQuotingTriggerChars();
    Code:
       0: getstatic     #41                 // Field DEFAULT_QUOTING_TRIGGER_CHARS:[C
       3: areturn

  protected java.lang.String getExecutionPreamble();
    Code:
       0: aconst_null
       1: areturn

  protected char[] getEscapeChars(boolean, boolean);
    Code:
       0: new           #23                 // class java/lang/StringBuffer
       3: dup
       4: iconst_2
       5: invokespecial #42                 // Method java/lang/StringBuffer."<init>":(I)V
       8: astore_3
       9: iload_1
      10: ifeq          20
      13: aload_3
      14: bipush        39
      16: invokevirtual #43                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      19: pop
      20: iload_2
      21: ifeq          31
      24: aload_3
      25: bipush        34
      27: invokevirtual #43                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      30: pop
      31: aload_3
      32: invokevirtual #35                 // Method java/lang/StringBuffer.length:()I
      35: newarray       char
      37: astore        4
      39: aload_3
      40: iconst_0
      41: aload_3
      42: invokevirtual #35                 // Method java/lang/StringBuffer.length:()I
      45: aload         4
      47: iconst_0
      48: invokevirtual #44                 // Method java/lang/StringBuffer.getChars:(II[CI)V
      51: aload         4
      53: areturn

  protected boolean isDoubleQuotedArgumentEscaped();
    Code:
       0: aload_0
       1: getfield      #7                  // Field doubleQuotedArgumentEscaped:Z
       4: ireturn

  protected boolean isSingleQuotedArgumentEscaped();
    Code:
       0: aload_0
       1: getfield      #8                  // Field singleQuotedArgumentEscaped:Z
       4: ireturn

  protected boolean isDoubleQuotedExecutableEscaped();
    Code:
       0: aload_0
       1: getfield      #9                  // Field doubleQuotedExecutableEscaped:Z
       4: ireturn

  protected boolean isSingleQuotedExecutableEscaped();
    Code:
       0: aload_0
       1: getfield      #10                 // Field singleQuotedExecutableEscaped:Z
       4: ireturn

  protected void setArgumentQuoteDelimiter(char);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field argQuoteDelimiter:C
       5: return

  protected char getArgumentQuoteDelimiter();
    Code:
       0: aload_0
       1: getfield      #11                 // Field argQuoteDelimiter:C
       4: ireturn

  protected void setExecutableQuoteDelimiter(char);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field exeQuoteDelimiter:C
       5: return

  protected char getExecutableQuoteDelimiter();
    Code:
       0: aload_0
       1: getfield      #12                 // Field exeQuoteDelimiter:C
       4: ireturn

  public java.util.List getShellCommandLine(java.lang.String[]);
    Code:
       0: new           #2                  // class java/util/ArrayList
       3: dup
       4: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #45                 // Method getShellCommand:()Ljava/lang/String;
      12: ifnull        26
      15: aload_2
      16: aload_0
      17: invokevirtual #45                 // Method getShellCommand:()Ljava/lang/String;
      20: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: invokevirtual #46                 // Method getShellArgs:()[Ljava/lang/String;
      30: ifnull        44
      33: aload_2
      34: aload_0
      35: invokevirtual #47                 // Method getShellArgsList:()Ljava/util/List;
      38: invokeinterface #16,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      43: pop
      44: aload_2
      45: aload_0
      46: aload_0
      47: invokevirtual #31                 // Method getExecutable:()Ljava/lang/String;
      50: aload_1
      51: invokevirtual #48                 // Method getCommandLine:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
      54: invokeinterface #16,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      59: pop
      60: aload_2
      61: areturn

  public java.util.List getShellArgsList();
    Code:
       0: aload_0
       1: getfield      #4                  // Field shellArgs:Ljava/util/List;
       4: areturn

  public void addShellArg(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field shellArgs:Ljava/util/List;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void setQuotedArgumentsEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field quotedArgumentsEnabled:Z
       5: return

  public boolean isQuotedArgumentsEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field quotedArgumentsEnabled:Z
       4: ireturn

  public void setQuotedExecutableEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field quotedExecutableEnabled:Z
       5: return

  public boolean isQuotedExecutableEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field quotedExecutableEnabled:Z
       4: ireturn

  public void setExecutable(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #49                 // Method java/lang/String.length:()I
       8: ifne          12
      11: return
      12: aload_0
      13: aload_1
      14: bipush        47
      16: getstatic     #50                 // Field java/io/File.separatorChar:C
      19: invokevirtual #51                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      22: bipush        92
      24: getstatic     #50                 // Field java/io/File.separatorChar:C
      27: invokevirtual #51                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      30: putfield      #52                 // Field executable:Ljava/lang/String;
      33: return

  public java.lang.String getExecutable();
    Code:
       0: aload_0
       1: getfield      #52                 // Field executable:Ljava/lang/String;
       4: areturn

  public void setWorkingDirectory(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_0
       5: aload_1
       6: putfield      #53                 // Field workingDir:Ljava/lang/String;
       9: return

  public void setWorkingDirectory(java.io.File);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokevirtual #54                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
       9: putfield      #53                 // Field workingDir:Ljava/lang/String;
      12: return

  public java.io.File getWorkingDirectory();
    Code:
       0: aload_0
       1: getfield      #53                 // Field workingDir:Ljava/lang/String;
       4: ifnonnull     11
       7: aconst_null
       8: goto          22
      11: new           #55                 // class java/io/File
      14: dup
      15: aload_0
      16: getfield      #53                 // Field workingDir:Ljava/lang/String;
      19: invokespecial #56                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      22: areturn

  public java.lang.String getWorkingDirectoryAsString();
    Code:
       0: aload_0
       1: getfield      #53                 // Field workingDir:Ljava/lang/String;
       4: areturn

  public void clearArguments();
    Code:
       0: aload_0
       1: getfield      #4                  // Field shellArgs:Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.clear:()V
       9: return

  public java.lang.Object clone();
    Code:
       0: new           #57                 // class org/codehaus/plexus/util/cli/shell/Shell
       3: dup
       4: invokespecial #58                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #31                 // Method getExecutable:()Ljava/lang/String;
      13: invokevirtual #59                 // Method setExecutable:(Ljava/lang/String;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #60                 // Method getWorkingDirectory:()Ljava/io/File;
      21: invokevirtual #61                 // Method setWorkingDirectory:(Ljava/io/File;)V
      24: aload_1
      25: aload_0
      26: invokevirtual #46                 // Method getShellArgs:()[Ljava/lang/String;
      29: invokevirtual #62                 // Method setShellArgs:([Ljava/lang/String;)V
      32: aload_1
      33: areturn

  public java.lang.String getOriginalExecutable();
    Code:
       0: aload_0
       1: getfield      #52                 // Field executable:Ljava/lang/String;
       4: areturn

  public java.util.List getOriginalCommandLine(java.lang.String, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #22                 // Method getRawCommandLine:(Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;
       6: areturn

  protected void setDoubleQuotedArgumentEscaped(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field doubleQuotedArgumentEscaped:Z
       5: return

  protected void setDoubleQuotedExecutableEscaped(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field doubleQuotedExecutableEscaped:Z
       5: return

  protected void setSingleQuotedArgumentEscaped(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field singleQuotedArgumentEscaped:Z
       5: return

  protected void setSingleQuotedExecutableEscaped(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field singleQuotedExecutableEscaped:Z
       5: return

  static {};
    Code:
       0: iconst_1
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        32
       7: castore
       8: putstatic     #41                 // Field DEFAULT_QUOTING_TRIGGER_CHARS:[C
      11: return
}
