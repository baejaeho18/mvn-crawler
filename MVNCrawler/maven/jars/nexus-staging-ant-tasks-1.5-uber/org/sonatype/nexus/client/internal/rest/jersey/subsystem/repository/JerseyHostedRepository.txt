Compiled from "JerseyHostedRepository.java"
public class org.sonatype.nexus.client.internal.rest.jersey.subsystem.repository.JerseyHostedRepository<T extends org.sonatype.nexus.client.core.subsystem.repository.HostedRepository> extends org.sonatype.nexus.client.internal.rest.jersey.subsystem.repository.JerseyRepository<T, org.sonatype.nexus.rest.model.RepositoryResource, org.sonatype.nexus.client.core.subsystem.repository.RepositoryStatus> implements org.sonatype.nexus.client.core.subsystem.repository.HostedRepository<T> {
  static final java.lang.String REPO_TYPE;

  static final java.lang.String PROVIDER_ROLE;

  public org.sonatype.nexus.client.internal.rest.jersey.subsystem.repository.JerseyHostedRepository(org.sonatype.nexus.client.rest.jersey.JerseyNexusClient, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/sonatype/nexus/client/internal/rest/jersey/subsystem/repository/JerseyRepository."<init>":(Lorg/sonatype/nexus/client/rest/jersey/JerseyNexusClient;Ljava/lang/String;)V
       6: return

  public org.sonatype.nexus.client.internal.rest.jersey.subsystem.repository.JerseyHostedRepository(org.sonatype.nexus.client.rest.jersey.JerseyNexusClient, org.sonatype.nexus.rest.model.RepositoryResource);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/sonatype/nexus/client/internal/rest/jersey/subsystem/repository/JerseyRepository."<init>":(Lorg/sonatype/nexus/client/rest/jersey/JerseyNexusClient;Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;)V
       6: return

  protected org.sonatype.nexus.rest.model.RepositoryResource createSettings();
    Code:
       0: new           #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       3: dup
       4: invokespecial #4                  // Method org/sonatype/nexus/rest/model/RepositoryResource."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #5                  // String hosted
      11: invokevirtual #6                  // Method org/sonatype/nexus/rest/model/RepositoryResource.setRepoType:(Ljava/lang/String;)V
      14: aload_1
      15: ldc           #7                  // String org.sonatype.nexus.proxy.repository.Repository
      17: invokevirtual #8                  // Method org/sonatype/nexus/rest/model/RepositoryResource.setProviderRole:(Ljava/lang/String;)V
      20: aload_1
      21: iconst_1
      22: invokevirtual #9                  // Method org/sonatype/nexus/rest/model/RepositoryResource.setExposed:(Z)V
      25: aload_1
      26: ldc           #10                 // String ALLOW_WRITE_ONCE
      28: invokevirtual #11                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setWritePolicy:(Ljava/lang/String;)V
      31: aload_1
      32: iconst_1
      33: invokevirtual #12                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setBrowseable:(Z)V
      36: aload_1
      37: iconst_0
      38: invokevirtual #13                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setIndexable:(Z)V
      41: aload_1
      42: ldc           #14                 // String MIXED
      44: invokevirtual #15                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setRepoPolicy:(Ljava/lang/String;)V
      47: aload_1
      48: areturn

  private T me();
    Code:
       0: aload_0
       1: areturn

  public T withRepoPolicy(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method settings:()Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;
       4: checkcast     #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       7: aload_1
       8: invokevirtual #15                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setRepoPolicy:(Ljava/lang/String;)V
      11: aload_0
      12: invokespecial #17                 // Method me:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
      15: areturn

  public T readOnly();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method settings:()Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;
       4: checkcast     #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       7: ldc           #18                 // String READ_ONLY
       9: invokevirtual #11                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setWritePolicy:(Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #17                 // Method me:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
      16: areturn

  public T allowRedeploy();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method settings:()Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;
       4: checkcast     #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       7: ldc           #19                 // String ALLOW_WRITE
       9: invokevirtual #11                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setWritePolicy:(Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #17                 // Method me:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
      16: areturn

  public T disableRedeploy();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method settings:()Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;
       4: checkcast     #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       7: ldc           #10                 // String ALLOW_WRITE_ONCE
       9: invokevirtual #11                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setWritePolicy:(Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #17                 // Method me:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
      16: areturn

  public T enableBrowsing();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method settings:()Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;
       4: checkcast     #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       7: iconst_1
       8: invokevirtual #12                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setBrowseable:(Z)V
      11: aload_0
      12: invokespecial #17                 // Method me:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
      15: areturn

  public T disableBrowsing();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method settings:()Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;
       4: checkcast     #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       7: iconst_0
       8: invokevirtual #12                 // Method org/sonatype/nexus/rest/model/RepositoryResource.setBrowseable:(Z)V
      11: aload_0
      12: invokespecial #17                 // Method me:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
      15: areturn

  public boolean isBrowsable();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method settings:()Lorg/sonatype/nexus/rest/model/RepositoryBaseResource;
       4: checkcast     #3                  // class org/sonatype/nexus/rest/model/RepositoryResource
       7: invokevirtual #20                 // Method org/sonatype/nexus/rest/model/RepositoryResource.isBrowseable:()Z
      10: ireturn

  protected org.sonatype.nexus.rest.model.RepositoryBaseResource createSettings();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method createSettings:()Lorg/sonatype/nexus/rest/model/RepositoryResource;
       4: areturn

  public org.sonatype.nexus.client.core.subsystem.repository.Repository disableBrowsing();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method disableBrowsing:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
       4: areturn

  public org.sonatype.nexus.client.core.subsystem.repository.Repository enableBrowsing();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method enableBrowsing:()Lorg/sonatype/nexus/client/core/subsystem/repository/HostedRepository;
       4: areturn
}
