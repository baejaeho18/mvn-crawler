Compiled from "ParametersImpl.java"
public class org.sonatype.spice.zapper.internal.ParametersImpl implements org.sonatype.spice.zapper.Parameters {
  private final org.sonatype.spice.zapper.hash.HashAlgorithm hashAlgorithm;

  private final org.sonatype.spice.zapper.CodecSelector codecSelector;

  private final int maximumTrackCount;

  private final long maximumSegmentLength;

  public org.sonatype.spice.zapper.internal.ParametersImpl(org.sonatype.spice.zapper.hash.HashAlgorithm, org.sonatype.spice.zapper.CodecSelector, int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc_w         #2                  // class org/sonatype/spice/zapper/hash/HashAlgorithm
       9: invokestatic  #3                  // Method org/sonatype/spice/zapper/internal/Check.notNull:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #2                  // class org/sonatype/spice/zapper/hash/HashAlgorithm
      15: putfield      #4                  // Field hashAlgorithm:Lorg/sonatype/spice/zapper/hash/HashAlgorithm;
      18: aload_0
      19: aload_2
      20: ldc_w         #5                  // class org/sonatype/spice/zapper/CodecSelector
      23: invokestatic  #3                  // Method org/sonatype/spice/zapper/internal/Check.notNull:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      26: checkcast     #5                  // class org/sonatype/spice/zapper/CodecSelector
      29: putfield      #6                  // Field codecSelector:Lorg/sonatype/spice/zapper/CodecSelector;
      32: aload_0
      33: iload_3
      34: ifle          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: iload_3
      43: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: ldc           #8                  // String maximumTrackCount must be positive!
      48: invokestatic  #9                  // Method org/sonatype/spice/zapper/internal/Check.argument:(ZLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #10                 // class java/lang/Integer
      54: invokevirtual #11                 // Method java/lang/Integer.intValue:()I
      57: putfield      #12                 // Field maximumTrackCount:I
      60: aload_0
      61: lload         4
      63: lconst_0
      64: lcmp
      65: ifle          72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: lload         4
      75: invokestatic  #13                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      78: ldc           #14                 // String maximumSegmentLength must be positive!
      80: invokestatic  #9                  // Method org/sonatype/spice/zapper/internal/Check.argument:(ZLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: checkcast     #15                 // class java/lang/Long
      86: invokevirtual #16                 // Method java/lang/Long.longValue:()J
      89: putfield      #17                 // Field maximumSegmentLength:J
      92: return

  public org.sonatype.spice.zapper.hash.HashAlgorithm getHashAlgorithm();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hashAlgorithm:Lorg/sonatype/spice/zapper/hash/HashAlgorithm;
       4: areturn

  public org.sonatype.spice.zapper.CodecSelector getCodecSelector();
    Code:
       0: aload_0
       1: getfield      #6                  // Field codecSelector:Lorg/sonatype/spice/zapper/CodecSelector;
       4: areturn

  public int getMaximumTrackCount();
    Code:
       0: aload_0
       1: getfield      #12                 // Field maximumTrackCount:I
       4: ireturn

  public long getMaximumSegmentLength();
    Code:
       0: aload_0
       1: getfield      #17                 // Field maximumSegmentLength:J
       4: lreturn
}
