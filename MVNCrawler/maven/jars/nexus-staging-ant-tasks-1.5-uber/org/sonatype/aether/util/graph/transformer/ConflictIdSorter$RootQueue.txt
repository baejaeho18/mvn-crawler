Compiled from "ConflictIdSorter.java"
final class org.sonatype.aether.util.graph.transformer.ConflictIdSorter$RootQueue {
  private int nextOut;

  private int nextIn;

  private org.sonatype.aether.util.graph.transformer.ConflictIdSorter$ConflictId[] ids;

  org.sonatype.aether.util.graph.transformer.ConflictIdSorter$RootQueue(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: bipush        16
       8: iadd
       9: anewarray     #2                  // class org/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId
      12: putfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
      15: return

  boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nextOut:I
       4: aload_0
       5: getfield      #5                  // Field nextIn:I
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  void add(org.sonatype.aether.util.graph.transformer.ConflictIdSorter$ConflictId);
    Code:
       0: aload_0
       1: getfield      #4                  // Field nextOut:I
       4: aload_0
       5: getfield      #5                  // Field nextIn:I
       8: if_icmplt     36
      11: aload_0
      12: getfield      #4                  // Field nextOut:I
      15: ifle          36
      18: aload_0
      19: dup
      20: getfield      #5                  // Field nextIn:I
      23: aload_0
      24: getfield      #4                  // Field nextOut:I
      27: isub
      28: putfield      #5                  // Field nextIn:I
      31: aload_0
      32: iconst_0
      33: putfield      #4                  // Field nextOut:I
      36: aload_0
      37: getfield      #5                  // Field nextIn:I
      40: aload_0
      41: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
      44: arraylength
      45: if_icmplt     113
      48: aload_0
      49: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
      52: arraylength
      53: aload_0
      54: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
      57: arraylength
      58: iconst_2
      59: idiv
      60: iadd
      61: bipush        16
      63: iadd
      64: anewarray     #2                  // class org/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId
      67: astore_2
      68: aload_0
      69: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
      72: aload_0
      73: getfield      #4                  // Field nextOut:I
      76: aload_2
      77: iconst_0
      78: aload_0
      79: getfield      #5                  // Field nextIn:I
      82: aload_0
      83: getfield      #4                  // Field nextOut:I
      86: isub
      87: invokestatic  #6                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      90: aload_0
      91: aload_2
      92: putfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
      95: aload_0
      96: dup
      97: getfield      #5                  // Field nextIn:I
     100: aload_0
     101: getfield      #4                  // Field nextOut:I
     104: isub
     105: putfield      #5                  // Field nextIn:I
     108: aload_0
     109: iconst_0
     110: putfield      #4                  // Field nextOut:I
     113: aload_0
     114: getfield      #5                  // Field nextIn:I
     117: iconst_1
     118: isub
     119: istore_2
     120: iload_2
     121: aload_0
     122: getfield      #4                  // Field nextOut:I
     125: if_icmplt     164
     128: aload_1
     129: getfield      #7                  // Field org/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId.minDepth:I
     132: aload_0
     133: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
     136: iload_2
     137: aaload
     138: getfield      #7                  // Field org/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId.minDepth:I
     141: if_icmpge     164
     144: aload_0
     145: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
     148: iload_2
     149: iconst_1
     150: iadd
     151: aload_0
     152: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
     155: iload_2
     156: aaload
     157: aastore
     158: iinc          2, -1
     161: goto          120
     164: aload_0
     165: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
     168: iload_2
     169: iconst_1
     170: iadd
     171: aload_1
     172: aastore
     173: aload_0
     174: dup
     175: getfield      #5                  // Field nextIn:I
     178: iconst_1
     179: iadd
     180: putfield      #5                  // Field nextIn:I
     183: return

  org.sonatype.aether.util.graph.transformer.ConflictIdSorter$ConflictId remove();
    Code:
       0: aload_0
       1: getfield      #3                  // Field ids:[Lorg/sonatype/aether/util/graph/transformer/ConflictIdSorter$ConflictId;
       4: aload_0
       5: dup
       6: getfield      #4                  // Field nextOut:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #4                  // Field nextOut:I
      15: aaload
      16: areturn
}
