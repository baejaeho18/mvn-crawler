Compiled from "RunnableErrorForwarder.java"
public class org.sonatype.aether.util.concurrency.RunnableErrorForwarder {
  private final java.lang.Thread thread;

  private final java.util.concurrent.atomic.AtomicInteger counter;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Throwable> error;

  public org.sonatype.aether.util.concurrency.RunnableErrorForwarder();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       8: putfield      #1                  // Field thread:Ljava/lang/Thread;
      11: aload_0
      12: new           #6                  // class java/util/concurrent/atomic/AtomicInteger
      15: dup
      16: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      19: putfield      #2                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      22: aload_0
      23: new           #8                  // class java/util/concurrent/atomic/AtomicReference
      26: dup
      27: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      30: putfield      #3                  // Field error:Ljava/util/concurrent/atomic/AtomicReference;
      33: return

  public java.lang.Runnable wrap(java.lang.Runnable);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #10                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String runnable missing
      10: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #2                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      18: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      21: pop
      22: new           #14                 // class org/sonatype/aether/util/concurrency/RunnableErrorForwarder$1
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #15                 // Method org/sonatype/aether/util/concurrency/RunnableErrorForwarder$1."<init>":(Lorg/sonatype/aether/util/concurrency/RunnableErrorForwarder;Ljava/lang/Runnable;)V
      31: areturn

  public void await();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method awaitTerminationOfAllRunnables:()V
       4: aload_0
       5: getfield      #3                  // Field error:Ljava/util/concurrent/atomic/AtomicReference;
       8: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      11: checkcast     #18                 // class java/lang/Throwable
      14: astore_1
      15: aload_1
      16: ifnull        68
      19: aload_1
      20: instanceof    #19                 // class java/lang/RuntimeException
      23: ifeq          31
      26: aload_1
      27: checkcast     #19                 // class java/lang/RuntimeException
      30: athrow
      31: aload_1
      32: instanceof    #20                 // class java/lang/ThreadDeath
      35: ifeq          47
      38: new           #21                 // class java/lang/IllegalStateException
      41: dup
      42: aload_1
      43: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      46: athrow
      47: aload_1
      48: instanceof    #23                 // class java/lang/Error
      51: ifeq          59
      54: aload_1
      55: checkcast     #23                 // class java/lang/Error
      58: athrow
      59: new           #21                 // class java/lang/IllegalStateException
      62: dup
      63: aload_1
      64: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      67: athrow
      68: return

  private void awaitTerminationOfAllRunnables();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       6: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       9: ifle          26
      12: invokestatic  #25                 // Method java/util/concurrent/locks/LockSupport.park:()V
      15: invokestatic  #26                 // Method java/lang/Thread.interrupted:()Z
      18: ifeq          2
      21: iconst_1
      22: istore_1
      23: goto          2
      26: iload_1
      27: ifeq          36
      30: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: invokevirtual #27                 // Method java/lang/Thread.interrupt:()V
      36: return

  static java.util.concurrent.atomic.AtomicReference access$000(org.sonatype.aether.util.concurrency.RunnableErrorForwarder);
    Code:
       0: aload_0
       1: getfield      #3                  // Field error:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$100(org.sonatype.aether.util.concurrency.RunnableErrorForwarder);
    Code:
       0: aload_0
       1: getfield      #2                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static java.lang.Thread access$200(org.sonatype.aether.util.concurrency.RunnableErrorForwarder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field thread:Ljava/lang/Thread;
       4: areturn
}
