Compiled from "PathRecordingDependencyVisitor.java"
public class org.sonatype.aether.util.graph.PathRecordingDependencyVisitor implements org.sonatype.aether.graph.DependencyVisitor {
  private final org.sonatype.aether.graph.DependencyFilter filter;

  private final java.util.List<java.util.List<org.sonatype.aether.graph.DependencyNode>> paths;

  private final org.sonatype.aether.util.graph.Stack<org.sonatype.aether.graph.DependencyNode> parents;

  private final boolean excludeChildrenOfMatches;

  public org.sonatype.aether.util.graph.PathRecordingDependencyVisitor(org.sonatype.aether.graph.DependencyFilter);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #1                  // Method "<init>":(Lorg/sonatype/aether/graph/DependencyFilter;Z)V
       6: return

  public org.sonatype.aether.util.graph.PathRecordingDependencyVisitor(org.sonatype.aether.graph.DependencyFilter, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field filter:Lorg/sonatype/aether/graph/DependencyFilter;
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field excludeChildrenOfMatches:Z
      14: aload_0
      15: new           #5                  // class java/util/ArrayList
      18: dup
      19: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      22: putfield      #7                  // Field paths:Ljava/util/List;
      25: aload_0
      26: new           #8                  // class org/sonatype/aether/util/graph/Stack
      29: dup
      30: invokespecial #9                  // Method org/sonatype/aether/util/graph/Stack."<init>":()V
      33: putfield      #10                 // Field parents:Lorg/sonatype/aether/util/graph/Stack;
      36: return

  public org.sonatype.aether.graph.DependencyFilter getFilter();
    Code:
       0: aload_0
       1: getfield      #3                  // Field filter:Lorg/sonatype/aether/graph/DependencyFilter;
       4: areturn

  public java.util.List<java.util.List<org.sonatype.aether.graph.DependencyNode>> getPaths();
    Code:
       0: aload_0
       1: getfield      #7                  // Field paths:Ljava/util/List;
       4: areturn

  public boolean visitEnter(org.sonatype.aether.graph.DependencyNode);
    Code:
       0: aload_0
       1: getfield      #3                  // Field filter:Lorg/sonatype/aether/graph/DependencyFilter;
       4: ifnull        24
       7: aload_0
       8: getfield      #3                  // Field filter:Lorg/sonatype/aether/graph/DependencyFilter;
      11: aload_1
      12: aload_0
      13: getfield      #10                 // Field parents:Lorg/sonatype/aether/util/graph/Stack;
      16: invokeinterface #11,  3           // InterfaceMethod org/sonatype/aether/graph/DependencyFilter.accept:(Lorg/sonatype/aether/graph/DependencyNode;Ljava/util/List;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: istore_2
      30: aload_0
      31: getfield      #10                 // Field parents:Lorg/sonatype/aether/util/graph/Stack;
      34: aload_1
      35: invokevirtual #12                 // Method org/sonatype/aether/util/graph/Stack.push:(Ljava/lang/Object;)V
      38: iload_2
      39: ifeq          121
      42: aload_0
      43: getfield      #10                 // Field parents:Lorg/sonatype/aether/util/graph/Stack;
      46: invokevirtual #13                 // Method org/sonatype/aether/util/graph/Stack.size:()I
      49: anewarray     #14                 // class org/sonatype/aether/graph/DependencyNode
      52: astore_3
      53: aload_0
      54: getfield      #10                 // Field parents:Lorg/sonatype/aether/util/graph/Stack;
      57: invokevirtual #13                 // Method org/sonatype/aether/util/graph/Stack.size:()I
      60: iconst_1
      61: isub
      62: istore        4
      64: aload_0
      65: getfield      #10                 // Field parents:Lorg/sonatype/aether/util/graph/Stack;
      68: invokevirtual #15                 // Method org/sonatype/aether/util/graph/Stack.iterator:()Ljava/util/Iterator;
      71: astore        5
      73: aload         5
      75: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          107
      83: aload         5
      85: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #14                 // class org/sonatype/aether/graph/DependencyNode
      93: astore        6
      95: aload_3
      96: iload         4
      98: aload         6
     100: aastore
     101: iinc          4, -1
     104: goto          73
     107: aload_0
     108: getfield      #7                  // Field paths:Ljava/util/List;
     111: aload_3
     112: invokestatic  #18                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     115: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     120: pop
     121: aload_0
     122: getfield      #4                  // Field excludeChildrenOfMatches:Z
     125: ifeq          132
     128: iload_2
     129: ifne          136
     132: iconst_1
     133: goto          137
     136: iconst_0
     137: ireturn

  public boolean visitLeave(org.sonatype.aether.graph.DependencyNode);
    Code:
       0: aload_0
       1: getfield      #10                 // Field parents:Lorg/sonatype/aether/util/graph/Stack;
       4: invokevirtual #20                 // Method org/sonatype/aether/util/graph/Stack.pop:()Ljava/lang/Object;
       7: pop
       8: iconst_1
       9: ireturn
}
