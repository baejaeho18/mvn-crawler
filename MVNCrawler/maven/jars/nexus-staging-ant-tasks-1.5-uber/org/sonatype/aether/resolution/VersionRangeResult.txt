Compiled from "VersionRangeResult.java"
public class org.sonatype.aether.resolution.VersionRangeResult {
  private final org.sonatype.aether.resolution.VersionRangeRequest request;

  private final java.util.List<java.lang.Exception> exceptions;

  private java.util.List<org.sonatype.aether.version.Version> versions;

  private final java.util.Map<org.sonatype.aether.version.Version, org.sonatype.aether.repository.ArtifactRepository> repositories;

  private org.sonatype.aether.version.VersionConstraint versionConstraint;

  public org.sonatype.aether.resolution.VersionRangeResult(org.sonatype.aether.resolution.VersionRangeRequest);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String version range request has not been specified
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field request:Lorg/sonatype/aether/resolution/VersionRangeRequest;
      23: aload_0
      24: new           #6                  // class java/util/ArrayList
      27: dup
      28: iconst_4
      29: invokespecial #7                  // Method java/util/ArrayList."<init>":(I)V
      32: putfield      #8                  // Field exceptions:Ljava/util/List;
      35: aload_0
      36: new           #6                  // class java/util/ArrayList
      39: dup
      40: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      43: putfield      #10                 // Field versions:Ljava/util/List;
      46: aload_0
      47: new           #11                 // class java/util/HashMap
      50: dup
      51: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      54: putfield      #13                 // Field repositories:Ljava/util/Map;
      57: return

  public org.sonatype.aether.resolution.VersionRangeRequest getRequest();
    Code:
       0: aload_0
       1: getfield      #5                  // Field request:Lorg/sonatype/aether/resolution/VersionRangeRequest;
       4: areturn

  public java.util.List<java.lang.Exception> getExceptions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exceptions:Ljava/util/List;
       4: areturn

  public org.sonatype.aether.resolution.VersionRangeResult addException(java.lang.Exception);
    Code:
       0: aload_1
       1: ifnull        15
       4: aload_0
       5: getfield      #8                  // Field exceptions:Ljava/util/List;
       8: aload_1
       9: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      14: pop
      15: aload_0
      16: areturn

  public java.util.List<org.sonatype.aether.version.Version> getVersions();
    Code:
       0: aload_0
       1: getfield      #10                 // Field versions:Ljava/util/List;
       4: areturn

  public org.sonatype.aether.resolution.VersionRangeResult addVersion(org.sonatype.aether.version.Version);
    Code:
       0: aload_0
       1: getfield      #10                 // Field versions:Ljava/util/List;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: areturn

  public org.sonatype.aether.resolution.VersionRangeResult setVersions(java.util.List<org.sonatype.aether.version.Version>);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          16
       9: new           #6                  // class java/util/ArrayList
      12: dup
      13: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      16: putfield      #10                 // Field versions:Ljava/util/List;
      19: aload_0
      20: areturn

  public org.sonatype.aether.version.Version getLowestVersion();
    Code:
       0: aload_0
       1: getfield      #10                 // Field versions:Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #10                 // Field versions:Ljava/util/List;
      18: iconst_0
      19: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      24: checkcast     #17                 // class org/sonatype/aether/version/Version
      27: areturn

  public org.sonatype.aether.version.Version getHighestVersion();
    Code:
       0: aload_0
       1: getfield      #10                 // Field versions:Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: aconst_null
      13: areturn
      14: aload_0
      15: getfield      #10                 // Field versions:Ljava/util/List;
      18: aload_0
      19: getfield      #10                 // Field versions:Ljava/util/List;
      22: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      27: iconst_1
      28: isub
      29: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      34: checkcast     #17                 // class org/sonatype/aether/version/Version
      37: areturn

  public org.sonatype.aether.repository.ArtifactRepository getRepository(org.sonatype.aether.version.Version);
    Code:
       0: aload_0
       1: getfield      #13                 // Field repositories:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class org/sonatype/aether/repository/ArtifactRepository
      13: areturn

  public org.sonatype.aether.resolution.VersionRangeResult setRepository(org.sonatype.aether.version.Version, org.sonatype.aether.repository.ArtifactRepository);
    Code:
       0: aload_2
       1: ifnull        16
       4: aload_0
       5: getfield      #13                 // Field repositories:Ljava/util/Map;
       8: aload_1
       9: aload_2
      10: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: areturn

  public org.sonatype.aether.version.VersionConstraint getVersionConstraint();
    Code:
       0: aload_0
       1: getfield      #22                 // Field versionConstraint:Lorg/sonatype/aether/version/VersionConstraint;
       4: areturn

  public org.sonatype.aether.resolution.VersionRangeResult setVersionConstraint(org.sonatype.aether.version.VersionConstraint);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field versionConstraint:Lorg/sonatype/aether/version/VersionConstraint;
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #13                 // Field repositories:Ljava/util/Map;
       4: invokestatic  #23                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       7: areturn
}
