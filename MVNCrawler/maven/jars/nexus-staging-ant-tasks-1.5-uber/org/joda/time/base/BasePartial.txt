Compiled from "BasePartial.java"
public abstract class org.joda.time.base.BasePartial extends org.joda.time.base.AbstractPartial implements org.joda.time.ReadablePartial,java.io.Serializable {
  private static final long serialVersionUID;

  private final org.joda.time.Chronology iChronology;

  private final int[] iValues;

  protected org.joda.time.base.BasePartial();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/joda/time/DateTimeUtils.currentTimeMillis:()J
       4: aconst_null
       5: invokespecial #2                  // Method "<init>":(JLorg/joda/time/Chronology;)V
       8: return

  protected org.joda.time.base.BasePartial(org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/joda/time/DateTimeUtils.currentTimeMillis:()J
       4: aload_1
       5: invokespecial #2                  // Method "<init>":(JLorg/joda/time/Chronology;)V
       8: return

  protected org.joda.time.base.BasePartial(long);
    Code:
       0: aload_0
       1: lload_1
       2: aconst_null
       3: invokespecial #2                  // Method "<init>":(JLorg/joda/time/Chronology;)V
       6: return

  protected org.joda.time.base.BasePartial(long, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/joda/time/base/AbstractPartial."<init>":()V
       4: aload_3
       5: invokestatic  #4                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokevirtual #5                  // Method org/joda/time/Chronology.withUTC:()Lorg/joda/time/Chronology;
      14: putfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
      17: aload_0
      18: aload_3
      19: aload_0
      20: lload_1
      21: invokevirtual #7                  // Method org/joda/time/Chronology.get:(Lorg/joda/time/ReadablePartial;J)[I
      24: putfield      #8                  // Field iValues:[I
      27: return

  protected org.joda.time.base.BasePartial(java.lang.Object, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/joda/time/base/AbstractPartial."<init>":()V
       4: invokestatic  #9                  // Method org/joda/time/convert/ConverterManager.getInstance:()Lorg/joda/time/convert/ConverterManager;
       7: aload_1
       8: invokevirtual #10                 // Method org/joda/time/convert/ConverterManager.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;
      11: astore_3
      12: aload_3
      13: aload_1
      14: aload_2
      15: invokeinterface #11,  3           // InterfaceMethod org/joda/time/convert/PartialConverter.getChronology:(Ljava/lang/Object;Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      20: astore_2
      21: aload_2
      22: invokestatic  #4                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      25: astore_2
      26: aload_0
      27: aload_2
      28: invokevirtual #5                  // Method org/joda/time/Chronology.withUTC:()Lorg/joda/time/Chronology;
      31: putfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
      34: aload_0
      35: aload_3
      36: aload_0
      37: aload_1
      38: aload_2
      39: invokeinterface #12,  4           // InterfaceMethod org/joda/time/convert/PartialConverter.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;)[I
      44: putfield      #8                  // Field iValues:[I
      47: return

  protected org.joda.time.base.BasePartial(java.lang.Object, org.joda.time.Chronology, org.joda.time.format.DateTimeFormatter);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/joda/time/base/AbstractPartial."<init>":()V
       4: invokestatic  #9                  // Method org/joda/time/convert/ConverterManager.getInstance:()Lorg/joda/time/convert/ConverterManager;
       7: aload_1
       8: invokevirtual #10                 // Method org/joda/time/convert/ConverterManager.getPartialConverter:(Ljava/lang/Object;)Lorg/joda/time/convert/PartialConverter;
      11: astore        4
      13: aload         4
      15: aload_1
      16: aload_2
      17: invokeinterface #11,  3           // InterfaceMethod org/joda/time/convert/PartialConverter.getChronology:(Ljava/lang/Object;Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      22: astore_2
      23: aload_2
      24: invokestatic  #4                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #5                  // Method org/joda/time/Chronology.withUTC:()Lorg/joda/time/Chronology;
      33: putfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
      36: aload_0
      37: aload         4
      39: aload_0
      40: aload_1
      41: aload_2
      42: aload_3
      43: invokeinterface #13,  5           // InterfaceMethod org/joda/time/convert/PartialConverter.getPartialValues:(Lorg/joda/time/ReadablePartial;Ljava/lang/Object;Lorg/joda/time/Chronology;Lorg/joda/time/format/DateTimeFormatter;)[I
      48: putfield      #8                  // Field iValues:[I
      51: return

  protected org.joda.time.base.BasePartial(int[], org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/joda/time/base/AbstractPartial."<init>":()V
       4: aload_2
       5: invokestatic  #4                  // Method org/joda/time/DateTimeUtils.getChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #5                  // Method org/joda/time/Chronology.withUTC:()Lorg/joda/time/Chronology;
      14: putfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
      17: aload_2
      18: aload_0
      19: aload_1
      20: invokevirtual #14                 // Method org/joda/time/Chronology.validate:(Lorg/joda/time/ReadablePartial;[I)V
      23: aload_0
      24: aload_1
      25: putfield      #8                  // Field iValues:[I
      28: return

  protected org.joda.time.base.BasePartial(org.joda.time.base.BasePartial, int[]);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/joda/time/base/AbstractPartial."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
       9: putfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
      12: aload_0
      13: aload_2
      14: putfield      #8                  // Field iValues:[I
      17: return

  protected org.joda.time.base.BasePartial(org.joda.time.base.BasePartial, org.joda.time.Chronology);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/joda/time/base/AbstractPartial."<init>":()V
       4: aload_0
       5: aload_2
       6: invokevirtual #5                  // Method org/joda/time/Chronology.withUTC:()Lorg/joda/time/Chronology;
       9: putfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
      12: aload_0
      13: aload_1
      14: getfield      #8                  // Field iValues:[I
      17: putfield      #8                  // Field iValues:[I
      20: return

  public int getValue(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field iValues:[I
       4: iload_1
       5: iaload
       6: ireturn

  public int[] getValues();
    Code:
       0: aload_0
       1: getfield      #8                  // Field iValues:[I
       4: invokevirtual #15                 // Method "[I".clone:()Ljava/lang/Object;
       7: checkcast     #16                 // class "[I"
      10: checkcast     #16                 // class "[I"
      13: areturn

  public org.joda.time.Chronology getChronology();
    Code:
       0: aload_0
       1: getfield      #6                  // Field iChronology:Lorg/joda/time/Chronology;
       4: areturn

  protected void setValue(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #17                 // Method getField:(I)Lorg/joda/time/DateTimeField;
       5: astore_3
       6: aload_3
       7: aload_0
       8: iload_1
       9: aload_0
      10: getfield      #8                  // Field iValues:[I
      13: iload_2
      14: invokevirtual #18                 // Method org/joda/time/DateTimeField.set:(Lorg/joda/time/ReadablePartial;I[II)[I
      17: astore        4
      19: aload         4
      21: iconst_0
      22: aload_0
      23: getfield      #8                  // Field iValues:[I
      26: iconst_0
      27: aload_0
      28: getfield      #8                  // Field iValues:[I
      31: arraylength
      32: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      35: return

  protected void setValues(int[]);
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getChronology:()Lorg/joda/time/Chronology;
       4: aload_0
       5: aload_1
       6: invokevirtual #14                 // Method org/joda/time/Chronology.validate:(Lorg/joda/time/ReadablePartial;[I)V
       9: aload_1
      10: iconst_0
      11: aload_0
      12: getfield      #8                  // Field iValues:[I
      15: iconst_0
      16: aload_0
      17: getfield      #8                  // Field iValues:[I
      20: arraylength
      21: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: return

  public java.lang.String toString(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: areturn
       9: aload_1
      10: invokestatic  #22                 // Method org/joda/time/format/DateTimeFormat.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;
      13: aload_0
      14: invokevirtual #23                 // Method org/joda/time/format/DateTimeFormatter.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;
      17: areturn

  public java.lang.String toString(java.lang.String, java.util.Locale) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #21                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: areturn
       9: aload_1
      10: invokestatic  #22                 // Method org/joda/time/format/DateTimeFormat.forPattern:(Ljava/lang/String;)Lorg/joda/time/format/DateTimeFormatter;
      13: aload_2
      14: invokevirtual #24                 // Method org/joda/time/format/DateTimeFormatter.withLocale:(Ljava/util/Locale;)Lorg/joda/time/format/DateTimeFormatter;
      17: aload_0
      18: invokevirtual #23                 // Method org/joda/time/format/DateTimeFormatter.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;
      21: areturn
}
