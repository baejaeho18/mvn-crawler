Compiled from "DateTimeZone.java"
public abstract class org.joda.time.DateTimeZone implements java.io.Serializable {
  private static final long serialVersionUID;

  public static final org.joda.time.DateTimeZone UTC;

  private static org.joda.time.tz.Provider cProvider;

  private static org.joda.time.tz.NameProvider cNameProvider;

  private static java.util.Set<java.lang.String> cAvailableIDs;

  private static volatile org.joda.time.DateTimeZone cDefault;

  private static org.joda.time.format.DateTimeFormatter cOffsetFormatter;

  private static java.util.Map<java.lang.String, java.lang.ref.SoftReference<org.joda.time.DateTimeZone>> iFixedOffsetCache;

  private static java.util.Map<java.lang.String, java.lang.String> cZoneIdConversion;

  private final java.lang.String iID;

  public static org.joda.time.DateTimeZone getDefault();
    Code:
       0: getstatic     #1                  // Field cDefault:Lorg/joda/time/DateTimeZone;
       3: astore_0
       4: aload_0
       5: ifnonnull     84
       8: ldc_w         #2                  // class org/joda/time/DateTimeZone
      11: dup
      12: astore_1
      13: monitorenter
      14: getstatic     #1                  // Field cDefault:Lorg/joda/time/DateTimeZone;
      17: astore_0
      18: aload_0
      19: ifnonnull     72
      22: aconst_null
      23: astore_2
      24: ldc           #3                  // String user.timezone
      26: invokestatic  #4                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      29: astore_3
      30: aload_3
      31: ifnull        39
      34: aload_3
      35: invokestatic  #5                  // Method forID:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
      38: astore_2
      39: goto          43
      42: astore_3
      43: aload_2
      44: ifnonnull     54
      47: invokestatic  #7                  // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;
      50: invokestatic  #8                  // Method forTimeZone:(Ljava/util/TimeZone;)Lorg/joda/time/DateTimeZone;
      53: astore_2
      54: goto          58
      57: astore_3
      58: aload_2
      59: ifnonnull     66
      62: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
      65: astore_2
      66: aload_2
      67: dup
      68: astore_0
      69: putstatic     #1                  // Field cDefault:Lorg/joda/time/DateTimeZone;
      72: aload_1
      73: monitorexit
      74: goto          84
      77: astore        4
      79: aload_1
      80: monitorexit
      81: aload         4
      83: athrow
      84: aload_0
      85: areturn
    Exception table:
       from    to  target type
          24    39    42   Class java/lang/RuntimeException
          24    54    57   Class java/lang/IllegalArgumentException
          14    74    77   any
          77    81    77   any

  public static void setDefault(org.joda.time.DateTimeZone) throws java.lang.SecurityException;
    Code:
       0: invokestatic  #11                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        21
       8: aload_1
       9: new           #12                 // class org/joda/time/JodaTimePermission
      12: dup
      13: ldc           #13                 // String DateTimeZone.setDefault
      15: invokespecial #14                 // Method org/joda/time/JodaTimePermission."<init>":(Ljava/lang/String;)V
      18: invokevirtual #15                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      21: aload_0
      22: ifnonnull     35
      25: new           #9                  // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #16                 // String The datetime zone must not be null
      31: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: ldc_w         #2                  // class org/joda/time/DateTimeZone
      38: dup
      39: astore_2
      40: monitorenter
      41: aload_0
      42: putstatic     #1                  // Field cDefault:Lorg/joda/time/DateTimeZone;
      45: aload_2
      46: monitorexit
      47: goto          55
      50: astore_3
      51: aload_2
      52: monitorexit
      53: aload_3
      54: athrow
      55: return
    Exception table:
       from    to  target type
          41    47    50   any
          50    53    50   any

  public static org.joda.time.DateTimeZone forID(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #18                 // Method getDefault:()Lorg/joda/time/DateTimeZone;
       7: areturn
       8: aload_0
       9: ldc           #19                 // String UTC
      11: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
      20: areturn
      21: getstatic     #21                 // Field cProvider:Lorg/joda/time/tz/Provider;
      24: aload_0
      25: invokeinterface #22,  2           // InterfaceMethod org/joda/time/tz/Provider.getZone:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
      30: astore_1
      31: aload_1
      32: ifnull        37
      35: aload_1
      36: areturn
      37: aload_0
      38: ldc           #23                 // String +
      40: invokevirtual #24                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      43: ifne          55
      46: aload_0
      47: ldc           #25                 // String -
      49: invokevirtual #24                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      52: ifeq          82
      55: aload_0
      56: invokestatic  #26                 // Method parseOffset:(Ljava/lang/String;)I
      59: istore_2
      60: iload_2
      61: i2l
      62: lconst_0
      63: lcmp
      64: ifne          71
      67: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
      70: areturn
      71: iload_2
      72: invokestatic  #27                 // Method printOffset:(I)Ljava/lang/String;
      75: astore_0
      76: aload_0
      77: iload_2
      78: invokestatic  #28                 // Method fixedOffsetZone:(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;
      81: areturn
      82: new           #9                  // class java/lang/IllegalArgumentException
      85: dup
      86: new           #29                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #31                 // String The datetime zone id \'
      95: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #33                 // String \' is not recognised
     104: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     113: athrow

  public static org.joda.time.DateTimeZone forOffsetHours(int) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_0
       1: iconst_0
       2: invokestatic  #35                 // Method forOffsetHoursMinutes:(II)Lorg/joda/time/DateTimeZone;
       5: areturn

  public static org.joda.time.DateTimeZone forOffsetHoursMinutes(int, int) throws java.lang.IllegalArgumentException;
    Code:
       0: iload_0
       1: ifne          12
       4: iload_1
       5: ifne          12
       8: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
      11: areturn
      12: iload_1
      13: iflt          22
      16: iload_1
      17: bipush        59
      19: if_icmple     49
      22: new           #9                  // class java/lang/IllegalArgumentException
      25: dup
      26: new           #29                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #36                 // String Minutes out of range:
      35: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_1
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: iconst_0
      50: istore_2
      51: iload_0
      52: bipush        60
      54: invokestatic  #38                 // Method org/joda/time/field/FieldUtils.safeMultiply:(II)I
      57: istore_3
      58: iload_3
      59: ifge          72
      62: iload_3
      63: iload_1
      64: ineg
      65: invokestatic  #39                 // Method org/joda/time/field/FieldUtils.safeAdd:(II)I
      68: istore_1
      69: goto          78
      72: iload_3
      73: iload_1
      74: invokestatic  #39                 // Method org/joda/time/field/FieldUtils.safeAdd:(II)I
      77: istore_1
      78: iload_1
      79: ldc           #40                 // int 60000
      81: invokestatic  #38                 // Method org/joda/time/field/FieldUtils.safeMultiply:(II)I
      84: istore_2
      85: goto          99
      88: astore_3
      89: new           #9                  // class java/lang/IllegalArgumentException
      92: dup
      93: ldc           #42                 // String Offset is too large
      95: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: iload_2
     100: invokestatic  #43                 // Method forOffsetMillis:(I)Lorg/joda/time/DateTimeZone;
     103: areturn
    Exception table:
       from    to  target type
          51    85    88   Class java/lang/ArithmeticException

  public static org.joda.time.DateTimeZone forOffsetMillis(int);
    Code:
       0: iload_0
       1: invokestatic  #27                 // Method printOffset:(I)Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: iload_0
       7: invokestatic  #28                 // Method fixedOffsetZone:(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;
      10: areturn

  public static org.joda.time.DateTimeZone forTimeZone(java.util.TimeZone);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #18                 // Method getDefault:()Lorg/joda/time/DateTimeZone;
       7: areturn
       8: aload_0
       9: invokevirtual #44                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      12: astore_1
      13: aload_1
      14: ldc           #19                 // String UTC
      16: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
      25: areturn
      26: aconst_null
      27: astore_2
      28: aload_1
      29: invokestatic  #45                 // Method getConvertedId:(Ljava/lang/String;)Ljava/lang/String;
      32: astore_3
      33: aload_3
      34: ifnull        47
      37: getstatic     #21                 // Field cProvider:Lorg/joda/time/tz/Provider;
      40: aload_3
      41: invokeinterface #22,  2           // InterfaceMethod org/joda/time/tz/Provider.getZone:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
      46: astore_2
      47: aload_2
      48: ifnonnull     61
      51: getstatic     #21                 // Field cProvider:Lorg/joda/time/tz/Provider;
      54: aload_1
      55: invokeinterface #22,  2           // InterfaceMethod org/joda/time/tz/Provider.getZone:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
      60: astore_2
      61: aload_2
      62: ifnull        67
      65: aload_2
      66: areturn
      67: aload_3
      68: ifnonnull     131
      71: aload_0
      72: invokevirtual #44                 // Method java/util/TimeZone.getID:()Ljava/lang/String;
      75: astore_3
      76: aload_3
      77: ldc           #46                 // String GMT+
      79: invokevirtual #24                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      82: ifne          94
      85: aload_3
      86: ldc           #47                 // String GMT-
      88: invokevirtual #24                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      91: ifeq          131
      94: aload_3
      95: iconst_3
      96: invokevirtual #48                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      99: astore_3
     100: aload_3
     101: invokestatic  #26                 // Method parseOffset:(Ljava/lang/String;)I
     104: istore        4
     106: iload         4
     108: i2l
     109: lconst_0
     110: lcmp
     111: ifne          118
     114: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
     117: areturn
     118: iload         4
     120: invokestatic  #27                 // Method printOffset:(I)Ljava/lang/String;
     123: astore_3
     124: aload_3
     125: iload         4
     127: invokestatic  #28                 // Method fixedOffsetZone:(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;
     130: areturn
     131: new           #9                  // class java/lang/IllegalArgumentException
     134: dup
     135: new           #29                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #31                 // String The datetime zone id \'
     144: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_1
     148: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: ldc           #33                 // String \' is not recognised
     153: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     162: athrow

  private static synchronized org.joda.time.DateTimeZone fixedOffsetZone(java.lang.String, int);
    Code:
       0: iload_1
       1: ifne          8
       4: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
       7: areturn
       8: getstatic     #49                 // Field iFixedOffsetCache:Ljava/util/Map;
      11: ifnonnull     24
      14: new           #50                 // class java/util/HashMap
      17: dup
      18: invokespecial #51                 // Method java/util/HashMap."<init>":()V
      21: putstatic     #49                 // Field iFixedOffsetCache:Ljava/util/Map;
      24: getstatic     #49                 // Field iFixedOffsetCache:Ljava/util/Map;
      27: aload_0
      28: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      33: checkcast     #53                 // class java/lang/ref/Reference
      36: astore_3
      37: aload_3
      38: ifnull        55
      41: aload_3
      42: invokevirtual #54                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      45: checkcast     #2                  // class org/joda/time/DateTimeZone
      48: astore_2
      49: aload_2
      50: ifnull        55
      53: aload_2
      54: areturn
      55: new           #55                 // class org/joda/time/tz/FixedDateTimeZone
      58: dup
      59: aload_0
      60: aconst_null
      61: iload_1
      62: iload_1
      63: invokespecial #56                 // Method org/joda/time/tz/FixedDateTimeZone."<init>":(Ljava/lang/String;Ljava/lang/String;II)V
      66: astore_2
      67: getstatic     #49                 // Field iFixedOffsetCache:Ljava/util/Map;
      70: aload_0
      71: new           #57                 // class java/lang/ref/SoftReference
      74: dup
      75: aload_2
      76: invokespecial #58                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      79: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload_2
      86: areturn

  public static java.util.Set<java.lang.String> getAvailableIDs();
    Code:
       0: getstatic     #60                 // Field cAvailableIDs:Ljava/util/Set;
       3: areturn

  public static org.joda.time.tz.Provider getProvider();
    Code:
       0: getstatic     #21                 // Field cProvider:Lorg/joda/time/tz/Provider;
       3: areturn

  public static void setProvider(org.joda.time.tz.Provider) throws java.lang.SecurityException;
    Code:
       0: invokestatic  #11                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        21
       8: aload_1
       9: new           #12                 // class org/joda/time/JodaTimePermission
      12: dup
      13: ldc           #61                 // String DateTimeZone.setProvider
      15: invokespecial #14                 // Method org/joda/time/JodaTimePermission."<init>":(Ljava/lang/String;)V
      18: invokevirtual #15                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      21: aload_0
      22: invokestatic  #62                 // Method setProvider0:(Lorg/joda/time/tz/Provider;)V
      25: return

  private static void setProvider0(org.joda.time.tz.Provider);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #63                 // Method getDefaultProvider:()Lorg/joda/time/tz/Provider;
       7: astore_0
       8: aload_0
       9: invokeinterface #64,  1           // InterfaceMethod org/joda/time/tz/Provider.getAvailableIDs:()Ljava/util/Set;
      14: astore_1
      15: aload_1
      16: ifnull        28
      19: aload_1
      20: invokeinterface #65,  1           // InterfaceMethod java/util/Set.size:()I
      25: ifne          38
      28: new           #9                  // class java/lang/IllegalArgumentException
      31: dup
      32: ldc           #66                 // String The provider doesn\'t have any available ids
      34: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: ldc           #19                 // String UTC
      41: invokeinterface #67,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      46: ifne          59
      49: new           #9                  // class java/lang/IllegalArgumentException
      52: dup
      53: ldc           #68                 // String The provider doesn\'t support UTC
      55: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: getstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
      62: aload_0
      63: ldc           #19                 // String UTC
      65: invokeinterface #22,  2           // InterfaceMethod org/joda/time/tz/Provider.getZone:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
      70: invokevirtual #69                 // Method equals:(Ljava/lang/Object;)Z
      73: ifne          86
      76: new           #9                  // class java/lang/IllegalArgumentException
      79: dup
      80: ldc           #70                 // String Invalid UTC zone provided
      82: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: aload_0
      87: putstatic     #21                 // Field cProvider:Lorg/joda/time/tz/Provider;
      90: aload_1
      91: putstatic     #60                 // Field cAvailableIDs:Ljava/util/Set;
      94: return

  private static org.joda.time.tz.Provider getDefaultProvider();
    Code:
       0: aconst_null
       1: astore_0
       2: ldc           #71                 // String org.joda.time.DateTimeZone.Provider
       4: invokestatic  #4                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ifnull        40
      12: aload_1
      13: invokestatic  #72                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      16: invokevirtual #73                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      19: checkcast     #74                 // class org/joda/time/tz/Provider
      22: astore_0
      23: goto          40
      26: astore_2
      27: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      30: astore_3
      31: aload_3
      32: invokevirtual #77                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      35: aload_3
      36: aload_2
      37: invokevirtual #78                 // Method java/lang/ThreadGroup.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      40: goto          44
      43: astore_1
      44: aload_0
      45: ifnonnull     75
      48: new           #80                 // class org/joda/time/tz/ZoneInfoProvider
      51: dup
      52: ldc           #81                 // String org/joda/time/tz/data
      54: invokespecial #82                 // Method org/joda/time/tz/ZoneInfoProvider."<init>":(Ljava/lang/String;)V
      57: astore_0
      58: goto          75
      61: astore_1
      62: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      65: astore_2
      66: aload_2
      67: invokevirtual #77                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      70: aload_2
      71: aload_1
      72: invokevirtual #78                 // Method java/lang/ThreadGroup.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      75: aload_0
      76: ifnonnull     87
      79: new           #83                 // class org/joda/time/tz/UTCProvider
      82: dup
      83: invokespecial #84                 // Method org/joda/time/tz/UTCProvider."<init>":()V
      86: astore_0
      87: aload_0
      88: areturn
    Exception table:
       from    to  target type
          12    23    26   Class java/lang/Exception
           2    40    43   Class java/lang/SecurityException
          48    58    61   Class java/lang/Exception

  public static org.joda.time.tz.NameProvider getNameProvider();
    Code:
       0: getstatic     #85                 // Field cNameProvider:Lorg/joda/time/tz/NameProvider;
       3: areturn

  public static void setNameProvider(org.joda.time.tz.NameProvider) throws java.lang.SecurityException;
    Code:
       0: invokestatic  #11                 // Method java/lang/System.getSecurityManager:()Ljava/lang/SecurityManager;
       3: astore_1
       4: aload_1
       5: ifnull        21
       8: aload_1
       9: new           #12                 // class org/joda/time/JodaTimePermission
      12: dup
      13: ldc           #86                 // String DateTimeZone.setNameProvider
      15: invokespecial #14                 // Method org/joda/time/JodaTimePermission."<init>":(Ljava/lang/String;)V
      18: invokevirtual #15                 // Method java/lang/SecurityManager.checkPermission:(Ljava/security/Permission;)V
      21: aload_0
      22: invokestatic  #87                 // Method setNameProvider0:(Lorg/joda/time/tz/NameProvider;)V
      25: return

  private static void setNameProvider0(org.joda.time.tz.NameProvider);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #88                 // Method getDefaultNameProvider:()Lorg/joda/time/tz/NameProvider;
       7: astore_0
       8: aload_0
       9: putstatic     #85                 // Field cNameProvider:Lorg/joda/time/tz/NameProvider;
      12: return

  private static org.joda.time.tz.NameProvider getDefaultNameProvider();
    Code:
       0: aconst_null
       1: astore_0
       2: ldc           #89                 // String org.joda.time.DateTimeZone.NameProvider
       4: invokestatic  #4                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: astore_1
       8: aload_1
       9: ifnull        40
      12: aload_1
      13: invokestatic  #72                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      16: invokevirtual #73                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      19: checkcast     #90                 // class org/joda/time/tz/NameProvider
      22: astore_0
      23: goto          40
      26: astore_2
      27: invokestatic  #76                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      30: astore_3
      31: aload_3
      32: invokevirtual #77                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      35: aload_3
      36: aload_2
      37: invokevirtual #78                 // Method java/lang/ThreadGroup.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V
      40: goto          44
      43: astore_1
      44: aload_0
      45: ifnonnull     56
      48: new           #91                 // class org/joda/time/tz/DefaultNameProvider
      51: dup
      52: invokespecial #92                 // Method org/joda/time/tz/DefaultNameProvider."<init>":()V
      55: astore_0
      56: aload_0
      57: areturn
    Exception table:
       from    to  target type
          12    23    26   Class java/lang/Exception
           2    40    43   Class java/lang/SecurityException

  private static synchronized java.lang.String getConvertedId(java.lang.String);
    Code:
       0: getstatic     #93                 // Field cZoneIdConversion:Ljava/util/Map;
       3: astore_1
       4: aload_1
       5: ifnonnull     383
       8: new           #50                 // class java/util/HashMap
      11: dup
      12: invokespecial #51                 // Method java/util/HashMap."<init>":()V
      15: astore_1
      16: aload_1
      17: ldc           #94                 // String GMT
      19: ldc           #19                 // String UTC
      21: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: aload_1
      28: ldc           #95                 // String WET
      30: ldc           #95                 // String WET
      32: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_1
      39: ldc           #96                 // String CET
      41: ldc           #96                 // String CET
      43: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_1
      50: ldc           #97                 // String MET
      52: ldc           #96                 // String CET
      54: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_1
      61: ldc           #98                 // String ECT
      63: ldc           #96                 // String CET
      65: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: aload_1
      72: ldc           #99                 // String EET
      74: ldc           #99                 // String EET
      76: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: aload_1
      83: ldc           #100                // String MIT
      85: ldc           #101                // String Pacific/Apia
      87: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_1
      94: ldc           #102                // String HST
      96: ldc           #103                // String Pacific/Honolulu
      98: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_1
     105: ldc           #104                // String AST
     107: ldc           #105                // String America/Anchorage
     109: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: aload_1
     116: ldc           #106                // String PST
     118: ldc           #107                // String America/Los_Angeles
     120: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     125: pop
     126: aload_1
     127: ldc           #108                // String MST
     129: ldc           #109                // String America/Denver
     131: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     136: pop
     137: aload_1
     138: ldc           #110                // String PNT
     140: ldc           #111                // String America/Phoenix
     142: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     147: pop
     148: aload_1
     149: ldc           #112                // String CST
     151: ldc           #113                // String America/Chicago
     153: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: aload_1
     160: ldc           #114                // String EST
     162: ldc           #115                // String America/New_York
     164: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     169: pop
     170: aload_1
     171: ldc           #116                // String IET
     173: ldc           #117                // String America/Indiana/Indianapolis
     175: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: aload_1
     182: ldc           #118                // String PRT
     184: ldc           #119                // String America/Puerto_Rico
     186: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     191: pop
     192: aload_1
     193: ldc           #120                // String CNT
     195: ldc           #121                // String America/St_Johns
     197: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     202: pop
     203: aload_1
     204: ldc           #122                // String AGT
     206: ldc           #123                // String America/Argentina/Buenos_Aires
     208: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     213: pop
     214: aload_1
     215: ldc           #124                // String BET
     217: ldc           #125                // String America/Sao_Paulo
     219: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     224: pop
     225: aload_1
     226: ldc           #126                // String ART
     228: ldc           #127                // String Africa/Cairo
     230: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     235: pop
     236: aload_1
     237: ldc           #128                // String CAT
     239: ldc           #129                // String Africa/Harare
     241: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     246: pop
     247: aload_1
     248: ldc           #130                // String EAT
     250: ldc           #131                // String Africa/Addis_Ababa
     252: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     257: pop
     258: aload_1
     259: ldc           #132                // String NET
     261: ldc           #133                // String Asia/Yerevan
     263: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     268: pop
     269: aload_1
     270: ldc           #134                // String PLT
     272: ldc           #135                // String Asia/Karachi
     274: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     279: pop
     280: aload_1
     281: ldc           #136                // String IST
     283: ldc           #137                // String Asia/Kolkata
     285: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     290: pop
     291: aload_1
     292: ldc           #138                // String BST
     294: ldc           #139                // String Asia/Dhaka
     296: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     301: pop
     302: aload_1
     303: ldc           #140                // String VST
     305: ldc           #141                // String Asia/Ho_Chi_Minh
     307: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     312: pop
     313: aload_1
     314: ldc           #142                // String CTT
     316: ldc           #143                // String Asia/Shanghai
     318: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     323: pop
     324: aload_1
     325: ldc           #144                // String JST
     327: ldc           #145                // String Asia/Tokyo
     329: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     334: pop
     335: aload_1
     336: ldc           #146                // String ACT
     338: ldc           #147                // String Australia/Darwin
     340: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     345: pop
     346: aload_1
     347: ldc           #148                // String AET
     349: ldc           #149                // String Australia/Sydney
     351: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     356: pop
     357: aload_1
     358: ldc           #150                // String SST
     360: ldc           #151                // String Pacific/Guadalcanal
     362: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     367: pop
     368: aload_1
     369: ldc           #152                // String NST
     371: ldc           #153                // String Pacific/Auckland
     373: invokeinterface #59,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     378: pop
     379: aload_1
     380: putstatic     #93                 // Field cZoneIdConversion:Ljava/util/Map;
     383: aload_1
     384: aload_0
     385: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     390: checkcast     #154                // class java/lang/String
     393: areturn

  private static int parseOffset(java.lang.String);
    Code:
       0: new           #155                // class org/joda/time/DateTimeZone$1
       3: dup
       4: invokespecial #156                // Method org/joda/time/DateTimeZone$1."<init>":()V
       7: astore_1
       8: invokestatic  #157                // Method offsetFormatter:()Lorg/joda/time/format/DateTimeFormatter;
      11: aload_1
      12: invokevirtual #158                // Method org/joda/time/format/DateTimeFormatter.withChronology:(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;
      15: aload_0
      16: invokevirtual #159                // Method org/joda/time/format/DateTimeFormatter.parseMillis:(Ljava/lang/String;)J
      19: l2i
      20: ineg
      21: ireturn

  private static java.lang.String printOffset(int);
    Code:
       0: new           #160                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #161                // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: iload_0
       9: iflt          22
      12: aload_1
      13: bipush        43
      15: invokevirtual #162                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      18: pop
      19: goto          32
      22: aload_1
      23: bipush        45
      25: invokevirtual #162                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      28: pop
      29: iload_0
      30: ineg
      31: istore_0
      32: iload_0
      33: ldc           #163                // int 3600000
      35: idiv
      36: istore_2
      37: aload_1
      38: iload_2
      39: iconst_2
      40: invokestatic  #164                // Method org/joda/time/format/FormatUtils.appendPaddedInteger:(Ljava/lang/StringBuffer;II)V
      43: iload_0
      44: iload_2
      45: ldc           #163                // int 3600000
      47: imul
      48: isub
      49: istore_0
      50: iload_0
      51: ldc           #40                 // int 60000
      53: idiv
      54: istore_3
      55: aload_1
      56: bipush        58
      58: invokevirtual #162                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      61: pop
      62: aload_1
      63: iload_3
      64: iconst_2
      65: invokestatic  #164                // Method org/joda/time/format/FormatUtils.appendPaddedInteger:(Ljava/lang/StringBuffer;II)V
      68: iload_0
      69: iload_3
      70: ldc           #40                 // int 60000
      72: imul
      73: isub
      74: istore_0
      75: iload_0
      76: ifne          84
      79: aload_1
      80: invokevirtual #165                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      83: areturn
      84: iload_0
      85: sipush        1000
      88: idiv
      89: istore        4
      91: aload_1
      92: bipush        58
      94: invokevirtual #162                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      97: pop
      98: aload_1
      99: iload         4
     101: iconst_2
     102: invokestatic  #164                // Method org/joda/time/format/FormatUtils.appendPaddedInteger:(Ljava/lang/StringBuffer;II)V
     105: iload_0
     106: iload         4
     108: sipush        1000
     111: imul
     112: isub
     113: istore_0
     114: iload_0
     115: ifne          123
     118: aload_1
     119: invokevirtual #165                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     122: areturn
     123: aload_1
     124: bipush        46
     126: invokevirtual #162                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     129: pop
     130: aload_1
     131: iload_0
     132: iconst_3
     133: invokestatic  #164                // Method org/joda/time/format/FormatUtils.appendPaddedInteger:(Ljava/lang/StringBuffer;II)V
     136: aload_1
     137: invokevirtual #165                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     140: areturn

  private static synchronized org.joda.time.format.DateTimeFormatter offsetFormatter();
    Code:
       0: getstatic     #166                // Field cOffsetFormatter:Lorg/joda/time/format/DateTimeFormatter;
       3: ifnonnull     26
       6: new           #167                // class org/joda/time/format/DateTimeFormatterBuilder
       9: dup
      10: invokespecial #168                // Method org/joda/time/format/DateTimeFormatterBuilder."<init>":()V
      13: aconst_null
      14: iconst_1
      15: iconst_2
      16: iconst_4
      17: invokevirtual #169                // Method org/joda/time/format/DateTimeFormatterBuilder.appendTimeZoneOffset:(Ljava/lang/String;ZII)Lorg/joda/time/format/DateTimeFormatterBuilder;
      20: invokevirtual #170                // Method org/joda/time/format/DateTimeFormatterBuilder.toFormatter:()Lorg/joda/time/format/DateTimeFormatter;
      23: putstatic     #166                // Field cOffsetFormatter:Lorg/joda/time/format/DateTimeFormatter;
      26: getstatic     #166                // Field cOffsetFormatter:Lorg/joda/time/format/DateTimeFormatter;
      29: areturn

  protected org.joda.time.DateTimeZone(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #171                // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #9                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #172                // String Id must not be null
      14: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #173                // Field iID:Ljava/lang/String;
      23: return

  public final java.lang.String getID();
    Code:
       0: aload_0
       1: getfield      #173                // Field iID:Ljava/lang/String;
       4: areturn

  public abstract java.lang.String getNameKey(long);

  public final java.lang.String getShortName(long);
    Code:
       0: aload_0
       1: lload_1
       2: aconst_null
       3: invokevirtual #174                // Method getShortName:(JLjava/util/Locale;)Ljava/lang/String;
       6: areturn

  public java.lang.String getShortName(long, java.util.Locale);
    Code:
       0: aload_3
       1: ifnonnull     8
       4: invokestatic  #175                // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       7: astore_3
       8: aload_0
       9: lload_1
      10: invokevirtual #176                // Method getNameKey:(J)Ljava/lang/String;
      13: astore        4
      15: aload         4
      17: ifnonnull     25
      20: aload_0
      21: getfield      #173                // Field iID:Ljava/lang/String;
      24: areturn
      25: getstatic     #85                 // Field cNameProvider:Lorg/joda/time/tz/NameProvider;
      28: aload_3
      29: aload_0
      30: getfield      #173                // Field iID:Ljava/lang/String;
      33: aload         4
      35: invokeinterface #177,  4          // InterfaceMethod org/joda/time/tz/NameProvider.getShortName:(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ifnull        50
      47: aload         5
      49: areturn
      50: aload_0
      51: lload_1
      52: invokevirtual #178                // Method getOffset:(J)I
      55: invokestatic  #27                 // Method printOffset:(I)Ljava/lang/String;
      58: areturn

  public final java.lang.String getName(long);
    Code:
       0: aload_0
       1: lload_1
       2: aconst_null
       3: invokevirtual #179                // Method getName:(JLjava/util/Locale;)Ljava/lang/String;
       6: areturn

  public java.lang.String getName(long, java.util.Locale);
    Code:
       0: aload_3
       1: ifnonnull     8
       4: invokestatic  #175                // Method java/util/Locale.getDefault:()Ljava/util/Locale;
       7: astore_3
       8: aload_0
       9: lload_1
      10: invokevirtual #176                // Method getNameKey:(J)Ljava/lang/String;
      13: astore        4
      15: aload         4
      17: ifnonnull     25
      20: aload_0
      21: getfield      #173                // Field iID:Ljava/lang/String;
      24: areturn
      25: getstatic     #85                 // Field cNameProvider:Lorg/joda/time/tz/NameProvider;
      28: aload_3
      29: aload_0
      30: getfield      #173                // Field iID:Ljava/lang/String;
      33: aload         4
      35: invokeinterface #180,  4          // InterfaceMethod org/joda/time/tz/NameProvider.getName:(Ljava/util/Locale;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ifnull        50
      47: aload         5
      49: areturn
      50: aload_0
      51: lload_1
      52: invokevirtual #178                // Method getOffset:(J)I
      55: invokestatic  #27                 // Method printOffset:(I)Ljava/lang/String;
      58: areturn

  public abstract int getOffset(long);

  public final int getOffset(org.joda.time.ReadableInstant);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: invokestatic  #181                // Method org/joda/time/DateTimeUtils.currentTimeMillis:()J
       8: invokevirtual #178                // Method getOffset:(J)I
      11: ireturn
      12: aload_0
      13: aload_1
      14: invokeinterface #182,  1          // InterfaceMethod org/joda/time/ReadableInstant.getMillis:()J
      19: invokevirtual #178                // Method getOffset:(J)I
      22: ireturn

  public abstract int getStandardOffset(long);

  public boolean isStandardOffset(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #178                // Method getOffset:(J)I
       5: aload_0
       6: lload_1
       7: invokevirtual #183                // Method getStandardOffset:(J)I
      10: if_icmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public int getOffsetFromLocal(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #178                // Method getOffset:(J)I
       5: istore_3
       6: lload_1
       7: iload_3
       8: i2l
       9: lsub
      10: lstore        4
      12: aload_0
      13: lload         4
      15: invokevirtual #178                // Method getOffset:(J)I
      18: istore        6
      20: iload_3
      21: iload         6
      23: if_icmpeq     65
      26: iload_3
      27: iload         6
      29: isub
      30: ifge          114
      33: aload_0
      34: lload         4
      36: invokevirtual #184                // Method nextTransition:(J)J
      39: lstore        7
      41: aload_0
      42: lload_1
      43: iload         6
      45: i2l
      46: lsub
      47: invokevirtual #184                // Method nextTransition:(J)J
      50: lstore        9
      52: lload         7
      54: lload         9
      56: lcmp
      57: ifeq          62
      60: iload_3
      61: ireturn
      62: goto          114
      65: iload_3
      66: iflt          114
      69: aload_0
      70: lload         4
      72: invokevirtual #185                // Method previousTransition:(J)J
      75: lstore        7
      77: lload         7
      79: lload         4
      81: lcmp
      82: ifge          114
      85: aload_0
      86: lload         7
      88: invokevirtual #178                // Method getOffset:(J)I
      91: istore        9
      93: iload         9
      95: iload_3
      96: isub
      97: istore        10
      99: lload         4
     101: lload         7
     103: lsub
     104: iload         10
     106: i2l
     107: lcmp
     108: ifgt          114
     111: iload         9
     113: ireturn
     114: iload         6
     116: ireturn

  public long convertUTCToLocal(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #178                // Method getOffset:(J)I
       5: istore_3
       6: lload_1
       7: iload_3
       8: i2l
       9: ladd
      10: lstore        4
      12: lload_1
      13: lload         4
      15: lxor
      16: lconst_0
      17: lcmp
      18: ifge          40
      21: lload_1
      22: iload_3
      23: i2l
      24: lxor
      25: lconst_0
      26: lcmp
      27: iflt          40
      30: new           #41                 // class java/lang/ArithmeticException
      33: dup
      34: ldc           #186                // String Adding time zone offset caused overflow
      36: invokespecial #187                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: lload         4
      42: lreturn

  public long convertLocalToUTC(long, boolean, long);
    Code:
       0: aload_0
       1: lload         4
       3: invokevirtual #178                // Method getOffset:(J)I
       6: istore        6
       8: lload_1
       9: iload         6
      11: i2l
      12: lsub
      13: lstore        7
      15: aload_0
      16: lload         7
      18: invokevirtual #178                // Method getOffset:(J)I
      21: istore        9
      23: iload         9
      25: iload         6
      27: if_icmpne     33
      30: lload         7
      32: lreturn
      33: aload_0
      34: lload_1
      35: iload_3
      36: invokevirtual #188                // Method convertLocalToUTC:(JZ)J
      39: lreturn

  public long convertLocalToUTC(long, boolean);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #178                // Method getOffset:(J)I
       5: istore        4
       7: aload_0
       8: lload_1
       9: iload         4
      11: i2l
      12: lsub
      13: invokevirtual #178                // Method getOffset:(J)I
      16: istore        5
      18: iload         4
      20: iload         5
      22: if_icmpeq     117
      25: iload_3
      26: ifne          34
      29: iload         4
      31: ifge          117
      34: aload_0
      35: lload_1
      36: iload         4
      38: i2l
      39: lsub
      40: invokevirtual #184                // Method nextTransition:(J)J
      43: lstore        6
      45: lload         6
      47: lload_1
      48: iload         4
      50: i2l
      51: lsub
      52: lcmp
      53: ifne          61
      56: ldc2_w        #189                // long 9223372036854775807l
      59: lstore        6
      61: aload_0
      62: lload_1
      63: iload         5
      65: i2l
      66: lsub
      67: invokevirtual #184                // Method nextTransition:(J)J
      70: lstore        8
      72: lload         8
      74: lload_1
      75: iload         5
      77: i2l
      78: lsub
      79: lcmp
      80: ifne          88
      83: ldc2_w        #189                // long 9223372036854775807l
      86: lstore        8
      88: lload         6
      90: lload         8
      92: lcmp
      93: ifeq          117
      96: iload_3
      97: ifeq          113
     100: new           #191                // class org/joda/time/IllegalInstantException
     103: dup
     104: lload_1
     105: aload_0
     106: invokevirtual #192                // Method getID:()Ljava/lang/String;
     109: invokespecial #193                // Method org/joda/time/IllegalInstantException."<init>":(JLjava/lang/String;)V
     112: athrow
     113: iload         4
     115: istore        5
     117: lload_1
     118: iload         5
     120: i2l
     121: lsub
     122: lstore        6
     124: lload_1
     125: lload         6
     127: lxor
     128: lconst_0
     129: lcmp
     130: ifge          153
     133: lload_1
     134: iload         5
     136: i2l
     137: lxor
     138: lconst_0
     139: lcmp
     140: ifge          153
     143: new           #41                 // class java/lang/ArithmeticException
     146: dup
     147: ldc           #194                // String Subtracting time zone offset caused overflow
     149: invokespecial #187                // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: lload         6
     155: lreturn

  public long getMillisKeepLocal(org.joda.time.DateTimeZone, long);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #18                 // Method getDefault:()Lorg/joda/time/DateTimeZone;
       7: astore_1
       8: aload_1
       9: aload_0
      10: if_acmpne     15
      13: lload_2
      14: lreturn
      15: aload_0
      16: lload_2
      17: invokevirtual #195                // Method convertUTCToLocal:(J)J
      20: lstore        4
      22: aload_1
      23: lload         4
      25: iconst_0
      26: lload_2
      27: invokevirtual #196                // Method convertLocalToUTC:(JZJ)J
      30: lreturn

  public boolean isLocalDateTimeGap(org.joda.time.LocalDateTime);
    Code:
       0: aload_0
       1: invokevirtual #197                // Method isFixed:()Z
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: aload_0
      11: invokevirtual #198                // Method org/joda/time/LocalDateTime.toDateTime:(Lorg/joda/time/DateTimeZone;)Lorg/joda/time/DateTime;
      14: pop
      15: iconst_0
      16: ireturn
      17: astore_2
      18: iconst_1
      19: ireturn
    Exception table:
       from    to  target type
           9    16    17   Class org/joda/time/IllegalInstantException

  public long adjustOffset(long, boolean);
    Code:
       0: lload_1
       1: ldc2_w        #199                // long 10800000l
       4: lsub
       5: lstore        4
       7: lload_1
       8: ldc2_w        #199                // long 10800000l
      11: ladd
      12: lstore        6
      14: aload_0
      15: lload         4
      17: invokevirtual #178                // Method getOffset:(J)I
      20: i2l
      21: lstore        8
      23: aload_0
      24: lload         6
      26: invokevirtual #178                // Method getOffset:(J)I
      29: i2l
      30: lstore        10
      32: lload         8
      34: lload         10
      36: lcmp
      37: ifgt          42
      40: lload_1
      41: lreturn
      42: lload         8
      44: lload         10
      46: lsub
      47: lstore        12
      49: aload_0
      50: lload         4
      52: invokevirtual #184                // Method nextTransition:(J)J
      55: lstore        14
      57: lload         14
      59: lload         12
      61: lsub
      62: lstore        16
      64: lload         14
      66: lload         12
      68: ladd
      69: lstore        18
      71: lload_1
      72: lload         16
      74: lcmp
      75: iflt          85
      78: lload_1
      79: lload         18
      81: lcmp
      82: iflt          87
      85: lload_1
      86: lreturn
      87: lload_1
      88: lload         16
      90: lsub
      91: lstore        20
      93: lload         20
      95: lload         12
      97: lcmp
      98: iflt          114
     101: iload_3
     102: ifeq          109
     105: lload_1
     106: goto          113
     109: lload_1
     110: lload         12
     112: lsub
     113: lreturn
     114: iload_3
     115: ifeq          125
     118: lload_1
     119: lload         12
     121: ladd
     122: goto          126
     125: lload_1
     126: lreturn

  public abstract boolean isFixed();

  public abstract long nextTransition(long);

  public abstract long previousTransition(long);

  public java.util.TimeZone toTimeZone();
    Code:
       0: aload_0
       1: getfield      #173                // Field iID:Ljava/lang/String;
       4: invokestatic  #201                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;
       7: areturn

  public abstract boolean equals(java.lang.Object);

  public int hashCode();
    Code:
       0: bipush        57
       2: aload_0
       3: invokevirtual #192                // Method getID:()Ljava/lang/String;
       6: invokevirtual #202                // Method java/lang/String.hashCode:()I
       9: iadd
      10: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #192                // Method getID:()Ljava/lang/String;
       4: areturn

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: new           #203                // class org/joda/time/DateTimeZone$Stub
       3: dup
       4: aload_0
       5: getfield      #173                // Field iID:Ljava/lang/String;
       8: invokespecial #204                // Method org/joda/time/DateTimeZone$Stub."<init>":(Ljava/lang/String;)V
      11: areturn

  static {};
    Code:
       0: new           #55                 // class org/joda/time/tz/FixedDateTimeZone
       3: dup
       4: ldc           #19                 // String UTC
       6: ldc           #19                 // String UTC
       8: iconst_0
       9: iconst_0
      10: invokespecial #56                 // Method org/joda/time/tz/FixedDateTimeZone."<init>":(Ljava/lang/String;Ljava/lang/String;II)V
      13: putstatic     #10                 // Field UTC:Lorg/joda/time/DateTimeZone;
      16: aconst_null
      17: invokestatic  #62                 // Method setProvider0:(Lorg/joda/time/tz/Provider;)V
      20: aconst_null
      21: invokestatic  #87                 // Method setNameProvider0:(Lorg/joda/time/tz/NameProvider;)V
      24: return
}
