Compiled from "DateTimeFormatterBuilder.java"
final class org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId extends java.lang.Enum<org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId> implements org.joda.time.format.DateTimePrinter, org.joda.time.format.DateTimeParser {
  public static final org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId INSTANCE;

  static final java.util.Set<java.lang.String> ALL_IDS;

  static final int MAX_LENGTH;

  private static final org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[] $VALUES;

  public static final org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
       3: invokevirtual #2                  // Method "[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;"
       9: areturn

  public static org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
      10: areturn

  private org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public int estimatePrintedLength();
    Code:
       0: getstatic     #7                  // Field MAX_LENGTH:I
       3: ireturn

  public void printTo(java.lang.StringBuffer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale);
    Code:
       0: aload_1
       1: aload         6
       3: ifnull        14
       6: aload         6
       8: invokevirtual #8                  // Method org/joda/time/DateTimeZone.getID:()Ljava/lang/String;
      11: goto          16
      14: ldc           #9                  // String
      16: invokevirtual #10                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      19: pop
      20: return

  public void printTo(java.io.Writer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload         6
       3: ifnull        14
       6: aload         6
       8: invokevirtual #8                  // Method org/joda/time/DateTimeZone.getID:()Ljava/lang/String;
      11: goto          16
      14: ldc           #9                  // String
      16: invokevirtual #11                 // Method java/io/Writer.write:(Ljava/lang/String;)V
      19: return

  public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePartial, java.util.Locale);
    Code:
       0: return

  public void printTo(java.io.Writer, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException;
    Code:
       0: return

  public int estimateParsedLength();
    Code:
       0: getstatic     #7                  // Field MAX_LENGTH:I
       3: ireturn

  public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.String, int);
    Code:
       0: aload_2
       1: iload_3
       2: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;
       5: astore        4
       7: aconst_null
       8: astore        5
      10: getstatic     #13                 // Field ALL_IDS:Ljava/util/Set;
      13: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore        6
      20: aload         6
      22: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          77
      30: aload         6
      32: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #17                 // class java/lang/String
      40: astore        7
      42: aload         4
      44: aload         7
      46: invokevirtual #18                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifeq          74
      52: aload         5
      54: ifnull        70
      57: aload         7
      59: invokevirtual #19                 // Method java/lang/String.length:()I
      62: aload         5
      64: invokevirtual #19                 // Method java/lang/String.length:()I
      67: if_icmple     74
      70: aload         7
      72: astore        5
      74: goto          20
      77: aload         5
      79: ifnull        99
      82: aload_1
      83: aload         5
      85: invokestatic  #20                 // Method org/joda/time/DateTimeZone.forID:(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;
      88: invokevirtual #21                 // Method org/joda/time/format/DateTimeParserBucket.setZone:(Lorg/joda/time/DateTimeZone;)V
      91: iload_3
      92: aload         5
      94: invokevirtual #19                 // Method java/lang/String.length:()I
      97: iadd
      98: ireturn
      99: iload_3
     100: iconst_m1
     101: ixor
     102: ireturn

  static {};
    Code:
       0: new           #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
       3: dup
       4: ldc           #22                 // String INSTANCE
       6: iconst_0
       7: invokespecial #23                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #24                 // Field INSTANCE:Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
      13: iconst_1
      14: anewarray     #4                  // class org/joda/time/format/DateTimeFormatterBuilder$TimeZoneId
      17: dup
      18: iconst_0
      19: getstatic     #24                 // Field INSTANCE:Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
      22: aastore
      23: putstatic     #1                  // Field $VALUES:[Lorg/joda/time/format/DateTimeFormatterBuilder$TimeZoneId;
      26: invokestatic  #25                 // Method org/joda/time/DateTimeZone.getAvailableIDs:()Ljava/util/Set;
      29: putstatic     #13                 // Field ALL_IDS:Ljava/util/Set;
      32: iconst_0
      33: istore_0
      34: getstatic     #13                 // Field ALL_IDS:Ljava/util/Set;
      37: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore_1
      43: aload_1
      44: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          74
      52: aload_1
      53: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #17                 // class java/lang/String
      61: astore_2
      62: iload_0
      63: aload_2
      64: invokevirtual #19                 // Method java/lang/String.length:()I
      67: invokestatic  #26                 // Method java/lang/Math.max:(II)I
      70: istore_0
      71: goto          43
      74: iload_0
      75: putstatic     #7                  // Field MAX_LENGTH:I
      78: return
}
