Compiled from "TrinoThriftBigint.java"
public final class io.trino.plugin.thrift.api.datatypes.TrinoThriftBigint implements io.trino.plugin.thrift.api.datatypes.TrinoThriftColumnData {
  private final boolean[] nulls;

  private final long[] longs;

  public io.trino.plugin.thrift.api.datatypes.TrinoThriftBigint(boolean[], long[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: aload_2
       6: invokestatic  #7                  // Method sameSizeIfPresent:([Z[J)Z
       9: ldc           #13                 // String nulls and values must be of the same size
      11: invokestatic  #15                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      14: aload_0
      15: aload_1
      16: putfield      #21                 // Field nulls:[Z
      19: aload_0
      20: aload_2
      21: putfield      #25                 // Field longs:[J
      24: return

  public boolean[] getNulls();
    Code:
       0: aload_0
       1: getfield      #21                 // Field nulls:[Z
       4: areturn

  public long[] getLongs();
    Code:
       0: aload_0
       1: getfield      #25                 // Field longs:[J
       4: areturn

  public io.trino.spi.block.Block toBlock(io.trino.spi.type.Type);
    Code:
       0: getstatic     #29                 // Field io/trino/spi/type/BigintType.BIGINT:Lio/trino/spi/type/BigintType;
       3: aload_1
       4: invokevirtual #35                 // Method io/trino/spi/type/BigintType.equals:(Ljava/lang/Object;)Z
       7: ldc           #39                 // String type doesn\'t match: %s
       9: aload_1
      10: invokestatic  #41                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      13: aload_0
      14: invokevirtual #44                 // Method numberOfRecords:()I
      17: istore_2
      18: new           #48                 // class io/trino/spi/block/LongArrayBlock
      21: dup
      22: iload_2
      23: aload_0
      24: getfield      #21                 // Field nulls:[Z
      27: invokestatic  #50                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      30: aload_0
      31: getfield      #25                 // Field longs:[J
      34: ifnonnull     43
      37: iload_2
      38: newarray       long
      40: goto          47
      43: aload_0
      44: getfield      #25                 // Field longs:[J
      47: invokespecial #56                 // Method io/trino/spi/block/LongArrayBlock."<init>":(ILjava/util/Optional;[J)V
      50: areturn

  public int numberOfRecords();
    Code:
       0: aload_0
       1: getfield      #21                 // Field nulls:[Z
       4: ifnull        13
       7: aload_0
       8: getfield      #21                 // Field nulls:[Z
      11: arraylength
      12: ireturn
      13: aload_0
      14: getfield      #25                 // Field longs:[J
      17: ifnull        26
      20: aload_0
      21: getfield      #25                 // Field longs:[J
      24: arraylength
      25: ireturn
      26: iconst_0
      27: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #8                  // class io/trino/plugin/thrift/api/datatypes/TrinoThriftBigint
      28: astore_2
      29: aload_0
      30: getfield      #21                 // Field nulls:[Z
      33: aload_2
      34: getfield      #21                 // Field nulls:[Z
      37: invokestatic  #63                 // Method java/util/Arrays.equals:([Z[Z)Z
      40: ifeq          61
      43: aload_0
      44: getfield      #25                 // Field longs:[J
      47: aload_2
      48: getfield      #25                 // Field longs:[J
      51: invokestatic  #68                 // Method java/util/Arrays.equals:([J[J)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #2                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #21                 // Field nulls:[Z
      10: invokestatic  #71                 // Method java/util/Arrays.hashCode:([Z)I
      13: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #25                 // Field longs:[J
      23: invokestatic  #81                 // Method java/util/Arrays.hashCode:([J)I
      26: invokestatic  #75                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #84                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      33: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #90                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #96                 // String numberOfRecords
       6: aload_0
       7: invokevirtual #44                 // Method numberOfRecords:()I
      10: invokevirtual #97                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;I)Lcom/google/common/base/MoreObjects$ToStringHelper;
      13: invokevirtual #103                // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      16: areturn

  public static io.trino.plugin.thrift.api.TrinoThriftBlock fromBlock(io.trino.spi.block.Block);
    Code:
       0: aload_0
       1: getstatic     #29                 // Field io/trino/spi/type/BigintType.BIGINT:Lio/trino/spi/type/BigintType;
       4: invokedynamic #107,  0            // InvokeDynamic #0:apply:()Ljava/util/function/BiFunction;
       9: invokestatic  #111                // Method io/trino/plugin/thrift/api/datatypes/TrinoThriftTypeUtils.fromLongBasedBlock:(Lio/trino/spi/block/Block;Lio/trino/spi/type/Type;Ljava/util/function/BiFunction;)Lio/trino/plugin/thrift/api/TrinoThriftBlock;
      12: areturn

  public static io.trino.plugin.thrift.api.TrinoThriftBlock fromRecordSetColumn(io.trino.spi.connector.RecordSet, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokedynamic #117,  0            // InvokeDynamic #1:apply:()Ljava/util/function/BiFunction;
       8: invokestatic  #118                // Method io/trino/plugin/thrift/api/datatypes/TrinoThriftTypeUtils.fromLongBasedColumn:(Lio/trino/spi/connector/RecordSet;IILjava/util/function/BiFunction;)Lio/trino/plugin/thrift/api/TrinoThriftBlock;
      11: areturn

  private static boolean sameSizeIfPresent(boolean[], long[]);
    Code:
       0: aload_0
       1: ifnull        15
       4: aload_1
       5: ifnull        15
       8: aload_0
       9: arraylength
      10: aload_1
      11: arraylength
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private static io.trino.plugin.thrift.api.TrinoThriftBlock lambda$fromRecordSetColumn$1(boolean[], long[]);
    Code:
       0: new           #8                  // class io/trino/plugin/thrift/api/datatypes/TrinoThriftBigint
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #122                // Method "<init>":([Z[J)V
       9: invokestatic  #125                // Method io/trino/plugin/thrift/api/TrinoThriftBlock.bigintData:(Lio/trino/plugin/thrift/api/datatypes/TrinoThriftBigint;)Lio/trino/plugin/thrift/api/TrinoThriftBlock;
      12: areturn

  private static io.trino.plugin.thrift.api.TrinoThriftBlock lambda$fromBlock$0(boolean[], long[]);
    Code:
       0: new           #8                  // class io/trino/plugin/thrift/api/datatypes/TrinoThriftBigint
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #122                // Method "<init>":([Z[J)V
       9: invokestatic  #125                // Method io/trino/plugin/thrift/api/TrinoThriftBlock.bigintData:(Lio/trino/plugin/thrift/api/datatypes/TrinoThriftBigint;)Lio/trino/plugin/thrift/api/TrinoThriftBlock;
      12: areturn
}
