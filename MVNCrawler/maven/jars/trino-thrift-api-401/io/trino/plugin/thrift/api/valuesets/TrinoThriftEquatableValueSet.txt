Compiled from "TrinoThriftEquatableValueSet.java"
public final class io.trino.plugin.thrift.api.valuesets.TrinoThriftEquatableValueSet {
  private final boolean inclusive;

  private final java.util.List<io.trino.plugin.thrift.api.TrinoThriftBlock> values;

  public io.trino.plugin.thrift.api.valuesets.TrinoThriftEquatableValueSet(boolean, java.util.List<io.trino.plugin.thrift.api.TrinoThriftBlock>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #7                  // Field inclusive:Z
       9: aload_0
      10: aload_2
      11: ldc           #13                 // String values are null
      13: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #21                 // class java/util/List
      19: putfield      #23                 // Field values:Ljava/util/List;
      22: return

  public boolean isInclusive();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inclusive:Z
       4: ireturn

  public java.util.List<io.trino.plugin.thrift.api.TrinoThriftBlock> getValues();
    Code:
       0: aload_0
       1: getfield      #23                 // Field values:Ljava/util/List;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #8                  // class io/trino/plugin/thrift/api/valuesets/TrinoThriftEquatableValueSet
      28: astore_2
      29: aload_0
      30: getfield      #7                  // Field inclusive:Z
      33: aload_2
      34: getfield      #7                  // Field inclusive:Z
      37: if_icmpne     58
      40: aload_0
      41: getfield      #23                 // Field values:Ljava/util/List;
      44: aload_2
      45: getfield      #23                 // Field values:Ljava/util/List;
      48: invokestatic  #31                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #2                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #7                  // Field inclusive:Z
      10: invokestatic  #35                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #23                 // Field values:Ljava/util/List;
      20: aastore
      21: invokestatic  #41                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      24: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method com/google/common/base/MoreObjects.toStringHelper:(Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
       4: ldc           #51                 // String inclusive
       6: aload_0
       7: getfield      #7                  // Field inclusive:Z
      10: invokevirtual #52                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Z)Lcom/google/common/base/MoreObjects$ToStringHelper;
      13: ldc           #58                 // String values
      15: aload_0
      16: getfield      #23                 // Field values:Ljava/util/List;
      19: invokevirtual #59                 // Method com/google/common/base/MoreObjects$ToStringHelper.add:(Ljava/lang/String;Ljava/lang/Object;)Lcom/google/common/base/MoreObjects$ToStringHelper;
      22: invokevirtual #62                 // Method com/google/common/base/MoreObjects$ToStringHelper.toString:()Ljava/lang/String;
      25: areturn

  public static io.trino.plugin.thrift.api.valuesets.TrinoThriftEquatableValueSet fromEquatableValueSet(io.trino.spi.predicate.EquatableValueSet);
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method io/trino/spi/predicate/EquatableValueSet.getType:()Lio/trino/spi/type/Type;
       4: astore_1
       5: aload_0
       6: invokevirtual #72                 // Method io/trino/spi/predicate/EquatableValueSet.getEntries:()Ljava/util/Set;
       9: astore_2
      10: new           #76                 // class java/util/ArrayList
      13: dup
      14: aload_2
      15: invokeinterface #78,  1           // InterfaceMethod java/util/Set.size:()I
      20: invokespecial #84                 // Method java/util/ArrayList."<init>":(I)V
      23: astore_3
      24: aload_2
      25: invokeinterface #87,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          93
      42: aload         4
      44: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #101                // class io/trino/spi/predicate/EquatableValueSet$ValueEntry
      52: astore        5
      54: aload_1
      55: aload         5
      57: invokevirtual #103                // Method io/trino/spi/predicate/EquatableValueSet$ValueEntry.getType:()Lio/trino/spi/type/Type;
      60: invokevirtual #104                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      63: ldc           #107                // String ValueEntrySet has elements of different types: %s vs %s
      65: aload_1
      66: aload         5
      68: invokevirtual #103                // Method io/trino/spi/predicate/EquatableValueSet$ValueEntry.getType:()Lio/trino/spi/type/Type;
      71: invokestatic  #109                // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      74: aload_3
      75: aload         5
      77: invokevirtual #115                // Method io/trino/spi/predicate/EquatableValueSet$ValueEntry.getBlock:()Lio/trino/spi/block/Block;
      80: aload_1
      81: invokestatic  #119                // Method io/trino/plugin/thrift/api/TrinoThriftBlock.fromBlock:(Lio/trino/spi/block/Block;Lio/trino/spi/type/Type;)Lio/trino/plugin/thrift/api/TrinoThriftBlock;
      84: invokeinterface #125,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      89: pop
      90: goto          32
      93: new           #8                  // class io/trino/plugin/thrift/api/valuesets/TrinoThriftEquatableValueSet
      96: dup
      97: aload_0
      98: invokevirtual #127                // Method io/trino/spi/predicate/EquatableValueSet.inclusive:()Z
     101: aload_3
     102: invokespecial #129                // Method "<init>":(ZLjava/util/List;)V
     105: areturn
}
