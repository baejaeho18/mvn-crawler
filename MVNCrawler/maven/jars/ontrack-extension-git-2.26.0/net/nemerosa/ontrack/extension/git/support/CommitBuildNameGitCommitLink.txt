Compiled from "CommitBuildNameGitCommitLink.java"
public class net.nemerosa.ontrack.extension.git.support.CommitBuildNameGitCommitLink implements net.nemerosa.ontrack.extension.git.model.BuildGitCommitLink<net.nemerosa.ontrack.extension.git.support.CommitLinkConfig> {
  private final java.util.regex.Pattern abbreviatedPattern;

  private final java.util.regex.Pattern fullPattern;

  public net.nemerosa.ontrack.extension.git.support.CommitBuildNameGitCommitLink();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String [0-9a-f]{7}
       7: invokestatic  #3                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      10: putfield      #4                  // Field abbreviatedPattern:Ljava/util/regex/Pattern;
      13: aload_0
      14: ldc           #5                  // String [0-9a-f]{40}
      16: invokestatic  #3                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      19: putfield      #6                  // Field fullPattern:Ljava/util/regex/Pattern;
      22: return

  public java.lang.String getId();
    Code:
       0: ldc           #7                  // String commit
       2: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #8                  // String Commit as name
       2: areturn

  public net.nemerosa.ontrack.extension.git.support.CommitLinkConfig clone(net.nemerosa.ontrack.extension.git.support.CommitLinkConfig, java.util.function.Function<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: areturn

  public java.lang.String getCommitFromBuild(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.extension.git.support.CommitLinkConfig);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method net/nemerosa/ontrack/model/structure/Build.getName:()Ljava/lang/String;
       4: areturn

  public net.nemerosa.ontrack.extension.git.support.CommitLinkConfig parseData(com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: invokestatic  #10                 // Method net/nemerosa/ontrack/json/ObjectMapperFactory.create:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_1
       4: ldc           #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
       6: invokevirtual #12                 // Method com/fasterxml/jackson/databind/ObjectMapper.treeToValue:(Lcom/fasterxml/jackson/core/TreeNode;Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
      12: areturn
      13: astore_2
      14: new           #14                 // class net/nemerosa/ontrack/model/exceptions/JsonParsingException
      17: dup
      18: aload_2
      19: invokespecial #15                 // Method net/nemerosa/ontrack/model/exceptions/JsonParsingException."<init>":(Ljava/lang/Exception;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class com/fasterxml/jackson/core/JsonProcessingException

  public com.fasterxml.jackson.databind.JsonNode toJson(net.nemerosa.ontrack.extension.git.support.CommitLinkConfig);
    Code:
       0: invokestatic  #10                 // Method net/nemerosa/ontrack/json/ObjectMapperFactory.create:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_1
       4: invokevirtual #16                 // Method com/fasterxml/jackson/databind/ObjectMapper.valueToTree:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
       7: areturn

  public net.nemerosa.ontrack.model.form.Form getForm();
    Code:
       0: invokestatic  #17                 // Method net/nemerosa/ontrack/model/form/Form.create:()Lnet/nemerosa/ontrack/model/form/Form;
       3: ldc           #18                 // String abbreviated
       5: invokestatic  #19                 // Method net/nemerosa/ontrack/model/form/YesNo.of:(Ljava/lang/String;)Lnet/nemerosa/ontrack/model/form/YesNo;
       8: ldc           #20                 // String Abbreviated
      10: invokevirtual #21                 // Method net/nemerosa/ontrack/model/form/YesNo.label:(Ljava/lang/String;)Lnet/nemerosa/ontrack/model/form/AbstractField;
      13: checkcast     #22                 // class net/nemerosa/ontrack/model/form/YesNo
      16: ldc           #23                 // String Using abbreviated commit hashes or not.
      18: invokevirtual #24                 // Method net/nemerosa/ontrack/model/form/YesNo.help:(Ljava/lang/String;)Lnet/nemerosa/ontrack/model/form/AbstractField;
      21: checkcast     #22                 // class net/nemerosa/ontrack/model/form/YesNo
      24: iconst_1
      25: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      28: invokevirtual #26                 // Method net/nemerosa/ontrack/model/form/YesNo.value:(Ljava/lang/Object;)Lnet/nemerosa/ontrack/model/form/AbstractField;
      31: invokevirtual #27                 // Method net/nemerosa/ontrack/model/form/Form.with:(Lnet/nemerosa/ontrack/model/form/Field;)Lnet/nemerosa/ontrack/model/form/Form;
      34: areturn

  public java.util.stream.Stream<java.lang.String> getBuildCandidateReferences(java.lang.String, net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.git.GitRepositoryClient, net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration, net.nemerosa.ontrack.extension.git.support.CommitLinkConfig);
    Code:
       0: aload_3
       1: aload_1
       2: invokeinterface #28,  2           // InterfaceMethod net/nemerosa/ontrack/git/GitRepositoryClient.isCommit:(Ljava/lang/String;)Z
       7: ifeq          58
      10: aload_3
      11: ldc           #29                 // String %s~1
      13: iconst_1
      14: anewarray     #30                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_1
      20: aastore
      21: invokestatic  #31                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: aload_3
      25: aload         4
      27: invokevirtual #32                 // Method net/nemerosa/ontrack/extension/git/model/GitBranchConfiguration.getBranch:()Ljava/lang/String;
      30: invokeinterface #33,  2           // InterfaceMethod net/nemerosa/ontrack/git/GitRepositoryClient.getBranchRef:(Ljava/lang/String;)Ljava/lang/String;
      35: invokeinterface #34,  3           // InterfaceMethod net/nemerosa/ontrack/git/GitRepositoryClient.log:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream;
      40: invokeinterface #35,  1           // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
      45: aload         5
      47: invokedynamic #36,  0             // InvokeDynamic #0:apply:(Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;)Ljava/util/function/Function;
      52: invokeinterface #37,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      57: areturn
      58: invokestatic  #38                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      61: invokeinterface #39,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      66: areturn

  public boolean isBuildEligible(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.extension.git.support.CommitLinkConfig);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isBuildNameValid(java.lang.String, net.nemerosa.ontrack.extension.git.support.CommitLinkConfig);
    Code:
       0: aload_2
       1: invokevirtual #40                 // Method net/nemerosa/ontrack/extension/git/support/CommitLinkConfig.isAbbreviated:()Z
       4: ifeq          19
       7: aload_0
       8: getfield      #4                  // Field abbreviatedPattern:Ljava/util/regex/Pattern;
      11: aload_1
      12: invokevirtual #41                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      15: invokevirtual #42                 // Method java/util/regex/Matcher.matches:()Z
      18: ireturn
      19: aload_0
      20: getfield      #6                  // Field fullPattern:Ljava/util/regex/Pattern;
      23: aload_1
      24: invokevirtual #41                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      27: invokevirtual #42                 // Method java/util/regex/Matcher.matches:()Z
      30: ireturn

  public boolean isBuildNameValid(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
       6: invokevirtual #43                 // Method isBuildNameValid:(Ljava/lang/String;Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;)Z
       9: ireturn

  public boolean isBuildEligible(net.nemerosa.ontrack.model.structure.Build, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
       6: invokevirtual #44                 // Method isBuildEligible:(Lnet/nemerosa/ontrack/model/structure/Build;Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;)Z
       9: ireturn

  public java.util.stream.Stream getBuildCandidateReferences(java.lang.String, net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.git.GitRepositoryClient, net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: checkcast     #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
      11: invokevirtual #45                 // Method getBuildCandidateReferences:(Ljava/lang/String;Lnet/nemerosa/ontrack/model/structure/Branch;Lnet/nemerosa/ontrack/git/GitRepositoryClient;Lnet/nemerosa/ontrack/extension/git/model/GitBranchConfiguration;Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;)Ljava/util/stream/Stream;
      14: areturn

  public com.fasterxml.jackson.databind.JsonNode toJson(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
       5: invokevirtual #46                 // Method toJson:(Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;)Lcom/fasterxml/jackson/databind/JsonNode;
       8: areturn

  public java.lang.Object parseData(com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method parseData:(Lcom/fasterxml/jackson/databind/JsonNode;)Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;
       5: areturn

  public java.lang.String getCommitFromBuild(net.nemerosa.ontrack.model.structure.Build, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
       6: invokevirtual #48                 // Method getCommitFromBuild:(Lnet/nemerosa/ontrack/model/structure/Build;Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;)Ljava/lang/String;
       9: areturn

  public java.lang.Object clone(java.lang.Object, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class net/nemerosa/ontrack/extension/git/support/CommitLinkConfig
       5: aload_2
       6: invokevirtual #49                 // Method clone:(Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;Ljava/util/function/Function;)Lnet/nemerosa/ontrack/extension/git/support/CommitLinkConfig;
       9: areturn

  private static java.lang.String lambda$getBuildCandidateReferences$37(net.nemerosa.ontrack.extension.git.support.CommitLinkConfig, net.nemerosa.ontrack.git.model.GitCommit);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method net/nemerosa/ontrack/extension/git/support/CommitLinkConfig.isAbbreviated:()Z
       4: ifeq          14
       7: aload_1
       8: invokevirtual #50                 // Method net/nemerosa/ontrack/git/model/GitCommit.getShortId:()Ljava/lang/String;
      11: goto          18
      14: aload_1
      15: invokevirtual #51                 // Method net/nemerosa/ontrack/git/model/GitCommit.getId:()Ljava/lang/String;
      18: areturn
}
