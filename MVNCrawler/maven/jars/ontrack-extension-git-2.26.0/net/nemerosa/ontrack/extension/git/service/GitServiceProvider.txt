Compiled from "GitServiceProvider.java"
public class net.nemerosa.ontrack.extension.git.service.GitServiceProvider implements net.nemerosa.ontrack.extension.scm.service.SCMServiceProvider {
  private final net.nemerosa.ontrack.extension.git.service.GitService gitService;

  public net.nemerosa.ontrack.extension.git.service.GitServiceProvider(net.nemerosa.ontrack.extension.git.service.GitService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field gitService:Lnet/nemerosa/ontrack/extension/git/service/GitService;
       9: return

  public java.util.Optional<net.nemerosa.ontrack.extension.scm.service.SCMService> getScmService(net.nemerosa.ontrack.model.structure.Branch);
    Code:
       0: aload_0
       1: getfield      #2                  // Field gitService:Lnet/nemerosa/ontrack/extension/git/service/GitService;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod net/nemerosa/ontrack/extension/git/service/GitService.getBranchConfiguration:(Lnet/nemerosa/ontrack/model/structure/Branch;)Ljava/util/Optional;
      10: aload_0
      11: invokedynamic #4,  0              // InvokeDynamic #0:apply:(Lnet/nemerosa/ontrack/extension/git/service/GitServiceProvider;)Ljava/util/function/Function;
      16: invokevirtual #5                  // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      19: areturn

  private net.nemerosa.ontrack.extension.scm.service.SCMService lambda$getScmService$31(net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field gitService:Lnet/nemerosa/ontrack/extension/git/service/GitService;
       4: areturn
}
