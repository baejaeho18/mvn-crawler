Compiled from "GitBranchesTemplateSynchronisationSource.java"
public class net.nemerosa.ontrack.extension.git.GitBranchesTemplateSynchronisationSource extends net.nemerosa.ontrack.model.support.AbstractTemplateSynchronisationSource<net.nemerosa.ontrack.extension.git.GitBranchesTemplateSynchronisationSourceConfig> {
  private final net.nemerosa.ontrack.extension.git.service.GitService gitService;

  public net.nemerosa.ontrack.extension.git.GitBranchesTemplateSynchronisationSource(net.nemerosa.ontrack.extension.git.service.GitService);
    Code:
       0: aload_0
       1: ldc           #1                  // class net/nemerosa/ontrack/extension/git/GitBranchesTemplateSynchronisationSourceConfig
       3: invokespecial #2                  // Method net/nemerosa/ontrack/model/support/AbstractTemplateSynchronisationSource."<init>":(Ljava/lang/Class;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field gitService:Lnet/nemerosa/ontrack/extension/git/service/GitService;
      11: return

  public java.lang.String getId();
    Code:
       0: ldc           #4                  // String git-branches
       2: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #5                  // String Git branches
       2: areturn

  public boolean isApplicable(net.nemerosa.ontrack.model.structure.Branch);
    Code:
       0: aload_0
       1: getfield      #3                  // Field gitService:Lnet/nemerosa/ontrack/extension/git/service/GitService;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod net/nemerosa/ontrack/extension/git/service/GitService.isBranchConfiguredForGit:(Lnet/nemerosa/ontrack/model/structure/Branch;)Z
      10: ireturn

  public net.nemerosa.ontrack.model.form.Form getForm(net.nemerosa.ontrack.model.structure.Branch);
    Code:
       0: invokestatic  #7                  // Method net/nemerosa/ontrack/extension/git/GitBranchesTemplateSynchronisationSourceConfig.form:()Lnet/nemerosa/ontrack/model/form/Form;
       3: areturn

  public java.util.List<java.lang.String> getBranchNames(net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.extension.git.GitBranchesTemplateSynchronisationSourceConfig);
    Code:
       0: aload_0
       1: getfield      #3                  // Field gitService:Lnet/nemerosa/ontrack/extension/git/service/GitService;
       4: aload_1
       5: invokevirtual #8                  // Method net/nemerosa/ontrack/model/structure/Branch.getProject:()Lnet/nemerosa/ontrack/model/structure/Project;
       8: invokeinterface #9,  2            // InterfaceMethod net/nemerosa/ontrack/extension/git/service/GitService.getProjectConfiguration:(Lnet/nemerosa/ontrack/model/structure/Project;)Ljava/util/Optional;
      13: astore_3
      14: aload_3
      15: invokevirtual #10                 // Method java/util/Optional.isPresent:()Z
      18: ifeq          72
      21: aload_2
      22: invokevirtual #11                 // Method net/nemerosa/ontrack/extension/git/GitBranchesTemplateSynchronisationSourceConfig.getFilter:()Ljava/util/function/Predicate;
      25: astore        4
      27: aload_0
      28: getfield      #3                  // Field gitService:Lnet/nemerosa/ontrack/extension/git/service/GitService;
      31: aload_3
      32: invokevirtual #12                 // Method java/util/Optional.get:()Ljava/lang/Object;
      35: checkcast     #13                 // class net/nemerosa/ontrack/extension/git/model/GitConfiguration
      38: invokeinterface #14,  2           // InterfaceMethod net/nemerosa/ontrack/extension/git/service/GitService.getRemoteBranches:(Lnet/nemerosa/ontrack/extension/git/model/GitConfiguration;)Ljava/util/List;
      43: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      48: aload         4
      50: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      55: invokeinterface #17,  1           // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
      60: invokestatic  #18                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      63: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      68: checkcast     #20                 // class java/util/List
      71: areturn
      72: invokestatic  #21                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      75: areturn

  public java.util.List getBranchNames(net.nemerosa.ontrack.model.structure.Branch, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #1                  // class net/nemerosa/ontrack/extension/git/GitBranchesTemplateSynchronisationSourceConfig
       6: invokevirtual #22                 // Method getBranchNames:(Lnet/nemerosa/ontrack/model/structure/Branch;Lnet/nemerosa/ontrack/extension/git/GitBranchesTemplateSynchronisationSourceConfig;)Ljava/util/List;
       9: areturn
}
