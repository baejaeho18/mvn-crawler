Compiled from "GitService.java"
public interface net.nemerosa.ontrack.extension.git.service.GitService extends net.nemerosa.ontrack.extension.scm.service.SCMService {
  public abstract boolean isBranchConfiguredForGit(net.nemerosa.ontrack.model.structure.Branch);

  public abstract java.util.Optional<net.nemerosa.ontrack.extension.git.model.GitConfiguration> getProjectConfiguration(net.nemerosa.ontrack.model.structure.Project);

  public abstract java.util.Optional<net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration> getBranchConfiguration(net.nemerosa.ontrack.model.structure.Branch);

  public abstract java.util.Optional<java.util.concurrent.Future<?>> launchBuildSync(net.nemerosa.ontrack.model.structure.ID, boolean);

  public abstract net.nemerosa.ontrack.extension.git.model.GitChangeLog changeLog(net.nemerosa.ontrack.extension.api.model.BuildDiffRequest);

  public abstract net.nemerosa.ontrack.extension.git.model.GitChangeLogCommits getChangeLogCommits(net.nemerosa.ontrack.extension.git.model.GitChangeLog);

  public abstract net.nemerosa.ontrack.extension.git.model.GitChangeLogIssues getChangeLogIssues(net.nemerosa.ontrack.extension.git.model.GitChangeLog);

  public abstract net.nemerosa.ontrack.extension.git.model.GitChangeLogFiles getChangeLogFiles(net.nemerosa.ontrack.extension.git.model.GitChangeLog);

  public abstract void forEachConfiguredProject(java.util.function.BiConsumer<net.nemerosa.ontrack.model.structure.Project, net.nemerosa.ontrack.extension.git.model.GitConfiguration>);

  public abstract void forEachConfiguredBranch(java.util.function.BiConsumer<net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration>);

  public abstract boolean scanCommits(net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration, java.util.function.Predicate<org.eclipse.jgit.revwalk.RevCommit>);

  public abstract net.nemerosa.ontrack.extension.git.model.OntrackGitIssueInfo getIssueInfo(net.nemerosa.ontrack.model.structure.ID, java.lang.String);

  public abstract java.util.Optional<net.nemerosa.ontrack.extension.git.model.GitUICommit> lookupCommit(net.nemerosa.ontrack.extension.git.model.GitConfiguration, java.lang.String);

  public abstract net.nemerosa.ontrack.extension.git.model.OntrackGitCommitInfo getCommitInfo(net.nemerosa.ontrack.model.structure.ID, java.lang.String);

  public abstract java.util.List<java.lang.String> getRemoteBranches(net.nemerosa.ontrack.extension.git.model.GitConfiguration);

  public abstract java.lang.String diff(net.nemerosa.ontrack.extension.git.model.GitChangeLog, java.util.List<java.lang.String>);

  public abstract net.nemerosa.ontrack.model.Ack projectSync(net.nemerosa.ontrack.model.structure.Project, net.nemerosa.ontrack.extension.git.model.GitSynchronisationRequest);

  public abstract java.util.Optional<java.util.concurrent.Future<?>> sync(net.nemerosa.ontrack.extension.git.model.GitConfiguration, net.nemerosa.ontrack.extension.git.model.GitSynchronisationRequest);

  public abstract net.nemerosa.ontrack.extension.git.model.GitSynchronisationInfo getProjectGitSyncInfo(net.nemerosa.ontrack.model.structure.Project);

  public abstract void scheduleGitBuildSync(net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.extension.git.property.GitBranchConfigurationProperty);

  public abstract void unscheduleGitBuildSync(net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.extension.git.property.GitBranchConfigurationProperty);
}
