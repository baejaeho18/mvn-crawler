Compiled from "TagPatternBuildNameGitCommitLink.java"
public class net.nemerosa.ontrack.extension.git.support.TagPatternBuildNameGitCommitLink implements net.nemerosa.ontrack.extension.git.model.IndexableBuildGitCommitLink<net.nemerosa.ontrack.extension.scm.support.TagPattern> {
  public net.nemerosa.ontrack.extension.git.support.TagPatternBuildNameGitCommitLink();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getId();
    Code:
       0: ldc           #2                  // String tagPattern
       2: areturn

  public java.lang.String getName();
    Code:
       0: ldc           #3                  // String Tag pattern
       2: areturn

  public net.nemerosa.ontrack.extension.scm.support.TagPattern clone(net.nemerosa.ontrack.extension.scm.support.TagPattern, java.util.function.Function<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #4                  // Method net/nemerosa/ontrack/extension/scm/support/TagPattern.clone:(Ljava/util/function/Function;)Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;
       5: areturn

  public java.lang.String getCommitFromBuild(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.extension.scm.support.TagPattern);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #5                  // Method net/nemerosa/ontrack/model/structure/Build.getName:()Ljava/lang/String;
       5: invokevirtual #6                  // Method net/nemerosa/ontrack/extension/scm/support/TagPattern.getTagNameFromBuildName:(Ljava/lang/String;)Ljava/util/Optional;
       8: aload_2
       9: aload_1
      10: invokedynamic #7,  0              // InvokeDynamic #0:get:(Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;Lnet/nemerosa/ontrack/model/structure/Build;)Ljava/util/function/Supplier;
      15: invokevirtual #8                  // Method java/util/Optional.orElseThrow:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      18: checkcast     #9                  // class java/lang/String
      21: areturn

  public net.nemerosa.ontrack.extension.scm.support.TagPattern parseData(com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: invokestatic  #10                 // Method net/nemerosa/ontrack/json/ObjectMapperFactory.create:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_1
       4: ldc           #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
       6: invokevirtual #12                 // Method com/fasterxml/jackson/databind/ObjectMapper.treeToValue:(Lcom/fasterxml/jackson/core/TreeNode;Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
      12: areturn
      13: astore_2
      14: new           #14                 // class net/nemerosa/ontrack/model/exceptions/JsonParsingException
      17: dup
      18: aload_2
      19: invokespecial #15                 // Method net/nemerosa/ontrack/model/exceptions/JsonParsingException."<init>":(Ljava/lang/Exception;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class com/fasterxml/jackson/core/JsonProcessingException

  public com.fasterxml.jackson.databind.JsonNode toJson(net.nemerosa.ontrack.extension.scm.support.TagPattern);
    Code:
       0: invokestatic  #10                 // Method net/nemerosa/ontrack/json/ObjectMapperFactory.create:()Lcom/fasterxml/jackson/databind/ObjectMapper;
       3: aload_1
       4: invokevirtual #16                 // Method com/fasterxml/jackson/databind/ObjectMapper.valueToTree:(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonNode;
       7: areturn

  public net.nemerosa.ontrack.model.form.Form getForm();
    Code:
       0: invokestatic  #17                 // Method net/nemerosa/ontrack/model/form/Form.create:()Lnet/nemerosa/ontrack/model/form/Form;
       3: ldc           #18                 // String pattern
       5: invokestatic  #19                 // Method net/nemerosa/ontrack/model/form/Text.of:(Ljava/lang/String;)Lnet/nemerosa/ontrack/model/form/Text;
       8: ldc           #3                  // String Tag pattern
      10: invokevirtual #20                 // Method net/nemerosa/ontrack/model/form/Text.label:(Ljava/lang/String;)Lnet/nemerosa/ontrack/model/form/AbstractField;
      13: checkcast     #21                 // class net/nemerosa/ontrack/model/form/Text
      16: ldc           #22                 // String @file:extension/git/help.net.nemerosa.ontrack.extension.git.support.TagPatternBuildNameGitCommitLink.tagPattern.tpl.html
      18: invokevirtual #23                 // Method net/nemerosa/ontrack/model/form/Text.help:(Ljava/lang/String;)Lnet/nemerosa/ontrack/model/form/AbstractField;
      21: invokevirtual #24                 // Method net/nemerosa/ontrack/model/form/Form.with:(Lnet/nemerosa/ontrack/model/form/Field;)Lnet/nemerosa/ontrack/model/form/Form;
      24: areturn

  public java.util.stream.Stream<java.lang.String> getBuildCandidateReferences(java.lang.String, net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.git.GitRepositoryClient, net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration, net.nemerosa.ontrack.extension.scm.support.TagPattern);
    Code:
       0: aload_3
       1: aload_1
       2: invokeinterface #25,  2           // InterfaceMethod net/nemerosa/ontrack/git/GitRepositoryClient.getTagsWhichContainCommit:(Ljava/lang/String;)Ljava/util/Collection;
       7: invokeinterface #26,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: aload         5
      14: dup
      15: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: pop
      19: invokedynamic #28,  0             // InvokeDynamic #1:test:(Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Ljava/util/function/Predicate;
      24: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      29: aload         5
      31: dup
      32: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: pop
      36: invokedynamic #30,  0             // InvokeDynamic #2:apply:(Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Ljava/util/function/Function;
      41: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      46: invokedynamic #32,  0             // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      51: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      56: invokedynamic #33,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      61: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      66: areturn

  public java.util.Optional<java.lang.String> getBuildNameFromTagName(java.lang.String, net.nemerosa.ontrack.extension.scm.support.TagPattern);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #34                 // Method net/nemerosa/ontrack/extension/scm/support/TagPattern.getBuildNameFromTagName:(Ljava/lang/String;)Ljava/util/Optional;
       5: areturn

  public boolean isBuildEligible(net.nemerosa.ontrack.model.structure.Build, net.nemerosa.ontrack.extension.scm.support.TagPattern);
    Code:
       0: iconst_1
       1: ireturn

  public boolean isBuildNameValid(java.lang.String, net.nemerosa.ontrack.extension.scm.support.TagPattern);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #35                 // Method net/nemerosa/ontrack/extension/scm/support/TagPattern.isValidTagName:(Ljava/lang/String;)Z
       5: ireturn

  public java.util.Optional getBuildNameFromTagName(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
       6: invokevirtual #36                 // Method getBuildNameFromTagName:(Ljava/lang/String;Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Ljava/util/Optional;
       9: areturn

  public boolean isBuildNameValid(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
       6: invokevirtual #37                 // Method isBuildNameValid:(Ljava/lang/String;Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Z
       9: ireturn

  public boolean isBuildEligible(net.nemerosa.ontrack.model.structure.Build, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
       6: invokevirtual #38                 // Method isBuildEligible:(Lnet/nemerosa/ontrack/model/structure/Build;Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Z
       9: ireturn

  public java.util.stream.Stream getBuildCandidateReferences(java.lang.String, net.nemerosa.ontrack.model.structure.Branch, net.nemerosa.ontrack.git.GitRepositoryClient, net.nemerosa.ontrack.extension.git.model.GitBranchConfiguration, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
      11: invokevirtual #39                 // Method getBuildCandidateReferences:(Ljava/lang/String;Lnet/nemerosa/ontrack/model/structure/Branch;Lnet/nemerosa/ontrack/git/GitRepositoryClient;Lnet/nemerosa/ontrack/extension/git/model/GitBranchConfiguration;Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Ljava/util/stream/Stream;
      14: areturn

  public com.fasterxml.jackson.databind.JsonNode toJson(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
       5: invokevirtual #40                 // Method toJson:(Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Lcom/fasterxml/jackson/databind/JsonNode;
       8: areturn

  public java.lang.Object parseData(com.fasterxml.jackson.databind.JsonNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method parseData:(Lcom/fasterxml/jackson/databind/JsonNode;)Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;
       5: areturn

  public java.lang.String getCommitFromBuild(net.nemerosa.ontrack.model.structure.Build, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
       6: invokevirtual #42                 // Method getCommitFromBuild:(Lnet/nemerosa/ontrack/model/structure/Build;Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;)Ljava/lang/String;
       9: areturn

  public java.lang.Object clone(java.lang.Object, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class net/nemerosa/ontrack/extension/scm/support/TagPattern
       5: aload_2
       6: invokevirtual #43                 // Method clone:(Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;Ljava/util/function/Function;)Lnet/nemerosa/ontrack/extension/scm/support/TagPattern;
       9: areturn

  private static net.nemerosa.ontrack.extension.git.support.BuildTagPatternExcepton lambda$getCommitFromBuild$44(net.nemerosa.ontrack.extension.scm.support.TagPattern, net.nemerosa.ontrack.model.structure.Build);
    Code:
       0: new           #44                 // class net/nemerosa/ontrack/extension/git/support/BuildTagPatternExcepton
       3: dup
       4: aload_0
       5: invokevirtual #45                 // Method net/nemerosa/ontrack/extension/scm/support/TagPattern.getPattern:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #5                  // Method net/nemerosa/ontrack/model/structure/Build.getName:()Ljava/lang/String;
      12: invokespecial #46                 // Method net/nemerosa/ontrack/extension/git/support/BuildTagPatternExcepton."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      15: areturn
}
