Compiled from "BasicGitConfigurator.java"
public class net.nemerosa.ontrack.extension.git.support.BasicGitConfigurator implements net.nemerosa.ontrack.extension.git.model.GitConfigurator {
  private final net.nemerosa.ontrack.model.structure.PropertyService propertyService;

  public net.nemerosa.ontrack.extension.git.support.BasicGitConfigurator(net.nemerosa.ontrack.model.structure.PropertyService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field propertyService:Lnet/nemerosa/ontrack/model/structure/PropertyService;
       9: return

  public java.util.Optional<net.nemerosa.ontrack.extension.git.model.GitConfiguration> getConfiguration(net.nemerosa.ontrack.model.structure.Project);
    Code:
       0: aload_0
       1: getfield      #2                  // Field propertyService:Lnet/nemerosa/ontrack/model/structure/PropertyService;
       4: aload_1
       5: ldc           #3                  // class net/nemerosa/ontrack/extension/git/property/GitProjectConfigurationPropertyType
       7: invokeinterface #4,  3            // InterfaceMethod net/nemerosa/ontrack/model/structure/PropertyService.getProperty:(Lnet/nemerosa/ontrack/model/structure/ProjectEntity;Ljava/lang/Class;)Lnet/nemerosa/ontrack/model/structure/Property;
      12: invokevirtual #5                  // Method net/nemerosa/ontrack/model/structure/Property.option:()Ljava/util/Optional;
      15: invokedynamic #6,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      20: invokevirtual #7                  // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      23: areturn
}
