Compiled from "AbstractDAOImpl.java"
public abstract class net.sf.derquinsej.hib3.AbstractDAOImpl implements net.sf.derquinsej.hib3.DAO {
  private org.hibernate.SessionFactory sessionFactory;

  private static org.hibernate.SessionFactory check(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ldc           #1                  // String A session factory must be provided.
       3: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #3                  // class org/hibernate/SessionFactory
       9: areturn

  public net.sf.derquinsej.hib3.AbstractDAOImpl(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #5                  // Method check:(Lorg/hibernate/SessionFactory;)Lorg/hibernate/SessionFactory;
       9: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      12: return

  public net.sf.derquinsej.hib3.AbstractDAOImpl();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: return

  public void setSessionFactory(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       5: return

  protected final org.hibernate.Session getSession();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #7                  // String A session factory must have been provided
      14: invokestatic  #8                  // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      17: aload_0
      18: getfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      21: invokeinterface #9,  1            // InterfaceMethod org/hibernate/SessionFactory.getCurrentSession:()Lorg/hibernate/classic/Session;
      26: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSession:()Lorg/hibernate/Session;
       4: invokeinterface #11,  1           // InterfaceMethod org/hibernate/Session.clear:()V
       9: return

  public void flush();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSession:()Lorg/hibernate/Session;
       4: invokeinterface #12,  1           // InterfaceMethod org/hibernate/Session.flush:()V
       9: return

  public void sync();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSession:()Lorg/hibernate/Session;
       4: astore_1
       5: aload_1
       6: invokeinterface #12,  1           // InterfaceMethod org/hibernate/Session.flush:()V
      11: aload_1
      12: invokeinterface #11,  1           // InterfaceMethod org/hibernate/Session.clear:()V
      17: return

  protected void evict(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getSession:()Lorg/hibernate/Session;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod org/hibernate/Session.evict:(Ljava/lang/Object;)V
      10: return

  protected org.hibernate.Query getNamedQuery(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #10                 // Method getSession:()Lorg/hibernate/Session;
       9: aload_1
      10: invokeinterface #15,  2           // InterfaceMethod org/hibernate/Session.getNamedQuery:(Ljava/lang/String;)Lorg/hibernate/Query;
      15: areturn

  protected <T> java.util.List<T> list(java.lang.Class<T>, org.hibernate.Query);
    Code:
       0: aload_2
       1: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokeinterface #16,  1           // InterfaceMethod org/hibernate/Query.list:()Ljava/util/List;
      11: astore_3
      12: aload_3
      13: areturn

  protected <T> T first(java.lang.Class<T>, org.hibernate.Query);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method list:(Ljava/lang/Class;Lorg/hibernate/Query;)Ljava/util/List;
       6: astore_3
       7: aload_3
       8: ifnull        28
      11: aload_3
      12: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      17: ifne          28
      20: aload_3
      21: iconst_0
      22: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: areturn
      28: aconst_null
      29: areturn

  protected <T> T unique(java.lang.Class<T>, org.hibernate.Query);
    Code:
       0: aload_2
       1: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokeinterface #20,  1           // InterfaceMethod org/hibernate/Query.uniqueResult:()Ljava/lang/Object;
      11: astore_3
      12: aload_3
      13: areturn

  protected <T> java.util.List<T> list(java.lang.Class<T>, java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_3
       6: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: aload_0
      13: aload_2
      14: invokevirtual #21                 // Method getNamedQuery:(Ljava/lang/String;)Lorg/hibernate/Query;
      17: iconst_0
      18: aload_3
      19: invokeinterface #22,  3           // InterfaceMethod org/hibernate/Query.setParameter:(ILjava/lang/Object;)Lorg/hibernate/Query;
      24: invokevirtual #17                 // Method list:(Ljava/lang/Class;Lorg/hibernate/Query;)Ljava/util/List;
      27: areturn

  protected <T> T unique(java.lang.Class<T>, java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_3
       6: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: aload_0
      13: aload_2
      14: invokevirtual #21                 // Method getNamedQuery:(Ljava/lang/String;)Lorg/hibernate/Query;
      17: iconst_0
      18: aload_3
      19: invokeinterface #22,  3           // InterfaceMethod org/hibernate/Query.setParameter:(ILjava/lang/Object;)Lorg/hibernate/Query;
      24: invokevirtual #23                 // Method unique:(Ljava/lang/Class;Lorg/hibernate/Query;)Ljava/lang/Object;
      27: areturn
}
