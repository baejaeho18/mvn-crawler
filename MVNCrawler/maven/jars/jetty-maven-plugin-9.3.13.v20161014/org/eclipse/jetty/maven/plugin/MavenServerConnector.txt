Compiled from "MavenServerConnector.java"
public class org.eclipse.jetty.maven.plugin.MavenServerConnector extends org.eclipse.jetty.util.component.AbstractLifeCycle implements org.eclipse.jetty.server.Connector {
  public static java.lang.String PORT_SYSPROPERTY;

  public static final int DEFAULT_PORT;

  public static final java.lang.String DEFAULT_PORT_STR;

  public static final int DEFAULT_MAX_IDLE_TIME;

  private org.eclipse.jetty.server.Server server;

  private org.eclipse.jetty.server.ServerConnector delegate;

  private java.lang.String host;

  private java.lang.String name;

  private int port;

  private long idleTimeout;

  private int lingerTime;

  public org.eclipse.jetty.maven.plugin.MavenServerConnector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/eclipse/jetty/util/component/AbstractLifeCycle."<init>":()V
       4: return

  public void setServer(org.eclipse.jetty.server.Server);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field server:Lorg/eclipse/jetty/server/Server;
       5: return

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field host:Ljava/lang/String;
       5: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: getfield      #3                  // Field host:Ljava/lang/String;
       4: areturn

  public void setPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field port:I
       5: return

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #4                  // Field port:I
       4: ireturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field name:Ljava/lang/String;
       5: return

  public void setIdleTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field idleTimeout:J
       5: return

  public void setSoLingerTime(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field lingerTime:I
       5: return

  protected void doStart() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field server:Lorg/eclipse/jetty/server/Server;
       4: ifnonnull     17
       7: new           #8                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #9                  // String Server not set for MavenServerConnector
      13: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: new           #11                 // class org/eclipse/jetty/server/ServerConnector
      21: dup
      22: aload_0
      23: getfield      #2                  // Field server:Lorg/eclipse/jetty/server/Server;
      26: invokespecial #12                 // Method org/eclipse/jetty/server/ServerConnector."<init>":(Lorg/eclipse/jetty/server/Server;)V
      29: putfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      32: aload_0
      33: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      36: aload_0
      37: getfield      #5                  // Field name:Ljava/lang/String;
      40: invokevirtual #14                 // Method org/eclipse/jetty/server/ServerConnector.setName:(Ljava/lang/String;)V
      43: aload_0
      44: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      47: aload_0
      48: getfield      #4                  // Field port:I
      51: invokevirtual #15                 // Method org/eclipse/jetty/server/ServerConnector.setPort:(I)V
      54: aload_0
      55: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      58: aload_0
      59: getfield      #3                  // Field host:Ljava/lang/String;
      62: invokevirtual #16                 // Method org/eclipse/jetty/server/ServerConnector.setHost:(Ljava/lang/String;)V
      65: aload_0
      66: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      69: aload_0
      70: getfield      #6                  // Field idleTimeout:J
      73: invokevirtual #17                 // Method org/eclipse/jetty/server/ServerConnector.setIdleTimeout:(J)V
      76: aload_0
      77: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      80: aload_0
      81: getfield      #7                  // Field lingerTime:I
      84: invokevirtual #18                 // Method org/eclipse/jetty/server/ServerConnector.setSoLingerTime:(I)V
      87: aload_0
      88: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      91: invokevirtual #19                 // Method org/eclipse/jetty/server/ServerConnector.start:()V
      94: aload_0
      95: invokespecial #20                 // Method org/eclipse/jetty/util/component/AbstractLifeCycle.doStart:()V
      98: return

  protected void doStop() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       4: invokevirtual #21                 // Method org/eclipse/jetty/server/ServerConnector.stop:()V
       7: aload_0
       8: invokespecial #22                 // Method org/eclipse/jetty/util/component/AbstractLifeCycle.doStop:()V
      11: aload_0
      12: aconst_null
      13: putfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
      16: return

  public java.util.concurrent.Future<java.lang.Void> shutdown();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #24                 // Method org/eclipse/jetty/server/ServerConnector.shutdown:()Ljava/util/concurrent/Future;
      11: areturn

  public org.eclipse.jetty.server.Server getServer();
    Code:
       0: aload_0
       1: getfield      #2                  // Field server:Lorg/eclipse/jetty/server/Server;
       4: areturn

  public java.util.concurrent.Executor getExecutor();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #25                 // Method org/eclipse/jetty/server/ServerConnector.getExecutor:()Ljava/util/concurrent/Executor;
      11: areturn

  public org.eclipse.jetty.util.thread.Scheduler getScheduler();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #26                 // Method org/eclipse/jetty/server/ServerConnector.getScheduler:()Lorg/eclipse/jetty/util/thread/Scheduler;
      11: areturn

  public org.eclipse.jetty.io.ByteBufferPool getByteBufferPool();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #27                 // Method org/eclipse/jetty/server/ServerConnector.getByteBufferPool:()Lorg/eclipse/jetty/io/ByteBufferPool;
      11: areturn

  public org.eclipse.jetty.server.ConnectionFactory getConnectionFactory(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: aload_1
       9: invokevirtual #28                 // Method org/eclipse/jetty/server/ServerConnector.getConnectionFactory:(Ljava/lang/String;)Lorg/eclipse/jetty/server/ConnectionFactory;
      12: areturn

  public <T> T getConnectionFactory(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: aload_1
       9: invokevirtual #29                 // Method org/eclipse/jetty/server/ServerConnector.getConnectionFactory:(Ljava/lang/Class;)Ljava/lang/Object;
      12: areturn

  public org.eclipse.jetty.server.ConnectionFactory getDefaultConnectionFactory();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #30                 // Method org/eclipse/jetty/server/ServerConnector.getDefaultConnectionFactory:()Lorg/eclipse/jetty/server/ConnectionFactory;
      11: areturn

  public java.util.Collection<org.eclipse.jetty.server.ConnectionFactory> getConnectionFactories();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #31                 // Method org/eclipse/jetty/server/ServerConnector.getConnectionFactories:()Ljava/util/Collection;
      11: areturn

  public java.util.List<java.lang.String> getProtocols();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #32                 // Method org/eclipse/jetty/server/ServerConnector.getProtocols:()Ljava/util/List;
      11: areturn

  public long getIdleTimeout();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #33                 // Method org/eclipse/jetty/server/ServerConnector.getIdleTimeout:()J
      11: lreturn

  public java.lang.Object getTransport();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #34                 // Method org/eclipse/jetty/server/ServerConnector.getTransport:()Ljava/lang/Object;
      11: areturn

  public java.util.Collection<org.eclipse.jetty.io.EndPoint> getConnectedEndPoints();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method checkDelegate:()V
       4: aload_0
       5: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       8: invokevirtual #35                 // Method org/eclipse/jetty/server/ServerConnector.getConnectedEndPoints:()Ljava/util/Collection;
      11: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  private void checkDelegate() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field delegate:Lorg/eclipse/jetty/server/ServerConnector;
       4: ifnonnull     17
       7: new           #8                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #36                 // String MavenServerConnector delegate not ready
      13: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  static {};
    Code:
       0: ldc           #37                 // String jetty.http.port
       2: putstatic     #38                 // Field PORT_SYSPROPERTY:Ljava/lang/String;
       5: sipush        8080
       8: invokestatic  #40                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      11: putstatic     #41                 // Field DEFAULT_PORT_STR:Ljava/lang/String;
      14: return
}
