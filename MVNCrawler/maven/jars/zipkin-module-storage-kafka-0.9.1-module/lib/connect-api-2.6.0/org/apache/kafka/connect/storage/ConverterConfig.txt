Compiled from "ConverterConfig.java"
public abstract class org.apache.kafka.connect.storage.ConverterConfig extends org.apache.kafka.common.config.AbstractConfig {
  public static final java.lang.String TYPE_CONFIG;

  private static final java.lang.String TYPE_DOC;

  public static org.apache.kafka.common.config.ConfigDef newConfigDef();
    Code:
       0: new           #1                  // class org/apache/kafka/common/config/ConfigDef
       3: dup
       4: invokespecial #2                  // Method org/apache/kafka/common/config/ConfigDef."<init>":()V
       7: ldc           #4                  // String converter.type
       9: getstatic     #5                  // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
      12: getstatic     #6                  // Field org/apache/kafka/common/config/ConfigDef.NO_DEFAULT_VALUE:Ljava/lang/Object;
      15: iconst_3
      16: anewarray     #7                  // class java/lang/String
      19: dup
      20: iconst_0
      21: getstatic     #8                  // Field org/apache/kafka/connect/storage/ConverterType.KEY:Lorg/apache/kafka/connect/storage/ConverterType;
      24: invokevirtual #9                  // Method org/apache/kafka/connect/storage/ConverterType.getName:()Ljava/lang/String;
      27: aastore
      28: dup
      29: iconst_1
      30: getstatic     #10                 // Field org/apache/kafka/connect/storage/ConverterType.VALUE:Lorg/apache/kafka/connect/storage/ConverterType;
      33: invokevirtual #9                  // Method org/apache/kafka/connect/storage/ConverterType.getName:()Ljava/lang/String;
      36: aastore
      37: dup
      38: iconst_2
      39: getstatic     #11                 // Field org/apache/kafka/connect/storage/ConverterType.HEADER:Lorg/apache/kafka/connect/storage/ConverterType;
      42: invokevirtual #9                  // Method org/apache/kafka/connect/storage/ConverterType.getName:()Ljava/lang/String;
      45: aastore
      46: invokestatic  #12                 // Method org/apache/kafka/common/config/ConfigDef$ValidString.in:([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
      49: getstatic     #13                 // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
      52: ldc           #14                 // String How this converter will be used.
      54: invokevirtual #15                 // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
      57: areturn

  protected org.apache.kafka.connect.storage.ConverterConfig(org.apache.kafka.common.config.ConfigDef, java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #16                 // Method org/apache/kafka/common/config/AbstractConfig."<init>":(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;Z)V
       7: return

  public org.apache.kafka.connect.storage.ConverterType type();
    Code:
       0: aload_0
       1: ldc           #4                  // String converter.type
       3: invokevirtual #17                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
       6: invokestatic  #18                 // Method org/apache/kafka/connect/storage/ConverterType.withName:(Ljava/lang/String;)Lorg/apache/kafka/connect/storage/ConverterType;
       9: areturn
}
