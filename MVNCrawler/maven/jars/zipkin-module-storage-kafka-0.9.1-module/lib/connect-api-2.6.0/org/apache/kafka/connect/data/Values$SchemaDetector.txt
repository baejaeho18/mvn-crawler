Compiled from "Values.java"
public class org.apache.kafka.connect.data.Values$SchemaDetector {
  private org.apache.kafka.connect.data.Schema$Type knownType;

  private boolean optional;

  public org.apache.kafka.connect.data.Values$SchemaDetector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field knownType:Lorg/apache/kafka/connect/data/Schema$Type;
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field optional:Z
      14: return

  public boolean canDetect(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field optional:Z
       9: iconst_1
      10: ireturn
      11: aload_1
      12: invokestatic  #4                  // Method org/apache/kafka/connect/data/Values.inferSchema:(Ljava/lang/Object;)Lorg/apache/kafka/connect/data/Schema;
      15: astore_2
      16: aload_2
      17: ifnonnull     22
      20: iconst_0
      21: ireturn
      22: aload_0
      23: getfield      #2                  // Field knownType:Lorg/apache/kafka/connect/data/Schema$Type;
      26: ifnonnull     42
      29: aload_0
      30: aload_2
      31: invokeinterface #5,  1            // InterfaceMethod org/apache/kafka/connect/data/Schema.type:()Lorg/apache/kafka/connect/data/Schema$Type;
      36: putfield      #2                  // Field knownType:Lorg/apache/kafka/connect/data/Schema$Type;
      39: goto          57
      42: aload_0
      43: getfield      #2                  // Field knownType:Lorg/apache/kafka/connect/data/Schema$Type;
      46: aload_2
      47: invokeinterface #5,  1            // InterfaceMethod org/apache/kafka/connect/data/Schema.type:()Lorg/apache/kafka/connect/data/Schema$Type;
      52: if_acmpeq     57
      55: iconst_0
      56: ireturn
      57: iconst_1
      58: ireturn

  public org.apache.kafka.connect.data.Schema schema();
    Code:
       0: aload_0
       1: getfield      #2                  // Field knownType:Lorg/apache/kafka/connect/data/Schema$Type;
       4: invokestatic  #6                  // Method org/apache/kafka/connect/data/SchemaBuilder.type:(Lorg/apache/kafka/connect/data/Schema$Type;)Lorg/apache/kafka/connect/data/SchemaBuilder;
       7: astore_1
       8: aload_0
       9: getfield      #3                  // Field optional:Z
      12: ifeq          20
      15: aload_1
      16: invokevirtual #7                  // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      19: pop
      20: aload_1
      21: invokevirtual #8                  // Method org/apache/kafka/connect/data/SchemaBuilder.schema:()Lorg/apache/kafka/connect/data/Schema;
      24: areturn
}
