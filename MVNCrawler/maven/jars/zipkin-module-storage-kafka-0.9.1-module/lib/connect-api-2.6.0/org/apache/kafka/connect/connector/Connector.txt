Compiled from "Connector.java"
public abstract class org.apache.kafka.connect.connector.Connector implements org.apache.kafka.connect.components.Versioned {
  protected org.apache.kafka.connect.connector.ConnectorContext context;

  public org.apache.kafka.connect.connector.Connector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void initialize(org.apache.kafka.connect.connector.ConnectorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field context:Lorg/apache/kafka/connect/connector/ConnectorContext;
       5: return

  public void initialize(org.apache.kafka.connect.connector.ConnectorContext, java.util.List<java.util.Map<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field context:Lorg/apache/kafka/connect/connector/ConnectorContext;
       5: return

  protected org.apache.kafka.connect.connector.ConnectorContext context();
    Code:
       0: aload_0
       1: getfield      #2                  // Field context:Lorg/apache/kafka/connect/connector/ConnectorContext;
       4: areturn

  public abstract void start(java.util.Map<java.lang.String, java.lang.String>);

  public void reconfigure(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method stop:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #4                  // Method start:(Ljava/util/Map;)V
       9: return

  public abstract java.lang.Class<? extends org.apache.kafka.connect.connector.Task> taskClass();

  public abstract java.util.List<java.util.Map<java.lang.String, java.lang.String>> taskConfigs(int);

  public abstract void stop();

  public org.apache.kafka.common.config.Config validate(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method config:()Lorg/apache/kafka/common/config/ConfigDef;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpne     37
      10: new           #6                  // class org/apache/kafka/connect/errors/ConnectException
      13: dup
      14: ldc           #7                  // String %s.config() must return a ConfigDef that is not null.
      16: iconst_1
      17: anewarray     #8                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_0
      23: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      29: aastore
      30: invokestatic  #11                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokespecial #12                 // Method org/apache/kafka/connect/errors/ConnectException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_2
      38: aload_1
      39: invokevirtual #13                 // Method org/apache/kafka/common/config/ConfigDef.validate:(Ljava/util/Map;)Ljava/util/List;
      42: astore_3
      43: new           #14                 // class org/apache/kafka/common/config/Config
      46: dup
      47: aload_3
      48: invokespecial #15                 // Method org/apache/kafka/common/config/Config."<init>":(Ljava/util/List;)V
      51: areturn

  public abstract org.apache.kafka.common.config.ConfigDef config();
}
