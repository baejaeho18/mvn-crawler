Compiled from "SinkRecord.java"
public class org.apache.kafka.connect.sink.SinkRecord extends org.apache.kafka.connect.connector.ConnectRecord<org.apache.kafka.connect.sink.SinkRecord> {
  private final long kafkaOffset;

  private final org.apache.kafka.common.record.TimestampType timestampType;

  public org.apache.kafka.connect.sink.SinkRecord(java.lang.String, int, org.apache.kafka.connect.data.Schema, java.lang.Object, org.apache.kafka.connect.data.Schema, java.lang.Object, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: lload         7
      12: aconst_null
      13: getstatic     #1                  // Field org/apache/kafka/common/record/TimestampType.NO_TIMESTAMP_TYPE:Lorg/apache/kafka/common/record/TimestampType;
      16: invokespecial #2                  // Method "<init>":(Ljava/lang/String;ILorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;JLjava/lang/Long;Lorg/apache/kafka/common/record/TimestampType;)V
      19: return

  public org.apache.kafka.connect.sink.SinkRecord(java.lang.String, int, org.apache.kafka.connect.data.Schema, java.lang.Object, org.apache.kafka.connect.data.Schema, java.lang.Object, long, java.lang.Long, org.apache.kafka.common.record.TimestampType);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: lload         7
      12: aload         9
      14: aload         10
      16: aconst_null
      17: invokespecial #3                  // Method "<init>":(Ljava/lang/String;ILorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;JLjava/lang/Long;Lorg/apache/kafka/common/record/TimestampType;Ljava/lang/Iterable;)V
      20: return

  public org.apache.kafka.connect.sink.SinkRecord(java.lang.String, int, org.apache.kafka.connect.data.Schema, java.lang.Object, org.apache.kafka.connect.data.Schema, java.lang.Object, long, java.lang.Long, org.apache.kafka.common.record.TimestampType, java.lang.Iterable<org.apache.kafka.connect.header.Header>);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         9
      15: aload         11
      17: invokespecial #5                  // Method org/apache/kafka/connect/connector/ConnectRecord."<init>":(Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Ljava/lang/Long;Ljava/lang/Iterable;)V
      20: aload_0
      21: lload         7
      23: putfield      #6                  // Field kafkaOffset:J
      26: aload_0
      27: aload         10
      29: putfield      #7                  // Field timestampType:Lorg/apache/kafka/common/record/TimestampType;
      32: return

  public long kafkaOffset();
    Code:
       0: aload_0
       1: getfield      #6                  // Field kafkaOffset:J
       4: lreturn

  public org.apache.kafka.common.record.TimestampType timestampType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field timestampType:Lorg/apache/kafka/common/record/TimestampType;
       4: areturn

  public org.apache.kafka.connect.sink.SinkRecord newRecord(java.lang.String, java.lang.Integer, org.apache.kafka.connect.data.Schema, java.lang.Object, org.apache.kafka.connect.data.Schema, java.lang.Object, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload_0
      13: invokevirtual #8                  // Method headers:()Lorg/apache/kafka/connect/header/Headers;
      16: invokeinterface #9,  1            // InterfaceMethod org/apache/kafka/connect/header/Headers.duplicate:()Lorg/apache/kafka/connect/header/Headers;
      21: invokevirtual #10                 // Method newRecord:(Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Ljava/lang/Long;Ljava/lang/Iterable;)Lorg/apache/kafka/connect/sink/SinkRecord;
      24: areturn

  public org.apache.kafka.connect.sink.SinkRecord newRecord(java.lang.String, java.lang.Integer, org.apache.kafka.connect.data.Schema, java.lang.Object, org.apache.kafka.connect.data.Schema, java.lang.Object, java.lang.Long, java.lang.Iterable<org.apache.kafka.connect.header.Header>);
    Code:
       0: new           #11                 // class org/apache/kafka/connect/sink/SinkRecord
       3: dup
       4: aload_1
       5: aload_2
       6: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
       9: aload_3
      10: aload         4
      12: aload         5
      14: aload         6
      16: aload_0
      17: invokevirtual #13                 // Method kafkaOffset:()J
      20: aload         7
      22: aload_0
      23: getfield      #7                  // Field timestampType:Lorg/apache/kafka/common/record/TimestampType;
      26: aload         8
      28: invokespecial #3                  // Method "<init>":(Ljava/lang/String;ILorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;JLjava/lang/Long;Lorg/apache/kafka/common/record/TimestampType;Ljava/lang/Iterable;)V
      31: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: aload_1
      26: invokespecial #15                 // Method org/apache/kafka/connect/connector/ConnectRecord.equals:(Ljava/lang/Object;)Z
      29: ifne          34
      32: iconst_0
      33: ireturn
      34: aload_1
      35: checkcast     #11                 // class org/apache/kafka/connect/sink/SinkRecord
      38: astore_2
      39: aload_0
      40: getfield      #6                  // Field kafkaOffset:J
      43: aload_2
      44: getfield      #6                  // Field kafkaOffset:J
      47: lcmp
      48: ifeq          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: getfield      #7                  // Field timestampType:Lorg/apache/kafka/common/record/TimestampType;
      57: aload_2
      58: getfield      #7                  // Field timestampType:Lorg/apache/kafka/common/record/TimestampType;
      61: if_acmpne     68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #16                 // Method org/apache/kafka/connect/connector/ConnectRecord.hashCode:()I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #6                  // Field kafkaOffset:J
      13: invokestatic  #17                 // Method java/lang/Long.hashCode:(J)I
      16: iadd
      17: istore_1
      18: bipush        31
      20: iload_1
      21: imul
      22: aload_0
      23: getfield      #7                  // Field timestampType:Lorg/apache/kafka/common/record/TimestampType;
      26: invokevirtual #18                 // Method org/apache/kafka/common/record/TimestampType.hashCode:()I
      29: iadd
      30: istore_1
      31: iload_1
      32: ireturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String SinkRecord{kafkaOffset=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field kafkaOffset:J
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #24                 // String , timestampType=
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field timestampType:Lorg/apache/kafka/common/record/TimestampType;
      28: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #26                 // String }
      33: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokespecial #27                 // Method org/apache/kafka/connect/connector/ConnectRecord.toString:()Ljava/lang/String;
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public org.apache.kafka.connect.connector.ConnectRecord newRecord(java.lang.String, java.lang.Integer, org.apache.kafka.connect.data.Schema, java.lang.Object, org.apache.kafka.connect.data.Schema, java.lang.Object, java.lang.Long, java.lang.Iterable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokevirtual #10                 // Method newRecord:(Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Ljava/lang/Long;Ljava/lang/Iterable;)Lorg/apache/kafka/connect/sink/SinkRecord;
      17: areturn

  public org.apache.kafka.connect.connector.ConnectRecord newRecord(java.lang.String, java.lang.Integer, org.apache.kafka.connect.data.Schema, java.lang.Object, org.apache.kafka.connect.data.Schema, java.lang.Object, java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokevirtual #29                 // Method newRecord:(Ljava/lang/String;Ljava/lang/Integer;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;Ljava/lang/Long;)Lorg/apache/kafka/connect/sink/SinkRecord;
      15: areturn
}
