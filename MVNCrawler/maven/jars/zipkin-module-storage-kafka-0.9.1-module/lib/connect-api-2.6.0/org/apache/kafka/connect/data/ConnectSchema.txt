Compiled from "ConnectSchema.java"
public class org.apache.kafka.connect.data.ConnectSchema implements org.apache.kafka.connect.data.Schema {
  private static final java.util.Map<org.apache.kafka.connect.data.Schema$Type, java.util.List<java.lang.Class>> SCHEMA_TYPE_CLASSES;

  private static final java.util.Map<java.lang.String, java.util.List<java.lang.Class>> LOGICAL_TYPE_CLASSES;

  private static final java.util.Map<java.lang.Class<?>, org.apache.kafka.connect.data.Schema$Type> JAVA_CLASS_SCHEMA_TYPES;

  private final org.apache.kafka.connect.data.Schema$Type type;

  private final boolean optional;

  private final java.lang.Object defaultValue;

  private final java.util.List<org.apache.kafka.connect.data.Field> fields;

  private final java.util.Map<java.lang.String, org.apache.kafka.connect.data.Field> fieldsByName;

  private final org.apache.kafka.connect.data.Schema keySchema;

  private final org.apache.kafka.connect.data.Schema valueSchema;

  private final java.lang.String name;

  private final java.lang.Integer version;

  private final java.lang.String doc;

  private final java.util.Map<java.lang.String, java.lang.String> parameters;

  private java.lang.Integer hash;

  public org.apache.kafka.connect.data.ConnectSchema(org.apache.kafka.connect.data.Schema$Type, boolean, java.lang.Object, java.lang.String, java.lang.Integer, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, java.util.List<org.apache.kafka.connect.data.Field>, org.apache.kafka.connect.data.Schema, org.apache.kafka.connect.data.Schema);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field hash:Ljava/lang/Integer;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      14: aload_0
      15: iload_2
      16: putfield      #4                  // Field optional:Z
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field defaultValue:Ljava/lang/Object;
      24: aload_0
      25: aload         4
      27: putfield      #6                  // Field name:Ljava/lang/String;
      30: aload_0
      31: aload         5
      33: putfield      #7                  // Field version:Ljava/lang/Integer;
      36: aload_0
      37: aload         6
      39: putfield      #8                  // Field doc:Ljava/lang/String;
      42: aload_0
      43: aload         7
      45: putfield      #9                  // Field parameters:Ljava/util/Map;
      48: aload_0
      49: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      52: getstatic     #10                 // Field org/apache/kafka/connect/data/Schema$Type.STRUCT:Lorg/apache/kafka/connect/data/Schema$Type;
      55: if_acmpne     151
      58: aload_0
      59: aload         8
      61: ifnonnull     70
      64: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      67: goto          72
      70: aload         8
      72: putfield      #12                 // Field fields:Ljava/util/List;
      75: aload_0
      76: new           #13                 // class java/util/HashMap
      79: dup
      80: aload_0
      81: getfield      #12                 // Field fields:Ljava/util/List;
      84: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
      89: invokespecial #15                 // Method java/util/HashMap."<init>":(I)V
      92: putfield      #16                 // Field fieldsByName:Ljava/util/Map;
      95: aload_0
      96: getfield      #12                 // Field fields:Ljava/util/List;
      99: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     104: astore        11
     106: aload         11
     108: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          148
     116: aload         11
     118: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #20                 // class org/apache/kafka/connect/data/Field
     126: astore        12
     128: aload_0
     129: getfield      #16                 // Field fieldsByName:Ljava/util/Map;
     132: aload         12
     134: invokevirtual #21                 // Method org/apache/kafka/connect/data/Field.name:()Ljava/lang/String;
     137: aload         12
     139: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     144: pop
     145: goto          106
     148: goto          161
     151: aload_0
     152: aconst_null
     153: putfield      #12                 // Field fields:Ljava/util/List;
     156: aload_0
     157: aconst_null
     158: putfield      #16                 // Field fieldsByName:Ljava/util/Map;
     161: aload_0
     162: aload         9
     164: putfield      #23                 // Field keySchema:Lorg/apache/kafka/connect/data/Schema;
     167: aload_0
     168: aload         10
     170: putfield      #24                 // Field valueSchema:Lorg/apache/kafka/connect/data/Schema;
     173: return

  public org.apache.kafka.connect.data.ConnectSchema(org.apache.kafka.connect.data.Schema$Type, boolean, java.lang.Object, java.lang.String, java.lang.Integer, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aconst_null
      11: aconst_null
      12: aconst_null
      13: aconst_null
      14: invokespecial #25                 // Method "<init>":(Lorg/apache/kafka/connect/data/Schema$Type;ZLjava/lang/Object;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;Ljava/util/Map;Ljava/util/List;Lorg/apache/kafka/connect/data/Schema;Lorg/apache/kafka/connect/data/Schema;)V
      17: return

  public org.apache.kafka.connect.data.ConnectSchema(org.apache.kafka.connect.data.Schema$Type);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aconst_null
       4: aconst_null
       5: aconst_null
       6: aconst_null
       7: invokespecial #26                 // Method "<init>":(Lorg/apache/kafka/connect/data/Schema$Type;ZLjava/lang/Object;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/String;)V
      10: return

  public org.apache.kafka.connect.data.Schema$Type type();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
       4: areturn

  public boolean isOptional();
    Code:
       0: aload_0
       1: getfield      #4                  // Field optional:Z
       4: ireturn

  public java.lang.Object defaultValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field defaultValue:Ljava/lang/Object;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #6                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.Integer version();
    Code:
       0: aload_0
       1: getfield      #7                  // Field version:Ljava/lang/Integer;
       4: areturn

  public java.lang.String doc();
    Code:
       0: aload_0
       1: getfield      #8                  // Field doc:Ljava/lang/String;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> parameters();
    Code:
       0: aload_0
       1: getfield      #9                  // Field parameters:Ljava/util/Map;
       4: areturn

  public java.util.List<org.apache.kafka.connect.data.Field> fields();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
       4: getstatic     #10                 // Field org/apache/kafka/connect/data/Schema$Type.STRUCT:Lorg/apache/kafka/connect/data/Schema$Type;
       7: if_acmpeq     20
      10: new           #27                 // class org/apache/kafka/connect/errors/DataException
      13: dup
      14: ldc           #28                 // String Cannot list fields on non-struct type
      16: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #12                 // Field fields:Ljava/util/List;
      24: areturn

  public org.apache.kafka.connect.data.Field field(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
       4: getstatic     #10                 // Field org/apache/kafka/connect/data/Schema$Type.STRUCT:Lorg/apache/kafka/connect/data/Schema$Type;
       7: if_acmpeq     20
      10: new           #27                 // class org/apache/kafka/connect/errors/DataException
      13: dup
      14: ldc           #30                 // String Cannot look up fields on non-struct type
      16: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #16                 // Field fieldsByName:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #20                 // class org/apache/kafka/connect/data/Field
      33: areturn

  public org.apache.kafka.connect.data.Schema keySchema();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
       4: getstatic     #32                 // Field org/apache/kafka/connect/data/Schema$Type.MAP:Lorg/apache/kafka/connect/data/Schema$Type;
       7: if_acmpeq     20
      10: new           #27                 // class org/apache/kafka/connect/errors/DataException
      13: dup
      14: ldc           #33                 // String Cannot look up key schema on non-map type
      16: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #23                 // Field keySchema:Lorg/apache/kafka/connect/data/Schema;
      24: areturn

  public org.apache.kafka.connect.data.Schema valueSchema();
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
       4: getstatic     #32                 // Field org/apache/kafka/connect/data/Schema$Type.MAP:Lorg/apache/kafka/connect/data/Schema$Type;
       7: if_acmpeq     30
      10: aload_0
      11: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      14: getstatic     #34                 // Field org/apache/kafka/connect/data/Schema$Type.ARRAY:Lorg/apache/kafka/connect/data/Schema$Type;
      17: if_acmpeq     30
      20: new           #27                 // class org/apache/kafka/connect/errors/DataException
      23: dup
      24: ldc           #35                 // String Cannot look up value schema on non-array and non-map type
      26: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: getfield      #24                 // Field valueSchema:Lorg/apache/kafka/connect/data/Schema;
      34: areturn

  public static void validateValue(org.apache.kafka.connect.data.Schema, java.lang.Object);
    Code:
       0: aconst_null
       1: aload_0
       2: aload_1
       3: invokestatic  #36                 // Method validateValue:(Ljava/lang/String;Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;)V
       6: return

  public static void validateValue(java.lang.String, org.apache.kafka.connect.data.Schema, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     55
       4: aload_1
       5: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.isOptional:()Z
      10: ifne          54
      13: new           #27                 // class org/apache/kafka/connect/errors/DataException
      16: dup
      17: new           #38                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #40                 // String Invalid value: null used for required field: \"
      26: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #42                 // String \", schema type:
      35: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokeinterface #43,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.type:()Lorg/apache/kafka/connect/data/Schema$Type;
      44: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: return
      55: aload_1
      56: invokestatic  #46                 // Method expectedClassesFor:(Lorg/apache/kafka/connect/data/Schema;)Ljava/util/List;
      59: astore_3
      60: aload_3
      61: ifnonnull     122
      64: new           #27                 // class org/apache/kafka/connect/errors/DataException
      67: dup
      68: new           #38                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #47                 // String Invalid Java object for schema type
      77: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_1
      81: invokeinterface #43,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.type:()Lorg/apache/kafka/connect/data/Schema$Type;
      86: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: ldc           #48                 // String :
      91: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_2
      95: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      98: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     101: ldc           #50                 // String  for field: \"
     103: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc           #51                 // String \"
     112: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
     121: athrow
     122: iconst_0
     123: istore        4
     125: aload_3
     126: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
     131: iconst_1
     132: if_icmpne     154
     135: aload_3
     136: iconst_0
     137: invokeinterface #52,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     142: checkcast     #53                 // class java/lang/Class
     145: aload_2
     146: invokevirtual #54                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     149: istore        4
     151: goto          202
     154: aload_3
     155: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     160: astore        5
     162: aload         5
     164: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     169: ifeq          202
     172: aload         5
     174: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     179: checkcast     #53                 // class java/lang/Class
     182: astore        6
     184: aload         6
     186: aload_2
     187: invokevirtual #54                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
     190: ifeq          199
     193: iconst_1
     194: istore        4
     196: goto          202
     199: goto          162
     202: iload         4
     204: ifne          265
     207: new           #27                 // class org/apache/kafka/connect/errors/DataException
     210: dup
     211: new           #38                 // class java/lang/StringBuilder
     214: dup
     215: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     218: ldc           #47                 // String Invalid Java object for schema type
     220: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: aload_1
     224: invokeinterface #43,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.type:()Lorg/apache/kafka/connect/data/Schema$Type;
     229: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     232: ldc           #48                 // String :
     234: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     237: aload_2
     238: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     241: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     244: ldc           #50                 // String  for field: \"
     246: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: aload_0
     250: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: ldc           #51                 // String \"
     255: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     261: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
     264: athrow
     265: getstatic     #55                 // Field org/apache/kafka/connect/data/ConnectSchema$1.$SwitchMap$org$apache$kafka$connect$data$Schema$Type:[I
     268: aload_1
     269: invokeinterface #43,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.type:()Lorg/apache/kafka/connect/data/Schema$Type;
     274: invokevirtual #56                 // Method org/apache/kafka/connect/data/Schema$Type.ordinal:()I
     277: iaload
     278: tableswitch   { // 1 to 3
                     1: 304
                     2: 340
                     3: 391
               default: 468
          }
     304: aload_2
     305: checkcast     #57                 // class org/apache/kafka/connect/data/Struct
     308: astore        5
     310: aload         5
     312: invokevirtual #58                 // Method org/apache/kafka/connect/data/Struct.schema:()Lorg/apache/kafka/connect/data/Schema;
     315: aload_1
     316: invokevirtual #59                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     319: ifne          332
     322: new           #27                 // class org/apache/kafka/connect/errors/DataException
     325: dup
     326: ldc           #60                 // String Struct schemas do not match.
     328: invokespecial #29                 // Method org/apache/kafka/connect/errors/DataException."<init>":(Ljava/lang/String;)V
     331: athrow
     332: aload         5
     334: invokevirtual #61                 // Method org/apache/kafka/connect/data/Struct.validate:()V
     337: goto          468
     340: aload_2
     341: checkcast     #62                 // class java/util/List
     344: astore        6
     346: aload         6
     348: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     353: astore        7
     355: aload         7
     357: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     362: ifeq          388
     365: aload         7
     367: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     372: astore        8
     374: aload_1
     375: invokeinterface #63,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.valueSchema:()Lorg/apache/kafka/connect/data/Schema;
     380: aload         8
     382: invokestatic  #64                 // Method validateValue:(Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;)V
     385: goto          355
     388: goto          468
     391: aload_2
     392: checkcast     #65                 // class java/util/Map
     395: astore        7
     397: aload         7
     399: invokeinterface #66,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     404: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     409: astore        8
     411: aload         8
     413: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     418: ifeq          468
     421: aload         8
     423: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     428: checkcast     #68                 // class java/util/Map$Entry
     431: astore        9
     433: aload_1
     434: invokeinterface #69,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.keySchema:()Lorg/apache/kafka/connect/data/Schema;
     439: aload         9
     441: invokeinterface #70,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     446: invokestatic  #64                 // Method validateValue:(Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;)V
     449: aload_1
     450: invokeinterface #63,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.valueSchema:()Lorg/apache/kafka/connect/data/Schema;
     455: aload         9
     457: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     462: invokestatic  #64                 // Method validateValue:(Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;)V
     465: goto          411
     468: return

  private static java.util.List<java.lang.Class> expectedClassesFor(org.apache.kafka.connect.data.Schema);
    Code:
       0: getstatic     #72                 // Field LOGICAL_TYPE_CLASSES:Ljava/util/Map;
       3: aload_0
       4: invokeinterface #73,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.name:()Ljava/lang/String;
       9: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #62                 // class java/util/List
      17: astore_1
      18: aload_1
      19: ifnonnull     40
      22: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
      25: aload_0
      26: invokeinterface #43,  1           // InterfaceMethod org/apache/kafka/connect/data/Schema.type:()Lorg/apache/kafka/connect/data/Schema$Type;
      31: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #62                 // class java/util/List
      39: astore_1
      40: aload_1
      41: areturn

  public void validateValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #64                 // Method validateValue:(Lorg/apache/kafka/connect/data/Schema;Ljava/lang/Object;)V
       5: return

  public org.apache.kafka.connect.data.ConnectSchema schema();
    Code:
       0: aload_0
       1: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #75                 // class org/apache/kafka/connect/data/ConnectSchema
      28: astore_2
      29: aload_0
      30: getfield      #4                  // Field optional:Z
      33: invokestatic  #76                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      36: aload_2
      37: getfield      #4                  // Field optional:Z
      40: invokestatic  #76                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          179
      49: aload_0
      50: getfield      #7                  // Field version:Ljava/lang/Integer;
      53: aload_2
      54: getfield      #7                  // Field version:Ljava/lang/Integer;
      57: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          179
      63: aload_0
      64: getfield      #6                  // Field name:Ljava/lang/String;
      67: aload_2
      68: getfield      #6                  // Field name:Ljava/lang/String;
      71: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      74: ifeq          179
      77: aload_0
      78: getfield      #8                  // Field doc:Ljava/lang/String;
      81: aload_2
      82: getfield      #8                  // Field doc:Ljava/lang/String;
      85: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      88: ifeq          179
      91: aload_0
      92: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      95: aload_2
      96: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      99: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     102: ifeq          179
     105: aload_0
     106: getfield      #5                  // Field defaultValue:Ljava/lang/Object;
     109: aload_2
     110: getfield      #5                  // Field defaultValue:Ljava/lang/Object;
     113: invokestatic  #78                 // Method java/util/Objects.deepEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     116: ifeq          179
     119: aload_0
     120: getfield      #12                 // Field fields:Ljava/util/List;
     123: aload_2
     124: getfield      #12                 // Field fields:Ljava/util/List;
     127: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     130: ifeq          179
     133: aload_0
     134: getfield      #23                 // Field keySchema:Lorg/apache/kafka/connect/data/Schema;
     137: aload_2
     138: getfield      #23                 // Field keySchema:Lorg/apache/kafka/connect/data/Schema;
     141: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     144: ifeq          179
     147: aload_0
     148: getfield      #24                 // Field valueSchema:Lorg/apache/kafka/connect/data/Schema;
     151: aload_2
     152: getfield      #24                 // Field valueSchema:Lorg/apache/kafka/connect/data/Schema;
     155: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     158: ifeq          179
     161: aload_0
     162: getfield      #9                  // Field parameters:Ljava/util/Map;
     165: aload_2
     166: getfield      #9                  // Field parameters:Ljava/util/Map;
     169: invokestatic  #77                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     172: ifeq          179
     175: iconst_1
     176: goto          180
     179: iconst_0
     180: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hash:Ljava/lang/Integer;
       4: ifnonnull     99
       7: aload_0
       8: bipush        10
      10: anewarray     #79                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_0
      16: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      19: aastore
      20: dup
      21: iconst_1
      22: aload_0
      23: getfield      #4                  // Field optional:Z
      26: invokestatic  #76                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: aastore
      30: dup
      31: iconst_2
      32: aload_0
      33: getfield      #5                  // Field defaultValue:Ljava/lang/Object;
      36: aastore
      37: dup
      38: iconst_3
      39: aload_0
      40: getfield      #12                 // Field fields:Ljava/util/List;
      43: aastore
      44: dup
      45: iconst_4
      46: aload_0
      47: getfield      #23                 // Field keySchema:Lorg/apache/kafka/connect/data/Schema;
      50: aastore
      51: dup
      52: iconst_5
      53: aload_0
      54: getfield      #24                 // Field valueSchema:Lorg/apache/kafka/connect/data/Schema;
      57: aastore
      58: dup
      59: bipush        6
      61: aload_0
      62: getfield      #6                  // Field name:Ljava/lang/String;
      65: aastore
      66: dup
      67: bipush        7
      69: aload_0
      70: getfield      #7                  // Field version:Ljava/lang/Integer;
      73: aastore
      74: dup
      75: bipush        8
      77: aload_0
      78: getfield      #8                  // Field doc:Ljava/lang/String;
      81: aastore
      82: dup
      83: bipush        9
      85: aload_0
      86: getfield      #9                  // Field parameters:Ljava/util/Map;
      89: aastore
      90: invokestatic  #80                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      93: invokestatic  #81                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: putfield      #2                  // Field hash:Ljava/lang/Integer;
      99: aload_0
     100: getfield      #2                  // Field hash:Ljava/lang/Integer;
     103: invokevirtual #82                 // Method java/lang/Integer.intValue:()I
     106: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field name:Ljava/lang/String;
       4: ifnull        47
       7: new           #38                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #83                 // String Schema{
      16: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #6                  // Field name:Ljava/lang/String;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #84                 // String :
      28: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      35: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #85                 // String }
      40: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn
      47: new           #38                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #83                 // String Schema{
      56: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: getfield      #3                  // Field type:Lorg/apache/kafka/connect/data/Schema$Type;
      63: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: ldc           #85                 // String }
      68: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: areturn

  public static org.apache.kafka.connect.data.Schema$Type schemaType(java.lang.Class<?>);
    Code:
       0: getstatic     #86                 // Field JAVA_CLASS_SCHEMA_TYPES:Ljava/util/Map;
       3: dup
       4: astore_1
       5: monitorenter
       6: getstatic     #86                 // Field JAVA_CLASS_SCHEMA_TYPES:Ljava/util/Map;
       9: aload_0
      10: invokeinterface #31,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #87                 // class org/apache/kafka/connect/data/Schema$Type
      18: astore_2
      19: aload_2
      20: ifnull        27
      23: aload_2
      24: aload_1
      25: monitorexit
      26: areturn
      27: getstatic     #86                 // Field JAVA_CLASS_SCHEMA_TYPES:Ljava/util/Map;
      30: invokeinterface #66,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      35: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          111
      50: aload_3
      51: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #68                 // class java/util/Map$Entry
      59: astore        4
      61: aload_0
      62: aload         4
      64: invokeinterface #70,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      69: checkcast     #53                 // class java/lang/Class
      72: invokevirtual #88                 // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      75: pop
      76: getstatic     #86                 // Field JAVA_CLASS_SCHEMA_TYPES:Ljava/util/Map;
      79: aload_0
      80: aload         4
      82: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      87: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload         4
      95: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     100: checkcast     #87                 // class org/apache/kafka/connect/data/Schema$Type
     103: aload_1
     104: monitorexit
     105: areturn
     106: astore        5
     108: goto          41
     111: aload_1
     112: monitorexit
     113: goto          123
     116: astore        6
     118: aload_1
     119: monitorexit
     120: aload         6
     122: athrow
     123: aconst_null
     124: areturn
    Exception table:
       from    to  target type
          61   103   106   Class java/lang/ClassCastException
           6    26   116   any
          27   105   116   any
         106   113   116   any
         116   120   116   any

  public org.apache.kafka.connect.data.Schema schema();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method schema:()Lorg/apache/kafka/connect/data/ConnectSchema;
       4: areturn

  static {};
    Code:
       0: new           #91                 // class java/util/EnumMap
       3: dup
       4: ldc           #87                 // class org/apache/kafka/connect/data/Schema$Type
       6: invokespecial #92                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
       9: putstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
      12: new           #13                 // class java/util/HashMap
      15: dup
      16: invokespecial #93                 // Method java/util/HashMap."<init>":()V
      19: putstatic     #72                 // Field LOGICAL_TYPE_CLASSES:Ljava/util/Map;
      22: new           #13                 // class java/util/HashMap
      25: dup
      26: invokespecial #93                 // Method java/util/HashMap."<init>":()V
      29: putstatic     #86                 // Field JAVA_CLASS_SCHEMA_TYPES:Ljava/util/Map;
      32: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
      35: getstatic     #94                 // Field org/apache/kafka/connect/data/Schema$Type.INT8:Lorg/apache/kafka/connect/data/Schema$Type;
      38: ldc           #95                 // class java/lang/Byte
      40: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      43: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
      52: getstatic     #97                 // Field org/apache/kafka/connect/data/Schema$Type.INT16:Lorg/apache/kafka/connect/data/Schema$Type;
      55: ldc           #98                 // class java/lang/Short
      57: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      60: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
      69: getstatic     #99                 // Field org/apache/kafka/connect/data/Schema$Type.INT32:Lorg/apache/kafka/connect/data/Schema$Type;
      72: ldc           #100                // class java/lang/Integer
      74: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      77: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
      86: getstatic     #101                // Field org/apache/kafka/connect/data/Schema$Type.INT64:Lorg/apache/kafka/connect/data/Schema$Type;
      89: ldc           #102                // class java/lang/Long
      91: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      94: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     103: getstatic     #103                // Field org/apache/kafka/connect/data/Schema$Type.FLOAT32:Lorg/apache/kafka/connect/data/Schema$Type;
     106: ldc           #104                // class java/lang/Float
     108: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     111: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     120: getstatic     #105                // Field org/apache/kafka/connect/data/Schema$Type.FLOAT64:Lorg/apache/kafka/connect/data/Schema$Type;
     123: ldc           #106                // class java/lang/Double
     125: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     128: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     133: pop
     134: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     137: getstatic     #107                // Field org/apache/kafka/connect/data/Schema$Type.BOOLEAN:Lorg/apache/kafka/connect/data/Schema$Type;
     140: ldc           #108                // class java/lang/Boolean
     142: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     145: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     150: pop
     151: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     154: getstatic     #109                // Field org/apache/kafka/connect/data/Schema$Type.STRING:Lorg/apache/kafka/connect/data/Schema$Type;
     157: ldc           #110                // class java/lang/String
     159: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     162: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     167: pop
     168: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     171: getstatic     #111                // Field org/apache/kafka/connect/data/Schema$Type.BYTES:Lorg/apache/kafka/connect/data/Schema$Type;
     174: iconst_2
     175: anewarray     #53                 // class java/lang/Class
     178: dup
     179: iconst_0
     180: ldc           #112                // class "[B"
     182: aastore
     183: dup
     184: iconst_1
     185: ldc           #113                // class java/nio/ByteBuffer
     187: aastore
     188: invokestatic  #114                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     191: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     196: pop
     197: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     200: getstatic     #34                 // Field org/apache/kafka/connect/data/Schema$Type.ARRAY:Lorg/apache/kafka/connect/data/Schema$Type;
     203: ldc           #62                 // class java/util/List
     205: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     208: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     213: pop
     214: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     217: getstatic     #32                 // Field org/apache/kafka/connect/data/Schema$Type.MAP:Lorg/apache/kafka/connect/data/Schema$Type;
     220: ldc           #65                 // class java/util/Map
     222: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     225: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     230: pop
     231: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     234: getstatic     #10                 // Field org/apache/kafka/connect/data/Schema$Type.STRUCT:Lorg/apache/kafka/connect/data/Schema$Type;
     237: ldc           #57                 // class org/apache/kafka/connect/data/Struct
     239: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     242: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     247: pop
     248: getstatic     #74                 // Field SCHEMA_TYPE_CLASSES:Ljava/util/Map;
     251: invokeinterface #66,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     256: invokeinterface #67,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     261: astore_0
     262: aload_0
     263: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     268: ifeq          337
     271: aload_0
     272: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     277: checkcast     #68                 // class java/util/Map$Entry
     280: astore_1
     281: aload_1
     282: invokeinterface #71,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     287: checkcast     #62                 // class java/util/List
     290: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     295: astore_2
     296: aload_2
     297: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     302: ifeq          334
     305: aload_2
     306: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     311: checkcast     #53                 // class java/lang/Class
     314: astore_3
     315: getstatic     #86                 // Field JAVA_CLASS_SCHEMA_TYPES:Ljava/util/Map;
     318: aload_3
     319: aload_1
     320: invokeinterface #70,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     325: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     330: pop
     331: goto          296
     334: goto          262
     337: getstatic     #72                 // Field LOGICAL_TYPE_CLASSES:Ljava/util/Map;
     340: ldc           #116                // String org.apache.kafka.connect.data.Decimal
     342: ldc           #117                // class java/math/BigDecimal
     344: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     347: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     352: pop
     353: getstatic     #72                 // Field LOGICAL_TYPE_CLASSES:Ljava/util/Map;
     356: ldc           #119                // String org.apache.kafka.connect.data.Date
     358: ldc           #120                // class java/util/Date
     360: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     363: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     368: pop
     369: getstatic     #72                 // Field LOGICAL_TYPE_CLASSES:Ljava/util/Map;
     372: ldc           #122                // String org.apache.kafka.connect.data.Time
     374: ldc           #120                // class java/util/Date
     376: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     379: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     384: pop
     385: getstatic     #72                 // Field LOGICAL_TYPE_CLASSES:Ljava/util/Map;
     388: ldc           #124                // String org.apache.kafka.connect.data.Timestamp
     390: ldc           #120                // class java/util/Date
     392: invokestatic  #96                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     395: invokeinterface #22,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     400: pop
     401: return
}
