Compiled from "Schema.java"
public interface org.apache.kafka.connect.data.Schema {
  public static final org.apache.kafka.connect.data.Schema INT8_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema INT16_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema INT32_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema INT64_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema FLOAT32_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema FLOAT64_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema BOOLEAN_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema STRING_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema BYTES_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_INT8_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_INT16_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_INT32_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_INT64_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_FLOAT32_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_FLOAT64_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_BOOLEAN_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_STRING_SCHEMA;

  public static final org.apache.kafka.connect.data.Schema OPTIONAL_BYTES_SCHEMA;

  public abstract org.apache.kafka.connect.data.Schema$Type type();

  public abstract boolean isOptional();

  public abstract java.lang.Object defaultValue();

  public abstract java.lang.String name();

  public abstract java.lang.Integer version();

  public abstract java.lang.String doc();

  public abstract java.util.Map<java.lang.String, java.lang.String> parameters();

  public abstract org.apache.kafka.connect.data.Schema keySchema();

  public abstract org.apache.kafka.connect.data.Schema valueSchema();

  public abstract java.util.List<org.apache.kafka.connect.data.Field> fields();

  public abstract org.apache.kafka.connect.data.Field field(java.lang.String);

  public abstract org.apache.kafka.connect.data.Schema schema();

  static {};
    Code:
       0: invokestatic  #1                  // Method org/apache/kafka/connect/data/SchemaBuilder.int8:()Lorg/apache/kafka/connect/data/SchemaBuilder;
       3: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
       6: putstatic     #3                  // Field INT8_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
       9: invokestatic  #4                  // Method org/apache/kafka/connect/data/SchemaBuilder.int16:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      12: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      15: putstatic     #5                  // Field INT16_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      18: invokestatic  #6                  // Method org/apache/kafka/connect/data/SchemaBuilder.int32:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      21: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      24: putstatic     #7                  // Field INT32_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      27: invokestatic  #8                  // Method org/apache/kafka/connect/data/SchemaBuilder.int64:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      30: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      33: putstatic     #9                  // Field INT64_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      36: invokestatic  #10                 // Method org/apache/kafka/connect/data/SchemaBuilder.float32:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      39: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      42: putstatic     #11                 // Field FLOAT32_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      45: invokestatic  #12                 // Method org/apache/kafka/connect/data/SchemaBuilder.float64:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      48: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      51: putstatic     #13                 // Field FLOAT64_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      54: invokestatic  #14                 // Method org/apache/kafka/connect/data/SchemaBuilder.bool:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      57: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      60: putstatic     #15                 // Field BOOLEAN_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      63: invokestatic  #16                 // Method org/apache/kafka/connect/data/SchemaBuilder.string:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      66: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      69: putstatic     #17                 // Field STRING_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      72: invokestatic  #18                 // Method org/apache/kafka/connect/data/SchemaBuilder.bytes:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      75: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      78: putstatic     #19                 // Field BYTES_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      81: invokestatic  #1                  // Method org/apache/kafka/connect/data/SchemaBuilder.int8:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      84: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      87: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
      90: putstatic     #21                 // Field OPTIONAL_INT8_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
      93: invokestatic  #4                  // Method org/apache/kafka/connect/data/SchemaBuilder.int16:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      96: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
      99: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     102: putstatic     #22                 // Field OPTIONAL_INT16_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     105: invokestatic  #6                  // Method org/apache/kafka/connect/data/SchemaBuilder.int32:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     108: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     111: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     114: putstatic     #23                 // Field OPTIONAL_INT32_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     117: invokestatic  #8                  // Method org/apache/kafka/connect/data/SchemaBuilder.int64:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     120: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     123: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     126: putstatic     #24                 // Field OPTIONAL_INT64_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     129: invokestatic  #10                 // Method org/apache/kafka/connect/data/SchemaBuilder.float32:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     132: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     135: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     138: putstatic     #25                 // Field OPTIONAL_FLOAT32_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     141: invokestatic  #12                 // Method org/apache/kafka/connect/data/SchemaBuilder.float64:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     144: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     147: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     150: putstatic     #26                 // Field OPTIONAL_FLOAT64_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     153: invokestatic  #14                 // Method org/apache/kafka/connect/data/SchemaBuilder.bool:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     156: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     159: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     162: putstatic     #27                 // Field OPTIONAL_BOOLEAN_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     165: invokestatic  #16                 // Method org/apache/kafka/connect/data/SchemaBuilder.string:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     168: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     171: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     174: putstatic     #28                 // Field OPTIONAL_STRING_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     177: invokestatic  #18                 // Method org/apache/kafka/connect/data/SchemaBuilder.bytes:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     180: invokevirtual #20                 // Method org/apache/kafka/connect/data/SchemaBuilder.optional:()Lorg/apache/kafka/connect/data/SchemaBuilder;
     183: invokevirtual #2                  // Method org/apache/kafka/connect/data/SchemaBuilder.build:()Lorg/apache/kafka/connect/data/Schema;
     186: putstatic     #29                 // Field OPTIONAL_BYTES_SCHEMA:Lorg/apache/kafka/connect/data/Schema;
     189: return
}
