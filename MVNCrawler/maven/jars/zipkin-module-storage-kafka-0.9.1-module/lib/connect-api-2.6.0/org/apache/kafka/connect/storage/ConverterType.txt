Compiled from "ConverterType.java"
public final class org.apache.kafka.connect.storage.ConverterType extends java.lang.Enum<org.apache.kafka.connect.storage.ConverterType> {
  public static final org.apache.kafka.connect.storage.ConverterType KEY;

  public static final org.apache.kafka.connect.storage.ConverterType VALUE;

  public static final org.apache.kafka.connect.storage.ConverterType HEADER;

  private static final java.util.Map<java.lang.String, org.apache.kafka.connect.storage.ConverterType> NAME_TO_TYPE;

  private java.lang.String name;

  private static final org.apache.kafka.connect.storage.ConverterType[] $VALUES;

  public static org.apache.kafka.connect.storage.ConverterType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/kafka/connect/storage/ConverterType;
       3: invokevirtual #2                  // Method "[Lorg/apache/kafka/connect/storage/ConverterType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/kafka/connect/storage/ConverterType;"
       9: areturn

  public static org.apache.kafka.connect.storage.ConverterType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/apache/kafka/connect/storage/ConverterType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/apache/kafka/connect/storage/ConverterType
       9: areturn

  public static org.apache.kafka.connect.storage.ConverterType withName(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: getstatic     #6                  // Field NAME_TO_TYPE:Ljava/util/Map;
       9: aload_0
      10: invokestatic  #7                  // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      13: invokevirtual #8                  // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      16: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #4                  // class org/apache/kafka/connect/storage/ConverterType
      24: areturn

  private org.apache.kafka.connect.storage.ConverterType();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #10                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_0
       8: invokevirtual #11                 // Method name:()Ljava/lang/String;
      11: getstatic     #12                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      14: invokevirtual #8                  // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      17: putfield      #13                 // Field name:Ljava/lang/String;
      20: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field name:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class org/apache/kafka/connect/storage/ConverterType
       3: dup
       4: ldc           #14                 // String KEY
       6: iconst_0
       7: invokespecial #15                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #16                 // Field KEY:Lorg/apache/kafka/connect/storage/ConverterType;
      13: new           #4                  // class org/apache/kafka/connect/storage/ConverterType
      16: dup
      17: ldc           #17                 // String VALUE
      19: iconst_1
      20: invokespecial #15                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #18                 // Field VALUE:Lorg/apache/kafka/connect/storage/ConverterType;
      26: new           #4                  // class org/apache/kafka/connect/storage/ConverterType
      29: dup
      30: ldc           #19                 // String HEADER
      32: iconst_2
      33: invokespecial #15                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #20                 // Field HEADER:Lorg/apache/kafka/connect/storage/ConverterType;
      39: iconst_3
      40: anewarray     #4                  // class org/apache/kafka/connect/storage/ConverterType
      43: dup
      44: iconst_0
      45: getstatic     #16                 // Field KEY:Lorg/apache/kafka/connect/storage/ConverterType;
      48: aastore
      49: dup
      50: iconst_1
      51: getstatic     #18                 // Field VALUE:Lorg/apache/kafka/connect/storage/ConverterType;
      54: aastore
      55: dup
      56: iconst_2
      57: getstatic     #20                 // Field HEADER:Lorg/apache/kafka/connect/storage/ConverterType;
      60: aastore
      61: putstatic     #1                  // Field $VALUES:[Lorg/apache/kafka/connect/storage/ConverterType;
      64: invokestatic  #21                 // Method values:()[Lorg/apache/kafka/connect/storage/ConverterType;
      67: astore_0
      68: new           #22                 // class java/util/HashMap
      71: dup
      72: aload_0
      73: arraylength
      74: invokespecial #23                 // Method java/util/HashMap."<init>":(I)V
      77: astore_1
      78: aload_0
      79: astore_2
      80: aload_2
      81: arraylength
      82: istore_3
      83: iconst_0
      84: istore        4
      86: iload         4
      88: iload_3
      89: if_icmpge     118
      92: aload_2
      93: iload         4
      95: aaload
      96: astore        5
      98: aload_1
      99: aload         5
     101: getfield      #13                 // Field name:Ljava/lang/String;
     104: aload         5
     106: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: iinc          4, 1
     115: goto          86
     118: aload_1
     119: invokestatic  #25                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     122: putstatic     #6                  // Field NAME_TO_TYPE:Ljava/util/Map;
     125: return
}
