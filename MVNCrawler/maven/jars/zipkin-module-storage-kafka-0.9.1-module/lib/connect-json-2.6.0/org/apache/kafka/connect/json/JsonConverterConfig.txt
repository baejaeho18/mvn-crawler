Compiled from "JsonConverterConfig.java"
public class org.apache.kafka.connect.json.JsonConverterConfig extends org.apache.kafka.connect.storage.ConverterConfig {
  public static final java.lang.String SCHEMAS_ENABLE_CONFIG;

  public static final boolean SCHEMAS_ENABLE_DEFAULT;

  private static final java.lang.String SCHEMAS_ENABLE_DOC;

  private static final java.lang.String SCHEMAS_ENABLE_DISPLAY;

  public static final java.lang.String SCHEMAS_CACHE_SIZE_CONFIG;

  public static final int SCHEMAS_CACHE_SIZE_DEFAULT;

  private static final java.lang.String SCHEMAS_CACHE_SIZE_DOC;

  private static final java.lang.String SCHEMAS_CACHE_SIZE_DISPLAY;

  public static final java.lang.String DECIMAL_FORMAT_CONFIG;

  public static final java.lang.String DECIMAL_FORMAT_DEFAULT;

  private static final java.lang.String DECIMAL_FORMAT_DOC;

  private static final java.lang.String DECIMAL_FORMAT_DISPLAY;

  private static final org.apache.kafka.common.config.ConfigDef CONFIG;

  private final boolean schemasEnabled;

  private final int schemaCacheSize;

  private final org.apache.kafka.connect.json.DecimalFormat decimalFormat;

  public static org.apache.kafka.common.config.ConfigDef configDef();
    Code:
       0: getstatic     #1                  // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
       3: areturn

  public org.apache.kafka.connect.json.JsonConverterConfig(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getstatic     #1                  // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
       4: aload_1
       5: invokespecial #2                  // Method org/apache/kafka/connect/storage/ConverterConfig."<init>":(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;)V
       8: aload_0
       9: aload_0
      10: ldc           #4                  // String schemas.enable
      12: invokevirtual #5                  // Method getBoolean:(Ljava/lang/String;)Ljava/lang/Boolean;
      15: invokevirtual #6                  // Method java/lang/Boolean.booleanValue:()Z
      18: putfield      #7                  // Field schemasEnabled:Z
      21: aload_0
      22: aload_0
      23: ldc           #8                  // String schemas.cache.size
      25: invokevirtual #9                  // Method getInt:(Ljava/lang/String;)Ljava/lang/Integer;
      28: invokevirtual #10                 // Method java/lang/Integer.intValue:()I
      31: putfield      #11                 // Field schemaCacheSize:I
      34: aload_0
      35: aload_0
      36: ldc           #12                 // String decimal.format
      38: invokevirtual #13                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
      41: getstatic     #14                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      44: invokevirtual #15                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      47: invokestatic  #16                 // Method org/apache/kafka/connect/json/DecimalFormat.valueOf:(Ljava/lang/String;)Lorg/apache/kafka/connect/json/DecimalFormat;
      50: putfield      #17                 // Field decimalFormat:Lorg/apache/kafka/connect/json/DecimalFormat;
      53: return

  public boolean schemasEnabled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field schemasEnabled:Z
       4: ireturn

  public int schemaCacheSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field schemaCacheSize:I
       4: ireturn

  public org.apache.kafka.connect.json.DecimalFormat decimalFormat();
    Code:
       0: aload_0
       1: getfield      #17                 // Field decimalFormat:Lorg/apache/kafka/connect/json/DecimalFormat;
       4: areturn

  static {};
    Code:
       0: getstatic     #18                 // Field org/apache/kafka/connect/json/DecimalFormat.BASE64:Lorg/apache/kafka/connect/json/DecimalFormat;
       3: invokevirtual #19                 // Method org/apache/kafka/connect/json/DecimalFormat.name:()Ljava/lang/String;
       6: putstatic     #20                 // Field DECIMAL_FORMAT_DEFAULT:Ljava/lang/String;
       9: ldc           #21                 // String Schemas
      11: astore_0
      12: iconst_0
      13: istore_1
      14: invokestatic  #22                 // Method org/apache/kafka/connect/storage/ConverterConfig.newConfigDef:()Lorg/apache/kafka/common/config/ConfigDef;
      17: putstatic     #1                  // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
      20: getstatic     #1                  // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
      23: ldc           #4                  // String schemas.enable
      25: getstatic     #23                 // Field org/apache/kafka/common/config/ConfigDef$Type.BOOLEAN:Lorg/apache/kafka/common/config/ConfigDef$Type;
      28: iconst_1
      29: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      32: getstatic     #25                 // Field org/apache/kafka/common/config/ConfigDef$Importance.HIGH:Lorg/apache/kafka/common/config/ConfigDef$Importance;
      35: ldc           #26                 // String Include schemas within each of the serialized values and keys.
      37: aload_0
      38: iload_1
      39: iinc          1, 1
      42: getstatic     #27                 // Field org/apache/kafka/common/config/ConfigDef$Width.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Width;
      45: ldc           #28                 // String Enable Schemas
      47: invokevirtual #29                 // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
      50: pop
      51: getstatic     #1                  // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
      54: ldc           #8                  // String schemas.cache.size
      56: getstatic     #30                 // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
      59: sipush        1000
      62: invokestatic  #31                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: getstatic     #25                 // Field org/apache/kafka/common/config/ConfigDef$Importance.HIGH:Lorg/apache/kafka/common/config/ConfigDef$Importance;
      68: ldc           #32                 // String The maximum number of schemas that can be cached in this converter instance.
      70: aload_0
      71: iload_1
      72: iinc          1, 1
      75: getstatic     #27                 // Field org/apache/kafka/common/config/ConfigDef$Width.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Width;
      78: ldc           #33                 // String Schema Cache Size
      80: invokevirtual #29                 // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
      83: pop
      84: ldc           #34                 // String Serialization
      86: astore_0
      87: iconst_0
      88: istore_1
      89: getstatic     #1                  // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
      92: ldc           #12                 // String decimal.format
      94: getstatic     #35                 // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
      97: getstatic     #20                 // Field DECIMAL_FORMAT_DEFAULT:Ljava/lang/String;
     100: iconst_2
     101: anewarray     #36                 // class java/lang/String
     104: dup
     105: iconst_0
     106: getstatic     #18                 // Field org/apache/kafka/connect/json/DecimalFormat.BASE64:Lorg/apache/kafka/connect/json/DecimalFormat;
     109: invokevirtual #19                 // Method org/apache/kafka/connect/json/DecimalFormat.name:()Ljava/lang/String;
     112: aastore
     113: dup
     114: iconst_1
     115: getstatic     #37                 // Field org/apache/kafka/connect/json/DecimalFormat.NUMERIC:Lorg/apache/kafka/connect/json/DecimalFormat;
     118: invokevirtual #19                 // Method org/apache/kafka/connect/json/DecimalFormat.name:()Ljava/lang/String;
     121: aastore
     122: invokestatic  #38                 // Method org/apache/kafka/common/config/ConfigDef$CaseInsensitiveValidString.in:([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$CaseInsensitiveValidString;
     125: getstatic     #39                 // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     128: ldc           #40                 // String Controls which format this converter will serialize decimals in. This value is case insensitive and can be either \'BASE64\' (default) or \'NUMERIC\'
     130: aload_0
     131: iload_1
     132: iinc          1, 1
     135: getstatic     #27                 // Field org/apache/kafka/common/config/ConfigDef$Width.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Width;
     138: ldc           #41                 // String Decimal Format
     140: invokevirtual #42                 // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;Ljava/lang/String;ILorg/apache/kafka/common/config/ConfigDef$Width;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     143: pop
     144: return
}
