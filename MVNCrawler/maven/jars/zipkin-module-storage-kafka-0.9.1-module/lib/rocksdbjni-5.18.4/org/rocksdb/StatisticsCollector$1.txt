Compiled from "StatisticsCollector.java"
class org.rocksdb.StatisticsCollector$1 implements java.lang.Runnable {
  final org.rocksdb.StatisticsCollector this$0;

  org.rocksdb.StatisticsCollector$1(org.rocksdb.StatisticsCollector);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/rocksdb/StatisticsCollector;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/rocksdb/StatisticsCollector;
       4: invokestatic  #3                  // Method org/rocksdb/StatisticsCollector.access$000:(Lorg/rocksdb/StatisticsCollector;)Z
       7: ifeq          224
      10: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      13: invokevirtual #5                  // Method java/lang/Thread.isInterrupted:()Z
      16: ifeq          22
      19: goto          224
      22: aload_0
      23: getfield      #1                  // Field this$0:Lorg/rocksdb/StatisticsCollector;
      26: invokestatic  #6                  // Method org/rocksdb/StatisticsCollector.access$100:(Lorg/rocksdb/StatisticsCollector;)Ljava/util/List;
      29: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      34: astore_1
      35: aload_1
      36: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          188
      44: aload_1
      45: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #10                 // class org/rocksdb/StatsCollectorInput
      53: astore_2
      54: aload_2
      55: invokevirtual #11                 // Method org/rocksdb/StatsCollectorInput.getStatistics:()Lorg/rocksdb/Statistics;
      58: astore_3
      59: aload_2
      60: invokevirtual #12                 // Method org/rocksdb/StatsCollectorInput.getCallback:()Lorg/rocksdb/StatisticsCollectorCallback;
      63: astore        4
      65: invokestatic  #13                 // Method org/rocksdb/TickerType.values:()[Lorg/rocksdb/TickerType;
      68: astore        5
      70: aload         5
      72: arraylength
      73: istore        6
      75: iconst_0
      76: istore        7
      78: iload         7
      80: iload         6
      82: if_icmpge     125
      85: aload         5
      87: iload         7
      89: aaload
      90: astore        8
      92: aload         8
      94: getstatic     #14                 // Field org/rocksdb/TickerType.TICKER_ENUM_MAX:Lorg/rocksdb/TickerType;
      97: if_acmpeq     119
     100: aload_3
     101: aload         8
     103: invokevirtual #15                 // Method org/rocksdb/Statistics.getTickerCount:(Lorg/rocksdb/TickerType;)J
     106: lstore        9
     108: aload         4
     110: aload         8
     112: lload         9
     114: invokeinterface #16,  4           // InterfaceMethod org/rocksdb/StatisticsCollectorCallback.tickerCallback:(Lorg/rocksdb/TickerType;J)V
     119: iinc          7, 1
     122: goto          78
     125: invokestatic  #17                 // Method org/rocksdb/HistogramType.values:()[Lorg/rocksdb/HistogramType;
     128: astore        5
     130: aload         5
     132: arraylength
     133: istore        6
     135: iconst_0
     136: istore        7
     138: iload         7
     140: iload         6
     142: if_icmpge     185
     145: aload         5
     147: iload         7
     149: aaload
     150: astore        8
     152: aload         8
     154: getstatic     #18                 // Field org/rocksdb/HistogramType.HISTOGRAM_ENUM_MAX:Lorg/rocksdb/HistogramType;
     157: if_acmpeq     179
     160: aload_3
     161: aload         8
     163: invokevirtual #19                 // Method org/rocksdb/Statistics.getHistogramData:(Lorg/rocksdb/HistogramType;)Lorg/rocksdb/HistogramData;
     166: astore        9
     168: aload         4
     170: aload         8
     172: aload         9
     174: invokeinterface #20,  3           // InterfaceMethod org/rocksdb/StatisticsCollectorCallback.histogramCallback:(Lorg/rocksdb/HistogramType;Lorg/rocksdb/HistogramData;)V
     179: iinc          7, 1
     182: goto          138
     185: goto          35
     188: aload_0
     189: getfield      #1                  // Field this$0:Lorg/rocksdb/StatisticsCollector;
     192: invokestatic  #21                 // Method org/rocksdb/StatisticsCollector.access$200:(Lorg/rocksdb/StatisticsCollector;)I
     195: i2l
     196: invokestatic  #22                 // Method java/lang/Thread.sleep:(J)V
     199: goto          0
     202: astore_1
     203: invokestatic  #4                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     206: invokevirtual #24                 // Method java/lang/Thread.interrupt:()V
     209: goto          224
     212: astore_1
     213: new           #26                 // class java/lang/RuntimeException
     216: dup
     217: ldc           #27                 // String Error while calculating statistics
     219: aload_1
     220: invokespecial #28                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     223: athrow
     224: return
    Exception table:
       from    to  target type
          10    19   202   Class java/lang/InterruptedException
          22   199   202   Class java/lang/InterruptedException
          10    19   212   Class java/lang/Exception
          22   199   212   Class java/lang/Exception
}
