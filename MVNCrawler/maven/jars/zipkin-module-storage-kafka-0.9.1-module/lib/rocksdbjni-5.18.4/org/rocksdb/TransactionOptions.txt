Compiled from "TransactionOptions.java"
public class org.rocksdb.TransactionOptions extends org.rocksdb.RocksObject implements org.rocksdb.TransactionalOptions {
  static final boolean $assertionsDisabled;

  public org.rocksdb.TransactionOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newTransactionOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public boolean isSetSnapshot();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #8                  // Method isSetSnapshot:(J)Z
      29: ireturn

  public org.rocksdb.TransactionOptions setSetSnapshot(boolean);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #9                  // Method setSetSnapshot:(JZ)V
      30: aload_0
      31: areturn

  public boolean isDeadlockDetect();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #10                 // Method isDeadlockDetect:(J)Z
      29: ireturn

  public org.rocksdb.TransactionOptions setDeadlockDetect(boolean);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #11                 // Method setDeadlockDetect:(JZ)V
      30: aload_0
      31: areturn

  public long getLockTimeout();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #12                 // Method getLockTimeout:(J)J
      29: lreturn

  public org.rocksdb.TransactionOptions setLockTimeout(long);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #13                 // Method setLockTimeout:(JJ)V
      30: aload_0
      31: areturn

  public long getExpiration();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #14                 // Method getExpiration:(J)J
      29: lreturn

  public org.rocksdb.TransactionOptions setExpiration(long);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #15                 // Method setExpiration:(JJ)V
      30: aload_0
      31: areturn

  public long getDeadlockDetectDepth();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field nativeHandle_:J
       5: invokespecial #16                 // Method getDeadlockDetectDepth:(J)J
       8: lreturn

  public org.rocksdb.TransactionOptions setDeadlockDetectDepth(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #17                 // Method setDeadlockDetectDepth:(JJ)V
       9: aload_0
      10: areturn

  public long getMaxWriteBatchSize();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field nativeHandle_:J
       5: invokespecial #18                 // Method getMaxWriteBatchSize:(J)J
       8: lreturn

  public org.rocksdb.TransactionOptions setMaxWriteBatchSize(long);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field nativeHandle_:J
       5: lload_1
       6: invokespecial #19                 // Method setMaxWriteBatchSize:(JJ)V
       9: aload_0
      10: areturn

  private static native long newTransactionOptions();

  private native boolean isSetSnapshot(long);

  private native void setSetSnapshot(long, boolean);

  private native boolean isDeadlockDetect(long);

  private native void setDeadlockDetect(long, boolean);

  private native long getLockTimeout(long);

  private native void setLockTimeout(long, long);

  private native long getExpiration(long);

  private native void setExpiration(long, long);

  private native long getDeadlockDetectDepth(long);

  private native void setDeadlockDetectDepth(long, long);

  private native long getMaxWriteBatchSize(long);

  private native void setMaxWriteBatchSize(long, long);

  protected final native void disposeInternal(long);

  public org.rocksdb.TransactionalOptions setSetSnapshot(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method setSetSnapshot:(Z)Lorg/rocksdb/TransactionOptions;
       5: areturn

  static {};
    Code:
       0: ldc_w         #21                 // class org/rocksdb/TransactionOptions
       3: invokevirtual #22                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #3                  // Field $assertionsDisabled:Z
      17: return
}
