Compiled from "MutableColumnFamilyOptions.java"
public final class org.rocksdb.MutableColumnFamilyOptions$CompactionOption extends java.lang.Enum<org.rocksdb.MutableColumnFamilyOptions$CompactionOption> implements org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey {
  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption disable_auto_compactions;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption soft_rate_limit;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption soft_pending_compaction_bytes_limit;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption hard_rate_limit;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption hard_pending_compaction_bytes_limit;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption level0_file_num_compaction_trigger;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption level0_slowdown_writes_trigger;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption level0_stop_writes_trigger;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption max_compaction_bytes;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption target_file_size_base;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption target_file_size_multiplier;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption max_bytes_for_level_base;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption max_bytes_for_level_multiplier;

  public static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption max_bytes_for_level_multiplier_additional;

  private final org.rocksdb.MutableColumnFamilyOptions$ValueType valueType;

  private static final org.rocksdb.MutableColumnFamilyOptions$CompactionOption[] $VALUES;

  public static org.rocksdb.MutableColumnFamilyOptions$CompactionOption[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       3: invokevirtual #2                  // Method "[Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;"
       9: areturn

  public static org.rocksdb.MutableColumnFamilyOptions$CompactionOption valueOf(java.lang.String);
    Code:
       0: ldc_w         #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
       3: aload_0
       4: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
      10: areturn

  private org.rocksdb.MutableColumnFamilyOptions$CompactionOption(org.rocksdb.MutableColumnFamilyOptions$ValueType);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field valueType:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      11: return

  public org.rocksdb.MutableColumnFamilyOptions$ValueType getValueType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field valueType:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       4: areturn

  static {};
    Code:
       0: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
       3: dup
       4: ldc           #8                  // String disable_auto_compactions
       6: iconst_0
       7: getstatic     #9                  // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.BOOLEAN:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      10: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
      13: putstatic     #11                 // Field disable_auto_compactions:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      16: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
      19: dup
      20: ldc           #12                 // String soft_rate_limit
      22: iconst_1
      23: getstatic     #13                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.DOUBLE:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      26: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
      29: putstatic     #14                 // Field soft_rate_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      32: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
      35: dup
      36: ldc           #15                 // String soft_pending_compaction_bytes_limit
      38: iconst_2
      39: getstatic     #16                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.LONG:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      42: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
      45: putstatic     #17                 // Field soft_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      48: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
      51: dup
      52: ldc           #18                 // String hard_rate_limit
      54: iconst_3
      55: getstatic     #13                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.DOUBLE:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      58: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
      61: putstatic     #19                 // Field hard_rate_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      64: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
      67: dup
      68: ldc           #20                 // String hard_pending_compaction_bytes_limit
      70: iconst_4
      71: getstatic     #16                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.LONG:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      74: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
      77: putstatic     #21                 // Field hard_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      80: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
      83: dup
      84: ldc           #22                 // String level0_file_num_compaction_trigger
      86: iconst_5
      87: getstatic     #23                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      90: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
      93: putstatic     #24                 // Field level0_file_num_compaction_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      96: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
      99: dup
     100: ldc           #25                 // String level0_slowdown_writes_trigger
     102: bipush        6
     104: getstatic     #23                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     107: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     110: putstatic     #26                 // Field level0_slowdown_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     113: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     116: dup
     117: ldc           #27                 // String level0_stop_writes_trigger
     119: bipush        7
     121: getstatic     #23                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     124: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     127: putstatic     #28                 // Field level0_stop_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     130: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     133: dup
     134: ldc           #29                 // String max_compaction_bytes
     136: bipush        8
     138: getstatic     #16                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.LONG:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     141: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     144: putstatic     #30                 // Field max_compaction_bytes:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     147: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     150: dup
     151: ldc           #31                 // String target_file_size_base
     153: bipush        9
     155: getstatic     #16                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.LONG:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     158: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     161: putstatic     #32                 // Field target_file_size_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     164: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     167: dup
     168: ldc           #33                 // String target_file_size_multiplier
     170: bipush        10
     172: getstatic     #23                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     175: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     178: putstatic     #34                 // Field target_file_size_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     181: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     184: dup
     185: ldc           #35                 // String max_bytes_for_level_base
     187: bipush        11
     189: getstatic     #16                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.LONG:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     192: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     195: putstatic     #36                 // Field max_bytes_for_level_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     198: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     201: dup
     202: ldc           #37                 // String max_bytes_for_level_multiplier
     204: bipush        12
     206: getstatic     #23                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     209: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     212: putstatic     #38                 // Field max_bytes_for_level_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     215: new           #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     218: dup
     219: ldc           #39                 // String max_bytes_for_level_multiplier_additional
     221: bipush        13
     223: getstatic     #40                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT_ARRAY:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     226: invokespecial #10                 // Method "<init>":(Ljava/lang/String;ILorg/rocksdb/MutableColumnFamilyOptions$ValueType;)V
     229: putstatic     #41                 // Field max_bytes_for_level_multiplier_additional:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     232: bipush        14
     234: anewarray     #4                  // class org/rocksdb/MutableColumnFamilyOptions$CompactionOption
     237: dup
     238: iconst_0
     239: getstatic     #11                 // Field disable_auto_compactions:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     242: aastore
     243: dup
     244: iconst_1
     245: getstatic     #14                 // Field soft_rate_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     248: aastore
     249: dup
     250: iconst_2
     251: getstatic     #17                 // Field soft_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     254: aastore
     255: dup
     256: iconst_3
     257: getstatic     #19                 // Field hard_rate_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     260: aastore
     261: dup
     262: iconst_4
     263: getstatic     #21                 // Field hard_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     266: aastore
     267: dup
     268: iconst_5
     269: getstatic     #24                 // Field level0_file_num_compaction_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     272: aastore
     273: dup
     274: bipush        6
     276: getstatic     #26                 // Field level0_slowdown_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     279: aastore
     280: dup
     281: bipush        7
     283: getstatic     #28                 // Field level0_stop_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     286: aastore
     287: dup
     288: bipush        8
     290: getstatic     #30                 // Field max_compaction_bytes:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     293: aastore
     294: dup
     295: bipush        9
     297: getstatic     #32                 // Field target_file_size_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     300: aastore
     301: dup
     302: bipush        10
     304: getstatic     #34                 // Field target_file_size_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     307: aastore
     308: dup
     309: bipush        11
     311: getstatic     #36                 // Field max_bytes_for_level_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     314: aastore
     315: dup
     316: bipush        12
     318: getstatic     #38                 // Field max_bytes_for_level_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     321: aastore
     322: dup
     323: bipush        13
     325: getstatic     #41                 // Field max_bytes_for_level_multiplier_additional:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     328: aastore
     329: putstatic     #1                  // Field $VALUES:[Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
     332: return
}
