Compiled from "OptimisticTransactionOptions.java"
public class org.rocksdb.OptimisticTransactionOptions extends org.rocksdb.RocksObject implements org.rocksdb.TransactionalOptions {
  static final boolean $assertionsDisabled;

  public org.rocksdb.OptimisticTransactionOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newOptimisticTransactionOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public boolean isSetSnapshot();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: invokespecial #8                  // Method isSetSnapshot:(J)Z
      29: ireturn

  public org.rocksdb.OptimisticTransactionOptions setSetSnapshot(boolean);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #9                  // Method setSetSnapshot:(JZ)V
      30: aload_0
      31: areturn

  public org.rocksdb.OptimisticTransactionOptions setComparator(org.rocksdb.AbstractComparator<? extends org.rocksdb.AbstractSlice<?>>);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #4                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #5                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #6                  // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field nativeHandle_:J
      26: aload_1
      27: getfield      #10                 // Field org/rocksdb/AbstractComparator.nativeHandle_:J
      30: invokespecial #11                 // Method setComparator:(JJ)V
      33: aload_0
      34: areturn

  private static native long newOptimisticTransactionOptions();

  private native boolean isSetSnapshot(long);

  private native void setSetSnapshot(long, boolean);

  private native void setComparator(long, long);

  protected final native void disposeInternal(long);

  public org.rocksdb.TransactionalOptions setSetSnapshot(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #12                 // Method setSetSnapshot:(Z)Lorg/rocksdb/OptimisticTransactionOptions;
       5: areturn

  static {};
    Code:
       0: ldc_w         #13                 // class org/rocksdb/OptimisticTransactionOptions
       3: invokevirtual #14                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #3                  // Field $assertionsDisabled:Z
      17: return
}
