Compiled from "WriteBatchWithIndex.java"
public class org.rocksdb.WriteBatchWithIndex extends org.rocksdb.AbstractWriteBatch {
  public org.rocksdb.WriteBatchWithIndex();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newWriteBatchWithIndex:()J
       4: invokespecial #2                  // Method org/rocksdb/AbstractWriteBatch."<init>":(J)V
       7: return

  public org.rocksdb.WriteBatchWithIndex(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #3                  // Method newWriteBatchWithIndex:(Z)J
       5: invokespecial #2                  // Method org/rocksdb/AbstractWriteBatch."<init>":(J)V
       8: return

  public org.rocksdb.WriteBatchWithIndex(org.rocksdb.AbstractComparator<? extends org.rocksdb.AbstractSlice<?>>, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #4                  // Field org/rocksdb/AbstractComparator.nativeHandle_:J
       5: aload_1
       6: invokevirtual #5                  // Method org/rocksdb/AbstractComparator.getComparatorType:()Lorg/rocksdb/ComparatorType;
       9: invokevirtual #6                  // Method org/rocksdb/ComparatorType.getValue:()B
      12: iload_2
      13: iload_3
      14: invokestatic  #7                  // Method newWriteBatchWithIndex:(JBIZ)J
      17: invokespecial #2                  // Method org/rocksdb/AbstractWriteBatch."<init>":(J)V
      20: return

  org.rocksdb.WriteBatchWithIndex(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #2                  // Method org/rocksdb/AbstractWriteBatch."<init>":(J)V
       5: aload_0
       6: invokevirtual #8                  // Method disOwnNativeHandle:()V
       9: return

  public org.rocksdb.WBWIRocksIterator newIterator(org.rocksdb.ColumnFamilyHandle);
    Code:
       0: new           #9                  // class org/rocksdb/WBWIRocksIterator
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #10                 // Field nativeHandle_:J
      10: aload_1
      11: getfield      #11                 // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      14: invokespecial #12                 // Method iterator1:(JJ)J
      17: invokespecial #13                 // Method org/rocksdb/WBWIRocksIterator."<init>":(Lorg/rocksdb/WriteBatchWithIndex;J)V
      20: areturn

  public org.rocksdb.WBWIRocksIterator newIterator();
    Code:
       0: new           #9                  // class org/rocksdb/WBWIRocksIterator
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #10                 // Field nativeHandle_:J
      10: invokespecial #14                 // Method iterator0:(J)J
      13: invokespecial #13                 // Method org/rocksdb/WBWIRocksIterator."<init>":(Lorg/rocksdb/WriteBatchWithIndex;J)V
      16: areturn

  public org.rocksdb.RocksIterator newIteratorWithBase(org.rocksdb.ColumnFamilyHandle, org.rocksdb.RocksIterator);
    Code:
       0: new           #15                 // class org/rocksdb/RocksIterator
       3: dup
       4: aload_2
       5: getfield      #16                 // Field org/rocksdb/RocksIterator.parent_:Lorg/rocksdb/RocksObject;
       8: checkcast     #17                 // class org/rocksdb/RocksDB
      11: aload_0
      12: aload_0
      13: getfield      #10                 // Field nativeHandle_:J
      16: aload_1
      17: getfield      #11                 // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      20: aload_2
      21: getfield      #18                 // Field org/rocksdb/RocksIterator.nativeHandle_:J
      24: invokespecial #19                 // Method iteratorWithBase:(JJJ)J
      27: invokespecial #20                 // Method org/rocksdb/RocksIterator."<init>":(Lorg/rocksdb/RocksDB;J)V
      30: astore_3
      31: aload_2
      32: invokevirtual #21                 // Method org/rocksdb/RocksIterator.disOwnNativeHandle:()V
      35: aload_3
      36: areturn

  public org.rocksdb.RocksIterator newIteratorWithBase(org.rocksdb.RocksIterator);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #16                 // Field org/rocksdb/RocksIterator.parent_:Lorg/rocksdb/RocksObject;
       5: checkcast     #17                 // class org/rocksdb/RocksDB
       8: invokevirtual #22                 // Method org/rocksdb/RocksDB.getDefaultColumnFamily:()Lorg/rocksdb/ColumnFamilyHandle;
      11: aload_1
      12: invokevirtual #23                 // Method newIteratorWithBase:(Lorg/rocksdb/ColumnFamilyHandle;Lorg/rocksdb/RocksIterator;)Lorg/rocksdb/RocksIterator;
      15: areturn

  public byte[] getFromBatch(org.rocksdb.ColumnFamilyHandle, org.rocksdb.DBOptions, byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field nativeHandle_:J
       5: aload_2
       6: getfield      #24                 // Field org/rocksdb/DBOptions.nativeHandle_:J
       9: aload_3
      10: aload_3
      11: arraylength
      12: aload_1
      13: getfield      #11                 // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      16: invokespecial #25                 // Method getFromBatch:(JJ[BIJ)[B
      19: areturn

  public byte[] getFromBatch(org.rocksdb.DBOptions, byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field nativeHandle_:J
       5: aload_1
       6: getfield      #24                 // Field org/rocksdb/DBOptions.nativeHandle_:J
       9: aload_2
      10: aload_2
      11: arraylength
      12: invokespecial #26                 // Method getFromBatch:(JJ[BI)[B
      15: areturn

  public byte[] getFromBatchAndDB(org.rocksdb.RocksDB, org.rocksdb.ColumnFamilyHandle, org.rocksdb.ReadOptions, byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field nativeHandle_:J
       5: aload_1
       6: getfield      #27                 // Field org/rocksdb/RocksDB.nativeHandle_:J
       9: aload_3
      10: getfield      #28                 // Field org/rocksdb/ReadOptions.nativeHandle_:J
      13: aload         4
      15: aload         4
      17: arraylength
      18: aload_2
      19: getfield      #11                 // Field org/rocksdb/ColumnFamilyHandle.nativeHandle_:J
      22: invokespecial #29                 // Method getFromBatchAndDB:(JJJ[BIJ)[B
      25: areturn

  public byte[] getFromBatchAndDB(org.rocksdb.RocksDB, org.rocksdb.ReadOptions, byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field nativeHandle_:J
       5: aload_1
       6: getfield      #27                 // Field org/rocksdb/RocksDB.nativeHandle_:J
       9: aload_2
      10: getfield      #28                 // Field org/rocksdb/ReadOptions.nativeHandle_:J
      13: aload_3
      14: aload_3
      15: arraylength
      16: invokespecial #30                 // Method getFromBatchAndDB:(JJJ[BI)[B
      19: areturn

  protected final native void disposeInternal(long);

  final native int count0(long);

  final native void put(long, byte[], int, byte[], int);

  final native void put(long, byte[], int, byte[], int, long);

  final native void merge(long, byte[], int, byte[], int);

  final native void merge(long, byte[], int, byte[], int, long);

  final native void delete(long, byte[], int) throws org.rocksdb.RocksDBException;

  final native void delete(long, byte[], int, long) throws org.rocksdb.RocksDBException;

  final native void singleDelete(long, byte[], int) throws org.rocksdb.RocksDBException;

  final native void singleDelete(long, byte[], int, long) throws org.rocksdb.RocksDBException;

  final native void deleteRange(long, byte[], int, byte[], int);

  final native void deleteRange(long, byte[], int, byte[], int, long);

  final native void putLogData(long, byte[], int) throws org.rocksdb.RocksDBException;

  final native void clear0(long);

  final native void setSavePoint0(long);

  final native void rollbackToSavePoint0(long);

  final native void popSavePoint(long) throws org.rocksdb.RocksDBException;

  final native void setMaxBytes(long, long);

  final native org.rocksdb.WriteBatch getWriteBatch(long);

  private static native long newWriteBatchWithIndex();

  private static native long newWriteBatchWithIndex(boolean);

  private static native long newWriteBatchWithIndex(long, byte, int, boolean);

  private native long iterator0(long);

  private native long iterator1(long, long);

  private native long iteratorWithBase(long, long, long);

  private native byte[] getFromBatch(long, long, byte[], int);

  private native byte[] getFromBatch(long, long, byte[], int, long);

  private native byte[] getFromBatchAndDB(long, long, long, byte[], int);

  private native byte[] getFromBatchAndDB(long, long, long, byte[], int, long);
}
