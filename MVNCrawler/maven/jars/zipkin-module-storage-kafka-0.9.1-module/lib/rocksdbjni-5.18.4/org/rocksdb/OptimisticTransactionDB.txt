Compiled from "OptimisticTransactionDB.java"
public class org.rocksdb.OptimisticTransactionDB extends org.rocksdb.RocksDB implements org.rocksdb.TransactionalDB<org.rocksdb.OptimisticTransactionOptions> {
  static final boolean $assertionsDisabled;

  private org.rocksdb.OptimisticTransactionDB(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #1                  // Method org/rocksdb/RocksDB."<init>":(J)V
       5: return

  public static org.rocksdb.OptimisticTransactionDB open(org.rocksdb.Options, java.lang.String) throws org.rocksdb.RocksDBException;
    Code:
       0: new           #2                  // class org/rocksdb/OptimisticTransactionDB
       3: dup
       4: aload_0
       5: getfield      #3                  // Field org/rocksdb/Options.nativeHandle_:J
       8: aload_1
       9: invokestatic  #4                  // Method open:(JLjava/lang/String;)J
      12: invokespecial #5                  // Method "<init>":(J)V
      15: astore_2
      16: aload_2
      17: aload_0
      18: invokevirtual #6                  // Method storeOptionsInstance:(Lorg/rocksdb/DBOptionsInterface;)V
      21: aload_2
      22: areturn

  public static org.rocksdb.OptimisticTransactionDB open(org.rocksdb.DBOptions, java.lang.String, java.util.List<org.rocksdb.ColumnFamilyDescriptor>, java.util.List<org.rocksdb.ColumnFamilyHandle>) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_2
       1: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
       6: anewarray     #8                  // class "[B"
       9: astore        4
      11: aload_2
      12: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      17: newarray       long
      19: astore        5
      21: iconst_0
      22: istore        6
      24: iload         6
      26: aload_2
      27: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      32: if_icmpge     77
      35: aload_2
      36: iload         6
      38: invokeinterface #9,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #10                 // class org/rocksdb/ColumnFamilyDescriptor
      46: astore        7
      48: aload         4
      50: iload         6
      52: aload         7
      54: invokevirtual #11                 // Method org/rocksdb/ColumnFamilyDescriptor.columnFamilyName:()[B
      57: aastore
      58: aload         5
      60: iload         6
      62: aload         7
      64: invokevirtual #12                 // Method org/rocksdb/ColumnFamilyDescriptor.columnFamilyOptions:()Lorg/rocksdb/ColumnFamilyOptions;
      67: getfield      #13                 // Field org/rocksdb/ColumnFamilyOptions.nativeHandle_:J
      70: lastore
      71: iinc          6, 1
      74: goto          24
      77: aload_0
      78: getfield      #14                 // Field org/rocksdb/DBOptions.nativeHandle_:J
      81: aload_1
      82: aload         4
      84: aload         5
      86: invokestatic  #15                 // Method open:(JLjava/lang/String;[[B[J)[J
      89: astore        6
      91: new           #2                  // class org/rocksdb/OptimisticTransactionDB
      94: dup
      95: aload         6
      97: iconst_0
      98: laload
      99: invokespecial #5                  // Method "<init>":(J)V
     102: astore        7
     104: aload         7
     106: aload_0
     107: invokevirtual #6                  // Method storeOptionsInstance:(Lorg/rocksdb/DBOptionsInterface;)V
     110: iconst_1
     111: istore        8
     113: iload         8
     115: aload         6
     117: arraylength
     118: if_icmpge     148
     121: aload_3
     122: new           #16                 // class org/rocksdb/ColumnFamilyHandle
     125: dup
     126: aload         7
     128: aload         6
     130: iload         8
     132: laload
     133: invokespecial #17                 // Method org/rocksdb/ColumnFamilyHandle."<init>":(Lorg/rocksdb/RocksDB;J)V
     136: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     141: pop
     142: iinc          8, 1
     145: goto          113
     148: aload         7
     150: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions);
    Code:
       0: new           #19                 // class org/rocksdb/Transaction
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #20                 // Field nativeHandle_:J
      10: aload_1
      11: getfield      #21                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
      14: invokespecial #22                 // Method beginTransaction:(JJ)J
      17: invokespecial #23                 // Method org/rocksdb/Transaction."<init>":(Lorg/rocksdb/RocksDB;J)V
      20: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.OptimisticTransactionOptions);
    Code:
       0: new           #19                 // class org/rocksdb/Transaction
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #20                 // Field nativeHandle_:J
      10: aload_1
      11: getfield      #21                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
      14: aload_2
      15: getfield      #24                 // Field org/rocksdb/OptimisticTransactionOptions.nativeHandle_:J
      18: invokespecial #25                 // Method beginTransaction:(JJJ)J
      21: invokespecial #23                 // Method org/rocksdb/Transaction."<init>":(Lorg/rocksdb/RocksDB;J)V
      24: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.Transaction);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field nativeHandle_:J
       5: aload_1
       6: getfield      #21                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
       9: aload_2
      10: getfield      #26                 // Field org/rocksdb/Transaction.nativeHandle_:J
      13: invokespecial #27                 // Method beginTransaction_withOld:(JJJ)J
      16: lstore_3
      17: getstatic     #28                 // Field $assertionsDisabled:Z
      20: ifne          40
      23: lload_3
      24: aload_2
      25: getfield      #26                 // Field org/rocksdb/Transaction.nativeHandle_:J
      28: lcmp
      29: ifeq          40
      32: new           #29                 // class java/lang/AssertionError
      35: dup
      36: invokespecial #30                 // Method java/lang/AssertionError."<init>":()V
      39: athrow
      40: aload_2
      41: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.OptimisticTransactionOptions, org.rocksdb.Transaction);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #20                 // Field nativeHandle_:J
       5: aload_1
       6: getfield      #21                 // Field org/rocksdb/WriteOptions.nativeHandle_:J
       9: aload_2
      10: getfield      #24                 // Field org/rocksdb/OptimisticTransactionOptions.nativeHandle_:J
      13: aload_3
      14: getfield      #26                 // Field org/rocksdb/Transaction.nativeHandle_:J
      17: invokespecial #31                 // Method beginTransaction_withOld:(JJJJ)J
      20: lstore        4
      22: getstatic     #28                 // Field $assertionsDisabled:Z
      25: ifne          46
      28: lload         4
      30: aload_3
      31: getfield      #26                 // Field org/rocksdb/Transaction.nativeHandle_:J
      34: lcmp
      35: ifeq          46
      38: new           #29                 // class java/lang/AssertionError
      41: dup
      42: invokespecial #30                 // Method java/lang/AssertionError."<init>":()V
      45: athrow
      46: aload_3
      47: areturn

  public org.rocksdb.RocksDB getBaseDB();
    Code:
       0: new           #32                 // class org/rocksdb/RocksDB
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #20                 // Field nativeHandle_:J
       9: invokespecial #33                 // Method getBaseDB:(J)J
      12: invokespecial #1                  // Method org/rocksdb/RocksDB."<init>":(J)V
      15: astore_1
      16: aload_1
      17: invokevirtual #34                 // Method org/rocksdb/RocksDB.disOwnNativeHandle:()V
      20: aload_1
      21: areturn

  protected static native long open(long, java.lang.String) throws org.rocksdb.RocksDBException;

  protected static native long[] open(long, java.lang.String, byte[][], long[]);

  private native long beginTransaction(long, long);

  private native long beginTransaction(long, long, long);

  private native long beginTransaction_withOld(long, long, long);

  private native long beginTransaction_withOld(long, long, long, long);

  private native long getBaseDB(long);

  protected final native void disposeInternal(long);

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.TransactionalOptions, org.rocksdb.Transaction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #35                 // class org/rocksdb/OptimisticTransactionOptions
       6: aload_3
       7: invokevirtual #36                 // Method beginTransaction:(Lorg/rocksdb/WriteOptions;Lorg/rocksdb/OptimisticTransactionOptions;Lorg/rocksdb/Transaction;)Lorg/rocksdb/Transaction;
      10: areturn

  public org.rocksdb.Transaction beginTransaction(org.rocksdb.WriteOptions, org.rocksdb.TransactionalOptions);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #35                 // class org/rocksdb/OptimisticTransactionOptions
       6: invokevirtual #37                 // Method beginTransaction:(Lorg/rocksdb/WriteOptions;Lorg/rocksdb/OptimisticTransactionOptions;)Lorg/rocksdb/Transaction;
       9: areturn

  static {};
    Code:
       0: ldc_w         #2                  // class org/rocksdb/OptimisticTransactionDB
       3: invokevirtual #38                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #28                 // Field $assertionsDisabled:Z
      17: return
}
