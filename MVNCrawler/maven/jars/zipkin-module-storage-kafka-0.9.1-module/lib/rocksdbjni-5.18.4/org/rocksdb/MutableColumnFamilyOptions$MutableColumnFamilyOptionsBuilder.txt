Compiled from "MutableColumnFamilyOptions.java"
public class org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder implements org.rocksdb.MutableColumnFamilyOptionsInterface {
  private static final java.util.Map<java.lang.String, org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey> ALL_KEYS_LOOKUP;

  private final java.util.Map<org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey, org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionValue<?>> options;

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field options:Ljava/util/Map;
      15: return

  public org.rocksdb.MutableColumnFamilyOptions build();
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Ljava/util/Map;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
       9: anewarray     #6                  // class java/lang/String
      12: astore_1
      13: aload_0
      14: getfield      #4                  // Field options:Ljava/util/Map;
      17: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
      22: anewarray     #6                  // class java/lang/String
      25: astore_2
      26: iconst_0
      27: istore_3
      28: aload_0
      29: getfield      #4                  // Field options:Ljava/util/Map;
      32: invokeinterface #7,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      37: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          106
      54: aload         4
      56: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #11                 // class java/util/Map$Entry
      64: astore        5
      66: aload_1
      67: iload_3
      68: aload         5
      70: invokeinterface #12,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      75: checkcast     #13                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey
      78: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      83: aastore
      84: aload_2
      85: iload_3
      86: aload         5
      88: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      93: checkcast     #16                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue
      96: invokevirtual #17                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue.asString:()Ljava/lang/String;
      99: aastore
     100: iinc          3, 1
     103: goto          44
     106: new           #18                 // class org/rocksdb/MutableColumnFamilyOptions
     109: dup
     110: aload_1
     111: aload_2
     112: aconst_null
     113: invokespecial #19                 // Method org/rocksdb/MutableColumnFamilyOptions."<init>":([Ljava/lang/String;[Ljava/lang/String;Lorg/rocksdb/MutableColumnFamilyOptions$1;)V
     116: areturn

  private org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setDouble(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey, double);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       6: getstatic     #21                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.DOUBLE:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       9: if_acmpeq     39
      12: new           #22                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #23                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #26                 // String  does not accept a double value
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #4                  // Field options:Ljava/util/Map;
      43: aload_1
      44: new           #30                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionDoubleValue
      47: dup
      48: dload_2
      49: invokespecial #31                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionDoubleValue."<init>":(D)V
      52: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: areturn

  private double getDouble(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey) throws java.util.NoSuchElementException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #34                 // class java/util/NoSuchElementException
      21: dup
      22: new           #23                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #35                 // String  has not been set
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #37                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue.asDouble:()D
      54: dreturn

  private org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setLong(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey, long);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       6: getstatic     #38                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.LONG:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       9: if_acmpeq     39
      12: new           #22                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #23                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #39                 // String  does not accept a long value
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #4                  // Field options:Ljava/util/Map;
      43: aload_1
      44: new           #40                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionLongValue
      47: dup
      48: lload_2
      49: invokespecial #41                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionLongValue."<init>":(J)V
      52: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: areturn

  private long getLong(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey) throws java.util.NoSuchElementException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #34                 // class java/util/NoSuchElementException
      21: dup
      22: new           #23                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #35                 // String  has not been set
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #42                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue.asLong:()J
      54: lreturn

  private org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setInt(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey, int);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       6: getstatic     #43                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       9: if_acmpeq     39
      12: new           #22                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #23                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #44                 // String  does not accept an integer value
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #4                  // Field options:Ljava/util/Map;
      43: aload_1
      44: new           #45                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionIntValue
      47: dup
      48: iload_2
      49: invokespecial #46                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionIntValue."<init>":(I)V
      52: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: areturn

  private int getInt(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey) throws java.util.NoSuchElementException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #34                 // class java/util/NoSuchElementException
      21: dup
      22: new           #23                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #35                 // String  has not been set
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #47                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue.asInt:()I
      54: ireturn

  private org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setBoolean(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey, boolean);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       6: getstatic     #48                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.BOOLEAN:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       9: if_acmpeq     39
      12: new           #22                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #23                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #49                 // String  does not accept a boolean value
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #4                  // Field options:Ljava/util/Map;
      43: aload_1
      44: new           #50                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionBooleanValue
      47: dup
      48: iload_2
      49: invokespecial #51                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionBooleanValue."<init>":(Z)V
      52: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: areturn

  private boolean getBoolean(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey) throws java.util.NoSuchElementException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #34                 // class java/util/NoSuchElementException
      21: dup
      22: new           #23                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #35                 // String  has not been set
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #52                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue.asBoolean:()Z
      54: ireturn

  private org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setIntArray(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey, int[]);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       6: getstatic     #53                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.INT_ARRAY:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       9: if_acmpeq     39
      12: new           #22                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #23                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #54                 // String  does not accept an int array value
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #4                  // Field options:Ljava/util/Map;
      43: aload_1
      44: new           #55                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionIntArrayValue
      47: dup
      48: aload_2
      49: invokespecial #56                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionIntArrayValue."<init>":([I)V
      52: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: areturn

  private int[] getIntArray(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey) throws java.util.NoSuchElementException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #34                 // class java/util/NoSuchElementException
      21: dup
      22: new           #23                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #35                 // String  has not been set
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: invokevirtual #57                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue.asIntArray:()[I
      54: areturn

  private <T extends java.lang.Enum<T>> org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setEnum(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey, T);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       6: getstatic     #58                 // Field org/rocksdb/MutableColumnFamilyOptions$ValueType.ENUM:Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
       9: if_acmpeq     39
      12: new           #22                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #23                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #59                 // String  does not accept a Enum value
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #4                  // Field options:Ljava/util/Map;
      43: aload_1
      44: new           #60                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionEnumValue
      47: dup
      48: aload_2
      49: invokespecial #61                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionEnumValue."<init>":(Ljava/lang/Enum;)V
      52: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: areturn

  private <T extends java.lang.Enum<T>> T getEnum(org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionKey) throws java.util.NoSuchElementException, java.lang.NumberFormatException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field options:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionValue
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #34                 // class java/util/NoSuchElementException
      21: dup
      22: new           #23                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_1
      30: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #35                 // String  has not been set
      40: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_2
      51: instanceof    #60                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionEnumValue
      54: ifne          89
      57: new           #34                 // class java/util/NoSuchElementException
      60: dup
      61: new           #23                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      68: aload_1
      69: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      74: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #62                 // String  is not of Enum type
      79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokespecial #36                 // Method java/util/NoSuchElementException."<init>":(Ljava/lang/String;)V
      88: athrow
      89: aload_2
      90: checkcast     #60                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionEnumValue
      93: invokevirtual #63                 // Method org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionEnumValue.asObject:()Ljava/lang/Enum;
      96: areturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder fromString(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: invokestatic  #64                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #64                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: getstatic     #65                 // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      13: aload_1
      14: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #13                 // class org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey
      22: astore_3
      23: getstatic     #66                 // Field org/rocksdb/MutableColumnFamilyOptions$1.$SwitchMap$org$rocksdb$MutableColumnFamilyOptions$ValueType:[I
      26: aload_3
      27: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
      32: invokevirtual #67                 // Method org/rocksdb/MutableColumnFamilyOptions$ValueType.ordinal:()I
      35: iaload
      36: tableswitch   { // 1 to 5
                     1: 72
                     2: 82
                     3: 92
                     4: 102
                     5: 112
               default: 207
          }
      72: aload_0
      73: aload_3
      74: aload_2
      75: invokestatic  #68                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      78: invokespecial #69                 // Method setDouble:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;D)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
      81: areturn
      82: aload_0
      83: aload_3
      84: aload_2
      85: invokestatic  #70                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      88: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
      91: areturn
      92: aload_0
      93: aload_3
      94: aload_2
      95: invokestatic  #72                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      98: invokespecial #73                 // Method setInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
     101: areturn
     102: aload_0
     103: aload_3
     104: aload_2
     105: invokestatic  #74                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     108: invokespecial #75                 // Method setBoolean:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
     111: areturn
     112: aload_2
     113: invokevirtual #76                 // Method java/lang/String.trim:()Ljava/lang/String;
     116: ldc           #77                 // String ,
     118: invokevirtual #78                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     121: astore        4
     123: aload         4
     125: ifnull        134
     128: aload         4
     130: arraylength
     131: ifne          144
     134: new           #22                 // class java/lang/IllegalArgumentException
     137: dup
     138: ldc           #79                 // String int array value is not correctly formatted
     140: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     143: athrow
     144: aload         4
     146: arraylength
     147: newarray       int
     149: astore        5
     151: iconst_0
     152: istore        6
     154: aload         4
     156: astore        7
     158: aload         7
     160: arraylength
     161: istore        8
     163: iconst_0
     164: istore        9
     166: iload         9
     168: iload         8
     170: if_icmpge     199
     173: aload         7
     175: iload         9
     177: aaload
     178: astore        10
     180: aload         5
     182: iload         6
     184: iinc          6, 1
     187: aload         10
     189: invokestatic  #72                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     192: iastore
     193: iinc          9, 1
     196: goto          166
     199: aload_0
     200: aload_3
     201: aload         5
     203: invokespecial #80                 // Method setIntArray:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;[I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
     206: areturn
     207: new           #81                 // class java/lang/IllegalStateException
     210: dup
     211: new           #23                 // class java/lang/StringBuilder
     214: dup
     215: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     218: aload_3
     219: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     222: ldc           #82                 // String  has unknown value type:
     224: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: aload_3
     228: invokeinterface #20,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.getValueType:()Lorg/rocksdb/MutableColumnFamilyOptions$ValueType;
     233: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     236: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     239: invokespecial #83                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     242: athrow

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setWriteBufferSize(long);
    Code:
       0: aload_0
       1: getstatic     #84                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.write_buffer_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long writeBufferSize();
    Code:
       0: aload_0
       1: getstatic     #84                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.write_buffer_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setArenaBlockSize(long);
    Code:
       0: aload_0
       1: getstatic     #86                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.arena_block_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long arenaBlockSize();
    Code:
       0: aload_0
       1: getstatic     #86                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.arena_block_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMemtablePrefixBloomSizeRatio(double);
    Code:
       0: aload_0
       1: getstatic     #87                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_prefix_bloom_size_ratio:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: dload_1
       5: invokespecial #69                 // Method setDouble:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;D)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public double memtablePrefixBloomSizeRatio();
    Code:
       0: aload_0
       1: getstatic     #87                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_prefix_bloom_size_ratio:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokespecial #88                 // Method getDouble:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)D
       7: dreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMemtableHugePageSize(long);
    Code:
       0: aload_0
       1: getstatic     #89                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_huge_page_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long memtableHugePageSize();
    Code:
       0: aload_0
       1: getstatic     #89                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.memtable_huge_page_size:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxSuccessiveMerges(long);
    Code:
       0: aload_0
       1: getstatic     #90                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_successive_merges:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long maxSuccessiveMerges();
    Code:
       0: aload_0
       1: getstatic     #90                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_successive_merges:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxWriteBufferNumber(int);
    Code:
       0: aload_0
       1: getstatic     #91                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_write_buffer_number:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: iload_1
       5: invokespecial #73                 // Method setInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public int maxWriteBufferNumber();
    Code:
       0: aload_0
       1: getstatic     #91                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.max_write_buffer_number:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokespecial #92                 // Method getInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setInplaceUpdateNumLocks(long);
    Code:
       0: aload_0
       1: getstatic     #93                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.inplace_update_num_locks:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long inplaceUpdateNumLocks();
    Code:
       0: aload_0
       1: getstatic     #93                 // Field org/rocksdb/MutableColumnFamilyOptions$MemtableOption.inplace_update_num_locks:Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setDisableAutoCompactions(boolean);
    Code:
       0: aload_0
       1: getstatic     #94                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.disable_auto_compactions:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokespecial #75                 // Method setBoolean:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public boolean disableAutoCompactions();
    Code:
       0: aload_0
       1: getstatic     #94                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.disable_auto_compactions:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #95                 // Method getBoolean:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setSoftPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: getstatic     #96                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.soft_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long softPendingCompactionBytesLimit();
    Code:
       0: aload_0
       1: getstatic     #96                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.soft_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setHardPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: getstatic     #97                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.hard_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long hardPendingCompactionBytesLimit();
    Code:
       0: aload_0
       1: getstatic     #97                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.hard_pending_compaction_bytes_limit:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setLevel0FileNumCompactionTrigger(int);
    Code:
       0: aload_0
       1: getstatic     #98                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_file_num_compaction_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokespecial #73                 // Method setInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public int level0FileNumCompactionTrigger();
    Code:
       0: aload_0
       1: getstatic     #98                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_file_num_compaction_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #92                 // Method getInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setLevel0SlowdownWritesTrigger(int);
    Code:
       0: aload_0
       1: getstatic     #99                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_slowdown_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokespecial #73                 // Method setInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public int level0SlowdownWritesTrigger();
    Code:
       0: aload_0
       1: getstatic     #99                 // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_slowdown_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #92                 // Method getInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setLevel0StopWritesTrigger(int);
    Code:
       0: aload_0
       1: getstatic     #100                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_stop_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokespecial #73                 // Method setInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public int level0StopWritesTrigger();
    Code:
       0: aload_0
       1: getstatic     #100                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.level0_stop_writes_trigger:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #92                 // Method getInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxCompactionBytes(long);
    Code:
       0: aload_0
       1: getstatic     #101                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_compaction_bytes:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long maxCompactionBytes();
    Code:
       0: aload_0
       1: getstatic     #101                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_compaction_bytes:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setTargetFileSizeBase(long);
    Code:
       0: aload_0
       1: getstatic     #102                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long targetFileSizeBase();
    Code:
       0: aload_0
       1: getstatic     #102                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setTargetFileSizeMultiplier(int);
    Code:
       0: aload_0
       1: getstatic     #103                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: iload_1
       5: invokespecial #73                 // Method setInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public int targetFileSizeMultiplier();
    Code:
       0: aload_0
       1: getstatic     #103                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.target_file_size_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #92                 // Method getInt:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)I
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxBytesForLevelBase(long);
    Code:
       0: aload_0
       1: getstatic     #104                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long maxBytesForLevelBase();
    Code:
       0: aload_0
       1: getstatic     #104                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_base:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxBytesForLevelMultiplier(double);
    Code:
       0: aload_0
       1: getstatic     #105                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: dload_1
       5: invokespecial #69                 // Method setDouble:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;D)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public double maxBytesForLevelMultiplier();
    Code:
       0: aload_0
       1: getstatic     #105                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #88                 // Method getDouble:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)D
       7: dreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxBytesForLevelMultiplierAdditional(int[]);
    Code:
       0: aload_0
       1: getstatic     #106                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier_additional:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: aload_1
       5: invokespecial #80                 // Method setIntArray:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;[I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public int[] maxBytesForLevelMultiplierAdditional();
    Code:
       0: aload_0
       1: getstatic     #106                // Field org/rocksdb/MutableColumnFamilyOptions$CompactionOption.max_bytes_for_level_multiplier_additional:Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
       4: invokespecial #107                // Method getIntArray:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)[I
       7: areturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setMaxSequentialSkipInIterations(long);
    Code:
       0: aload_0
       1: getstatic     #108                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.max_sequential_skip_in_iterations:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: lload_1
       5: invokespecial #71                 // Method setLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public long maxSequentialSkipInIterations();
    Code:
       0: aload_0
       1: getstatic     #108                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.max_sequential_skip_in_iterations:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokespecial #85                 // Method getLong:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)J
       7: lreturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setParanoidFileChecks(boolean);
    Code:
       0: aload_0
       1: getstatic     #109                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.paranoid_file_checks:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: iload_1
       5: invokespecial #75                 // Method setBoolean:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public boolean paranoidFileChecks();
    Code:
       0: aload_0
       1: getstatic     #109                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.paranoid_file_checks:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokespecial #95                 // Method getBoolean:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setCompressionType(org.rocksdb.CompressionType);
    Code:
       0: aload_0
       1: getstatic     #110                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.compression_type:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: aload_1
       5: invokespecial #111                // Method setEnum:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;Ljava/lang/Enum;)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public org.rocksdb.CompressionType compressionType();
    Code:
       0: aload_0
       1: getstatic     #110                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.compression_type:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokespecial #112                // Method getEnum:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)Ljava/lang/Enum;
       7: checkcast     #113                // class org/rocksdb/CompressionType
      10: areturn

  public org.rocksdb.MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder setReportBgIoStats(boolean);
    Code:
       0: aload_0
       1: getstatic     #114                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.report_bg_io_stats:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: iload_1
       5: invokespecial #75                 // Method setBoolean:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       8: areturn

  public boolean reportBgIoStats();
    Code:
       0: aload_0
       1: getstatic     #114                // Field org/rocksdb/MutableColumnFamilyOptions$MiscOption.report_bg_io_stats:Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
       4: invokespecial #95                 // Method getBoolean:(Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey;)Z
       7: ireturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setCompressionType(org.rocksdb.CompressionType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #115                // Method setCompressionType:(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setMaxBytesForLevelBase(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #116                // Method setMaxBytesForLevelBase:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setMaxCompactionBytes(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #117                // Method setMaxCompactionBytes:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setLevel0FileNumCompactionTrigger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #118                // Method setLevel0FileNumCompactionTrigger:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setDisableAutoCompactions(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #119                // Method setDisableAutoCompactions:(Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.MutableColumnFamilyOptionsInterface setWriteBufferSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #120                // Method setWriteBufferSize:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setReportBgIoStats(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #121                // Method setReportBgIoStats:(Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setParanoidFileChecks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #122                // Method setParanoidFileChecks:(Z)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxSuccessiveMerges(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #123                // Method setMaxSuccessiveMerges:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxSequentialSkipInIterations(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #124                // Method setMaxSequentialSkipInIterations:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setHardPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #125                // Method setHardPendingCompactionBytesLimit:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setSoftPendingCompactionBytesLimit(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #126                // Method setSoftPendingCompactionBytesLimit:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxBytesForLevelMultiplierAdditional(int[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #127                // Method setMaxBytesForLevelMultiplierAdditional:([I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxBytesForLevelMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #128                // Method setMaxBytesForLevelMultiplier:(D)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setTargetFileSizeMultiplier(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #129                // Method setTargetFileSizeMultiplier:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setTargetFileSizeBase(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #130                // Method setTargetFileSizeBase:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setLevel0StopWritesTrigger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #131                // Method setLevel0StopWritesTrigger:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setLevel0SlowdownWritesTrigger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #132                // Method setLevel0SlowdownWritesTrigger:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setArenaBlockSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #133                // Method setArenaBlockSize:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMemtableHugePageSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #134                // Method setMemtableHugePageSize:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMemtablePrefixBloomSizeRatio(double);
    Code:
       0: aload_0
       1: dload_1
       2: invokevirtual #135                // Method setMemtablePrefixBloomSizeRatio:(D)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setInplaceUpdateNumLocks(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #136                // Method setInplaceUpdateNumLocks:(J)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  public org.rocksdb.AdvancedMutableColumnFamilyOptionsInterface setMaxWriteBufferNumber(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #137                // Method setMaxWriteBufferNumber:(I)Lorg/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionsBuilder;
       5: areturn

  static {};
    Code:
       0: new           #138                // class java/util/HashMap
       3: dup
       4: invokespecial #139                // Method java/util/HashMap."<init>":()V
       7: putstatic     #65                 // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      10: invokestatic  #140                // Method org/rocksdb/MutableColumnFamilyOptions$MemtableOption.values:()[Lorg/rocksdb/MutableColumnFamilyOptions$MemtableOption;
      13: astore_0
      14: aload_0
      15: arraylength
      16: istore_1
      17: iconst_0
      18: istore_2
      19: iload_2
      20: iload_1
      21: if_icmpge     50
      24: aload_0
      25: iload_2
      26: aaload
      27: astore_3
      28: getstatic     #65                 // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      31: aload_3
      32: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      37: aload_3
      38: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      43: pop
      44: iinc          2, 1
      47: goto          19
      50: invokestatic  #141                // Method org/rocksdb/MutableColumnFamilyOptions$CompactionOption.values:()[Lorg/rocksdb/MutableColumnFamilyOptions$CompactionOption;
      53: astore_0
      54: aload_0
      55: arraylength
      56: istore_1
      57: iconst_0
      58: istore_2
      59: iload_2
      60: iload_1
      61: if_icmpge     90
      64: aload_0
      65: iload_2
      66: aaload
      67: astore_3
      68: getstatic     #65                 // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
      71: aload_3
      72: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
      77: aload_3
      78: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: iinc          2, 1
      87: goto          59
      90: invokestatic  #142                // Method org/rocksdb/MutableColumnFamilyOptions$MiscOption.values:()[Lorg/rocksdb/MutableColumnFamilyOptions$MiscOption;
      93: astore_0
      94: aload_0
      95: arraylength
      96: istore_1
      97: iconst_0
      98: istore_2
      99: iload_2
     100: iload_1
     101: if_icmpge     130
     104: aload_0
     105: iload_2
     106: aaload
     107: astore_3
     108: getstatic     #65                 // Field ALL_KEYS_LOOKUP:Ljava/util/Map;
     111: aload_3
     112: invokeinterface #14,  1           // InterfaceMethod org/rocksdb/MutableColumnFamilyOptions$MutableColumnFamilyOptionKey.name:()Ljava/lang/String;
     117: aload_3
     118: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     123: pop
     124: iinc          2, 1
     127: goto          99
     130: return
}
