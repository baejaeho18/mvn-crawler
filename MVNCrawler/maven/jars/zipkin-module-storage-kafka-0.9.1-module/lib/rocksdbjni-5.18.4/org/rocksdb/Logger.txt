Compiled from "Logger.java"
public abstract class org.rocksdb.Logger extends org.rocksdb.RocksCallbackObject {
  private static final long WITH_OPTIONS;

  private static final long WITH_DBOPTIONS;

  public org.rocksdb.Logger(org.rocksdb.Options);
    Code:
       0: aload_0
       1: iconst_2
       2: newarray       long
       4: dup
       5: iconst_0
       6: aload_1
       7: getfield      #1                  // Field org/rocksdb/Options.nativeHandle_:J
      10: lastore
      11: dup
      12: iconst_1
      13: lconst_0
      14: lastore
      15: invokespecial #2                  // Method org/rocksdb/RocksCallbackObject."<init>":([J)V
      18: return

  public org.rocksdb.Logger(org.rocksdb.DBOptions);
    Code:
       0: aload_0
       1: iconst_2
       2: newarray       long
       4: dup
       5: iconst_0
       6: aload_1
       7: getfield      #3                  // Field org/rocksdb/DBOptions.nativeHandle_:J
      10: lastore
      11: dup
      12: iconst_1
      13: lconst_1
      14: lastore
      15: invokespecial #2                  // Method org/rocksdb/RocksCallbackObject."<init>":([J)V
      18: return

  protected long initializeNative(long...);
    Code:
       0: aload_1
       1: iconst_1
       2: laload
       3: lconst_0
       4: lcmp
       5: ifne          16
       8: aload_0
       9: aload_1
      10: iconst_0
      11: laload
      12: invokevirtual #4                  // Method createNewLoggerOptions:(J)J
      15: lreturn
      16: aload_1
      17: iconst_1
      18: laload
      19: lconst_1
      20: lcmp
      21: ifne          32
      24: aload_0
      25: aload_1
      26: iconst_0
      27: laload
      28: invokevirtual #5                  // Method createNewLoggerDbOptions:(J)J
      31: lreturn
      32: new           #6                  // class java/lang/IllegalArgumentException
      35: dup
      36: invokespecial #7                  // Method java/lang/IllegalArgumentException."<init>":()V
      39: athrow

  public void setInfoLogLevel(org.rocksdb.InfoLogLevel);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field nativeHandle_:J
       5: aload_1
       6: invokevirtual #9                  // Method org/rocksdb/InfoLogLevel.getValue:()B
       9: invokevirtual #10                 // Method setInfoLogLevel:(JB)V
      12: return

  public org.rocksdb.InfoLogLevel infoLogLevel();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field nativeHandle_:J
       5: invokevirtual #11                 // Method infoLogLevel:(J)B
       8: invokestatic  #12                 // Method org/rocksdb/InfoLogLevel.getInfoLogLevel:(B)Lorg/rocksdb/InfoLogLevel;
      11: areturn

  protected abstract void log(org.rocksdb.InfoLogLevel, java.lang.String);

  protected native long createNewLoggerOptions(long);

  protected native long createNewLoggerDbOptions(long);

  protected native void setInfoLogLevel(long, byte);

  protected native byte infoLogLevel(long);

  protected void disposeInternal();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field nativeHandle_:J
       5: invokespecial #13                 // Method disposeInternal:(J)V
       8: return

  private native void disposeInternal(long);
}
