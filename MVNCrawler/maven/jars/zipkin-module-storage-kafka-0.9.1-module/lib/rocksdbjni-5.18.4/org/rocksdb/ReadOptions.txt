Compiled from "ReadOptions.java"
public class org.rocksdb.ReadOptions extends org.rocksdb.RocksObject {
  protected org.rocksdb.Slice iterateUpperBoundSlice_;

  protected org.rocksdb.Slice iterateLowerBoundSlice_;

  static final boolean $assertionsDisabled;

  public org.rocksdb.ReadOptions();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method newReadOptions:()J
       4: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
       7: return

  public org.rocksdb.ReadOptions(org.rocksdb.ReadOptions);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #3                  // Field nativeHandle_:J
       5: invokestatic  #4                  // Method copyReadOptions:(J)J
       8: invokespecial #2                  // Method org/rocksdb/RocksObject."<init>":(J)V
      11: aload_0
      12: aload_1
      13: getfield      #5                  // Field iterateUpperBoundSlice_:Lorg/rocksdb/Slice;
      16: putfield      #5                  // Field iterateUpperBoundSlice_:Lorg/rocksdb/Slice;
      19: aload_0
      20: aload_1
      21: getfield      #6                  // Field iterateLowerBoundSlice_:Lorg/rocksdb/Slice;
      24: putfield      #6                  // Field iterateLowerBoundSlice_:Lorg/rocksdb/Slice;
      27: return

  public boolean verifyChecksums();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #11                 // Method verifyChecksums:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setVerifyChecksums(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #12                 // Method setVerifyChecksums:(JZ)V
      30: aload_0
      31: areturn

  public boolean fillCache();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #13                 // Method fillCache:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setFillCache(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #14                 // Method setFillCache:(JZ)V
      30: aload_0
      31: areturn

  public org.rocksdb.Snapshot snapshot();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #15                 // Method snapshot:(J)J
      29: lstore_1
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifeq          45
      36: new           #16                 // class org/rocksdb/Snapshot
      39: dup
      40: lload_1
      41: invokespecial #17                 // Method org/rocksdb/Snapshot."<init>":(J)V
      44: areturn
      45: aconst_null
      46: areturn

  public org.rocksdb.ReadOptions setSnapshot(org.rocksdb.Snapshot);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: ifnull        40
      25: aload_0
      26: aload_0
      27: getfield      #3                  // Field nativeHandle_:J
      30: aload_1
      31: getfield      #18                 // Field org/rocksdb/Snapshot.nativeHandle_:J
      34: invokespecial #19                 // Method setSnapshot:(JJ)V
      37: goto          49
      40: aload_0
      41: aload_0
      42: getfield      #3                  // Field nativeHandle_:J
      45: lconst_0
      46: invokespecial #19                 // Method setSnapshot:(JJ)V
      49: aload_0
      50: areturn

  public org.rocksdb.ReadTier readTier();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #20                 // Method readTier:(J)B
      29: invokestatic  #21                 // Method org/rocksdb/ReadTier.getReadTier:(B)Lorg/rocksdb/ReadTier;
      32: areturn

  public org.rocksdb.ReadOptions setReadTier(org.rocksdb.ReadTier);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: aload_1
      27: invokevirtual #22                 // Method org/rocksdb/ReadTier.getValue:()B
      30: invokespecial #23                 // Method setReadTier:(JB)V
      33: aload_0
      34: areturn

  public boolean tailing();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #24                 // Method tailing:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setTailing(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #25                 // Method setTailing:(JZ)V
      30: aload_0
      31: areturn

  public boolean managed();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #26                 // Method managed:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setManaged(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #27                 // Method setManaged:(JZ)V
      30: aload_0
      31: areturn

  public boolean totalOrderSeek();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #28                 // Method totalOrderSeek:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setTotalOrderSeek(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #29                 // Method setTotalOrderSeek:(JZ)V
      30: aload_0
      31: areturn

  public boolean prefixSameAsStart();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #30                 // Method prefixSameAsStart:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setPrefixSameAsStart(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #31                 // Method setPrefixSameAsStart:(JZ)V
      30: aload_0
      31: areturn

  public boolean pinData();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #32                 // Method pinData:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setPinData(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #33                 // Method setPinData:(JZ)V
      30: aload_0
      31: areturn

  public boolean backgroundPurgeOnIteratorCleanup();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #34                 // Method backgroundPurgeOnIteratorCleanup:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setBackgroundPurgeOnIteratorCleanup(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #35                 // Method setBackgroundPurgeOnIteratorCleanup:(JZ)V
      30: aload_0
      31: areturn

  public long readaheadSize();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #36                 // Method readaheadSize:(J)J
      29: lreturn

  public org.rocksdb.ReadOptions setReadaheadSize(long);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: lload_1
      27: invokespecial #37                 // Method setReadaheadSize:(JJ)V
      30: aload_0
      31: areturn

  public boolean ignoreRangeDeletions();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #38                 // Method ignoreRangeDeletions:(J)Z
      29: ireturn

  public org.rocksdb.ReadOptions setIgnoreRangeDeletions(boolean);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: iload_1
      27: invokespecial #39                 // Method setIgnoreRangeDeletions:(JZ)V
      30: aload_0
      31: areturn

  public org.rocksdb.ReadOptions setIterateUpperBound(org.rocksdb.Slice);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: ifnull        45
      25: aload_0
      26: aload_1
      27: putfield      #5                  // Field iterateUpperBoundSlice_:Lorg/rocksdb/Slice;
      30: aload_0
      31: aload_0
      32: getfield      #3                  // Field nativeHandle_:J
      35: aload_0
      36: getfield      #5                  // Field iterateUpperBoundSlice_:Lorg/rocksdb/Slice;
      39: invokevirtual #40                 // Method org/rocksdb/Slice.getNativeHandle:()J
      42: invokespecial #41                 // Method setIterateUpperBound:(JJ)V
      45: aload_0
      46: areturn

  public org.rocksdb.Slice iterateUpperBound();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #42                 // Method iterateUpperBound:(J)J
      29: lstore_1
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifeq          46
      36: new           #43                 // class org/rocksdb/Slice
      39: dup
      40: lload_1
      41: iconst_0
      42: invokespecial #44                 // Method org/rocksdb/Slice."<init>":(JZ)V
      45: areturn
      46: aconst_null
      47: areturn

  public org.rocksdb.ReadOptions setIterateLowerBound(org.rocksdb.Slice);
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: ifnull        45
      25: aload_0
      26: aload_1
      27: putfield      #6                  // Field iterateLowerBoundSlice_:Lorg/rocksdb/Slice;
      30: aload_0
      31: aload_0
      32: getfield      #3                  // Field nativeHandle_:J
      35: aload_0
      36: getfield      #6                  // Field iterateLowerBoundSlice_:Lorg/rocksdb/Slice;
      39: invokevirtual #40                 // Method org/rocksdb/Slice.getNativeHandle:()J
      42: invokespecial #45                 // Method setIterateLowerBound:(JJ)V
      45: aload_0
      46: areturn

  public org.rocksdb.Slice iterateLowerBound();
    Code:
       0: getstatic     #7                  // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #8                  // Method isOwningHandle:()Z
      10: ifne          21
      13: new           #9                  // class java/lang/AssertionError
      16: dup
      17: invokespecial #10                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #3                  // Field nativeHandle_:J
      26: invokespecial #46                 // Method iterateLowerBound:(J)J
      29: lstore_1
      30: lload_1
      31: lconst_0
      32: lcmp
      33: ifeq          46
      36: new           #43                 // class org/rocksdb/Slice
      39: dup
      40: lload_1
      41: iconst_0
      42: invokespecial #44                 // Method org/rocksdb/Slice."<init>":(JZ)V
      45: areturn
      46: aconst_null
      47: areturn

  private static native long newReadOptions();

  private static native long copyReadOptions(long);

  private native boolean verifyChecksums(long);

  private native void setVerifyChecksums(long, boolean);

  private native boolean fillCache(long);

  private native void setFillCache(long, boolean);

  private native long snapshot(long);

  private native void setSnapshot(long, long);

  private native byte readTier(long);

  private native void setReadTier(long, byte);

  private native boolean tailing(long);

  private native void setTailing(long, boolean);

  private native boolean managed(long);

  private native void setManaged(long, boolean);

  private native boolean totalOrderSeek(long);

  private native void setTotalOrderSeek(long, boolean);

  private native boolean prefixSameAsStart(long);

  private native void setPrefixSameAsStart(long, boolean);

  private native boolean pinData(long);

  private native void setPinData(long, boolean);

  private native boolean backgroundPurgeOnIteratorCleanup(long);

  private native void setBackgroundPurgeOnIteratorCleanup(long, boolean);

  private native long readaheadSize(long);

  private native void setReadaheadSize(long, long);

  private native boolean ignoreRangeDeletions(long);

  private native void setIgnoreRangeDeletions(long, boolean);

  private native void setIterateUpperBound(long, long);

  private native long iterateUpperBound(long);

  private native void setIterateLowerBound(long, long);

  private native long iterateLowerBound(long);

  protected final native void disposeInternal(long);

  static {};
    Code:
       0: ldc_w         #47                 // class org/rocksdb/ReadOptions
       3: invokevirtual #48                 // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #7                  // Field $assertionsDisabled:Z
      17: return
}
