Compiled from "KafkaStorage.java"
public class zipkin2.storage.kafka.KafkaStorage extends zipkin2.storage.StorageComponent {
  public static final java.lang.String HTTP_PATH_PREFIX;

  static final org.slf4j.Logger LOG;

  final boolean partitioningEnabled;

  final boolean aggregationEnabled;

  final boolean traceByIdQueryEnabled;

  final boolean traceSearchEnabled;

  final boolean dependencyQueryEnabled;

  final java.util.List<java.lang.String> autocompleteKeys;

  final long minTracesStored;

  final java.lang.String hostname;

  final int httpPort;

  final java.lang.String partitioningSpansTopic;

  final java.lang.String aggregationSpansTopic;

  final java.lang.String aggregationTraceTopic;

  final java.lang.String aggregationDependencyTopic;

  final java.lang.String storageSpansTopic;

  final java.lang.String storageDependencyTopic;

  final java.util.Properties adminConfig;

  final java.util.Properties producerConfig;

  final java.util.Properties aggregationStreamConfig;

  final java.util.Properties traceStoreStreamConfig;

  final java.util.Properties dependencyStoreStreamConfig;

  final org.apache.kafka.streams.Topology aggregationTopology;

  final org.apache.kafka.streams.Topology traceStoreTopology;

  final org.apache.kafka.streams.Topology dependencyStoreTopology;

  final java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String> httpBaseUrl;

  volatile org.apache.kafka.clients.admin.AdminClient adminClient;

  volatile org.apache.kafka.clients.producer.Producer<java.lang.String, byte[]> producer;

  volatile org.apache.kafka.streams.KafkaStreams aggregationStream;

  volatile org.apache.kafka.streams.KafkaStreams traceStoreStream;

  volatile org.apache.kafka.streams.KafkaStreams dependencyStoreStream;

  volatile com.linecorp.armeria.server.Server server;

  volatile boolean closeCalled;

  public static zipkin2.storage.kafka.KafkaStorageBuilder newBuilder();
    Code:
       0: new           #1                  // class zipkin2/storage/kafka/KafkaStorageBuilder
       3: dup
       4: invokespecial #2                  // Method zipkin2/storage/kafka/KafkaStorageBuilder."<init>":()V
       7: areturn

  zipkin2.storage.kafka.KafkaStorage(zipkin2.storage.kafka.KafkaStorageBuilder);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method zipkin2/storage/StorageComponent."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #4                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanPartitioning:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
       9: getfield      #5                  // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder.enabled:Z
      12: putfield      #6                  // Field partitioningEnabled:Z
      15: aload_0
      16: aload_1
      17: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      20: getfield      #8                  // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.enabled:Z
      23: putfield      #9                  // Field aggregationEnabled:Z
      26: aload_0
      27: aload_1
      28: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      31: getfield      #11                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.traceByIdQueryEnabled:Z
      34: putfield      #12                 // Field traceByIdQueryEnabled:Z
      37: aload_0
      38: aload_1
      39: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      42: getfield      #13                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.traceSearchEnabled:Z
      45: putfield      #14                 // Field traceSearchEnabled:Z
      48: aload_0
      49: aload_1
      50: getfield      #15                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      53: getfield      #16                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.enabled:Z
      56: putfield      #17                 // Field dependencyQueryEnabled:Z
      59: aload_0
      60: aload_1
      61: getfield      #18                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.autocompleteKeys:Ljava/util/List;
      64: putfield      #19                 // Field autocompleteKeys:Ljava/util/List;
      67: aload_0
      68: aload_1
      69: getfield      #4                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanPartitioning:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
      72: getfield      #20                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder.spansTopic:Ljava/lang/String;
      75: putfield      #21                 // Field partitioningSpansTopic:Ljava/lang/String;
      78: aload_0
      79: aload_1
      80: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      83: getfield      #22                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.spansTopic:Ljava/lang/String;
      86: putfield      #23                 // Field aggregationSpansTopic:Ljava/lang/String;
      89: aload_0
      90: aload_1
      91: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      94: getfield      #24                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.traceTopic:Ljava/lang/String;
      97: putfield      #25                 // Field aggregationTraceTopic:Ljava/lang/String;
     100: aload_0
     101: aload_1
     102: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
     105: getfield      #26                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.dependencyTopic:Ljava/lang/String;
     108: putfield      #27                 // Field aggregationDependencyTopic:Ljava/lang/String;
     111: aload_0
     112: aload_1
     113: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     116: getfield      #28                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.spansTopic:Ljava/lang/String;
     119: putfield      #29                 // Field storageSpansTopic:Ljava/lang/String;
     122: aload_0
     123: aload_1
     124: getfield      #15                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
     127: getfield      #30                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.dependencyTopic:Ljava/lang/String;
     130: putfield      #31                 // Field storageDependencyTopic:Ljava/lang/String;
     133: aload_0
     134: aload_1
     135: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     138: getfield      #32                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.minTracesStored:J
     141: putfield      #33                 // Field minTracesStored:J
     144: aload_0
     145: aload_1
     146: getfield      #34                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.httpBaseUrl:Ljava/util/function/BiFunction;
     149: putfield      #35                 // Field httpBaseUrl:Ljava/util/function/BiFunction;
     152: aload_0
     153: aload_1
     154: getfield      #36                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.hostname:Ljava/lang/String;
     157: putfield      #37                 // Field hostname:Ljava/lang/String;
     160: aload_0
     161: aload_1
     162: getfield      #38                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.serverPort:I
     165: putfield      #39                 // Field httpPort:I
     168: aload_0
     169: aload_1
     170: getfield      #40                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.adminConfig:Ljava/util/Properties;
     173: putfield      #41                 // Field adminConfig:Ljava/util/Properties;
     176: aload_0
     177: aload_1
     178: getfield      #4                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanPartitioning:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
     181: getfield      #42                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder.producerConfig:Ljava/util/Properties;
     184: putfield      #43                 // Field producerConfig:Ljava/util/Properties;
     187: aload_0
     188: aload_1
     189: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
     192: getfield      #44                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.streamConfig:Ljava/util/Properties;
     195: putfield      #45                 // Field aggregationStreamConfig:Ljava/util/Properties;
     198: aload_0
     199: aload_1
     200: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     203: getfield      #46                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.streamConfig:Ljava/util/Properties;
     206: putfield      #47                 // Field traceStoreStreamConfig:Ljava/util/Properties;
     209: aload_0
     210: aload_1
     211: getfield      #15                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
     214: getfield      #48                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.streamConfig:Ljava/util/Properties;
     217: putfield      #49                 // Field dependencyStoreStreamConfig:Ljava/util/Properties;
     220: aload_0
     221: new           #50                 // class zipkin2/storage/kafka/streams/SpanAggregationTopology
     224: dup
     225: aload_1
     226: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
     229: getfield      #22                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.spansTopic:Ljava/lang/String;
     232: aload_1
     233: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
     236: getfield      #24                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.traceTopic:Ljava/lang/String;
     239: aload_1
     240: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
     243: getfield      #26                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.dependencyTopic:Ljava/lang/String;
     246: aload_1
     247: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
     250: getfield      #51                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.traceTimeout:Ljava/time/Duration;
     253: aload_1
     254: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorageBuilder.spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
     257: getfield      #8                  // Field zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.enabled:Z
     260: invokespecial #52                 // Method zipkin2/storage/kafka/streams/SpanAggregationTopology."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/time/Duration;Z)V
     263: invokevirtual #53                 // Method zipkin2/storage/kafka/streams/SpanAggregationTopology.get:()Lorg/apache/kafka/streams/Topology;
     266: putfield      #54                 // Field aggregationTopology:Lorg/apache/kafka/streams/Topology;
     269: aload_0
     270: new           #55                 // class zipkin2/storage/kafka/streams/TraceStorageTopology
     273: dup
     274: aload_1
     275: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     278: getfield      #28                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.spansTopic:Ljava/lang/String;
     281: aload_0
     282: getfield      #19                 // Field autocompleteKeys:Ljava/util/List;
     285: aload_1
     286: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     289: getfield      #56                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.traceTtl:Ljava/time/Duration;
     292: aload_1
     293: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     296: getfield      #57                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.traceTtlCheckInterval:Ljava/time/Duration;
     299: aload_1
     300: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     303: getfield      #32                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.minTracesStored:J
     306: aload_1
     307: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     310: getfield      #11                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.traceByIdQueryEnabled:Z
     313: aload_1
     314: getfield      #10                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
     317: getfield      #13                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.traceSearchEnabled:Z
     320: invokespecial #58                 // Method zipkin2/storage/kafka/streams/TraceStorageTopology."<init>":(Ljava/lang/String;Ljava/util/List;Ljava/time/Duration;Ljava/time/Duration;JZZ)V
     323: invokevirtual #59                 // Method zipkin2/storage/kafka/streams/TraceStorageTopology.get:()Lorg/apache/kafka/streams/Topology;
     326: putfield      #60                 // Field traceStoreTopology:Lorg/apache/kafka/streams/Topology;
     329: aload_0
     330: new           #61                 // class zipkin2/storage/kafka/streams/DependencyStorageTopology
     333: dup
     334: aload_1
     335: getfield      #15                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
     338: getfield      #30                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.dependencyTopic:Ljava/lang/String;
     341: aload_1
     342: getfield      #15                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
     345: getfield      #62                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.dependencyTtl:Ljava/time/Duration;
     348: aload_1
     349: getfield      #15                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
     352: getfield      #63                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.dependencyWindowSize:Ljava/time/Duration;
     355: aload_1
     356: getfield      #15                 // Field zipkin2/storage/kafka/KafkaStorageBuilder.dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
     359: getfield      #16                 // Field zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.enabled:Z
     362: invokespecial #64                 // Method zipkin2/storage/kafka/streams/DependencyStorageTopology."<init>":(Ljava/lang/String;Ljava/time/Duration;Ljava/time/Duration;Z)V
     365: invokevirtual #65                 // Method zipkin2/storage/kafka/streams/DependencyStorageTopology.get:()Lorg/apache/kafka/streams/Topology;
     368: putfield      #66                 // Field dependencyStoreTopology:Lorg/apache/kafka/streams/Topology;
     371: return

  public zipkin2.storage.SpanConsumer spanConsumer();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkResources:()V
       4: aload_0
       5: getfield      #6                  // Field partitioningEnabled:Z
       8: ifeq          20
      11: new           #68                 // class zipkin2/storage/kafka/KafkaSpanConsumer
      14: dup
      15: aload_0
      16: invokespecial #69                 // Method zipkin2/storage/kafka/KafkaSpanConsumer."<init>":(Lzipkin2/storage/kafka/KafkaStorage;)V
      19: areturn
      20: invokedynamic #70,  0             // InvokeDynamic #0:accept:()Lzipkin2/storage/SpanConsumer;
      25: areturn

  public zipkin2.storage.SpanStore spanStore();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkResources:()V
       4: new           #71                 // class zipkin2/storage/kafka/KafkaSpanStore
       7: dup
       8: aload_0
       9: invokespecial #72                 // Method zipkin2/storage/kafka/KafkaSpanStore."<init>":(Lzipkin2/storage/kafka/KafkaStorage;)V
      12: areturn

  public zipkin2.storage.Traces traces();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkResources:()V
       4: new           #71                 // class zipkin2/storage/kafka/KafkaSpanStore
       7: dup
       8: aload_0
       9: invokespecial #72                 // Method zipkin2/storage/kafka/KafkaSpanStore."<init>":(Lzipkin2/storage/kafka/KafkaStorage;)V
      12: areturn

  public zipkin2.storage.ServiceAndSpanNames serviceAndSpanNames();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkResources:()V
       4: new           #71                 // class zipkin2/storage/kafka/KafkaSpanStore
       7: dup
       8: aload_0
       9: invokespecial #72                 // Method zipkin2/storage/kafka/KafkaSpanStore."<init>":(Lzipkin2/storage/kafka/KafkaStorage;)V
      12: areturn

  public zipkin2.storage.AutocompleteTags autocompleteTags();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method checkResources:()V
       4: new           #73                 // class zipkin2/storage/kafka/KafkaAutocompleteTags
       7: dup
       8: aload_0
       9: invokespecial #74                 // Method zipkin2/storage/kafka/KafkaAutocompleteTags."<init>":(Lzipkin2/storage/kafka/KafkaStorage;)V
      12: areturn

  void checkResources();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getAggregationStream:()Lorg/apache/kafka/streams/KafkaStreams;
       4: pop
       5: aload_0
       6: invokevirtual #76                 // Method getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
       9: pop
      10: aload_0
      11: invokevirtual #77                 // Method getDependencyStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      14: pop
      15: return

  public zipkin2.CheckResult check();
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method getAdminClient:()Lorg/apache/kafka/clients/admin/AdminClient;
       4: invokevirtual #79                 // Method org/apache/kafka/clients/admin/AdminClient.describeCluster:()Lorg/apache/kafka/clients/admin/DescribeClusterResult;
       7: invokevirtual #80                 // Method org/apache/kafka/clients/admin/DescribeClusterResult.clusterId:()Lorg/apache/kafka/common/KafkaFuture;
      10: astore_1
      11: aload_1
      12: lconst_1
      13: getstatic     #81                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      16: invokevirtual #82                 // Method org/apache/kafka/common/KafkaFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: invokevirtual #75                 // Method getAggregationStream:()Lorg/apache/kafka/streams/KafkaStreams;
      24: invokevirtual #83                 // Method org/apache/kafka/streams/KafkaStreams.state:()Lorg/apache/kafka/streams/KafkaStreams$State;
      27: astore_2
      28: aload_2
      29: invokevirtual #84                 // Method org/apache/kafka/streams/KafkaStreams$State.isRunningOrRebalancing:()Z
      32: ifne          65
      35: new           #85                 // class java/lang/IllegalStateException
      38: dup
      39: new           #86                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #88                 // String Aggregation stream not running.
      48: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: invokestatic  #93                 // Method zipkin2/CheckResult.failed:(Ljava/lang/Throwable;)Lzipkin2/CheckResult;
      64: areturn
      65: aload_0
      66: invokevirtual #76                 // Method getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      69: invokevirtual #83                 // Method org/apache/kafka/streams/KafkaStreams.state:()Lorg/apache/kafka/streams/KafkaStreams$State;
      72: astore_3
      73: aload_3
      74: invokevirtual #84                 // Method org/apache/kafka/streams/KafkaStreams$State.isRunningOrRebalancing:()Z
      77: ifne          110
      80: new           #85                 // class java/lang/IllegalStateException
      83: dup
      84: new           #86                 // class java/lang/StringBuilder
      87: dup
      88: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      91: ldc           #94                 // String Store stream not running.
      93: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_3
      97: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     100: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     106: invokestatic  #93                 // Method zipkin2/CheckResult.failed:(Ljava/lang/Throwable;)Lzipkin2/CheckResult;
     109: areturn
     110: aload_0
     111: invokevirtual #77                 // Method getDependencyStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
     114: invokevirtual #83                 // Method org/apache/kafka/streams/KafkaStreams.state:()Lorg/apache/kafka/streams/KafkaStreams$State;
     117: astore        4
     119: aload         4
     121: invokevirtual #84                 // Method org/apache/kafka/streams/KafkaStreams$State.isRunningOrRebalancing:()Z
     124: ifne          158
     127: new           #85                 // class java/lang/IllegalStateException
     130: dup
     131: new           #86                 // class java/lang/StringBuilder
     134: dup
     135: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
     138: ldc           #94                 // String Store stream not running.
     140: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload         4
     145: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     148: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     154: invokestatic  #93                 // Method zipkin2/CheckResult.failed:(Ljava/lang/Throwable;)Lzipkin2/CheckResult;
     157: areturn
     158: getstatic     #95                 // Field zipkin2/CheckResult.OK:Lzipkin2/CheckResult;
     161: areturn
     162: astore_1
     163: aload_1
     164: invokestatic  #93                 // Method zipkin2/CheckResult.failed:(Ljava/lang/Throwable;)Lzipkin2/CheckResult;
     167: areturn
    Exception table:
       from    to  target type
           0    64   162   Class java/lang/Exception
          65   109   162   Class java/lang/Exception
         110   157   162   Class java/lang/Exception
         158   161   162   Class java/lang/Exception

  public void close();
    Code:
       0: aload_0
       1: getfield      #97                 // Field closeCalled:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: astore_1
      11: monitorenter
      12: aload_0
      13: getfield      #97                 // Field closeCalled:Z
      16: ifne          28
      19: aload_0
      20: invokevirtual #98                 // Method doClose:()V
      23: aload_0
      24: iconst_1
      25: putfield      #97                 // Field closeCalled:Z
      28: aload_1
      29: monitorexit
      30: goto          38
      33: astore_2
      34: aload_1
      35: monitorexit
      36: aload_2
      37: athrow
      38: return
    Exception table:
       from    to  target type
          12    30    33   any
          33    36    33   any

  void doClose();
    Code:
       0: aload_0
       1: getfield      #99                 // Field adminClient:Lorg/apache/kafka/clients/admin/AdminClient;
       4: ifnull        18
       7: aload_0
       8: getfield      #99                 // Field adminClient:Lorg/apache/kafka/clients/admin/AdminClient;
      11: lconst_1
      12: invokestatic  #100                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      15: invokevirtual #101                // Method org/apache/kafka/clients/admin/AdminClient.close:(Ljava/time/Duration;)V
      18: aload_0
      19: getfield      #102                // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      22: ifnull        38
      25: aload_0
      26: getfield      #102                // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      29: lconst_1
      30: invokestatic  #100                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      33: invokeinterface #103,  2          // InterfaceMethod org/apache/kafka/clients/producer/Producer.close:(Ljava/time/Duration;)V
      38: aload_0
      39: getfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      42: ifnull        57
      45: aload_0
      46: getfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      49: lconst_1
      50: invokestatic  #100                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      53: invokevirtual #105                // Method org/apache/kafka/streams/KafkaStreams.close:(Ljava/time/Duration;)Z
      56: pop
      57: aload_0
      58: getfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      61: ifnull        76
      64: aload_0
      65: getfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      68: lconst_1
      69: invokestatic  #100                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      72: invokevirtual #105                // Method org/apache/kafka/streams/KafkaStreams.close:(Ljava/time/Duration;)Z
      75: pop
      76: aload_0
      77: getfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
      80: ifnull        95
      83: aload_0
      84: getfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
      87: lconst_1
      88: invokestatic  #100                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      91: invokevirtual #105                // Method org/apache/kafka/streams/KafkaStreams.close:(Ljava/time/Duration;)Z
      94: pop
      95: aload_0
      96: getfield      #108                // Field server:Lcom/linecorp/armeria/server/Server;
      99: ifnull        109
     102: aload_0
     103: getfield      #108                // Field server:Lcom/linecorp/armeria/server/Server;
     106: invokevirtual #109                // Method com/linecorp/armeria/server/Server.close:()V
     109: goto          128
     112: astore_1
     113: getstatic     #111                // Field LOG:Lorg/slf4j/Logger;
     116: ldc           #112                // String error closing client {}
     118: aload_1
     119: invokevirtual #113                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     122: aload_1
     123: invokeinterface #114,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     128: return
    Exception table:
       from    to  target type
           0   109   112   Class java/lang/Exception
           0   109   112   Class java/lang/Error

  org.apache.kafka.clients.producer.Producer<java.lang.String, byte[]> getProducer();
    Code:
       0: aload_0
       1: getfield      #102                // Field producer:Lorg/apache/kafka/clients/producer/Producer;
       4: ifnonnull     43
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #102                // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      15: ifnonnull     33
      18: aload_0
      19: new           #115                // class org/apache/kafka/clients/producer/KafkaProducer
      22: dup
      23: aload_0
      24: getfield      #43                 // Field producerConfig:Ljava/util/Properties;
      27: invokespecial #116                // Method org/apache/kafka/clients/producer/KafkaProducer."<init>":(Ljava/util/Properties;)V
      30: putfield      #102                // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      33: aload_1
      34: monitorexit
      35: goto          43
      38: astore_2
      39: aload_1
      40: monitorexit
      41: aload_2
      42: athrow
      43: aload_0
      44: getfield      #102                // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      47: areturn
    Exception table:
       from    to  target type
          11    35    38   any
          38    41    38   any

  org.apache.kafka.clients.admin.AdminClient getAdminClient();
    Code:
       0: aload_0
       1: getfield      #99                 // Field adminClient:Lorg/apache/kafka/clients/admin/AdminClient;
       4: ifnonnull     39
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #99                 // Field adminClient:Lorg/apache/kafka/clients/admin/AdminClient;
      15: ifnonnull     29
      18: aload_0
      19: aload_0
      20: getfield      #41                 // Field adminConfig:Ljava/util/Properties;
      23: invokestatic  #117                // Method org/apache/kafka/clients/admin/AdminClient.create:(Ljava/util/Properties;)Lorg/apache/kafka/clients/admin/AdminClient;
      26: putfield      #99                 // Field adminClient:Lorg/apache/kafka/clients/admin/AdminClient;
      29: aload_1
      30: monitorexit
      31: goto          39
      34: astore_2
      35: aload_1
      36: monitorexit
      37: aload_2
      38: athrow
      39: aload_0
      40: getfield      #99                 // Field adminClient:Lorg/apache/kafka/clients/admin/AdminClient;
      43: areturn
    Exception table:
       from    to  target type
          11    31    34   any
          34    37    34   any

  org.apache.kafka.streams.KafkaStreams getTraceStorageStream();
    Code:
       0: aload_0
       1: getfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
       4: ifnonnull     91
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      15: ifnonnull     81
      18: aload_0
      19: new           #118                // class org/apache/kafka/streams/KafkaStreams
      22: dup
      23: aload_0
      24: getfield      #60                 // Field traceStoreTopology:Lorg/apache/kafka/streams/Topology;
      27: aload_0
      28: getfield      #47                 // Field traceStoreStreamConfig:Ljava/util/Properties;
      31: invokespecial #119                // Method org/apache/kafka/streams/KafkaStreams."<init>":(Lorg/apache/kafka/streams/Topology;Ljava/util/Properties;)V
      34: putfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      37: aload_0
      38: getfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      41: invokevirtual #120                // Method org/apache/kafka/streams/KafkaStreams.start:()V
      44: getstatic     #111                // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #121                // String Trace storage topology:\n{}
      49: aload_0
      50: getfield      #60                 // Field traceStoreTopology:Lorg/apache/kafka/streams/Topology;
      53: invokevirtual #122                // Method org/apache/kafka/streams/Topology.describe:()Lorg/apache/kafka/streams/TopologyDescription;
      56: invokeinterface #123,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      61: goto          81
      64: astore_2
      65: getstatic     #111                // Field LOG:Lorg/slf4j/Logger;
      68: ldc           #124                // String Error starting trace storage process
      70: aload_2
      71: invokeinterface #125,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: aload_0
      77: aconst_null
      78: putfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      81: aload_1
      82: monitorexit
      83: goto          91
      86: astore_3
      87: aload_1
      88: monitorexit
      89: aload_3
      90: athrow
      91: aload_0
      92: getfield      #104                // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      95: areturn
    Exception table:
       from    to  target type
          18    61    64   Class java/lang/Exception
          11    83    86   any
          86    89    86   any

  org.apache.kafka.streams.KafkaStreams getDependencyStorageStream();
    Code:
       0: aload_0
       1: getfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
       4: ifnonnull     91
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      15: ifnonnull     81
      18: aload_0
      19: new           #118                // class org/apache/kafka/streams/KafkaStreams
      22: dup
      23: aload_0
      24: getfield      #66                 // Field dependencyStoreTopology:Lorg/apache/kafka/streams/Topology;
      27: aload_0
      28: getfield      #49                 // Field dependencyStoreStreamConfig:Ljava/util/Properties;
      31: invokespecial #119                // Method org/apache/kafka/streams/KafkaStreams."<init>":(Lorg/apache/kafka/streams/Topology;Ljava/util/Properties;)V
      34: putfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      37: aload_0
      38: getfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      41: invokevirtual #120                // Method org/apache/kafka/streams/KafkaStreams.start:()V
      44: getstatic     #111                // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #126                // String Dependency storage topology:\n{}
      49: aload_0
      50: getfield      #66                 // Field dependencyStoreTopology:Lorg/apache/kafka/streams/Topology;
      53: invokevirtual #122                // Method org/apache/kafka/streams/Topology.describe:()Lorg/apache/kafka/streams/TopologyDescription;
      56: invokeinterface #123,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      61: goto          81
      64: astore_2
      65: getstatic     #111                // Field LOG:Lorg/slf4j/Logger;
      68: ldc           #127                // String Error starting dependency storage
      70: aload_2
      71: invokeinterface #125,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: aload_0
      77: aconst_null
      78: putfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      81: aload_1
      82: monitorexit
      83: goto          91
      86: astore_3
      87: aload_1
      88: monitorexit
      89: aload_3
      90: athrow
      91: aload_0
      92: getfield      #106                // Field dependencyStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
      95: areturn
    Exception table:
       from    to  target type
          18    61    64   Class java/lang/Exception
          11    83    86   any
          86    89    86   any

  org.apache.kafka.streams.KafkaStreams getAggregationStream();
    Code:
       0: aload_0
       1: getfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
       4: ifnonnull     91
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
      15: ifnonnull     81
      18: aload_0
      19: new           #118                // class org/apache/kafka/streams/KafkaStreams
      22: dup
      23: aload_0
      24: getfield      #54                 // Field aggregationTopology:Lorg/apache/kafka/streams/Topology;
      27: aload_0
      28: getfield      #45                 // Field aggregationStreamConfig:Ljava/util/Properties;
      31: invokespecial #119                // Method org/apache/kafka/streams/KafkaStreams."<init>":(Lorg/apache/kafka/streams/Topology;Ljava/util/Properties;)V
      34: putfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
      37: aload_0
      38: getfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
      41: invokevirtual #120                // Method org/apache/kafka/streams/KafkaStreams.start:()V
      44: getstatic     #111                // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #128                // String Aggregation topology:\n{}
      49: aload_0
      50: getfield      #54                 // Field aggregationTopology:Lorg/apache/kafka/streams/Topology;
      53: invokevirtual #122                // Method org/apache/kafka/streams/Topology.describe:()Lorg/apache/kafka/streams/TopologyDescription;
      56: invokeinterface #123,  3          // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      61: goto          81
      64: astore_2
      65: getstatic     #111                // Field LOG:Lorg/slf4j/Logger;
      68: ldc           #129                // String Error loading aggregation process
      70: aload_2
      71: invokeinterface #125,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: aload_0
      77: aconst_null
      78: putfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
      81: aload_1
      82: monitorexit
      83: goto          91
      86: astore_3
      87: aload_1
      88: monitorexit
      89: aload_3
      90: athrow
      91: aload_0
      92: getfield      #107                // Field aggregationStream:Lorg/apache/kafka/streams/KafkaStreams;
      95: areturn
    Exception table:
       from    to  target type
          18    61    64   Class java/lang/Exception
          11    83    86   any
          86    89    86   any

  public zipkin2.storage.kafka.KafkaStorageHttpService httpService();
    Code:
       0: new           #130                // class zipkin2/storage/kafka/KafkaStorageHttpService
       3: dup
       4: aload_0
       5: invokespecial #131                // Method zipkin2/storage/kafka/KafkaStorageHttpService."<init>":(Lzipkin2/storage/kafka/KafkaStorage;)V
       8: areturn

  public java.lang.String toString();
    Code:
       0: new           #86                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #132                // String KafkaStorage{ bootstrapServers=
       9: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #41                 // Field adminConfig:Ljava/util/Properties;
      16: ldc           #134                // String bootstrap.servers
      18: invokevirtual #135                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #136                // String , spanPartitioning{ enabled=
      26: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #6                  // Field partitioningEnabled:Z
      33: invokevirtual #137                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      36: ldc           #138                // String , spansTopic=
      38: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #21                 // Field partitioningSpansTopic:Ljava/lang/String;
      45: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #139                // String }, spanAggregation{ enabled=
      50: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #9                  // Field aggregationEnabled:Z
      57: invokevirtual #137                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      60: ldc           #138                // String , spansTopic=
      62: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_0
      66: getfield      #23                 // Field aggregationSpansTopic:Ljava/lang/String;
      69: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: ldc           #140                // String , traceTopic=
      74: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_0
      78: getfield      #25                 // Field aggregationTraceTopic:Ljava/lang/String;
      81: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: ldc           #141                // String , dependencyTopic=
      86: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: aload_0
      90: getfield      #27                 // Field aggregationDependencyTopic:Ljava/lang/String;
      93: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #142                // String }, traceStore { traceByIdQueryEnabled=
      98: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_0
     102: getfield      #12                 // Field traceByIdQueryEnabled:Z
     105: invokevirtual #137                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     108: ldc           #143                // String , traceSearchEnabled=
     110: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: getfield      #14                 // Field traceSearchEnabled:Z
     117: invokevirtual #137                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     120: ldc           #138                // String , spansTopic=
     122: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: getfield      #29                 // Field storageSpansTopic:Ljava/lang/String;
     129: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #144                // String }, dependencyStore { dependencyQueryEnabled=
     134: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_0
     138: getfield      #17                 // Field dependencyQueryEnabled:Z
     141: invokevirtual #137                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     144: ldc           #141                // String , dependencyTopic=
     146: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_0
     150: getfield      #31                 // Field storageDependencyTopic:Ljava/lang/String;
     153: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: ldc           #145                // String }
     158: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: bipush        125
     163: invokevirtual #146                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     166: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: areturn

  private static zipkin2.Call lambda$spanConsumer$0(java.util.List);
    Code:
       0: aconst_null
       1: invokestatic  #147                // Method zipkin2/Call.create:(Ljava/lang/Object;)Lzipkin2/Call;
       4: areturn

  static {};
    Code:
       0: ldc           #148                // class zipkin2/storage/kafka/KafkaStorage
       2: invokestatic  #149                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #111                // Field LOG:Lorg/slf4j/Logger;
       8: return
}
