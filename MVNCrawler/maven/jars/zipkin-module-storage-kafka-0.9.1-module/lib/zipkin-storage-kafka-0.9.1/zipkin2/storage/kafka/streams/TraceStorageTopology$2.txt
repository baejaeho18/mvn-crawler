Compiled from "TraceStorageTopology.java"
class zipkin2.storage.kafka.streams.TraceStorageTopology$2 implements org.apache.kafka.streams.processor.Processor<java.lang.String, java.util.List<zipkin2.Span>> {
  org.apache.kafka.streams.state.KeyValueStore serviceNameStore;

  org.apache.kafka.streams.state.KeyValueStore spanNamesStore;

  org.apache.kafka.streams.state.KeyValueStore remoteServiceNamesStore;

  org.apache.kafka.streams.state.KeyValueStore autocompleteTagsStore;

  final zipkin2.storage.kafka.streams.TraceStorageTopology this$0;

  zipkin2.storage.kafka.streams.TraceStorageTopology$2(zipkin2.storage.kafka.streams.TraceStorageTopology);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lzipkin2/storage/kafka/streams/TraceStorageTopology;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public void init(org.apache.kafka.streams.processor.ProcessorContext);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #4                  // String zipkin-service-names
       4: invokeinterface #5,  2            // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.getStateStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
       9: checkcast     #6                  // class org/apache/kafka/streams/state/KeyValueStore
      12: putfield      #7                  // Field serviceNameStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      15: aload_0
      16: aload_1
      17: ldc           #8                  // String zipkin-span-names
      19: invokeinterface #5,  2            // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.getStateStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
      24: checkcast     #6                  // class org/apache/kafka/streams/state/KeyValueStore
      27: putfield      #9                  // Field spanNamesStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      30: aload_0
      31: aload_1
      32: ldc           #10                 // String zipkin-remote-service-names
      34: invokeinterface #5,  2            // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.getStateStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
      39: checkcast     #6                  // class org/apache/kafka/streams/state/KeyValueStore
      42: putfield      #11                 // Field remoteServiceNamesStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      45: aload_0
      46: aload_1
      47: ldc           #12                 // String zipkin-autocomplete-tags
      49: invokeinterface #5,  2            // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.getStateStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
      54: checkcast     #6                  // class org/apache/kafka/streams/state/KeyValueStore
      57: putfield      #13                 // Field autocompleteTagsStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      60: return

  public void process(java.lang.String, java.util.List<zipkin2.Span>);
    Code:
       0: aload_2
       1: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          261
      16: aload_3
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #17                 // class zipkin2/Span
      25: astore        4
      27: aload         4
      29: invokevirtual #18                 // Method zipkin2/Span.localServiceName:()Ljava/lang/String;
      32: ifnull        225
      35: aload_0
      36: getfield      #7                  // Field serviceNameStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      39: aload         4
      41: invokevirtual #18                 // Method zipkin2/Span.localServiceName:()Ljava/lang/String;
      44: aload         4
      46: invokevirtual #18                 // Method zipkin2/Span.localServiceName:()Ljava/lang/String;
      49: invokeinterface #19,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload         4
      57: invokevirtual #20                 // Method zipkin2/Span.name:()Ljava/lang/String;
      60: ifnull        140
      63: aload_0
      64: getfield      #9                  // Field spanNamesStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      67: aload         4
      69: invokevirtual #18                 // Method zipkin2/Span.localServiceName:()Ljava/lang/String;
      72: invokeinterface #21,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.get:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #22                 // class java/util/Set
      80: astore        5
      82: aload         5
      84: ifnonnull     96
      87: new           #23                 // class java/util/LinkedHashSet
      90: dup
      91: invokespecial #24                 // Method java/util/LinkedHashSet."<init>":()V
      94: astore        5
      96: aload         5
      98: aload         4
     100: invokevirtual #20                 // Method zipkin2/Span.name:()Ljava/lang/String;
     103: invokeinterface #25,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     108: ifne          140
     111: aload         5
     113: aload         4
     115: invokevirtual #20                 // Method zipkin2/Span.name:()Ljava/lang/String;
     118: invokeinterface #26,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     123: pop
     124: aload_0
     125: getfield      #9                  // Field spanNamesStore:Lorg/apache/kafka/streams/state/KeyValueStore;
     128: aload         4
     130: invokevirtual #18                 // Method zipkin2/Span.localServiceName:()Ljava/lang/String;
     133: aload         5
     135: invokeinterface #27,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
     140: aload         4
     142: invokevirtual #28                 // Method zipkin2/Span.remoteServiceName:()Ljava/lang/String;
     145: ifnull        225
     148: aload_0
     149: getfield      #11                 // Field remoteServiceNamesStore:Lorg/apache/kafka/streams/state/KeyValueStore;
     152: aload         4
     154: invokevirtual #18                 // Method zipkin2/Span.localServiceName:()Ljava/lang/String;
     157: invokeinterface #21,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.get:(Ljava/lang/Object;)Ljava/lang/Object;
     162: checkcast     #22                 // class java/util/Set
     165: astore        5
     167: aload         5
     169: ifnonnull     181
     172: new           #23                 // class java/util/LinkedHashSet
     175: dup
     176: invokespecial #24                 // Method java/util/LinkedHashSet."<init>":()V
     179: astore        5
     181: aload         5
     183: aload         4
     185: invokevirtual #28                 // Method zipkin2/Span.remoteServiceName:()Ljava/lang/String;
     188: invokeinterface #25,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     193: ifne          225
     196: aload         5
     198: aload         4
     200: invokevirtual #28                 // Method zipkin2/Span.remoteServiceName:()Ljava/lang/String;
     203: invokeinterface #26,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     208: pop
     209: aload_0
     210: getfield      #11                 // Field remoteServiceNamesStore:Lorg/apache/kafka/streams/state/KeyValueStore;
     213: aload         4
     215: invokevirtual #18                 // Method zipkin2/Span.localServiceName:()Ljava/lang/String;
     218: aload         5
     220: invokeinterface #27,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
     225: aload         4
     227: invokevirtual #29                 // Method zipkin2/Span.tags:()Ljava/util/Map;
     230: invokeinterface #30,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     235: ifne          258
     238: aload_0
     239: getfield      #2                  // Field this$0:Lzipkin2/storage/kafka/streams/TraceStorageTopology;
     242: getfield      #31                 // Field zipkin2/storage/kafka/streams/TraceStorageTopology.autoCompleteKeys:Ljava/util/List;
     245: aload_0
     246: aload         4
     248: invokedynamic #32,  0             // InvokeDynamic #0:accept:(Lzipkin2/storage/kafka/streams/TraceStorageTopology$2;Lzipkin2/Span;)Ljava/util/function/Consumer;
     253: invokeinterface #33,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
     258: goto          7
     261: return

  public void close();
    Code:
       0: return

  public void process(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #34                 // class java/lang/String
       5: aload_2
       6: checkcast     #35                 // class java/util/List
       9: invokevirtual #36                 // Method process:(Ljava/lang/String;Ljava/util/List;)V
      12: return

  private void lambda$process$0(zipkin2.Span, java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #29                 // Method zipkin2/Span.tags:()Ljava/util/Map;
       4: aload_2
       5: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #34                 // class java/lang/String
      13: astore_3
      14: aload_3
      15: ifnull        79
      18: aload_0
      19: getfield      #38                 // Field autocompleteTagsStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      22: aload_2
      23: invokeinterface #21,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #22                 // class java/util/Set
      31: astore        4
      33: aload         4
      35: ifnonnull     47
      38: new           #23                 // class java/util/LinkedHashSet
      41: dup
      42: invokespecial #24                 // Method java/util/LinkedHashSet."<init>":()V
      45: astore        4
      47: aload         4
      49: aload_3
      50: invokeinterface #25,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      55: ifne          79
      58: aload         4
      60: aload_3
      61: invokeinterface #26,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #38                 // Field autocompleteTagsStore:Lorg/apache/kafka/streams/state/KeyValueStore;
      71: aload_2
      72: aload         4
      74: invokeinterface #27,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      79: return
}
