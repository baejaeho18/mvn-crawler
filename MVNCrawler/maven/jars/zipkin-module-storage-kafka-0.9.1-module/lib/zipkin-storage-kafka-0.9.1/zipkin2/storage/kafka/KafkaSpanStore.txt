Compiled from "KafkaSpanStore.java"
final class zipkin2.storage.kafka.KafkaSpanStore implements zipkin2.storage.SpanStore,zipkin2.storage.Traces,zipkin2.storage.ServiceAndSpanNames {
  static final com.fasterxml.jackson.databind.ObjectMapper MAPPER;

  final zipkin2.storage.kafka.KafkaStorage storage;

  final java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String> httpBaseUrl;

  final boolean traceSearchEnabled;

  final boolean traceByIdQueryEnabled;

  final boolean dependencyQueryEnabled;

  zipkin2.storage.kafka.KafkaSpanStore(zipkin2.storage.kafka.KafkaStorage);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
       9: aload_0
      10: aload_1
      11: getfield      #3                  // Field zipkin2/storage/kafka/KafkaStorage.httpBaseUrl:Ljava/util/function/BiFunction;
      14: putfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      17: aload_0
      18: aload_1
      19: getfield      #5                  // Field zipkin2/storage/kafka/KafkaStorage.traceByIdQueryEnabled:Z
      22: putfield      #6                  // Field traceByIdQueryEnabled:Z
      25: aload_0
      26: aload_1
      27: getfield      #7                  // Field zipkin2/storage/kafka/KafkaStorage.traceSearchEnabled:Z
      30: putfield      #8                  // Field traceSearchEnabled:Z
      33: aload_0
      34: aload_1
      35: getfield      #9                  // Field zipkin2/storage/kafka/KafkaStorage.dependencyQueryEnabled:Z
      38: putfield      #10                 // Field dependencyQueryEnabled:Z
      41: return

  public zipkin2.Call<java.util.List<java.util.List<zipkin2.Span>>> getTraces(zipkin2.storage.QueryRequest);
    Code:
       0: aload_0
       1: getfield      #8                  // Field traceSearchEnabled:Z
       4: ifeq          27
       7: new           #11                 // class zipkin2/storage/kafka/KafkaSpanStore$GetTracesCall
      10: dup
      11: aload_0
      12: getfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
      15: invokevirtual #12                 // Method zipkin2/storage/kafka/KafkaStorage.getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      18: aload_0
      19: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      22: aload_1
      23: invokespecial #13                 // Method zipkin2/storage/kafka/KafkaSpanStore$GetTracesCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/util/function/BiFunction;Lzipkin2/storage/QueryRequest;)V
      26: areturn
      27: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      30: areturn

  public zipkin2.Call<java.util.List<zipkin2.Span>> getTrace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field traceByIdQueryEnabled:Z
       4: ifeq          30
       7: new           #15                 // class zipkin2/storage/kafka/KafkaSpanStore$GetTraceCall
      10: dup
      11: aload_0
      12: getfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
      15: invokevirtual #12                 // Method zipkin2/storage/kafka/KafkaStorage.getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      18: aload_0
      19: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      22: aload_1
      23: invokestatic  #16                 // Method zipkin2/Span.normalizeTraceId:(Ljava/lang/String;)Ljava/lang/String;
      26: invokespecial #17                 // Method zipkin2/storage/kafka/KafkaSpanStore$GetTraceCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/util/function/BiFunction;Ljava/lang/String;)V
      29: areturn
      30: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      33: areturn

  public zipkin2.Call<java.util.List<java.util.List<zipkin2.Span>>> getTraces(java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field traceByIdQueryEnabled:Z
       4: ifeq          91
       7: new           #18                 // class java/util/StringJoiner
      10: dup
      11: ldc           #19                 // String ,
      13: invokespecial #20                 // Method java/util/StringJoiner."<init>":(Ljava/lang/CharSequence;)V
      16: astore_2
      17: aload_1
      18: invokeinterface #21,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          57
      33: aload_3
      34: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #24                 // class java/lang/String
      42: astore        4
      44: aload_2
      45: aload         4
      47: invokestatic  #16                 // Method zipkin2/Span.normalizeTraceId:(Ljava/lang/String;)Ljava/lang/String;
      50: invokevirtual #25                 // Method java/util/StringJoiner.add:(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
      53: pop
      54: goto          24
      57: aload_2
      58: invokevirtual #26                 // Method java/util/StringJoiner.length:()I
      61: ifne          68
      64: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      67: areturn
      68: new           #27                 // class zipkin2/storage/kafka/KafkaSpanStore$GetTraceManyCall
      71: dup
      72: aload_0
      73: getfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
      76: invokevirtual #12                 // Method zipkin2/storage/kafka/KafkaStorage.getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      79: aload_0
      80: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      83: aload_2
      84: invokevirtual #28                 // Method java/util/StringJoiner.toString:()Ljava/lang/String;
      87: invokespecial #29                 // Method zipkin2/storage/kafka/KafkaSpanStore$GetTraceManyCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/util/function/BiFunction;Ljava/lang/String;)V
      90: areturn
      91: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      94: areturn

  public zipkin2.Call<java.util.List<java.lang.String>> getServiceNames();
    Code:
       0: aload_0
       1: getfield      #8                  // Field traceSearchEnabled:Z
       4: ifeq          26
       7: new           #30                 // class zipkin2/storage/kafka/KafkaSpanStore$GetServiceNamesCall
      10: dup
      11: aload_0
      12: getfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
      15: invokevirtual #12                 // Method zipkin2/storage/kafka/KafkaStorage.getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      18: aload_0
      19: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      22: invokespecial #31                 // Method zipkin2/storage/kafka/KafkaSpanStore$GetServiceNamesCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/util/function/BiFunction;)V
      25: areturn
      26: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      29: areturn

  public zipkin2.Call<java.util.List<java.lang.String>> getSpanNames(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field traceSearchEnabled:Z
       4: ifeq          27
       7: new           #32                 // class zipkin2/storage/kafka/KafkaSpanStore$GetSpanNamesCall
      10: dup
      11: aload_0
      12: getfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
      15: invokevirtual #12                 // Method zipkin2/storage/kafka/KafkaStorage.getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      18: aload_1
      19: aload_0
      20: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      23: invokespecial #33                 // Method zipkin2/storage/kafka/KafkaSpanStore$GetSpanNamesCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/lang/String;Ljava/util/function/BiFunction;)V
      26: areturn
      27: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      30: areturn

  public zipkin2.Call<java.util.List<java.lang.String>> getRemoteServiceNames(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field traceSearchEnabled:Z
       4: ifeq          27
       7: new           #34                 // class zipkin2/storage/kafka/KafkaSpanStore$GetRemoteServiceNamesCall
      10: dup
      11: aload_0
      12: getfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
      15: invokevirtual #12                 // Method zipkin2/storage/kafka/KafkaStorage.getTraceStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      18: aload_1
      19: aload_0
      20: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      23: invokespecial #35                 // Method zipkin2/storage/kafka/KafkaSpanStore$GetRemoteServiceNamesCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/lang/String;Ljava/util/function/BiFunction;)V
      26: areturn
      27: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      30: areturn

  public zipkin2.Call<java.util.List<zipkin2.DependencyLink>> getDependencies(long, long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field dependencyQueryEnabled:Z
       4: ifeq          28
       7: new           #36                 // class zipkin2/storage/kafka/KafkaSpanStore$GetDependenciesCall
      10: dup
      11: aload_0
      12: getfield      #2                  // Field storage:Lzipkin2/storage/kafka/KafkaStorage;
      15: invokevirtual #37                 // Method zipkin2/storage/kafka/KafkaStorage.getDependencyStorageStream:()Lorg/apache/kafka/streams/KafkaStreams;
      18: aload_0
      19: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      22: lload_1
      23: lload_3
      24: invokespecial #38                 // Method zipkin2/storage/kafka/KafkaSpanStore$GetDependenciesCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/util/function/BiFunction;JJ)V
      27: areturn
      28: invokestatic  #14                 // Method zipkin2/Call.emptyList:()Lzipkin2/Call;
      31: areturn

  static {};
    Code:
       0: new           #39                 // class com/fasterxml/jackson/databind/ObjectMapper
       3: dup
       4: invokespecial #40                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
       7: putstatic     #41                 // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
      10: return
}
