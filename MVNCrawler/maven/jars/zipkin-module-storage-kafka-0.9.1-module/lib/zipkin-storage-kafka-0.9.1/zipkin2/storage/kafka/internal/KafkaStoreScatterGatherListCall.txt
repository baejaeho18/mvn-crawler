Compiled from "KafkaStoreScatterGatherListCall.java"
public abstract class zipkin2.storage.kafka.internal.KafkaStoreScatterGatherListCall<V> extends zipkin2.storage.kafka.internal.KafkaStoreListCall<V> {
  final long limit;

  protected zipkin2.storage.kafka.internal.KafkaStoreScatterGatherListCall(org.apache.kafka.streams.KafkaStreams, java.lang.String, java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String>, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method zipkin2/storage/kafka/internal/KafkaStoreListCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/lang/String;)V
       9: aload_0
      10: lload         5
      12: putfield      #2                  // Field limit:J
      15: return

  protected java.util.concurrent.CompletableFuture<java.util.List<V>> listFuture();
    Code:
       0: aload_0
       1: getfield      #3                  // Field kafkaStreams:Lorg/apache/kafka/streams/KafkaStreams;
       4: aload_0
       5: getfield      #4                  // Field storeName:Ljava/lang/String;
       8: invokevirtual #5                  // Method org/apache/kafka/streams/KafkaStreams.allMetadataForStore:(Ljava/lang/String;)Ljava/util/Collection;
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      16: invokedynamic #7,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      21: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      26: aload_0
      27: invokedynamic #9,  0              // InvokeDynamic #1:apply:(Lzipkin2/storage/kafka/internal/KafkaStoreScatterGatherListCall;)Ljava/util/function/Function;
      32: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      37: aload_0
      38: invokedynamic #10,  0             // InvokeDynamic #2:apply:(Lzipkin2/storage/kafka/internal/KafkaStoreScatterGatherListCall;)Ljava/util/function/Function;
      43: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: invokestatic  #11                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      51: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      56: checkcast     #13                 // class java/util/List
      59: astore_1
      60: aload_1
      61: iconst_0
      62: anewarray     #14                 // class java/util/concurrent/CompletableFuture
      65: invokeinterface #15,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      70: checkcast     #16                 // class "[Ljava/util/concurrent/CompletableFuture;"
      73: invokestatic  #17                 // Method java/util/concurrent/CompletableFuture.allOf:([Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;
      76: aload_0
      77: aload_1
      78: invokedynamic #18,  0             // InvokeDynamic #3:apply:(Lzipkin2/storage/kafka/internal/KafkaStoreScatterGatherListCall;Ljava/util/List;)Ljava/util/function/Function;
      83: invokevirtual #19                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      86: areturn

  private java.util.List lambda$listFuture$2(java.util.List, java.lang.Void);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #21,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      11: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: aload_0
      17: invokedynamic #22,  0             // InvokeDynamic #5:apply:(Lzipkin2/storage/kafka/internal/KafkaStoreScatterGatherListCall;)Ljava/util/function/Function;
      22: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      27: aload_0
      28: invokedynamic #23,  0             // InvokeDynamic #6:apply:(Lzipkin2/storage/kafka/internal/KafkaStoreScatterGatherListCall;)Ljava/util/function/Function;
      33: invokeinterface #8,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      38: invokedynamic #24,  0             // InvokeDynamic #7:apply:()Ljava/util/function/Function;
      43: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      48: invokeinterface #26,  1           // InterfaceMethod java/util/stream/Stream.distinct:()Ljava/util/stream/Stream;
      53: aload_0
      54: getfield      #2                  // Field limit:J
      57: invokeinterface #27,  3           // InterfaceMethod java/util/stream/Stream.limit:(J)Ljava/util/stream/Stream;
      62: invokestatic  #11                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      65: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      70: checkcast     #13                 // class java/util/List
      73: areturn

  private static com.linecorp.armeria.common.AggregatedHttpResponse lambda$listFuture$1(java.util.concurrent.CompletableFuture);
    Code:
       0: aload_0
       1: getstatic     #28                 // Field com/linecorp/armeria/common/HttpStatus.INTERNAL_SERVER_ERROR:Lcom/linecorp/armeria/common/HttpStatus;
       4: invokestatic  #29                 // InterfaceMethod com/linecorp/armeria/common/AggregatedHttpResponse.of:(Lcom/linecorp/armeria/common/HttpStatus;)Lcom/linecorp/armeria/common/AggregatedHttpResponse;
       7: invokevirtual #30                 // Method java/util/concurrent/CompletableFuture.getNow:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #31                 // class com/linecorp/armeria/common/AggregatedHttpResponse
      13: areturn

  private java.util.concurrent.CompletableFuture lambda$listFuture$0(com.linecorp.armeria.client.WebClient);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #32                 // Field httpPath:Ljava/lang/String;
       5: invokeinterface #33,  2           // InterfaceMethod com/linecorp/armeria/client/WebClient.get:(Ljava/lang/String;)Lcom/linecorp/armeria/common/HttpResponse;
      10: invokeinterface #34,  1           // InterfaceMethod com/linecorp/armeria/common/HttpResponse.aggregate:()Ljava/util/concurrent/CompletableFuture;
      15: areturn
}
