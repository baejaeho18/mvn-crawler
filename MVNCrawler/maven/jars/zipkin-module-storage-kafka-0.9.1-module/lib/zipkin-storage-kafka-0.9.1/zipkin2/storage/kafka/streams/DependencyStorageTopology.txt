Compiled from "DependencyStorageTopology.java"
public final class zipkin2.storage.kafka.streams.DependencyStorageTopology implements java.util.function.Supplier<org.apache.kafka.streams.Topology> {
  public static final java.lang.String DEPENDENCIES_STORE_NAME;

  final java.lang.String dependencyTopic;

  final java.time.Duration dependencyTtl;

  final java.time.Duration dependencyWindowSize;

  final boolean dependencyQueryEnabled;

  final zipkin2.storage.kafka.streams.serdes.DependencyLinkSerde dependencyLinkSerde;

  public zipkin2.storage.kafka.streams.DependencyStorageTopology(java.lang.String, java.time.Duration, java.time.Duration, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dependencyTopic:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field dependencyTtl:Ljava/time/Duration;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field dependencyWindowSize:Ljava/time/Duration;
      19: aload_0
      20: iload         4
      22: putfield      #5                  // Field dependencyQueryEnabled:Z
      25: aload_0
      26: new           #6                  // class zipkin2/storage/kafka/streams/serdes/DependencyLinkSerde
      29: dup
      30: invokespecial #7                  // Method zipkin2/storage/kafka/streams/serdes/DependencyLinkSerde."<init>":()V
      33: putfield      #8                  // Field dependencyLinkSerde:Lzipkin2/storage/kafka/streams/serdes/DependencyLinkSerde;
      36: return

  public org.apache.kafka.streams.Topology get();
    Code:
       0: new           #9                  // class org/apache/kafka/streams/StreamsBuilder
       3: dup
       4: invokespecial #10                 // Method org/apache/kafka/streams/StreamsBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field dependencyQueryEnabled:Z
      12: ifeq          87
      15: aload_1
      16: ldc           #12                 // String zipkin-dependencies
      18: aload_0
      19: getfield      #3                  // Field dependencyTtl:Ljava/time/Duration;
      22: aload_0
      23: getfield      #4                  // Field dependencyWindowSize:Ljava/time/Duration;
      26: iconst_0
      27: invokestatic  #13                 // Method org/apache/kafka/streams/state/Stores.persistentWindowStore:(Ljava/lang/String;Ljava/time/Duration;Ljava/time/Duration;Z)Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      30: invokestatic  #14                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
      33: aload_0
      34: getfield      #8                  // Field dependencyLinkSerde:Lzipkin2/storage/kafka/streams/serdes/DependencyLinkSerde;
      37: invokestatic  #15                 // Method org/apache/kafka/streams/state/Stores.windowStoreBuilder:(Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
      40: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.withLoggingDisabled:()Lorg/apache/kafka/streams/state/StoreBuilder;
      45: invokevirtual #17                 // Method org/apache/kafka/streams/StreamsBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
      48: pop
      49: aload_1
      50: aload_0
      51: getfield      #2                  // Field dependencyTopic:Ljava/lang/String;
      54: invokestatic  #14                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
      57: aload_0
      58: getfield      #8                  // Field dependencyLinkSerde:Lzipkin2/storage/kafka/streams/serdes/DependencyLinkSerde;
      61: invokestatic  #18                 // Method org/apache/kafka/streams/kstream/Consumed.with:(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Consumed;
      64: invokevirtual #19                 // Method org/apache/kafka/streams/StreamsBuilder.stream:(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
      67: aload_0
      68: invokedynamic #20,  0             // InvokeDynamic #0:get:(Lzipkin2/storage/kafka/streams/DependencyStorageTopology;)Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      73: iconst_1
      74: anewarray     #21                 // class java/lang/String
      77: dup
      78: iconst_0
      79: ldc           #12                 // String zipkin-dependencies
      81: aastore
      82: invokeinterface #22,  3           // InterfaceMethod org/apache/kafka/streams/kstream/KStream.process:(Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
      87: aload_1
      88: invokevirtual #23                 // Method org/apache/kafka/streams/StreamsBuilder.build:()Lorg/apache/kafka/streams/Topology;
      91: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method get:()Lorg/apache/kafka/streams/Topology;
       4: areturn

  private org.apache.kafka.streams.processor.Processor lambda$get$0();
    Code:
       0: new           #25                 // class zipkin2/storage/kafka/streams/DependencyStorageTopology$1
       3: dup
       4: aload_0
       5: invokespecial #26                 // Method zipkin2/storage/kafka/streams/DependencyStorageTopology$1."<init>":(Lzipkin2/storage/kafka/streams/DependencyStorageTopology;)V
       8: areturn
}
