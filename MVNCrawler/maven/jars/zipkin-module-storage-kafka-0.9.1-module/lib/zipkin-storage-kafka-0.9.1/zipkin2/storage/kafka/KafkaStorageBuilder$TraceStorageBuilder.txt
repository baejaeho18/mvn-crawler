Compiled from "KafkaStorageBuilder.java"
public class zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder {
  boolean enabled;

  boolean traceByIdQueryEnabled;

  boolean traceSearchEnabled;

  java.lang.String spansTopic;

  java.time.Duration traceTtl;

  java.time.Duration traceTtlCheckInterval;

  java.util.Properties streamConfig;

  long minTracesStored;

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field enabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field traceByIdQueryEnabled:Z
      14: aload_0
      15: iconst_1
      16: putfield      #4                  // Field traceSearchEnabled:Z
      19: aload_0
      20: ldc           #5                  // String zipkin-spans
      22: putfield      #6                  // Field spansTopic:Ljava/lang/String;
      25: aload_0
      26: ldc2_w        #7                  // long 3l
      29: invokestatic  #9                  // Method java/time/Duration.ofDays:(J)Ljava/time/Duration;
      32: putfield      #10                 // Field traceTtl:Ljava/time/Duration;
      35: aload_0
      36: lconst_1
      37: invokestatic  #11                 // Method java/time/Duration.ofHours:(J)Ljava/time/Duration;
      40: putfield      #12                 // Field traceTtlCheckInterval:Ljava/time/Duration;
      43: aload_0
      44: new           #13                 // class java/util/Properties
      47: dup
      48: invokespecial #14                 // Method java/util/Properties."<init>":()V
      51: putfield      #15                 // Field streamConfig:Ljava/util/Properties;
      54: aload_0
      55: ldc2_w        #16                 // long 10000l
      58: putfield      #18                 // Field minTracesStored:J
      61: aload_0
      62: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
      65: ldc           #20                 // String default.key.serde
      67: ldc           #21                 // class org/apache/kafka/common/serialization/Serdes$StringSerde
      69: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
      77: ldc           #23                 // String default.value.serde
      79: ldc           #24                 // class org/apache/kafka/common/serialization/Serdes$ByteArraySerde
      81: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: aload_0
      86: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
      89: ldc           #25                 // String application.id
      91: ldc           #26                 // String zipkin-trace-storage
      93: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: aload_0
      98: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
     101: ldc           #27                 // String state.dir
     103: ldc           #28                 // String /tmp/zipkin-storage-kafka/trace-storage
     105: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: pop
     109: aload_0
     110: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
     113: ldc           #29                 // String topology.optimization
     115: ldc           #30                 // String all
     117: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     120: pop
     121: aload_0
     122: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
     125: ldc           #31                 // String application.server
     127: ldc           #32                 // String localhost:9411
     129: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: return

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder enabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field enabled:Z
       5: aload_0
       6: iload_1
       7: putfield      #3                  // Field traceByIdQueryEnabled:Z
      10: aload_0
      11: iload_1
      12: putfield      #4                  // Field traceSearchEnabled:Z
      15: aload_0
      16: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder searchEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field traceSearchEnabled:Z
       5: aload_0
       6: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder spansTopic(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #33                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #34                 // String spansTopic == null
      10: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #6                  // Field spansTopic:Ljava/lang/String;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder ttlCheckInterval(java.time.Duration);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #33                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #36                 // String ttlCheckInterval == null
      10: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #12                 // Field traceTtlCheckInterval:Ljava/time/Duration;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder ttl(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #10                 // Field traceTtl:Ljava/time/Duration;
       4: ifnonnull     17
       7: new           #33                 // class java/lang/NullPointerException
      10: dup
      11: ldc           #37                 // String ttl == null
      13: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #10                 // Field traceTtl:Ljava/time/Duration;
      22: aload_0
      23: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder bootstrapServers(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #33                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #38                 // String bootstrapServers == null
      10: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
      18: ldc           #39                 // String bootstrap.servers
      20: aload_1
      21: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder storageStateDir(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #33                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #40                 // String parentDir == null
      10: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
      18: ldc           #27                 // String state.dir
      20: new           #41                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_1
      28: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #44                 // String /traces
      33: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_0
      44: areturn

  public final zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder overrides(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #33                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #46                 // String overrides == null
      10: invokespecial #35                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
      18: aload_1
      19: invokevirtual #47                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      22: aload_0
      23: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder hostInfo(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field streamConfig:Ljava/util/Properties;
       4: ldc           #31                 // String application.server
       6: new           #41                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      13: aload_1
      14: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #48                 // String :
      19: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_2
      23: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #22                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: areturn
}
