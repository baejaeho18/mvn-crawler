Compiled from "KafkaStoreListCall.java"
public abstract class zipkin2.storage.kafka.internal.KafkaStoreListCall<V> extends zipkin2.Call$Base<java.util.List<V>> {
  static final org.slf4j.Logger LOG;

  static final com.fasterxml.jackson.databind.ObjectMapper MAPPER;

  final org.apache.kafka.streams.KafkaStreams kafkaStreams;

  final java.lang.String storeName;

  final java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String> httpBaseUrl;

  final java.lang.String httpPath;

  protected zipkin2.storage.kafka.internal.KafkaStoreListCall(org.apache.kafka.streams.KafkaStreams, java.lang.String, java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method zipkin2/Call$Base."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field kafkaStreams:Lorg/apache/kafka/streams/KafkaStreams;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field storeName:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field httpPath:Ljava/lang/String;
      25: return

  protected java.util.List<V> parseList(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: invokestatic  #6                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: areturn
       8: getstatic     #7                  // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
      11: aload_1
      12: invokevirtual #8                  // Method com/fasterxml/jackson/databind/ObjectMapper.readTree:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
      15: checkcast     #9                  // class com/fasterxml/jackson/databind/node/ArrayNode
      18: astore_2
      19: new           #10                 // class java/util/ArrayList
      22: dup
      23: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      26: astore_3
      27: aload_2
      28: invokevirtual #12                 // Method com/fasterxml/jackson/databind/node/ArrayNode.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          75
      43: aload         4
      45: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #15                 // class com/fasterxml/jackson/databind/JsonNode
      53: astore        5
      55: aload_0
      56: aload         5
      58: invokevirtual #16                 // Method parseItem:(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/lang/Object;
      61: astore        6
      63: aload_3
      64: aload         6
      66: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          33
      75: aload_3
      76: areturn
      77: astore_2
      78: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      81: ldc           #20                 // String Error reading json response
      83: aload_2
      84: invokeinterface #21,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      89: invokestatic  #6                  // Method java/util/Collections.emptyList:()Ljava/util/List;
      92: areturn
    Exception table:
       from    to  target type
           0     7    77   Class java/io/IOException
           8    76    77   Class java/io/IOException

  protected java.lang.String content(com.linecorp.armeria.common.AggregatedHttpResponse);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod com/linecorp/armeria/common/AggregatedHttpResponse.status:()Lcom/linecorp/armeria/common/HttpStatus;
       6: getstatic     #23                 // Field com/linecorp/armeria/common/HttpStatus.OK:Lcom/linecorp/armeria/common/HttpStatus;
       9: invokevirtual #24                 // Method com/linecorp/armeria/common/HttpStatus.equals:(Ljava/lang/Object;)Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: invokeinterface #25,  1           // InterfaceMethod com/linecorp/armeria/common/AggregatedHttpResponse.contentUtf8:()Ljava/lang/String;
      23: areturn

  protected com.linecorp.armeria.client.WebClient httpClient(org.apache.kafka.streams.state.HostInfo);
    Code:
       0: aload_0
       1: getfield      #4                  // Field httpBaseUrl:Ljava/util/function/BiFunction;
       4: aload_1
       5: invokevirtual #26                 // Method org/apache/kafka/streams/state/HostInfo.host:()Ljava/lang/String;
       8: aload_1
       9: invokevirtual #27                 // Method org/apache/kafka/streams/state/HostInfo.port:()I
      12: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokeinterface #29,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #30                 // class java/lang/String
      23: invokestatic  #31                 // InterfaceMethod com/linecorp/armeria/client/WebClient.of:(Ljava/lang/String;)Lcom/linecorp/armeria/client/WebClient;
      26: areturn

  protected java.util.List<V> doExecute();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method listFuture:()Ljava/util/concurrent/CompletableFuture;
       4: invokevirtual #33                 // Method java/util/concurrent/CompletableFuture.join:()Ljava/lang/Object;
       7: checkcast     #34                 // class java/util/List
      10: areturn

  protected void doEnqueue(zipkin2.Callback<java.util.List<V>>);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method listFuture:()Ljava/util/concurrent/CompletableFuture;
       4: aload_1
       5: invokedynamic #35,  0             // InvokeDynamic #0:apply:(Lzipkin2/Callback;)Ljava/util/function/BiFunction;
      10: invokevirtual #36                 // Method java/util/concurrent/CompletableFuture.handle:(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;
      13: pop
      14: return

  protected abstract java.util.concurrent.CompletableFuture<java.util.List<V>> listFuture();

  protected abstract V parseItem(com.fasterxml.jackson.databind.JsonNode) throws com.fasterxml.jackson.core.JsonProcessingException;

  protected java.lang.Object doExecute() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method doExecute:()Ljava/util/List;
       4: areturn

  private static java.lang.Object lambda$doEnqueue$0(zipkin2.Callback, java.util.List, java.lang.Throwable);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_0
       5: aload_2
       6: invokeinterface #38,  2           // InterfaceMethod zipkin2/Callback.onError:(Ljava/lang/Throwable;)V
      11: goto          36
      14: aload_0
      15: aload_1
      16: invokeinterface #39,  2           // InterfaceMethod zipkin2/Callback.onSuccess:(Ljava/lang/Object;)V
      21: goto          36
      24: astore_3
      25: aload_3
      26: invokestatic  #41                 // Method propagateIfFatal:(Ljava/lang/Throwable;)V
      29: aload_0
      30: aload_3
      31: invokeinterface #38,  2           // InterfaceMethod zipkin2/Callback.onError:(Ljava/lang/Throwable;)V
      36: aconst_null
      37: areturn
    Exception table:
       from    to  target type
          14    21    24   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #42                 // class zipkin2/storage/kafka/internal/KafkaStoreListCall
       2: invokestatic  #43                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       8: new           #44                 // class com/fasterxml/jackson/databind/ObjectMapper
      11: dup
      12: invokespecial #45                 // Method com/fasterxml/jackson/databind/ObjectMapper."<init>":()V
      15: putstatic     #7                  // Field MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
      18: return
}
