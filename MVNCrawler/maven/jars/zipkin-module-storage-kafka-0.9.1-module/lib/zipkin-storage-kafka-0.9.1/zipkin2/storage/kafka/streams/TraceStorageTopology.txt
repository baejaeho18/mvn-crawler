Compiled from "TraceStorageTopology.java"
public class zipkin2.storage.kafka.streams.TraceStorageTopology implements java.util.function.Supplier<org.apache.kafka.streams.Topology> {
  public static final java.lang.String TRACES_STORE_NAME;

  public static final java.lang.String SPAN_IDS_BY_TS_STORE_NAME;

  public static final java.lang.String SERVICE_NAMES_STORE_NAME;

  public static final java.lang.String SPAN_NAMES_STORE_NAME;

  public static final java.lang.String REMOTE_SERVICE_NAMES_STORE_NAME;

  public static final java.lang.String AUTOCOMPLETE_TAGS_STORE_NAME;

  static final org.slf4j.Logger LOG;

  final java.lang.String spansTopic;

  final java.util.List<java.lang.String> autoCompleteKeys;

  final java.time.Duration traceTtl;

  final java.time.Duration traceTtlCheckInterval;

  final long minTracesStored;

  final boolean traceSearchEnabled;

  final boolean traceByIdQueryEnabled;

  final zipkin2.storage.kafka.streams.serdes.SpansSerde spansSerde;

  final zipkin2.storage.kafka.streams.serdes.SpanIdsSerde spanIdsSerde;

  final zipkin2.storage.kafka.streams.serdes.NamesSerde namesSerde;

  final io.micrometer.core.instrument.Counter brokenTracesTotal;

  public zipkin2.storage.kafka.streams.TraceStorageTopology(java.lang.String, java.util.List<java.lang.String>, java.time.Duration, java.time.Duration, long, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field spansTopic:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field autoCompleteKeys:Ljava/util/List;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field traceTtl:Ljava/time/Duration;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field traceTtlCheckInterval:Ljava/time/Duration;
      25: aload_0
      26: lload         5
      28: putfield      #6                  // Field minTracesStored:J
      31: aload_0
      32: iload         7
      34: putfield      #7                  // Field traceByIdQueryEnabled:Z
      37: aload_0
      38: iload         8
      40: putfield      #8                  // Field traceSearchEnabled:Z
      43: aload_0
      44: new           #9                  // class zipkin2/storage/kafka/streams/serdes/SpansSerde
      47: dup
      48: invokespecial #10                 // Method zipkin2/storage/kafka/streams/serdes/SpansSerde."<init>":()V
      51: putfield      #11                 // Field spansSerde:Lzipkin2/storage/kafka/streams/serdes/SpansSerde;
      54: aload_0
      55: new           #12                 // class zipkin2/storage/kafka/streams/serdes/SpanIdsSerde
      58: dup
      59: invokespecial #13                 // Method zipkin2/storage/kafka/streams/serdes/SpanIdsSerde."<init>":()V
      62: putfield      #14                 // Field spanIdsSerde:Lzipkin2/storage/kafka/streams/serdes/SpanIdsSerde;
      65: aload_0
      66: new           #15                 // class zipkin2/storage/kafka/streams/serdes/NamesSerde
      69: dup
      70: invokespecial #16                 // Method zipkin2/storage/kafka/streams/serdes/NamesSerde."<init>":()V
      73: putfield      #17                 // Field namesSerde:Lzipkin2/storage/kafka/streams/serdes/NamesSerde;
      76: aload_0
      77: ldc           #18                 // String zipkin.storage.kafka.traces.broken
      79: iconst_0
      80: anewarray     #19                 // class java/lang/String
      83: invokestatic  #20                 // Method io/micrometer/core/instrument/Metrics.counter:(Ljava/lang/String;[Ljava/lang/String;)Lio/micrometer/core/instrument/Counter;
      86: putfield      #21                 // Field brokenTracesTotal:Lio/micrometer/core/instrument/Counter;
      89: return

  public org.apache.kafka.streams.Topology get();
    Code:
       0: new           #22                 // class org/apache/kafka/streams/StreamsBuilder
       3: dup
       4: invokespecial #23                 // Method org/apache/kafka/streams/StreamsBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #8                  // Field traceSearchEnabled:Z
      12: ifne          22
      15: aload_0
      16: getfield      #7                  // Field traceByIdQueryEnabled:Z
      19: ifeq          231
      22: aload_1
      23: ldc           #25                 // String zipkin-traces
      25: invokestatic  #26                 // Method org/apache/kafka/streams/state/Stores.persistentKeyValueStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
      28: invokestatic  #27                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
      31: aload_0
      32: getfield      #11                 // Field spansSerde:Lzipkin2/storage/kafka/streams/serdes/SpansSerde;
      35: invokestatic  #28                 // Method org/apache/kafka/streams/state/Stores.keyValueStoreBuilder:(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
      38: invokeinterface #29,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.withLoggingDisabled:()Lorg/apache/kafka/streams/state/StoreBuilder;
      43: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
      46: ldc           #31                 // String zipkin-traces-by-timestamp
      48: invokestatic  #26                 // Method org/apache/kafka/streams/state/Stores.persistentKeyValueStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
      51: invokestatic  #32                 // Method org/apache/kafka/common/serialization/Serdes.Long:()Lorg/apache/kafka/common/serialization/Serde;
      54: aload_0
      55: getfield      #14                 // Field spanIdsSerde:Lzipkin2/storage/kafka/streams/serdes/SpanIdsSerde;
      58: invokestatic  #28                 // Method org/apache/kafka/streams/state/Stores.keyValueStoreBuilder:(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
      61: invokeinterface #29,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.withLoggingDisabled:()Lorg/apache/kafka/streams/state/StoreBuilder;
      66: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
      69: pop
      70: aload_1
      71: aload_0
      72: getfield      #2                  // Field spansTopic:Ljava/lang/String;
      75: invokestatic  #27                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
      78: aload_0
      79: getfield      #11                 // Field spansSerde:Lzipkin2/storage/kafka/streams/serdes/SpansSerde;
      82: invokestatic  #33                 // Method org/apache/kafka/streams/kstream/Consumed.with:(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Consumed;
      85: invokevirtual #34                 // Method org/apache/kafka/streams/StreamsBuilder.stream:(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Consumed;)Lorg/apache/kafka/streams/kstream/KStream;
      88: astore_2
      89: aload_2
      90: aload_0
      91: invokedynamic #35,  0             // InvokeDynamic #0:get:(Lzipkin2/storage/kafka/streams/TraceStorageTopology;)Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      96: iconst_2
      97: anewarray     #19                 // class java/lang/String
     100: dup
     101: iconst_0
     102: ldc           #25                 // String zipkin-traces
     104: aastore
     105: dup
     106: iconst_1
     107: ldc           #31                 // String zipkin-traces-by-timestamp
     109: aastore
     110: invokeinterface #36,  3           // InterfaceMethod org/apache/kafka/streams/kstream/KStream.process:(Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
     115: aload_0
     116: getfield      #8                  // Field traceSearchEnabled:Z
     119: ifeq          231
     122: aload_1
     123: ldc           #37                 // String zipkin-service-names
     125: invokestatic  #38                 // Method org/apache/kafka/streams/state/Stores.inMemoryKeyValueStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
     128: invokestatic  #27                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
     131: invokestatic  #27                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
     134: invokestatic  #28                 // Method org/apache/kafka/streams/state/Stores.keyValueStoreBuilder:(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
     137: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
     140: ldc           #39                 // String zipkin-span-names
     142: invokestatic  #38                 // Method org/apache/kafka/streams/state/Stores.inMemoryKeyValueStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
     145: invokestatic  #27                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
     148: aload_0
     149: getfield      #17                 // Field namesSerde:Lzipkin2/storage/kafka/streams/serdes/NamesSerde;
     152: invokestatic  #28                 // Method org/apache/kafka/streams/state/Stores.keyValueStoreBuilder:(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
     155: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
     158: ldc           #40                 // String zipkin-remote-service-names
     160: invokestatic  #38                 // Method org/apache/kafka/streams/state/Stores.inMemoryKeyValueStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
     163: invokestatic  #27                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
     166: aload_0
     167: getfield      #17                 // Field namesSerde:Lzipkin2/storage/kafka/streams/serdes/NamesSerde;
     170: invokestatic  #28                 // Method org/apache/kafka/streams/state/Stores.keyValueStoreBuilder:(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
     173: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
     176: ldc           #41                 // String zipkin-autocomplete-tags
     178: invokestatic  #26                 // Method org/apache/kafka/streams/state/Stores.persistentKeyValueStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
     181: invokestatic  #27                 // Method org/apache/kafka/common/serialization/Serdes.String:()Lorg/apache/kafka/common/serialization/Serde;
     184: aload_0
     185: getfield      #17                 // Field namesSerde:Lzipkin2/storage/kafka/streams/serdes/NamesSerde;
     188: invokestatic  #28                 // Method org/apache/kafka/streams/state/Stores.keyValueStoreBuilder:(Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/state/StoreBuilder;
     191: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;)Lorg/apache/kafka/streams/StreamsBuilder;
     194: pop
     195: aload_2
     196: aload_0
     197: invokedynamic #42,  0             // InvokeDynamic #1:get:(Lzipkin2/storage/kafka/streams/TraceStorageTopology;)Lorg/apache/kafka/streams/processor/ProcessorSupplier;
     202: iconst_4
     203: anewarray     #19                 // class java/lang/String
     206: dup
     207: iconst_0
     208: ldc           #37                 // String zipkin-service-names
     210: aastore
     211: dup
     212: iconst_1
     213: ldc           #39                 // String zipkin-span-names
     215: aastore
     216: dup
     217: iconst_2
     218: ldc           #40                 // String zipkin-remote-service-names
     220: aastore
     221: dup
     222: iconst_3
     223: ldc           #41                 // String zipkin-autocomplete-tags
     225: aastore
     226: invokeinterface #36,  3           // InterfaceMethod org/apache/kafka/streams/kstream/KStream.process:(Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
     231: aload_1
     232: invokevirtual #43                 // Method org/apache/kafka/streams/StreamsBuilder.build:()Lorg/apache/kafka/streams/Topology;
     235: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method get:()Lorg/apache/kafka/streams/Topology;
       4: areturn

  private org.apache.kafka.streams.processor.Processor lambda$get$1();
    Code:
       0: new           #45                 // class zipkin2/storage/kafka/streams/TraceStorageTopology$2
       3: dup
       4: aload_0
       5: invokespecial #46                 // Method zipkin2/storage/kafka/streams/TraceStorageTopology$2."<init>":(Lzipkin2/storage/kafka/streams/TraceStorageTopology;)V
       8: areturn

  private org.apache.kafka.streams.processor.Processor lambda$get$0();
    Code:
       0: new           #47                 // class zipkin2/storage/kafka/streams/TraceStorageTopology$1
       3: dup
       4: aload_0
       5: invokespecial #48                 // Method zipkin2/storage/kafka/streams/TraceStorageTopology$1."<init>":(Lzipkin2/storage/kafka/streams/TraceStorageTopology;)V
       8: areturn

  static {};
    Code:
       0: ldc           #24                 // class zipkin2/storage/kafka/streams/TraceStorageTopology
       2: invokestatic  #49                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #50                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
