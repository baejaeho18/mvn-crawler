Compiled from "KafkaStorageBuilder.java"
public class zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder {
  boolean enabled;

  java.util.Properties producerConfig;

  java.lang.String spansTopic;

  public zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field enabled:Z
       9: aload_0
      10: new           #3                  // class java/util/Properties
      13: dup
      14: invokespecial #4                  // Method java/util/Properties."<init>":()V
      17: putfield      #5                  // Field producerConfig:Ljava/util/Properties;
      20: aload_0
      21: ldc           #6                  // String zipkin-spans
      23: putfield      #7                  // Field spansTopic:Ljava/lang/String;
      26: aload_0
      27: getfield      #5                  // Field producerConfig:Ljava/util/Properties;
      30: ldc           #9                  // String key.serializer
      32: ldc           #10                 // class org/apache/kafka/common/serialization/StringSerializer
      34: invokevirtual #11                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: getfield      #5                  // Field producerConfig:Ljava/util/Properties;
      42: ldc           #12                 // String value.serializer
      44: ldc           #13                 // class org/apache/kafka/common/serialization/ByteArraySerializer
      46: invokevirtual #11                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #5                  // Field producerConfig:Ljava/util/Properties;
      54: ldc           #14                 // String enable.idempotence
      56: iconst_1
      57: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      60: invokevirtual #11                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: getfield      #5                  // Field producerConfig:Ljava/util/Properties;
      68: ldc           #16                 // String batch.size
      70: ldc           #17                 // int 500000
      72: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: invokevirtual #11                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      78: pop
      79: aload_0
      80: getfield      #5                  // Field producerConfig:Ljava/util/Properties;
      83: ldc           #19                 // String linger.ms
      85: iconst_5
      86: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: invokevirtual #11                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: return

  public zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder enabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field enabled:Z
       5: aload_0
       6: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder bootstrapServers(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #20                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #21                 // String bootstrapServers == null
      10: invokespecial #22                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field producerConfig:Ljava/util/Properties;
      18: ldc           #23                 // String bootstrap.servers
      20: aload_1
      21: invokevirtual #11                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder spansTopic(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #20                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #24                 // String spansTopic == null
      10: invokespecial #22                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #7                  // Field spansTopic:Ljava/lang/String;
      19: aload_0
      20: areturn

  public final zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder overrides(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #20                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #25                 // String overrides == null
      10: invokespecial #22                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field producerConfig:Ljava/util/Properties;
      18: aload_1
      19: invokevirtual #26                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      22: aload_0
      23: areturn
}
