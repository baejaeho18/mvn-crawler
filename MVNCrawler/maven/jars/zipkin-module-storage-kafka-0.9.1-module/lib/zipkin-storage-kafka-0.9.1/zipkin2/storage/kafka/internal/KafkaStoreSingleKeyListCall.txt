Compiled from "KafkaStoreSingleKeyListCall.java"
public abstract class zipkin2.storage.kafka.internal.KafkaStoreSingleKeyListCall<V> extends zipkin2.storage.kafka.internal.KafkaStoreListCall<V> {
  static final org.apache.kafka.common.serialization.StringSerializer STRING_SERIALIZER;

  final java.lang.String key;

  protected zipkin2.storage.kafka.internal.KafkaStoreSingleKeyListCall(org.apache.kafka.streams.KafkaStreams, java.lang.String, java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String>, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #1                  // Method zipkin2/storage/kafka/internal/KafkaStoreListCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/lang/String;)V
       9: aload_0
      10: aload         5
      12: putfield      #2                  // Field key:Ljava/lang/String;
      15: return

  protected java.util.concurrent.CompletableFuture<java.util.List<V>> listFuture();
    Code:
       0: aload_0
       1: getfield      #3                  // Field kafkaStreams:Lorg/apache/kafka/streams/KafkaStreams;
       4: aload_0
       5: getfield      #4                  // Field storeName:Ljava/lang/String;
       8: aload_0
       9: getfield      #2                  // Field key:Ljava/lang/String;
      12: getstatic     #5                  // Field STRING_SERIALIZER:Lorg/apache/kafka/common/serialization/StringSerializer;
      15: invokevirtual #6                  // Method org/apache/kafka/streams/KafkaStreams.metadataForKey:(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/kafka/common/serialization/Serializer;)Lorg/apache/kafka/streams/state/StreamsMetadata;
      18: astore_1
      19: aload_0
      20: aload_1
      21: invokevirtual #7                  // Method org/apache/kafka/streams/state/StreamsMetadata.hostInfo:()Lorg/apache/kafka/streams/state/HostInfo;
      24: invokevirtual #8                  // Method httpClient:(Lorg/apache/kafka/streams/state/HostInfo;)Lcom/linecorp/armeria/client/WebClient;
      27: astore_2
      28: aload_2
      29: aload_0
      30: getfield      #9                  // Field httpPath:Ljava/lang/String;
      33: invokeinterface #10,  2           // InterfaceMethod com/linecorp/armeria/client/WebClient.get:(Ljava/lang/String;)Lcom/linecorp/armeria/common/HttpResponse;
      38: invokeinterface #11,  1           // InterfaceMethod com/linecorp/armeria/common/HttpResponse.aggregate:()Ljava/util/concurrent/CompletableFuture;
      43: aload_0
      44: invokedynamic #12,  0             // InvokeDynamic #0:apply:(Lzipkin2/storage/kafka/internal/KafkaStoreSingleKeyListCall;)Ljava/util/function/Function;
      49: invokevirtual #13                 // Method java/util/concurrent/CompletableFuture.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;
      52: areturn

  private java.util.List lambda$listFuture$0(com.linecorp.armeria.common.AggregatedHttpResponse);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method content:(Lcom/linecorp/armeria/common/AggregatedHttpResponse;)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #15                 // Method parseList:(Ljava/lang/String;)Ljava/util/List;
      11: areturn

  static {};
    Code:
       0: new           #16                 // class org/apache/kafka/common/serialization/StringSerializer
       3: dup
       4: invokespecial #17                 // Method org/apache/kafka/common/serialization/StringSerializer."<init>":()V
       7: putstatic     #5                  // Field STRING_SERIALIZER:Lorg/apache/kafka/common/serialization/StringSerializer;
      10: return
}
