Compiled from "KafkaStreamsMetadata.java"
final class zipkin2.storage.kafka.KafkaStreamsMetadata$StreamsMetadata$TopicPartition {
  java.lang.String topic;

  java.lang.Integer partition;

  static zipkin2.storage.kafka.KafkaStreamsMetadata$StreamsMetadata$TopicPartition create(org.apache.kafka.common.TopicPartition);
    Code:
       0: new           #1                  // class zipkin2/storage/kafka/KafkaStreamsMetadata$StreamsMetadata$TopicPartition
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #3                  // Method org/apache/kafka/common/TopicPartition.partition:()I
      13: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: putfield      #5                  // Field partition:Ljava/lang/Integer;
      19: aload_1
      20: aload_0
      21: invokevirtual #6                  // Method org/apache/kafka/common/TopicPartition.topic:()Ljava/lang/String;
      24: putfield      #7                  // Field topic:Ljava/lang/String;
      27: aload_1
      28: areturn

  zipkin2.storage.kafka.KafkaStreamsMetadata$StreamsMetadata$TopicPartition();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  public void setTopic(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field topic:Ljava/lang/String;
       5: return

  public void setPartition(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field partition:Ljava/lang/Integer;
       5: return

  public java.lang.String getTopic();
    Code:
       0: aload_0
       1: getfield      #7                  // Field topic:Ljava/lang/String;
       4: areturn

  public java.lang.Integer getPartition();
    Code:
       0: aload_0
       1: getfield      #5                  // Field partition:Ljava/lang/Integer;
       4: areturn
}
