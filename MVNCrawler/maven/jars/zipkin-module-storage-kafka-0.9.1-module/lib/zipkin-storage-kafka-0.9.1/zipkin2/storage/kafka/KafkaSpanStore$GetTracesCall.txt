Compiled from "KafkaSpanStore.java"
final class zipkin2.storage.kafka.KafkaSpanStore$GetTracesCall extends zipkin2.storage.kafka.internal.KafkaStoreScatterGatherListCall<java.util.List<zipkin2.Span>> {
  final org.apache.kafka.streams.KafkaStreams traceStoreStream;

  final java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String> httpBaseUrl;

  final zipkin2.storage.QueryRequest request;

  zipkin2.storage.kafka.KafkaSpanStore$GetTracesCall(org.apache.kafka.streams.KafkaStreams, java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String>, zipkin2.storage.QueryRequest);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String zipkin-traces
       4: aload_2
       5: new           #3                  // class java/lang/StringBuilder
       8: dup
       9: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #5                  // String /traces?
      14: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_3
      18: invokevirtual #7                  // Method zipkin2/storage/QueryRequest.serviceName:()Ljava/lang/String;
      21: ifnonnull     29
      24: ldc           #8                  // String
      26: goto          56
      29: new           #3                  // class java/lang/StringBuilder
      32: dup
      33: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #9                  // String serviceName=
      38: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_3
      42: invokevirtual #7                  // Method zipkin2/storage/QueryRequest.serviceName:()Ljava/lang/String;
      45: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: ldc           #10                 // String &
      50: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_3
      60: invokevirtual #12                 // Method zipkin2/storage/QueryRequest.remoteServiceName:()Ljava/lang/String;
      63: ifnonnull     71
      66: ldc           #8                  // String
      68: goto          98
      71: new           #3                  // class java/lang/StringBuilder
      74: dup
      75: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #13                 // String remoteServiceName=
      80: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_3
      84: invokevirtual #12                 // Method zipkin2/storage/QueryRequest.remoteServiceName:()Ljava/lang/String;
      87: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #10                 // String &
      92: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_3
     102: invokevirtual #14                 // Method zipkin2/storage/QueryRequest.spanName:()Ljava/lang/String;
     105: ifnonnull     113
     108: ldc           #8                  // String
     110: goto          140
     113: new           #3                  // class java/lang/StringBuilder
     116: dup
     117: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #15                 // String spanName=
     122: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_3
     126: invokevirtual #14                 // Method zipkin2/storage/QueryRequest.spanName:()Ljava/lang/String;
     129: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #10                 // String &
     134: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: aload_3
     144: invokevirtual #16                 // Method zipkin2/storage/QueryRequest.annotationQueryString:()Ljava/lang/String;
     147: ifnonnull     155
     150: ldc           #8                  // String
     152: goto          182
     155: new           #3                  // class java/lang/StringBuilder
     158: dup
     159: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #17                 // String annotationQuery=
     164: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_3
     168: invokevirtual #16                 // Method zipkin2/storage/QueryRequest.annotationQueryString:()Ljava/lang/String;
     171: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     174: ldc           #10                 // String &
     176: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: aload_3
     186: invokevirtual #18                 // Method zipkin2/storage/QueryRequest.minDuration:()Ljava/lang/Long;
     189: ifnonnull     197
     192: ldc           #8                  // String
     194: goto          224
     197: new           #3                  // class java/lang/StringBuilder
     200: dup
     201: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     204: ldc           #19                 // String minDuration=
     206: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: aload_3
     210: invokevirtual #18                 // Method zipkin2/storage/QueryRequest.minDuration:()Ljava/lang/Long;
     213: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     216: ldc           #10                 // String &
     218: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: aload_3
     228: invokevirtual #21                 // Method zipkin2/storage/QueryRequest.maxDuration:()Ljava/lang/Long;
     231: ifnonnull     239
     234: ldc           #8                  // String
     236: goto          266
     239: new           #3                  // class java/lang/StringBuilder
     242: dup
     243: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     246: ldc           #22                 // String maxDuration=
     248: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: aload_3
     252: invokevirtual #21                 // Method zipkin2/storage/QueryRequest.maxDuration:()Ljava/lang/Long;
     255: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     258: ldc           #10                 // String &
     260: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     266: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: ldc           #23                 // String endTs=
     271: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: aload_3
     275: invokevirtual #24                 // Method zipkin2/storage/QueryRequest.endTs:()J
     278: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     281: ldc           #10                 // String &
     283: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     286: ldc           #26                 // String lookback=
     288: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     291: aload_3
     292: invokevirtual #27                 // Method zipkin2/storage/QueryRequest.lookback:()J
     295: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     298: ldc           #10                 // String &
     300: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     303: ldc           #28                 // String limit=
     305: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_3
     309: invokevirtual #29                 // Method zipkin2/storage/QueryRequest.limit:()I
     312: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     315: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     318: aload_3
     319: invokevirtual #29                 // Method zipkin2/storage/QueryRequest.limit:()I
     322: i2l
     323: invokespecial #31                 // Method zipkin2/storage/kafka/internal/KafkaStoreScatterGatherListCall."<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/lang/String;J)V
     326: aload_0
     327: aload_1
     328: putfield      #32                 // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
     331: aload_0
     332: aload_2
     333: putfield      #33                 // Field httpBaseUrl:Ljava/util/function/BiFunction;
     336: aload_0
     337: aload_3
     338: putfield      #34                 // Field request:Lzipkin2/storage/QueryRequest;
     341: return

  protected java.util.List<zipkin2.Span> parseItem(com.fasterxml.jackson.databind.JsonNode) throws com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: getstatic     #35                 // Field zipkin2/codec/SpanBytesDecoder.JSON_V2:Lzipkin2/codec/SpanBytesDecoder;
       3: getstatic     #36                 // Field zipkin2/storage/kafka/KafkaSpanStore.MAPPER:Lcom/fasterxml/jackson/databind/ObjectMapper;
       6: aload_1
       7: invokevirtual #37                 // Method com/fasterxml/jackson/databind/ObjectMapper.writeValueAsBytes:(Ljava/lang/Object;)[B
      10: invokevirtual #38                 // Method zipkin2/codec/SpanBytesDecoder.decodeList:([B)Ljava/util/List;
      13: areturn

  public zipkin2.Call<java.util.List<java.util.List<zipkin2.Span>>> clone();
    Code:
       0: new           #39                 // class zipkin2/storage/kafka/KafkaSpanStore$GetTracesCall
       3: dup
       4: aload_0
       5: getfield      #32                 // Field traceStoreStream:Lorg/apache/kafka/streams/KafkaStreams;
       8: aload_0
       9: getfield      #33                 // Field httpBaseUrl:Ljava/util/function/BiFunction;
      12: aload_0
      13: getfield      #34                 // Field request:Lzipkin2/storage/QueryRequest;
      16: invokespecial #40                 // Method "<init>":(Lorg/apache/kafka/streams/KafkaStreams;Ljava/util/function/BiFunction;Lzipkin2/storage/QueryRequest;)V
      19: areturn

  protected java.lang.Object parseItem(com.fasterxml.jackson.databind.JsonNode) throws com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #41                 // Method parseItem:(Lcom/fasterxml/jackson/databind/JsonNode;)Ljava/util/List;
       5: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method clone:()Lzipkin2/Call;
       4: areturn
}
