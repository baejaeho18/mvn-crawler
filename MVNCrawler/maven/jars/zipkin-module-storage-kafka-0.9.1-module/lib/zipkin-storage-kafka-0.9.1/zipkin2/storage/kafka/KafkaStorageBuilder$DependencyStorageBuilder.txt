Compiled from "KafkaStorageBuilder.java"
public class zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder {
  boolean enabled;

  java.lang.String dependencyTopic;

  java.time.Duration dependencyTtl;

  java.time.Duration dependencyWindowSize;

  java.util.Properties streamConfig;

  public zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field enabled:Z
       9: aload_0
      10: ldc           #3                  // String zipkin-dependency
      12: putfield      #4                  // Field dependencyTopic:Ljava/lang/String;
      15: aload_0
      16: ldc2_w        #5                  // long 7l
      19: invokestatic  #7                  // Method java/time/Duration.ofDays:(J)Ljava/time/Duration;
      22: putfield      #8                  // Field dependencyTtl:Ljava/time/Duration;
      25: aload_0
      26: lconst_1
      27: invokestatic  #9                  // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
      30: putfield      #10                 // Field dependencyWindowSize:Ljava/time/Duration;
      33: aload_0
      34: new           #11                 // class java/util/Properties
      37: dup
      38: invokespecial #12                 // Method java/util/Properties."<init>":()V
      41: putfield      #13                 // Field streamConfig:Ljava/util/Properties;
      44: aload_0
      45: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      48: ldc           #15                 // String default.key.serde
      50: ldc           #16                 // class org/apache/kafka/common/serialization/Serdes$StringSerde
      52: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      55: pop
      56: aload_0
      57: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      60: ldc           #18                 // String default.value.serde
      62: ldc           #19                 // class org/apache/kafka/common/serialization/Serdes$ByteArraySerde
      64: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: aload_0
      69: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      72: ldc           #20                 // String application.id
      74: ldc           #21                 // String zipkin-dependency-storage
      76: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload_0
      81: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      84: ldc           #22                 // String state.dir
      86: ldc           #23                 // String /tmp/zipkin-storage-kafka/dependency-storage
      88: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: aload_0
      93: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      96: ldc           #24                 // String topology.optimization
      98: ldc           #25                 // String all
     100: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aload_0
     105: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
     108: ldc           #26                 // String application.server
     110: ldc           #27                 // String localhost:9411
     112: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     115: pop
     116: return

  public zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder enabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field enabled:Z
       5: aload_0
       6: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder dependencyTopic(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #28                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #29                 // String dependencyTopic == null
      10: invokespecial #30                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field dependencyTopic:Ljava/lang/String;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder ttl(java.time.Duration);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #28                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #31                 // String ttl == null
      10: invokespecial #30                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #8                  // Field dependencyTtl:Ljava/time/Duration;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder bootstrapServers(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #28                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #32                 // String bootstrapServers == null
      10: invokespecial #30                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      18: ldc           #33                 // String bootstrap.servers
      20: aload_1
      21: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder hostInfo(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
       4: ldc           #26                 // String application.server
       6: new           #34                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      13: aload_1
      14: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #37                 // String :
      19: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: iload_2
      23: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload_0
      34: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder storageStateDir(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #28                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #40                 // String parentDir == null
      10: invokespecial #30                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      18: ldc           #22                 // String state.dir
      20: new           #34                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_1
      28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #41                 // String /dependencies
      33: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokevirtual #17                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_0
      44: areturn

  public final zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder overrides(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #28                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #42                 // String overrides == null
      10: invokespecial #30                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field streamConfig:Ljava/util/Properties;
      18: aload_1
      19: invokevirtual #43                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      22: aload_0
      23: areturn
}
