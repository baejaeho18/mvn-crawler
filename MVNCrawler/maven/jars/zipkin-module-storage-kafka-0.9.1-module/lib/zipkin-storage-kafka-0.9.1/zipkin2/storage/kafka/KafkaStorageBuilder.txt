Compiled from "KafkaStorageBuilder.java"
public final class zipkin2.storage.kafka.KafkaStorageBuilder extends zipkin2.storage.StorageComponent$Builder {
  java.util.List<java.lang.String> autocompleteKeys;

  java.lang.String hostname;

  int serverPort;

  java.util.function.BiFunction<java.lang.String, java.lang.Integer, java.lang.String> httpBaseUrl;

  zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder spanPartitioning;

  zipkin2.storage.kafka.KafkaStorageBuilder$SpanAggregationBuilder spanAggregation;

  zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder traceStorage;

  zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder dependencyStorage;

  java.util.Properties adminConfig;

  zipkin2.storage.kafka.KafkaStorageBuilder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method zipkin2/storage/StorageComponent$Builder."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field autocompleteKeys:Ljava/util/List;
      15: aload_0
      16: ldc           #6                  // String localhost
      18: putfield      #7                  // Field hostname:Ljava/lang/String;
      21: aload_0
      22: sipush        9411
      25: putfield      #8                  // Field serverPort:I
      28: aload_0
      29: invokedynamic #9,  0              // InvokeDynamic #0:apply:()Ljava/util/function/BiFunction;
      34: putfield      #10                 // Field httpBaseUrl:Ljava/util/function/BiFunction;
      37: aload_0
      38: new           #11                 // class zipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder
      41: dup
      42: invokespecial #12                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder."<init>":()V
      45: putfield      #13                 // Field spanPartitioning:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
      48: aload_0
      49: new           #14                 // class zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder
      52: dup
      53: invokespecial #15                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder."<init>":()V
      56: putfield      #16                 // Field spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      59: aload_0
      60: new           #17                 // class zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder
      63: dup
      64: invokespecial #18                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder."<init>":()V
      67: putfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      70: aload_0
      71: new           #20                 // class zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder
      74: dup
      75: invokespecial #21                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder."<init>":()V
      78: putfield      #22                 // Field dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      81: aload_0
      82: new           #23                 // class java/util/Properties
      85: dup
      86: invokespecial #24                 // Method java/util/Properties."<init>":()V
      89: putfield      #25                 // Field adminConfig:Ljava/util/Properties;
      92: return

  public zipkin2.storage.kafka.KafkaStorageBuilder strictTraceId(boolean);
    Code:
       0: iload_1
       1: ifne          14
       4: new           #26                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #27                 // String non-strict trace ID not supported
      10: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder searchEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
       4: iload_1
       5: invokevirtual #29                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.searchEnabled:(Z)Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
       8: pop
       9: aload_0
      10: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder autocompleteKeys(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #31                 // String keys == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field autocompleteKeys:Ljava/util/List;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder bootstrapServers(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #33                 // String bootstrapServers == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #25                 // Field adminConfig:Ljava/util/Properties;
      18: ldc           #35                 // String bootstrap.servers
      20: aload_1
      21: invokevirtual #36                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: getfield      #13                 // Field spanPartitioning:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
      29: aload_1
      30: invokevirtual #37                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder.bootstrapServers:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
      33: pop
      34: aload_0
      35: getfield      #16                 // Field spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      38: aload_1
      39: invokevirtual #38                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.bootstrapServers:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      42: pop
      43: aload_0
      44: getfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      47: aload_1
      48: invokevirtual #39                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.bootstrapServers:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      51: pop
      52: aload_0
      53: getfield      #22                 // Field dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      56: aload_1
      57: invokevirtual #40                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.bootstrapServers:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      60: pop
      61: aload_0
      62: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder storageStateDir(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #41                 // String storageStateDir == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #16                 // Field spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      18: aload_1
      19: invokevirtual #42                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.storageStateDir:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      22: pop
      23: aload_0
      24: getfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      27: aload_1
      28: invokevirtual #43                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.storageStateDir:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      31: pop
      32: aload_0
      33: getfield      #22                 // Field dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      36: aload_1
      37: invokevirtual #44                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.storageStateDir:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      40: pop
      41: aload_0
      42: areturn

  public final zipkin2.storage.kafka.KafkaStorageBuilder overrides(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #45                 // String overrides == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #25                 // Field adminConfig:Ljava/util/Properties;
      18: aload_1
      19: invokevirtual #46                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      22: aload_0
      23: getfield      #13                 // Field spanPartitioning:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
      26: aload_1
      27: invokevirtual #47                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder.overrides:(Ljava/util/Map;)Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
      30: pop
      31: aload_0
      32: getfield      #16                 // Field spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      35: aload_1
      36: invokevirtual #48                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder.overrides:(Ljava/util/Map;)Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      39: pop
      40: aload_0
      41: getfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      44: aload_1
      45: invokevirtual #49                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.overrides:(Ljava/util/Map;)Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      48: pop
      49: aload_0
      50: getfield      #22                 // Field dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      53: aload_1
      54: invokevirtual #50                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.overrides:(Ljava/util/Map;)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      57: pop
      58: aload_0
      59: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder hostname(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #51                 // String hostname == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #7                  // Field hostname:Ljava/lang/String;
      19: aload_0
      20: getfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      23: aload_1
      24: aload_0
      25: getfield      #8                  // Field serverPort:I
      28: invokevirtual #52                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.hostInfo:(Ljava/lang/String;I)Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      31: pop
      32: aload_0
      33: getfield      #22                 // Field dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      36: aload_1
      37: aload_0
      38: getfield      #8                  // Field serverPort:I
      41: invokevirtual #53                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.hostInfo:(Ljava/lang/String;I)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      44: pop
      45: aload_0
      46: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder serverPort(int);
    Code:
       0: iload_1
       1: ifgt          14
       4: new           #26                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #54                 // String serverPort <= 0
      10: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload_1
      16: putfield      #8                  // Field serverPort:I
      19: aload_0
      20: getfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      23: aload_0
      24: getfield      #7                  // Field hostname:Ljava/lang/String;
      27: iload_1
      28: invokevirtual #52                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder.hostInfo:(Ljava/lang/String;I)Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      31: pop
      32: aload_0
      33: getfield      #22                 // Field dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      36: aload_0
      37: getfield      #7                  // Field hostname:Ljava/lang/String;
      40: iload_1
      41: invokevirtual #53                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.hostInfo:(Ljava/lang/String;I)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      44: pop
      45: aload_0
      46: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder spanPartitioningBuilder(zipkin2.storage.kafka.KafkaStorageBuilder$SpanPartitioningBuilder);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #55                 // String builder == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #13                 // Field spanPartitioning:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanPartitioningBuilder;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder spanAggregationBuilder(zipkin2.storage.kafka.KafkaStorageBuilder$SpanAggregationBuilder);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #55                 // String builder == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #16                 // Field spanAggregation:Lzipkin2/storage/kafka/KafkaStorageBuilder$SpanAggregationBuilder;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder traceStorageBuilder(zipkin2.storage.kafka.KafkaStorageBuilder$TraceStorageBuilder);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #55                 // String builder == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #19                 // Field traceStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$TraceStorageBuilder;
      19: aload_0
      20: areturn

  public zipkin2.storage.kafka.KafkaStorageBuilder dependencyStorageBuilder(zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #30                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #55                 // String builder == null
      10: invokespecial #32                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #22                 // Field dependencyStorage:Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      19: aload_0
      20: areturn

  public zipkin2.storage.StorageComponent build();
    Code:
       0: new           #1                  // class zipkin2/storage/kafka/KafkaStorage
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method zipkin2/storage/kafka/KafkaStorage."<init>":(Lzipkin2/storage/kafka/KafkaStorageBuilder;)V
       8: areturn

  public zipkin2.storage.StorageComponent$Builder autocompleteKeys(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method autocompleteKeys:(Ljava/util/List;)Lzipkin2/storage/kafka/KafkaStorageBuilder;
       5: areturn

  public zipkin2.storage.StorageComponent$Builder searchEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method searchEnabled:(Z)Lzipkin2/storage/kafka/KafkaStorageBuilder;
       5: areturn

  public zipkin2.storage.StorageComponent$Builder strictTraceId(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method strictTraceId:(Z)Lzipkin2/storage/kafka/KafkaStorageBuilder;
       5: areturn

  private static java.lang.String lambda$new$0(java.lang.String, java.lang.Integer);
    Code:
       0: new           #60                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #61                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #62                 // String http://
       9: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #64                 // String :
      18: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: ldc           #66                 // String /storage/kafka
      27: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn
}
