Compiled from "KafkaStreamsMetadata.java"
final class zipkin2.storage.kafka.KafkaStreamsMetadata {
  java.util.Set<zipkin2.storage.kafka.KafkaStreamsMetadata$StreamsMetadata> metadata;

  static zipkin2.storage.kafka.KafkaStreamsMetadata create(java.util.Collection<org.apache.kafka.streams.state.StreamsMetadata>);
    Code:
       0: new           #1                  // class zipkin2/storage/kafka/KafkaStreamsMetadata
       3: dup
       4: invokespecial #2                  // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokeinterface #3,  1            // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      15: invokedynamic #4,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      20: invokeinterface #5,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: invokestatic  #6                  // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      28: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      33: checkcast     #8                  // class java/util/Set
      36: putfield      #9                  // Field metadata:Ljava/util/Set;
      39: aload_1
      40: areturn

  zipkin2.storage.kafka.KafkaStreamsMetadata();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: return

  public void setMetadata(java.util.Set<zipkin2.storage.kafka.KafkaStreamsMetadata$StreamsMetadata>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field metadata:Ljava/util/Set;
       5: return

  public java.util.Set<zipkin2.storage.kafka.KafkaStreamsMetadata$StreamsMetadata> getMetadata();
    Code:
       0: aload_0
       1: getfield      #9                  // Field metadata:Ljava/util/Set;
       4: areturn
}
