Compiled from "ProducedInternal.java"
public class org.apache.kafka.streams.kstream.internals.ProducedInternal<K, V> extends org.apache.kafka.streams.kstream.Produced<K, V> {
  public org.apache.kafka.streams.kstream.internals.ProducedInternal(org.apache.kafka.streams.kstream.Produced<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kafka/streams/kstream/Produced."<init>":(Lorg/apache/kafka/streams/kstream/Produced;)V
       5: return

  public org.apache.kafka.common.serialization.Serde<K> keySerde();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       4: areturn

  public org.apache.kafka.common.serialization.Serde<V> valueSerde();
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
       4: areturn

  public org.apache.kafka.streams.processor.StreamPartitioner<? super K, ? super V> streamPartitioner();
    Code:
       0: aload_0
       1: getfield      #4                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #5                  // Field processorName:Ljava/lang/String;
       4: areturn
}
