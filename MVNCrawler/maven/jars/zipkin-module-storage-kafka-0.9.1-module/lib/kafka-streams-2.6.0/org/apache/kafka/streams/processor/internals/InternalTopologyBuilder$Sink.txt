Compiled from "InternalTopologyBuilder.java"
public final class org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$Sink<K, V> extends org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$AbstractNode implements org.apache.kafka.streams.TopologyDescription$Sink {
  private final org.apache.kafka.streams.processor.TopicNameExtractor<K, V> topicNameExtractor;

  public org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$Sink(java.lang.String, org.apache.kafka.streams.processor.TopicNameExtractor<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$AbstractNode."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      10: return

  public org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$Sink(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$AbstractNode."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #3                  // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
       9: dup
      10: aload_2
      11: invokespecial #4                  // Method org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor."<init>":(Ljava/lang/String;)V
      14: putfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      17: return

  public java.lang.String topic();
    Code:
       0: aload_0
       1: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
       4: instanceof    #3                  // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
       7: ifeq          21
      10: aload_0
      11: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      14: checkcast     #3                  // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
      17: getfield      #5                  // Field org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor.topicName:Ljava/lang/String;
      20: areturn
      21: aconst_null
      22: areturn

  public org.apache.kafka.streams.processor.TopicNameExtractor<K, V> topicNameExtractor();
    Code:
       0: aload_0
       1: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
       4: instanceof    #3                  // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
       7: ifeq          12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      16: areturn

  public void addSuccessor(org.apache.kafka.streams.TopologyDescription$Node);
    Code:
       0: new           #6                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #7                  // String Sinks don\'t have successors.
       6: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
       4: instanceof    #3                  // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
       7: ifeq          60
      10: new           #9                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #11                 // String Sink:
      19: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #13                 // Field name:Ljava/lang/String;
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #14                 // String  (topic:
      31: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokevirtual #15                 // Method topic:()Ljava/lang/String;
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #16                 // String )\n      <--
      43: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #17                 // Field predecessors:Ljava/util/Set;
      50: invokestatic  #18                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$1800:(Ljava/util/Set;)Ljava/lang/String;
      53: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn
      60: new           #9                  // class java/lang/StringBuilder
      63: dup
      64: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #11                 // String Sink:
      69: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #13                 // Field name:Ljava/lang/String;
      76: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #20                 // String  (extractor class:
      81: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      88: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #16                 // String )\n      <--
      93: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #17                 // Field predecessors:Ljava/util/Set;
     100: invokestatic  #18                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$1800:(Ljava/util/Set;)Ljava/lang/String;
     103: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #23                 // class org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Sink
      28: astore_2
      29: aload_0
      30: getfield      #13                 // Field name:Ljava/lang/String;
      33: aload_2
      34: getfield      #13                 // Field name:Ljava/lang/String;
      37: invokevirtual #24                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ifeq          77
      43: aload_0
      44: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      47: aload_2
      48: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      51: invokevirtual #25                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      54: ifeq          77
      57: aload_0
      58: getfield      #17                 // Field predecessors:Ljava/util/Set;
      61: aload_2
      62: getfield      #17                 // Field predecessors:Ljava/util/Set;
      65: invokeinterface #26,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      70: ifeq          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #27                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #13                 // Field name:Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #2                  // Field topicNameExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      17: aastore
      18: invokestatic  #28                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      21: ireturn
}
