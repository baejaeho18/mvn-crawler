Compiled from "InternalTopicConfig.java"
public abstract class org.apache.kafka.streams.processor.internals.InternalTopicConfig {
  final java.lang.String name;

  final java.util.Map<java.lang.String, java.lang.String> topicConfigs;

  final boolean enforceNumberOfPartitions;

  private java.util.Optional<java.lang.Integer> numberOfPartitions;

  static final java.util.Map<java.lang.String, java.lang.String> INTERNAL_TOPIC_DEFAULT_OVERRIDES;

  org.apache.kafka.streams.processor.internals.InternalTopicConfig(java.lang.String, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field numberOfPartitions:Ljava/util/Optional;
      11: aload_0
      12: aload_1
      13: ldc           #4                  // String name can\'t be null
      15: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      18: checkcast     #6                  // class java/lang/String
      21: putfield      #7                  // Field name:Ljava/lang/String;
      24: aload_1
      25: invokestatic  #8                  // Method org/apache/kafka/common/internals/Topic.validate:(Ljava/lang/String;)V
      28: aload_0
      29: aload_2
      30: ldc           #9                  // String topicConfigs can\'t be null
      32: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      35: checkcast     #10                 // class java/util/Map
      38: putfield      #11                 // Field topicConfigs:Ljava/util/Map;
      41: aload_0
      42: iconst_0
      43: putfield      #12                 // Field enforceNumberOfPartitions:Z
      46: return

  org.apache.kafka.streams.processor.internals.InternalTopicConfig(java.lang.String, java.util.Map<java.lang.String, java.lang.String>, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/Optional.empty:()Ljava/util/Optional;
       8: putfield      #3                  // Field numberOfPartitions:Ljava/util/Optional;
      11: aload_0
      12: aload_1
      13: ldc           #4                  // String name can\'t be null
      15: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      18: checkcast     #6                  // class java/lang/String
      21: putfield      #7                  // Field name:Ljava/lang/String;
      24: aload_1
      25: invokestatic  #8                  // Method org/apache/kafka/common/internals/Topic.validate:(Ljava/lang/String;)V
      28: iload_3
      29: invokestatic  #13                 // Method validateNumberOfPartitions:(I)V
      32: aload_0
      33: aload_2
      34: ldc           #9                  // String topicConfigs can\'t be null
      36: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      39: checkcast     #10                 // class java/util/Map
      42: putfield      #11                 // Field topicConfigs:Ljava/util/Map;
      45: aload_0
      46: iload_3
      47: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokestatic  #15                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      53: putfield      #3                  // Field numberOfPartitions:Ljava/util/Optional;
      56: aload_0
      57: iload         4
      59: putfield      #12                 // Field enforceNumberOfPartitions:Z
      62: return

  public abstract java.util.Map<java.lang.String, java.lang.String> getProperties(java.util.Map<java.lang.String, java.lang.String>, long);

  public boolean hasEnforcedNumberOfPartitions();
    Code:
       0: aload_0
       1: getfield      #12                 // Field enforceNumberOfPartitions:Z
       4: ireturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public java.util.Optional<java.lang.Integer> numberOfPartitions();
    Code:
       0: aload_0
       1: getfield      #3                  // Field numberOfPartitions:Ljava/util/Optional;
       4: areturn

  public void setNumberOfPartitions(int);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method hasEnforcedNumberOfPartitions:()Z
       4: ifeq          42
       7: new           #17                 // class java/lang/UnsupportedOperationException
      10: dup
      11: new           #18                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #20                 // String number of partitions are enforced on topic
      20: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #22                 // Method name:()Ljava/lang/String;
      27: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #23                 // String  and can\'t be altered.
      32: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #25                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: iload_1
      43: invokestatic  #13                 // Method validateNumberOfPartitions:(I)V
      46: aload_0
      47: iload_1
      48: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: invokestatic  #15                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      54: putfield      #3                  // Field numberOfPartitions:Ljava/util/Optional;
      57: return

  private static void validateNumberOfPartitions(int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     15
       5: new           #26                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #27                 // String Number of partitions must be at least 1.
      11: invokespecial #28                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: return

  public java.lang.String toString();
    Code:
       0: new           #18                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #29                 // String InternalTopicConfig(name=
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field name:Ljava/lang/String;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #30                 // String , topicConfigs=
      21: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #11                 // Field topicConfigs:Ljava/util/Map;
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #32                 // String , enforceNumberOfPartitions=
      33: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #12                 // Field enforceNumberOfPartitions:Z
      40: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #34                 // String )
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  static {};
    Code:
       0: new           #35                 // class java/util/HashMap
       3: dup
       4: invokespecial #36                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #37                 // Field INTERNAL_TOPIC_DEFAULT_OVERRIDES:Ljava/util/Map;
      10: getstatic     #37                 // Field INTERNAL_TOPIC_DEFAULT_OVERRIDES:Ljava/util/Map;
      13: ldc           #39                 // String message.timestamp.type
      15: ldc           #40                 // String CreateTime
      17: invokeinterface #41,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return
}
