Compiled from "MemoryNavigableLRUCache.java"
public class org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache extends org.apache.kafka.streams.state.internals.MemoryLRUCache {
  private static final org.slf4j.Logger LOG;

  public org.apache.kafka.streams.state.internals.MemoryNavigableLRUCache(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/kafka/streams/state/internals/MemoryLRUCache."<init>":(Ljava/lang/String;I)V
       6: return

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2                  // Method org/apache/kafka/common/utils/Bytes.compareTo:(Lorg/apache/kafka/common/utils/Bytes;)I
       5: ifle          22
       8: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      11: ldc           #4                  // String Returning empty iterator for fetch with invalid key range: from > to. This may be due to serdes that don\'t preserve ordering when lexicographically comparing the serialized bytes. Note that the built-in numerical serdes do not follow this for negative numbers
      13: invokeinterface #5,  2            // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      18: invokestatic  #6                  // Method org/apache/kafka/streams/state/internals/KeyValueIterators.emptyIterator:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      21: areturn
      22: aload_0
      23: invokespecial #7                  // Method toTreeMap:()Ljava/util/TreeMap;
      26: astore_3
      27: new           #8                  // class org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator
      30: dup
      31: aload_0
      32: invokevirtual #9                  // Method name:()Ljava/lang/String;
      35: new           #10                 // class org/apache/kafka/streams/state/internals/MemoryNavigableLRUCache$CacheIterator
      38: dup
      39: aload_3
      40: invokevirtual #11                 // Method java/util/TreeMap.navigableKeySet:()Ljava/util/NavigableSet;
      43: aload_1
      44: iconst_1
      45: aload_2
      46: iconst_1
      47: invokeinterface #12,  5           // InterfaceMethod java/util/NavigableSet.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
      52: invokeinterface #13,  1           // InterfaceMethod java/util/NavigableSet.iterator:()Ljava/util/Iterator;
      57: aload_3
      58: aconst_null
      59: invokespecial #14                 // Method org/apache/kafka/streams/state/internals/MemoryNavigableLRUCache$CacheIterator."<init>":(Ljava/util/Iterator;Ljava/util/Map;Lorg/apache/kafka/streams/state/internals/MemoryNavigableLRUCache$1;)V
      62: invokespecial #15                 // Method org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/state/KeyValueIterator;)V
      65: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method toTreeMap:()Ljava/util/TreeMap;
       4: astore_1
       5: new           #10                 // class org/apache/kafka/streams/state/internals/MemoryNavigableLRUCache$CacheIterator
       8: dup
       9: aload_1
      10: invokevirtual #11                 // Method java/util/TreeMap.navigableKeySet:()Ljava/util/NavigableSet;
      13: invokeinterface #13,  1           // InterfaceMethod java/util/NavigableSet.iterator:()Ljava/util/Iterator;
      18: aload_1
      19: aconst_null
      20: invokespecial #14                 // Method org/apache/kafka/streams/state/internals/MemoryNavigableLRUCache$CacheIterator."<init>":(Ljava/util/Iterator;Ljava/util/Map;Lorg/apache/kafka/streams/state/internals/MemoryNavigableLRUCache$1;)V
      23: areturn

  private synchronized java.util.TreeMap<org.apache.kafka.common.utils.Bytes, byte[]> toTreeMap();
    Code:
       0: new           #16                 // class java/util/TreeMap
       3: dup
       4: aload_0
       5: getfield      #17                 // Field map:Ljava/util/Map;
       8: invokespecial #18                 // Method java/util/TreeMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public org.apache.kafka.streams.state.KeyValueIterator range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #19                 // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #20                 // Method range:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  static {};
    Code:
       0: ldc           #21                 // class org/apache/kafka/streams/state/internals/MemoryNavigableLRUCache
       2: invokestatic  #22                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
