Compiled from "RocksDBStore.java"
interface org.apache.kafka.streams.state.internals.RocksDBStore$RocksDBAccessor {
  public abstract void put(byte[], byte[]);

  public abstract void prepareBatch(java.util.List<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>>, org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;

  public abstract byte[] get(byte[]) throws org.rocksdb.RocksDBException;

  public abstract byte[] getOnly(byte[]) throws org.rocksdb.RocksDBException;

  public abstract org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);

  public abstract org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();

  public abstract long approximateNumEntries() throws org.rocksdb.RocksDBException;

  public abstract void flush() throws org.rocksdb.RocksDBException;

  public abstract void prepareBatchForRestore(java.util.Collection<org.apache.kafka.streams.KeyValue<byte[], byte[]>>, org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;

  public abstract void addToBatch(byte[], byte[], org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;

  public abstract void close();
}
