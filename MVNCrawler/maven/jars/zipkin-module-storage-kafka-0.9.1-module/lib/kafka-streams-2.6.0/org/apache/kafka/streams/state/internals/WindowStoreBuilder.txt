Compiled from "WindowStoreBuilder.java"
public class org.apache.kafka.streams.state.internals.WindowStoreBuilder<K, V> extends org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K, V, org.apache.kafka.streams.state.WindowStore<K, V>> {
  private final org.slf4j.Logger log;

  private final org.apache.kafka.streams.state.WindowBytesStoreSupplier storeSupplier;

  public org.apache.kafka.streams.state.internals.WindowStoreBuilder(org.apache.kafka.streams.state.WindowBytesStoreSupplier, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>, org.apache.kafka.common.utils.Time);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.name:()Ljava/lang/String;
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokespecial #2                  // Method org/apache/kafka/streams/state/internals/AbstractStoreBuilder."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
      14: aload_0
      15: ldc           #3                  // class org/apache/kafka/streams/state/internals/WindowStoreBuilder
      17: invokestatic  #4                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      20: putfield      #5                  // Field log:Lorg/slf4j/Logger;
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      28: return

  public org.apache.kafka.streams.state.WindowStore<K, V> build();
    Code:
       0: aload_0
       1: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.retainDuplicates:()Z
       9: ifeq          44
      12: aload_0
      13: getfield      #8                  // Field enableCaching:Z
      16: ifeq          44
      19: aload_0
      20: getfield      #5                  // Field log:Lorg/slf4j/Logger;
      23: ldc           #9                  // String Disabling caching for {} since store was configured to retain duplicates
      25: aload_0
      26: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      29: invokeinterface #1,  1            // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.name:()Ljava/lang/String;
      34: invokeinterface #10,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      39: aload_0
      40: iconst_0
      41: putfield      #8                  // Field enableCaching:Z
      44: new           #11                 // class org/apache/kafka/streams/state/internals/MeteredWindowStore
      47: dup
      48: aload_0
      49: aload_0
      50: aload_0
      51: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      54: invokeinterface #12,  1           // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.get:()Lorg/apache/kafka/streams/processor/StateStore;
      59: checkcast     #13                 // class org/apache/kafka/streams/state/WindowStore
      62: invokespecial #14                 // Method maybeWrapLogging:(Lorg/apache/kafka/streams/state/WindowStore;)Lorg/apache/kafka/streams/state/WindowStore;
      65: invokespecial #15                 // Method maybeWrapCaching:(Lorg/apache/kafka/streams/state/WindowStore;)Lorg/apache/kafka/streams/state/WindowStore;
      68: aload_0
      69: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      72: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.windowSize:()J
      77: aload_0
      78: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      81: invokeinterface #17,  1           // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.metricsScope:()Ljava/lang/String;
      86: aload_0
      87: getfield      #18                 // Field time:Lorg/apache/kafka/common/utils/Time;
      90: aload_0
      91: getfield      #19                 // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      94: aload_0
      95: getfield      #20                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      98: invokespecial #21                 // Method org/apache/kafka/streams/state/internals/MeteredWindowStore."<init>":(Lorg/apache/kafka/streams/state/WindowStore;JLjava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
     101: areturn

  private org.apache.kafka.streams.state.WindowStore<org.apache.kafka.common.utils.Bytes, byte[]> maybeWrapCaching(org.apache.kafka.streams.state.WindowStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field enableCaching:Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: new           #22                 // class org/apache/kafka/streams/state/internals/CachingWindowStore
      12: dup
      13: aload_1
      14: aload_0
      15: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      18: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.windowSize:()J
      23: aload_0
      24: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      27: invokeinterface #23,  1           // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.segmentIntervalMs:()J
      32: invokespecial #24                 // Method org/apache/kafka/streams/state/internals/CachingWindowStore."<init>":(Lorg/apache/kafka/streams/state/WindowStore;JJ)V
      35: areturn

  private org.apache.kafka.streams.state.WindowStore<org.apache.kafka.common.utils.Bytes, byte[]> maybeWrapLogging(org.apache.kafka.streams.state.WindowStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field enableLogging:Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: new           #26                 // class org/apache/kafka/streams/state/internals/ChangeLoggingWindowBytesStore
      12: dup
      13: aload_1
      14: aload_0
      15: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
      18: invokeinterface #7,  1            // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.retainDuplicates:()Z
      23: invokespecial #27                 // Method org/apache/kafka/streams/state/internals/ChangeLoggingWindowBytesStore."<init>":(Lorg/apache/kafka/streams/state/WindowStore;Z)V
      26: areturn

  public long retentionPeriod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/WindowBytesStoreSupplier;
       4: invokeinterface #28,  1           // InterfaceMethod org/apache/kafka/streams/state/WindowBytesStoreSupplier.retentionPeriod:()J
       9: lreturn

  public org.apache.kafka.streams.processor.StateStore build();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method build:()Lorg/apache/kafka/streams/state/WindowStore;
       4: areturn
}
