Compiled from "SessionStoreBuilder.java"
public class org.apache.kafka.streams.state.internals.SessionStoreBuilder<K, V> extends org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K, V, org.apache.kafka.streams.state.SessionStore<K, V>> {
  private final org.apache.kafka.streams.state.SessionBytesStoreSupplier storeSupplier;

  public org.apache.kafka.streams.state.internals.SessionStoreBuilder(org.apache.kafka.streams.state.SessionBytesStoreSupplier, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>, org.apache.kafka.common.utils.Time);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String supplier cannot be null
       4: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #3                  // class org/apache/kafka/streams/state/SessionBytesStoreSupplier
      10: invokeinterface #4,  1            // InterfaceMethod org/apache/kafka/streams/state/SessionBytesStoreSupplier.name:()Ljava/lang/String;
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokespecial #5                  // Method org/apache/kafka/streams/state/internals/AbstractStoreBuilder."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
      27: return

  public org.apache.kafka.streams.state.SessionStore<K, V> build();
    Code:
       0: new           #7                  // class org/apache/kafka/streams/state/internals/MeteredSessionStore
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
      10: invokeinterface #8,  1            // InterfaceMethod org/apache/kafka/streams/state/SessionBytesStoreSupplier.get:()Lorg/apache/kafka/streams/processor/StateStore;
      15: checkcast     #9                  // class org/apache/kafka/streams/state/SessionStore
      18: invokespecial #10                 // Method maybeWrapLogging:(Lorg/apache/kafka/streams/state/SessionStore;)Lorg/apache/kafka/streams/state/SessionStore;
      21: invokespecial #11                 // Method maybeWrapCaching:(Lorg/apache/kafka/streams/state/SessionStore;)Lorg/apache/kafka/streams/state/SessionStore;
      24: aload_0
      25: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
      28: invokeinterface #12,  1           // InterfaceMethod org/apache/kafka/streams/state/SessionBytesStoreSupplier.metricsScope:()Ljava/lang/String;
      33: aload_0
      34: getfield      #13                 // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      37: aload_0
      38: getfield      #14                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      41: aload_0
      42: getfield      #15                 // Field time:Lorg/apache/kafka/common/utils/Time;
      45: invokespecial #16                 // Method org/apache/kafka/streams/state/internals/MeteredSessionStore."<init>":(Lorg/apache/kafka/streams/state/SessionStore;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
      48: areturn

  private org.apache.kafka.streams.state.SessionStore<org.apache.kafka.common.utils.Bytes, byte[]> maybeWrapCaching(org.apache.kafka.streams.state.SessionStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: getfield      #17                 // Field enableCaching:Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: new           #18                 // class org/apache/kafka/streams/state/internals/CachingSessionStore
      12: dup
      13: aload_1
      14: aload_0
      15: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
      18: invokeinterface #19,  1           // InterfaceMethod org/apache/kafka/streams/state/SessionBytesStoreSupplier.segmentIntervalMs:()J
      23: invokespecial #20                 // Method org/apache/kafka/streams/state/internals/CachingSessionStore."<init>":(Lorg/apache/kafka/streams/state/SessionStore;J)V
      26: areturn

  private org.apache.kafka.streams.state.SessionStore<org.apache.kafka.common.utils.Bytes, byte[]> maybeWrapLogging(org.apache.kafka.streams.state.SessionStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field enableLogging:Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: new           #22                 // class org/apache/kafka/streams/state/internals/ChangeLoggingSessionBytesStore
      12: dup
      13: aload_1
      14: invokespecial #23                 // Method org/apache/kafka/streams/state/internals/ChangeLoggingSessionBytesStore."<init>":(Lorg/apache/kafka/streams/state/SessionStore;)V
      17: areturn

  public long retentionPeriod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field storeSupplier:Lorg/apache/kafka/streams/state/SessionBytesStoreSupplier;
       4: invokeinterface #24,  1           // InterfaceMethod org/apache/kafka/streams/state/SessionBytesStoreSupplier.retentionPeriod:()J
       9: lreturn

  public org.apache.kafka.streams.processor.StateStore build();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method build:()Lorg/apache/kafka/streams/state/SessionStore;
       4: areturn
}
