Compiled from "StandbyTaskCreator.java"
class org.apache.kafka.streams.processor.internals.StandbyTaskCreator {
  private final org.apache.kafka.streams.processor.internals.InternalTopologyBuilder builder;

  private final org.apache.kafka.streams.StreamsConfig config;

  private final org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl streamsMetrics;

  private final org.apache.kafka.streams.processor.internals.StateDirectory stateDirectory;

  private final org.apache.kafka.streams.processor.internals.ChangelogReader storeChangelogReader;

  private final org.apache.kafka.streams.state.internals.ThreadCache dummyCache;

  private final org.slf4j.Logger log;

  private final org.apache.kafka.common.metrics.Sensor createTaskSensor;

  org.apache.kafka.streams.processor.internals.StandbyTaskCreator(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder, org.apache.kafka.streams.StreamsConfig, org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, org.apache.kafka.streams.processor.internals.StateDirectory, org.apache.kafka.streams.processor.internals.ChangelogReader, java.lang.String, org.slf4j.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field builder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field storeChangelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogReader;
      31: aload_0
      32: aload         7
      34: putfield      #7                  // Field log:Lorg/slf4j/Logger;
      37: aload_0
      38: aload         6
      40: aload_3
      41: invokestatic  #8                  // Method org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.createTaskSensor:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
      44: putfield      #9                  // Field createTaskSensor:Lorg/apache/kafka/common/metrics/Sensor;
      47: aload_0
      48: new           #10                 // class org/apache/kafka/streams/state/internals/ThreadCache
      51: dup
      52: new           #11                 // class org/apache/kafka/common/utils/LogContext
      55: dup
      56: ldc           #12                 // String stream-thread [%s]
      58: iconst_1
      59: anewarray     #13                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: invokestatic  #14                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      67: invokevirtual #15                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      70: aastore
      71: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      74: invokespecial #17                 // Method org/apache/kafka/common/utils/LogContext."<init>":(Ljava/lang/String;)V
      77: lconst_0
      78: aload_3
      79: invokespecial #18                 // Method org/apache/kafka/streams/state/internals/ThreadCache."<init>":(Lorg/apache/kafka/common/utils/LogContext;JLorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
      82: putfield      #19                 // Field dummyCache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
      85: return

  java.util.Collection<org.apache.kafka.streams.processor.internals.Task> createTasks(java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.Set<org.apache.kafka.common.TopicPartition>>);
    Code:
       0: new           #20                 // class java/util/ArrayList
       3: dup
       4: invokespecial #21                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #23,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          195
      29: aload_3
      30: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #26                 // class java/util/Map$Entry
      38: astore        4
      40: aload         4
      42: invokeinterface #27,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      47: checkcast     #28                 // class org/apache/kafka/streams/processor/TaskId
      50: astore        5
      52: aload         4
      54: invokeinterface #29,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #30                 // class java/util/Set
      62: astore        6
      64: aload_0
      65: getfield      #2                  // Field builder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      68: aload         5
      70: getfield      #31                 // Field org/apache/kafka/streams/processor/TaskId.topicGroupId:I
      73: invokevirtual #32                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.buildSubtopology:(I)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
      76: astore        7
      78: aload         7
      80: invokevirtual #33                 // Method org/apache/kafka/streams/processor/internals/ProcessorTopology.hasStateWithChangelogs:()Z
      83: ifeq          177
      86: new           #34                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager
      89: dup
      90: aload         5
      92: getstatic     #35                 // Field org/apache/kafka/streams/processor/internals/Task$TaskType.STANDBY:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      95: aload_0
      96: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      99: invokestatic  #36                 // Method org/apache/kafka/streams/processor/internals/StreamThread.eosEnabled:(Lorg/apache/kafka/streams/StreamsConfig;)Z
     102: aload_0
     103: aload         5
     105: invokespecial #37                 // Method getLogContext:(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/common/utils/LogContext;
     108: aload_0
     109: getfield      #5                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
     112: aload_0
     113: getfield      #6                  // Field storeChangelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogReader;
     116: aload         7
     118: invokevirtual #38                 // Method org/apache/kafka/streams/processor/internals/ProcessorTopology.storeToChangelogTopic:()Ljava/util/Map;
     121: aload         6
     123: invokespecial #39                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager."<init>":(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/Task$TaskType;ZLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;Ljava/util/Map;Ljava/util/Collection;)V
     126: astore        8
     128: new           #40                 // class org/apache/kafka/streams/processor/internals/ProcessorContextImpl
     131: dup
     132: aload         5
     134: aload_0
     135: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
     138: aload         8
     140: aload_0
     141: getfield      #4                  // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
     144: aload_0
     145: getfield      #19                 // Field dummyCache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
     148: invokespecial #41                 // Method org/apache/kafka/streams/processor/internals/ProcessorContextImpl."<init>":(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
     151: astore        9
     153: aload_2
     154: aload_0
     155: aload         5
     157: aload         6
     159: aload         7
     161: aload         8
     163: aload         9
     165: invokevirtual #42                 // Method createStandbyTask:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/streams/processor/internals/StandbyTask;
     168: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     173: pop
     174: goto          192
     177: aload_0
     178: getfield      #7                  // Field log:Lorg/slf4j/Logger;
     181: ldc           #44                 // String Skipped standby task {} with assigned partitions {} since it does not have any state stores to materialize
     183: aload         5
     185: aload         6
     187: invokeinterface #45,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     192: goto          20
     195: aload_2
     196: areturn

  org.apache.kafka.streams.processor.internals.StandbyTask createStandbyTaskFromActive(org.apache.kafka.streams.processor.internals.StreamTask, java.util.Set<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method org/apache/kafka/streams/processor/internals/StreamTask.processorContext:()Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
       4: astore_3
       5: aload_1
       6: getfield      #47                 // Field org/apache/kafka/streams/processor/internals/StreamTask.stateMgr:Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
       9: astore        4
      11: aload_1
      12: invokevirtual #48                 // Method org/apache/kafka/streams/processor/internals/StreamTask.closeCleanAndRecycleState:()V
      15: aload         4
      17: getstatic     #35                 // Field org/apache/kafka/streams/processor/internals/Task$TaskType.STANDBY:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      20: aload_0
      21: aload_1
      22: invokevirtual #49                 // Method org/apache/kafka/streams/processor/internals/StreamTask.id:()Lorg/apache/kafka/streams/processor/TaskId;
      25: invokespecial #37                 // Method getLogContext:(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/common/utils/LogContext;
      28: invokevirtual #50                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager.transitionTaskType:(Lorg/apache/kafka/streams/processor/internals/Task$TaskType;Lorg/apache/kafka/common/utils/LogContext;)V
      31: aload_0
      32: aload_1
      33: invokevirtual #49                 // Method org/apache/kafka/streams/processor/internals/StreamTask.id:()Lorg/apache/kafka/streams/processor/TaskId;
      36: aload_2
      37: aload_0
      38: getfield      #2                  // Field builder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      41: aload_1
      42: getfield      #51                 // Field org/apache/kafka/streams/processor/internals/StreamTask.id:Lorg/apache/kafka/streams/processor/TaskId;
      45: getfield      #31                 // Field org/apache/kafka/streams/processor/TaskId.topicGroupId:I
      48: invokevirtual #32                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.buildSubtopology:(I)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
      51: aload         4
      53: aload_3
      54: invokevirtual #42                 // Method createStandbyTask:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/streams/processor/internals/StandbyTask;
      57: areturn

  org.apache.kafka.streams.processor.internals.StandbyTask createStandbyTask(org.apache.kafka.streams.processor.TaskId, java.util.Set<org.apache.kafka.common.TopicPartition>, org.apache.kafka.streams.processor.internals.ProcessorTopology, org.apache.kafka.streams.processor.internals.ProcessorStateManager, org.apache.kafka.streams.processor.internals.InternalProcessorContext);
    Code:
       0: new           #52                 // class org/apache/kafka/streams/processor/internals/StandbyTask
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload_0
       8: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      11: aload_0
      12: getfield      #4                  // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      15: aload         4
      17: aload_0
      18: getfield      #5                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
      21: aload_0
      22: getfield      #19                 // Field dummyCache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
      25: aload         5
      27: invokespecial #53                 // Method org/apache/kafka/streams/processor/internals/StandbyTask."<init>":(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
      30: astore        6
      32: aload_0
      33: getfield      #7                  // Field log:Lorg/slf4j/Logger;
      36: ldc           #54                 // String Created task {} with assigned partitions {}
      38: aload_1
      39: aload_2
      40: invokeinterface #45,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #9                  // Field createTaskSensor:Lorg/apache/kafka/common/metrics/Sensor;
      49: invokevirtual #55                 // Method org/apache/kafka/common/metrics/Sensor.record:()V
      52: aload         6
      54: areturn

  public org.apache.kafka.streams.processor.internals.InternalTopologyBuilder builder();
    Code:
       0: aload_0
       1: getfield      #2                  // Field builder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
       4: areturn

  public org.apache.kafka.streams.processor.internals.StateDirectory stateDirectory();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
       4: areturn

  private org.apache.kafka.common.utils.LogContext getLogContext(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: ldc           #12                 // String stream-thread [%s]
       2: iconst_1
       3: anewarray     #13                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: invokestatic  #14                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: invokevirtual #15                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      14: aastore
      15: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      18: astore_2
      19: new           #56                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_2
      27: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #59                 // String %s [%s]
      32: iconst_2
      33: anewarray     #13                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: ldc           #60                 // String standby-task
      40: aastore
      41: dup
      42: iconst_1
      43: aload_1
      44: aastore
      45: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      48: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: astore_3
      55: new           #11                 // class org/apache/kafka/common/utils/LogContext
      58: dup
      59: aload_3
      60: invokespecial #17                 // Method org/apache/kafka/common/utils/LogContext."<init>":(Ljava/lang/String;)V
      63: areturn
}
