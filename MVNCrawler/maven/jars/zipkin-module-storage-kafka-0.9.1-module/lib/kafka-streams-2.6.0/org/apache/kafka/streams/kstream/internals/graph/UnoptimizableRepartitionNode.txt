Compiled from "UnoptimizableRepartitionNode.java"
public class org.apache.kafka.streams.kstream.internals.graph.UnoptimizableRepartitionNode<K, V> extends org.apache.kafka.streams.kstream.internals.graph.BaseRepartitionNode<K, V> {
  private org.apache.kafka.streams.kstream.internals.graph.UnoptimizableRepartitionNode(java.lang.String, java.lang.String, org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, V>, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>, java.lang.String, java.lang.String, org.apache.kafka.streams.processor.StreamPartitioner<K, V>, org.apache.kafka.streams.processor.internals.InternalTopicProperties);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokespecial #2                  // Method org/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode."<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StreamPartitioner;Lorg/apache/kafka/streams/processor/internals/InternalTopicProperties;)V
      19: return

  public void writeToTopology(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field repartitionTopic:Ljava/lang/String;
       5: aload_0
       6: getfield      #4                  // Field internalTopicProperties:Lorg/apache/kafka/streams/processor/internals/InternalTopicProperties;
       9: invokevirtual #5                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addInternalTopic:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/InternalTopicProperties;)V
      12: aload_1
      13: aload_0
      14: getfield      #6                  // Field processorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      17: invokevirtual #7                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorName:()Ljava/lang/String;
      20: aload_0
      21: getfield      #6                  // Field processorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      24: invokevirtual #8                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      27: aload_0
      28: invokevirtual #9                  // Method parentNodeNames:()[Ljava/lang/String;
      31: invokevirtual #10                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addProcessor:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
      34: aload_1
      35: aload_0
      36: getfield      #11                 // Field sinkName:Ljava/lang/String;
      39: aload_0
      40: getfield      #3                  // Field repartitionTopic:Ljava/lang/String;
      43: aload_0
      44: invokevirtual #12                 // Method keySerializer:()Lorg/apache/kafka/common/serialization/Serializer;
      47: aload_0
      48: invokevirtual #13                 // Method valueSerializer:()Lorg/apache/kafka/common/serialization/Serializer;
      51: aload_0
      52: getfield      #14                 // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      55: iconst_1
      56: anewarray     #15                 // class java/lang/String
      59: dup
      60: iconst_0
      61: aload_0
      62: getfield      #6                  // Field processorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      65: invokevirtual #7                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorName:()Ljava/lang/String;
      68: aastore
      69: invokevirtual #16                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addSink:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;[Ljava/lang/String;)V
      72: aload_1
      73: aconst_null
      74: aload_0
      75: getfield      #17                 // Field sourceName:Ljava/lang/String;
      78: new           #18                 // class org/apache/kafka/streams/processor/FailOnInvalidTimestamp
      81: dup
      82: invokespecial #19                 // Method org/apache/kafka/streams/processor/FailOnInvalidTimestamp."<init>":()V
      85: aload_0
      86: invokevirtual #20                 // Method keyDeserializer:()Lorg/apache/kafka/common/serialization/Deserializer;
      89: aload_0
      90: invokevirtual #21                 // Method valueDeserializer:()Lorg/apache/kafka/common/serialization/Deserializer;
      93: iconst_1
      94: anewarray     #15                 // class java/lang/String
      97: dup
      98: iconst_0
      99: aload_0
     100: getfield      #3                  // Field repartitionTopic:Ljava/lang/String;
     103: aastore
     104: invokevirtual #22                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addSource:(Lorg/apache/kafka/streams/Topology$AutoOffsetReset;Ljava/lang/String;Lorg/apache/kafka/streams/processor/TimestampExtractor;Lorg/apache/kafka/common/serialization/Deserializer;Lorg/apache/kafka/common/serialization/Deserializer;[Ljava/lang/String;)V
     107: return

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #25                 // String UnoptimizableRepartitionNode{
       9: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokespecial #27                 // Method org/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode.toString:()Ljava/lang/String;
      16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #28                 // String  }
      21: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public static <K, V> org.apache.kafka.streams.kstream.internals.graph.UnoptimizableRepartitionNode$UnoptimizableRepartitionNodeBuilder<K, V> unoptimizableRepartitionNodeBuilder();
    Code:
       0: new           #30                 // class org/apache/kafka/streams/kstream/internals/graph/UnoptimizableRepartitionNode$UnoptimizableRepartitionNodeBuilder
       3: dup
       4: invokespecial #31                 // Method org/apache/kafka/streams/kstream/internals/graph/UnoptimizableRepartitionNode$UnoptimizableRepartitionNodeBuilder."<init>":()V
       7: areturn

  org.apache.kafka.streams.kstream.internals.graph.UnoptimizableRepartitionNode(java.lang.String, java.lang.String, org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters, org.apache.kafka.common.serialization.Serde, org.apache.kafka.common.serialization.Serde, java.lang.String, java.lang.String, org.apache.kafka.streams.processor.StreamPartitioner, org.apache.kafka.streams.processor.internals.InternalTopicProperties, org.apache.kafka.streams.kstream.internals.graph.UnoptimizableRepartitionNode$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: aload         9
      16: invokespecial #1                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StreamPartitioner;Lorg/apache/kafka/streams/processor/internals/InternalTopicProperties;)V
      19: return
}
