Compiled from "ActiveTaskCreator.java"
class org.apache.kafka.streams.processor.internals.ActiveTaskCreator {
  private final org.apache.kafka.streams.processor.internals.InternalTopologyBuilder builder;

  private final org.apache.kafka.streams.StreamsConfig config;

  private final org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl streamsMetrics;

  private final org.apache.kafka.streams.processor.internals.StateDirectory stateDirectory;

  private final org.apache.kafka.streams.processor.internals.ChangelogReader storeChangelogReader;

  private final org.apache.kafka.streams.state.internals.ThreadCache cache;

  private final org.apache.kafka.common.utils.Time time;

  private final org.apache.kafka.streams.KafkaClientSupplier clientSupplier;

  private final java.lang.String threadId;

  private final org.slf4j.Logger log;

  private final org.apache.kafka.common.metrics.Sensor createTaskSensor;

  private final org.apache.kafka.streams.processor.internals.StreamsProducer threadProducer;

  private final java.util.Map<org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.StreamsProducer> taskProducers;

  private final org.apache.kafka.streams.processor.internals.StreamThread$ProcessingMode processingMode;

  org.apache.kafka.streams.processor.internals.ActiveTaskCreator(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder, org.apache.kafka.streams.StreamsConfig, org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, org.apache.kafka.streams.processor.internals.StateDirectory, org.apache.kafka.streams.processor.internals.ChangelogReader, org.apache.kafka.streams.state.internals.ThreadCache, org.apache.kafka.common.utils.Time, org.apache.kafka.streams.KafkaClientSupplier, java.lang.String, java.util.UUID, org.slf4j.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field builder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field storeChangelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogReader;
      31: aload_0
      32: aload         6
      34: putfield      #7                  // Field cache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
      37: aload_0
      38: aload         7
      40: putfield      #8                  // Field time:Lorg/apache/kafka/common/utils/Time;
      43: aload_0
      44: aload         8
      46: putfield      #9                  // Field clientSupplier:Lorg/apache/kafka/streams/KafkaClientSupplier;
      49: aload_0
      50: aload         9
      52: putfield      #10                 // Field threadId:Ljava/lang/String;
      55: aload_0
      56: aload         11
      58: putfield      #11                 // Field log:Lorg/slf4j/Logger;
      61: aload_0
      62: aload         9
      64: aload_3
      65: invokestatic  #12                 // Method org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.createTaskSensor:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
      68: putfield      #13                 // Field createTaskSensor:Lorg/apache/kafka/common/metrics/Sensor;
      71: aload_0
      72: aload_2
      73: invokestatic  #14                 // Method org/apache/kafka/streams/processor/internals/StreamThread.processingMode:(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      76: putfield      #15                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      79: aload_0
      80: getfield      #15                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      83: getstatic     #16                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_ALPHA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      86: if_acmpne     108
      89: aload_0
      90: aconst_null
      91: putfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      94: aload_0
      95: new           #18                 // class java/util/HashMap
      98: dup
      99: invokespecial #19                 // Method java/util/HashMap."<init>":()V
     102: putfield      #20                 // Field taskProducers:Ljava/util/Map;
     105: goto          176
     108: aload         11
     110: ldc           #21                 // String Creating thread producer client
     112: invokeinterface #22,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     117: ldc           #23                 // String stream-thread [%s]
     119: iconst_1
     120: anewarray     #24                 // class java/lang/Object
     123: dup
     124: iconst_0
     125: invokestatic  #25                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     128: invokevirtual #26                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     131: aastore
     132: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     135: astore        12
     137: new           #28                 // class org/apache/kafka/common/utils/LogContext
     140: dup
     141: aload         12
     143: invokespecial #29                 // Method org/apache/kafka/common/utils/LogContext."<init>":(Ljava/lang/String;)V
     146: astore        13
     148: aload_0
     149: new           #30                 // class org/apache/kafka/streams/processor/internals/StreamsProducer
     152: dup
     153: aload_2
     154: aload         9
     156: aload         8
     158: aconst_null
     159: aload         10
     161: aload         13
     163: invokespecial #31                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer."<init>":(Lorg/apache/kafka/streams/StreamsConfig;Ljava/lang/String;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Lorg/apache/kafka/common/utils/LogContext;)V
     166: putfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
     169: aload_0
     170: invokestatic  #32                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
     173: putfield      #20                 // Field taskProducers:Ljava/util/Map;
     176: return

  public void reInitializeThreadProducer();
    Code:
       0: aload_0
       1: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
       4: invokevirtual #33                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.resetProducer:()V
       7: return

  org.apache.kafka.streams.processor.internals.StreamsProducer streamsProducerForTask(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_0
       1: getfield      #15                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       4: getstatic     #16                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_ALPHA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       7: if_acmpeq     20
      10: new           #34                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #35                 // String Producer per thread is used.
      16: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #20                 // Field taskProducers:Ljava/util/Map;
      24: aload_1
      25: invokeinterface #37,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #30                 // class org/apache/kafka/streams/processor/internals/StreamsProducer
      33: astore_2
      34: aload_2
      35: ifnonnull     65
      38: new           #34                 // class java/lang/IllegalStateException
      41: dup
      42: new           #38                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #40                 // String Unknown TaskId:
      51: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: aload_2
      66: areturn

  org.apache.kafka.streams.processor.internals.StreamsProducer threadProducer();
    Code:
       0: aload_0
       1: getfield      #15                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       4: getstatic     #44                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_BETA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       7: if_acmpeq     20
      10: new           #34                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #45                 // String Exactly-once beta is not enabled.
      16: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      24: areturn

  java.util.Collection<org.apache.kafka.streams.processor.internals.Task> createTasks(org.apache.kafka.clients.consumer.Consumer<byte[], byte[]>, java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.Set<org.apache.kafka.common.TopicPartition>>);
    Code:
       0: new           #46                 // class java/util/ArrayList
       3: dup
       4: invokespecial #47                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_2
       9: invokeinterface #48,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #49,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          179
      31: aload         4
      33: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #52                 // class java/util/Map$Entry
      41: astore        5
      43: aload         5
      45: invokeinterface #53,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      50: checkcast     #54                 // class org/apache/kafka/streams/processor/TaskId
      53: astore        6
      55: aload         5
      57: invokeinterface #55,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      62: checkcast     #56                 // class java/util/Set
      65: astore        7
      67: aload_0
      68: aload         6
      70: invokespecial #57                 // Method getLogContext:(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/common/utils/LogContext;
      73: astore        8
      75: aload_0
      76: getfield      #2                  // Field builder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      79: aload         6
      81: getfield      #58                 // Field org/apache/kafka/streams/processor/TaskId.topicGroupId:I
      84: invokevirtual #59                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.buildSubtopology:(I)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
      87: astore        9
      89: new           #60                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager
      92: dup
      93: aload         6
      95: getstatic     #61                 // Field org/apache/kafka/streams/processor/internals/Task$TaskType.ACTIVE:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      98: aload_0
      99: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
     102: invokestatic  #62                 // Method org/apache/kafka/streams/processor/internals/StreamThread.eosEnabled:(Lorg/apache/kafka/streams/StreamsConfig;)Z
     105: aload         8
     107: aload_0
     108: getfield      #5                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
     111: aload_0
     112: getfield      #6                  // Field storeChangelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogReader;
     115: aload         9
     117: invokevirtual #63                 // Method org/apache/kafka/streams/processor/internals/ProcessorTopology.storeToChangelogTopic:()Ljava/util/Map;
     120: aload         7
     122: invokespecial #64                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager."<init>":(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/Task$TaskType;ZLorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;Ljava/util/Map;Ljava/util/Collection;)V
     125: astore        10
     127: new           #65                 // class org/apache/kafka/streams/processor/internals/ProcessorContextImpl
     130: dup
     131: aload         6
     133: aload_0
     134: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
     137: aload         10
     139: aload_0
     140: getfield      #4                  // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
     143: aload_0
     144: getfield      #7                  // Field cache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
     147: invokespecial #66                 // Method org/apache/kafka/streams/processor/internals/ProcessorContextImpl."<init>":(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
     150: astore        11
     152: aload_3
     153: aload_0
     154: aload         6
     156: aload         7
     158: aload_1
     159: aload         8
     161: aload         9
     163: aload         10
     165: aload         11
     167: invokespecial #67                 // Method createActiveTask:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/streams/processor/internals/StreamTask;
     170: invokeinterface #68,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     175: pop
     176: goto          21
     179: aload_3
     180: areturn

  org.apache.kafka.streams.processor.internals.StreamTask createActiveTaskFromStandby(org.apache.kafka.streams.processor.internals.StandbyTask, java.util.Set<org.apache.kafka.common.TopicPartition>, org.apache.kafka.clients.consumer.Consumer<byte[], byte[]>);
    Code:
       0: aload_1
       1: invokevirtual #69                 // Method org/apache/kafka/streams/processor/internals/StandbyTask.processorContext:()Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
       4: astore        4
       6: aload_1
       7: getfield      #70                 // Field org/apache/kafka/streams/processor/internals/StandbyTask.stateMgr:Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
      10: astore        5
      12: aload_0
      13: aload_1
      14: getfield      #71                 // Field org/apache/kafka/streams/processor/internals/StandbyTask.id:Lorg/apache/kafka/streams/processor/TaskId;
      17: invokespecial #57                 // Method getLogContext:(Lorg/apache/kafka/streams/processor/TaskId;)Lorg/apache/kafka/common/utils/LogContext;
      20: astore        6
      22: aload_1
      23: invokevirtual #72                 // Method org/apache/kafka/streams/processor/internals/StandbyTask.closeCleanAndRecycleState:()V
      26: aload         5
      28: getstatic     #61                 // Field org/apache/kafka/streams/processor/internals/Task$TaskType.ACTIVE:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      31: aload         6
      33: invokevirtual #73                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager.transitionTaskType:(Lorg/apache/kafka/streams/processor/internals/Task$TaskType;Lorg/apache/kafka/common/utils/LogContext;)V
      36: aload_0
      37: aload_1
      38: getfield      #71                 // Field org/apache/kafka/streams/processor/internals/StandbyTask.id:Lorg/apache/kafka/streams/processor/TaskId;
      41: aload_2
      42: aload_3
      43: aload         6
      45: aload_0
      46: getfield      #2                  // Field builder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      49: aload_1
      50: getfield      #71                 // Field org/apache/kafka/streams/processor/internals/StandbyTask.id:Lorg/apache/kafka/streams/processor/TaskId;
      53: getfield      #58                 // Field org/apache/kafka/streams/processor/TaskId.topicGroupId:I
      56: invokevirtual #59                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.buildSubtopology:(I)Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
      59: aload         5
      61: aload         4
      63: invokespecial #67                 // Method createActiveTask:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/streams/processor/internals/StreamTask;
      66: areturn

  private org.apache.kafka.streams.processor.internals.StreamTask createActiveTask(org.apache.kafka.streams.processor.TaskId, java.util.Set<org.apache.kafka.common.TopicPartition>, org.apache.kafka.clients.consumer.Consumer<byte[], byte[]>, org.apache.kafka.common.utils.LogContext, org.apache.kafka.streams.processor.internals.ProcessorTopology, org.apache.kafka.streams.processor.internals.ProcessorStateManager, org.apache.kafka.streams.processor.internals.InternalProcessorContext);
    Code:
       0: aload_0
       1: getfield      #15                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       4: getstatic     #16                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_ALPHA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       7: if_acmpne     63
      10: aload_0
      11: getfield      #11                 // Field log:Lorg/slf4j/Logger;
      14: ldc           #74                 // String Creating producer client for task {}
      16: aload_1
      17: invokeinterface #75,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      22: new           #30                 // class org/apache/kafka/streams/processor/internals/StreamsProducer
      25: dup
      26: aload_0
      27: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      30: aload_0
      31: getfield      #10                 // Field threadId:Ljava/lang/String;
      34: aload_0
      35: getfield      #9                  // Field clientSupplier:Lorg/apache/kafka/streams/KafkaClientSupplier;
      38: aload_1
      39: aconst_null
      40: aload         4
      42: invokespecial #31                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer."<init>":(Lorg/apache/kafka/streams/StreamsConfig;Ljava/lang/String;Lorg/apache/kafka/streams/KafkaClientSupplier;Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Lorg/apache/kafka/common/utils/LogContext;)V
      45: astore        8
      47: aload_0
      48: getfield      #20                 // Field taskProducers:Ljava/util/Map;
      51: aload_1
      52: aload         8
      54: invokeinterface #76,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: goto          69
      63: aload_0
      64: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      67: astore        8
      69: new           #77                 // class org/apache/kafka/streams/processor/internals/RecordCollectorImpl
      72: dup
      73: aload         4
      75: aload_1
      76: aload         8
      78: aload_0
      79: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      82: invokevirtual #78                 // Method org/apache/kafka/streams/StreamsConfig.defaultProductionExceptionHandler:()Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;
      85: aload_0
      86: getfield      #4                  // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      89: invokespecial #79                 // Method org/apache/kafka/streams/processor/internals/RecordCollectorImpl."<init>":(Lorg/apache/kafka/common/utils/LogContext;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/StreamsProducer;Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)V
      92: astore        9
      94: new           #80                 // class org/apache/kafka/streams/processor/internals/StreamTask
      97: dup
      98: aload_1
      99: aload_2
     100: aload         5
     102: aload_3
     103: aload_0
     104: getfield      #3                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
     107: aload_0
     108: getfield      #4                  // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
     111: aload_0
     112: getfield      #5                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
     115: aload_0
     116: getfield      #7                  // Field cache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
     119: aload_0
     120: getfield      #8                  // Field time:Lorg/apache/kafka/common/utils/Time;
     123: aload         6
     125: aload         9
     127: aload         7
     129: invokespecial #81                 // Method org/apache/kafka/streams/processor/internals/StreamTask."<init>":(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;Lorg/apache/kafka/clients/consumer/Consumer;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateDirectory;Lorg/apache/kafka/streams/state/internals/ThreadCache;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;Lorg/apache/kafka/streams/processor/internals/RecordCollector;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)V
     132: astore        10
     134: aload_0
     135: getfield      #11                 // Field log:Lorg/slf4j/Logger;
     138: ldc           #82                 // String Created task {} with assigned partitions {}
     140: aload_1
     141: aload_2
     142: invokeinterface #83,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     147: aload_0
     148: getfield      #13                 // Field createTaskSensor:Lorg/apache/kafka/common/metrics/Sensor;
     151: invokevirtual #84                 // Method org/apache/kafka/common/metrics/Sensor.record:()V
     154: aload         10
     156: areturn

  void closeThreadProducerIfNeeded();
    Code:
       0: aload_0
       1: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
       4: ifnull        29
       7: aload_0
       8: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      11: invokevirtual #85                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.close:()V
      14: goto          29
      17: astore_1
      18: new           #87                 // class org/apache/kafka/streams/errors/StreamsException
      21: dup
      22: ldc           #88                 // String Thread producer encounter error trying to close.
      24: aload_1
      25: invokespecial #89                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: athrow
      29: return
    Exception table:
       from    to  target type
           7    14    17   Class java/lang/RuntimeException

  void closeAndRemoveTaskProducerIfNeeded(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_0
       1: getfield      #20                 // Field taskProducers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #30                 // class org/apache/kafka/streams/processor/internals/StreamsProducer
      13: astore_2
      14: aload_2
      15: ifnull        59
      18: aload_2
      19: invokevirtual #85                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.close:()V
      22: goto          59
      25: astore_3
      26: new           #87                 // class org/apache/kafka/streams/errors/StreamsException
      29: dup
      30: new           #38                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #91                 // String [
      39: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: ldc           #92                 // String ] task producer encounter error trying to close.
      48: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: aload_3
      55: invokespecial #89                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      58: athrow
      59: return
    Exception table:
       from    to  target type
          18    22    25   Class java/lang/RuntimeException

  java.util.Map<org.apache.kafka.common.MetricName, org.apache.kafka.common.Metric> producerMetrics();
    Code:
       0: aload_0
       1: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
       4: ifnull        17
       7: aload_0
       8: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      11: invokestatic  #93                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: goto          26
      17: aload_0
      18: getfield      #20                 // Field taskProducers:Ljava/util/Map;
      21: invokeinterface #94,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      26: astore_1
      27: aload_1
      28: invokestatic  #95                 // Method org/apache/kafka/streams/processor/internals/ClientUtils.producerMetrics:(Ljava/util/Collection;)Ljava/util/Map;
      31: areturn

  java.util.Set<java.lang.String> producerClientIds();
    Code:
       0: aload_0
       1: getfield      #17                 // Field threadProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
       4: ifnull        18
       7: aload_0
       8: getfield      #10                 // Field threadId:Ljava/lang/String;
      11: invokestatic  #96                 // Method org/apache/kafka/streams/processor/internals/ClientUtils.getThreadProducerClientId:(Ljava/lang/String;)Ljava/lang/String;
      14: invokestatic  #93                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      17: areturn
      18: aload_0
      19: getfield      #20                 // Field taskProducers:Ljava/util/Map;
      22: invokeinterface #97,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      27: invokeinterface #98,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      32: aload_0
      33: invokedynamic #99,  0             // InvokeDynamic #0:apply:(Lorg/apache/kafka/streams/processor/internals/ActiveTaskCreator;)Ljava/util/function/Function;
      38: invokeinterface #100,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: invokestatic  #101                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      46: invokeinterface #102,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      51: checkcast     #56                 // class java/util/Set
      54: areturn

  private org.apache.kafka.common.utils.LogContext getLogContext(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: ldc           #23                 // String stream-thread [%s]
       2: iconst_1
       3: anewarray     #24                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: invokestatic  #25                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      11: invokevirtual #26                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      14: aastore
      15: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      18: astore_2
      19: new           #38                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_2
      27: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #103                // String %s [%s]
      32: iconst_2
      33: anewarray     #24                 // class java/lang/Object
      36: dup
      37: iconst_0
      38: ldc           #104                // String task
      40: aastore
      41: dup
      42: iconst_1
      43: aload_1
      44: aastore
      45: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      48: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: astore_3
      55: new           #28                 // class org/apache/kafka/common/utils/LogContext
      58: dup
      59: aload_3
      60: invokespecial #29                 // Method org/apache/kafka/common/utils/LogContext."<init>":(Ljava/lang/String;)V
      63: areturn

  private java.lang.String lambda$producerClientIds$0(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_0
       1: getfield      #10                 // Field threadId:Ljava/lang/String;
       4: aload_1
       5: invokestatic  #105                // Method org/apache/kafka/streams/processor/internals/ClientUtils.getTaskProducerClientId:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TaskId;)Ljava/lang/String;
       8: areturn
}
