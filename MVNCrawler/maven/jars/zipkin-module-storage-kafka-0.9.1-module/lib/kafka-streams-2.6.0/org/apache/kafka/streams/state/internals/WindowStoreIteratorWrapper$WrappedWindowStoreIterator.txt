Compiled from "WindowStoreIteratorWrapper.java"
class org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator implements org.apache.kafka.streams.state.WindowStoreIterator<byte[]> {
  final org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> bytesIterator;

  org.apache.kafka.streams.state.internals.WindowStoreIteratorWrapper$WrappedWindowStoreIterator(org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field bytesIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       9: return

  public java.lang.Long peekNextKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bytesIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #3,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.peekNextKey:()Ljava/lang/Object;
       9: checkcast     #4                  // class org/apache/kafka/common/utils/Bytes
      12: invokevirtual #5                  // Method org/apache/kafka/common/utils/Bytes.get:()[B
      15: invokestatic  #6                  // Method org/apache/kafka/streams/state/internals/WindowKeySchema.extractStoreTimestamp:([B)J
      18: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bytesIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #8,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.hasNext:()Z
       9: ireturn

  public org.apache.kafka.streams.KeyValue<java.lang.Long, byte[]> next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bytesIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.next:()Ljava/lang/Object;
       9: checkcast     #10                 // class org/apache/kafka/streams/KeyValue
      12: astore_1
      13: aload_1
      14: getfield      #11                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      17: checkcast     #4                  // class org/apache/kafka/common/utils/Bytes
      20: invokevirtual #5                  // Method org/apache/kafka/common/utils/Bytes.get:()[B
      23: invokestatic  #6                  // Method org/apache/kafka/streams/state/internals/WindowKeySchema.extractStoreTimestamp:([B)J
      26: lstore_2
      27: lload_2
      28: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aload_1
      32: getfield      #12                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      35: invokestatic  #13                 // Method org/apache/kafka/streams/KeyValue.pair:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
      38: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field bytesIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #14,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.close:()V
       9: return

  public java.lang.Object peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method peekNextKey:()Ljava/lang/Long;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method next:()Lorg/apache/kafka/streams/KeyValue;
       4: areturn
}
