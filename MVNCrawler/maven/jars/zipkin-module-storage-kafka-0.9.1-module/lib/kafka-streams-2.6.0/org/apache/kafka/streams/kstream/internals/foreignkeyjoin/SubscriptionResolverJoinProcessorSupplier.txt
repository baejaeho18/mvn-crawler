Compiled from "SubscriptionResolverJoinProcessorSupplier.java"
public class org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier<K, V, VO, VR> implements org.apache.kafka.streams.processor.ProcessorSupplier<K, org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<VO>> {
  private final org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K, V> valueGetterSupplier;

  private final org.apache.kafka.common.serialization.Serializer<V> constructionTimeValueSerializer;

  private final java.util.function.Supplier<java.lang.String> valueHashSerdePseudoTopicSupplier;

  private final org.apache.kafka.streams.kstream.ValueJoiner<V, VO, VR> joiner;

  private final boolean leftJoin;

  public org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier(org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K, V>, org.apache.kafka.common.serialization.Serializer<V>, java.util.function.Supplier<java.lang.String>, org.apache.kafka.streams.kstream.ValueJoiner<V, VO, VR>, boolean);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field valueGetterSupplier:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
       9: aload_0
      10: aload_2
      11: putfield      #5                  // Field constructionTimeValueSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field valueHashSerdePseudoTopicSupplier:Ljava/util/function/Supplier;
      19: aload_0
      20: aload         4
      22: putfield      #1                  // Field joiner:Lorg/apache/kafka/streams/kstream/ValueJoiner;
      25: aload_0
      26: iload         5
      28: putfield      #2                  // Field leftJoin:Z
      31: return

  public org.apache.kafka.streams.processor.Processor<K, org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResponseWrapper<VO>> get();
    Code:
       0: new           #7                  // class org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplier$1
       3: dup
       4: aload_0
       5: invokespecial #8                  // Method org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplier$1."<init>":(Lorg/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplier;)V
       8: areturn

  static org.apache.kafka.common.serialization.Serializer access$000(org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier);
    Code:
       0: aload_0
       1: getfield      #5                  // Field constructionTimeValueSerializer:Lorg/apache/kafka/common/serialization/Serializer;
       4: areturn

  static java.util.function.Supplier access$100(org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier);
    Code:
       0: aload_0
       1: getfield      #4                  // Field valueHashSerdePseudoTopicSupplier:Ljava/util/function/Supplier;
       4: areturn

  static org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier access$200(org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier);
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueGetterSupplier:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;
       4: areturn

  static boolean access$300(org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier);
    Code:
       0: aload_0
       1: getfield      #2                  // Field leftJoin:Z
       4: ireturn

  static org.apache.kafka.streams.kstream.ValueJoiner access$400(org.apache.kafka.streams.kstream.internals.foreignkeyjoin.SubscriptionResolverJoinProcessorSupplier);
    Code:
       0: aload_0
       1: getfield      #1                  // Field joiner:Lorg/apache/kafka/streams/kstream/ValueJoiner;
       4: areturn
}
