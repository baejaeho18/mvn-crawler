Compiled from "KTableKTableJoinNode.java"
public final class org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> {
  private java.lang.String nodeName;

  private org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, org.apache.kafka.streams.kstream.internals.Change<V1>> joinThisProcessorParameters;

  private org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, org.apache.kafka.streams.kstream.internals.Change<V2>> joinOtherProcessorParameters;

  private java.lang.String thisJoinSide;

  private java.lang.String otherJoinSide;

  private org.apache.kafka.common.serialization.Serde<K> keySerde;

  private org.apache.kafka.common.serialization.Serde<VR> valueSerde;

  private java.lang.String[] joinThisStoreNames;

  private java.lang.String[] joinOtherStoreNames;

  private java.lang.String queryableStoreName;

  private org.apache.kafka.streams.state.StoreBuilder<org.apache.kafka.streams.state.TimestampedKeyValueStore<K, VR>> storeBuilder;

  private org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withNodeName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field nodeName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withJoinThisProcessorParameters(org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, org.apache.kafka.streams.kstream.internals.Change<V1>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field joinThisProcessorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withJoinOtherProcessorParameters(org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, org.apache.kafka.streams.kstream.internals.Change<V2>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field joinOtherProcessorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withThisJoinSideNodeName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field thisJoinSide:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withOtherJoinSideNodeName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field otherJoinSide:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withKeySerde(org.apache.kafka.common.serialization.Serde<K>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withValueSerde(org.apache.kafka.common.serialization.Serde<VR>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withJoinThisStoreNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field joinThisStoreNames:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withJoinOtherStoreNames(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field joinOtherStoreNames:[Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withQueryableStoreName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field queryableStoreName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> withStoreBuilder(org.apache.kafka.streams.state.StoreBuilder<org.apache.kafka.streams.state.TimestampedKeyValueStore<K, VR>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K, V1, V2, VR> build();
    Code:
       0: new           #14                 // class org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode
       3: dup
       4: aload_0
       5: getfield      #3                  // Field nodeName:Ljava/lang/String;
       8: aload_0
       9: getfield      #4                  // Field joinThisProcessorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      12: aload_0
      13: getfield      #5                  // Field joinOtherProcessorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      16: new           #15                 // class org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters
      19: dup
      20: aload_0
      21: getfield      #4                  // Field joinThisProcessorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      24: invokevirtual #16                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      27: checkcast     #17                 // class org/apache/kafka/streams/kstream/internals/KTableProcessorSupplier
      30: aload_0
      31: getfield      #5                  // Field joinOtherProcessorParameters:Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      34: invokevirtual #16                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      37: checkcast     #17                 // class org/apache/kafka/streams/kstream/internals/KTableProcessorSupplier
      40: aload_0
      41: getfield      #12                 // Field queryableStoreName:Ljava/lang/String;
      44: invokestatic  #18                 // Method org/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger.of:(Lorg/apache/kafka/streams/kstream/internals/KTableProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/KTableProcessorSupplier;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger;
      47: aload_0
      48: getfield      #3                  // Field nodeName:Ljava/lang/String;
      51: invokespecial #19                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters."<init>":(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/lang/String;)V
      54: aload_0
      55: getfield      #6                  // Field thisJoinSide:Ljava/lang/String;
      58: aload_0
      59: getfield      #7                  // Field otherJoinSide:Ljava/lang/String;
      62: aload_0
      63: getfield      #8                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      66: aload_0
      67: getfield      #9                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      70: aload_0
      71: getfield      #10                 // Field joinThisStoreNames:[Ljava/lang/String;
      74: aload_0
      75: getfield      #11                 // Field joinOtherStoreNames:[Ljava/lang/String;
      78: aload_0
      79: getfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      82: invokespecial #20                 // Method org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;[Ljava/lang/String;[Ljava/lang/String;Lorg/apache/kafka/streams/state/StoreBuilder;)V
      85: areturn

  org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder(org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
