Compiled from "StickyTaskAssignor.java"
public class org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor implements org.apache.kafka.streams.processor.internals.assignment.TaskAssignor {
  private static final org.slf4j.Logger log;

  private java.util.Map<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState> clients;

  private java.util.Set<org.apache.kafka.streams.processor.TaskId> allTaskIds;

  private java.util.Set<org.apache.kafka.streams.processor.TaskId> standbyTaskIds;

  private final java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.UUID> previousActiveTaskAssignment;

  private final java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.Set<java.util.UUID>> previousStandbyTaskAssignment;

  private org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor$TaskPairs taskPairs;

  private final boolean mustPreserveActiveTaskAssignment;

  public org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field previousActiveTaskAssignment:Ljava/util/Map;
      15: aload_0
      16: new           #3                  // class java/util/HashMap
      19: dup
      20: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      23: putfield      #6                  // Field previousStandbyTaskAssignment:Ljava/util/Map;
      26: aload_0
      27: iload_1
      28: putfield      #7                  // Field mustPreserveActiveTaskAssignment:Z
      31: return

  public boolean assign(java.util.Map<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.util.Set<org.apache.kafka.streams.processor.TaskId>, java.util.Set<org.apache.kafka.streams.processor.TaskId>, org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration$AssignmentConfigs);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field clients:Ljava/util/Map;
       5: aload_0
       6: aload_2
       7: putfield      #9                  // Field allTaskIds:Ljava/util/Set;
      10: aload_0
      11: aload_3
      12: putfield      #10                 // Field standbyTaskIds:Ljava/util/Set;
      15: aload_2
      16: invokeinterface #11,  1           // InterfaceMethod java/util/Set.size:()I
      21: aload_2
      22: invokeinterface #11,  1           // InterfaceMethod java/util/Set.size:()I
      27: iconst_1
      28: isub
      29: imul
      30: iconst_2
      31: idiv
      32: istore        5
      34: aload_0
      35: new           #12                 // class org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs
      38: dup
      39: iload         5
      41: invokespecial #13                 // Method org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs."<init>":(I)V
      44: putfield      #14                 // Field taskPairs:Lorg/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs;
      47: aload_0
      48: aload_1
      49: invokespecial #15                 // Method mapPreviousTaskAssignment:(Ljava/util/Map;)V
      52: aload_0
      53: invokespecial #16                 // Method assignActive:()V
      56: aload_0
      57: aload         4
      59: getfield      #17                 // Field org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs.numStandbyReplicas:I
      62: invokespecial #18                 // Method assignStandby:(I)V
      65: iconst_0
      66: ireturn

  private void assignStandby(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field standbyTaskIds:Ljava/util/Set;
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          110
      19: aload_2
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #22                 // class org/apache/kafka/streams/processor/TaskId
      28: astore_3
      29: iconst_0
      30: istore        4
      32: iload         4
      34: iload_1
      35: if_icmpge     107
      38: aload_0
      39: aload_3
      40: invokespecial #23                 // Method findClientsWithoutAssignedTask:(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/Set;
      43: astore        5
      45: aload         5
      47: invokeinterface #24,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      52: ifeq          93
      55: getstatic     #25                 // Field log:Lorg/slf4j/Logger;
      58: ldc           #26                 // String Unable to assign {} of {} standby tasks for task [{}]. There is not enough available capacity. You should increase the number of threads and/or application instances to maintain the requested number of standby replicas.
      60: iconst_3
      61: anewarray     #27                 // class java/lang/Object
      64: dup
      65: iconst_0
      66: iload_1
      67: iload         4
      69: isub
      70: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      73: aastore
      74: dup
      75: iconst_1
      76: iload_1
      77: invokestatic  #28                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: aastore
      81: dup
      82: iconst_2
      83: aload_3
      84: aastore
      85: invokeinterface #29,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
      90: goto          107
      93: aload_0
      94: aload_3
      95: aload         5
      97: iconst_0
      98: invokespecial #30                 // Method allocateTaskWithClientCandidates:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Z)V
     101: iinc          4, 1
     104: goto          32
     107: goto          10
     110: return

  private void assignActive();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field clients:Ljava/util/Map;
       5: invokeinterface #31,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      10: invokespecial #32                 // Method sumCapacity:(Ljava/util/Collection;)I
      13: istore_1
      14: aload_0
      15: getfield      #9                  // Field allTaskIds:Ljava/util/Set;
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Set.size:()I
      23: iload_1
      24: idiv
      25: istore_2
      26: new           #33                 // class java/util/HashSet
      29: dup
      30: invokespecial #34                 // Method java/util/HashSet."<init>":()V
      33: astore_3
      34: aload_0
      35: getfield      #5                  // Field previousActiveTaskAssignment:Ljava/util/Map;
      38: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      43: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore        4
      50: aload         4
      52: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          147
      60: aload         4
      62: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #36                 // class java/util/Map$Entry
      70: astore        5
      72: aload         5
      74: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      79: checkcast     #22                 // class org/apache/kafka/streams/processor/TaskId
      82: astore        6
      84: aload_0
      85: getfield      #9                  // Field allTaskIds:Ljava/util/Set;
      88: aload         6
      90: invokeinterface #38,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      95: ifeq          144
      98: aload_0
      99: getfield      #8                  // Field clients:Ljava/util/Map;
     102: aload         5
     104: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     109: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     114: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     117: astore        7
     119: aload_0
     120: getfield      #7                  // Field mustPreserveActiveTaskAssignment:Z
     123: ifne          135
     126: aload         7
     128: iload_2
     129: invokevirtual #42                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasUnfulfilledQuota:(I)Z
     132: ifeq          144
     135: aload_0
     136: aload_3
     137: aload         6
     139: aload         7
     141: invokespecial #43                 // Method assignTaskToClient:(Ljava/util/Set;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)V
     144: goto          50
     147: new           #33                 // class java/util/HashSet
     150: dup
     151: aload_0
     152: getfield      #9                  // Field allTaskIds:Ljava/util/Set;
     155: invokespecial #44                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     158: astore        4
     160: aload         4
     162: aload_3
     163: invokeinterface #45,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     168: pop
     169: aload         4
     171: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     176: astore        5
     178: aload         5
     180: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     185: ifeq          302
     188: aload         5
     190: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     195: checkcast     #22                 // class org/apache/kafka/streams/processor/TaskId
     198: astore        6
     200: aload_0
     201: getfield      #6                  // Field previousStandbyTaskAssignment:Ljava/util/Map;
     204: aload         6
     206: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     211: checkcast     #46                 // class java/util/Set
     214: astore        7
     216: aload         7
     218: ifnull        299
     221: aload         7
     223: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     228: astore        8
     230: aload         8
     232: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     237: ifeq          299
     240: aload         8
     242: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     247: checkcast     #47                 // class java/util/UUID
     250: astore        9
     252: aload_0
     253: getfield      #8                  // Field clients:Ljava/util/Map;
     256: aload         9
     258: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     263: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     266: astore        10
     268: aload         10
     270: iload_2
     271: invokevirtual #42                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasUnfulfilledQuota:(I)Z
     274: ifeq          296
     277: aload_0
     278: aload_3
     279: aload         6
     281: aload         10
     283: invokespecial #43                 // Method assignTaskToClient:(Ljava/util/Set;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)V
     286: aload         5
     288: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.remove:()V
     293: goto          299
     296: goto          230
     299: goto          178
     302: new           #49                 // class java/util/ArrayList
     305: dup
     306: aload         4
     308: invokespecial #50                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
     311: astore        5
     313: aload         5
     315: invokestatic  #51                 // Method java/util/Collections.sort:(Ljava/util/List;)V
     318: aload         5
     320: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     325: astore        6
     327: aload         6
     329: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     334: ifeq          368
     337: aload         6
     339: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     344: checkcast     #22                 // class org/apache/kafka/streams/processor/TaskId
     347: astore        7
     349: aload_0
     350: aload         7
     352: aload_0
     353: getfield      #8                  // Field clients:Ljava/util/Map;
     356: invokeinterface #53,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     361: iconst_1
     362: invokespecial #30                 // Method allocateTaskWithClientCandidates:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Z)V
     365: goto          327
     368: return

  private void allocateTaskWithClientCandidates(org.apache.kafka.streams.processor.TaskId, java.util.Set<java.util.UUID>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #54                 // Method findClient:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
       6: astore        4
       8: aload_0
       9: getfield      #14                 // Field taskPairs:Lorg/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs;
      12: aload_1
      13: aload         4
      15: invokevirtual #55                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTasks:()Ljava/util/Set;
      18: invokevirtual #56                 // Method org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs.addPairs:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)V
      21: iload_3
      22: ifeq          34
      25: aload         4
      27: aload_1
      28: invokevirtual #57                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      31: goto          40
      34: aload         4
      36: aload_1
      37: invokevirtual #58                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignStandby:(Lorg/apache/kafka/streams/processor/TaskId;)V
      40: return

  private void assignTaskToClient(java.util.Set<org.apache.kafka.streams.processor.TaskId>, org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.assignment.ClientState);
    Code:
       0: aload_0
       1: getfield      #14                 // Field taskPairs:Lorg/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs;
       4: aload_2
       5: aload_3
       6: invokevirtual #55                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTasks:()Ljava/util/Set;
       9: invokevirtual #56                 // Method org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs.addPairs:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)V
      12: aload_3
      13: aload_2
      14: invokevirtual #57                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      17: aload_1
      18: aload_2
      19: invokeinterface #59,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: return

  private java.util.Set<java.util.UUID> findClientsWithoutAssignedTask(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: new           #33                 // class java/util/HashSet
       3: dup
       4: invokespecial #34                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #8                  // Field clients:Ljava/util/Map;
      12: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          77
      32: aload_3
      33: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #36                 // class java/util/Map$Entry
      41: astore        4
      43: aload         4
      45: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      50: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      53: aload_1
      54: invokevirtual #60                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasAssignedTask:(Lorg/apache/kafka/streams/processor/TaskId;)Z
      57: ifne          74
      60: aload_2
      61: aload         4
      63: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      68: invokeinterface #59,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      73: pop
      74: goto          23
      77: aload_2
      78: areturn

  private org.apache.kafka.streams.processor.internals.assignment.ClientState findClient(org.apache.kafka.streams.processor.TaskId, java.util.Set<java.util.UUID>);
    Code:
       0: aload_2
       1: invokeinterface #11,  1           // InterfaceMethod java/util/Set.size:()I
       6: iconst_1
       7: if_icmpne     34
      10: aload_0
      11: getfield      #8                  // Field clients:Ljava/util/Map;
      14: aload_2
      15: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      33: areturn
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokespecial #61                 // Method findClientsWithPreviousAssignedTask:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
      40: astore_3
      41: aload_3
      42: ifnonnull     52
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokespecial #62                 // Method leastLoaded:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
      51: areturn
      52: aload_0
      53: aload_3
      54: invokespecial #63                 // Method shouldBalanceLoad:(Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)Z
      57: ifeq          92
      60: aload_0
      61: aload_1
      62: aload_2
      63: invokespecial #64                 // Method findLeastLoadedClientWithPreviousStandByTask:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
      66: astore        4
      68: aload         4
      70: ifnull        82
      73: aload_0
      74: aload         4
      76: invokespecial #63                 // Method shouldBalanceLoad:(Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)Z
      79: ifeq          89
      82: aload_0
      83: aload_1
      84: aload_2
      85: invokespecial #62                 // Method leastLoaded:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
      88: areturn
      89: aload         4
      91: areturn
      92: aload_3
      93: areturn

  private boolean shouldBalanceLoad(org.apache.kafka.streams.processor.internals.assignment.ClientState);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.reachedCapacity:()Z
       4: ifeq          19
       7: aload_0
       8: aload_1
       9: invokespecial #66                 // Method hasClientsWithMoreAvailableCapacity:(Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)Z
      12: ifeq          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  private boolean hasClientsWithMoreAvailableCapacity(org.apache.kafka.streams.processor.internals.assignment.ClientState);
    Code:
       0: aload_0
       1: getfield      #8                  // Field clients:Ljava/util/Map;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          47
      24: aload_2
      25: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokevirtual #68                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasMoreAvailableCapacityThan:(Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: goto          15
      47: iconst_0
      48: ireturn

  private org.apache.kafka.streams.processor.internals.assignment.ClientState findClientsWithPreviousAssignedTask(org.apache.kafka.streams.processor.TaskId, java.util.Set<java.util.UUID>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field previousActiveTaskAssignment:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #47                 // class java/util/UUID
      13: astore_3
      14: aload_3
      15: ifnull        42
      18: aload_2
      19: aload_3
      20: invokeinterface #38,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      25: ifeq          42
      28: aload_0
      29: getfield      #8                  // Field clients:Ljava/util/Map;
      32: aload_3
      33: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      41: areturn
      42: aload_0
      43: aload_1
      44: aload_2
      45: invokespecial #64                 // Method findLeastLoadedClientWithPreviousStandByTask:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
      48: areturn

  private org.apache.kafka.streams.processor.internals.assignment.ClientState findLeastLoadedClientWithPreviousStandByTask(org.apache.kafka.streams.processor.TaskId, java.util.Set<java.util.UUID>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field previousStandbyTaskAssignment:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #46                 // class java/util/Set
      13: astore_3
      14: aload_3
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: new           #33                 // class java/util/HashSet
      23: dup
      24: aload_3
      25: invokespecial #44                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      28: astore        4
      30: aload         4
      32: aload_2
      33: invokevirtual #69                 // Method java/util/HashSet.retainAll:(Ljava/util/Collection;)Z
      36: pop
      37: aload_0
      38: aload_1
      39: aload         4
      41: invokespecial #62                 // Method leastLoaded:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
      44: areturn

  private org.apache.kafka.streams.processor.internals.assignment.ClientState leastLoaded(org.apache.kafka.streams.processor.TaskId, java.util.Set<java.util.UUID>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #70                 // Method findLeastLoaded:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Z)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
       7: astore_3
       8: aload_3
       9: ifnonnull     20
      12: aload_0
      13: aload_1
      14: aload_2
      15: iconst_0
      16: invokespecial #70                 // Method findLeastLoaded:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;Z)Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;
      19: areturn
      20: aload_3
      21: areturn

  private org.apache.kafka.streams.processor.internals.assignment.ClientState findLeastLoaded(org.apache.kafka.streams.processor.TaskId, java.util.Set<java.util.UUID>, boolean);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_2
       4: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          109
      21: aload         5
      23: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #47                 // class java/util/UUID
      31: astore        6
      33: aload_0
      34: getfield      #8                  // Field clients:Ljava/util/Map;
      37: aload         6
      39: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      47: astore        7
      49: aload         7
      51: invokevirtual #71                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskCount:()I
      54: ifne          60
      57: aload         7
      59: areturn
      60: aload         4
      62: ifnull        75
      65: aload         7
      67: aload         4
      69: invokevirtual #68                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasMoreAvailableCapacityThan:(Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)Z
      72: ifeq          106
      75: iload_3
      76: ifne          86
      79: aload         7
      81: astore        4
      83: goto          106
      86: aload_0
      87: getfield      #14                 // Field taskPairs:Lorg/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs;
      90: aload_1
      91: aload         7
      93: invokevirtual #55                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTasks:()Ljava/util/Set;
      96: invokevirtual #72                 // Method org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor$TaskPairs.hasNewPair:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/Set;)Z
      99: ifeq          106
     102: aload         7
     104: astore        4
     106: goto          11
     109: aload         4
     111: areturn

  private void mapPreviousTaskAssignment(java.util.Map<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>);
    Code:
       0: aload_1
       1: invokeinterface #35,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          183
      21: aload_2
      22: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #36                 // class java/util/Map$Entry
      30: astore_3
      31: aload_3
      32: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      37: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      40: invokevirtual #73                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.prevActiveTasks:()Ljava/util/Set;
      43: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore        4
      50: aload         4
      52: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          93
      60: aload         4
      62: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #22                 // class org/apache/kafka/streams/processor/TaskId
      70: astore        5
      72: aload_0
      73: getfield      #5                  // Field previousActiveTaskAssignment:Ljava/util/Map;
      76: aload         5
      78: aload_3
      79: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      84: invokeinterface #74,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: goto          50
      93: aload_3
      94: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      99: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     102: invokevirtual #75                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.prevStandbyTasks:()Ljava/util/Set;
     105: invokeinterface #19,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     110: astore        4
     112: aload         4
     114: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifeq          180
     122: aload         4
     124: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     129: checkcast     #22                 // class org/apache/kafka/streams/processor/TaskId
     132: astore        5
     134: aload_0
     135: getfield      #6                  // Field previousStandbyTaskAssignment:Ljava/util/Map;
     138: aload         5
     140: invokedynamic #76,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     145: invokeinterface #77,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     150: pop
     151: aload_0
     152: getfield      #6                  // Field previousStandbyTaskAssignment:Ljava/util/Map;
     155: aload         5
     157: invokeinterface #40,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     162: checkcast     #46                 // class java/util/Set
     165: aload_3
     166: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     171: invokeinterface #59,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     176: pop
     177: goto          112
     180: goto          12
     183: return

  private int sumCapacity(java.util.Collection<org.apache.kafka.streams.processor.internals.assignment.ClientState>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          40
      18: aload_3
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #41                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      27: astore        4
      29: iload_2
      30: aload         4
      32: invokevirtual #78                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.capacity:()I
      35: iadd
      36: istore_2
      37: goto          9
      40: iload_2
      41: ireturn

  private static java.util.Set lambda$mapPreviousTaskAssignment$0(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: new           #33                 // class java/util/HashSet
       3: dup
       4: invokespecial #34                 // Method java/util/HashSet."<init>":()V
       7: areturn

  static {};
    Code:
       0: ldc           #79                 // class org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor
       2: invokestatic  #80                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #25                 // Field log:Lorg/slf4j/Logger;
       8: return
}
