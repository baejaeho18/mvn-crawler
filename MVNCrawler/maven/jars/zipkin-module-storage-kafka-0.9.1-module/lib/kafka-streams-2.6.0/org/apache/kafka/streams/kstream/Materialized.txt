Compiled from "Materialized.java"
public class org.apache.kafka.streams.kstream.Materialized<K, V, S extends org.apache.kafka.streams.processor.StateStore> {
  protected org.apache.kafka.streams.state.StoreSupplier<S> storeSupplier;

  protected java.lang.String storeName;

  protected org.apache.kafka.common.serialization.Serde<V> valueSerde;

  protected org.apache.kafka.common.serialization.Serde<K> keySerde;

  protected boolean loggingEnabled;

  protected boolean cachingEnabled;

  protected java.util.Map<java.lang.String, java.lang.String> topicConfig;

  protected java.time.Duration retention;

  private org.apache.kafka.streams.kstream.Materialized(org.apache.kafka.streams.state.StoreSupplier<S>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field loggingEnabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field cachingEnabled:Z
      14: aload_0
      15: new           #4                  // class java/util/HashMap
      18: dup
      19: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      22: putfield      #6                  // Field topicConfig:Ljava/util/Map;
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field storeSupplier:Lorg/apache/kafka/streams/state/StoreSupplier;
      30: return

  private org.apache.kafka.streams.kstream.Materialized(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field loggingEnabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field cachingEnabled:Z
      14: aload_0
      15: new           #4                  // class java/util/HashMap
      18: dup
      19: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      22: putfield      #6                  // Field topicConfig:Ljava/util/Map;
      25: aload_0
      26: aload_1
      27: putfield      #8                  // Field storeName:Ljava/lang/String;
      30: return

  protected org.apache.kafka.streams.kstream.Materialized(org.apache.kafka.streams.kstream.Materialized<K, V, S>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field loggingEnabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field cachingEnabled:Z
      14: aload_0
      15: new           #4                  // class java/util/HashMap
      18: dup
      19: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      22: putfield      #6                  // Field topicConfig:Ljava/util/Map;
      25: aload_0
      26: aload_1
      27: getfield      #7                  // Field storeSupplier:Lorg/apache/kafka/streams/state/StoreSupplier;
      30: putfield      #7                  // Field storeSupplier:Lorg/apache/kafka/streams/state/StoreSupplier;
      33: aload_0
      34: aload_1
      35: getfield      #8                  // Field storeName:Ljava/lang/String;
      38: putfield      #8                  // Field storeName:Ljava/lang/String;
      41: aload_0
      42: aload_1
      43: getfield      #9                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      46: putfield      #9                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      49: aload_0
      50: aload_1
      51: getfield      #10                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      54: putfield      #10                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      57: aload_0
      58: aload_1
      59: getfield      #2                  // Field loggingEnabled:Z
      62: putfield      #2                  // Field loggingEnabled:Z
      65: aload_0
      66: aload_1
      67: getfield      #3                  // Field cachingEnabled:Z
      70: putfield      #3                  // Field cachingEnabled:Z
      73: aload_0
      74: aload_1
      75: getfield      #6                  // Field topicConfig:Ljava/util/Map;
      78: putfield      #6                  // Field topicConfig:Ljava/util/Map;
      81: aload_0
      82: aload_1
      83: getfield      #11                 // Field retention:Ljava/time/Duration;
      86: putfield      #11                 // Field retention:Ljava/time/Duration;
      89: return

  public static <K, V, S extends org.apache.kafka.streams.processor.StateStore> org.apache.kafka.streams.kstream.Materialized<K, V, S> as(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #12                 // Method org/apache/kafka/streams/kstream/Named.validate:(Ljava/lang/String;)V
       4: new           #13                 // class org/apache/kafka/streams/kstream/Materialized
       7: dup
       8: aload_0
       9: invokespecial #14                 // Method "<init>":(Ljava/lang/String;)V
      12: areturn

  public static <K, V> org.apache.kafka.streams.kstream.Materialized<K, V, org.apache.kafka.streams.state.WindowStore<org.apache.kafka.common.utils.Bytes, byte[]>> as(org.apache.kafka.streams.state.WindowBytesStoreSupplier);
    Code:
       0: aload_0
       1: ldc           #15                 // String supplier can\'t be null
       3: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #13                 // class org/apache/kafka/streams/kstream/Materialized
      10: dup
      11: aload_0
      12: invokespecial #17                 // Method "<init>":(Lorg/apache/kafka/streams/state/StoreSupplier;)V
      15: areturn

  public static <K, V> org.apache.kafka.streams.kstream.Materialized<K, V, org.apache.kafka.streams.state.SessionStore<org.apache.kafka.common.utils.Bytes, byte[]>> as(org.apache.kafka.streams.state.SessionBytesStoreSupplier);
    Code:
       0: aload_0
       1: ldc           #15                 // String supplier can\'t be null
       3: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #13                 // class org/apache/kafka/streams/kstream/Materialized
      10: dup
      11: aload_0
      12: invokespecial #17                 // Method "<init>":(Lorg/apache/kafka/streams/state/StoreSupplier;)V
      15: areturn

  public static <K, V> org.apache.kafka.streams.kstream.Materialized<K, V, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>> as(org.apache.kafka.streams.state.KeyValueBytesStoreSupplier);
    Code:
       0: aload_0
       1: ldc           #15                 // String supplier can\'t be null
       3: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #13                 // class org/apache/kafka/streams/kstream/Materialized
      10: dup
      11: aload_0
      12: invokespecial #17                 // Method "<init>":(Lorg/apache/kafka/streams/state/StoreSupplier;)V
      15: areturn

  public static <K, V, S extends org.apache.kafka.streams.processor.StateStore> org.apache.kafka.streams.kstream.Materialized<K, V, S> with(org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>);
    Code:
       0: new           #13                 // class org/apache/kafka/streams/kstream/Materialized
       3: dup
       4: aconst_null
       5: checkcast     #18                 // class java/lang/String
       8: invokespecial #14                 // Method "<init>":(Ljava/lang/String;)V
      11: aload_0
      12: invokevirtual #19                 // Method withKeySerde:(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Materialized;
      15: aload_1
      16: invokevirtual #20                 // Method withValueSerde:(Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Materialized;
      19: areturn

  public org.apache.kafka.streams.kstream.Materialized<K, V, S> withValueSerde(org.apache.kafka.common.serialization.Serde<V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.Materialized<K, V, S> withKeySerde(org.apache.kafka.common.serialization.Serde<K>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.Materialized<K, V, S> withLoggingEnabled(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #2                  // Field loggingEnabled:Z
       5: aload_0
       6: aload_1
       7: putfield      #6                  // Field topicConfig:Ljava/util/Map;
      10: aload_0
      11: areturn

  public org.apache.kafka.streams.kstream.Materialized<K, V, S> withLoggingDisabled();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field loggingEnabled:Z
       5: aload_0
       6: getfield      #6                  // Field topicConfig:Ljava/util/Map;
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Map.clear:()V
      14: aload_0
      15: areturn

  public org.apache.kafka.streams.kstream.Materialized<K, V, S> withCachingEnabled();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field cachingEnabled:Z
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.Materialized<K, V, S> withCachingDisabled();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field cachingEnabled:Z
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.Materialized<K, V, S> withRetention(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #22                 // String retention
       3: invokestatic  #23                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokestatic  #24                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      12: lstore_3
      13: lload_3
      14: lconst_0
      15: lcmp
      16: ifge          29
      19: new           #25                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #26                 // String Retention must not be negative.
      25: invokespecial #27                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #11                 // Field retention:Ljava/time/Duration;
      34: aload_0
      35: areturn
}
