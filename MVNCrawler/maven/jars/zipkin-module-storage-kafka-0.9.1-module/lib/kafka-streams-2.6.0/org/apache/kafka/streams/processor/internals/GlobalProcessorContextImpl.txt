Compiled from "GlobalProcessorContextImpl.java"
public class org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl extends org.apache.kafka.streams.processor.internals.AbstractProcessorContext {
  public org.apache.kafka.streams.processor.internals.GlobalProcessorContextImpl(org.apache.kafka.streams.StreamsConfig, org.apache.kafka.streams.processor.internals.StateManager, org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, org.apache.kafka.streams.state.internals.ThreadCache);
    Code:
       0: aload_0
       1: new           #1                  // class org/apache/kafka/streams/processor/TaskId
       4: dup
       5: iconst_m1
       6: iconst_m1
       7: invokespecial #2                  // Method org/apache/kafka/streams/processor/TaskId."<init>":(II)V
      10: aload_1
      11: aload_3
      12: aload_2
      13: aload         4
      15: invokespecial #3                  // Method org/apache/kafka/streams/processor/internals/AbstractProcessorContext."<init>":(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/StreamsConfig;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/internals/StateManager;Lorg/apache/kafka/streams/state/internals/ThreadCache;)V
      18: return

  public org.apache.kafka.streams.processor.StateStore getStateStore(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field stateManager:Lorg/apache/kafka/streams/processor/internals/StateManager;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/apache/kafka/streams/processor/internals/StateManager.getGlobalStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
      10: astore_2
      11: aload_2
      12: invokestatic  #6                  // Method org/apache/kafka/streams/processor/internals/AbstractReadWriteDecorator.getReadWriteStore:(Lorg/apache/kafka/streams/processor/StateStore;)Lorg/apache/kafka/streams/processor/StateStore;
      15: areturn

  public <K, V> void forward(K, V);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method currentNode:()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
       4: astore_3
       5: aload_0
       6: invokevirtual #7                  // Method currentNode:()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
       9: invokevirtual #8                  // Method org/apache/kafka/streams/processor/internals/ProcessorNode.children:()Ljava/util/List;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          57
      29: aload         4
      31: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #12                 // class org/apache/kafka/streams/processor/internals/ProcessorNode
      39: astore        5
      41: aload_0
      42: aload         5
      44: invokevirtual #13                 // Method setCurrentNode:(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
      47: aload         5
      49: aload_1
      50: aload_2
      51: invokevirtual #14                 // Method org/apache/kafka/streams/processor/internals/ProcessorNode.process:(Ljava/lang/Object;Ljava/lang/Object;)V
      54: goto          19
      57: aload_0
      58: aload_3
      59: invokevirtual #13                 // Method setCurrentNode:(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
      62: goto          75
      65: astore        6
      67: aload_0
      68: aload_3
      69: invokevirtual #13                 // Method setCurrentNode:(Lorg/apache/kafka/streams/processor/internals/ProcessorNode;)V
      72: aload         6
      74: athrow
      75: return
    Exception table:
       from    to  target type
           5    57    65   any
          65    67    65   any

  public <K, V> void forward(K, V, org.apache.kafka.streams.processor.To);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method currentNode:()Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
       4: invokevirtual #8                  // Method org/apache/kafka/streams/processor/internals/ProcessorNode.children:()Ljava/util/List;
       7: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      12: ifne          25
      15: new           #16                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #17                 // String This method should only be called on \'GlobalStateStore.flush\' that should not have any children.
      21: invokespecial #18                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  public <K, V> void forward(K, V, int);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #20                 // String this should not happen: forward() not supported in global processor context.
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <K, V> void forward(K, V, java.lang.String);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #20                 // String this should not happen: forward() not supported in global processor context.
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void commit();
    Code:
       0: return

  public org.apache.kafka.streams.processor.Cancellable schedule(long, org.apache.kafka.streams.processor.PunctuationType, org.apache.kafka.streams.processor.Punctuator);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #22                 // String this should not happen: schedule() not supported in global processor context.
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.kafka.streams.processor.Cancellable schedule(java.time.Duration, org.apache.kafka.streams.processor.PunctuationType, org.apache.kafka.streams.processor.Punctuator);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #22                 // String this should not happen: schedule() not supported in global processor context.
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void logChange(java.lang.String, org.apache.kafka.common.utils.Bytes, byte[], long);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #23                 // String this should not happen: logChange() not supported in global processor context.
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void transitionToActive(org.apache.kafka.streams.processor.internals.StreamTask, org.apache.kafka.streams.processor.internals.RecordCollector, org.apache.kafka.streams.state.internals.ThreadCache);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #24                 // String this should not happen: transitionToActive() not supported in global processor context.
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void transitionToStandby(org.apache.kafka.streams.state.internals.ThreadCache);
    Code:
       0: new           #19                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #25                 // String this should not happen: transitionToStandby() not supported in global processor context.
       6: invokespecial #21                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void registerCacheFlushListener(java.lang.String, org.apache.kafka.streams.state.internals.ThreadCache$DirtyEntryFlushListener);
    Code:
       0: aload_0
       1: getfield      #26                 // Field cache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
       4: aload_1
       5: aload_2
       6: invokevirtual #27                 // Method org/apache/kafka/streams/state/internals/ThreadCache.addDirtyEntryFlushListener:(Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;)V
       9: return
}
