Compiled from "KeyValueStoreBuilder.java"
public class org.apache.kafka.streams.state.internals.KeyValueStoreBuilder<K, V> extends org.apache.kafka.streams.state.internals.AbstractStoreBuilder<K, V, org.apache.kafka.streams.state.KeyValueStore<K, V>> {
  private final org.apache.kafka.streams.state.KeyValueBytesStoreSupplier storeSupplier;

  public org.apache.kafka.streams.state.internals.KeyValueStoreBuilder(org.apache.kafka.streams.state.KeyValueBytesStoreSupplier, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>, org.apache.kafka.common.utils.Time);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueBytesStoreSupplier.name:()Ljava/lang/String;
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokespecial #2                  // Method org/apache/kafka/streams/state/internals/AbstractStoreBuilder."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/utils/Time;)V
      14: aload_1
      15: ldc           #3                  // String bytesStoreSupplier can\'t be null
      17: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: aload_1
      23: putfield      #5                  // Field storeSupplier:Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
      26: return

  public org.apache.kafka.streams.state.KeyValueStore<K, V> build();
    Code:
       0: new           #6                  // class org/apache/kafka/streams/state/internals/MeteredKeyValueStore
       3: dup
       4: aload_0
       5: aload_0
       6: aload_0
       7: getfield      #5                  // Field storeSupplier:Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
      10: invokeinterface #7,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueBytesStoreSupplier.get:()Lorg/apache/kafka/streams/processor/StateStore;
      15: checkcast     #8                  // class org/apache/kafka/streams/state/KeyValueStore
      18: invokespecial #9                  // Method maybeWrapLogging:(Lorg/apache/kafka/streams/state/KeyValueStore;)Lorg/apache/kafka/streams/state/KeyValueStore;
      21: invokespecial #10                 // Method maybeWrapCaching:(Lorg/apache/kafka/streams/state/KeyValueStore;)Lorg/apache/kafka/streams/state/KeyValueStore;
      24: aload_0
      25: getfield      #5                  // Field storeSupplier:Lorg/apache/kafka/streams/state/KeyValueBytesStoreSupplier;
      28: invokeinterface #11,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueBytesStoreSupplier.metricsScope:()Ljava/lang/String;
      33: aload_0
      34: getfield      #12                 // Field time:Lorg/apache/kafka/common/utils/Time;
      37: aload_0
      38: getfield      #13                 // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      41: aload_0
      42: getfield      #14                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      45: invokespecial #15                 // Method org/apache/kafka/streams/state/internals/MeteredKeyValueStore."<init>":(Lorg/apache/kafka/streams/state/KeyValueStore;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
      48: areturn

  private org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]> maybeWrapCaching(org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field enableCaching:Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: new           #17                 // class org/apache/kafka/streams/state/internals/CachingKeyValueStore
      12: dup
      13: aload_1
      14: invokespecial #18                 // Method org/apache/kafka/streams/state/internals/CachingKeyValueStore."<init>":(Lorg/apache/kafka/streams/state/KeyValueStore;)V
      17: areturn

  private org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]> maybeWrapLogging(org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field enableLogging:Z
       4: ifne          9
       7: aload_1
       8: areturn
       9: new           #20                 // class org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStore
      12: dup
      13: aload_1
      14: invokespecial #21                 // Method org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStore."<init>":(Lorg/apache/kafka/streams/state/KeyValueStore;)V
      17: areturn

  public org.apache.kafka.streams.processor.StateStore build();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method build:()Lorg/apache/kafka/streams/state/KeyValueStore;
       4: areturn
}
