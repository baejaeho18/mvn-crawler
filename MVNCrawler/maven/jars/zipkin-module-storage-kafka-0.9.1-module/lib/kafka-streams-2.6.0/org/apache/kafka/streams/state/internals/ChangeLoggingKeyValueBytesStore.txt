Compiled from "ChangeLoggingKeyValueBytesStore.java"
public class org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore extends org.apache.kafka.streams.state.internals.WrappedStateStore<org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>, byte[], byte[]> implements org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]> {
  org.apache.kafka.streams.processor.internals.InternalProcessorContext context;

  org.apache.kafka.streams.state.internals.ChangeLoggingKeyValueBytesStore(org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/kafka/streams/state/internals/WrappedStateStore."<init>":(Lorg/apache/kafka/streams/processor/StateStore;)V
       5: return

  public void init(org.apache.kafka.streams.processor.ProcessorContext, org.apache.kafka.streams.processor.StateStore);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/kafka/streams/state/internals/WrappedStateStore.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
       6: aload_0
       7: aload_1
       8: checkcast     #3                  // class org/apache/kafka/streams/processor/internals/InternalProcessorContext
      11: putfield      #4                  // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
      14: aload_0
      15: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
      18: instanceof    #6                  // class org/apache/kafka/streams/state/internals/MemoryLRUCache
      21: ifeq          40
      24: aload_0
      25: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
      28: checkcast     #6                  // class org/apache/kafka/streams/state/internals/MemoryLRUCache
      31: aload_0
      32: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStore;)Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;
      37: invokevirtual #8                  // Method org/apache/kafka/streams/state/internals/MemoryLRUCache.setWhenEldestRemoved:(Lorg/apache/kafka/streams/state/internals/MemoryLRUCache$EldestEntryRemovalListener;)V
      40: return

  public long approximateNumEntries();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: invokeinterface #10,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.approximateNumEntries:()J
      12: lreturn

  public void put(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: aload_1
       8: aload_2
       9: invokeinterface #11,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokevirtual #12                 // Method log:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      20: return

  public byte[] putIfAbsent(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: aload_1
       8: aload_2
       9: invokeinterface #13,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #14                 // class "[B"
      17: astore_3
      18: aload_3
      19: ifnonnull     28
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokevirtual #12                 // Method log:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      28: aload_3
      29: areturn

  public void putAll(java.util.List<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: aload_1
       8: invokeinterface #15,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.putAll:(Ljava/util/List;)V
      13: aload_1
      14: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          60
      29: aload_2
      30: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #19                 // class org/apache/kafka/streams/KeyValue
      38: astore_3
      39: aload_0
      40: aload_3
      41: getfield      #20                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      44: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
      47: aload_3
      48: getfield      #22                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      51: checkcast     #14                 // class "[B"
      54: invokevirtual #12                 // Method log:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      57: goto          20
      60: return

  public byte[] delete(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: aload_1
       8: invokeinterface #23,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.delete:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #14                 // class "[B"
      16: astore_2
      17: aload_0
      18: aload_1
      19: aconst_null
      20: invokevirtual #12                 // Method log:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      23: aload_2
      24: areturn

  public byte[] get(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: aload_1
       8: invokeinterface #24,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #14                 // class "[B"
      16: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: aload_1
       8: aload_2
       9: invokeinterface #25,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.range:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      14: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #9                  // class org/apache/kafka/streams/state/KeyValueStore
       7: invokeinterface #26,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.all:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  void log(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
       4: aload_0
       5: invokevirtual #27                 // Method name:()Ljava/lang/String;
       8: aload_1
       9: aload_2
      10: aload_0
      11: getfield      #4                  // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
      14: invokeinterface #28,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.timestamp:()J
      19: invokeinterface #29,  6           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.logChange:(Ljava/lang/String;Lorg/apache/kafka/common/utils/Bytes;[BJ)V
      24: return

  public java.lang.Object delete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #30                 // Method delete:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #14                 // class "[B"
       9: invokevirtual #31                 // Method putIfAbsent:(Lorg/apache/kafka/common/utils/Bytes;[B)[B
      12: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #14                 // class "[B"
       9: invokevirtual #32                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      12: return

  public org.apache.kafka.streams.state.KeyValueIterator range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #33                 // Method range:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #34                 // Method get:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  private void lambda$init$0(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #12                 // Method log:(Lorg/apache/kafka/common/utils/Bytes;[B)V
       6: return
}
