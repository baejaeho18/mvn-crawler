Compiled from "RocksDBTimestampedStore.java"
class org.apache.kafka.streams.state.internals.RocksDBTimestampedStore$RocksDBDualCFIterator extends org.apache.kafka.common.utils.AbstractIterator<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>> implements org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> {
  private final java.util.Comparator<byte[]> comparator;

  private final java.lang.String storeName;

  private final org.rocksdb.RocksIterator iterWithTimestamp;

  private final org.rocksdb.RocksIterator iterNoTimestamp;

  private volatile boolean open;

  private byte[] nextWithTimestamp;

  private byte[] nextNoTimestamp;

  private org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]> next;

  final org.apache.kafka.streams.state.internals.RocksDBTimestampedStore this$0;

  org.apache.kafka.streams.state.internals.RocksDBTimestampedStore$RocksDBDualCFIterator(org.apache.kafka.streams.state.internals.RocksDBTimestampedStore, java.lang.String, org.rocksdb.RocksIterator, org.rocksdb.RocksIterator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBTimestampedStore;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/kafka/common/utils/AbstractIterator."<init>":()V
       9: aload_0
      10: getstatic     #3                  // Field org/apache/kafka/common/utils/Bytes.BYTES_LEXICO_COMPARATOR:Lorg/apache/kafka/common/utils/Bytes$ByteArrayComparator;
      13: putfield      #4                  // Field comparator:Ljava/util/Comparator;
      16: aload_0
      17: iconst_1
      18: putfield      #5                  // Field open:Z
      21: aload_0
      22: aload_3
      23: putfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
      26: aload_0
      27: aload         4
      29: putfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
      32: aload_0
      33: aload_2
      34: putfield      #8                  // Field storeName:Ljava/lang/String;
      37: return

  public synchronized boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field open:Z
       4: ifne          31
       7: new           #9                  // class org/apache/kafka/streams/errors/InvalidStateStoreException
      10: dup
      11: ldc           #10                 // String RocksDB iterator for store %s has closed
      13: iconst_1
      14: anewarray     #11                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #8                  // Field storeName:Ljava/lang/String;
      23: aastore
      24: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #13                 // Method org/apache/kafka/streams/errors/InvalidStateStoreException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: invokespecial #14                 // Method org/apache/kafka/common/utils/AbstractIterator.hasNext:()Z
      35: ireturn

  public synchronized org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]> next();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/apache/kafka/common/utils/AbstractIterator.next:()Ljava/lang/Object;
       4: checkcast     #16                 // class org/apache/kafka/streams/KeyValue
       7: areturn

  public org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]> makeNext();
    Code:
       0: aload_0
       1: getfield      #17                 // Field nextNoTimestamp:[B
       4: ifnonnull     28
       7: aload_0
       8: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
      11: invokevirtual #18                 // Method org/rocksdb/RocksIterator.isValid:()Z
      14: ifeq          28
      17: aload_0
      18: aload_0
      19: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
      22: invokevirtual #19                 // Method org/rocksdb/RocksIterator.key:()[B
      25: putfield      #17                 // Field nextNoTimestamp:[B
      28: aload_0
      29: getfield      #20                 // Field nextWithTimestamp:[B
      32: ifnonnull     56
      35: aload_0
      36: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
      39: invokevirtual #18                 // Method org/rocksdb/RocksIterator.isValid:()Z
      42: ifeq          56
      45: aload_0
      46: aload_0
      47: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
      50: invokevirtual #19                 // Method org/rocksdb/RocksIterator.key:()[B
      53: putfield      #20                 // Field nextWithTimestamp:[B
      56: aload_0
      57: getfield      #17                 // Field nextNoTimestamp:[B
      60: ifnonnull     138
      63: aload_0
      64: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
      67: invokevirtual #18                 // Method org/rocksdb/RocksIterator.isValid:()Z
      70: ifne          138
      73: aload_0
      74: getfield      #20                 // Field nextWithTimestamp:[B
      77: ifnonnull     98
      80: aload_0
      81: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
      84: invokevirtual #18                 // Method org/rocksdb/RocksIterator.isValid:()Z
      87: ifne          98
      90: aload_0
      91: invokevirtual #21                 // Method allDone:()Ljava/lang/Object;
      94: checkcast     #16                 // class org/apache/kafka/streams/KeyValue
      97: areturn
      98: aload_0
      99: new           #22                 // class org/apache/kafka/common/utils/Bytes
     102: dup
     103: aload_0
     104: getfield      #20                 // Field nextWithTimestamp:[B
     107: invokespecial #23                 // Method org/apache/kafka/common/utils/Bytes."<init>":([B)V
     110: aload_0
     111: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
     114: invokevirtual #24                 // Method org/rocksdb/RocksIterator.value:()[B
     117: invokestatic  #25                 // Method org/apache/kafka/streams/KeyValue.pair:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
     120: putfield      #26                 // Field next:Lorg/apache/kafka/streams/KeyValue;
     123: aload_0
     124: aconst_null
     125: putfield      #20                 // Field nextWithTimestamp:[B
     128: aload_0
     129: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
     132: invokevirtual #27                 // Method org/rocksdb/RocksIterator.next:()V
     135: goto          288
     138: aload_0
     139: getfield      #20                 // Field nextWithTimestamp:[B
     142: ifnonnull     188
     145: aload_0
     146: new           #22                 // class org/apache/kafka/common/utils/Bytes
     149: dup
     150: aload_0
     151: getfield      #17                 // Field nextNoTimestamp:[B
     154: invokespecial #23                 // Method org/apache/kafka/common/utils/Bytes."<init>":([B)V
     157: aload_0
     158: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
     161: invokevirtual #24                 // Method org/rocksdb/RocksIterator.value:()[B
     164: invokestatic  #28                 // InterfaceMethod org/apache/kafka/streams/state/TimestampedBytesStore.convertToTimestampedFormat:([B)[B
     167: invokestatic  #25                 // Method org/apache/kafka/streams/KeyValue.pair:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
     170: putfield      #26                 // Field next:Lorg/apache/kafka/streams/KeyValue;
     173: aload_0
     174: aconst_null
     175: putfield      #17                 // Field nextNoTimestamp:[B
     178: aload_0
     179: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
     182: invokevirtual #27                 // Method org/rocksdb/RocksIterator.next:()V
     185: goto          288
     188: aload_0
     189: getfield      #4                  // Field comparator:Ljava/util/Comparator;
     192: aload_0
     193: getfield      #17                 // Field nextNoTimestamp:[B
     196: aload_0
     197: getfield      #20                 // Field nextWithTimestamp:[B
     200: invokeinterface #29,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
     205: ifgt          251
     208: aload_0
     209: new           #22                 // class org/apache/kafka/common/utils/Bytes
     212: dup
     213: aload_0
     214: getfield      #17                 // Field nextNoTimestamp:[B
     217: invokespecial #23                 // Method org/apache/kafka/common/utils/Bytes."<init>":([B)V
     220: aload_0
     221: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
     224: invokevirtual #24                 // Method org/rocksdb/RocksIterator.value:()[B
     227: invokestatic  #28                 // InterfaceMethod org/apache/kafka/streams/state/TimestampedBytesStore.convertToTimestampedFormat:([B)[B
     230: invokestatic  #25                 // Method org/apache/kafka/streams/KeyValue.pair:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
     233: putfield      #26                 // Field next:Lorg/apache/kafka/streams/KeyValue;
     236: aload_0
     237: aconst_null
     238: putfield      #17                 // Field nextNoTimestamp:[B
     241: aload_0
     242: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
     245: invokevirtual #27                 // Method org/rocksdb/RocksIterator.next:()V
     248: goto          288
     251: aload_0
     252: new           #22                 // class org/apache/kafka/common/utils/Bytes
     255: dup
     256: aload_0
     257: getfield      #20                 // Field nextWithTimestamp:[B
     260: invokespecial #23                 // Method org/apache/kafka/common/utils/Bytes."<init>":([B)V
     263: aload_0
     264: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
     267: invokevirtual #24                 // Method org/rocksdb/RocksIterator.value:()[B
     270: invokestatic  #25                 // Method org/apache/kafka/streams/KeyValue.pair:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
     273: putfield      #26                 // Field next:Lorg/apache/kafka/streams/KeyValue;
     276: aload_0
     277: aconst_null
     278: putfield      #20                 // Field nextWithTimestamp:[B
     281: aload_0
     282: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
     285: invokevirtual #27                 // Method org/rocksdb/RocksIterator.next:()V
     288: aload_0
     289: getfield      #26                 // Field next:Lorg/apache/kafka/streams/KeyValue;
     292: areturn

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBTimestampedStore;
       4: getfield      #30                 // Field org/apache/kafka/streams/state/internals/RocksDBTimestampedStore.openIterators:Ljava/util/Set;
       7: aload_0
       8: invokeinterface #31,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      13: pop
      14: aload_0
      15: getfield      #7                  // Field iterNoTimestamp:Lorg/rocksdb/RocksIterator;
      18: invokevirtual #32                 // Method org/rocksdb/RocksIterator.close:()V
      21: aload_0
      22: getfield      #6                  // Field iterWithTimestamp:Lorg/rocksdb/RocksIterator;
      25: invokevirtual #32                 // Method org/rocksdb/RocksIterator.close:()V
      28: aload_0
      29: iconst_0
      30: putfield      #5                  // Field open:Z
      33: return

  public org.apache.kafka.common.utils.Bytes peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method hasNext:()Z
       4: ifne          15
       7: new           #34                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #35                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #26                 // Field next:Lorg/apache/kafka/streams/KeyValue;
      19: getfield      #36                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      22: checkcast     #22                 // class org/apache/kafka/common/utils/Bytes
      25: areturn

  public java.lang.Object makeNext();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method makeNext:()Lorg/apache/kafka/streams/KeyValue;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method next:()Lorg/apache/kafka/streams/KeyValue;
       4: areturn

  public java.lang.Object peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method peekNextKey:()Lorg/apache/kafka/common/utils/Bytes;
       4: areturn
}
