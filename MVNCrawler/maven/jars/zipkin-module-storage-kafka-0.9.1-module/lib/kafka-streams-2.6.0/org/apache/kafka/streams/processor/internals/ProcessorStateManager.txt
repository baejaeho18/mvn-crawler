Compiled from "ProcessorStateManager.java"
public class org.apache.kafka.streams.processor.internals.ProcessorStateManager implements org.apache.kafka.streams.processor.internals.StateManager {
  private static final java.lang.String STATE_CHANGELOG_TOPIC_SUFFIX;

  private org.slf4j.Logger log;

  private java.lang.String logPrefix;

  private final org.apache.kafka.streams.processor.TaskId taskId;

  private final boolean eosEnabled;

  private final org.apache.kafka.streams.processor.internals.ChangelogRegister changelogReader;

  private final java.util.Map<java.lang.String, java.lang.String> storeToChangelogTopic;

  private final java.util.Collection<org.apache.kafka.common.TopicPartition> sourcePartitions;

  private final org.apache.kafka.common.utils.FixedOrderMap<java.lang.String, org.apache.kafka.streams.processor.internals.ProcessorStateManager$StateStoreMetadata> stores;

  private final org.apache.kafka.common.utils.FixedOrderMap<java.lang.String, org.apache.kafka.streams.processor.StateStore> globalStores;

  private final java.io.File baseDir;

  private final org.apache.kafka.streams.state.internals.OffsetCheckpoint checkpointFile;

  private org.apache.kafka.streams.processor.internals.Task$TaskType taskType;

  public static java.lang.String storeChangelogTopic(java.lang.String, java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #6                  // String -
      13: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #8                  // String -changelog
      22: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn

  public org.apache.kafka.streams.processor.internals.ProcessorStateManager(org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.Task$TaskType, boolean, org.apache.kafka.common.utils.LogContext, org.apache.kafka.streams.processor.internals.StateDirectory, org.apache.kafka.streams.processor.internals.ChangelogRegister, java.util.Map<java.lang.String, java.lang.String>, java.util.Collection<org.apache.kafka.common.TopicPartition>) throws org.apache.kafka.streams.errors.ProcessorStateException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #11                 // class org/apache/kafka/common/utils/FixedOrderMap
       8: dup
       9: invokespecial #12                 // Method org/apache/kafka/common/utils/FixedOrderMap."<init>":()V
      12: putfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      15: aload_0
      16: new           #11                 // class org/apache/kafka/common/utils/FixedOrderMap
      19: dup
      20: invokespecial #12                 // Method org/apache/kafka/common/utils/FixedOrderMap."<init>":()V
      23: putfield      #14                 // Field globalStores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      26: aload_0
      27: aload         4
      29: ldc           #7                  // class org/apache/kafka/streams/processor/internals/ProcessorStateManager
      31: invokevirtual #15                 // Method org/apache/kafka/common/utils/LogContext.logger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      34: putfield      #16                 // Field log:Lorg/slf4j/Logger;
      37: aload_0
      38: aload         4
      40: invokevirtual #17                 // Method org/apache/kafka/common/utils/LogContext.logPrefix:()Ljava/lang/String;
      43: putfield      #18                 // Field logPrefix:Ljava/lang/String;
      46: aload_0
      47: aload_1
      48: putfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
      51: aload_0
      52: aload_2
      53: putfield      #20                 // Field taskType:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      56: aload_0
      57: iload_3
      58: putfield      #21                 // Field eosEnabled:Z
      61: aload_0
      62: aload         6
      64: putfield      #22                 // Field changelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;
      67: aload_0
      68: aload         8
      70: putfield      #23                 // Field sourcePartitions:Ljava/util/Collection;
      73: aload_0
      74: aload         7
      76: putfield      #24                 // Field storeToChangelogTopic:Ljava/util/Map;
      79: aload_0
      80: aload         5
      82: aload_1
      83: invokevirtual #25                 // Method org/apache/kafka/streams/processor/internals/StateDirectory.directoryForTask:(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
      86: putfield      #26                 // Field baseDir:Ljava/io/File;
      89: aload_0
      90: new           #1                  // class org/apache/kafka/streams/state/internals/OffsetCheckpoint
      93: dup
      94: aload         5
      96: aload_1
      97: invokevirtual #27                 // Method org/apache/kafka/streams/processor/internals/StateDirectory.checkpointFileFor:(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/io/File;
     100: invokespecial #28                 // Method org/apache/kafka/streams/state/internals/OffsetCheckpoint."<init>":(Ljava/io/File;)V
     103: putfield      #29                 // Field checkpointFile:Lorg/apache/kafka/streams/state/internals/OffsetCheckpoint;
     106: aload_0
     107: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     110: ldc           #30                 // String Created state store manager for task {}
     112: aload_1
     113: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     118: return

  void registerStateStores(java.util.List<org.apache.kafka.streams.processor.StateStore>, org.apache.kafka.streams.processor.internals.InternalProcessorContext);
    Code:
       0: aload_2
       1: invokeinterface #32,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.uninitialize:()V
       6: aload_1
       7: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          95
      22: aload_3
      23: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #36                 // class org/apache/kafka/streams/processor/StateStore
      31: astore        4
      33: aload_0
      34: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      37: aload         4
      39: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
      44: invokevirtual #38                 // Method org/apache/kafka/common/utils/FixedOrderMap.containsKey:(Ljava/lang/Object;)Z
      47: ifeq          64
      50: aload_0
      51: aload         4
      53: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
      58: invokespecial #39                 // Method maybeRegisterStoreWithChangelogReader:(Ljava/lang/String;)V
      61: goto          74
      64: aload         4
      66: aload_2
      67: aload         4
      69: invokeinterface #40,  3           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
      74: aload_0
      75: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      78: ldc           #41                 // String Registered state store {}
      80: aload         4
      82: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
      87: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      92: goto          13
      95: return

  void registerGlobalStateStores(java.util.List<org.apache.kafka.streams.processor.StateStore>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field log:Lorg/slf4j/Logger;
       4: ldc           #43                 // String Register global stores {}
       6: aload_1
       7: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_1
      13: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          56
      28: aload_2
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #36                 // class org/apache/kafka/streams/processor/StateStore
      37: astore_3
      38: aload_0
      39: getfield      #14                 // Field globalStores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      42: aload_3
      43: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
      48: aload_3
      49: invokevirtual #44                 // Method org/apache/kafka/common/utils/FixedOrderMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: goto          19
      56: return

  public org.apache.kafka.streams.processor.StateStore getGlobalStore(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #14                 // Field globalStores:Lorg/apache/kafka/common/utils/FixedOrderMap;
       4: aload_1
       5: invokevirtual #45                 // Method org/apache/kafka/common/utils/FixedOrderMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #36                 // class org/apache/kafka/streams/processor/StateStore
      11: areturn

  void initializeStoreOffsetsFromCheckpoint(boolean);
    Code:
       0: aload_0
       1: getfield      #29                 // Field checkpointFile:Lorg/apache/kafka/streams/state/internals/OffsetCheckpoint;
       4: invokevirtual #46                 // Method org/apache/kafka/streams/state/internals/OffsetCheckpoint.read:()Ljava/util/Map;
       7: astore_2
       8: aload_0
       9: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      12: ldc           #47                 // String Loaded offsets from the checkpoint file: {}
      14: aload_2
      15: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      20: aload_0
      21: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      24: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
      27: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      32: astore_3
      33: aload_3
      34: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          377
      42: aload_3
      43: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      51: astore        4
      53: aload         4
      55: invokestatic  #51                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$000:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Z
      58: ifeq          84
      61: aload_0
      62: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      65: ldc           #52                 // String Tried to initialize store offsets for corrupted store {}
      67: aload         4
      69: invokeinterface #53,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      74: new           #54                 // class java/lang/IllegalStateException
      77: dup
      78: ldc           #55                 // String Should not initialize offsets for a corrupted task
      80: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      83: athrow
      84: aload         4
      86: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      89: ifnonnull     116
      92: aload_0
      93: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      96: ldc           #58                 // String State store {} is not logged and hence would not be restored
      98: aload         4
     100: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     103: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     108: invokeinterface #60,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     113: goto          374
     116: aload         4
     118: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     121: invokeinterface #61,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.persistent:()Z
     126: ifne          158
     129: aload_0
     130: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     133: ldc           #62                 // String Initializing to the starting offset for changelog {} of in-memory state store {}
     135: aload         4
     137: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     140: aload         4
     142: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     145: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     150: invokeinterface #63,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     155: goto          374
     158: aload         4
     160: invokevirtual #64                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.offset:()Ljava/lang/Long;
     163: ifnonnull     341
     166: aload_2
     167: aload         4
     169: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     172: invokeinterface #65,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     177: ifeq          257
     180: aload_0
     181: aload_2
     182: aload         4
     184: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     187: invokeinterface #66,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     192: checkcast     #67                 // class java/lang/Long
     195: invokevirtual #68                 // Method java/lang/Long.longValue:()J
     198: invokespecial #69                 // Method changelogOffsetFromCheckpointedOffset:(J)Ljava/lang/Long;
     201: astore        5
     203: aload         4
     205: aload         5
     207: invokestatic  #70                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$300:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;Ljava/lang/Long;)V
     210: aload_0
     211: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     214: ldc           #71                 // String State store {} initialized from checkpoint with offset {} at changelog {}
     216: iconst_3
     217: anewarray     #72                 // class java/lang/Object
     220: dup
     221: iconst_0
     222: aload         4
     224: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     227: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     232: aastore
     233: dup
     234: iconst_1
     235: aload         4
     237: invokestatic  #73                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$400:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Ljava/lang/Long;
     240: aastore
     241: dup
     242: iconst_2
     243: aload         4
     245: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     248: aastore
     249: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     254: goto          374
     257: aload_0
     258: getfield      #21                 // Field eosEnabled:Z
     261: ifeq          312
     264: iload_1
     265: ifne          312
     268: aload_0
     269: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     272: ldc           #75                 // String State store {} did not find checkpoint offsets while stores are not empty, since under EOS it has the risk of getting uncommitted data in stores we have to treat it as a task corruption error and wipe out the local state of task {} before re-bootstrapping
     274: aload         4
     276: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     279: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     284: aload_0
     285: getfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
     288: invokeinterface #76,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     293: new           #77                 // class org/apache/kafka/streams/errors/TaskCorruptedException
     296: dup
     297: aload_0
     298: getfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
     301: aload_0
     302: invokevirtual #78                 // Method changelogPartitions:()Ljava/util/Collection;
     305: invokestatic  #79                 // Method java/util/Collections.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;
     308: invokespecial #80                 // Method org/apache/kafka/streams/errors/TaskCorruptedException."<init>":(Ljava/util/Map;)V
     311: athrow
     312: aload_0
     313: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     316: ldc           #81                 // String State store {} did not find checkpoint offset, hence would default to the starting offset at changelog {}
     318: aload         4
     320: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     323: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     328: aload         4
     330: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     333: invokeinterface #63,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     338: goto          374
     341: aload_2
     342: aload         4
     344: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     347: invokeinterface #66,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     352: pop
     353: aload_0
     354: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     357: ldc           #82                 // String Skipping re-initialization of offset from checkpoint for recycled store {}
     359: aload         4
     361: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     364: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     369: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     374: goto          33
     377: aload_2
     378: invokeinterface #83,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
     383: ifne          398
     386: aload_0
     387: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     390: ldc           #84                 // String Some loaded checkpoint offsets cannot find their corresponding state stores: {}
     392: aload_2
     393: invokeinterface #85,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     398: aload_0
     399: getfield      #29                 // Field checkpointFile:Lorg/apache/kafka/streams/state/internals/OffsetCheckpoint;
     402: invokevirtual #86                 // Method org/apache/kafka/streams/state/internals/OffsetCheckpoint.delete:()V
     405: goto          437
     408: astore_2
     409: aload_2
     410: athrow
     411: astore_2
     412: new           #89                 // class org/apache/kafka/streams/errors/ProcessorStateException
     415: dup
     416: ldc           #90                 // String %sError loading and deleting checkpoint file when creating the state manager
     418: iconst_1
     419: anewarray     #72                 // class java/lang/Object
     422: dup
     423: iconst_0
     424: aload_0
     425: getfield      #18                 // Field logPrefix:Ljava/lang/String;
     428: aastore
     429: invokestatic  #91                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     432: aload_2
     433: invokespecial #92                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     436: athrow
     437: return
    Exception table:
       from    to  target type
           0   405   408   Class org/apache/kafka/streams/errors/TaskCorruptedException
           0   405   411   Class java/io/IOException
           0   405   411   Class java/lang/RuntimeException

  private void maybeRegisterStoreWithChangelogReader(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #93                 // Method isLoggingEnabled:(Ljava/lang/String;)Z
       5: ifeq          23
       8: aload_0
       9: getfield      #22                 // Field changelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;
      12: aload_0
      13: aload_1
      14: invokespecial #94                 // Method getStorePartition:(Ljava/lang/String;)Lorg/apache/kafka/common/TopicPartition;
      17: aload_0
      18: invokeinterface #95,  3           // InterfaceMethod org/apache/kafka/streams/processor/internals/ChangelogRegister.register:(Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;)V
      23: return

  private java.util.List<org.apache.kafka.common.TopicPartition> getAllChangelogTopicPartitions();
    Code:
       0: new           #96                 // class java/util/ArrayList
       3: dup
       4: invokespecial #97                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      12: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
      15: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          61
      30: aload_2
      31: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      39: astore_3
      40: aload_3
      41: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      44: ifnull        58
      47: aload_1
      48: aload_3
      49: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      52: invokeinterface #98,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      57: pop
      58: goto          21
      61: aload_1
      62: areturn

  public java.io.File baseDir();
    Code:
       0: aload_0
       1: getfield      #26                 // Field baseDir:Ljava/io/File;
       4: areturn

  public void registerStore(org.apache.kafka.streams.processor.StateStore, org.apache.kafka.streams.processor.StateRestoreCallback);
    Code:
       0: aload_1
       1: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
       6: astore_3
       7: ldc           #99                 // String .checkpoint
       9: aload_3
      10: invokevirtual #100                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          44
      16: new           #101                // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #102                // String %sIllegal store name: %s, which collides with the pre-defined checkpoint file name
      22: iconst_2
      23: anewarray     #72                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_0
      29: getfield      #18                 // Field logPrefix:Ljava/lang/String;
      32: aastore
      33: dup
      34: iconst_1
      35: aload_3
      36: aastore
      37: invokestatic  #91                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      48: aload_3
      49: invokevirtual #38                 // Method org/apache/kafka/common/utils/FixedOrderMap.containsKey:(Ljava/lang/Object;)Z
      52: ifeq          83
      55: new           #101                // class java/lang/IllegalArgumentException
      58: dup
      59: ldc           #104                // String %sStore %s has already been registered.
      61: iconst_2
      62: anewarray     #72                 // class java/lang/Object
      65: dup
      66: iconst_0
      67: aload_0
      68: getfield      #18                 // Field logPrefix:Ljava/lang/String;
      71: aastore
      72: dup
      73: iconst_1
      74: aload_3
      75: aastore
      76: invokestatic  #91                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      79: invokespecial #103                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_2
      84: instanceof    #105                // class org/apache/kafka/streams/processor/StateRestoreListener
      87: ifeq          101
      90: aload_0
      91: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      94: ldc           #106                // String The registered state restore callback is also implementing the state restore listener interface, which is not expected and would be ignored
      96: invokeinterface #107,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     101: aload_0
     102: aload_3
     103: invokespecial #93                 // Method isLoggingEnabled:(Ljava/lang/String;)Z
     106: ifeq          131
     109: new           #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
     112: dup
     113: aload_1
     114: aload_0
     115: aload_3
     116: invokespecial #94                 // Method getStorePartition:(Ljava/lang/String;)Lorg/apache/kafka/common/TopicPartition;
     119: aload_2
     120: aload_1
     121: invokestatic  #108                // Method org/apache/kafka/streams/processor/internals/StateManagerUtil.converterForStore:(Lorg/apache/kafka/streams/processor/StateStore;)Lorg/apache/kafka/streams/state/internals/RecordConverter;
     124: aconst_null
     125: invokespecial #109                // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata."<init>":(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/common/TopicPartition;Lorg/apache/kafka/streams/processor/StateRestoreCallback;Lorg/apache/kafka/streams/state/internals/RecordConverter;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$1;)V
     128: goto          140
     131: new           #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
     134: dup
     135: aload_1
     136: aconst_null
     137: invokespecial #110                // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata."<init>":(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$1;)V
     140: astore        4
     142: aload_0
     143: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
     146: aload_3
     147: aload         4
     149: invokevirtual #44                 // Method org/apache/kafka/common/utils/FixedOrderMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: aload_0
     154: aload_3
     155: invokespecial #39                 // Method maybeRegisterStoreWithChangelogReader:(Ljava/lang/String;)V
     158: aload_0
     159: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     162: ldc           #111                // String Registered state store {} to its state manager
     164: aload_3
     165: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     170: return

  public org.apache.kafka.streams.processor.StateStore getStore(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
       4: aload_1
       5: invokevirtual #38                 // Method org/apache/kafka/common/utils/FixedOrderMap.containsKey:(Ljava/lang/Object;)Z
       8: ifeq          26
      11: aload_0
      12: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      15: aload_1
      16: invokevirtual #45                 // Method org/apache/kafka/common/utils/FixedOrderMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      22: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
      25: areturn
      26: aconst_null
      27: areturn

  java.util.Collection<org.apache.kafka.common.TopicPartition> changelogPartitions();
    Code:
       0: aload_0
       1: invokevirtual #112                // Method changelogOffsets:()Ljava/util/Map;
       4: invokeinterface #113,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  void markChangelogAsCorrupted(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
       4: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
       7: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          65
      22: aload_2
      23: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      37: invokeinterface #114,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      42: ifeq          62
      45: aload_3
      46: iconst_1
      47: invokestatic  #115                // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$002:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;Z)Z
      50: pop
      51: aload_1
      52: aload_3
      53: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      56: invokeinterface #116,  2          // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      61: pop
      62: goto          13
      65: aload_1
      66: invokeinterface #117,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z
      71: ifne          118
      74: new           #54                 // class java/lang/IllegalStateException
      77: dup
      78: new           #3                  // class java/lang/StringBuilder
      81: dup
      82: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #118                // String Some partitions
      87: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_1
      91: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      94: ldc           #120                // String  are not contained in the store list of task
      96: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: getfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
     103: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: ldc           #121                // String  marking as corrupted, this is not expected
     108: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: return

  public java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long> changelogOffsets();
    Code:
       0: new           #122                // class java/util/HashMap
       3: dup
       4: invokespecial #123                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      12: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
      15: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          84
      30: aload_2
      31: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      39: astore_3
      40: aload_3
      41: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      44: ifnull        81
      47: aload_1
      48: aload_3
      49: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      52: aload_3
      53: invokestatic  #73                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$400:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Ljava/lang/Long;
      56: ifnonnull     63
      59: lconst_0
      60: goto          72
      63: aload_3
      64: invokestatic  #73                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$400:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Ljava/lang/Long;
      67: invokevirtual #68                 // Method java/lang/Long.longValue:()J
      70: lconst_1
      71: ladd
      72: invokestatic  #124                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      75: invokeinterface #125,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          21
      84: aload_1
      85: areturn

  org.apache.kafka.streams.processor.TaskId taskId();
    Code:
       0: aload_0
       1: getfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
       4: areturn

  boolean changelogAsSource(org.apache.kafka.common.TopicPartition);
    Code:
       0: aload_0
       1: getfield      #23                 // Field sourcePartitions:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #114,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public org.apache.kafka.streams.processor.internals.Task$TaskType taskType();
    Code:
       0: aload_0
       1: getfield      #20                 // Field taskType:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
       4: areturn

  org.apache.kafka.streams.processor.internals.ProcessorStateManager$StateStoreMetadata storeMetadata(org.apache.kafka.common.TopicPartition);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
       4: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
       7: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          48
      22: aload_2
      23: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
      37: invokevirtual #126                // Method org/apache/kafka/common/TopicPartition.equals:(Ljava/lang/Object;)Z
      40: ifeq          45
      43: aload_3
      44: areturn
      45: goto          13
      48: aconst_null
      49: areturn

  void restore(org.apache.kafka.streams.processor.internals.ProcessorStateManager$StateStoreMetadata, java.util.List<org.apache.kafka.clients.consumer.ConsumerRecord<byte[], byte[]>>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
       4: aload_1
       5: invokevirtual #127                // Method org/apache/kafka/common/utils/FixedOrderMap.containsValue:(Ljava/lang/Object;)Z
       8: ifne          43
      11: new           #54                 // class java/lang/IllegalStateException
      14: dup
      15: new           #3                  // class java/lang/StringBuilder
      18: dup
      19: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #128                // String Restoring
      24: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #129                // String  which is not registered in this state manager, this should not happen.
      33: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_2
      44: invokeinterface #130,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      49: ifne          175
      52: aload_2
      53: aload_2
      54: invokeinterface #131,  1          // InterfaceMethod java/util/List.size:()I
      59: iconst_1
      60: isub
      61: invokeinterface #132,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      66: checkcast     #133                // class org/apache/kafka/clients/consumer/ConsumerRecord
      69: invokevirtual #134                // Method org/apache/kafka/clients/consumer/ConsumerRecord.offset:()J
      72: invokestatic  #124                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      75: astore_3
      76: aload_1
      77: invokestatic  #135                // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$700:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateRestoreCallback;
      80: invokestatic  #136                // Method org/apache/kafka/streams/processor/internals/StateRestoreCallbackAdapter.adapt:(Lorg/apache/kafka/streams/processor/StateRestoreCallback;)Lorg/apache/kafka/streams/processor/internals/RecordBatchingStateRestoreCallback;
      83: astore        4
      85: aload_2
      86: invokeinterface #137,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      91: aload_1
      92: invokestatic  #138                // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$800:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/state/internals/RecordConverter;
      95: dup
      96: invokevirtual #139                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      99: pop
     100: invokedynamic #140,  0            // InvokeDynamic #0:apply:(Lorg/apache/kafka/streams/state/internals/RecordConverter;)Ljava/util/function/Function;
     105: invokeinterface #141,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
     110: invokestatic  #142                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
     113: invokeinterface #143,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
     118: checkcast     #144                // class java/util/List
     121: astore        5
     123: aload         4
     125: aload         5
     127: invokeinterface #145,  2          // InterfaceMethod org/apache/kafka/streams/processor/internals/RecordBatchingStateRestoreCallback.restoreBatch:(Ljava/util/Collection;)V
     132: goto          170
     135: astore        6
     137: new           #89                 // class org/apache/kafka/streams/errors/ProcessorStateException
     140: dup
     141: ldc           #146                // String %sException caught while trying to restore state from %s
     143: iconst_2
     144: anewarray     #72                 // class java/lang/Object
     147: dup
     148: iconst_0
     149: aload_0
     150: getfield      #18                 // Field logPrefix:Ljava/lang/String;
     153: aastore
     154: dup
     155: iconst_1
     156: aload_1
     157: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     160: aastore
     161: invokestatic  #91                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     164: aload         6
     166: invokespecial #92                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     169: athrow
     170: aload_1
     171: aload_3
     172: invokestatic  #70                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$300:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;Ljava/lang/Long;)V
     175: return
    Exception table:
       from    to  target type
         123   132   135   Class java/lang/RuntimeException

  public void flush();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
       6: invokevirtual #147                // Method org/apache/kafka/common/utils/FixedOrderMap.isEmpty:()Z
       9: ifne          172
      12: aload_0
      13: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      16: ldc           #148                // String Flushing all stores registered in the state manager: {}
      18: aload_0
      19: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      22: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      31: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
      34: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          172
      49: aload_2
      50: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      58: astore_3
      59: aload_3
      60: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
      63: astore        4
      65: aload_0
      66: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      69: ldc           #149                // String Flushing store {}
      71: aload         4
      73: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
      78: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      83: aload         4
      85: invokeinterface #150,  1          // InterfaceMethod org/apache/kafka/streams/processor/StateStore.flush:()V
      90: goto          169
      93: astore        5
      95: aload_1
      96: ifnonnull     149
      99: aload         5
     101: instanceof    #151                // class org/apache/kafka/streams/errors/StreamsException
     104: ifeq          113
     107: aload         5
     109: astore_1
     110: goto          149
     113: new           #89                 // class org/apache/kafka/streams/errors/ProcessorStateException
     116: dup
     117: ldc           #152                // String %sFailed to flush state store %s
     119: iconst_2
     120: anewarray     #72                 // class java/lang/Object
     123: dup
     124: iconst_0
     125: aload_0
     126: getfield      #18                 // Field logPrefix:Ljava/lang/String;
     129: aastore
     130: dup
     131: iconst_1
     132: aload         4
     134: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     139: aastore
     140: invokestatic  #91                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     143: aload         5
     145: invokespecial #92                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     148: astore_1
     149: aload_0
     150: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     153: ldc           #153                // String Failed to flush state store {}:
     155: aload         4
     157: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     162: aload         5
     164: invokeinterface #154,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     169: goto          40
     172: aload_1
     173: ifnull        178
     176: aload_1
     177: athrow
     178: return
    Exception table:
       from    to  target type
          83    90    93   Class java/lang/RuntimeException

  public void close() throws org.apache.kafka.streams.errors.ProcessorStateException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field log:Lorg/slf4j/Logger;
       4: ldc           #155                // String Closing its state manager and all the registered state stores: {}
       6: aload_0
       7: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      10: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #22                 // Field changelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;
      19: aload_0
      20: invokespecial #156                // Method getAllChangelogTopicPartitions:()Ljava/util/List;
      23: invokeinterface #157,  2          // InterfaceMethod org/apache/kafka/streams/processor/internals/ChangelogRegister.unregister:(Ljava/util/Collection;)V
      28: aconst_null
      29: astore_1
      30: aload_0
      31: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      34: invokevirtual #147                // Method org/apache/kafka/common/utils/FixedOrderMap.isEmpty:()Z
      37: ifne          200
      40: aload_0
      41: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
      44: invokevirtual #158                // Method org/apache/kafka/common/utils/FixedOrderMap.entrySet:()Ljava/util/Set;
      47: invokeinterface #159,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      52: astore_2
      53: aload_2
      54: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          193
      62: aload_2
      63: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #160                // class java/util/Map$Entry
      71: astore_3
      72: aload_3
      73: invokeinterface #161,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
      81: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
      84: astore        4
      86: aload_0
      87: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      90: ldc           #162                // String Closing store {}
      92: aload         4
      94: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
      99: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     104: aload         4
     106: invokeinterface #163,  1          // InterfaceMethod org/apache/kafka/streams/processor/StateStore.close:()V
     111: goto          190
     114: astore        5
     116: aload_1
     117: ifnonnull     170
     120: aload         5
     122: instanceof    #151                // class org/apache/kafka/streams/errors/StreamsException
     125: ifeq          134
     128: aload         5
     130: astore_1
     131: goto          170
     134: new           #89                 // class org/apache/kafka/streams/errors/ProcessorStateException
     137: dup
     138: ldc           #164                // String %sFailed to close state store %s
     140: iconst_2
     141: anewarray     #72                 // class java/lang/Object
     144: dup
     145: iconst_0
     146: aload_0
     147: getfield      #18                 // Field logPrefix:Ljava/lang/String;
     150: aastore
     151: dup
     152: iconst_1
     153: aload         4
     155: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     160: aastore
     161: invokestatic  #91                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     164: aload         5
     166: invokespecial #92                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     169: astore_1
     170: aload_0
     171: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     174: ldc           #165                // String Failed to close state store {}:
     176: aload         4
     178: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
     183: aload         5
     185: invokeinterface #154,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     190: goto          53
     193: aload_0
     194: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
     197: invokevirtual #166                // Method org/apache/kafka/common/utils/FixedOrderMap.clear:()V
     200: aload_1
     201: ifnull        206
     204: aload_1
     205: athrow
     206: return
    Exception table:
       from    to  target type
         104   111   114   Class java/lang/RuntimeException

  void recycle();
    Code:
       0: aload_0
       1: getfield      #16                 // Field log:Lorg/slf4j/Logger;
       4: ldc           #167                // String Recycling state for {} task {}.
       6: aload_0
       7: getfield      #20                 // Field taskType:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      10: aload_0
      11: getfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
      14: invokeinterface #168,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      19: aload_0
      20: invokespecial #156                // Method getAllChangelogTopicPartitions:()Ljava/util/List;
      23: astore_1
      24: aload_0
      25: getfield      #22                 // Field changelogReader:Lorg/apache/kafka/streams/processor/internals/ChangelogRegister;
      28: aload_1
      29: invokeinterface #157,  2          // InterfaceMethod org/apache/kafka/streams/processor/internals/ChangelogRegister.unregister:(Ljava/util/Collection;)V
      34: return

  void transitionTaskType(org.apache.kafka.streams.processor.internals.Task$TaskType, org.apache.kafka.common.utils.LogContext);
    Code:
       0: aload_0
       1: getfield      #20                 // Field taskType:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
       4: aload_1
       5: invokevirtual #169                // Method org/apache/kafka/streams/processor/internals/Task$TaskType.equals:(Ljava/lang/Object;)Z
       8: ifeq          21
      11: new           #54                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #170                // String Tried to recycle state for task type conversion but new type was the same.
      17: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #20                 // Field taskType:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      25: astore_3
      26: aload_0
      27: aload_1
      28: putfield      #20                 // Field taskType:Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
      31: aload_0
      32: aload_2
      33: ldc           #7                  // class org/apache/kafka/streams/processor/internals/ProcessorStateManager
      35: invokevirtual #15                 // Method org/apache/kafka/common/utils/LogContext.logger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      38: putfield      #16                 // Field log:Lorg/slf4j/Logger;
      41: aload_0
      42: aload_2
      43: invokevirtual #17                 // Method org/apache/kafka/common/utils/LogContext.logPrefix:()Ljava/lang/String;
      46: putfield      #18                 // Field logPrefix:Ljava/lang/String;
      49: aload_0
      50: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      53: ldc           #171                // String Transitioning state manager for {} task {} to {}
      55: iconst_3
      56: anewarray     #72                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: aload_3
      62: aastore
      63: dup
      64: iconst_1
      65: aload_0
      66: getfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
      69: aastore
      70: dup
      71: iconst_2
      72: aload_1
      73: aastore
      74: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      79: return

  public void checkpoint(java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long>);
    Code:
       0: aload_1
       1: invokeinterface #172,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #159,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          112
      21: aload_2
      22: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #160                // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #173,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #174                // class org/apache/kafka/common/TopicPartition
      41: invokespecial #175                // Method findStore:(Lorg/apache/kafka/common/TopicPartition;)Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;
      44: astore        4
      46: aload         4
      48: ifnull        109
      51: aload         4
      53: aload_3
      54: invokeinterface #161,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      59: checkcast     #67                 // class java/lang/Long
      62: invokestatic  #70                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$300:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;Ljava/lang/Long;)V
      65: aload_0
      66: getfield      #16                 // Field log:Lorg/slf4j/Logger;
      69: ldc           #176                // String State store {} updated to written offset {} at changelog {}
      71: iconst_3
      72: anewarray     #72                 // class java/lang/Object
      75: dup
      76: iconst_0
      77: aload         4
      79: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
      82: invokeinterface #37,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.name:()Ljava/lang/String;
      87: aastore
      88: dup
      89: iconst_1
      90: aload         4
      92: invokestatic  #73                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$400:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Ljava/lang/Long;
      95: aastore
      96: dup
      97: iconst_2
      98: aload         4
     100: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     103: aastore
     104: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     109: goto          12
     112: new           #122                // class java/util/HashMap
     115: dup
     116: invokespecial #123                // Method java/util/HashMap."<init>":()V
     119: astore_2
     120: aload_0
     121: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
     124: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
     127: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     132: astore_3
     133: aload_3
     134: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     139: ifeq          213
     142: aload_3
     143: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
     151: astore        4
     153: aload         4
     155: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     158: ifnull        210
     161: aload         4
     163: invokestatic  #59                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$200:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/streams/processor/StateStore;
     166: invokeinterface #61,  1           // InterfaceMethod org/apache/kafka/streams/processor/StateStore.persistent:()Z
     171: ifeq          210
     174: aload         4
     176: invokestatic  #51                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$000:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Z
     179: ifne          210
     182: aload_0
     183: aload         4
     185: invokestatic  #73                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$400:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Ljava/lang/Long;
     188: invokespecial #177                // Method checkpointableOffsetFromChangelogOffset:(Ljava/lang/Long;)J
     191: lstore        5
     193: aload_2
     194: aload         4
     196: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
     199: lload         5
     201: invokestatic  #124                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     204: invokeinterface #125,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     209: pop
     210: goto          133
     213: aload_0
     214: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     217: ldc           #178                // String Writing checkpoint: {}
     219: aload_2
     220: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     225: aload_0
     226: getfield      #29                 // Field checkpointFile:Lorg/apache/kafka/streams/state/internals/OffsetCheckpoint;
     229: aload_2
     230: invokevirtual #179                // Method org/apache/kafka/streams/state/internals/OffsetCheckpoint.write:(Ljava/util/Map;)V
     233: goto          253
     236: astore_3
     237: aload_0
     238: getfield      #16                 // Field log:Lorg/slf4j/Logger;
     241: ldc           #180                // String Failed to write offset checkpoint file to [{}]
     243: aload_0
     244: getfield      #29                 // Field checkpointFile:Lorg/apache/kafka/streams/state/internals/OffsetCheckpoint;
     247: aload_3
     248: invokeinterface #76,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     253: return
    Exception table:
       from    to  target type
         225   233   236   Class java/io/IOException

  private org.apache.kafka.common.TopicPartition getStorePartition(java.lang.String);
    Code:
       0: new           #174                // class org/apache/kafka/common/TopicPartition
       3: dup
       4: aload_0
       5: getfield      #24                 // Field storeToChangelogTopic:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #181,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #182                // class java/lang/String
      17: aload_0
      18: getfield      #19                 // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
      21: getfield      #183                // Field org/apache/kafka/streams/processor/TaskId.partition:I
      24: invokespecial #184                // Method org/apache/kafka/common/TopicPartition."<init>":(Ljava/lang/String;I)V
      27: areturn

  private boolean isLoggingEnabled(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #24                 // Field storeToChangelogTopic:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  private org.apache.kafka.streams.processor.internals.ProcessorStateManager$StateStoreMetadata findStore(org.apache.kafka.common.TopicPartition);
    Code:
       0: aload_0
       1: getfield      #13                 // Field stores:Lorg/apache/kafka/common/utils/FixedOrderMap;
       4: invokevirtual #48                 // Method org/apache/kafka/common/utils/FixedOrderMap.values:()Ljava/util/Collection;
       7: invokeinterface #185,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: aload_1
      13: invokedynamic #186,  0            // InvokeDynamic #1:test:(Lorg/apache/kafka/common/TopicPartition;)Ljava/util/function/Predicate;
      18: invokeinterface #187,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      23: invokestatic  #142                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      26: invokeinterface #143,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #144                // class java/util/List
      34: astore_2
      35: aload_2
      36: invokeinterface #131,  1          // InterfaceMethod java/util/List.size:()I
      41: iconst_1
      42: if_icmple     81
      45: new           #54                 // class java/lang/IllegalStateException
      48: dup
      49: new           #3                  // class java/lang/StringBuilder
      52: dup
      53: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #188                // String Multiple state stores are found for changelog partition
      58: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: ldc           #189                // String , this should never happen:
      67: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_2
      71: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_2
      82: invokeinterface #130,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      87: ifeq          94
      90: aconst_null
      91: goto          104
      94: aload_2
      95: iconst_0
      96: invokeinterface #132,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     101: checkcast     #50                 // class org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata
     104: areturn

  private long checkpointableOffsetFromChangelogOffset(java.lang.Long);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #68                 // Method java/lang/Long.longValue:()J
       8: goto          14
      11: ldc2_w        #190                // long -4l
      14: lreturn

  private java.lang.Long changelogOffsetFromCheckpointedOffset(long);
    Code:
       0: lload_1
       1: ldc2_w        #190                // long -4l
       4: lcmp
       5: ifeq          15
       8: lload_1
       9: invokestatic  #124                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: goto          16
      15: aconst_null
      16: areturn

  private static boolean lambda$findStore$0(org.apache.kafka.common.TopicPartition, org.apache.kafka.streams.processor.internals.ProcessorStateManager$StateStoreMetadata);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #57                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata.access$100:(Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager$StateStoreMetadata;)Lorg/apache/kafka/common/TopicPartition;
       5: invokevirtual #126                // Method org/apache/kafka/common/TopicPartition.equals:(Ljava/lang/Object;)Z
       8: ireturn
}
