Compiled from "ChangedDeserializer.java"
public class org.apache.kafka.streams.kstream.internals.ChangedDeserializer<T> implements org.apache.kafka.common.serialization.Deserializer<org.apache.kafka.streams.kstream.internals.Change<T>>, org.apache.kafka.streams.kstream.internals.WrappingNullableDeserializer<org.apache.kafka.streams.kstream.internals.Change<T>, java.lang.Void, T> {
  private static final int NEWFLAG_SIZE;

  private org.apache.kafka.common.serialization.Deserializer<T> inner;

  public org.apache.kafka.streams.kstream.internals.ChangedDeserializer(org.apache.kafka.common.serialization.Deserializer<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field inner:Lorg/apache/kafka/common/serialization/Deserializer;
       9: return

  public org.apache.kafka.common.serialization.Deserializer<T> inner();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inner:Lorg/apache/kafka/common/serialization/Deserializer;
       4: areturn

  public void setIfUnset(org.apache.kafka.common.serialization.Deserializer<java.lang.Void>, org.apache.kafka.common.serialization.Deserializer<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field inner:Lorg/apache/kafka/common/serialization/Deserializer;
       4: ifnonnull     18
       7: aload_0
       8: aload_2
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #4                  // class org/apache/kafka/common/serialization/Deserializer
      15: putfield      #2                  // Field inner:Lorg/apache/kafka/common/serialization/Deserializer;
      18: return

  public org.apache.kafka.streams.kstream.internals.Change<T> deserialize(java.lang.String, org.apache.kafka.common.header.Headers, byte[]);
    Code:
       0: aload_3
       1: arraylength
       2: iconst_1
       3: isub
       4: newarray       byte
       6: astore        4
       8: aload_3
       9: iconst_0
      10: aload         4
      12: iconst_0
      13: aload         4
      15: arraylength
      16: invokestatic  #6                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_3
      20: invokestatic  #7                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      23: aload_3
      24: arraylength
      25: iconst_1
      26: isub
      27: invokevirtual #8                  // Method java/nio/ByteBuffer.get:(I)B
      30: ifeq          55
      33: new           #9                  // class org/apache/kafka/streams/kstream/internals/Change
      36: dup
      37: aload_0
      38: getfield      #2                  // Field inner:Lorg/apache/kafka/common/serialization/Deserializer;
      41: aload_1
      42: aload_2
      43: aload         4
      45: invokeinterface #10,  4           // InterfaceMethod org/apache/kafka/common/serialization/Deserializer.deserialize:(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Ljava/lang/Object;
      50: aconst_null
      51: invokespecial #11                 // Method org/apache/kafka/streams/kstream/internals/Change."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      54: areturn
      55: new           #9                  // class org/apache/kafka/streams/kstream/internals/Change
      58: dup
      59: aconst_null
      60: aload_0
      61: getfield      #2                  // Field inner:Lorg/apache/kafka/common/serialization/Deserializer;
      64: aload_1
      65: aload_2
      66: aload         4
      68: invokeinterface #10,  4           // InterfaceMethod org/apache/kafka/common/serialization/Deserializer.deserialize:(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Ljava/lang/Object;
      73: invokespecial #11                 // Method org/apache/kafka/streams/kstream/internals/Change."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      76: areturn

  public org.apache.kafka.streams.kstream.internals.Change<T> deserialize(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #12                 // Method deserialize:(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Lorg/apache/kafka/streams/kstream/internals/Change;
       7: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field inner:Lorg/apache/kafka/common/serialization/Deserializer;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/kafka/common/serialization/Deserializer.close:()V
       9: return

  public java.lang.Object deserialize(java.lang.String, org.apache.kafka.common.header.Headers, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #12                 // Method deserialize:(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;[B)Lorg/apache/kafka/streams/kstream/internals/Change;
       7: areturn

  public java.lang.Object deserialize(java.lang.String, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #14                 // Method deserialize:(Ljava/lang/String;[B)Lorg/apache/kafka/streams/kstream/internals/Change;
       6: areturn
}
