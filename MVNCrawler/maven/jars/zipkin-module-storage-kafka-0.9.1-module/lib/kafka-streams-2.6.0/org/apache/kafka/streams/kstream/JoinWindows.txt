Compiled from "JoinWindows.java"
public final class org.apache.kafka.streams.kstream.JoinWindows extends org.apache.kafka.streams.kstream.Windows<org.apache.kafka.streams.kstream.Window> {
  private final long maintainDurationMs;

  public final long beforeMs;

  public final long afterMs;

  private final long graceMs;

  private org.apache.kafka.streams.kstream.JoinWindows(long, long, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/kafka/streams/kstream/Windows."<init>":()V
       4: lload_1
       5: lload_3
       6: ladd
       7: lconst_0
       8: lcmp
       9: ifge          22
      12: new           #3                  // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #4                  // String Window interval (ie, beforeMs+afterMs) must not be negative.
      18: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: lload_3
      24: putfield      #6                  // Field afterMs:J
      27: aload_0
      28: lload_1
      29: putfield      #7                  // Field beforeMs:J
      32: aload_0
      33: lload         5
      35: putfield      #8                  // Field graceMs:J
      38: aload_0
      39: lload         7
      41: putfield      #9                  // Field maintainDurationMs:J
      44: return

  private org.apache.kafka.streams.kstream.JoinWindows(long, long, long, long, int);
    Code:
       0: aload_0
       1: iload         9
       3: invokespecial #10                 // Method org/apache/kafka/streams/kstream/Windows."<init>":(I)V
       6: lload_1
       7: lload_3
       8: ladd
       9: lconst_0
      10: lcmp
      11: ifge          24
      14: new           #3                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #4                  // String Window interval (ie, beforeMs+afterMs) must not be negative.
      20: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: lload_3
      26: putfield      #6                  // Field afterMs:J
      29: aload_0
      30: lload_1
      31: putfield      #7                  // Field beforeMs:J
      34: aload_0
      35: lload         5
      37: putfield      #8                  // Field graceMs:J
      40: aload_0
      41: lload         7
      43: putfield      #9                  // Field maintainDurationMs:J
      46: return

  public static org.apache.kafka.streams.kstream.JoinWindows of(long) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #11                 // class org/apache/kafka/streams/kstream/JoinWindows
       3: dup
       4: lload_0
       5: lload_0
       6: ldc2_w        #12                 // long -1l
       9: ldc2_w        #14                 // long 86400000l
      12: invokespecial #16                 // Method "<init>":(JJJJ)V
      15: areturn

  public static org.apache.kafka.streams.kstream.JoinWindows of(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: ldc           #17                 // String timeDifference
       3: invokestatic  #18                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokestatic  #19                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      12: invokestatic  #20                 // Method of:(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
      15: areturn

  public org.apache.kafka.streams.kstream.JoinWindows before(long) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #11                 // class org/apache/kafka/streams/kstream/JoinWindows
       3: dup
       4: lload_1
       5: aload_0
       6: getfield      #6                  // Field afterMs:J
       9: aload_0
      10: getfield      #8                  // Field graceMs:J
      13: aload_0
      14: getfield      #9                  // Field maintainDurationMs:J
      17: aload_0
      18: getfield      #21                 // Field segments:I
      21: invokespecial #22                 // Method "<init>":(JJJJI)V
      24: areturn

  public org.apache.kafka.streams.kstream.JoinWindows before(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #17                 // String timeDifference
       3: invokestatic  #18                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokestatic  #19                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      13: invokevirtual #23                 // Method before:(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
      16: areturn

  public org.apache.kafka.streams.kstream.JoinWindows after(long) throws java.lang.IllegalArgumentException;
    Code:
       0: new           #11                 // class org/apache/kafka/streams/kstream/JoinWindows
       3: dup
       4: aload_0
       5: getfield      #7                  // Field beforeMs:J
       8: lload_1
       9: aload_0
      10: getfield      #8                  // Field graceMs:J
      13: aload_0
      14: getfield      #9                  // Field maintainDurationMs:J
      17: aload_0
      18: getfield      #21                 // Field segments:I
      21: invokespecial #22                 // Method "<init>":(JJJJI)V
      24: areturn

  public org.apache.kafka.streams.kstream.JoinWindows after(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #17                 // String timeDifference
       3: invokestatic  #18                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokestatic  #19                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      13: invokevirtual #24                 // Method after:(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
      16: areturn

  public java.util.Map<java.lang.Long, org.apache.kafka.streams.kstream.Window> windowsFor(long);
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #26                 // String windowsFor() is not supported by JoinWindows.
       6: invokespecial #27                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public long size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field beforeMs:J
       4: aload_0
       5: getfield      #6                  // Field afterMs:J
       8: ladd
       9: lreturn

  public org.apache.kafka.streams.kstream.JoinWindows grace(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #28                 // String afterWindowEnd
       3: invokestatic  #18                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokestatic  #19                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      12: lstore_3
      13: lload_3
      14: lconst_0
      15: lcmp
      16: ifge          29
      19: new           #3                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #29                 // String Grace period must not be negative.
      25: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #11                 // class org/apache/kafka/streams/kstream/JoinWindows
      32: dup
      33: aload_0
      34: getfield      #7                  // Field beforeMs:J
      37: aload_0
      38: getfield      #6                  // Field afterMs:J
      41: lload_3
      42: aload_0
      43: getfield      #9                  // Field maintainDurationMs:J
      46: aload_0
      47: getfield      #21                 // Field segments:I
      50: invokespecial #22                 // Method "<init>":(JJJJI)V
      53: areturn

  public long gracePeriodMs();
    Code:
       0: aload_0
       1: getfield      #8                  // Field graceMs:J
       4: ldc2_w        #12                 // long -1l
       7: lcmp
       8: ifeq          18
      11: aload_0
      12: getfield      #8                  // Field graceMs:J
      15: goto          27
      18: aload_0
      19: invokevirtual #30                 // Method maintainMs:()J
      22: aload_0
      23: invokevirtual #31                 // Method size:()J
      26: lsub
      27: lreturn

  public org.apache.kafka.streams.kstream.JoinWindows until(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_1
       1: aload_0
       2: invokevirtual #31                 // Method size:()J
       5: lcmp
       6: ifge          19
       9: new           #3                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #32                 // String Window retention time (durationMs) cannot be smaller than the window size.
      15: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #11                 // class org/apache/kafka/streams/kstream/JoinWindows
      22: dup
      23: aload_0
      24: getfield      #7                  // Field beforeMs:J
      27: aload_0
      28: getfield      #6                  // Field afterMs:J
      31: aload_0
      32: getfield      #8                  // Field graceMs:J
      35: lload_1
      36: aload_0
      37: getfield      #21                 // Field segments:I
      40: invokespecial #22                 // Method "<init>":(JJJJI)V
      43: areturn

  public long maintainMs();
    Code:
       0: aload_0
       1: getfield      #9                  // Field maintainDurationMs:J
       4: aload_0
       5: invokevirtual #31                 // Method size:()J
       8: invokestatic  #33                 // Method java/lang/Math.max:(JJ)J
      11: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #11                 // class org/apache/kafka/streams/kstream/JoinWindows
      28: astore_2
      29: aload_0
      30: getfield      #7                  // Field beforeMs:J
      33: aload_2
      34: getfield      #7                  // Field beforeMs:J
      37: lcmp
      38: ifne          92
      41: aload_0
      42: getfield      #6                  // Field afterMs:J
      45: aload_2
      46: getfield      #6                  // Field afterMs:J
      49: lcmp
      50: ifne          92
      53: aload_0
      54: getfield      #9                  // Field maintainDurationMs:J
      57: aload_2
      58: getfield      #9                  // Field maintainDurationMs:J
      61: lcmp
      62: ifne          92
      65: aload_0
      66: getfield      #21                 // Field segments:I
      69: aload_2
      70: getfield      #21                 // Field segments:I
      73: if_icmpne     92
      76: aload_0
      77: getfield      #8                  // Field graceMs:J
      80: aload_2
      81: getfield      #8                  // Field graceMs:J
      84: lcmp
      85: ifne          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ireturn

  public int hashCode();
    Code:
       0: iconst_5
       1: anewarray     #35                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #7                  // Field beforeMs:J
      10: invokestatic  #36                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #6                  // Field afterMs:J
      20: invokestatic  #36                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      23: aastore
      24: dup
      25: iconst_2
      26: aload_0
      27: getfield      #8                  // Field graceMs:J
      30: invokestatic  #36                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: aastore
      34: dup
      35: iconst_3
      36: aload_0
      37: getfield      #9                  // Field maintainDurationMs:J
      40: invokestatic  #36                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: aastore
      44: dup
      45: iconst_4
      46: aload_0
      47: getfield      #21                 // Field segments:I
      50: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: invokestatic  #38                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      57: ireturn

  public java.lang.String toString();
    Code:
       0: new           #39                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #41                 // String JoinWindows{beforeMs=
       9: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #7                  // Field beforeMs:J
      16: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #44                 // String , afterMs=
      21: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field afterMs:J
      28: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #45                 // String , graceMs=
      33: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #8                  // Field graceMs:J
      40: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #46                 // String , maintainDurationMs=
      45: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #9                  // Field maintainDurationMs:J
      52: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #47                 // String , segments=
      57: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #21                 // Field segments:I
      64: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: bipush        125
      69: invokevirtual #49                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public org.apache.kafka.streams.kstream.Windows until(long) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #51                 // Method until:(J)Lorg/apache/kafka/streams/kstream/JoinWindows;
       5: areturn
}
