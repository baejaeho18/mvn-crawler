Compiled from "StreamsMetadata.java"
public class org.apache.kafka.streams.state.StreamsMetadata {
  public static final org.apache.kafka.streams.state.StreamsMetadata NOT_AVAILABLE;

  private final org.apache.kafka.streams.state.HostInfo hostInfo;

  private final java.util.Set<java.lang.String> stateStoreNames;

  private final java.util.Set<org.apache.kafka.common.TopicPartition> topicPartitions;

  private final java.util.Set<java.lang.String> standbyStateStoreNames;

  private final java.util.Set<org.apache.kafka.common.TopicPartition> standbyTopicPartitions;

  public org.apache.kafka.streams.state.StreamsMetadata(org.apache.kafka.streams.state.HostInfo, java.util.Set<java.lang.String>, java.util.Set<org.apache.kafka.common.TopicPartition>, java.util.Set<java.lang.String>, java.util.Set<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field stateStoreNames:Ljava/util/Set;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field topicPartitions:Ljava/util/Set;
      19: aload_0
      20: aload         5
      22: putfield      #5                  // Field standbyTopicPartitions:Ljava/util/Set;
      25: aload_0
      26: aload         4
      28: putfield      #6                  // Field standbyStateStoreNames:Ljava/util/Set;
      31: return

  public org.apache.kafka.streams.state.HostInfo hostInfo();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
       4: areturn

  public java.util.Set<java.lang.String> stateStoreNames();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stateStoreNames:Ljava/util/Set;
       4: invokestatic  #7                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.util.Set<org.apache.kafka.common.TopicPartition> topicPartitions();
    Code:
       0: aload_0
       1: getfield      #4                  // Field topicPartitions:Ljava/util/Set;
       4: invokestatic  #7                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.util.Set<org.apache.kafka.common.TopicPartition> standbyTopicPartitions();
    Code:
       0: aload_0
       1: getfield      #5                  // Field standbyTopicPartitions:Ljava/util/Set;
       4: invokestatic  #7                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.util.Set<java.lang.String> standbyStateStoreNames();
    Code:
       0: aload_0
       1: getfield      #6                  // Field standbyStateStoreNames:Ljava/util/Set;
       4: invokestatic  #7                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.lang.String host();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
       4: invokevirtual #8                  // Method org/apache/kafka/streams/state/HostInfo.host:()Ljava/lang/String;
       7: areturn

  public int port();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
       4: invokevirtual #9                  // Method org/apache/kafka/streams/state/HostInfo.port:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #11                 // class org/apache/kafka/streams/state/StreamsMetadata
      28: astore_2
      29: aload_0
      30: getfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
      33: aload_2
      34: getfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
      37: invokestatic  #12                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ifeq          103
      43: aload_0
      44: getfield      #3                  // Field stateStoreNames:Ljava/util/Set;
      47: aload_2
      48: getfield      #3                  // Field stateStoreNames:Ljava/util/Set;
      51: invokestatic  #12                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      54: ifeq          103
      57: aload_0
      58: getfield      #4                  // Field topicPartitions:Ljava/util/Set;
      61: aload_2
      62: getfield      #4                  // Field topicPartitions:Ljava/util/Set;
      65: invokestatic  #12                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      68: ifeq          103
      71: aload_0
      72: getfield      #6                  // Field standbyStateStoreNames:Ljava/util/Set;
      75: aload_2
      76: getfield      #6                  // Field standbyStateStoreNames:Ljava/util/Set;
      79: invokestatic  #12                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      82: ifeq          103
      85: aload_0
      86: getfield      #5                  // Field standbyTopicPartitions:Ljava/util/Set;
      89: aload_2
      90: getfield      #5                  // Field standbyTopicPartitions:Ljava/util/Set;
      93: invokestatic  #12                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifeq          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: ireturn

  public int hashCode();
    Code:
       0: iconst_5
       1: anewarray     #13                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field stateStoreNames:Ljava/util/Set;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #4                  // Field topicPartitions:Ljava/util/Set;
      24: aastore
      25: dup
      26: iconst_3
      27: aload_0
      28: getfield      #6                  // Field standbyStateStoreNames:Ljava/util/Set;
      31: aastore
      32: dup
      33: iconst_4
      34: aload_0
      35: getfield      #5                  // Field standbyTopicPartitions:Ljava/util/Set;
      38: aastore
      39: invokestatic  #14                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      42: ireturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #17                 // String StreamsMetadata {hostInfo=
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field hostInfo:Lorg/apache/kafka/streams/state/HostInfo;
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #20                 // String , stateStoreNames=
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field stateStoreNames:Ljava/util/Set;
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #21                 // String , topicPartitions=
      33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #4                  // Field topicPartitions:Ljava/util/Set;
      40: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #22                 // String , standbyStateStoreNames=
      45: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #6                  // Field standbyStateStoreNames:Ljava/util/Set;
      52: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #23                 // String , standbyTopicPartitions=
      57: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #5                  // Field standbyTopicPartitions:Ljava/util/Set;
      64: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: bipush        125
      69: invokevirtual #24                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  static {};
    Code:
       0: new           #11                 // class org/apache/kafka/streams/state/StreamsMetadata
       3: dup
       4: invokestatic  #26                 // Method org/apache/kafka/streams/state/HostInfo.unavailable:()Lorg/apache/kafka/streams/state/HostInfo;
       7: invokestatic  #27                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: invokestatic  #27                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      13: invokestatic  #27                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      16: invokestatic  #27                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      19: invokespecial #28                 // Method "<init>":(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V
      22: putstatic     #29                 // Field NOT_AVAILABLE:Lorg/apache/kafka/streams/state/StreamsMetadata;
      25: return
}
