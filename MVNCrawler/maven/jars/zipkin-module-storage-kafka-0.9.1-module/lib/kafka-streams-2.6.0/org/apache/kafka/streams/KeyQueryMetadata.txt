Compiled from "KeyQueryMetadata.java"
public class org.apache.kafka.streams.KeyQueryMetadata {
  public static final org.apache.kafka.streams.KeyQueryMetadata NOT_AVAILABLE;

  private final org.apache.kafka.streams.state.HostInfo activeHost;

  private final java.util.Set<org.apache.kafka.streams.state.HostInfo> standbyHosts;

  private final int partition;

  public org.apache.kafka.streams.KeyQueryMetadata(org.apache.kafka.streams.state.HostInfo, java.util.Set<org.apache.kafka.streams.state.HostInfo>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field activeHost:Lorg/apache/kafka/streams/state/HostInfo;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field standbyHosts:Ljava/util/Set;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field partition:I
      19: return

  public org.apache.kafka.streams.state.HostInfo getActiveHost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field activeHost:Lorg/apache/kafka/streams/state/HostInfo;
       4: areturn

  public java.util.Set<org.apache.kafka.streams.state.HostInfo> getStandbyHosts();
    Code:
       0: aload_0
       1: getfield      #3                  // Field standbyHosts:Ljava/util/Set;
       4: areturn

  public int getPartition();
    Code:
       0: aload_0
       1: getfield      #4                  // Field partition:I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class org/apache/kafka/streams/KeyQueryMetadata
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #5                  // class org/apache/kafka/streams/KeyQueryMetadata
      13: astore_2
      14: aload_2
      15: getfield      #2                  // Field activeHost:Lorg/apache/kafka/streams/state/HostInfo;
      18: aload_0
      19: getfield      #2                  // Field activeHost:Lorg/apache/kafka/streams/state/HostInfo;
      22: invokestatic  #6                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      25: ifeq          66
      28: aload_2
      29: getfield      #3                  // Field standbyHosts:Ljava/util/Set;
      32: aload_0
      33: getfield      #3                  // Field standbyHosts:Ljava/util/Set;
      36: invokestatic  #6                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      39: ifeq          66
      42: aload_2
      43: getfield      #4                  // Field partition:I
      46: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      49: aload_0
      50: getfield      #4                  // Field partition:I
      53: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: invokestatic  #6                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: ifeq          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ireturn

  public java.lang.String toString();
    Code:
       0: new           #8                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String KeyQueryMetadata {activeHost=
       9: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field activeHost:Lorg/apache/kafka/streams/state/HostInfo;
      16: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #13                 // String , standbyHosts=
      21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field standbyHosts:Ljava/util/Set;
      28: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #14                 // String , partition=
      33: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #4                  // Field partition:I
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: bipush        125
      45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #18                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field activeHost:Lorg/apache/kafka/streams/state/HostInfo;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field standbyHosts:Ljava/util/Set;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #4                  // Field partition:I
      24: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #19                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      31: ireturn

  static {};
    Code:
       0: new           #5                  // class org/apache/kafka/streams/KeyQueryMetadata
       3: dup
       4: invokestatic  #20                 // Method org/apache/kafka/streams/state/HostInfo.unavailable:()Lorg/apache/kafka/streams/state/HostInfo;
       7: invokestatic  #21                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: iconst_m1
      11: invokespecial #22                 // Method "<init>":(Lorg/apache/kafka/streams/state/HostInfo;Ljava/util/Set;I)V
      14: putstatic     #23                 // Field NOT_AVAILABLE:Lorg/apache/kafka/streams/KeyQueryMetadata;
      17: return
}
