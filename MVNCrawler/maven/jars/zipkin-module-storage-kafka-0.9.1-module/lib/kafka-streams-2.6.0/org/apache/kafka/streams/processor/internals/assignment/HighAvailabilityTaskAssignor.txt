Compiled from "HighAvailabilityTaskAssignor.java"
public class org.apache.kafka.streams.processor.internals.assignment.HighAvailabilityTaskAssignor implements org.apache.kafka.streams.processor.internals.assignment.TaskAssignor {
  private static final org.slf4j.Logger log;

  public org.apache.kafka.streams.processor.internals.assignment.HighAvailabilityTaskAssignor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean assign(java.util.Map<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.util.Set<org.apache.kafka.streams.processor.TaskId>, java.util.Set<org.apache.kafka.streams.processor.TaskId>, org.apache.kafka.streams.processor.internals.assignment.AssignorConfiguration$AssignmentConfigs);
    Code:
       0: new           #2                  // class java/util/TreeSet
       3: dup
       4: aload_3
       5: invokespecial #3                  // Method java/util/TreeSet."<init>":(Ljava/util/Collection;)V
       8: astore        5
      10: new           #4                  // class java/util/TreeMap
      13: dup
      14: aload_1
      15: invokespecial #5                  // Method java/util/TreeMap."<init>":(Ljava/util/Map;)V
      18: astore        6
      20: aload         6
      22: aload         5
      24: invokestatic  #6                  // Method assignActiveStatefulTasks:(Ljava/util/SortedMap;Ljava/util/SortedSet;)V
      27: aload         6
      29: aload         5
      31: aload         4
      33: getfield      #7                  // Field org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs.numStandbyReplicas:I
      36: invokestatic  #8                  // Method assignStandbyReplicaTasks:(Ljava/util/TreeMap;Ljava/util/Set;I)V
      39: new           #9                  // class java/util/concurrent/atomic/AtomicInteger
      42: dup
      43: aload         4
      45: getfield      #10                 // Field org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs.maxWarmupReplicas:I
      48: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      51: astore        7
      53: aload         5
      55: aload         6
      57: aload         4
      59: getfield      #12                 // Field org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration$AssignmentConfigs.acceptableRecoveryLag:J
      62: invokestatic  #13                 // Method tasksToCaughtUpClients:(Ljava/util/Set;Ljava/util/Map;J)Ljava/util/Map;
      65: astore        8
      67: new           #4                  // class java/util/TreeMap
      70: dup
      71: invokespecial #14                 // Method java/util/TreeMap."<init>":()V
      74: astore        9
      76: aload         8
      78: aload         6
      80: aload         9
      82: aload         7
      84: invokestatic  #15                 // Method org/apache/kafka/streams/processor/internals/assignment/TaskMovement.assignActiveTaskMovements:(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;Ljava/util/concurrent/atomic/AtomicInteger;)I
      87: istore        10
      89: aload         8
      91: aload         6
      93: aload         7
      95: aload         9
      97: invokestatic  #16                 // Method org/apache/kafka/streams/processor/internals/assignment/TaskMovement.assignStandbyTaskMovements:(Ljava/util/Map;Ljava/util/Map;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/Map;)I
     100: istore        11
     102: aload         6
     104: invokedynamic #17,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;
     109: aload_2
     110: aload         5
     112: invokestatic  #18                 // Method org/apache/kafka/common/utils/Utils.diff:(Ljava/util/function/Supplier;Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;
     115: invokestatic  #19                 // Method assignStatelessActiveTasks:(Ljava/util/TreeMap;Ljava/lang/Iterable;)V
     118: iload         10
     120: iload         11
     122: iadd
     123: ifle          130
     126: iconst_1
     127: goto          131
     130: iconst_0
     131: istore        12
     133: getstatic     #20                 // Field log:Lorg/slf4j/Logger;
     136: new           #21                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #23                 // String Decided on assignment:
     145: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload         6
     150: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     153: ldc           #26                 // String  with
     155: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: iload         12
     160: ifeq          168
     163: ldc           #27                 // String
     165: goto          170
     168: ldc           #28                 // String  no
     170: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: ldc           #29                 // String  followup probing rebalance.
     175: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokeinterface #31,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     186: iload         12
     188: ireturn

  private static void assignActiveStatefulTasks(java.util.SortedMap<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.util.SortedSet<org.apache.kafka.streams.processor.TaskId>);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokeinterface #32,  1           // InterfaceMethod java/util/SortedSet.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          71
      18: aload_3
      19: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #35                 // class org/apache/kafka/streams/processor/TaskId
      27: astore        4
      29: aload_2
      30: ifnull        42
      33: aload_2
      34: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifne          54
      42: aload_0
      43: invokeinterface #36,  1           // InterfaceMethod java/util/SortedMap.values:()Ljava/util/Collection;
      48: invokeinterface #37,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      53: astore_2
      54: aload_2
      55: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      63: aload         4
      65: invokevirtual #39                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      68: goto          9
      71: aload_0
      72: invokedynamic #40,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      77: invokedynamic #41,  0             // InvokeDynamic #2:accept:()Ljava/util/function/BiConsumer;
      82: invokedynamic #42,  0             // InvokeDynamic #3:accept:()Ljava/util/function/BiConsumer;
      87: invokestatic  #43                 // Method balanceTasksOverThreads:(Ljava/util/SortedMap;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)V
      90: return

  private static void assignStandbyReplicaTasks(java.util.TreeMap<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.util.Set<org.apache.kafka.streams.processor.TaskId>, int);
    Code:
       0: aload_1
       1: invokeinterface #44,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #45,  0             // InvokeDynamic #4:apply:()Ljava/util/function/Function;
      11: iload_2
      12: invokedynamic #46,  0             // InvokeDynamic #5:apply:(I)Ljava/util/function/Function;
      17: invokestatic  #47                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      20: invokeinterface #48,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      25: checkcast     #49                 // class java/util/Map
      28: astore_3
      29: new           #50                 // class org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet
      32: dup
      33: aload_0
      34: invokedynamic #51,  0             // InvokeDynamic #6:apply:(Ljava/util/TreeMap;)Ljava/util/function/BiFunction;
      39: aload_0
      40: invokedynamic #52,  0             // InvokeDynamic #7:apply:(Ljava/util/TreeMap;)Ljava/util/function/Function;
      45: invokespecial #53                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet."<init>":(Ljava/util/function/BiFunction;Ljava/util/function/Function;)V
      48: astore        4
      50: aload         4
      52: aload_0
      53: invokevirtual #54                 // Method java/util/TreeMap.keySet:()Ljava/util/Set;
      56: invokevirtual #55                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offerAll:(Ljava/util/Collection;)V
      59: aload_1
      60: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: astore        5
      67: aload         5
      69: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          196
      77: aload         5
      79: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #35                 // class org/apache/kafka/streams/processor/TaskId
      87: astore        6
      89: aload_3
      90: aload         6
      92: invokeinterface #57,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      97: checkcast     #58                 // class java/lang/Integer
     100: invokevirtual #59                 // Method java/lang/Integer.intValue:()I
     103: istore        7
     105: iload         7
     107: ifle          154
     110: aload         4
     112: aload         6
     114: invokevirtual #60                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.poll:(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/UUID;
     117: astore        8
     119: aload         8
     121: ifnonnull     127
     124: goto          154
     127: aload_0
     128: aload         8
     130: invokevirtual #61                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     133: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     136: aload         6
     138: invokevirtual #62                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignStandby:(Lorg/apache/kafka/streams/processor/TaskId;)V
     141: iinc          7, -1
     144: aload         4
     146: aload         8
     148: invokevirtual #63                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offer:(Ljava/util/UUID;)V
     151: goto          105
     154: iload         7
     156: ifle          193
     159: getstatic     #20                 // Field log:Lorg/slf4j/Logger;
     162: ldc           #64                 // String Unable to assign {} of {} standby tasks for task [{}]. There is not enough available capacity. You should increase the number of threads and/or application instances to maintain the requested number of standby replicas.
     164: iconst_3
     165: anewarray     #65                 // class java/lang/Object
     168: dup
     169: iconst_0
     170: iload         7
     172: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     175: aastore
     176: dup
     177: iconst_1
     178: iload_2
     179: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     182: aastore
     183: dup
     184: iconst_2
     185: aload         6
     187: aastore
     188: invokeinterface #67,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     193: goto          67
     196: aload_0
     197: invokedynamic #68,  0             // InvokeDynamic #8:apply:()Ljava/util/function/Function;
     202: invokedynamic #69,  0             // InvokeDynamic #9:accept:()Ljava/util/function/BiConsumer;
     207: invokedynamic #70,  0             // InvokeDynamic #10:accept:()Ljava/util/function/BiConsumer;
     212: invokestatic  #43                 // Method balanceTasksOverThreads:(Ljava/util/SortedMap;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)V
     215: return

  private static void balanceTasksOverThreads(java.util.SortedMap<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.util.function.Function<org.apache.kafka.streams.processor.internals.assignment.ClientState, java.util.Set<org.apache.kafka.streams.processor.TaskId>>, java.util.function.BiConsumer<org.apache.kafka.streams.processor.internals.assignment.ClientState, org.apache.kafka.streams.processor.TaskId>, java.util.function.BiConsumer<org.apache.kafka.streams.processor.internals.assignment.ClientState, org.apache.kafka.streams.processor.TaskId>);
    Code:
       0: iconst_1
       1: istore        4
       3: iload         4
       5: ifeq          260
       8: iconst_0
       9: istore        4
      11: aload_0
      12: invokeinterface #71,  1           // InterfaceMethod java/util/SortedMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore        5
      24: aload         5
      26: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          257
      34: aload         5
      36: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #72                 // class java/util/Map$Entry
      44: astore        6
      46: aload         6
      48: invokeinterface #73,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      53: checkcast     #74                 // class java/util/UUID
      56: astore        7
      58: aload         6
      60: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      65: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      68: astore        8
      70: aload_0
      71: invokeinterface #71,  1           // InterfaceMethod java/util/SortedMap.entrySet:()Ljava/util/Set;
      76: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      81: astore        9
      83: aload         9
      85: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      90: ifeq          254
      93: aload         9
      95: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     100: checkcast     #72                 // class java/util/Map$Entry
     103: astore        10
     105: aload         10
     107: invokeinterface #73,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     112: checkcast     #74                 // class java/util/UUID
     115: astore        11
     117: aload         10
     119: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     124: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     127: astore        12
     129: aload         7
     131: aload         11
     133: invokevirtual #76                 // Method java/util/UUID.equals:(Ljava/lang/Object;)Z
     136: ifeq          142
     139: goto          83
     142: new           #2                  // class java/util/TreeSet
     145: dup
     146: aload_1
     147: aload         8
     149: invokeinterface #77,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     154: checkcast     #78                 // class java/util/Collection
     157: invokespecial #3                  // Method java/util/TreeSet."<init>":(Ljava/util/Collection;)V
     160: astore        13
     162: aload         13
     164: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     169: astore        14
     171: aload         8
     173: aload         12
     175: invokestatic  #79                 // Method shouldMoveATask:(Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)Z
     178: ifeq          251
     181: aload         14
     183: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     188: ifeq          251
     191: aload         14
     193: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     198: checkcast     #35                 // class org/apache/kafka/streams/processor/TaskId
     201: astore        15
     203: aload         12
     205: aload         15
     207: invokevirtual #80                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasAssignedTask:(Lorg/apache/kafka/streams/processor/TaskId;)Z
     210: ifne          217
     213: iconst_1
     214: goto          218
     217: iconst_0
     218: istore        16
     220: iload         16
     222: ifeq          248
     225: aload_2
     226: aload         8
     228: aload         15
     230: invokeinterface #81,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
     235: aload_3
     236: aload         12
     238: aload         15
     240: invokeinterface #81,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
     245: iconst_1
     246: istore        4
     248: goto          171
     251: goto          83
     254: goto          24
     257: goto          3
     260: return

  private static boolean shouldMoveATask(org.apache.kafka.streams.processor.internals.assignment.ClientState, org.apache.kafka.streams.processor.internals.assignment.ClientState);
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskLoad:()D
       4: aload_1
       5: invokevirtual #82                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskLoad:()D
       8: dsub
       9: dstore_2
      10: dload_2
      11: dconst_0
      12: dcmpg
      13: ifgt          18
      16: iconst_0
      17: ireturn
      18: aload_1
      19: invokevirtual #83                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskCount:()I
      22: i2d
      23: dconst_1
      24: dadd
      25: aload_1
      26: invokevirtual #84                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.capacity:()I
      29: i2d
      30: ddiv
      31: dstore        4
      33: aload_0
      34: invokevirtual #83                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskCount:()I
      37: i2d
      38: dconst_1
      39: dsub
      40: aload_0
      41: invokevirtual #84                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.capacity:()I
      44: i2d
      45: ddiv
      46: dstore        6
      48: dload         6
      50: dload         4
      52: dsub
      53: dstore        8
      55: dload         8
      57: dconst_0
      58: dcmpg
      59: ifge          64
      62: iconst_0
      63: ireturn
      64: dload         8
      66: dload_2
      67: dcmpg
      68: ifge          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn

  private static void assignStatelessActiveTasks(java.util.TreeMap<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.lang.Iterable<org.apache.kafka.streams.processor.TaskId>);
    Code:
       0: new           #50                 // class org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet
       3: dup
       4: invokedynamic #85,  0             // InvokeDynamic #11:apply:()Ljava/util/function/BiFunction;
       9: aload_0
      10: invokedynamic #86,  0             // InvokeDynamic #12:apply:(Ljava/util/TreeMap;)Ljava/util/function/Function;
      15: invokespecial #53                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet."<init>":(Ljava/util/function/BiFunction;Ljava/util/function/Function;)V
      18: astore_2
      19: aload_2
      20: aload_0
      21: invokevirtual #54                 // Method java/util/TreeMap.keySet:()Ljava/util/Set;
      24: invokevirtual #55                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offerAll:(Ljava/util/Collection;)V
      27: aload_1
      28: invokeinterface #87,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      33: astore_3
      34: aload_3
      35: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          89
      43: aload_3
      44: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #35                 // class org/apache/kafka/streams/processor/TaskId
      52: astore        4
      54: aload_2
      55: aload         4
      57: invokevirtual #60                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.poll:(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/UUID;
      60: astore        5
      62: aload_0
      63: aload         5
      65: invokevirtual #61                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      71: astore        6
      73: aload         6
      75: aload         4
      77: invokevirtual #39                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      80: aload_2
      81: aload         5
      83: invokevirtual #63                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offer:(Ljava/util/UUID;)V
      86: goto          34
      89: return

  private static java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.SortedSet<java.util.UUID>> tasksToCaughtUpClients(java.util.Set<org.apache.kafka.streams.processor.TaskId>, java.util.Map<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, long);
    Code:
       0: new           #88                 // class java/util/HashMap
       3: dup
       4: invokespecial #89                 // Method java/util/HashMap."<init>":()V
       7: astore        4
       9: aload_0
      10: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore        5
      17: aload         5
      19: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          162
      27: aload         5
      29: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #35                 // class org/apache/kafka/streams/processor/TaskId
      37: astore        6
      39: new           #2                  // class java/util/TreeSet
      42: dup
      43: invokespecial #90                 // Method java/util/TreeSet."<init>":()V
      46: astore        7
      48: aload_1
      49: invokeinterface #91,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      54: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore        8
      61: aload         8
      63: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          147
      71: aload         8
      73: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      78: checkcast     #72                 // class java/util/Map$Entry
      81: astore        9
      83: aload         9
      85: invokeinterface #73,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      90: checkcast     #74                 // class java/util/UUID
      93: astore        10
      95: aload         9
      97: invokeinterface #75,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     102: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     105: aload         6
     107: invokevirtual #92                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.lagFor:(Lorg/apache/kafka/streams/processor/TaskId;)J
     110: lstore        11
     112: lload         11
     114: invokestatic  #93                 // Method activeRunning:(J)Z
     117: ifne          136
     120: lload_2
     121: invokestatic  #94                 // Method unbounded:(J)Z
     124: ifne          136
     127: lload_2
     128: lload         11
     130: invokestatic  #95                 // Method acceptable:(JJ)Z
     133: ifeq          144
     136: aload         7
     138: aload         10
     140: invokevirtual #96                 // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
     143: pop
     144: goto          61
     147: aload         4
     149: aload         6
     151: aload         7
     153: invokeinterface #97,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: goto          17
     162: aload         4
     164: areturn

  private static boolean unbounded(long);
    Code:
       0: lload_0
       1: ldc2_w        #99                 // long 9223372036854775807l
       4: lcmp
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static boolean acceptable(long, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: iflt          16
       6: lload_2
       7: lload_0
       8: lcmp
       9: ifgt          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static boolean activeRunning(long);
    Code:
       0: lload_0
       1: ldc2_w        #102                // long -2l
       4: lcmp
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static java.lang.Double lambda$assignStatelessActiveTasks$5(java.util.TreeMap, java.util.UUID);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
       8: invokevirtual #104                // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.activeTaskLoad:()D
      11: invokestatic  #105                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      14: areturn

  private static java.lang.Boolean lambda$assignStatelessActiveTasks$4(java.util.UUID, org.apache.kafka.streams.processor.TaskId);
    Code:
       0: iconst_1
       1: invokestatic  #106                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  private static java.lang.Double lambda$assignStandbyReplicaTasks$3(java.util.TreeMap, java.util.UUID);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
       8: invokevirtual #82                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskLoad:()D
      11: invokestatic  #105                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      14: areturn

  private static java.lang.Boolean lambda$assignStandbyReplicaTasks$2(java.util.TreeMap, java.util.UUID, org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #38                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
       8: aload_2
       9: invokevirtual #80                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasAssignedTask:(Lorg/apache/kafka/streams/processor/TaskId;)Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: invokestatic  #106                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      23: areturn

  private static java.lang.Integer lambda$assignStandbyReplicaTasks$1(int, org.apache.kafka.streams.processor.TaskId);
    Code:
       0: iload_0
       1: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       4: areturn

  private static org.apache.kafka.streams.processor.TaskId lambda$assignStandbyReplicaTasks$0(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_0
       1: areturn

  static {};
    Code:
       0: ldc           #107                // class org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor
       2: invokestatic  #108                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #20                 // Field log:Lorg/slf4j/Logger;
       8: return
}
