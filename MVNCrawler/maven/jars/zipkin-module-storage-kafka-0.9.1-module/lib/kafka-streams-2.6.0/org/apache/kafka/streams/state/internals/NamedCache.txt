Compiled from "NamedCache.java"
class org.apache.kafka.streams.state.internals.NamedCache {
  private static final org.slf4j.Logger log;

  private final java.lang.String name;

  private final java.lang.String storeName;

  private final java.lang.String taskName;

  private final java.util.NavigableMap<org.apache.kafka.common.utils.Bytes, org.apache.kafka.streams.state.internals.NamedCache$LRUNode> cache;

  private final java.util.Set<org.apache.kafka.common.utils.Bytes> dirtyKeys;

  private org.apache.kafka.streams.state.internals.ThreadCache$DirtyEntryFlushListener listener;

  private org.apache.kafka.streams.state.internals.NamedCache$LRUNode tail;

  private org.apache.kafka.streams.state.internals.NamedCache$LRUNode head;

  private long currentSizeBytes;

  private final org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl streamsMetrics;

  private final org.apache.kafka.common.metrics.Sensor hitRatioSensor;

  private long numReadHits;

  private long numReadMisses;

  private long numOverwrites;

  private long numFlushes;

  org.apache.kafka.streams.state.internals.NamedCache(java.lang.String, org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #4                  // Field cache:Ljava/util/NavigableMap;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #7                  // Field dirtyKeys:Ljava/util/Set;
      26: aload_0
      27: lconst_0
      28: putfield      #8                  // Field numReadHits:J
      31: aload_0
      32: lconst_0
      33: putfield      #9                  // Field numReadMisses:J
      36: aload_0
      37: lconst_0
      38: putfield      #10                 // Field numOverwrites:J
      41: aload_0
      42: lconst_0
      43: putfield      #11                 // Field numFlushes:J
      46: aload_0
      47: aload_1
      48: putfield      #12                 // Field name:Ljava/lang/String;
      51: aload_0
      52: aload_2
      53: putfield      #13                 // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      56: aload_0
      57: aload_1
      58: invokestatic  #14                 // Method org/apache/kafka/streams/state/internals/ThreadCache.underlyingStoreNamefromCacheName:(Ljava/lang/String;)Ljava/lang/String;
      61: putfield      #15                 // Field storeName:Ljava/lang/String;
      64: aload_0
      65: aload_1
      66: invokestatic  #16                 // Method org/apache/kafka/streams/state/internals/ThreadCache.taskIDfromCacheName:(Ljava/lang/String;)Ljava/lang/String;
      69: putfield      #17                 // Field taskName:Ljava/lang/String;
      72: aload_0
      73: aload_2
      74: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      77: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      80: aload_0
      81: getfield      #17                 // Field taskName:Ljava/lang/String;
      84: aload_0
      85: getfield      #15                 // Field storeName:Ljava/lang/String;
      88: invokestatic  #20                 // Method org/apache/kafka/streams/state/internals/metrics/NamedCacheMetrics.hitRatioSensor:(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor;
      91: putfield      #21                 // Field hitRatioSensor:Lorg/apache/kafka/common/metrics/Sensor;
      94: return

  final synchronized java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:Ljava/lang/String;
       4: areturn

  synchronized long hits();
    Code:
       0: aload_0
       1: getfield      #8                  // Field numReadHits:J
       4: lreturn

  synchronized long misses();
    Code:
       0: aload_0
       1: getfield      #9                  // Field numReadMisses:J
       4: lreturn

  synchronized long overwrites();
    Code:
       0: aload_0
       1: getfield      #10                 // Field numOverwrites:J
       4: lreturn

  synchronized long flushes();
    Code:
       0: aload_0
       1: getfield      #11                 // Field numFlushes:J
       4: lreturn

  synchronized org.apache.kafka.streams.state.internals.LRUCacheEntry get(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokespecial #22                 // Method getInternal:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_0
      19: aload_2
      20: invokespecial #23                 // Method updateLRU:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
      23: aload_2
      24: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
      27: areturn

  synchronized void setListener(org.apache.kafka.streams.state.internals.ThreadCache$DirtyEntryFlushListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field listener:Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;
       5: return

  synchronized void flush();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #26                 // Method flush:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
       5: return

  private void flush(org.apache.kafka.streams.state.internals.NamedCache$LRUNode);
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field numFlushes:J
       5: lconst_1
       6: ladd
       7: putfield      #11                 // Field numFlushes:J
      10: getstatic     #27                 // Field log:Lorg/slf4j/Logger;
      13: invokeinterface #28,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      18: ifeq          82
      21: getstatic     #27                 // Field log:Lorg/slf4j/Logger;
      24: ldc           #29                 // String Named cache {} stats on flush: #hits={}, #misses={}, #overwrites={}, #flushes={}
      26: iconst_5
      27: anewarray     #30                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_0
      33: getfield      #12                 // Field name:Ljava/lang/String;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: invokevirtual #31                 // Method hits:()J
      43: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      46: aastore
      47: dup
      48: iconst_2
      49: aload_0
      50: invokevirtual #33                 // Method misses:()J
      53: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      56: aastore
      57: dup
      58: iconst_3
      59: aload_0
      60: invokevirtual #34                 // Method overwrites:()J
      63: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      66: aastore
      67: dup
      68: iconst_4
      69: aload_0
      70: invokevirtual #35                 // Method flushes:()J
      73: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      76: aastore
      77: invokeinterface #36,  3           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      82: aload_0
      83: getfield      #25                 // Field listener:Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;
      86: ifnonnull     124
      89: new           #37                 // class java/lang/IllegalArgumentException
      92: dup
      93: new           #38                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #40                 // String No listener for namespace
     102: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: getfield      #12                 // Field name:Ljava/lang/String;
     109: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #42                 // String  registered with cache
     114: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #44                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload_0
     125: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
     128: invokeinterface #45,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
     133: ifeq          137
     136: return
     137: new           #46                 // class java/util/ArrayList
     140: dup
     141: invokespecial #47                 // Method java/util/ArrayList."<init>":()V
     144: astore_2
     145: new           #46                 // class java/util/ArrayList
     148: dup
     149: invokespecial #47                 // Method java/util/ArrayList."<init>":()V
     152: astore_3
     153: aload_1
     154: ifnull        200
     157: aload_2
     158: new           #48                 // class org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntry
     161: dup
     162: aload_1
     163: invokestatic  #49                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$100:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/common/utils/Bytes;
     166: aload_1
     167: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
     170: invokevirtual #50                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.value:()[B
     173: aload_1
     174: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
     177: invokespecial #51                 // Method org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntry."<init>":(Lorg/apache/kafka/common/utils/Bytes;[BLorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
     180: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     185: pop
     186: aload_0
     187: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
     190: aload_1
     191: invokestatic  #49                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$100:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/common/utils/Bytes;
     194: invokeinterface #53,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     199: pop
     200: aload_0
     201: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
     204: invokeinterface #54,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     209: astore        4
     211: aload         4
     213: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     218: ifeq          342
     221: aload         4
     223: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     228: checkcast     #57                 // class org/apache/kafka/common/utils/Bytes
     231: astore        5
     233: aload_0
     234: aload         5
     236: invokespecial #22                 // Method getInternal:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
     239: astore        6
     241: aload         6
     243: ifnonnull     279
     246: new           #58                 // class java/lang/IllegalStateException
     249: dup
     250: new           #38                 // class java/lang/StringBuilder
     253: dup
     254: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
     257: ldc           #59                 // String Key =
     259: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: aload         5
     264: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     267: ldc           #61                 // String  found in dirty key set, but entry is null
     269: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     278: athrow
     279: aload_2
     280: new           #48                 // class org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntry
     283: dup
     284: aload         5
     286: aload         6
     288: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
     291: invokevirtual #50                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.value:()[B
     294: aload         6
     296: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
     299: invokespecial #51                 // Method org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntry."<init>":(Lorg/apache/kafka/common/utils/Bytes;[BLorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
     302: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     307: pop
     308: aload         6
     310: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
     313: invokevirtual #63                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.markClean:()V
     316: aload         6
     318: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
     321: invokevirtual #50                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.value:()[B
     324: ifnonnull     339
     327: aload_3
     328: aload         6
     330: invokestatic  #49                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$100:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/common/utils/Bytes;
     333: invokeinterface #52,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     338: pop
     339: goto          211
     342: aload_0
     343: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
     346: invokeinterface #64,  1           // InterfaceMethod java/util/Set.clear:()V
     351: aload_0
     352: getfield      #25                 // Field listener:Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;
     355: aload_2
     356: invokeinterface #65,  2           // InterfaceMethod org/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener.apply:(Ljava/util/List;)V
     361: aload_3
     362: invokeinterface #66,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     367: astore        4
     369: aload         4
     371: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     376: ifeq          401
     379: aload         4
     381: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     386: checkcast     #57                 // class org/apache/kafka/common/utils/Bytes
     389: astore        5
     391: aload_0
     392: aload         5
     394: invokevirtual #67                 // Method delete:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
     397: pop
     398: goto          369
     401: return

  synchronized void put(org.apache.kafka.common.utils.Bytes, org.apache.kafka.streams.state.internals.LRUCacheEntry);
    Code:
       0: aload_2
       1: invokevirtual #68                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.isDirty:()Z
       4: ifne          48
       7: aload_0
       8: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #69,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      17: ifeq          48
      20: new           #58                 // class java/lang/IllegalStateException
      23: dup
      24: ldc           #70                 // String Attempting to put a clean entry for key [%s] into NamedCache [%s] when it already contains a dirty entry for the same key
      26: iconst_2
      27: anewarray     #30                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_1
      33: aastore
      34: dup
      35: iconst_1
      36: aload_0
      37: getfield      #12                 // Field name:Ljava/lang/String;
      40: aastore
      41: invokestatic  #71                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
      52: aload_1
      53: invokeinterface #72,  2           // InterfaceMethod java/util/NavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #73                 // class org/apache/kafka/streams/state/internals/NamedCache$LRUNode
      61: astore_3
      62: aload_3
      63: ifnull        102
      66: aload_0
      67: dup
      68: getfield      #10                 // Field numOverwrites:J
      71: lconst_1
      72: ladd
      73: putfield      #10                 // Field numOverwrites:J
      76: aload_0
      77: dup
      78: getfield      #74                 // Field currentSizeBytes:J
      81: aload_3
      82: invokevirtual #75                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.size:()J
      85: lsub
      86: putfield      #74                 // Field currentSizeBytes:J
      89: aload_3
      90: aload_2
      91: invokestatic  #76                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$200:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
      94: aload_0
      95: aload_3
      96: invokespecial #23                 // Method updateLRU:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
      99: goto          129
     102: new           #73                 // class org/apache/kafka/streams/state/internals/NamedCache$LRUNode
     105: dup
     106: aload_1
     107: aload_2
     108: invokespecial #77                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode."<init>":(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
     111: astore_3
     112: aload_0
     113: aload_3
     114: invokespecial #78                 // Method putHead:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
     117: aload_0
     118: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
     121: aload_1
     122: aload_3
     123: invokeinterface #79,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload_2
     130: invokevirtual #68                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.isDirty:()Z
     133: ifeq          158
     136: aload_0
     137: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
     140: aload_1
     141: invokeinterface #53,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     146: pop
     147: aload_0
     148: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
     151: aload_1
     152: invokeinterface #80,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     157: pop
     158: aload_0
     159: dup
     160: getfield      #74                 // Field currentSizeBytes:J
     163: aload_3
     164: invokevirtual #75                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.size:()J
     167: ladd
     168: putfield      #74                 // Field currentSizeBytes:J
     171: return

  synchronized long sizeInBytes();
    Code:
       0: aload_0
       1: getfield      #74                 // Field currentSizeBytes:J
       4: lreturn

  private org.apache.kafka.streams.state.internals.NamedCache$LRUNode getInternal(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
       4: aload_1
       5: invokeinterface #72,  2           // InterfaceMethod java/util/NavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #73                 // class org/apache/kafka/streams/state/internals/NamedCache$LRUNode
      13: astore_2
      14: aload_2
      15: ifnonnull     30
      18: aload_0
      19: dup
      20: getfield      #9                  // Field numReadMisses:J
      23: lconst_1
      24: ladd
      25: putfield      #9                  // Field numReadMisses:J
      28: aconst_null
      29: areturn
      30: aload_0
      31: dup
      32: getfield      #8                  // Field numReadHits:J
      35: lconst_1
      36: ladd
      37: putfield      #8                  // Field numReadHits:J
      40: aload_0
      41: getfield      #21                 // Field hitRatioSensor:Lorg/apache/kafka/common/metrics/Sensor;
      44: aload_0
      45: getfield      #8                  // Field numReadHits:J
      48: l2d
      49: aload_0
      50: getfield      #8                  // Field numReadHits:J
      53: aload_0
      54: getfield      #9                  // Field numReadMisses:J
      57: ladd
      58: l2d
      59: ddiv
      60: invokevirtual #81                 // Method org/apache/kafka/common/metrics/Sensor.record:(D)V
      63: aload_2
      64: areturn

  private void updateLRU(org.apache.kafka.streams.state.internals.NamedCache$LRUNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #82                 // Method remove:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
       5: aload_0
       6: aload_1
       7: invokespecial #78                 // Method putHead:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
      10: return

  private void remove(org.apache.kafka.streams.state.internals.NamedCache$LRUNode);
    Code:
       0: aload_1
       1: invokestatic  #83                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$300:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       4: ifnull        22
       7: aload_1
       8: invokestatic  #83                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$300:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      11: aload_1
      12: invokestatic  #84                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$400:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      15: invokestatic  #85                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$402:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      18: pop
      19: goto          30
      22: aload_0
      23: aload_1
      24: invokestatic  #84                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$400:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      27: putfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      30: aload_1
      31: invokestatic  #84                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$400:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      34: ifnull        52
      37: aload_1
      38: invokestatic  #84                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$400:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      41: aload_1
      42: invokestatic  #83                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$300:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      45: invokestatic  #87                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$302:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      48: pop
      49: goto          60
      52: aload_0
      53: aload_1
      54: invokestatic  #83                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$300:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      57: putfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      60: return

  private void putHead(org.apache.kafka.streams.state.internals.NamedCache$LRUNode);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       5: invokestatic  #85                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$402:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       8: pop
       9: aload_1
      10: aconst_null
      11: invokestatic  #87                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$302:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      14: pop
      15: aload_0
      16: getfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      19: ifnull        31
      22: aload_0
      23: getfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      26: aload_1
      27: invokestatic  #87                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$302:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      30: pop
      31: aload_0
      32: aload_1
      33: putfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      36: aload_0
      37: getfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      40: ifnonnull     51
      43: aload_0
      44: aload_0
      45: getfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      48: putfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      51: return

  synchronized void evict();
    Code:
       0: aload_0
       1: getfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      12: astore_1
      13: aload_0
      14: dup
      15: getfield      #74                 // Field currentSizeBytes:J
      18: aload_1
      19: invokevirtual #75                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.size:()J
      22: lsub
      23: putfield      #74                 // Field currentSizeBytes:J
      26: aload_0
      27: aload_1
      28: invokespecial #82                 // Method remove:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
      31: aload_0
      32: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
      35: aload_1
      36: invokestatic  #49                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$100:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/common/utils/Bytes;
      39: invokeinterface #89,  2           // InterfaceMethod java/util/NavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload_1
      46: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
      49: invokevirtual #68                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.isDirty:()Z
      52: ifeq          60
      55: aload_0
      56: aload_1
      57: invokespecial #26                 // Method flush:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
      60: return

  synchronized org.apache.kafka.streams.state.internals.LRUCacheEntry putIfAbsent(org.apache.kafka.common.utils.Bytes, org.apache.kafka.streams.state.internals.LRUCacheEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #90                 // Method get:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
       5: astore_3
       6: aload_3
       7: ifnonnull     16
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #91                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
      16: aload_3
      17: areturn

  synchronized void putAll(java.util.List<org.apache.kafka.streams.KeyValue<byte[], org.apache.kafka.streams.state.internals.LRUCacheEntry>>);
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          50
      16: aload_2
      17: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #92                 // class org/apache/kafka/streams/KeyValue
      25: astore_3
      26: aload_0
      27: aload_3
      28: getfield      #93                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      31: checkcast     #94                 // class "[B"
      34: invokestatic  #95                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
      37: aload_3
      38: getfield      #96                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      41: checkcast     #97                 // class org/apache/kafka/streams/state/internals/LRUCacheEntry
      44: invokevirtual #91                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)V
      47: goto          7
      50: return

  synchronized org.apache.kafka.streams.state.internals.LRUCacheEntry delete(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod java/util/NavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #73                 // class org/apache/kafka/streams/state/internals/NamedCache$LRUNode
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_0
      21: aload_2
      22: invokespecial #82                 // Method remove:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)V
      25: aload_0
      26: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #53,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: dup
      38: getfield      #74                 // Field currentSizeBytes:J
      41: aload_2
      42: invokevirtual #75                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.size:()J
      45: lsub
      46: putfield      #74                 // Field currentSizeBytes:J
      49: aload_2
      50: invokevirtual #98                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.entry:()Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
      53: areturn

  public long size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
       4: invokeinterface #99,  1           // InterfaceMethod java/util/NavigableMap.size:()I
       9: i2l
      10: lreturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
       4: invokeinterface #100,  1          // InterfaceMethod java/util/NavigableMap.isEmpty:()Z
       9: ireturn

  synchronized java.util.Iterator<org.apache.kafka.common.utils.Bytes> keyRange(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
       5: invokeinterface #101,  1          // InterfaceMethod java/util/NavigableMap.navigableKeySet:()Ljava/util/NavigableSet;
      10: aload_1
      11: iconst_1
      12: aload_2
      13: iconst_1
      14: invokeinterface #102,  5          // InterfaceMethod java/util/NavigableSet.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
      19: invokespecial #103                // Method keySetIterator:(Ljava/util/Set;)Ljava/util/Iterator;
      22: areturn

  private java.util.Iterator<org.apache.kafka.common.utils.Bytes> keySetIterator(java.util.Set<org.apache.kafka.common.utils.Bytes>);
    Code:
       0: new           #104                // class java/util/TreeSet
       3: dup
       4: aload_1
       5: invokespecial #105                // Method java/util/TreeSet."<init>":(Ljava/util/Collection;)V
       8: invokevirtual #106                // Method java/util/TreeSet.iterator:()Ljava/util/Iterator;
      11: areturn

  synchronized java.util.Iterator<org.apache.kafka.common.utils.Bytes> allKeys();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
       5: invokeinterface #101,  1          // InterfaceMethod java/util/NavigableMap.navigableKeySet:()Ljava/util/NavigableSet;
      10: invokespecial #103                // Method keySetIterator:(Ljava/util/Set;)Ljava/util/Iterator;
      13: areturn

  synchronized org.apache.kafka.streams.state.internals.LRUCacheEntry first();
    Code:
       0: aload_0
       1: getfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      13: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
      16: areturn

  synchronized org.apache.kafka.streams.state.internals.LRUCacheEntry last();
    Code:
       0: aload_0
       1: getfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      13: invokestatic  #24                 // Method org/apache/kafka/streams/state/internals/NamedCache$LRUNode.access$000:(Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;)Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;
      16: areturn

  synchronized org.apache.kafka.streams.state.internals.NamedCache$LRUNode head();
    Code:
       0: aload_0
       1: getfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       4: areturn

  synchronized org.apache.kafka.streams.state.internals.NamedCache$LRUNode tail();
    Code:
       0: aload_0
       1: getfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       4: areturn

  synchronized void close();
    Code:
       0: aload_0
       1: aload_0
       2: aconst_null
       3: dup_x1
       4: putfield      #88                 // Field tail:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
       7: putfield      #86                 // Field head:Lorg/apache/kafka/streams/state/internals/NamedCache$LRUNode;
      10: aload_0
      11: aconst_null
      12: putfield      #25                 // Field listener:Lorg/apache/kafka/streams/state/internals/ThreadCache$DirtyEntryFlushListener;
      15: aload_0
      16: lconst_0
      17: putfield      #74                 // Field currentSizeBytes:J
      20: aload_0
      21: getfield      #7                  // Field dirtyKeys:Ljava/util/Set;
      24: invokeinterface #64,  1           // InterfaceMethod java/util/Set.clear:()V
      29: aload_0
      30: getfield      #4                  // Field cache:Ljava/util/NavigableMap;
      33: invokeinterface #107,  1          // InterfaceMethod java/util/NavigableMap.clear:()V
      38: aload_0
      39: getfield      #13                 // Field streamsMetrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      42: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      48: aload_0
      49: getfield      #17                 // Field taskName:Ljava/lang/String;
      52: aload_0
      53: getfield      #15                 // Field storeName:Ljava/lang/String;
      56: invokevirtual #108                // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.removeAllCacheLevelSensors:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      59: return

  static {};
    Code:
       0: ldc           #109                // class org/apache/kafka/streams/state/internals/NamedCache
       2: invokestatic  #110                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #27                 // Field log:Lorg/slf4j/Logger;
       8: return
}
