Compiled from "RocksDBStore.java"
class org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor implements org.apache.kafka.streams.state.internals.RocksDBStore$RocksDBAccessor {
  private final org.rocksdb.ColumnFamilyHandle columnFamily;

  final org.apache.kafka.streams.state.internals.RocksDBStore this$0;

  org.apache.kafka.streams.state.internals.RocksDBStore$SingleColumnFamilyAccessor(org.apache.kafka.streams.state.internals.RocksDBStore, org.rocksdb.ColumnFamilyHandle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      14: return

  public void put(byte[], byte[]);
    Code:
       0: aload_2
       1: ifnonnull     64
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       8: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
      11: aload_0
      12: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      19: getfield      #5                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.wOptions:Lorg/rocksdb/WriteOptions;
      22: aload_1
      23: invokevirtual #6                  // Method org/rocksdb/RocksDB.delete:(Lorg/rocksdb/ColumnFamilyHandle;Lorg/rocksdb/WriteOptions;[B)V
      26: goto          125
      29: astore_3
      30: new           #8                  // class org/apache/kafka/streams/errors/ProcessorStateException
      33: dup
      34: new           #9                  // class java/lang/StringBuilder
      37: dup
      38: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #11                 // String Error while removing key from store
      43: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      50: getfield      #13                 // Field org/apache/kafka/streams/state/internals/RocksDBStore.name:Ljava/lang/String;
      53: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: aload_3
      60: invokespecial #15                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      63: athrow
      64: aload_0
      65: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      68: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
      71: aload_0
      72: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      75: aload_0
      76: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      79: getfield      #5                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.wOptions:Lorg/rocksdb/WriteOptions;
      82: aload_1
      83: aload_2
      84: invokevirtual #16                 // Method org/rocksdb/RocksDB.put:(Lorg/rocksdb/ColumnFamilyHandle;Lorg/rocksdb/WriteOptions;[B[B)V
      87: goto          125
      90: astore_3
      91: new           #8                  // class org/apache/kafka/streams/errors/ProcessorStateException
      94: dup
      95: new           #9                  // class java/lang/StringBuilder
      98: dup
      99: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #17                 // String Error while putting key/value into store
     104: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_0
     108: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
     111: getfield      #13                 // Field org/apache/kafka/streams/state/internals/RocksDBStore.name:Ljava/lang/String;
     114: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: aload_3
     121: invokespecial #15                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     124: athrow
     125: return
    Exception table:
       from    to  target type
           4    26    29   Class org/rocksdb/RocksDBException
          64    87    90   Class org/rocksdb/RocksDBException

  public void prepareBatch(java.util.List<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>>, org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_1
       1: invokeinterface #18,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          65
      16: aload_3
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #21                 // class org/apache/kafka/streams/KeyValue
      25: astore        4
      27: aload         4
      29: getfield      #22                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      32: ldc           #23                 // String key cannot be null
      34: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: aload         4
      41: getfield      #22                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      44: checkcast     #25                 // class org/apache/kafka/common/utils/Bytes
      47: invokevirtual #26                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      50: aload         4
      52: getfield      #27                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      55: checkcast     #28                 // class "[B"
      58: aload_2
      59: invokevirtual #29                 // Method addToBatch:([B[BLorg/rocksdb/WriteBatch;)V
      62: goto          7
      65: return

  public byte[] get(byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       4: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
       7: aload_0
       8: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      11: aload_1
      12: invokevirtual #30                 // Method org/rocksdb/RocksDB.get:(Lorg/rocksdb/ColumnFamilyHandle;[B)[B
      15: areturn

  public byte[] getOnly(byte[]) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       4: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
       7: aload_0
       8: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      11: aload_1
      12: invokevirtual #30                 // Method org/rocksdb/RocksDB.get:(Lorg/rocksdb/ColumnFamilyHandle;[B)[B
      15: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: new           #31                 // class org/apache/kafka/streams/state/internals/RocksDBRangeIterator
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       8: getfield      #13                 // Field org/apache/kafka/streams/state/internals/RocksDBStore.name:Ljava/lang/String;
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      15: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
      18: aload_0
      19: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      22: invokevirtual #32                 // Method org/rocksdb/RocksDB.newIterator:(Lorg/rocksdb/ColumnFamilyHandle;)Lorg/rocksdb/RocksIterator;
      25: aload_0
      26: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      29: getfield      #33                 // Field org/apache/kafka/streams/state/internals/RocksDBStore.openIterators:Ljava/util/Set;
      32: aload_1
      33: aload_2
      34: invokespecial #34                 // Method org/apache/kafka/streams/state/internals/RocksDBRangeIterator."<init>":(Ljava/lang/String;Lorg/rocksdb/RocksIterator;Ljava/util/Set;Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)V
      37: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       4: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
       7: aload_0
       8: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      11: invokevirtual #32                 // Method org/rocksdb/RocksDB.newIterator:(Lorg/rocksdb/ColumnFamilyHandle;)Lorg/rocksdb/RocksIterator;
      14: astore_1
      15: aload_1
      16: invokevirtual #35                 // Method org/rocksdb/RocksIterator.seekToFirst:()V
      19: new           #36                 // class org/apache/kafka/streams/state/internals/RocksDbIterator
      22: dup
      23: aload_0
      24: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      27: getfield      #13                 // Field org/apache/kafka/streams/state/internals/RocksDBStore.name:Ljava/lang/String;
      30: aload_1
      31: aload_0
      32: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      35: getfield      #33                 // Field org/apache/kafka/streams/state/internals/RocksDBStore.openIterators:Ljava/util/Set;
      38: invokespecial #37                 // Method org/apache/kafka/streams/state/internals/RocksDbIterator."<init>":(Ljava/lang/String;Lorg/rocksdb/RocksIterator;Ljava/util/Set;)V
      41: areturn

  public long approximateNumEntries() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       4: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
       7: aload_0
       8: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      11: ldc           #38                 // String rocksdb.estimate-num-keys
      13: invokevirtual #39                 // Method org/rocksdb/RocksDB.getLongProperty:(Lorg/rocksdb/ColumnFamilyHandle;Ljava/lang/String;)J
      16: lreturn

  public void flush() throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
       4: getfield      #4                  // Field org/apache/kafka/streams/state/internals/RocksDBStore.db:Lorg/rocksdb/RocksDB;
       7: aload_0
       8: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/state/internals/RocksDBStore;
      11: getfield      #40                 // Field org/apache/kafka/streams/state/internals/RocksDBStore.fOptions:Lorg/rocksdb/FlushOptions;
      14: aload_0
      15: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      18: invokevirtual #41                 // Method org/rocksdb/RocksDB.flush:(Lorg/rocksdb/FlushOptions;Lorg/rocksdb/ColumnFamilyHandle;)V
      21: return

  public void prepareBatchForRestore(java.util.Collection<org.apache.kafka.streams.KeyValue<byte[], byte[]>>, org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          51
      16: aload_3
      17: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #21                 // class org/apache/kafka/streams/KeyValue
      25: astore        4
      27: aload_0
      28: aload         4
      30: getfield      #22                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      33: checkcast     #28                 // class "[B"
      36: aload         4
      38: getfield      #27                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      41: checkcast     #28                 // class "[B"
      44: aload_2
      45: invokevirtual #29                 // Method addToBatch:([B[BLorg/rocksdb/WriteBatch;)V
      48: goto          7
      51: return

  public void addToBatch(byte[], byte[], org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_2
       1: ifnonnull     16
       4: aload_3
       5: aload_0
       6: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
       9: aload_1
      10: invokevirtual #43                 // Method org/rocksdb/WriteBatch.delete:(Lorg/rocksdb/ColumnFamilyHandle;[B)V
      13: goto          26
      16: aload_3
      17: aload_0
      18: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
      21: aload_1
      22: aload_2
      23: invokevirtual #44                 // Method org/rocksdb/WriteBatch.put:(Lorg/rocksdb/ColumnFamilyHandle;[B[B)V
      26: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field columnFamily:Lorg/rocksdb/ColumnFamilyHandle;
       4: invokevirtual #45                 // Method org/rocksdb/ColumnFamilyHandle.close:()V
       7: return
}
