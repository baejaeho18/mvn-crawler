Compiled from "StreamsGraphNode.java"
public abstract class org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode {
  private final java.util.Collection<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode> childNodes;

  private final java.util.Collection<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode> parentNodes;

  private final java.lang.String nodeName;

  private boolean keyChangingOperation;

  private boolean valueChangingOperation;

  private boolean mergeNode;

  private java.lang.Integer buildPriority;

  private boolean hasWrittenToTopology;

  public org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashSet
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      12: putfield      #4                  // Field childNodes:Ljava/util/Collection;
      15: aload_0
      16: new           #2                  // class java/util/LinkedHashSet
      19: dup
      20: invokespecial #3                  // Method java/util/LinkedHashSet."<init>":()V
      23: putfield      #5                  // Field parentNodes:Ljava/util/Collection;
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field hasWrittenToTopology:Z
      31: aload_0
      32: aload_1
      33: putfield      #7                  // Field nodeName:Ljava/lang/String;
      36: return

  public java.util.Collection<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode> parentNodes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parentNodes:Ljava/util/Collection;
       4: areturn

  java.lang.String[] parentNodeNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parentNodes:Ljava/util/Collection;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.size:()I
       9: anewarray     #9                  // class java/lang/String
      12: astore_1
      13: iconst_0
      14: istore_2
      15: aload_0
      16: getfield      #5                  // Field parentNodes:Ljava/util/Collection;
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          59
      34: aload_3
      35: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #13                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      43: astore        4
      45: aload_1
      46: iload_2
      47: iinc          2, 1
      50: aload         4
      52: invokevirtual #14                 // Method nodeName:()Ljava/lang/String;
      55: aastore
      56: goto          25
      59: aload_1
      60: areturn

  public boolean allParentsWrittenToTopology();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parentNodes:Ljava/util/Collection;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          41
      19: aload_1
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #13                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      28: astore_2
      29: aload_2
      30: invokevirtual #15                 // Method hasWrittenToTopology:()Z
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: goto          10
      41: iconst_1
      42: ireturn

  public java.util.Collection<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode> children();
    Code:
       0: new           #2                  // class java/util/LinkedHashSet
       3: dup
       4: aload_0
       5: getfield      #4                  // Field childNodes:Ljava/util/Collection;
       8: invokespecial #16                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      11: areturn

  public void clearChildren();
    Code:
       0: aload_0
       1: getfield      #4                  // Field childNodes:Ljava/util/Collection;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          43
      19: aload_1
      20: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #13                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      28: astore_2
      29: aload_2
      30: getfield      #5                  // Field parentNodes:Ljava/util/Collection;
      33: aload_0
      34: invokeinterface #17,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      39: pop
      40: goto          10
      43: aload_0
      44: getfield      #4                  // Field childNodes:Ljava/util/Collection;
      47: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.clear:()V
      52: return

  public boolean removeChild(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field childNodes:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      10: ifeq          30
      13: aload_1
      14: getfield      #5                  // Field parentNodes:Ljava/util/Collection;
      17: aload_0
      18: invokeinterface #17,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public void addChild(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_0
       1: getfield      #4                  // Field childNodes:Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_1
      12: getfield      #5                  // Field parentNodes:Ljava/util/Collection;
      15: aload_0
      16: invokeinterface #19,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      21: pop
      22: return

  public java.lang.String nodeName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field nodeName:Ljava/lang/String;
       4: areturn

  public boolean isKeyChangingOperation();
    Code:
       0: aload_0
       1: getfield      #20                 // Field keyChangingOperation:Z
       4: ireturn

  public boolean isValueChangingOperation();
    Code:
       0: aload_0
       1: getfield      #21                 // Field valueChangingOperation:Z
       4: ireturn

  public boolean isMergeNode();
    Code:
       0: aload_0
       1: getfield      #22                 // Field mergeNode:Z
       4: ireturn

  public void setMergeNode(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field mergeNode:Z
       5: return

  public void setValueChangingOperation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field valueChangingOperation:Z
       5: return

  public void keyChangingOperation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field keyChangingOperation:Z
       5: return

  public void setBuildPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #24                 // Field buildPriority:Ljava/lang/Integer;
       8: return

  public java.lang.Integer buildPriority();
    Code:
       0: aload_0
       1: getfield      #24                 // Field buildPriority:Ljava/lang/Integer;
       4: areturn

  public abstract void writeToTopology(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder);

  public boolean hasWrittenToTopology();
    Code:
       0: aload_0
       1: getfield      #6                  // Field hasWrittenToTopology:Z
       4: ireturn

  public void setHasWrittenToTopology(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field hasWrittenToTopology:Z
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method parentNodeNames:()[Ljava/lang/String;
       4: astore_1
       5: new           #26                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #28                 // String StreamsGraphNode{nodeName=\'
      14: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_0
      18: getfield      #7                  // Field nodeName:Ljava/lang/String;
      21: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: bipush        39
      26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      29: ldc           #31                 // String , buildPriority=
      31: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #24                 // Field buildPriority:Ljava/lang/Integer;
      38: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #33                 // String , hasWrittenToTopology=
      43: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: getfield      #6                  // Field hasWrittenToTopology:Z
      50: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      53: ldc           #35                 // String , keyChangingOperation=
      55: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_0
      59: getfield      #20                 // Field keyChangingOperation:Z
      62: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      65: ldc           #36                 // String , valueChangingOperation=
      67: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: aload_0
      71: getfield      #21                 // Field valueChangingOperation:Z
      74: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      77: ldc           #37                 // String , mergeNode=
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_0
      83: getfield      #22                 // Field mergeNode:Z
      86: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      89: ldc           #38                 // String , parentNodes=
      91: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokestatic  #39                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      98: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: bipush        125
     103: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     106: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: areturn
}
