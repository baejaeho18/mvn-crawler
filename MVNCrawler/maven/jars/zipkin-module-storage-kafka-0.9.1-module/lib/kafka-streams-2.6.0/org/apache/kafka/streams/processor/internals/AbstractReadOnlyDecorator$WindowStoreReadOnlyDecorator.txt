Compiled from "AbstractReadOnlyDecorator.java"
class org.apache.kafka.streams.processor.internals.AbstractReadOnlyDecorator$WindowStoreReadOnlyDecorator<K, V> extends org.apache.kafka.streams.processor.internals.AbstractReadOnlyDecorator<org.apache.kafka.streams.state.WindowStore<K, V>, K, V> implements org.apache.kafka.streams.state.WindowStore<K, V> {
  private org.apache.kafka.streams.processor.internals.AbstractReadOnlyDecorator$WindowStoreReadOnlyDecorator(org.apache.kafka.streams.state.WindowStore<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #2                  // Method org/apache/kafka/streams/processor/internals/AbstractReadOnlyDecorator."<init>":(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/internals/AbstractReadOnlyDecorator$1;)V
       6: return

  public void put(K, V);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #5                  // String Global store is read only
       6: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void put(K, V, long);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #5                  // String Global store is read only
       6: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public V fetch(K, long);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #8                  // class org/apache/kafka/streams/state/WindowStore
       7: aload_1
       8: lload_2
       9: invokeinterface #9,  4            // InterfaceMethod org/apache/kafka/streams/state/WindowStore.fetch:(Ljava/lang/Object;J)Ljava/lang/Object;
      14: areturn

  public org.apache.kafka.streams.state.WindowStoreIterator<V> fetch(K, long, long);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #8                  // class org/apache/kafka/streams/state/WindowStore
       7: aload_1
       8: lload_2
       9: lload         4
      11: invokeinterface #10,  6           // InterfaceMethod org/apache/kafka/streams/state/WindowStore.fetch:(Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
      16: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<K>, V> fetch(K, K, long, long);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #8                  // class org/apache/kafka/streams/state/WindowStore
       7: aload_1
       8: aload_2
       9: lload_3
      10: lload         5
      12: invokeinterface #11,  7           // InterfaceMethod org/apache/kafka/streams/state/WindowStore.fetch:(Ljava/lang/Object;Ljava/lang/Object;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
      17: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<K>, V> all();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #8                  // class org/apache/kafka/streams/state/WindowStore
       7: invokeinterface #12,  1           // InterfaceMethod org/apache/kafka/streams/state/WindowStore.all:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<K>, V> fetchAll(long, long);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #8                  // class org/apache/kafka/streams/state/WindowStore
       7: lload_1
       8: lload_3
       9: invokeinterface #13,  5           // InterfaceMethod org/apache/kafka/streams/state/WindowStore.fetchAll:(JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
      14: areturn

  org.apache.kafka.streams.processor.internals.AbstractReadOnlyDecorator$WindowStoreReadOnlyDecorator(org.apache.kafka.streams.state.WindowStore, org.apache.kafka.streams.processor.internals.AbstractReadOnlyDecorator$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/kafka/streams/state/WindowStore;)V
       5: return
}
