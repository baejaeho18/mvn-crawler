Compiled from "Window.java"
public abstract class org.apache.kafka.streams.kstream.Window {
  protected final long startMs;

  protected final long endMs;

  private final java.time.Instant startTime;

  private final java.time.Instant endTime;

  public org.apache.kafka.streams.kstream.Window(long, long) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: lload_1
       5: lconst_0
       6: lcmp
       7: ifge          20
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #3                  // String Window startMs time cannot be negative.
      16: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: lload_3
      21: lload_1
      22: lcmp
      23: ifge          36
      26: new           #2                  // class java/lang/IllegalArgumentException
      29: dup
      30: ldc           #5                  // String Window endMs time cannot be smaller than window startMs time.
      32: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: lload_1
      38: putfield      #6                  // Field startMs:J
      41: aload_0
      42: lload_3
      43: putfield      #7                  // Field endMs:J
      46: aload_0
      47: lload_1
      48: invokestatic  #8                  // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
      51: putfield      #9                  // Field startTime:Ljava/time/Instant;
      54: aload_0
      55: lload_3
      56: invokestatic  #8                  // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
      59: putfield      #10                 // Field endTime:Ljava/time/Instant;
      62: return

  public long start();
    Code:
       0: aload_0
       1: getfield      #6                  // Field startMs:J
       4: lreturn

  public long end();
    Code:
       0: aload_0
       1: getfield      #7                  // Field endMs:J
       4: lreturn

  public java.time.Instant startTime();
    Code:
       0: aload_0
       1: getfield      #9                  // Field startTime:Ljava/time/Instant;
       4: areturn

  public java.time.Instant endTime();
    Code:
       0: aload_0
       1: getfield      #10                 // Field endTime:Ljava/time/Instant;
       4: areturn

  public abstract boolean overlap(org.apache.kafka.streams.kstream.Window);

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #12                 // class org/apache/kafka/streams/kstream/Window
      30: astore_2
      31: aload_0
      32: getfield      #6                  // Field startMs:J
      35: aload_2
      36: getfield      #6                  // Field startMs:J
      39: lcmp
      40: ifne          59
      43: aload_0
      44: getfield      #7                  // Field endMs:J
      47: aload_2
      48: getfield      #7                  // Field endMs:J
      51: lcmp
      52: ifne          59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field startMs:J
       4: bipush        32
       6: lshl
       7: aload_0
       8: getfield      #7                  // Field endMs:J
      11: lor
      12: ldc2_w        #13                 // long 4294967295l
      15: lrem
      16: l2i
      17: ireturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #17                 // String Window{startMs=
       9: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field startMs:J
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #20                 // String , endMs=
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #7                  // Field endMs:J
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
}
