Compiled from "KafkaStreams.java"
public final class org.apache.kafka.streams.KafkaStreams$State extends java.lang.Enum<org.apache.kafka.streams.KafkaStreams$State> {
  public static final org.apache.kafka.streams.KafkaStreams$State CREATED;

  public static final org.apache.kafka.streams.KafkaStreams$State REBALANCING;

  public static final org.apache.kafka.streams.KafkaStreams$State RUNNING;

  public static final org.apache.kafka.streams.KafkaStreams$State PENDING_SHUTDOWN;

  public static final org.apache.kafka.streams.KafkaStreams$State NOT_RUNNING;

  public static final org.apache.kafka.streams.KafkaStreams$State ERROR;

  private final java.util.Set<java.lang.Integer> validTransitions;

  private static final org.apache.kafka.streams.KafkaStreams$State[] $VALUES;

  public static org.apache.kafka.streams.KafkaStreams$State[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lorg/apache/kafka/streams/KafkaStreams$State;
       3: invokevirtual #2                  // Method "[Lorg/apache/kafka/streams/KafkaStreams$State;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lorg/apache/kafka/streams/KafkaStreams$State;"
       9: areturn

  public static org.apache.kafka.streams.KafkaStreams$State valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class org/apache/kafka/streams/KafkaStreams$State
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class org/apache/kafka/streams/KafkaStreams$State
       9: areturn

  private org.apache.kafka.streams.KafkaStreams$State(java.lang.Integer...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: new           #7                  // class java/util/HashSet
      10: dup
      11: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      14: putfield      #9                  // Field validTransitions:Ljava/util/Set;
      17: aload_0
      18: getfield      #9                  // Field validTransitions:Ljava/util/Set;
      21: aload_3
      22: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      25: invokeinterface #11,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      30: pop
      31: return

  public boolean isRunningOrRebalancing();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field RUNNING:Lorg/apache/kafka/streams/KafkaStreams$State;
       4: invokevirtual #13                 // Method equals:(Ljava/lang/Object;)Z
       7: ifne          20
      10: aload_0
      11: getstatic     #14                 // Field REBALANCING:Lorg/apache/kafka/streams/KafkaStreams$State;
      14: invokevirtual #13                 // Method equals:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public boolean isValidTransition(org.apache.kafka.streams.KafkaStreams$State);
    Code:
       0: aload_0
       1: getfield      #9                  // Field validTransitions:Ljava/util/Set;
       4: aload_1
       5: invokevirtual #15                 // Method ordinal:()I
       8: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      16: ireturn

  static {};
    Code:
       0: new           #4                  // class org/apache/kafka/streams/KafkaStreams$State
       3: dup
       4: ldc           #18                 // String CREATED
       6: iconst_0
       7: iconst_2
       8: anewarray     #19                 // class java/lang/Integer
      11: dup
      12: iconst_0
      13: iconst_1
      14: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aastore
      18: dup
      19: iconst_1
      20: iconst_3
      21: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      24: aastore
      25: invokespecial #20                 // Method "<init>":(Ljava/lang/String;I[Ljava/lang/Integer;)V
      28: putstatic     #21                 // Field CREATED:Lorg/apache/kafka/streams/KafkaStreams$State;
      31: new           #4                  // class org/apache/kafka/streams/KafkaStreams$State
      34: dup
      35: ldc           #22                 // String REBALANCING
      37: iconst_1
      38: iconst_3
      39: anewarray     #19                 // class java/lang/Integer
      42: dup
      43: iconst_0
      44: iconst_2
      45: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aastore
      49: dup
      50: iconst_1
      51: iconst_3
      52: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: aastore
      56: dup
      57: iconst_2
      58: iconst_5
      59: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: aastore
      63: invokespecial #20                 // Method "<init>":(Ljava/lang/String;I[Ljava/lang/Integer;)V
      66: putstatic     #14                 // Field REBALANCING:Lorg/apache/kafka/streams/KafkaStreams$State;
      69: new           #4                  // class org/apache/kafka/streams/KafkaStreams$State
      72: dup
      73: ldc           #23                 // String RUNNING
      75: iconst_2
      76: iconst_4
      77: anewarray     #19                 // class java/lang/Integer
      80: dup
      81: iconst_0
      82: iconst_1
      83: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      86: aastore
      87: dup
      88: iconst_1
      89: iconst_2
      90: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      93: aastore
      94: dup
      95: iconst_2
      96: iconst_3
      97: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     100: aastore
     101: dup
     102: iconst_3
     103: iconst_5
     104: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: aastore
     108: invokespecial #20                 // Method "<init>":(Ljava/lang/String;I[Ljava/lang/Integer;)V
     111: putstatic     #12                 // Field RUNNING:Lorg/apache/kafka/streams/KafkaStreams$State;
     114: new           #4                  // class org/apache/kafka/streams/KafkaStreams$State
     117: dup
     118: ldc           #24                 // String PENDING_SHUTDOWN
     120: iconst_3
     121: iconst_1
     122: anewarray     #19                 // class java/lang/Integer
     125: dup
     126: iconst_0
     127: iconst_4
     128: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     131: aastore
     132: invokespecial #20                 // Method "<init>":(Ljava/lang/String;I[Ljava/lang/Integer;)V
     135: putstatic     #25                 // Field PENDING_SHUTDOWN:Lorg/apache/kafka/streams/KafkaStreams$State;
     138: new           #4                  // class org/apache/kafka/streams/KafkaStreams$State
     141: dup
     142: ldc           #26                 // String NOT_RUNNING
     144: iconst_4
     145: iconst_0
     146: anewarray     #19                 // class java/lang/Integer
     149: invokespecial #20                 // Method "<init>":(Ljava/lang/String;I[Ljava/lang/Integer;)V
     152: putstatic     #27                 // Field NOT_RUNNING:Lorg/apache/kafka/streams/KafkaStreams$State;
     155: new           #4                  // class org/apache/kafka/streams/KafkaStreams$State
     158: dup
     159: ldc           #28                 // String ERROR
     161: iconst_5
     162: iconst_1
     163: anewarray     #19                 // class java/lang/Integer
     166: dup
     167: iconst_0
     168: iconst_3
     169: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     172: aastore
     173: invokespecial #20                 // Method "<init>":(Ljava/lang/String;I[Ljava/lang/Integer;)V
     176: putstatic     #29                 // Field ERROR:Lorg/apache/kafka/streams/KafkaStreams$State;
     179: bipush        6
     181: anewarray     #4                  // class org/apache/kafka/streams/KafkaStreams$State
     184: dup
     185: iconst_0
     186: getstatic     #21                 // Field CREATED:Lorg/apache/kafka/streams/KafkaStreams$State;
     189: aastore
     190: dup
     191: iconst_1
     192: getstatic     #14                 // Field REBALANCING:Lorg/apache/kafka/streams/KafkaStreams$State;
     195: aastore
     196: dup
     197: iconst_2
     198: getstatic     #12                 // Field RUNNING:Lorg/apache/kafka/streams/KafkaStreams$State;
     201: aastore
     202: dup
     203: iconst_3
     204: getstatic     #25                 // Field PENDING_SHUTDOWN:Lorg/apache/kafka/streams/KafkaStreams$State;
     207: aastore
     208: dup
     209: iconst_4
     210: getstatic     #27                 // Field NOT_RUNNING:Lorg/apache/kafka/streams/KafkaStreams$State;
     213: aastore
     214: dup
     215: iconst_5
     216: getstatic     #29                 // Field ERROR:Lorg/apache/kafka/streams/KafkaStreams$State;
     219: aastore
     220: putstatic     #1                  // Field $VALUES:[Lorg/apache/kafka/streams/KafkaStreams$State;
     223: return
}
