Compiled from "RecordCollectorImpl.java"
public class org.apache.kafka.streams.processor.internals.RecordCollectorImpl implements org.apache.kafka.streams.processor.internals.RecordCollector {
  private static final java.lang.String SEND_EXCEPTION_MESSAGE;

  private final org.slf4j.Logger log;

  private final org.apache.kafka.streams.processor.TaskId taskId;

  private final org.apache.kafka.streams.processor.internals.StreamsProducer streamsProducer;

  private final org.apache.kafka.streams.errors.ProductionExceptionHandler productionExceptionHandler;

  private final org.apache.kafka.common.metrics.Sensor droppedRecordsSensor;

  private final boolean eosEnabled;

  private final java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long> offsets;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.kafka.common.KafkaException> sendException;

  public org.apache.kafka.streams.processor.internals.RecordCollectorImpl(org.apache.kafka.common.utils.LogContext, org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.StreamsProducer, org.apache.kafka.streams.errors.ProductionExceptionHandler, org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: aconst_null
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #4                  // Field sendException:Ljava/util/concurrent/atomic/AtomicReference;
      16: aload_0
      17: aload_1
      18: aload_0
      19: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #6                  // Method org/apache/kafka/common/utils/LogContext.logger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      25: putfield      #7                  // Field log:Lorg/slf4j/Logger;
      28: aload_0
      29: aload_2
      30: putfield      #8                  // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
      33: aload_0
      34: aload_3
      35: putfield      #9                  // Field streamsProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      38: aload_0
      39: aload         4
      41: putfield      #10                 // Field productionExceptionHandler:Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;
      44: aload_0
      45: aload_3
      46: invokevirtual #11                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.eosEnabled:()Z
      49: putfield      #12                 // Field eosEnabled:Z
      52: invokestatic  #13                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      55: invokevirtual #14                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      58: astore        6
      60: aload_0
      61: aload         6
      63: aload_2
      64: invokevirtual #15                 // Method org/apache/kafka/streams/processor/TaskId.toString:()Ljava/lang/String;
      67: aload         5
      69: invokestatic  #16                 // Method org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.droppedRecordsSensorOrSkippedRecordsSensor:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
      72: putfield      #17                 // Field droppedRecordsSensor:Lorg/apache/kafka/common/metrics/Sensor;
      75: aload_0
      76: new           #18                 // class java/util/HashMap
      79: dup
      80: invokespecial #19                 // Method java/util/HashMap."<init>":()V
      83: putfield      #20                 // Field offsets:Ljava/util/Map;
      86: return

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #12                 // Field eosEnabled:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #9                  // Field streamsProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      11: invokevirtual #21                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.initTransaction:()V
      14: return

  public <K, V> void send(java.lang.String, K, V, org.apache.kafka.common.header.Headers, java.lang.Long, org.apache.kafka.common.serialization.Serializer<K>, org.apache.kafka.common.serialization.Serializer<V>, org.apache.kafka.streams.processor.StreamPartitioner<? super K, ? super V>);
    Code:
       0: aload         8
       2: ifnull        151
       5: aload_0
       6: getfield      #9                  // Field streamsProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
       9: aload_1
      10: invokevirtual #22                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.partitionsFor:(Ljava/lang/String;)Ljava/util/List;
      13: astore        10
      15: goto          72
      18: astore        11
      20: new           #24                 // class org/apache/kafka/streams/errors/StreamsException
      23: dup
      24: new           #25                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #27                 // String Could not determine the number of partitions for topic \'
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_1
      37: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #29                 // String \' for task
      42: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload_0
      46: getfield      #8                  // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
      49: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #31                 // String  due to
      54: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload         11
      59: invokevirtual #32                 // Method org/apache/kafka/common/KafkaException.toString:()Ljava/lang/String;
      62: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #34                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload         10
      74: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      79: ifle          104
      82: aload         8
      84: aload_1
      85: aload_2
      86: aload_3
      87: aload         10
      89: invokeinterface #35,  1           // InterfaceMethod java/util/List.size:()I
      94: invokeinterface #36,  5           // InterfaceMethod org/apache/kafka/streams/processor/StreamPartitioner.partition:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Integer;
      99: astore        9
     101: goto          148
     104: new           #24                 // class org/apache/kafka/streams/errors/StreamsException
     107: dup
     108: new           #25                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #37                 // String Could not get partition information for topic
     117: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_1
     121: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #38                 // String  for task
     126: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_0
     130: getfield      #8                  // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
     133: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     136: ldc           #39                 // String . This can happen if the topic does not exist.
     138: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokespecial #34                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;)V
     147: athrow
     148: goto          154
     151: aconst_null
     152: astore        9
     154: aload_0
     155: aload_1
     156: aload_2
     157: aload_3
     158: aload         4
     160: aload         9
     162: aload         5
     164: aload         6
     166: aload         7
     168: invokevirtual #40                 // Method send:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Integer;Ljava/lang/Long;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;)V
     171: return
    Exception table:
       from    to  target type
           5    15    18   Class org/apache/kafka/common/KafkaException

  public <K, V> void send(java.lang.String, K, V, org.apache.kafka.common.header.Headers, java.lang.Integer, java.lang.Long, org.apache.kafka.common.serialization.Serializer<K>, org.apache.kafka.common.serialization.Serializer<V>);
    Code:
       0: aload_0
       1: invokespecial #41                 // Method checkForException:()V
       4: aload         7
       6: aload_1
       7: aload         4
       9: aload_2
      10: invokeinterface #42,  4           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.serialize:(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Object;)[B
      15: astore        9
      17: aload         8
      19: aload_1
      20: aload         4
      22: aload_3
      23: invokeinterface #42,  4           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.serialize:(Ljava/lang/String;Lorg/apache/kafka/common/header/Headers;Ljava/lang/Object;)[B
      28: astore        10
      30: goto          170
      33: astore        11
      35: aload_2
      36: ifnonnull     44
      39: ldc           #44                 // String unknown because key is null
      41: goto          51
      44: aload_2
      45: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      51: astore        12
      53: aload_3
      54: ifnonnull     62
      57: ldc           #46                 // String unknown because value is null
      59: goto          69
      62: aload_3
      63: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      66: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      69: astore        13
      71: new           #24                 // class org/apache/kafka/streams/errors/StreamsException
      74: dup
      75: ldc           #47                 // String ClassCastException while producing data to topic %s. A serializer (key: %s / value: %s) is not compatible to the actual key or value type (key type: %s / value type: %s). Change the default Serdes in StreamConfig or provide correct Serdes via method parameters (for example if using the DSL, `#to(String topic, Produced<K, V> produced)` with `Produced.keySerde(WindowedSerdes.timeWindowedSerdeFrom(String.class))`).
      77: iconst_5
      78: anewarray     #48                 // class java/lang/Object
      81: dup
      82: iconst_0
      83: aload_1
      84: aastore
      85: dup
      86: iconst_1
      87: aload         7
      89: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      95: aastore
      96: dup
      97: iconst_2
      98: aload         8
     100: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     103: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
     106: aastore
     107: dup
     108: iconst_3
     109: aload         12
     111: aastore
     112: dup
     113: iconst_4
     114: aload         13
     116: aastore
     117: invokestatic  #49                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     120: aload         11
     122: invokespecial #50                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     125: athrow
     126: astore        11
     128: ldc           #53                 // String Error encountered sending record to topic %s for task %s due to:%n%s
     130: iconst_3
     131: anewarray     #48                 // class java/lang/Object
     134: dup
     135: iconst_0
     136: aload_1
     137: aastore
     138: dup
     139: iconst_1
     140: aload_0
     141: getfield      #8                  // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
     144: aastore
     145: dup
     146: iconst_2
     147: aload         11
     149: invokevirtual #54                 // Method java/lang/RuntimeException.toString:()Ljava/lang/String;
     152: aastore
     153: invokestatic  #49                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     156: astore        12
     158: new           #24                 // class org/apache/kafka/streams/errors/StreamsException
     161: dup
     162: aload         12
     164: aload         11
     166: invokespecial #50                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     169: athrow
     170: new           #55                 // class org/apache/kafka/clients/producer/ProducerRecord
     173: dup
     174: aload_1
     175: aload         5
     177: aload         6
     179: aload         9
     181: aload         10
     183: aload         4
     185: invokespecial #56                 // Method org/apache/kafka/clients/producer/ProducerRecord."<init>":(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Long;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Iterable;)V
     188: astore        11
     190: aload_0
     191: getfield      #9                  // Field streamsProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
     194: aload         11
     196: aload_0
     197: aload_1
     198: aload         11
     200: aload_2
     201: aload_3
     202: aload         6
     204: aload         5
     206: invokedynamic #57,  0             // InvokeDynamic #0:onCompletion:(Lorg/apache/kafka/streams/processor/internals/RecordCollectorImpl;Ljava/lang/String;Lorg/apache/kafka/clients/producer/ProducerRecord;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Long;Ljava/lang/Integer;)Lorg/apache/kafka/clients/producer/Callback;
     211: invokevirtual #58                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.send:(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/clients/producer/Callback;)Ljava/util/concurrent/Future;
     214: pop
     215: return
    Exception table:
       from    to  target type
           4    30    33   Class java/lang/ClassCastException
           4    30   126   Class java/lang/RuntimeException

  private void recordSendError(java.lang.String, java.lang.Exception, org.apache.kafka.clients.producer.ProducerRecord<byte[], byte[]>);
    Code:
       0: ldc           #53                 // String Error encountered sending record to topic %s for task %s due to:%n%s
       2: iconst_3
       3: anewarray     #48                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_1
       9: aastore
      10: dup
      11: iconst_1
      12: aload_0
      13: getfield      #8                  // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
      16: aastore
      17: dup
      18: iconst_2
      19: aload_2
      20: invokevirtual #59                 // Method java/lang/Exception.toString:()Ljava/lang/String;
      23: aastore
      24: invokestatic  #49                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: astore        4
      29: aload_0
      30: aload_2
      31: invokespecial #60                 // Method isFatalException:(Ljava/lang/Exception;)Z
      34: ifeq          79
      37: new           #25                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      44: aload         4
      46: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #61                 // String \nWritten offsets would not be recorded and no more records would be sent since this is a fatal error.
      51: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: astore        4
      59: aload_0
      60: getfield      #4                  // Field sendException:Ljava/util/concurrent/atomic/AtomicReference;
      63: new           #24                 // class org/apache/kafka/streams/errors/StreamsException
      66: dup
      67: aload         4
      69: aload_2
      70: invokespecial #50                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      76: goto          252
      79: aload_2
      80: instanceof    #63                 // class org/apache/kafka/common/errors/ProducerFencedException
      83: ifne          93
      86: aload_2
      87: instanceof    #64                 // class org/apache/kafka/common/errors/OutOfOrderSequenceException
      90: ifeq          135
      93: new           #25                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     100: aload         4
     102: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #65                 // String \nWritten offsets would not be recorded and no more records would be sent since the producer is fenced, indicating the task may be migrated out
     107: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: astore        4
     115: aload_0
     116: getfield      #4                  // Field sendException:Ljava/util/concurrent/atomic/AtomicReference;
     119: new           #66                 // class org/apache/kafka/streams/errors/TaskMigratedException
     122: dup
     123: aload         4
     125: aload_2
     126: invokespecial #67                 // Method org/apache/kafka/streams/errors/TaskMigratedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     129: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     132: goto          252
     135: aload_2
     136: instanceof    #68                 // class org/apache/kafka/common/errors/RetriableException
     139: ifeq          164
     142: new           #25                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     149: aload         4
     151: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #69                 // String \nThe broker is either slow or in bad state (like not having enough replicas) in responding the request, or the connection to broker was interrupted sending the request or receiving the response. \nConsider overwriting `max.block.ms` and /or `delivery.timeout.ms` to a larger value to wait longer for such scenarios and avoid timeout errors
     156: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     162: astore        4
     164: aload_0
     165: getfield      #10                 // Field productionExceptionHandler:Lorg/apache/kafka/streams/errors/ProductionExceptionHandler;
     168: aload_3
     169: aload_2
     170: invokeinterface #70,  3           // InterfaceMethod org/apache/kafka/streams/errors/ProductionExceptionHandler.handle:(Lorg/apache/kafka/clients/producer/ProducerRecord;Ljava/lang/Exception;)Lorg/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse;
     175: getstatic     #71                 // Field org/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse.FAIL:Lorg/apache/kafka/streams/errors/ProductionExceptionHandler$ProductionExceptionHandlerResponse;
     178: if_acmpne     223
     181: new           #25                 // class java/lang/StringBuilder
     184: dup
     185: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     188: aload         4
     190: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: ldc           #72                 // String \nException handler choose to FAIL the processing, no more records would be sent.
     195: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     198: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: astore        4
     203: aload_0
     204: getfield      #4                  // Field sendException:Ljava/util/concurrent/atomic/AtomicReference;
     207: new           #24                 // class org/apache/kafka/streams/errors/StreamsException
     210: dup
     211: aload         4
     213: aload_2
     214: invokespecial #50                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     217: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
     220: goto          252
     223: new           #25                 // class java/lang/StringBuilder
     226: dup
     227: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     230: aload         4
     232: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     235: ldc           #73                 // String \nException handler choose to CONTINUE processing in spite of this error but written offsets would not be recorded.
     237: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     243: astore        4
     245: aload_0
     246: getfield      #17                 // Field droppedRecordsSensor:Lorg/apache/kafka/common/metrics/Sensor;
     249: invokevirtual #74                 // Method org/apache/kafka/common/metrics/Sensor.record:()V
     252: aload_0
     253: getfield      #7                  // Field log:Lorg/slf4j/Logger;
     256: aload         4
     258: invokeinterface #75,  2           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;)V
     263: return

  private boolean isFatalException(java.lang.Exception);
    Code:
       0: aload_1
       1: instanceof    #76                 // class org/apache/kafka/common/errors/AuthenticationException
       4: ifne          21
       7: aload_1
       8: instanceof    #77                 // class org/apache/kafka/common/errors/AuthorizationException
      11: ifne          21
      14: aload_1
      15: instanceof    #78                 // class org/apache/kafka/common/errors/SecurityDisabledException
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_2
      27: aload_1
      28: instanceof    #79                 // class org/apache/kafka/common/errors/InvalidTopicException
      31: ifne          62
      34: aload_1
      35: instanceof    #80                 // class org/apache/kafka/common/errors/UnknownServerException
      38: ifne          62
      41: aload_1
      42: instanceof    #81                 // class org/apache/kafka/common/errors/SerializationException
      45: ifne          62
      48: aload_1
      49: instanceof    #82                 // class org/apache/kafka/common/errors/OffsetMetadataTooLarge
      52: ifne          62
      55: aload_1
      56: instanceof    #83                 // class java/lang/IllegalStateException
      59: ifeq          66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: istore_3
      68: iload_2
      69: ifne          76
      72: iload_3
      73: ifeq          80
      76: iconst_1
      77: goto          81
      80: iconst_0
      81: ireturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #7                  // Field log:Lorg/slf4j/Logger;
       4: ldc           #84                 // String Flushing record collector
       6: invokeinterface #85,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      11: aload_0
      12: getfield      #9                  // Field streamsProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      15: invokevirtual #86                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.flush:()V
      18: aload_0
      19: invokespecial #41                 // Method checkForException:()V
      22: return

  public void closeClean();
    Code:
       0: aload_0
       1: getfield      #7                  // Field log:Lorg/slf4j/Logger;
       4: ldc           #87                 // String Closing record collector clean
       6: invokeinterface #88,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: aload_0
      12: invokespecial #41                 // Method checkForException:()V
      15: return

  public void closeDirty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field log:Lorg/slf4j/Logger;
       4: ldc           #89                 // String Closing record collector dirty
       6: invokeinterface #88,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      11: aload_0
      12: getfield      #12                 // Field eosEnabled:Z
      15: ifeq          25
      18: aload_0
      19: getfield      #9                  // Field streamsProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
      22: invokevirtual #90                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.abortTransaction:()V
      25: aload_0
      26: invokespecial #41                 // Method checkForException:()V
      29: return

  public java.util.Map<org.apache.kafka.common.TopicPartition, java.lang.Long> offsets();
    Code:
       0: new           #18                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #20                 // Field offsets:Ljava/util/Map;
       8: invokespecial #91                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: invokestatic  #92                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      14: areturn

  private void checkForException();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sendException:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #23                 // class org/apache/kafka/common/KafkaException
      10: astore_1
      11: aload_1
      12: ifnull        25
      15: aload_0
      16: getfield      #4                  // Field sendException:Ljava/util/concurrent/atomic/AtomicReference;
      19: aconst_null
      20: invokevirtual #62                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      23: aload_1
      24: athrow
      25: return

  org.apache.kafka.clients.producer.Producer<byte[], byte[]> producer();
    Code:
       0: aload_0
       1: getfield      #9                  // Field streamsProducer:Lorg/apache/kafka/streams/processor/internals/StreamsProducer;
       4: invokevirtual #94                 // Method org/apache/kafka/streams/processor/internals/StreamsProducer.kafkaProducer:()Lorg/apache/kafka/clients/producer/Producer;
       7: areturn

  private void lambda$send$0(java.lang.String, org.apache.kafka.clients.producer.ProducerRecord, java.lang.Object, java.lang.Object, java.lang.Long, java.lang.Integer, org.apache.kafka.clients.producer.RecordMetadata, java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sendException:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #93                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        11
      10: return
      11: aload         8
      13: ifnonnull     92
      16: new           #95                 // class org/apache/kafka/common/TopicPartition
      19: dup
      20: aload         7
      22: invokevirtual #96                 // Method org/apache/kafka/clients/producer/RecordMetadata.topic:()Ljava/lang/String;
      25: aload         7
      27: invokevirtual #97                 // Method org/apache/kafka/clients/producer/RecordMetadata.partition:()I
      30: invokespecial #98                 // Method org/apache/kafka/common/TopicPartition."<init>":(Ljava/lang/String;I)V
      33: astore        9
      35: aload         7
      37: invokevirtual #99                 // Method org/apache/kafka/clients/producer/RecordMetadata.offset:()J
      40: lconst_0
      41: lcmp
      42: iflt          68
      45: aload_0
      46: getfield      #20                 // Field offsets:Ljava/util/Map;
      49: aload         9
      51: aload         7
      53: invokevirtual #99                 // Method org/apache/kafka/clients/producer/RecordMetadata.offset:()J
      56: invokestatic  #100                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      59: invokeinterface #101,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      64: pop
      65: goto          89
      68: aload_0
      69: getfield      #7                  // Field log:Lorg/slf4j/Logger;
      72: ldc           #102                // String Received offset={} in produce response for {}
      74: aload         7
      76: invokevirtual #99                 // Method org/apache/kafka/clients/producer/RecordMetadata.offset:()J
      79: invokestatic  #100                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      82: aload         9
      84: invokeinterface #103,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      89: goto          138
      92: aload_0
      93: aload_1
      94: aload         8
      96: aload_2
      97: invokespecial #104                // Method recordSendError:(Ljava/lang/String;Ljava/lang/Exception;Lorg/apache/kafka/clients/producer/ProducerRecord;)V
     100: aload_0
     101: getfield      #7                  // Field log:Lorg/slf4j/Logger;
     104: ldc           #105                // String Failed record: (key {} value {} timestamp {}) topic=[{}] partition=[{}]
     106: iconst_5
     107: anewarray     #48                 // class java/lang/Object
     110: dup
     111: iconst_0
     112: aload_3
     113: aastore
     114: dup
     115: iconst_1
     116: aload         4
     118: aastore
     119: dup
     120: iconst_2
     121: aload         5
     123: aastore
     124: dup
     125: iconst_3
     126: aload_1
     127: aastore
     128: dup
     129: iconst_4
     130: aload         6
     132: aastore
     133: invokeinterface #106,  3          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
     138: return
}
