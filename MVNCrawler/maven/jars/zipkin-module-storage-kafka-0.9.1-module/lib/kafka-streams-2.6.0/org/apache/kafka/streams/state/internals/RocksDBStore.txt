Compiled from "RocksDBStore.java"
public class org.apache.kafka.streams.state.internals.RocksDBStore implements org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>, org.apache.kafka.streams.state.internals.BatchWritingStore {
  private static final org.slf4j.Logger log;

  private static final java.util.regex.Pattern SST_FILE_EXTENSION;

  private static final org.rocksdb.CompressionType COMPRESSION_TYPE;

  private static final org.rocksdb.CompactionStyle COMPACTION_STYLE;

  private static final long WRITE_BUFFER_SIZE;

  private static final long BLOCK_CACHE_SIZE;

  private static final long BLOCK_SIZE;

  private static final int MAX_WRITE_BUFFERS;

  private static final java.lang.String DB_FILE_DIR;

  final java.lang.String name;

  private final java.lang.String parentDir;

  final java.util.Set<org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]>> openIterators;

  java.io.File dbDir;

  org.rocksdb.RocksDB db;

  org.apache.kafka.streams.state.internals.RocksDBStore$RocksDBAccessor dbAccessor;

  private org.apache.kafka.streams.state.internals.RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter userSpecifiedOptions;

  org.rocksdb.WriteOptions wOptions;

  org.rocksdb.FlushOptions fOptions;

  private org.rocksdb.Cache cache;

  private org.rocksdb.BloomFilter filter;

  private org.apache.kafka.streams.state.RocksDBConfigSetter configSetter;

  private final org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder metricsRecorder;

  private boolean isStatisticsRegistered;

  org.apache.kafka.streams.processor.ProcessorContext internalProcessorContext;

  volatile org.apache.kafka.streams.processor.BatchingStateRestoreCallback batchingStateRestoreCallback;

  protected volatile boolean open;

  org.apache.kafka.streams.state.internals.RocksDBStore(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #3                  // String rocksdb
       4: new           #4                  // class org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder
       7: dup
       8: aload_2
       9: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      12: invokevirtual #6                  // Method java/lang/Thread.getName:()Ljava/lang/String;
      15: aload_1
      16: invokespecial #7                  // Method org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      19: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder;)V
      22: return

  org.apache.kafka.streams.state.internals.RocksDBStore(java.lang.String, java.lang.String, org.apache.kafka.streams.state.internals.metrics.RocksDBMetricsRecorder);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #10                 // class java/util/HashSet
       8: dup
       9: invokespecial #11                 // Method java/util/HashSet."<init>":()V
      12: invokestatic  #12                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      15: putfield      #13                 // Field openIterators:Ljava/util/Set;
      18: aload_0
      19: iconst_0
      20: putfield      #14                 // Field isStatisticsRegistered:Z
      23: aload_0
      24: aconst_null
      25: putfield      #15                 // Field batchingStateRestoreCallback:Lorg/apache/kafka/streams/processor/BatchingStateRestoreCallback;
      28: aload_0
      29: iconst_0
      30: putfield      #16                 // Field open:Z
      33: aload_0
      34: aload_1
      35: putfield      #17                 // Field name:Ljava/lang/String;
      38: aload_0
      39: aload_2
      40: putfield      #18                 // Field parentDir:Ljava/lang/String;
      43: aload_0
      44: aload_3
      45: putfield      #19                 // Field metricsRecorder:Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder;
      48: return

  void openDB(org.apache.kafka.streams.processor.ProcessorContext);
    Code:
       0: new           #20                 // class org/rocksdb/DBOptions
       3: dup
       4: invokespecial #21                 // Method org/rocksdb/DBOptions."<init>":()V
       7: astore_2
       8: new           #22                 // class org/rocksdb/ColumnFamilyOptions
      11: dup
      12: invokespecial #23                 // Method org/rocksdb/ColumnFamilyOptions."<init>":()V
      15: astore_3
      16: aload_0
      17: new           #24                 // class org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter
      20: dup
      21: aload_2
      22: aload_3
      23: invokespecial #25                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter."<init>":(Lorg/rocksdb/DBOptions;Lorg/rocksdb/ColumnFamilyOptions;)V
      26: putfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
      29: new           #27                 // class org/rocksdb/BlockBasedTableConfig
      32: dup
      33: invokespecial #28                 // Method org/rocksdb/BlockBasedTableConfig."<init>":()V
      36: astore        4
      38: aload_0
      39: new           #29                 // class org/rocksdb/LRUCache
      42: dup
      43: ldc2_w        #30                 // long 52428800l
      46: invokespecial #32                 // Method org/rocksdb/LRUCache."<init>":(J)V
      49: putfield      #33                 // Field cache:Lorg/rocksdb/Cache;
      52: aload         4
      54: aload_0
      55: getfield      #33                 // Field cache:Lorg/rocksdb/Cache;
      58: invokevirtual #34                 // Method org/rocksdb/BlockBasedTableConfig.setBlockCache:(Lorg/rocksdb/Cache;)Lorg/rocksdb/BlockBasedTableConfig;
      61: pop
      62: aload         4
      64: ldc2_w        #35                 // long 4096l
      67: invokevirtual #37                 // Method org/rocksdb/BlockBasedTableConfig.setBlockSize:(J)Lorg/rocksdb/BlockBasedTableConfig;
      70: pop
      71: aload_0
      72: new           #38                 // class org/rocksdb/BloomFilter
      75: dup
      76: invokespecial #39                 // Method org/rocksdb/BloomFilter."<init>":()V
      79: putfield      #40                 // Field filter:Lorg/rocksdb/BloomFilter;
      82: aload         4
      84: aload_0
      85: getfield      #40                 // Field filter:Lorg/rocksdb/BloomFilter;
      88: invokevirtual #41                 // Method org/rocksdb/BlockBasedTableConfig.setFilter:(Lorg/rocksdb/Filter;)Lorg/rocksdb/BlockBasedTableConfig;
      91: pop
      92: aload_0
      93: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
      96: invokevirtual #42                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.optimizeFiltersForHits:()Z
      99: pop
     100: aload_0
     101: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     104: aload         4
     106: invokevirtual #43                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setTableFormatConfig:(Lorg/rocksdb/TableFormatConfig;)Lorg/rocksdb/Options;
     109: pop
     110: aload_0
     111: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     114: ldc2_w        #44                 // long 16777216l
     117: invokevirtual #46                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setWriteBufferSize:(J)Lorg/rocksdb/Options;
     120: pop
     121: aload_0
     122: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     125: getstatic     #47                 // Field COMPRESSION_TYPE:Lorg/rocksdb/CompressionType;
     128: invokevirtual #48                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setCompressionType:(Lorg/rocksdb/CompressionType;)Lorg/rocksdb/Options;
     131: pop
     132: aload_0
     133: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     136: getstatic     #49                 // Field COMPACTION_STYLE:Lorg/rocksdb/CompactionStyle;
     139: invokevirtual #50                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setCompactionStyle:(Lorg/rocksdb/CompactionStyle;)Lorg/rocksdb/Options;
     142: pop
     143: aload_0
     144: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     147: iconst_3
     148: invokevirtual #51                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setMaxWriteBufferNumber:(I)Lorg/rocksdb/Options;
     151: pop
     152: aload_0
     153: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     156: iconst_1
     157: invokevirtual #52                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setCreateIfMissing:(Z)Lorg/rocksdb/Options;
     160: pop
     161: aload_0
     162: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     165: iconst_0
     166: invokevirtual #53                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setErrorIfExists:(Z)Lorg/rocksdb/Options;
     169: pop
     170: aload_0
     171: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     174: getstatic     #54                 // Field org/rocksdb/InfoLogLevel.ERROR_LEVEL:Lorg/rocksdb/InfoLogLevel;
     177: invokevirtual #55                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setInfoLogLevel:(Lorg/rocksdb/InfoLogLevel;)Lorg/rocksdb/Options;
     180: pop
     181: aload_0
     182: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     185: invokestatic  #56                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
     188: invokevirtual #57                 // Method java/lang/Runtime.availableProcessors:()I
     191: iconst_2
     192: invokestatic  #58                 // Method java/lang/Math.max:(II)I
     195: invokevirtual #59                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setIncreaseParallelism:(I)Lorg/rocksdb/Options;
     198: pop
     199: aload_0
     200: new           #60                 // class org/rocksdb/WriteOptions
     203: dup
     204: invokespecial #61                 // Method org/rocksdb/WriteOptions."<init>":()V
     207: putfield      #62                 // Field wOptions:Lorg/rocksdb/WriteOptions;
     210: aload_0
     211: getfield      #62                 // Field wOptions:Lorg/rocksdb/WriteOptions;
     214: iconst_1
     215: invokevirtual #63                 // Method org/rocksdb/WriteOptions.setDisableWAL:(Z)Lorg/rocksdb/WriteOptions;
     218: pop
     219: aload_0
     220: new           #64                 // class org/rocksdb/FlushOptions
     223: dup
     224: invokespecial #65                 // Method org/rocksdb/FlushOptions."<init>":()V
     227: putfield      #66                 // Field fOptions:Lorg/rocksdb/FlushOptions;
     230: aload_0
     231: getfield      #66                 // Field fOptions:Lorg/rocksdb/FlushOptions;
     234: iconst_1
     235: invokevirtual #67                 // Method org/rocksdb/FlushOptions.setWaitForFlush:(Z)Lorg/rocksdb/FlushOptions;
     238: pop
     239: aload_1
     240: invokeinterface #68,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.appConfigs:()Ljava/util/Map;
     245: astore        5
     247: aload         5
     249: ldc           #69                 // String rocksdb.config.setter
     251: invokeinterface #70,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     256: checkcast     #71                 // class java/lang/Class
     259: astore        6
     261: aload         6
     263: ifnull        297
     266: aload_0
     267: aload         6
     269: invokestatic  #72                 // Method org/apache/kafka/common/utils/Utils.newInstance:(Ljava/lang/Class;)Ljava/lang/Object;
     272: checkcast     #73                 // class org/apache/kafka/streams/state/RocksDBConfigSetter
     275: putfield      #74                 // Field configSetter:Lorg/apache/kafka/streams/state/RocksDBConfigSetter;
     278: aload_0
     279: getfield      #74                 // Field configSetter:Lorg/apache/kafka/streams/state/RocksDBConfigSetter;
     282: aload_0
     283: getfield      #17                 // Field name:Ljava/lang/String;
     286: aload_0
     287: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     290: aload         5
     292: invokeinterface #75,  4           // InterfaceMethod org/apache/kafka/streams/state/RocksDBConfigSetter.setConfig:(Ljava/lang/String;Lorg/rocksdb/Options;Ljava/util/Map;)V
     297: aload_0
     298: new           #76                 // class java/io/File
     301: dup
     302: new           #76                 // class java/io/File
     305: dup
     306: aload_1
     307: invokeinterface #77,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.stateDir:()Ljava/io/File;
     312: aload_0
     313: getfield      #18                 // Field parentDir:Ljava/lang/String;
     316: invokespecial #78                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     319: aload_0
     320: getfield      #17                 // Field name:Ljava/lang/String;
     323: invokespecial #78                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
     326: putfield      #79                 // Field dbDir:Ljava/io/File;
     329: aload_0
     330: getfield      #79                 // Field dbDir:Ljava/io/File;
     333: invokevirtual #80                 // Method java/io/File.getParentFile:()Ljava/io/File;
     336: invokevirtual #81                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
     339: iconst_0
     340: anewarray     #82                 // class java/nio/file/attribute/FileAttribute
     343: invokestatic  #83                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     346: pop
     347: aload_0
     348: getfield      #79                 // Field dbDir:Ljava/io/File;
     351: invokevirtual #84                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;
     354: invokevirtual #81                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
     357: iconst_0
     358: anewarray     #82                 // class java/nio/file/attribute/FileAttribute
     361: invokestatic  #83                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;
     364: pop
     365: goto          380
     368: astore        7
     370: new           #86                 // class org/apache/kafka/streams/errors/ProcessorStateException
     373: dup
     374: aload         7
     376: invokespecial #87                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/Throwable;)V
     379: athrow
     380: aload_0
     381: aload         5
     383: invokespecial #88                 // Method maybeSetUpMetricsRecorder:(Ljava/util/Map;)V
     386: aload_0
     387: aload_2
     388: aload_3
     389: invokevirtual #89                 // Method openRocksDB:(Lorg/rocksdb/DBOptions;Lorg/rocksdb/ColumnFamilyOptions;)V
     392: aload_0
     393: iconst_1
     394: putfield      #16                 // Field open:Z
     397: return
    Exception table:
       from    to  target type
         329   365   368   Class java/io/IOException

  private void maybeSetUpMetricsRecorder(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
       4: invokevirtual #90                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.statistics:()Lorg/rocksdb/Statistics;
       7: ifnonnull     64
      10: aload_1
      11: ldc           #91                 // String metrics.recording.level
      13: invokeinterface #70,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #92                 // class java/lang/String
      21: invokestatic  #93                 // Method org/apache/kafka/common/metrics/Sensor$RecordingLevel.forName:(Ljava/lang/String;)Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
      24: getstatic     #94                 // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.DEBUG:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
      27: if_acmpne     64
      30: aload_0
      31: iconst_1
      32: putfield      #14                 // Field isStatisticsRegistered:Z
      35: new           #95                 // class org/rocksdb/Statistics
      38: dup
      39: invokespecial #96                 // Method org/rocksdb/Statistics."<init>":()V
      42: astore_2
      43: aload_0
      44: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
      47: aload_2
      48: invokevirtual #97                 // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.setStatistics:(Lorg/rocksdb/Statistics;)Lorg/rocksdb/Options;
      51: pop
      52: aload_0
      53: getfield      #19                 // Field metricsRecorder:Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder;
      56: aload_0
      57: getfield      #17                 // Field name:Ljava/lang/String;
      60: aload_2
      61: invokevirtual #98                 // Method org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder.addStatistics:(Ljava/lang/String;Lorg/rocksdb/Statistics;)V
      64: return

  void openRocksDB(org.rocksdb.DBOptions, org.rocksdb.ColumnFamilyOptions);
    Code:
       0: new           #99                 // class org/rocksdb/ColumnFamilyDescriptor
       3: dup
       4: getstatic     #100                // Field org/rocksdb/RocksDB.DEFAULT_COLUMN_FAMILY:[B
       7: aload_2
       8: invokespecial #101                // Method org/rocksdb/ColumnFamilyDescriptor."<init>":([BLorg/rocksdb/ColumnFamilyOptions;)V
      11: invokestatic  #102                // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      14: astore_3
      15: new           #103                // class java/util/ArrayList
      18: dup
      19: aload_3
      20: invokeinterface #104,  1          // InterfaceMethod java/util/List.size:()I
      25: invokespecial #105                // Method java/util/ArrayList."<init>":(I)V
      28: astore        4
      30: aload_0
      31: aload_1
      32: aload_0
      33: getfield      #79                 // Field dbDir:Ljava/io/File;
      36: invokevirtual #106                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      39: aload_3
      40: aload         4
      42: invokestatic  #107                // Method org/rocksdb/RocksDB.open:(Lorg/rocksdb/DBOptions;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lorg/rocksdb/RocksDB;
      45: putfield      #108                // Field db:Lorg/rocksdb/RocksDB;
      48: aload_0
      49: new           #109                // class org/apache/kafka/streams/state/internals/RocksDBStore$SingleColumnFamilyAccessor
      52: dup
      53: aload_0
      54: aload         4
      56: iconst_0
      57: invokeinterface #110,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      62: checkcast     #111                // class org/rocksdb/ColumnFamilyHandle
      65: invokespecial #112                // Method org/apache/kafka/streams/state/internals/RocksDBStore$SingleColumnFamilyAccessor."<init>":(Lorg/apache/kafka/streams/state/internals/RocksDBStore;Lorg/rocksdb/ColumnFamilyHandle;)V
      68: putfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
      71: goto          123
      74: astore        5
      76: new           #86                 // class org/apache/kafka/streams/errors/ProcessorStateException
      79: dup
      80: new           #115                // class java/lang/StringBuilder
      83: dup
      84: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #117                // String Error opening store
      89: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_0
      93: getfield      #17                 // Field name:Ljava/lang/String;
      96: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #119                // String  at location
     101: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_0
     105: getfield      #79                 // Field dbDir:Ljava/io/File;
     108: invokevirtual #120                // Method java/io/File.toString:()Ljava/lang/String;
     111: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: aload         5
     119: invokespecial #122                // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     122: athrow
     123: return
    Exception table:
       from    to  target type
          30    71    74   Class org/rocksdb/RocksDBException

  public void init(org.apache.kafka.streams.processor.ProcessorContext, org.apache.kafka.streams.processor.StateStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #123                // Field internalProcessorContext:Lorg/apache/kafka/streams/processor/ProcessorContext;
       5: aload_0
       6: getfield      #19                 // Field metricsRecorder:Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder;
       9: aload_1
      10: invokeinterface #124,  1          // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.metrics:()Lorg/apache/kafka/streams/StreamsMetrics;
      15: checkcast     #125                // class org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl
      18: aload_1
      19: invokeinterface #126,  1          // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.taskId:()Lorg/apache/kafka/streams/processor/TaskId;
      24: invokevirtual #127                // Method org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder.init:(Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;Lorg/apache/kafka/streams/processor/TaskId;)V
      27: aload_0
      28: aload_1
      29: invokevirtual #128                // Method openDB:(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
      32: aload_0
      33: new           #129                // class org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBBatchingRestoreCallback
      36: dup
      37: aload_0
      38: invokespecial #130                // Method org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBBatchingRestoreCallback."<init>":(Lorg/apache/kafka/streams/state/internals/RocksDBStore;)V
      41: putfield      #15                 // Field batchingStateRestoreCallback:Lorg/apache/kafka/streams/processor/BatchingStateRestoreCallback;
      44: aload_1
      45: aload_2
      46: aload_0
      47: getfield      #15                 // Field batchingStateRestoreCallback:Lorg/apache/kafka/streams/processor/BatchingStateRestoreCallback;
      50: invokeinterface #131,  3          // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.register:(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
      55: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #17                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean persistent();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #16                 // Field open:Z
       4: ireturn

  private void validateStoreOpen();
    Code:
       0: aload_0
       1: getfield      #16                 // Field open:Z
       4: ifne          42
       7: new           #132                // class org/apache/kafka/streams/errors/InvalidStateStoreException
      10: dup
      11: new           #115                // class java/lang/StringBuilder
      14: dup
      15: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #133                // String Store
      20: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #17                 // Field name:Ljava/lang/String;
      27: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #134                // String  is currently closed
      32: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #135                // Method org/apache/kafka/streams/errors/InvalidStateStoreException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  public synchronized void put(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_1
       1: ldc           #136                // String key cannot be null
       3: invokestatic  #137                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokespecial #138                // Method validateStoreOpen:()V
      11: aload_0
      12: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
      15: aload_1
      16: invokevirtual #139                // Method org/apache/kafka/common/utils/Bytes.get:()[B
      19: aload_2
      20: invokeinterface #140,  3          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.put:([B[B)V
      25: return

  public synchronized byte[] putIfAbsent(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_1
       1: ldc           #136                // String key cannot be null
       3: invokestatic  #137                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokevirtual #141                // Method get:(Lorg/apache/kafka/common/utils/Bytes;)[B
      12: astore_3
      13: aload_3
      14: ifnonnull     23
      17: aload_0
      18: aload_1
      19: aload_2
      20: invokevirtual #142                // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      23: aload_3
      24: areturn

  public void putAll(java.util.List<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: new           #143                // class org/rocksdb/WriteBatch
       3: dup
       4: invokespecial #144                // Method org/rocksdb/WriteBatch."<init>":()V
       7: astore_2
       8: aconst_null
       9: astore_3
      10: aload_0
      11: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
      14: aload_1
      15: aload_2
      16: invokeinterface #145,  3          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.prepareBatch:(Ljava/util/List;Lorg/rocksdb/WriteBatch;)V
      21: aload_0
      22: aload_2
      23: invokevirtual #146                // Method write:(Lorg/rocksdb/WriteBatch;)V
      26: aload_2
      27: ifnull        102
      30: aload_3
      31: ifnull        52
      34: aload_2
      35: invokevirtual #147                // Method org/rocksdb/WriteBatch.close:()V
      38: goto          102
      41: astore        4
      43: aload_3
      44: aload         4
      46: invokevirtual #149                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      49: goto          102
      52: aload_2
      53: invokevirtual #147                // Method org/rocksdb/WriteBatch.close:()V
      56: goto          102
      59: astore        4
      61: aload         4
      63: astore_3
      64: aload         4
      66: athrow
      67: astore        5
      69: aload_2
      70: ifnull        99
      73: aload_3
      74: ifnull        95
      77: aload_2
      78: invokevirtual #147                // Method org/rocksdb/WriteBatch.close:()V
      81: goto          99
      84: astore        6
      86: aload_3
      87: aload         6
      89: invokevirtual #149                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      92: goto          99
      95: aload_2
      96: invokevirtual #147                // Method org/rocksdb/WriteBatch.close:()V
      99: aload         5
     101: athrow
     102: goto          137
     105: astore_2
     106: new           #86                 // class org/apache/kafka/streams/errors/ProcessorStateException
     109: dup
     110: new           #115                // class java/lang/StringBuilder
     113: dup
     114: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #150                // String Error while batch writing to store
     119: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #17                 // Field name:Ljava/lang/String;
     126: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: aload_2
     133: invokespecial #122                // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     136: athrow
     137: return
    Exception table:
       from    to  target type
          34    38    41   Class java/lang/Throwable
          10    26    59   Class java/lang/Throwable
          10    26    67   any
          77    81    84   Class java/lang/Throwable
          59    69    67   any
           0   102   105   Class org/rocksdb/RocksDBException

  public synchronized byte[] get(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: invokespecial #138                // Method validateStoreOpen:()V
       4: aload_0
       5: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
       8: aload_1
       9: invokevirtual #139                // Method org/apache/kafka/common/utils/Bytes.get:()[B
      12: invokeinterface #151,  2          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.get:([B)[B
      17: areturn
      18: astore_2
      19: new           #86                 // class org/apache/kafka/streams/errors/ProcessorStateException
      22: dup
      23: new           #115                // class java/lang/StringBuilder
      26: dup
      27: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #152                // String Error while getting value for key from store
      32: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #17                 // Field name:Ljava/lang/String;
      39: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: aload_2
      46: invokespecial #122                // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      49: athrow
    Exception table:
       from    to  target type
           4    17    18   Class org/rocksdb/RocksDBException

  public synchronized byte[] delete(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: ldc           #136                // String key cannot be null
       3: invokestatic  #137                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
      11: aload_1
      12: invokevirtual #139                // Method org/apache/kafka/common/utils/Bytes.get:()[B
      15: invokeinterface #153,  2          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.getOnly:([B)[B
      20: astore_2
      21: goto          56
      24: astore_3
      25: new           #86                 // class org/apache/kafka/streams/errors/ProcessorStateException
      28: dup
      29: new           #115                // class java/lang/StringBuilder
      32: dup
      33: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #152                // String Error while getting value for key from store
      38: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #17                 // Field name:Ljava/lang/String;
      45: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: aload_3
      52: invokespecial #122                // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: athrow
      56: aload_0
      57: aload_1
      58: aconst_null
      59: invokevirtual #142                // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      62: aload_2
      63: areturn
    Exception table:
       from    to  target type
           7    21    24   Class org/rocksdb/RocksDBException

  public synchronized org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: ldc           #154                // String from cannot be null
       3: invokestatic  #137                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #155                // String to cannot be null
      10: invokestatic  #137                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_1
      15: aload_2
      16: invokevirtual #156                // Method org/apache/kafka/common/utils/Bytes.compareTo:(Lorg/apache/kafka/common/utils/Bytes;)I
      19: ifle          36
      22: getstatic     #157                // Field log:Lorg/slf4j/Logger;
      25: ldc           #158                // String Returning empty iterator for fetch with invalid key range: from > to. This may be due to serdes that don\'t preserve ordering when lexicographically comparing the serialized bytes. Note that the built-in numerical serdes do not follow this for negative numbers
      27: invokeinterface #159,  2          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      32: invokestatic  #160                // Method org/apache/kafka/streams/state/internals/KeyValueIterators.emptyIterator:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      35: areturn
      36: aload_0
      37: invokespecial #138                // Method validateStoreOpen:()V
      40: aload_0
      41: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
      44: aload_1
      45: aload_2
      46: invokeinterface #161,  3          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.range:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      51: astore_3
      52: aload_0
      53: getfield      #13                 // Field openIterators:Ljava/util/Set;
      56: aload_3
      57: invokeinterface #162,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      62: pop
      63: aload_3
      64: areturn

  public synchronized org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();
    Code:
       0: aload_0
       1: invokespecial #138                // Method validateStoreOpen:()V
       4: aload_0
       5: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
       8: invokeinterface #163,  1          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.all:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      13: astore_1
      14: aload_0
      15: getfield      #13                 // Field openIterators:Ljava/util/Set;
      18: aload_1
      19: invokeinterface #162,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      24: pop
      25: aload_1
      26: areturn

  public long approximateNumEntries();
    Code:
       0: aload_0
       1: invokespecial #138                // Method validateStoreOpen:()V
       4: aload_0
       5: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
       8: invokeinterface #164,  1          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.approximateNumEntries:()J
      13: lstore_1
      14: goto          49
      17: astore_3
      18: new           #86                 // class org/apache/kafka/streams/errors/ProcessorStateException
      21: dup
      22: new           #115                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #165                // String Error fetching property from store
      31: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: getfield      #17                 // Field name:Ljava/lang/String;
      38: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: aload_3
      45: invokespecial #122                // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: athrow
      49: aload_0
      50: lload_1
      51: invokespecial #166                // Method isOverflowing:(J)Z
      54: ifeq          61
      57: ldc2_w        #168                // long 9223372036854775807l
      60: lreturn
      61: lload_1
      62: lreturn
    Exception table:
       from    to  target type
           4    14    17   Class org/rocksdb/RocksDBException

  private boolean isOverflowing(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public synchronized void flush();
    Code:
       0: aload_0
       1: getfield      #108                // Field db:Lorg/rocksdb/RocksDB;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
      12: invokeinterface #170,  1          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.flush:()V
      17: goto          52
      20: astore_1
      21: new           #86                 // class org/apache/kafka/streams/errors/ProcessorStateException
      24: dup
      25: new           #115                // class java/lang/StringBuilder
      28: dup
      29: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #171                // String Error while executing flush from store
      34: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #17                 // Field name:Ljava/lang/String;
      41: invokevirtual #118                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #121                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: aload_1
      48: invokespecial #122                // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      51: athrow
      52: return
    Exception table:
       from    to  target type
           8    17    20   Class org/rocksdb/RocksDBException

  public void addToBatch(org.apache.kafka.streams.KeyValue<byte[], byte[]>, org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
       4: aload_1
       5: getfield      #172                // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
       8: checkcast     #173                // class "[B"
      11: aload_1
      12: getfield      #174                // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      15: checkcast     #173                // class "[B"
      18: aload_2
      19: invokeinterface #175,  4          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.addToBatch:([B[BLorg/rocksdb/WriteBatch;)V
      24: return

  public void write(org.rocksdb.WriteBatch) throws org.rocksdb.RocksDBException;
    Code:
       0: aload_0
       1: getfield      #108                // Field db:Lorg/rocksdb/RocksDB;
       4: aload_0
       5: getfield      #62                 // Field wOptions:Lorg/rocksdb/WriteOptions;
       8: aload_1
       9: invokevirtual #176                // Method org/rocksdb/RocksDB.write:(Lorg/rocksdb/WriteOptions;Lorg/rocksdb/WriteBatch;)V
      12: return

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #16                 // Field open:Z
       4: ifne          8
       7: return
       8: aload_0
       9: iconst_0
      10: putfield      #16                 // Field open:Z
      13: aload_0
      14: invokespecial #177                // Method closeOpenIterators:()V
      17: aload_0
      18: getfield      #74                 // Field configSetter:Lorg/apache/kafka/streams/state/RocksDBConfigSetter;
      21: ifnull        46
      24: aload_0
      25: getfield      #74                 // Field configSetter:Lorg/apache/kafka/streams/state/RocksDBConfigSetter;
      28: aload_0
      29: getfield      #17                 // Field name:Ljava/lang/String;
      32: aload_0
      33: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
      36: invokeinterface #178,  3          // InterfaceMethod org/apache/kafka/streams/state/RocksDBConfigSetter.close:(Ljava/lang/String;Lorg/rocksdb/Options;)V
      41: aload_0
      42: aconst_null
      43: putfield      #74                 // Field configSetter:Lorg/apache/kafka/streams/state/RocksDBConfigSetter;
      46: aload_0
      47: invokespecial #179                // Method maybeRemoveStatisticsFromMetricsRecorder:()V
      50: aload_0
      51: getfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
      54: invokeinterface #180,  1          // InterfaceMethod org/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor.close:()V
      59: aload_0
      60: getfield      #108                // Field db:Lorg/rocksdb/RocksDB;
      63: invokevirtual #181                // Method org/rocksdb/RocksDB.close:()V
      66: aload_0
      67: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
      70: invokevirtual #182                // Method org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.close:()V
      73: aload_0
      74: getfield      #62                 // Field wOptions:Lorg/rocksdb/WriteOptions;
      77: invokevirtual #183                // Method org/rocksdb/WriteOptions.close:()V
      80: aload_0
      81: getfield      #66                 // Field fOptions:Lorg/rocksdb/FlushOptions;
      84: invokevirtual #184                // Method org/rocksdb/FlushOptions.close:()V
      87: aload_0
      88: getfield      #40                 // Field filter:Lorg/rocksdb/BloomFilter;
      91: invokevirtual #185                // Method org/rocksdb/BloomFilter.close:()V
      94: aload_0
      95: getfield      #33                 // Field cache:Lorg/rocksdb/Cache;
      98: invokevirtual #186                // Method org/rocksdb/Cache.close:()V
     101: aload_0
     102: aconst_null
     103: putfield      #113                // Field dbAccessor:Lorg/apache/kafka/streams/state/internals/RocksDBStore$RocksDBAccessor;
     106: aload_0
     107: aconst_null
     108: putfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
     111: aload_0
     112: aconst_null
     113: putfield      #62                 // Field wOptions:Lorg/rocksdb/WriteOptions;
     116: aload_0
     117: aconst_null
     118: putfield      #66                 // Field fOptions:Lorg/rocksdb/FlushOptions;
     121: aload_0
     122: aconst_null
     123: putfield      #108                // Field db:Lorg/rocksdb/RocksDB;
     126: aload_0
     127: aconst_null
     128: putfield      #40                 // Field filter:Lorg/rocksdb/BloomFilter;
     131: aload_0
     132: aconst_null
     133: putfield      #33                 // Field cache:Lorg/rocksdb/Cache;
     136: return

  private void maybeRemoveStatisticsFromMetricsRecorder();
    Code:
       0: aload_0
       1: getfield      #14                 // Field isStatisticsRegistered:Z
       4: ifeq          23
       7: aload_0
       8: getfield      #19                 // Field metricsRecorder:Lorg/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder;
      11: aload_0
      12: getfield      #17                 // Field name:Ljava/lang/String;
      15: invokevirtual #187                // Method org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder.removeStatistics:(Ljava/lang/String;)V
      18: aload_0
      19: iconst_0
      20: putfield      #14                 // Field isStatisticsRegistered:Z
      23: return

  private void closeOpenIterators();
    Code:
       0: aload_0
       1: getfield      #13                 // Field openIterators:Ljava/util/Set;
       4: dup
       5: astore_2
       6: monitorenter
       7: new           #10                 // class java/util/HashSet
      10: dup
      11: aload_0
      12: getfield      #13                 // Field openIterators:Ljava/util/Set;
      15: invokespecial #188                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      18: astore_1
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: aload_1
      30: invokevirtual #189                // Method java/util/HashSet.size:()I
      33: ifeq          90
      36: getstatic     #157                // Field log:Lorg/slf4j/Logger;
      39: ldc           #190                // String Closing {} open iterators for store {}
      41: aload_1
      42: invokevirtual #189                // Method java/util/HashSet.size:()I
      45: invokestatic  #191                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aload_0
      49: getfield      #17                 // Field name:Ljava/lang/String;
      52: invokeinterface #192,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      57: aload_1
      58: invokevirtual #193                // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      61: astore_2
      62: aload_2
      63: invokeinterface #194,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          90
      71: aload_2
      72: invokeinterface #195,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #196                // class org/apache/kafka/streams/state/KeyValueIterator
      80: astore_3
      81: aload_3
      82: invokeinterface #197,  1          // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.close:()V
      87: goto          62
      90: return
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  public org.rocksdb.Options getOptions();
    Code:
       0: aload_0
       1: getfield      #26                 // Field userSpecifiedOptions:Lorg/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter;
       4: areturn

  public java.lang.Object delete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #198                // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #199                // Method delete:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #198                // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #173                // class "[B"
       9: invokevirtual #200                // Method putIfAbsent:(Lorg/apache/kafka/common/utils/Bytes;[B)[B
      12: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #198                // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #173                // class "[B"
       9: invokevirtual #142                // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      12: return

  public org.apache.kafka.streams.state.KeyValueIterator range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #198                // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #198                // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #201                // Method range:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #198                // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #141                // Method get:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  static {};
    Code:
       0: ldc           #2                  // class org/apache/kafka/streams/state/internals/RocksDBStore
       2: invokestatic  #202                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #157                // Field log:Lorg/slf4j/Logger;
       8: ldc           #203                // String .*\\.sst
      10: invokestatic  #204                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #205                // Field SST_FILE_EXTENSION:Ljava/util/regex/Pattern;
      16: getstatic     #206                // Field org/rocksdb/CompressionType.NO_COMPRESSION:Lorg/rocksdb/CompressionType;
      19: putstatic     #47                 // Field COMPRESSION_TYPE:Lorg/rocksdb/CompressionType;
      22: getstatic     #207                // Field org/rocksdb/CompactionStyle.UNIVERSAL:Lorg/rocksdb/CompactionStyle;
      25: putstatic     #49                 // Field COMPACTION_STYLE:Lorg/rocksdb/CompactionStyle;
      28: return
}
