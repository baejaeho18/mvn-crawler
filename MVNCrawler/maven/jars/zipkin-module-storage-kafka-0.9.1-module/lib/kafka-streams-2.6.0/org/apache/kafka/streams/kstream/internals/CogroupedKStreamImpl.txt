Compiled from "CogroupedKStreamImpl.java"
public class org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl<K, VOut> extends org.apache.kafka.streams.kstream.internals.AbstractStream<K, VOut> implements org.apache.kafka.streams.kstream.CogroupedKStream<K, VOut> {
  static final java.lang.String AGGREGATE_NAME;

  static final java.lang.String MERGE_NAME;

  private final java.util.Map<org.apache.kafka.streams.kstream.internals.KGroupedStreamImpl<K, ?>, org.apache.kafka.streams.kstream.Aggregator<? super K, ? super java.lang.Object, VOut>> groupPatterns;

  private final org.apache.kafka.streams.kstream.internals.CogroupedStreamAggregateBuilder<K, VOut> aggregateBuilder;

  org.apache.kafka.streams.kstream.internals.CogroupedKStreamImpl(java.lang.String, java.util.Set<java.lang.String>, org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokespecial #1                  // Method org/apache/kafka/streams/kstream/internals/AbstractStream."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
      11: aload_0
      12: new           #2                  // class java/util/LinkedHashMap
      15: dup
      16: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      19: putfield      #4                  // Field groupPatterns:Ljava/util/Map;
      22: aload_0
      23: new           #5                  // class org/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder
      26: dup
      27: aload         4
      29: invokespecial #6                  // Method org/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder."<init>":(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
      32: putfield      #7                  // Field aggregateBuilder:Lorg/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder;
      35: return

  public <VIn> org.apache.kafka.streams.kstream.CogroupedKStream<K, VOut> cogroup(org.apache.kafka.streams.kstream.KGroupedStream<K, VIn>, org.apache.kafka.streams.kstream.Aggregator<? super K, ? super VIn, VOut>);
    Code:
       0: aload_1
       1: ldc           #8                  // String groupedStream can\'t be null
       3: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #10                 // String aggregator can\'t be null
      10: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #4                  // Field groupPatterns:Ljava/util/Map;
      18: aload_1
      19: checkcast     #11                 // class org/apache/kafka/streams/kstream/internals/KGroupedStreamImpl
      22: aload_2
      23: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: areturn

  public org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>, org.apache.kafka.streams.kstream.Materialized<K, VOut, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #13                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal.empty:()Lorg/apache/kafka/streams/kstream/internals/NamedInternal;
       5: aload_2
       6: invokevirtual #14                 // Method aggregate:(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
       9: areturn

  public org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>, org.apache.kafka.streams.kstream.Named);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #15                 // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       7: aconst_null
       8: invokestatic  #16                 // Method org/apache/kafka/streams/kstream/Materialized.with:(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Materialized;
      11: invokevirtual #14                 // Method aggregate:(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Named;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
      14: areturn

  public org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>, org.apache.kafka.streams.kstream.Named, org.apache.kafka.streams.kstream.Materialized<K, VOut, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_1
       1: ldc           #17                 // String initializer can\'t be null
       3: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #18                 // String named can\'t be null
      10: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: ldc           #19                 // String materialized can\'t be null
      17: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: aload_1
      23: new           #20                 // class org/apache/kafka/streams/kstream/internals/NamedInternal
      26: dup
      27: aload_2
      28: invokespecial #21                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal."<init>":(Lorg/apache/kafka/streams/kstream/Named;)V
      31: new           #22                 // class org/apache/kafka/streams/kstream/internals/MaterializedInternal
      34: dup
      35: aload_3
      36: aload_0
      37: getfield      #23                 // Field builder:Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;
      40: ldc           #25                 // String COGROUPKSTREAM-AGGREGATE-
      42: invokespecial #26                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal."<init>":(Lorg/apache/kafka/streams/kstream/Materialized;Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)V
      45: invokespecial #27                 // Method doAggregate:(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/internals/NamedInternal;Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/KTable;
      48: areturn

  public org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #15                 // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       6: aconst_null
       7: invokestatic  #16                 // Method org/apache/kafka/streams/kstream/Materialized.with:(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Materialized;
      10: invokevirtual #28                 // Method aggregate:(Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/Materialized;)Lorg/apache/kafka/streams/kstream/KTable;
      13: areturn

  public <W extends org.apache.kafka.streams.kstream.Window> org.apache.kafka.streams.kstream.TimeWindowedCogroupedKStream<K, VOut> windowedBy(org.apache.kafka.streams.kstream.Windows<W>);
    Code:
       0: aload_1
       1: ldc           #29                 // String windows can\'t be null
       3: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #30                 // class org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImpl
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #23                 // Field builder:Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;
      16: aload_0
      17: getfield      #31                 // Field subTopologySourceNodes:Ljava/util/Set;
      20: aload_0
      21: getfield      #32                 // Field name:Ljava/lang/String;
      24: aload_0
      25: getfield      #7                  // Field aggregateBuilder:Lorg/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder;
      28: aload_0
      29: getfield      #33                 // Field streamsGraphNode:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      32: aload_0
      33: getfield      #4                  // Field groupPatterns:Ljava/util/Map;
      36: invokespecial #34                 // Method org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImpl."<init>":(Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/util/Set;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/Map;)V
      39: areturn

  public org.apache.kafka.streams.kstream.SessionWindowedCogroupedKStream<K, VOut> windowedBy(org.apache.kafka.streams.kstream.SessionWindows);
    Code:
       0: aload_1
       1: ldc           #35                 // String sessionWindows can\'t be null
       3: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #36                 // class org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImpl
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #23                 // Field builder:Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;
      16: aload_0
      17: getfield      #31                 // Field subTopologySourceNodes:Ljava/util/Set;
      20: aload_0
      21: getfield      #32                 // Field name:Ljava/lang/String;
      24: aload_0
      25: getfield      #7                  // Field aggregateBuilder:Lorg/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder;
      28: aload_0
      29: getfield      #33                 // Field streamsGraphNode:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      32: aload_0
      33: getfield      #4                  // Field groupPatterns:Ljava/util/Map;
      36: invokespecial #37                 // Method org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImpl."<init>":(Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/util/Set;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/Map;)V
      39: areturn

  private org.apache.kafka.streams.kstream.KTable<K, VOut> doAggregate(org.apache.kafka.streams.kstream.Initializer<VOut>, org.apache.kafka.streams.kstream.internals.NamedInternal, org.apache.kafka.streams.kstream.internals.MaterializedInternal<K, VOut, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field aggregateBuilder:Lorg/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder;
       4: aload_0
       5: getfield      #4                  // Field groupPatterns:Ljava/util/Map;
       8: aload_1
       9: aload_2
      10: new           #38                 // class org/apache/kafka/streams/kstream/internals/TimestampedKeyValueStoreMaterializer
      13: dup
      14: aload_3
      15: invokespecial #39                 // Method org/apache/kafka/streams/kstream/internals/TimestampedKeyValueStoreMaterializer."<init>":(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)V
      18: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/internals/TimestampedKeyValueStoreMaterializer.materialize:()Lorg/apache/kafka/streams/state/StoreBuilder;
      21: aload_3
      22: invokevirtual #41                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
      25: aload_3
      26: invokevirtual #42                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
      29: aload_3
      30: invokevirtual #43                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.queryableStoreName:()Ljava/lang/String;
      33: aconst_null
      34: aconst_null
      35: aconst_null
      36: invokevirtual #44                 // Method org/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder.build:(Ljava/util/Map;Lorg/apache/kafka/streams/kstream/Initializer;Lorg/apache/kafka/streams/kstream/internals/NamedInternal;Lorg/apache/kafka/streams/state/StoreBuilder;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/Windows;Lorg/apache/kafka/streams/kstream/SessionWindows;Lorg/apache/kafka/streams/kstream/Merger;)Lorg/apache/kafka/streams/kstream/KTable;
      39: areturn
}
