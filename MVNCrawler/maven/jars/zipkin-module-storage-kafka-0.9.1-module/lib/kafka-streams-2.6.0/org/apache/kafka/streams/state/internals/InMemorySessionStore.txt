Compiled from "InMemorySessionStore.java"
public class org.apache.kafka.streams.state.internals.InMemorySessionStore implements org.apache.kafka.streams.state.SessionStore<org.apache.kafka.common.utils.Bytes, byte[]> {
  private static final org.slf4j.Logger LOG;

  private final java.lang.String name;

  private final java.lang.String metricScope;

  private org.apache.kafka.common.metrics.Sensor expiredRecordSensor;

  private org.apache.kafka.streams.processor.internals.InternalProcessorContext context;

  private long observedStreamTime;

  private final long retentionPeriod;

  private final java.util.concurrent.ConcurrentNavigableMap<java.lang.Long, java.util.concurrent.ConcurrentNavigableMap<org.apache.kafka.common.utils.Bytes, java.util.concurrent.ConcurrentNavigableMap<java.lang.Long, byte[]>>> endTimeMap;

  private final java.util.Set<org.apache.kafka.streams.state.internals.InMemorySessionStore$InMemorySessionStoreIterator> openIterators;

  private volatile boolean open;

  org.apache.kafka.streams.state.internals.InMemorySessionStore(java.lang.String, long, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #3                  // long -1l
       8: putfield      #5                  // Field observedStreamTime:J
      11: aload_0
      12: new           #6                  // class java/util/concurrent/ConcurrentSkipListMap
      15: dup
      16: invokespecial #7                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      19: putfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      22: aload_0
      23: invokestatic  #9                  // Method java/util/concurrent/ConcurrentHashMap.newKeySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
      26: putfield      #10                 // Field openIterators:Ljava/util/Set;
      29: aload_0
      30: iconst_0
      31: putfield      #11                 // Field open:Z
      34: aload_0
      35: aload_1
      36: putfield      #12                 // Field name:Ljava/lang/String;
      39: aload_0
      40: lload_2
      41: putfield      #13                 // Field retentionPeriod:J
      44: aload_0
      45: aload         4
      47: putfield      #14                 // Field metricScope:Ljava/lang/String;
      50: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:Ljava/lang/String;
       4: areturn

  public void init(org.apache.kafka.streams.processor.ProcessorContext, org.apache.kafka.streams.processor.StateStore);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class org/apache/kafka/streams/processor/internals/InternalProcessorContext
       5: putfield      #16                 // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
       8: aload_0
       9: getfield      #16                 // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
      12: invokeinterface #17,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.metrics:()Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      17: astore_3
      18: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      21: invokevirtual #19                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      24: astore        4
      26: aload_1
      27: invokeinterface #20,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.taskId:()Lorg/apache/kafka/streams/processor/TaskId;
      32: invokevirtual #21                 // Method org/apache/kafka/streams/processor/TaskId.toString:()Ljava/lang/String;
      35: astore        5
      37: aload_0
      38: aload         4
      40: aload         5
      42: aload_0
      43: getfield      #14                 // Field metricScope:Ljava/lang/String;
      46: aload_0
      47: getfield      #12                 // Field name:Ljava/lang/String;
      50: aload_3
      51: invokestatic  #22                 // Method org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.droppedRecordsSensorOrExpiredWindowRecordDropSensor:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
      54: putfield      #23                 // Field expiredRecordSensor:Lorg/apache/kafka/common/metrics/Sensor;
      57: aload_2
      58: ifnull        74
      61: aload_1
      62: aload_2
      63: aload_0
      64: invokedynamic #24,  0             // InvokeDynamic #0:restore:(Lorg/apache/kafka/streams/state/internals/InMemorySessionStore;)Lorg/apache/kafka/streams/processor/StateRestoreCallback;
      69: invokeinterface #25,  3           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.register:(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
      74: aload_0
      75: iconst_1
      76: putfield      #11                 // Field open:Z
      79: return

  public void put(org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method removeExpiredSegments:()V
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
       8: invokevirtual #28                 // Method org/apache/kafka/streams/kstream/Window.end:()J
      11: lstore_3
      12: aload_0
      13: aload_0
      14: getfield      #5                  // Field observedStreamTime:J
      17: lload_3
      18: invokestatic  #29                 // Method java/lang/Math.max:(JJ)J
      21: putfield      #5                  // Field observedStreamTime:J
      24: lload_3
      25: aload_0
      26: getfield      #5                  // Field observedStreamTime:J
      29: aload_0
      30: getfield      #13                 // Field retentionPeriod:J
      33: lsub
      34: lcmp
      35: ifgt          68
      38: aload_0
      39: getfield      #23                 // Field expiredRecordSensor:Lorg/apache/kafka/common/metrics/Sensor;
      42: dconst_1
      43: aload_0
      44: getfield      #16                 // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
      47: invokeinterface #30,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.currentSystemTimeMs:()J
      52: invokevirtual #31                 // Method org/apache/kafka/common/metrics/Sensor.record:(DJ)V
      55: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      58: ldc           #33                 // String Skipping record for expired segment.
      60: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      65: goto          165
      68: aload_2
      69: ifnull        160
      72: aload_0
      73: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      76: lload_3
      77: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      80: invokedynamic #36,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      85: invokeinterface #37,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      90: pop
      91: aload_0
      92: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      95: lload_3
      96: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      99: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: checkcast     #39                 // class java/util/concurrent/ConcurrentNavigableMap
     107: astore        5
     109: aload         5
     111: aload_1
     112: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
     115: invokedynamic #41,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
     120: invokeinterface #37,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     125: pop
     126: aload         5
     128: aload_1
     129: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
     132: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     137: checkcast     #39                 // class java/util/concurrent/ConcurrentNavigableMap
     140: aload_1
     141: invokevirtual #27                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
     144: invokevirtual #42                 // Method org/apache/kafka/streams/kstream/Window.start:()J
     147: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     150: aload_2
     151: invokeinterface #43,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: goto          165
     160: aload_0
     161: aload_1
     162: invokevirtual #44                 // Method remove:(Lorg/apache/kafka/streams/kstream/Windowed;)V
     165: return

  public void remove(org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
       8: invokevirtual #28                 // Method org/apache/kafka/streams/kstream/Window.end:()J
      11: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #39                 // class java/util/concurrent/ConcurrentNavigableMap
      22: astore_2
      23: aload_2
      24: ifnonnull     28
      27: return
      28: aload_2
      29: aload_1
      30: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
      33: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #39                 // class java/util/concurrent/ConcurrentNavigableMap
      41: astore_3
      42: aload_3
      43: ifnonnull     47
      46: return
      47: aload_3
      48: aload_1
      49: invokevirtual #27                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
      52: invokevirtual #42                 // Method org/apache/kafka/streams/kstream/Window.start:()J
      55: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      58: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload_3
      65: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.isEmpty:()Z
      70: ifeq          113
      73: aload_2
      74: aload_1
      75: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
      78: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload_2
      85: invokeinterface #46,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.isEmpty:()Z
      90: ifeq          113
      93: aload_0
      94: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      97: aload_1
      98: invokevirtual #27                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
     101: invokevirtual #28                 // Method org/apache/kafka/streams/kstream/Window.end:()J
     104: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     107: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: return

  public byte[] fetchSession(org.apache.kafka.common.utils.Bytes, long, long);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method removeExpiredSegments:()V
       4: aload_1
       5: ldc           #47                 // String key cannot be null
       7: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: lload         4
      13: aload_0
      14: getfield      #5                  // Field observedStreamTime:J
      17: aload_0
      18: getfield      #13                 // Field retentionPeriod:J
      21: lsub
      22: lcmp
      23: ifle          83
      26: aload_0
      27: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      30: lload         4
      32: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #39                 // class java/util/concurrent/ConcurrentNavigableMap
      43: astore        6
      45: aload         6
      47: ifnull        83
      50: aload         6
      52: aload_1
      53: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      58: checkcast     #39                 // class java/util/concurrent/ConcurrentNavigableMap
      61: astore        7
      63: aload         7
      65: ifnull        83
      68: aload         7
      70: lload_2
      71: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      74: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      79: checkcast     #49                 // class "[B"
      82: areturn
      83: aconst_null
      84: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> findSessions(org.apache.kafka.common.utils.Bytes, long, long);
    Code:
       0: aload_1
       1: ldc           #47                 // String key cannot be null
       3: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokespecial #26                 // Method removeExpiredSegments:()V
      11: aload_0
      12: aload_1
      13: aload_1
      14: lload         4
      16: aload_0
      17: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      20: lload_2
      21: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      24: iconst_1
      25: invokeinterface #50,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      30: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      35: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      40: invokespecial #53                 // Method registerNewIterator:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JLjava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator;
      43: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> findSessions(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes, long, long);
    Code:
       0: aload_1
       1: ldc           #54                 // String from key cannot be null
       3: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #55                 // String to key cannot be null
      10: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokespecial #26                 // Method removeExpiredSegments:()V
      18: aload_1
      19: aload_2
      20: invokevirtual #56                 // Method org/apache/kafka/common/utils/Bytes.compareTo:(Lorg/apache/kafka/common/utils/Bytes;)I
      23: ifle          40
      26: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #57                 // String Returning empty iterator for fetch with invalid key range: from > to. This may be due to serdes that don\'t preserve ordering when lexicographically comparing the serialized bytes. Note that the built-in numerical serdes do not follow this for negative numbers
      31: invokeinterface #34,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      36: invokestatic  #58                 // Method org/apache/kafka/streams/state/internals/KeyValueIterators.emptyIterator:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      39: areturn
      40: aload_0
      41: aload_1
      42: aload_2
      43: lload         5
      45: aload_0
      46: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      49: lload_3
      50: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: iconst_1
      54: invokeinterface #50,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      59: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      64: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      69: invokespecial #53                 // Method registerNewIterator:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JLjava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator;
      72: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> fetch(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: ldc           #47                 // String key cannot be null
       3: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokespecial #26                 // Method removeExpiredSegments:()V
      11: aload_0
      12: aload_1
      13: aload_1
      14: ldc2_w        #60                 // long 9223372036854775807l
      17: aload_0
      18: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      21: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      26: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: invokespecial #53                 // Method registerNewIterator:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JLjava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator;
      34: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> fetch(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: ldc           #54                 // String from key cannot be null
       3: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #55                 // String to key cannot be null
      10: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokespecial #26                 // Method removeExpiredSegments:()V
      18: aload_0
      19: aload_1
      20: aload_2
      21: ldc2_w        #60                 // long 9223372036854775807l
      24: aload_0
      25: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      28: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      33: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: invokespecial #53                 // Method registerNewIterator:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JLjava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator;
      41: areturn

  public boolean persistent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #11                 // Field open:Z
       4: ireturn

  public void flush();
    Code:
       0: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #10                 // Field openIterators:Ljava/util/Set;
       4: invokeinterface #62,  1           // InterfaceMethod java/util/Set.size:()I
       9: ifeq          74
      12: getstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #63                 // String Closing {} open iterators for store {}
      17: aload_0
      18: getfield      #10                 // Field openIterators:Ljava/util/Set;
      21: invokeinterface #62,  1           // InterfaceMethod java/util/Set.size:()I
      26: invokestatic  #64                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aload_0
      30: getfield      #12                 // Field name:Ljava/lang/String;
      33: invokeinterface #65,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload_0
      39: getfield      #10                 // Field openIterators:Ljava/util/Set;
      42: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      47: astore_1
      48: aload_1
      49: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          74
      57: aload_1
      58: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #68                 // class org/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator
      66: astore_2
      67: aload_2
      68: invokevirtual #69                 // Method org/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator.close:()V
      71: goto          48
      74: aload_0
      75: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      78: invokeinterface #70,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.clear:()V
      83: aload_0
      84: getfield      #10                 // Field openIterators:Ljava/util/Set;
      87: invokeinterface #71,  1           // InterfaceMethod java/util/Set.clear:()V
      92: aload_0
      93: iconst_0
      94: putfield      #11                 // Field open:Z
      97: return

  private void removeExpiredSegments();
    Code:
       0: lconst_0
       1: aload_0
       2: getfield      #5                  // Field observedStreamTime:J
       5: aload_0
       6: getfield      #13                 // Field retentionPeriod:J
       9: lsub
      10: lconst_1
      11: ladd
      12: invokestatic  #29                 // Method java/lang/Math.max:(JJ)J
      15: lstore_1
      16: aload_0
      17: getfield      #10                 // Field openIterators:Ljava/util/Set;
      20: invokeinterface #52,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          62
      35: aload_3
      36: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #68                 // class org/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator
      44: astore        4
      46: lload_1
      47: aload         4
      49: invokevirtual #72                 // Method org/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator.minTime:()Ljava/lang/Long;
      52: invokevirtual #73                 // Method java/lang/Long.longValue:()J
      55: invokestatic  #74                 // Method java/lang/Math.min:(JJ)J
      58: lstore_1
      59: goto          26
      62: aload_0
      63: getfield      #8                  // Field endTimeMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      66: lload_1
      67: invokestatic  #35                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      70: iconst_0
      71: invokeinterface #75,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      76: invokeinterface #70,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.clear:()V
      81: return

  private org.apache.kafka.streams.state.internals.InMemorySessionStore$InMemorySessionStoreIterator registerNewIterator(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes, long, java.util.Iterator<java.util.Map$Entry<java.lang.Long, java.util.concurrent.ConcurrentNavigableMap<org.apache.kafka.common.utils.Bytes, java.util.concurrent.ConcurrentNavigableMap<java.lang.Long, byte[]>>>>);
    Code:
       0: new           #68                 // class org/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator
       3: dup
       4: aload_1
       5: aload_2
       6: lload_3
       7: aload         5
       9: aload_0
      10: invokedynamic #76,  0             // InvokeDynamic #3:deregisterIterator:(Lorg/apache/kafka/streams/state/internals/InMemorySessionStore;)Lorg/apache/kafka/streams/state/internals/InMemorySessionStore$ClosingCallback;
      15: invokespecial #77                 // Method org/apache/kafka/streams/state/internals/InMemorySessionStore$InMemorySessionStoreIterator."<init>":(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JLjava/util/Iterator;Lorg/apache/kafka/streams/state/internals/InMemorySessionStore$ClosingCallback;)V
      18: astore        6
      20: aload_0
      21: getfield      #10                 // Field openIterators:Ljava/util/Set;
      24: aload         6
      26: invokeinterface #78,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload         6
      34: areturn

  public void put(org.apache.kafka.streams.kstream.Windowed, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #49                 // class "[B"
       6: invokevirtual #79                 // Method put:(Lorg/apache/kafka/streams/kstream/Windowed;[B)V
       9: return

  public java.lang.Object fetchSession(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class org/apache/kafka/common/utils/Bytes
       5: lload_2
       6: lload         4
       8: invokevirtual #81                 // Method fetchSession:(Lorg/apache/kafka/common/utils/Bytes;JJ)[B
      11: areturn

  public org.apache.kafka.streams.state.KeyValueIterator findSessions(java.lang.Object, java.lang.Object, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #80                 // class org/apache/kafka/common/utils/Bytes
       9: lload_3
      10: lload         5
      12: invokevirtual #82                 // Method findSessions:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
      15: areturn

  public org.apache.kafka.streams.state.KeyValueIterator findSessions(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class org/apache/kafka/common/utils/Bytes
       5: lload_2
       6: lload         4
       8: invokevirtual #83                 // Method findSessions:(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
      11: areturn

  public org.apache.kafka.streams.state.KeyValueIterator fetch(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #80                 // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #84                 // Method fetch:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  public org.apache.kafka.streams.state.KeyValueIterator fetch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #85                 // Method fetch:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
       8: areturn

  private void lambda$registerNewIterator$3(org.apache.kafka.streams.state.internals.InMemorySessionStore$InMemorySessionStoreIterator);
    Code:
       0: aload_0
       1: getfield      #10                 // Field openIterators:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  private static java.util.concurrent.ConcurrentNavigableMap lambda$put$2(org.apache.kafka.common.utils.Bytes);
    Code:
       0: new           #6                  // class java/util/concurrent/ConcurrentSkipListMap
       3: dup
       4: invokespecial #7                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
       7: areturn

  private static java.util.concurrent.ConcurrentNavigableMap lambda$put$1(java.lang.Long);
    Code:
       0: new           #6                  // class java/util/concurrent/ConcurrentSkipListMap
       3: dup
       4: invokespecial #7                  // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
       7: areturn

  private void lambda$init$0(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #87                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
       5: invokestatic  #88                 // Method org/apache/kafka/streams/state/internals/SessionKeySchema.from:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/kstream/Windowed;
       8: aload_2
       9: invokevirtual #79                 // Method put:(Lorg/apache/kafka/streams/kstream/Windowed;[B)V
      12: return

  static {};
    Code:
       0: ldc           #89                 // class org/apache/kafka/streams/state/internals/InMemorySessionStore
       2: invokestatic  #90                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #32                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
