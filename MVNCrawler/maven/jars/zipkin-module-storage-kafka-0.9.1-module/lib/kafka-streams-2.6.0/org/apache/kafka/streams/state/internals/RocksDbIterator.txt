Compiled from "RocksDbIterator.java"
class org.apache.kafka.streams.state.internals.RocksDbIterator extends org.apache.kafka.common.utils.AbstractIterator<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>> implements org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> {
  private final java.lang.String storeName;

  private final org.rocksdb.RocksIterator iter;

  private final java.util.Set<org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]>> openIterators;

  private volatile boolean open;

  private org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]> next;

  org.apache.kafka.streams.state.internals.RocksDbIterator(java.lang.String, org.rocksdb.RocksIterator, java.util.Set<org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/kafka/common/utils/AbstractIterator."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field open:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field storeName:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field iter:Lorg/rocksdb/RocksIterator;
      19: aload_0
      20: aload_3
      21: putfield      #5                  // Field openIterators:Ljava/util/Set;
      24: return

  public synchronized boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field open:Z
       4: ifne          31
       7: new           #6                  // class org/apache/kafka/streams/errors/InvalidStateStoreException
      10: dup
      11: ldc           #7                  // String RocksDB iterator for store %s has closed
      13: iconst_1
      14: anewarray     #8                  // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #3                  // Field storeName:Ljava/lang/String;
      23: aastore
      24: invokestatic  #9                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #10                 // Method org/apache/kafka/streams/errors/InvalidStateStoreException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: invokespecial #11                 // Method org/apache/kafka/common/utils/AbstractIterator.hasNext:()Z
      35: ireturn

  public org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]> makeNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field iter:Lorg/rocksdb/RocksIterator;
       4: invokevirtual #12                 // Method org/rocksdb/RocksIterator.isValid:()Z
       7: ifne          18
      10: aload_0
      11: invokevirtual #13                 // Method allDone:()Ljava/lang/Object;
      14: checkcast     #14                 // class org/apache/kafka/streams/KeyValue
      17: areturn
      18: aload_0
      19: aload_0
      20: invokespecial #15                 // Method getKeyValue:()Lorg/apache/kafka/streams/KeyValue;
      23: putfield      #16                 // Field next:Lorg/apache/kafka/streams/KeyValue;
      26: aload_0
      27: getfield      #4                  // Field iter:Lorg/rocksdb/RocksIterator;
      30: invokevirtual #17                 // Method org/rocksdb/RocksIterator.next:()V
      33: aload_0
      34: getfield      #16                 // Field next:Lorg/apache/kafka/streams/KeyValue;
      37: areturn

  private org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]> getKeyValue();
    Code:
       0: new           #14                 // class org/apache/kafka/streams/KeyValue
       3: dup
       4: new           #18                 // class org/apache/kafka/common/utils/Bytes
       7: dup
       8: aload_0
       9: getfield      #4                  // Field iter:Lorg/rocksdb/RocksIterator;
      12: invokevirtual #19                 // Method org/rocksdb/RocksIterator.key:()[B
      15: invokespecial #20                 // Method org/apache/kafka/common/utils/Bytes."<init>":([B)V
      18: aload_0
      19: getfield      #4                  // Field iter:Lorg/rocksdb/RocksIterator;
      22: invokevirtual #21                 // Method org/rocksdb/RocksIterator.value:()[B
      25: invokespecial #22                 // Method org/apache/kafka/streams/KeyValue."<init>":(Ljava/lang/Object;Ljava/lang/Object;)V
      28: areturn

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #5                  // Field openIterators:Ljava/util/Set;
       4: aload_0
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #4                  // Field iter:Lorg/rocksdb/RocksIterator;
      15: invokevirtual #24                 // Method org/rocksdb/RocksIterator.close:()V
      18: aload_0
      19: iconst_0
      20: putfield      #2                  // Field open:Z
      23: return

  public org.apache.kafka.common.utils.Bytes peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method hasNext:()Z
       4: ifne          15
       7: new           #26                 // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #27                 // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #16                 // Field next:Lorg/apache/kafka/streams/KeyValue;
      19: getfield      #28                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      22: checkcast     #18                 // class org/apache/kafka/common/utils/Bytes
      25: areturn

  public java.lang.Object makeNext();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method makeNext:()Lorg/apache/kafka/streams/KeyValue;
       4: areturn

  public java.lang.Object peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method peekNextKey:()Lorg/apache/kafka/common/utils/Bytes;
       4: areturn
}
