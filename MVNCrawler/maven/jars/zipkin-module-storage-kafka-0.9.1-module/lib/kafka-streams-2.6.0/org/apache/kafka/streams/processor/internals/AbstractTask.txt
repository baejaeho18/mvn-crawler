Compiled from "AbstractTask.java"
public abstract class org.apache.kafka.streams.processor.internals.AbstractTask implements org.apache.kafka.streams.processor.internals.Task {
  private org.apache.kafka.streams.processor.internals.Task$State state;

  protected java.util.Set<org.apache.kafka.common.TopicPartition> inputPartitions;

  protected org.apache.kafka.streams.processor.internals.ProcessorTopology topology;

  protected final org.apache.kafka.streams.processor.TaskId id;

  protected final org.apache.kafka.streams.processor.internals.StateDirectory stateDirectory;

  protected final org.apache.kafka.streams.processor.internals.ProcessorStateManager stateMgr;

  org.apache.kafka.streams.processor.internals.AbstractTask(org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.ProcessorTopology, org.apache.kafka.streams.processor.internals.StateDirectory, org.apache.kafka.streams.processor.internals.ProcessorStateManager, java.util.Set<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field org/apache/kafka/streams/processor/internals/Task$State.CREATED:Lorg/apache/kafka/streams/processor/internals/Task$State;
       8: putfield      #3                  // Field state:Lorg/apache/kafka/streams/processor/internals/Task$State;
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field id:Lorg/apache/kafka/streams/processor/TaskId;
      16: aload_0
      17: aload         4
      19: putfield      #5                  // Field stateMgr:Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
      22: aload_0
      23: aload_2
      24: putfield      #6                  // Field topology:Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
      27: aload_0
      28: aload         5
      30: putfield      #7                  // Field inputPartitions:Ljava/util/Set;
      33: aload_0
      34: aload_3
      35: putfield      #8                  // Field stateDirectory:Lorg/apache/kafka/streams/processor/internals/StateDirectory;
      38: return

  public org.apache.kafka.streams.processor.TaskId id();
    Code:
       0: aload_0
       1: getfield      #4                  // Field id:Lorg/apache/kafka/streams/processor/TaskId;
       4: areturn

  public java.util.Set<org.apache.kafka.common.TopicPartition> inputPartitions();
    Code:
       0: aload_0
       1: getfield      #7                  // Field inputPartitions:Ljava/util/Set;
       4: areturn

  public java.util.Collection<org.apache.kafka.common.TopicPartition> changelogPartitions();
    Code:
       0: aload_0
       1: getfield      #5                  // Field stateMgr:Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
       4: invokevirtual #9                  // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager.changelogPartitions:()Ljava/util/Collection;
       7: areturn

  public void markChangelogAsCorrupted(java.util.Collection<org.apache.kafka.common.TopicPartition>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field stateMgr:Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
       4: aload_1
       5: invokevirtual #10                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager.markChangelogAsCorrupted:(Ljava/util/Collection;)V
       8: return

  public org.apache.kafka.streams.processor.StateStore getStore(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field stateMgr:Lorg/apache/kafka/streams/processor/internals/ProcessorStateManager;
       4: aload_1
       5: invokevirtual #11                 // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager.getStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
       8: areturn

  public boolean isClosed();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method state:()Lorg/apache/kafka/streams/processor/internals/Task$State;
       4: getstatic     #13                 // Field org/apache/kafka/streams/processor/internals/Task$State.CLOSED:Lorg/apache/kafka/streams/processor/internals/Task$State;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public final org.apache.kafka.streams.processor.internals.Task$State state();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lorg/apache/kafka/streams/processor/internals/Task$State;
       4: areturn

  public void revive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Lorg/apache/kafka/streams/processor/internals/Task$State;
       4: getstatic     #13                 // Field org/apache/kafka/streams/processor/internals/Task$State.CLOSED:Lorg/apache/kafka/streams/processor/internals/Task$State;
       7: if_acmpne     20
      10: aload_0
      11: getstatic     #2                  // Field org/apache/kafka/streams/processor/internals/Task$State.CREATED:Lorg/apache/kafka/streams/processor/internals/Task$State;
      14: invokevirtual #14                 // Method transitionTo:(Lorg/apache/kafka/streams/processor/internals/Task$State;)V
      17: goto          62
      20: new           #15                 // class java/lang/IllegalStateException
      23: dup
      24: new           #16                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #18                 // String Illegal state
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #12                 // Method state:()Lorg/apache/kafka/streams/processor/internals/Task$State;
      40: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #21                 // String  while reviving task
      45: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field id:Lorg/apache/kafka/streams/processor/TaskId;
      52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: return

  final void transitionTo(org.apache.kafka.streams.processor.internals.Task$State);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method state:()Lorg/apache/kafka/streams/processor/internals/Task$State;
       4: astore_2
       5: aload_2
       6: aload_1
       7: invokevirtual #24                 // Method org/apache/kafka/streams/processor/internals/Task$State.isValidTransition:(Lorg/apache/kafka/streams/processor/internals/Task$State;)Z
      10: ifeq          21
      13: aload_0
      14: aload_1
      15: putfield      #3                  // Field state:Lorg/apache/kafka/streams/processor/internals/Task$State;
      18: goto          57
      21: new           #15                 // class java/lang/IllegalStateException
      24: dup
      25: new           #16                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #25                 // String Invalid transition from
      34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_2
      38: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #26                 // String  to
      43: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: return

  public void update(java.util.Set<org.apache.kafka.common.TopicPartition>, java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field inputPartitions:Ljava/util/Set;
       5: aload_0
       6: getfield      #6                  // Field topology:Lorg/apache/kafka/streams/processor/internals/ProcessorTopology;
       9: aload_2
      10: invokevirtual #27                 // Method org/apache/kafka/streams/processor/internals/ProcessorTopology.updateSourceTopics:(Ljava/util/Map;)V
      13: return
}
