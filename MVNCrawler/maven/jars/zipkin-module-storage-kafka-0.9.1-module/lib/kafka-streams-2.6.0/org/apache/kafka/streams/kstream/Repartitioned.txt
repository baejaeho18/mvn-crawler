Compiled from "Repartitioned.java"
public class org.apache.kafka.streams.kstream.Repartitioned<K, V> implements org.apache.kafka.streams.kstream.NamedOperation<org.apache.kafka.streams.kstream.Repartitioned<K, V>> {
  protected final java.lang.String name;

  protected final org.apache.kafka.common.serialization.Serde<K> keySerde;

  protected final org.apache.kafka.common.serialization.Serde<V> valueSerde;

  protected final java.lang.Integer numberOfPartitions;

  protected final org.apache.kafka.streams.processor.StreamPartitioner<K, V> partitioner;

  private org.apache.kafka.streams.kstream.Repartitioned(java.lang.String, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>, java.lang.Integer, org.apache.kafka.streams.processor.StreamPartitioner<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field name:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field numberOfPartitions:Ljava/lang/Integer;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      31: return

  protected org.apache.kafka.streams.kstream.Repartitioned(org.apache.kafka.streams.kstream.Repartitioned<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #2                  // Field name:Ljava/lang/String;
       5: aload_1
       6: getfield      #3                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       9: aload_1
      10: getfield      #4                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      13: aload_1
      14: getfield      #5                  // Field numberOfPartitions:Ljava/lang/Integer;
      17: aload_1
      18: getfield      #6                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      21: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      24: return

  public static <K, V> org.apache.kafka.streams.kstream.Repartitioned<K, V> as(java.lang.String);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aload_0
       5: aconst_null
       6: aconst_null
       7: aconst_null
       8: aconst_null
       9: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      12: areturn

  public static <K, V> org.apache.kafka.streams.kstream.Repartitioned<K, V> with(org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aconst_null
       5: aload_0
       6: aload_1
       7: aconst_null
       8: aconst_null
       9: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      12: areturn

  public static <K, V> org.apache.kafka.streams.kstream.Repartitioned<K, V> streamPartitioner(org.apache.kafka.streams.processor.StreamPartitioner<K, V>);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aconst_null
       5: aconst_null
       6: aconst_null
       7: aconst_null
       8: aload_0
       9: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      12: areturn

  public static <K, V> org.apache.kafka.streams.kstream.Repartitioned<K, V> numberOfPartitions(int);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aconst_null
       5: aconst_null
       6: aconst_null
       7: iload_0
       8: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: aconst_null
      12: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      15: areturn

  public org.apache.kafka.streams.kstream.Repartitioned<K, V> withName(java.lang.String);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       9: aload_0
      10: getfield      #4                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      13: aload_0
      14: getfield      #5                  // Field numberOfPartitions:Ljava/lang/Integer;
      17: aload_0
      18: getfield      #6                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      21: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      24: areturn

  public org.apache.kafka.streams.kstream.Repartitioned<K, V> withNumberOfPartitions(int);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aload_0
       5: getfield      #2                  // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #3                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      12: aload_0
      13: getfield      #4                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      16: iload_1
      17: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aload_0
      21: getfield      #6                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      24: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      27: areturn

  public org.apache.kafka.streams.kstream.Repartitioned<K, V> withKeySerde(org.apache.kafka.common.serialization.Serde<K>);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aload_0
       5: getfield      #2                  // Field name:Ljava/lang/String;
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      13: aload_0
      14: getfield      #5                  // Field numberOfPartitions:Ljava/lang/Integer;
      17: aload_0
      18: getfield      #6                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      21: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      24: areturn

  public org.apache.kafka.streams.kstream.Repartitioned<K, V> withValueSerde(org.apache.kafka.common.serialization.Serde<V>);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aload_0
       5: getfield      #2                  // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #3                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      12: aload_1
      13: aload_0
      14: getfield      #5                  // Field numberOfPartitions:Ljava/lang/Integer;
      17: aload_0
      18: getfield      #6                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      21: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      24: areturn

  public org.apache.kafka.streams.kstream.Repartitioned<K, V> withStreamPartitioner(org.apache.kafka.streams.processor.StreamPartitioner<K, V>);
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/Repartitioned
       3: dup
       4: aload_0
       5: getfield      #2                  // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #3                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      12: aload_0
      13: getfield      #4                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      16: aload_0
      17: getfield      #5                  // Field numberOfPartitions:Ljava/lang/Integer;
      20: aload_1
      21: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/Integer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      24: areturn

  public org.apache.kafka.streams.kstream.NamedOperation withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method withName:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Repartitioned;
       5: areturn
}
