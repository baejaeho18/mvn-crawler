Compiled from "TimestampedKeyValueStoreBuilder.java"
final class org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder$InMemoryTimestampedKeyValueStoreMarker implements org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>, org.apache.kafka.streams.state.TimestampedBytesStore {
  final org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]> wrapped;

  private org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder$InMemoryTimestampedKeyValueStoreMarker(org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.persistent:()Z
      10: ifeq          23
      13: new           #4                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #5                  // String Provided store must not be a persistent store, but it is.
      19: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
      28: return

  public void init(org.apache.kafka.streams.processor.ProcessorContext, org.apache.kafka.streams.processor.StateStore);
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: aload_2
       6: invokeinterface #8,  3            // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
      11: return

  public void put(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: aload_2
       6: invokeinterface #9,  3            // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      11: return

  public byte[] putIfAbsent(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: aload_2
       6: invokeinterface #10,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #11                 // class "[B"
      14: areturn

  public void putAll(java.util.List<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.putAll:(Ljava/util/List;)V
      10: return

  public byte[] delete(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.delete:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class "[B"
      13: areturn

  public byte[] get(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class "[B"
      13: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: aload_2
       6: invokeinterface #15,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.range:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      11: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.all:()Lorg/apache/kafka/streams/state/KeyValueIterator;
       9: areturn

  public long approximateNumEntries();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #17,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.approximateNumEntries:()J
       9: lreturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #18,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.flush:()V
       9: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.close:()V
       9: return

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #20,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.isOpen:()Z
       9: ireturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #7                  // Field wrapped:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.name:()Ljava/lang/String;
       9: areturn

  public boolean persistent();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Object delete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #23                 // Method delete:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #11                 // class "[B"
       9: invokevirtual #24                 // Method putIfAbsent:(Lorg/apache/kafka/common/utils/Bytes;[B)[B
      12: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #11                 // class "[B"
       9: invokevirtual #25                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      12: return

  public org.apache.kafka.streams.state.KeyValueIterator range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #22                 // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #26                 // Method range:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #27                 // Method get:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder$InMemoryTimestampedKeyValueStoreMarker(org.apache.kafka.streams.state.KeyValueStore, org.apache.kafka.streams.state.internals.TimestampedKeyValueStoreBuilder$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/apache/kafka/streams/state/KeyValueStore;)V
       5: return
}
