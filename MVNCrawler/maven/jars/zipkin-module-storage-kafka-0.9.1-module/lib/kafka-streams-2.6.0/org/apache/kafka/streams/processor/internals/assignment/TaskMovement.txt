Compiled from "TaskMovement.java"
final class org.apache.kafka.streams.processor.internals.assignment.TaskMovement {
  private final org.apache.kafka.streams.processor.TaskId task;

  private final java.util.UUID destination;

  private final java.util.SortedSet<java.util.UUID> caughtUpClients;

  private org.apache.kafka.streams.processor.internals.assignment.TaskMovement(org.apache.kafka.streams.processor.TaskId, java.util.UUID, java.util.SortedSet<java.util.UUID>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field destination:Ljava/util/UUID;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field caughtUpClients:Ljava/util/SortedSet;
      19: aload_3
      20: ifnull        32
      23: aload_3
      24: invokeinterface #5,  1            // InterfaceMethod java/util/SortedSet.isEmpty:()Z
      29: ifeq          42
      32: new           #6                  // class java/lang/IllegalStateException
      35: dup
      36: ldc           #7                  // String Should not attempt to move a task if no caught up clients exist
      38: invokespecial #8                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: return

  private org.apache.kafka.streams.processor.TaskId task();
    Code:
       0: aload_0
       1: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
       4: areturn

  private int numCaughtUpClients();
    Code:
       0: aload_0
       1: getfield      #4                  // Field caughtUpClients:Ljava/util/SortedSet;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/SortedSet.size:()I
       9: ireturn

  private static boolean taskIsNotCaughtUpOnClientAndOtherCaughtUpClientsExist(org.apache.kafka.streams.processor.TaskId, java.util.UUID, java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.SortedSet<java.util.UUID>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #10                 // Method taskIsCaughtUpOnClientOrNoCaughtUpClientsExist:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Ljava/util/Map;)Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private static boolean taskIsCaughtUpOnClientOrNoCaughtUpClientsExist(org.apache.kafka.streams.processor.TaskId, java.util.UUID, java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.SortedSet<java.util.UUID>>);
    Code:
       0: aload_2
       1: aload_0
       2: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: ldc           #12                 // String uninitialized set
       9: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #14                 // class java/util/Set
      15: astore_3
      16: aload_3
      17: invokeinterface #15,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      22: ifne          35
      25: aload_3
      26: aload_1
      27: invokeinterface #16,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  static int assignActiveTaskMovements(java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.SortedSet<java.util.UUID>>, java.util.Map<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.util.Map<java.util.UUID, java.util.Set<org.apache.kafka.streams.processor.TaskId>>, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: invokedynamic #17,  0             // InvokeDynamic #0:apply:(Ljava/util/Map;)Ljava/util/function/BiFunction;
       6: astore        4
       8: new           #18                 // class org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet
      11: dup
      12: aload         4
      14: aload_1
      15: invokedynamic #19,  0             // InvokeDynamic #1:apply:(Ljava/util/Map;)Ljava/util/function/Function;
      20: invokespecial #20                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet."<init>":(Ljava/util/function/BiFunction;Ljava/util/function/Function;)V
      23: astore        5
      25: new           #21                 // class java/util/PriorityQueue
      28: dup
      29: invokedynamic #22,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      34: invokestatic  #23                 // InterfaceMethod java/util/Comparator.comparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      37: invokedynamic #24,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      42: invokeinterface #25,  2           // InterfaceMethod java/util/Comparator.thenComparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      47: invokespecial #26                 // Method java/util/PriorityQueue."<init>":(Ljava/util/Comparator;)V
      50: astore        6
      52: aload_1
      53: invokeinterface #27,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      58: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      63: astore        7
      65: aload         7
      67: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          199
      75: aload         7
      77: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #31                 // class java/util/Map$Entry
      85: astore        8
      87: aload         8
      89: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      94: checkcast     #33                 // class java/util/UUID
      97: astore        9
      99: aload         8
     101: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     106: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     109: astore        10
     111: aload         10
     113: invokevirtual #36                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.activeTasks:()Ljava/util/Set;
     116: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     121: astore        11
     123: aload         11
     125: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     130: ifeq          189
     133: aload         11
     135: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #37                 // class org/apache/kafka/streams/processor/TaskId
     143: astore        12
     145: aload         12
     147: aload         9
     149: aload_0
     150: invokestatic  #38                 // Method taskIsNotCaughtUpOnClientAndOtherCaughtUpClientsExist:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Ljava/util/Map;)Z
     153: ifeq          186
     156: aload         6
     158: new           #39                 // class org/apache/kafka/streams/processor/internals/assignment/TaskMovement
     161: dup
     162: aload         12
     164: aload         9
     166: aload_0
     167: aload         12
     169: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     174: checkcast     #40                 // class java/util/SortedSet
     177: invokespecial #41                 // Method "<init>":(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Ljava/util/SortedSet;)V
     180: invokeinterface #42,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     185: pop
     186: goto          123
     189: aload         5
     191: aload         9
     193: invokevirtual #43                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offer:(Ljava/util/UUID;)V
     196: goto          65
     199: aload         6
     201: invokeinterface #44,  1           // InterfaceMethod java/util/Queue.size:()I
     206: istore        7
     208: aload         6
     210: invokeinterface #45,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
     215: astore        8
     217: aload         8
     219: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     224: ifeq          426
     227: aload         8
     229: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     234: checkcast     #39                 // class org/apache/kafka/streams/processor/internals/assignment/TaskMovement
     237: astore        9
     239: aload         5
     241: aload         9
     243: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
     246: aload_1
     247: aload         9
     249: invokedynamic #46,  0             // InvokeDynamic #4:apply:(Ljava/util/Map;Lorg/apache/kafka/streams/processor/internals/assignment/TaskMovement;)Ljava/util/function/Function;
     254: invokevirtual #47                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.poll:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/function/Function;)Ljava/util/UUID;
     257: astore        10
     259: aload         10
     261: ifnonnull     365
     264: aload         5
     266: aload         9
     268: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
     271: invokevirtual #48                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.poll:(Lorg/apache/kafka/streams/processor/TaskId;)Ljava/util/UUID;
     274: ldc           #49                 // String Tried to move task to caught-up client but none exist
     276: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     279: checkcast     #33                 // class java/util/UUID
     282: astore        11
     284: aload_3
     285: aload         9
     287: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
     290: aload_1
     291: aload         11
     293: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     298: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     301: aload_1
     302: aload         9
     304: getfield      #3                  // Field destination:Ljava/util/UUID;
     307: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     312: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     315: aload_2
     316: aload         9
     318: getfield      #3                  // Field destination:Ljava/util/UUID;
     321: invokedynamic #50,  0             // InvokeDynamic #5:apply:()Ljava/util/function/Function;
     326: invokeinterface #51,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     331: checkcast     #14                 // class java/util/Set
     334: invokestatic  #52                 // Method moveActiveAndTryToWarmUp:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;Ljava/util/Set;)V
     337: aload         5
     339: iconst_2
     340: anewarray     #33                 // class java/util/UUID
     343: dup
     344: iconst_0
     345: aload         11
     347: aastore
     348: dup
     349: iconst_1
     350: aload         9
     352: getfield      #3                  // Field destination:Ljava/util/UUID;
     355: aastore
     356: invokestatic  #53                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     359: invokevirtual #54                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offerAll:(Ljava/util/Collection;)V
     362: goto          423
     365: aload         9
     367: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
     370: aload_1
     371: aload         10
     373: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     378: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     381: aload_1
     382: aload         9
     384: getfield      #3                  // Field destination:Ljava/util/UUID;
     387: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     392: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     395: invokestatic  #55                 // Method swapStandbyAndActive:(Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)V
     398: aload         5
     400: iconst_2
     401: anewarray     #33                 // class java/util/UUID
     404: dup
     405: iconst_0
     406: aload         10
     408: aastore
     409: dup
     410: iconst_1
     411: aload         9
     413: getfield      #3                  // Field destination:Ljava/util/UUID;
     416: aastore
     417: invokestatic  #53                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     420: invokevirtual #54                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offerAll:(Ljava/util/Collection;)V
     423: goto          217
     426: iload         7
     428: ireturn

  static int assignStandbyTaskMovements(java.util.Map<org.apache.kafka.streams.processor.TaskId, java.util.SortedSet<java.util.UUID>>, java.util.Map<java.util.UUID, org.apache.kafka.streams.processor.internals.assignment.ClientState>, java.util.concurrent.atomic.AtomicInteger, java.util.Map<java.util.UUID, java.util.Set<org.apache.kafka.streams.processor.TaskId>>);
    Code:
       0: aload_0
       1: invokedynamic #56,  0             // InvokeDynamic #6:apply:(Ljava/util/Map;)Ljava/util/function/BiFunction;
       6: astore        4
       8: new           #18                 // class org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet
      11: dup
      12: aload         4
      14: aload_1
      15: invokedynamic #57,  0             // InvokeDynamic #7:apply:(Ljava/util/Map;)Ljava/util/function/Function;
      20: invokespecial #20                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet."<init>":(Ljava/util/function/BiFunction;Ljava/util/function/Function;)V
      23: astore        5
      25: new           #21                 // class java/util/PriorityQueue
      28: dup
      29: invokedynamic #22,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      34: invokestatic  #23                 // InterfaceMethod java/util/Comparator.comparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      37: invokedynamic #24,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      42: invokeinterface #25,  2           // InterfaceMethod java/util/Comparator.thenComparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      47: invokespecial #26                 // Method java/util/PriorityQueue."<init>":(Ljava/util/Comparator;)V
      50: astore        6
      52: aload_1
      53: invokeinterface #27,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      58: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      63: astore        7
      65: aload         7
      67: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          226
      75: aload         7
      77: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #31                 // class java/util/Map$Entry
      85: astore        8
      87: aload         8
      89: invokeinterface #32,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      94: checkcast     #33                 // class java/util/UUID
      97: astore        9
      99: aload         8
     101: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     106: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     109: astore        10
     111: aload         10
     113: invokevirtual #58                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.standbyTasks:()Ljava/util/Set;
     116: invokeinterface #28,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     121: astore        11
     123: aload         11
     125: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     130: ifeq          216
     133: aload         11
     135: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     140: checkcast     #37                 // class org/apache/kafka/streams/processor/TaskId
     143: astore        12
     145: aload_3
     146: aload         9
     148: invokestatic  #59                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
     151: invokeinterface #60,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: checkcast     #14                 // class java/util/Set
     159: aload         12
     161: invokeinterface #16,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     166: ifeq          172
     169: goto          213
     172: aload         12
     174: aload         9
     176: aload_0
     177: invokestatic  #38                 // Method taskIsNotCaughtUpOnClientAndOtherCaughtUpClientsExist:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Ljava/util/Map;)Z
     180: ifeq          213
     183: aload         6
     185: new           #39                 // class org/apache/kafka/streams/processor/internals/assignment/TaskMovement
     188: dup
     189: aload         12
     191: aload         9
     193: aload_0
     194: aload         12
     196: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     201: checkcast     #40                 // class java/util/SortedSet
     204: invokespecial #41                 // Method "<init>":(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Ljava/util/SortedSet;)V
     207: invokeinterface #42,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     212: pop
     213: goto          123
     216: aload         5
     218: aload         9
     220: invokevirtual #43                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offer:(Ljava/util/UUID;)V
     223: goto          65
     226: iconst_0
     227: istore        7
     229: aload         6
     231: invokeinterface #45,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
     236: astore        8
     238: aload         8
     240: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     245: ifeq          353
     248: aload         8
     250: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     255: checkcast     #39                 // class org/apache/kafka/streams/processor/internals/assignment/TaskMovement
     258: astore        9
     260: aload         5
     262: aload         9
     264: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
     267: aload_1
     268: aload         9
     270: invokedynamic #61,  0             // InvokeDynamic #8:apply:(Ljava/util/Map;Lorg/apache/kafka/streams/processor/internals/assignment/TaskMovement;)Ljava/util/function/Function;
     275: invokevirtual #47                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.poll:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/function/Function;)Ljava/util/UUID;
     278: astore        10
     280: aload         10
     282: ifnonnull     288
     285: goto          350
     288: aload_2
     289: aload         9
     291: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
     294: aload_1
     295: aload         10
     297: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     302: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     305: aload_1
     306: aload         9
     308: getfield      #3                  // Field destination:Ljava/util/UUID;
     311: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     316: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
     319: invokestatic  #62                 // Method moveStandbyAndTryToWarmUp:(Ljava/util/concurrent/atomic/AtomicInteger;Lorg/apache/kafka/streams/processor/TaskId;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;Lorg/apache/kafka/streams/processor/internals/assignment/ClientState;)V
     322: aload         5
     324: iconst_2
     325: anewarray     #33                 // class java/util/UUID
     328: dup
     329: iconst_0
     330: aload         10
     332: aastore
     333: dup
     334: iconst_1
     335: aload         9
     337: getfield      #3                  // Field destination:Ljava/util/UUID;
     340: aastore
     341: invokestatic  #53                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     344: invokevirtual #54                 // Method org/apache/kafka/streams/processor/internals/assignment/ConstrainedPrioritySet.offerAll:(Ljava/util/Collection;)V
     347: iinc          7, 1
     350: goto          238
     353: iload         7
     355: ireturn

  private static void moveActiveAndTryToWarmUp(java.util.concurrent.atomic.AtomicInteger, org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.assignment.ClientState, org.apache.kafka.streams.processor.internals.assignment.ClientState, java.util.Set<org.apache.kafka.streams.processor.TaskId>);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #63                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
       5: aload_0
       6: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicInteger.getAndDecrement:()I
       9: ifle          34
      12: aload_3
      13: aload_1
      14: invokevirtual #65                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.unassignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      17: aload_3
      18: aload_1
      19: invokevirtual #66                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignStandby:(Lorg/apache/kafka/streams/processor/TaskId;)V
      22: aload         4
      24: aload_1
      25: invokeinterface #67,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      30: pop
      31: goto          39
      34: aload_3
      35: aload_1
      36: invokevirtual #65                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.unassignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      39: return

  private static void moveStandbyAndTryToWarmUp(java.util.concurrent.atomic.AtomicInteger, org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.assignment.ClientState, org.apache.kafka.streams.processor.internals.assignment.ClientState);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #66                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignStandby:(Lorg/apache/kafka/streams/processor/TaskId;)V
       5: aload_0
       6: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicInteger.getAndDecrement:()I
       9: ifle          15
      12: goto          20
      15: aload_3
      16: aload_1
      17: invokevirtual #68                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.unassignStandby:(Lorg/apache/kafka/streams/processor/TaskId;)V
      20: return

  private static void swapStandbyAndActive(org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.processor.internals.assignment.ClientState, org.apache.kafka.streams.processor.internals.assignment.ClientState);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #68                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.unassignStandby:(Lorg/apache/kafka/streams/processor/TaskId;)V
       5: aload_1
       6: aload_0
       7: invokevirtual #63                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      10: aload_2
      11: aload_0
      12: invokevirtual #65                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.unassignActive:(Lorg/apache/kafka/streams/processor/TaskId;)V
      15: aload_2
      16: aload_0
      17: invokevirtual #66                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignStandby:(Lorg/apache/kafka/streams/processor/TaskId;)V
      20: return

  private static java.lang.Boolean lambda$assignStandbyTaskMovements$6(java.util.Map, org.apache.kafka.streams.processor.internals.assignment.TaskMovement, java.util.UUID);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      10: aload_1
      11: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
      14: invokevirtual #69                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasAssignedTask:(Lorg/apache/kafka/streams/processor/TaskId;)Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      28: areturn

  private static java.lang.Double lambda$assignStandbyTaskMovements$5(java.util.Map, java.util.UUID);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      10: invokevirtual #71                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskLoad:()D
      13: invokestatic  #72                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      16: areturn

  private static java.lang.Boolean lambda$assignStandbyTaskMovements$4(java.util.Map, java.util.UUID, org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokestatic  #10                 // Method taskIsCaughtUpOnClientOrNoCaughtUpClientsExist:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Ljava/util/Map;)Z
       6: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn

  private static java.util.Set lambda$assignActiveTaskMovements$3(java.util.UUID);
    Code:
       0: new           #73                 // class java/util/TreeSet
       3: dup
       4: invokespecial #74                 // Method java/util/TreeSet."<init>":()V
       7: areturn

  private static java.lang.Boolean lambda$assignActiveTaskMovements$2(java.util.Map, org.apache.kafka.streams.processor.internals.assignment.TaskMovement, java.util.UUID);
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      10: aload_1
      11: getfield      #2                  // Field task:Lorg/apache/kafka/streams/processor/TaskId;
      14: invokevirtual #75                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.hasStandbyTask:(Lorg/apache/kafka/streams/processor/TaskId;)Z
      17: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      20: areturn

  private static java.lang.Double lambda$assignActiveTaskMovements$1(java.util.Map, java.util.UUID);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #35                 // class org/apache/kafka/streams/processor/internals/assignment/ClientState
      10: invokevirtual #71                 // Method org/apache/kafka/streams/processor/internals/assignment/ClientState.assignedTaskLoad:()D
      13: invokestatic  #72                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      16: areturn

  private static java.lang.Boolean lambda$assignActiveTaskMovements$0(java.util.Map, java.util.UUID, org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_2
       1: aload_1
       2: aload_0
       3: invokestatic  #10                 // Method taskIsCaughtUpOnClientOrNoCaughtUpClientsExist:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/UUID;Ljava/util/Map;)Z
       6: invokestatic  #70                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: areturn
}
