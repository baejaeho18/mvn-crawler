Compiled from "CogroupedKStream.java"
public interface org.apache.kafka.streams.kstream.CogroupedKStream<K, VOut> {
  public abstract <VIn> org.apache.kafka.streams.kstream.CogroupedKStream<K, VOut> cogroup(org.apache.kafka.streams.kstream.KGroupedStream<K, VIn>, org.apache.kafka.streams.kstream.Aggregator<? super K, ? super VIn, VOut>);

  public abstract org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>);

  public abstract org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>, org.apache.kafka.streams.kstream.Named);

  public abstract org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>, org.apache.kafka.streams.kstream.Materialized<K, VOut, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract org.apache.kafka.streams.kstream.KTable<K, VOut> aggregate(org.apache.kafka.streams.kstream.Initializer<VOut>, org.apache.kafka.streams.kstream.Named, org.apache.kafka.streams.kstream.Materialized<K, VOut, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract <W extends org.apache.kafka.streams.kstream.Window> org.apache.kafka.streams.kstream.TimeWindowedCogroupedKStream<K, VOut> windowedBy(org.apache.kafka.streams.kstream.Windows<W>);

  public abstract org.apache.kafka.streams.kstream.SessionWindowedCogroupedKStream<K, VOut> windowedBy(org.apache.kafka.streams.kstream.SessionWindows);
}
