Compiled from "TaskId.java"
public class org.apache.kafka.streams.processor.TaskId implements java.lang.Comparable<org.apache.kafka.streams.processor.TaskId> {
  public final int topicGroupId;

  public final int partition;

  public org.apache.kafka.streams.processor.TaskId(int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field topicGroupId:I
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field partition:I
      14: return

  public java.lang.String toString();
    Code:
       0: new           #4                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #2                  // Field topicGroupId:I
      11: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      14: ldc           #7                  // String _
      16: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #3                  // Field partition:I
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      26: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public static org.apache.kafka.streams.processor.TaskId parse(java.lang.String);
    Code:
       0: aload_0
       1: bipush        95
       3: invokevirtual #10                 // Method java/lang/String.indexOf:(I)I
       6: istore_1
       7: iload_1
       8: ifle          21
      11: iload_1
      12: iconst_1
      13: iadd
      14: aload_0
      15: invokevirtual #11                 // Method java/lang/String.length:()I
      18: if_icmplt     30
      21: new           #12                 // class org/apache/kafka/streams/errors/TaskIdFormatException
      24: dup
      25: aload_0
      26: invokespecial #13                 // Method org/apache/kafka/streams/errors/TaskIdFormatException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: iconst_0
      32: iload_1
      33: invokevirtual #14                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: invokestatic  #15                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      39: istore_2
      40: aload_0
      41: iload_1
      42: iconst_1
      43: iadd
      44: invokevirtual #16                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      47: invokestatic  #15                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      50: istore_3
      51: new           #17                 // class org/apache/kafka/streams/processor/TaskId
      54: dup
      55: iload_2
      56: iload_3
      57: invokespecial #18                 // Method "<init>":(II)V
      60: areturn
      61: astore_2
      62: new           #12                 // class org/apache/kafka/streams/errors/TaskIdFormatException
      65: dup
      66: aload_0
      67: invokespecial #13                 // Method org/apache/kafka/streams/errors/TaskIdFormatException."<init>":(Ljava/lang/String;)V
      70: athrow
    Exception table:
       from    to  target type
          30    60    61   Class java/lang/Exception

  public void writeTo(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field topicGroupId:I
       5: invokevirtual #20                 // Method java/io/DataOutputStream.writeInt:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field partition:I
      13: invokevirtual #20                 // Method java/io/DataOutputStream.writeInt:(I)V
      16: return

  public static org.apache.kafka.streams.processor.TaskId readFrom(java.io.DataInputStream) throws java.io.IOException;
    Code:
       0: new           #17                 // class org/apache/kafka/streams/processor/TaskId
       3: dup
       4: aload_0
       5: invokevirtual #21                 // Method java/io/DataInputStream.readInt:()I
       8: aload_0
       9: invokevirtual #21                 // Method java/io/DataInputStream.readInt:()I
      12: invokespecial #18                 // Method "<init>":(II)V
      15: areturn

  public void writeTo(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field topicGroupId:I
       5: invokevirtual #22                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
       8: pop
       9: aload_1
      10: aload_0
      11: getfield      #3                  // Field partition:I
      14: invokevirtual #22                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      17: pop
      18: return

  public static org.apache.kafka.streams.processor.TaskId readFrom(java.nio.ByteBuffer);
    Code:
       0: new           #17                 // class org/apache/kafka/streams/processor/TaskId
       3: dup
       4: aload_0
       5: invokevirtual #23                 // Method java/nio/ByteBuffer.getInt:()I
       8: aload_0
       9: invokevirtual #23                 // Method java/nio/ByteBuffer.getInt:()I
      12: invokespecial #18                 // Method "<init>":(II)V
      15: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class org/apache/kafka/streams/processor/TaskId
      11: ifeq          47
      14: aload_1
      15: checkcast     #17                 // class org/apache/kafka/streams/processor/TaskId
      18: astore_2
      19: aload_2
      20: getfield      #2                  // Field topicGroupId:I
      23: aload_0
      24: getfield      #2                  // Field topicGroupId:I
      27: if_icmpne     45
      30: aload_2
      31: getfield      #3                  // Field partition:I
      34: aload_0
      35: getfield      #3                  // Field partition:I
      38: if_icmpne     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ireturn
      47: iconst_0
      48: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field topicGroupId:I
       4: i2l
       5: bipush        32
       7: lshl
       8: aload_0
       9: getfield      #3                  // Field partition:I
      12: i2l
      13: lor
      14: lstore_1
      15: lload_1
      16: ldc2_w        #24                 // long 4294967295l
      19: lrem
      20: l2i
      21: ireturn

  public int compareTo(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_0
       1: getfield      #2                  // Field topicGroupId:I
       4: aload_1
       5: getfield      #2                  // Field topicGroupId:I
       8: invokestatic  #26                 // Method java/lang/Integer.compare:(II)I
      11: istore_2
      12: iload_2
      13: ifeq          20
      16: iload_2
      17: goto          31
      20: aload_0
      21: getfield      #3                  // Field partition:I
      24: aload_1
      25: getfield      #3                  // Field partition:I
      28: invokestatic  #26                 // Method java/lang/Integer.compare:(II)I
      31: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class org/apache/kafka/streams/processor/TaskId
       5: invokevirtual #27                 // Method compareTo:(Lorg/apache/kafka/streams/processor/TaskId;)I
       8: ireturn
}
