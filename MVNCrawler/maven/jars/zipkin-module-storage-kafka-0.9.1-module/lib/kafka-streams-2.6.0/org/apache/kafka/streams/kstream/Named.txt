Compiled from "Named.java"
public class org.apache.kafka.streams.kstream.Named implements org.apache.kafka.streams.kstream.NamedOperation<org.apache.kafka.streams.kstream.Named> {
  private static final int MAX_NAME_LENGTH;

  protected java.lang.String name;

  protected org.apache.kafka.streams.kstream.Named(org.apache.kafka.streams.kstream.Named);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #1                  // String named can\'t be null
       4: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #3                  // class org/apache/kafka/streams/kstream/Named
      10: getfield      #4                  // Field name:Ljava/lang/String;
      13: invokespecial #5                  // Method "<init>":(Ljava/lang/String;)V
      16: return

  protected org.apache.kafka.streams.kstream.Named(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field name:Ljava/lang/String;
       9: aload_1
      10: ifnull        17
      13: aload_1
      14: invokestatic  #7                  // Method validate:(Ljava/lang/String;)V
      17: return

  public static org.apache.kafka.streams.kstream.Named as(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #8                  // String name can\'t be null
       3: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #3                  // class org/apache/kafka/streams/kstream/Named
      10: dup
      11: aload_0
      12: invokespecial #5                  // Method "<init>":(Ljava/lang/String;)V
      15: areturn

  public org.apache.kafka.streams.kstream.Named withName(java.lang.String);
    Code:
       0: new           #3                  // class org/apache/kafka/streams/kstream/Named
       3: dup
       4: aload_1
       5: invokespecial #5                  // Method "<init>":(Ljava/lang/String;)V
       8: areturn

  protected static void validate(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z
       4: ifeq          17
       7: new           #10                 // class org/apache/kafka/streams/errors/TopologyException
      10: dup
      11: ldc           #11                 // String Name is illegal, it can\'t be empty
      13: invokespecial #12                 // Method org/apache/kafka/streams/errors/TopologyException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: ldc           #13                 // String .
      20: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifne          35
      26: aload_0
      27: ldc           #15                 // String ..
      29: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          45
      35: new           #10                 // class org/apache/kafka/streams/errors/TopologyException
      38: dup
      39: ldc           #16                 // String Name cannot be \".\" or \"..\"
      41: invokespecial #12                 // Method org/apache/kafka/streams/errors/TopologyException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: invokevirtual #17                 // Method java/lang/String.length:()I
      49: sipush        249
      52: if_icmple     82
      55: new           #10                 // class org/apache/kafka/streams/errors/TopologyException
      58: dup
      59: new           #18                 // class java/lang/StringBuilder
      62: dup
      63: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      66: ldc           #20                 // String Name is illegal, it can\'t be longer than 249 characters, name:
      68: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: aload_0
      72: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokespecial #12                 // Method org/apache/kafka/streams/errors/TopologyException."<init>":(Ljava/lang/String;)V
      81: athrow
      82: aload_0
      83: invokestatic  #23                 // Method containsValidPattern:(Ljava/lang/String;)Z
      86: ifne          121
      89: new           #10                 // class org/apache/kafka/streams/errors/TopologyException
      92: dup
      93: new           #18                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #24                 // String Name \"
     102: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: ldc           #25                 // String \" is illegal, it contains a character other than ASCII alphanumerics, \'.\', \'_\' and \'-\'
     111: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #12                 // Method org/apache/kafka/streams/errors/TopologyException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: return

  private static boolean containsValidPattern(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #17                 // Method java/lang/String.length:()I
       7: if_icmpge     100
      10: aload_0
      11: iload_1
      12: invokevirtual #26                 // Method java/lang/String.charAt:(I)C
      15: istore_2
      16: iload_2
      17: bipush        97
      19: if_icmplt     28
      22: iload_2
      23: bipush        122
      25: if_icmple     52
      28: iload_2
      29: bipush        48
      31: if_icmplt     40
      34: iload_2
      35: bipush        57
      37: if_icmple     52
      40: iload_2
      41: bipush        65
      43: if_icmplt     56
      46: iload_2
      47: bipush        90
      49: if_icmpgt     56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: istore_3
      58: iload_3
      59: ifne          80
      62: iload_2
      63: bipush        46
      65: if_icmpeq     80
      68: iload_2
      69: bipush        95
      71: if_icmpeq     80
      74: iload_2
      75: bipush        45
      77: if_icmpne     84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: istore        4
      87: iload         4
      89: ifne          94
      92: iconst_0
      93: ireturn
      94: iinc          1, 1
      97: goto          2
     100: iconst_1
     101: ireturn

  public org.apache.kafka.streams.kstream.NamedOperation withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method withName:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Named;
       5: areturn
}
