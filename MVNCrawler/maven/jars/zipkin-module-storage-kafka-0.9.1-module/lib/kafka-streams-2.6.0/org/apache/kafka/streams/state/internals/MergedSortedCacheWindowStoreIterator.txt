Compiled from "MergedSortedCacheWindowStoreIterator.java"
class org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator extends org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<java.lang.Long, java.lang.Long, byte[], byte[]> implements org.apache.kafka.streams.state.WindowStoreIterator<byte[]> {
  org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreIterator(org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<org.apache.kafka.common.utils.Bytes, org.apache.kafka.streams.state.internals.LRUCacheEntry>, org.apache.kafka.streams.state.KeyValueIterator<java.lang.Long, byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/kafka/streams/state/internals/AbstractMergedSortedCacheStoreIterator."<init>":(Lorg/apache/kafka/streams/state/internals/PeekingKeyValueIterator;Lorg/apache/kafka/streams/state/KeyValueIterator;)V
       6: return

  public org.apache.kafka.streams.KeyValue<java.lang.Long, byte[]> deserializeStorePair(org.apache.kafka.streams.KeyValue<java.lang.Long, byte[]>);
    Code:
       0: aload_1
       1: areturn

  java.lang.Long deserializeCacheKey(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method org/apache/kafka/streams/state/internals/SegmentedCacheFunction.bytesFromCacheKey:(Lorg/apache/kafka/common/utils/Bytes;)[B
       4: astore_2
       5: aload_2
       6: invokestatic  #3                  // Method org/apache/kafka/streams/state/internals/WindowKeySchema.extractStoreTimestamp:([B)J
       9: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: areturn

  byte[] deserializeCacheValue(org.apache.kafka.streams.state.internals.LRUCacheEntry);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.value:()[B
       4: areturn

  public java.lang.Long deserializeStoreKey(java.lang.Long);
    Code:
       0: aload_1
       1: areturn

  public int compare(org.apache.kafka.common.utils.Bytes, java.lang.Long);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method org/apache/kafka/streams/state/internals/SegmentedCacheFunction.bytesFromCacheKey:(Lorg/apache/kafka/common/utils/Bytes;)[B
       4: astore_3
       5: aload_3
       6: invokestatic  #3                  // Method org/apache/kafka/streams/state/internals/WindowKeySchema.extractStoreTimestamp:([B)J
       9: invokestatic  #4                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: astore        4
      14: aload         4
      16: aload_2
      17: invokevirtual #6                  // Method java/lang/Long.compareTo:(Ljava/lang/Long;)I
      20: ireturn

  java.lang.Object deserializeCacheValue(org.apache.kafka.streams.state.internals.LRUCacheEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #7                  // Method deserializeCacheValue:(Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)[B
       5: areturn

  java.lang.Object deserializeCacheKey(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method deserializeCacheKey:(Lorg/apache/kafka/common/utils/Bytes;)Ljava/lang/Long;
       5: areturn

  public java.lang.Object deserializeStoreKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Long
       5: invokevirtual #10                 // Method deserializeStoreKey:(Ljava/lang/Long;)Ljava/lang/Long;
       8: areturn

  public int compare(org.apache.kafka.common.utils.Bytes, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #9                  // class java/lang/Long
       6: invokevirtual #11                 // Method compare:(Lorg/apache/kafka/common/utils/Bytes;Ljava/lang/Long;)I
       9: ireturn
}
