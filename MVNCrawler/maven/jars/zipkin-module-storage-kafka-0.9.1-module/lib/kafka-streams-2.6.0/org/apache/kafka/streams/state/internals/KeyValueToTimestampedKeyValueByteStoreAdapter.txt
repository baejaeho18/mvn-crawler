Compiled from "KeyValueToTimestampedKeyValueByteStoreAdapter.java"
public class org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter implements org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]> {
  final org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]> store;

  org.apache.kafka.streams.state.internals.KeyValueToTimestampedKeyValueByteStoreAdapter(org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #2,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.persistent:()Z
      10: ifne          23
      13: new           #3                  // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #4                  // String Provided store must be a persistent store, but it is not.
      19: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
      28: return

  public void put(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: aload_2
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_2
      14: invokestatic  #7                  // Method org/apache/kafka/streams/state/internals/ValueAndTimestampDeserializer.rawValue:([B)[B
      17: invokeinterface #8,  3            // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  public byte[] putIfAbsent(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: aload_2
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_2
      14: invokestatic  #7                  // Method org/apache/kafka/streams/state/internals/ValueAndTimestampDeserializer.rawValue:([B)[B
      17: invokeinterface #9,  3            // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #10                 // class "[B"
      25: invokestatic  #11                 // InterfaceMethod org/apache/kafka/streams/state/TimestampedBytesStore.convertToTimestampedFormat:([B)[B
      28: areturn

  public void putAll(java.util.List<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          65
      16: aload_2
      17: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #15                 // class org/apache/kafka/streams/KeyValue
      25: astore_3
      26: aload_3
      27: getfield      #16                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      30: checkcast     #10                 // class "[B"
      33: astore        4
      35: aload_0
      36: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
      39: aload_3
      40: getfield      #17                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      43: aload         4
      45: ifnonnull     52
      48: aconst_null
      49: goto          57
      52: aload         4
      54: invokestatic  #7                  // Method org/apache/kafka/streams/state/internals/ValueAndTimestampDeserializer.rawValue:([B)[B
      57: invokeinterface #8,  3            // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      62: goto          7
      65: return

  public byte[] delete(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.delete:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class "[B"
      13: invokestatic  #11                 // InterfaceMethod org/apache/kafka/streams/state/TimestampedBytesStore.convertToTimestampedFormat:([B)[B
      16: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #19,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.name:()Ljava/lang/String;
       9: areturn

  public void init(org.apache.kafka.streams.processor.ProcessorContext, org.apache.kafka.streams.processor.StateStore);
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: aload_2
       6: invokeinterface #20,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;Lorg/apache/kafka/streams/processor/StateStore;)V
      11: return

  public void flush();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.flush:()V
       9: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.close:()V
       9: return

  public boolean persistent();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #23,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.isOpen:()Z
       9: ireturn

  public byte[] get(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class "[B"
      13: invokestatic  #11                 // InterfaceMethod org/apache/kafka/streams/state/TimestampedBytesStore.convertToTimestampedFormat:([B)[B
      16: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: new           #25                 // class org/apache/kafka/streams/state/internals/KeyValueToTimestampedKeyValueIteratorAdapter
       3: dup
       4: aload_0
       5: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       8: aload_1
       9: aload_2
      10: invokeinterface #26,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.range:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      15: invokespecial #27                 // Method org/apache/kafka/streams/state/internals/KeyValueToTimestampedKeyValueIteratorAdapter."<init>":(Lorg/apache/kafka/streams/state/KeyValueIterator;)V
      18: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();
    Code:
       0: new           #25                 // class org/apache/kafka/streams/state/internals/KeyValueToTimestampedKeyValueIteratorAdapter
       3: dup
       4: aload_0
       5: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       8: invokeinterface #28,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.all:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      13: invokespecial #27                 // Method org/apache/kafka/streams/state/internals/KeyValueToTimestampedKeyValueIteratorAdapter."<init>":(Lorg/apache/kafka/streams/state/KeyValueIterator;)V
      16: areturn

  public long approximateNumEntries();
    Code:
       0: aload_0
       1: getfield      #6                  // Field store:Lorg/apache/kafka/streams/state/KeyValueStore;
       4: invokeinterface #29,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.approximateNumEntries:()J
       9: lreturn

  public java.lang.Object delete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #31                 // Method delete:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #10                 // class "[B"
       9: invokevirtual #32                 // Method putIfAbsent:(Lorg/apache/kafka/common/utils/Bytes;[B)[B
      12: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #10                 // class "[B"
       9: invokevirtual #33                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      12: return

  public org.apache.kafka.streams.state.KeyValueIterator range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #30                 // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #34                 // Method range:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #30                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #35                 // Method get:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn
}
