Compiled from "StreamsMetrics.java"
public interface org.apache.kafka.streams.StreamsMetrics {
  public abstract java.util.Map<org.apache.kafka.common.MetricName, ? extends org.apache.kafka.common.Metric> metrics();

  public abstract org.apache.kafka.common.metrics.Sensor addLatencyRateTotalSensor(java.lang.String, java.lang.String, java.lang.String, org.apache.kafka.common.metrics.Sensor$RecordingLevel, java.lang.String...);

  public abstract org.apache.kafka.common.metrics.Sensor addRateTotalSensor(java.lang.String, java.lang.String, java.lang.String, org.apache.kafka.common.metrics.Sensor$RecordingLevel, java.lang.String...);

  public abstract org.apache.kafka.common.metrics.Sensor addLatencyAndThroughputSensor(java.lang.String, java.lang.String, java.lang.String, org.apache.kafka.common.metrics.Sensor$RecordingLevel, java.lang.String...);

  public abstract void recordLatency(org.apache.kafka.common.metrics.Sensor, long, long);

  public abstract org.apache.kafka.common.metrics.Sensor addThroughputSensor(java.lang.String, java.lang.String, java.lang.String, org.apache.kafka.common.metrics.Sensor$RecordingLevel, java.lang.String...);

  public abstract void recordThroughput(org.apache.kafka.common.metrics.Sensor, long);

  public abstract org.apache.kafka.common.metrics.Sensor addSensor(java.lang.String, org.apache.kafka.common.metrics.Sensor$RecordingLevel);

  public abstract org.apache.kafka.common.metrics.Sensor addSensor(java.lang.String, org.apache.kafka.common.metrics.Sensor$RecordingLevel, org.apache.kafka.common.metrics.Sensor...);

  public abstract void removeSensor(org.apache.kafka.common.metrics.Sensor);
}
