Compiled from "InternalTopologyBuilder.java"
class org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$SinkNodeFactory<K, V> extends org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$NodeFactory<K, V> {
  private final org.apache.kafka.common.serialization.Serializer<K> keySerializer;

  private final org.apache.kafka.common.serialization.Serializer<V> valSerializer;

  private final org.apache.kafka.streams.processor.StreamPartitioner<? super K, ? super V> partitioner;

  private final org.apache.kafka.streams.processor.TopicNameExtractor<K, V> topicExtractor;

  final org.apache.kafka.streams.processor.internals.InternalTopologyBuilder this$0;

  private org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$SinkNodeFactory(java.lang.String, java.lang.String[], org.apache.kafka.streams.processor.TopicNameExtractor<K, V>, org.apache.kafka.common.serialization.Serializer<K>, org.apache.kafka.common.serialization.Serializer<V>, org.apache.kafka.streams.processor.StreamPartitioner<? super K, ? super V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field this$0:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
       5: aload_0
       6: aload_2
       7: aload_3
       8: invokevirtual #4                  // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
      11: checkcast     #5                  // class "[Ljava/lang/String;"
      14: invokespecial #6                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$NodeFactory."<init>":(Ljava/lang/String;[Ljava/lang/String;)V
      17: aload_0
      18: aload         4
      20: putfield      #1                  // Field topicExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      23: aload_0
      24: aload         5
      26: putfield      #7                  // Field keySerializer:Lorg/apache/kafka/common/serialization/Serializer;
      29: aload_0
      30: aload         6
      32: putfield      #8                  // Field valSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      35: aload_0
      36: aload         7
      38: putfield      #9                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      41: return

  public org.apache.kafka.streams.processor.internals.ProcessorNode<K, V> build();
    Code:
       0: aload_0
       1: getfield      #1                  // Field topicExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
       4: instanceof    #10                 // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
       7: ifeq          104
      10: aload_0
      11: getfield      #1                  // Field topicExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      14: checkcast     #10                 // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
      17: getfield      #11                 // Field org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor.topicName:Ljava/lang/String;
      20: astore_1
      21: aload_0
      22: getfield      #3                  // Field this$0:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      25: invokestatic  #12                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$200:(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)Ljava/util/Map;
      28: aload_1
      29: invokeinterface #13,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      34: ifeq          76
      37: new           #14                 // class org/apache/kafka/streams/processor/internals/SinkNode
      40: dup
      41: aload_0
      42: getfield      #15                 // Field name:Ljava/lang/String;
      45: new           #10                 // class org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor
      48: dup
      49: aload_0
      50: getfield      #3                  // Field this$0:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      53: aload_1
      54: invokestatic  #16                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$300:(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;)Ljava/lang/String;
      57: invokespecial #17                 // Method org/apache/kafka/streams/processor/internals/StaticTopicNameExtractor."<init>":(Ljava/lang/String;)V
      60: aload_0
      61: getfield      #7                  // Field keySerializer:Lorg/apache/kafka/common/serialization/Serializer;
      64: aload_0
      65: getfield      #8                  // Field valSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      68: aload_0
      69: getfield      #9                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
      72: invokespecial #18                 // Method org/apache/kafka/streams/processor/internals/SinkNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      75: areturn
      76: new           #14                 // class org/apache/kafka/streams/processor/internals/SinkNode
      79: dup
      80: aload_0
      81: getfield      #15                 // Field name:Ljava/lang/String;
      84: aload_0
      85: getfield      #1                  // Field topicExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      88: aload_0
      89: getfield      #7                  // Field keySerializer:Lorg/apache/kafka/common/serialization/Serializer;
      92: aload_0
      93: getfield      #8                  // Field valSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      96: aload_0
      97: getfield      #9                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
     100: invokespecial #18                 // Method org/apache/kafka/streams/processor/internals/SinkNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
     103: areturn
     104: new           #14                 // class org/apache/kafka/streams/processor/internals/SinkNode
     107: dup
     108: aload_0
     109: getfield      #15                 // Field name:Ljava/lang/String;
     112: aload_0
     113: getfield      #1                  // Field topicExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
     116: aload_0
     117: getfield      #7                  // Field keySerializer:Lorg/apache/kafka/common/serialization/Serializer;
     120: aload_0
     121: getfield      #8                  // Field valSerializer:Lorg/apache/kafka/common/serialization/Serializer;
     124: aload_0
     125: getfield      #9                  // Field partitioner:Lorg/apache/kafka/streams/processor/StreamPartitioner;
     128: invokespecial #18                 // Method org/apache/kafka/streams/processor/internals/SinkNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
     131: areturn

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$Sink<K, V> describe();
    Code:
       0: new           #19                 // class org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Sink
       3: dup
       4: aload_0
       5: getfield      #15                 // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #1                  // Field topicExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
      12: invokespecial #20                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Sink."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;)V
      15: areturn

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$AbstractNode describe();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method describe:()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Sink;
       4: areturn

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$SinkNodeFactory(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder, java.lang.String, java.lang.String[], org.apache.kafka.streams.processor.TopicNameExtractor, org.apache.kafka.common.serialization.Serializer, org.apache.kafka.common.serialization.Serializer, org.apache.kafka.streams.processor.StreamPartitioner, org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: invokespecial #2                  // Method "<init>":(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;Ljava/lang/String;[Ljava/lang/String;Lorg/apache/kafka/streams/processor/TopicNameExtractor;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/common/serialization/Serializer;Lorg/apache/kafka/streams/processor/StreamPartitioner;)V
      15: return

  static org.apache.kafka.streams.processor.TopicNameExtractor access$1100(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$SinkNodeFactory);
    Code:
       0: aload_0
       1: getfield      #1                  // Field topicExtractor:Lorg/apache/kafka/streams/processor/TopicNameExtractor;
       4: areturn
}
