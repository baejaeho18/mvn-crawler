Compiled from "ConstrainedPrioritySet.java"
class org.apache.kafka.streams.processor.internals.assignment.ConstrainedPrioritySet {
  private final java.util.PriorityQueue<java.util.UUID> clientsByTaskLoad;

  private final java.util.function.BiFunction<java.util.UUID, org.apache.kafka.streams.processor.TaskId, java.lang.Boolean> constraint;

  private final java.util.Set<java.util.UUID> uniqueClients;

  org.apache.kafka.streams.processor.internals.assignment.ConstrainedPrioritySet(java.util.function.BiFunction<java.util.UUID, org.apache.kafka.streams.processor.TaskId, java.lang.Boolean>, java.util.function.Function<java.util.UUID, java.lang.Double>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field uniqueClients:Ljava/util/Set;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field constraint:Ljava/util/function/BiFunction;
      20: aload_0
      21: new           #6                  // class java/util/PriorityQueue
      24: dup
      25: aload_2
      26: invokestatic  #7                  // InterfaceMethod java/util/Comparator.comparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      29: invokedynamic #8,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      34: invokeinterface #9,  2            // InterfaceMethod java/util/Comparator.thenComparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      39: invokespecial #10                 // Method java/util/PriorityQueue."<init>":(Ljava/util/Comparator;)V
      42: putfield      #11                 // Field clientsByTaskLoad:Ljava/util/PriorityQueue;
      45: return

  java.util.UUID poll(org.apache.kafka.streams.processor.TaskId, java.util.function.Function<java.util.UUID, java.lang.Boolean>);
    Code:
       0: new           #2                  // class java/util/HashSet
       3: dup
       4: invokespecial #3                  // Method java/util/HashSet."<init>":()V
       7: astore_3
       8: aload_0
       9: getfield      #11                 // Field clientsByTaskLoad:Ljava/util/PriorityQueue;
      12: invokevirtual #12                 // Method java/util/PriorityQueue.isEmpty:()Z
      15: ifne          82
      18: aload_0
      19: invokespecial #13                 // Method pollNextClient:()Ljava/util/UUID;
      22: astore        4
      24: aload_0
      25: getfield      #5                  // Field constraint:Ljava/util/function/BiFunction;
      28: aload         4
      30: aload_1
      31: invokeinterface #14,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #15                 // class java/lang/Boolean
      39: invokevirtual #16                 // Method java/lang/Boolean.booleanValue:()Z
      42: ifeq          70
      45: aload_2
      46: aload         4
      48: invokeinterface #17,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #15                 // class java/lang/Boolean
      56: invokevirtual #16                 // Method java/lang/Boolean.booleanValue:()Z
      59: ifeq          70
      62: aload_0
      63: aload_3
      64: invokevirtual #18                 // Method offerAll:(Ljava/util/Collection;)V
      67: aload         4
      69: areturn
      70: aload_3
      71: aload         4
      73: invokeinterface #19,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      78: pop
      79: goto          8
      82: aload_0
      83: aload_3
      84: invokevirtual #18                 // Method offerAll:(Ljava/util/Collection;)V
      87: aconst_null
      88: areturn

  java.util.UUID poll(org.apache.kafka.streams.processor.TaskId);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #20,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       7: invokevirtual #21                 // Method poll:(Lorg/apache/kafka/streams/processor/TaskId;Ljava/util/function/Function;)Ljava/util/UUID;
      10: areturn

  void offerAll(java.util.Collection<java.util.UUID>);
    Code:
       0: aload_1
       1: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #25                 // class java/util/UUID
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokevirtual #26                 // Method offer:(Ljava/util/UUID;)V
      31: goto          7
      34: return

  void offer(java.util.UUID);
    Code:
       0: aload_0
       1: getfield      #4                  // Field uniqueClients:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ifeq          25
      13: aload_0
      14: getfield      #11                 // Field clientsByTaskLoad:Ljava/util/PriorityQueue;
      17: aload_1
      18: invokevirtual #28                 // Method java/util/PriorityQueue.remove:(Ljava/lang/Object;)Z
      21: pop
      22: goto          36
      25: aload_0
      26: getfield      #4                  // Field uniqueClients:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #19,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: getfield      #11                 // Field clientsByTaskLoad:Ljava/util/PriorityQueue;
      40: aload_1
      41: invokevirtual #29                 // Method java/util/PriorityQueue.offer:(Ljava/lang/Object;)Z
      44: pop
      45: return

  private java.util.UUID pollNextClient();
    Code:
       0: aload_0
       1: getfield      #11                 // Field clientsByTaskLoad:Ljava/util/PriorityQueue;
       4: invokevirtual #30                 // Method java/util/PriorityQueue.remove:()Ljava/lang/Object;
       7: checkcast     #25                 // class java/util/UUID
      10: astore_1
      11: aload_0
      12: getfield      #4                  // Field uniqueClients:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #31,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: areturn

  private static java.lang.Boolean lambda$poll$1(java.util.UUID);
    Code:
       0: iconst_1
       1: invokestatic  #32                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       4: areturn

  private static java.util.UUID lambda$new$0(java.util.UUID);
    Code:
       0: aload_0
       1: areturn
}
