Compiled from "InternalTopologyBuilder.java"
class org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$ProcessorNodeFactory<K, V> extends org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$NodeFactory<K, V> {
  private final org.apache.kafka.streams.processor.ProcessorSupplier<K, V> supplier;

  private final java.util.Set<java.lang.String> stateStoreNames;

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$ProcessorNodeFactory(java.lang.String, java.lang.String[], org.apache.kafka.streams.processor.ProcessorSupplier<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #2                  // Method "[Ljava/lang/String;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Ljava/lang/String;"
       9: invokespecial #4                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$NodeFactory."<init>":(Ljava/lang/String;[Ljava/lang/String;)V
      12: aload_0
      13: new           #5                  // class java/util/HashSet
      16: dup
      17: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      20: putfield      #1                  // Field stateStoreNames:Ljava/util/Set;
      23: aload_0
      24: aload_3
      25: putfield      #7                  // Field supplier:Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      28: return

  public void addStateStore(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field stateStoreNames:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.apache.kafka.streams.processor.internals.ProcessorNode<K, V> build();
    Code:
       0: new           #9                  // class org/apache/kafka/streams/processor/internals/ProcessorNode
       3: dup
       4: aload_0
       5: getfield      #10                 // Field name:Ljava/lang/String;
       8: aload_0
       9: getfield      #7                  // Field supplier:Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      12: invokeinterface #11,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorSupplier.get:()Lorg/apache/kafka/streams/processor/Processor;
      17: aload_0
      18: getfield      #1                  // Field stateStoreNames:Ljava/util/Set;
      21: invokespecial #12                 // Method org/apache/kafka/streams/processor/internals/ProcessorNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/processor/Processor;Ljava/util/Set;)V
      24: areturn

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$Processor describe();
    Code:
       0: new           #13                 // class org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Processor
       3: dup
       4: aload_0
       5: getfield      #10                 // Field name:Ljava/lang/String;
       8: new           #5                  // class java/util/HashSet
      11: dup
      12: aload_0
      13: getfield      #1                  // Field stateStoreNames:Ljava/util/Set;
      16: invokespecial #14                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      19: invokespecial #15                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Processor."<init>":(Ljava/lang/String;Ljava/util/Set;)V
      22: areturn

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$AbstractNode describe();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method describe:()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$Processor;
       4: areturn

  static java.util.Set access$1200(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$ProcessorNodeFactory);
    Code:
       0: aload_0
       1: getfield      #1                  // Field stateStoreNames:Ljava/util/Set;
       4: areturn
}
