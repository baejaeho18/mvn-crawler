Compiled from "InMemoryWindowStore.java"
public class org.apache.kafka.streams.state.internals.InMemoryWindowStore implements org.apache.kafka.streams.state.WindowStore<org.apache.kafka.common.utils.Bytes, byte[]> {
  private static final org.slf4j.Logger LOG;

  private static final int SEQNUM_SIZE;

  private final java.lang.String name;

  private final java.lang.String metricScope;

  private org.apache.kafka.streams.processor.internals.InternalProcessorContext context;

  private org.apache.kafka.common.metrics.Sensor expiredRecordSensor;

  private int seqnum;

  private long observedStreamTime;

  private final long retentionPeriod;

  private final long windowSize;

  private final boolean retainDuplicates;

  private final java.util.concurrent.ConcurrentNavigableMap<java.lang.Long, java.util.concurrent.ConcurrentNavigableMap<org.apache.kafka.common.utils.Bytes, byte[]>> segmentMap;

  private final java.util.Set<org.apache.kafka.streams.state.internals.InMemoryWindowStore$InMemoryWindowStoreIteratorWrapper> openIterators;

  private volatile boolean open;

  org.apache.kafka.streams.state.internals.InMemoryWindowStore(java.lang.String, long, long, boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field seqnum:I
       9: aload_0
      10: ldc2_w        #6                  // long -1l
      13: putfield      #8                  // Field observedStreamTime:J
      16: aload_0
      17: new           #9                  // class java/util/concurrent/ConcurrentSkipListMap
      20: dup
      21: invokespecial #10                 // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
      24: putfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      27: aload_0
      28: invokestatic  #12                 // Method java/util/concurrent/ConcurrentHashMap.newKeySet:()Ljava/util/concurrent/ConcurrentHashMap$KeySetView;
      31: putfield      #13                 // Field openIterators:Ljava/util/Set;
      34: aload_0
      35: iconst_0
      36: putfield      #14                 // Field open:Z
      39: aload_0
      40: aload_1
      41: putfield      #15                 // Field name:Ljava/lang/String;
      44: aload_0
      45: lload_2
      46: putfield      #16                 // Field retentionPeriod:J
      49: aload_0
      50: lload         4
      52: putfield      #17                 // Field windowSize:J
      55: aload_0
      56: iload         6
      58: putfield      #18                 // Field retainDuplicates:Z
      61: aload_0
      62: aload         7
      64: putfield      #19                 // Field metricScope:Ljava/lang/String;
      67: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #15                 // Field name:Ljava/lang/String;
       4: areturn

  public void init(org.apache.kafka.streams.processor.ProcessorContext, org.apache.kafka.streams.processor.StateStore);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class org/apache/kafka/streams/processor/internals/InternalProcessorContext
       5: putfield      #21                 // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
       8: aload_0
       9: getfield      #21                 // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
      12: invokeinterface #22,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.metrics:()Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      17: astore_3
      18: invokestatic  #23                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      21: invokevirtual #24                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      24: astore        4
      26: aload_1
      27: invokeinterface #25,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.taskId:()Lorg/apache/kafka/streams/processor/TaskId;
      32: invokevirtual #26                 // Method org/apache/kafka/streams/processor/TaskId.toString:()Ljava/lang/String;
      35: astore        5
      37: aload_0
      38: aload         4
      40: aload         5
      42: aload_0
      43: getfield      #19                 // Field metricScope:Ljava/lang/String;
      46: aload_0
      47: getfield      #15                 // Field name:Ljava/lang/String;
      50: aload_3
      51: invokestatic  #27                 // Method org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.droppedRecordsSensorOrExpiredWindowRecordDropSensor:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;)Lorg/apache/kafka/common/metrics/Sensor;
      54: putfield      #28                 // Field expiredRecordSensor:Lorg/apache/kafka/common/metrics/Sensor;
      57: aload_2
      58: ifnull        74
      61: aload_1
      62: aload_2
      63: aload_0
      64: invokedynamic #29,  0             // InvokeDynamic #0:restore:(Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore;)Lorg/apache/kafka/streams/processor/StateRestoreCallback;
      69: invokeinterface #30,  3           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.register:(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
      74: aload_0
      75: iconst_1
      76: putfield      #14                 // Field open:Z
      79: return

  public void put(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #21                 // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
       7: invokeinterface #31,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.timestamp:()J
      12: invokevirtual #32                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[BJ)V
      15: return

  public void put(org.apache.kafka.common.utils.Bytes, byte[], long);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method removeExpiredSegments:()V
       4: aload_0
       5: aload_0
       6: getfield      #8                  // Field observedStreamTime:J
       9: lload_3
      10: invokestatic  #34                 // Method java/lang/Math.max:(JJ)J
      13: putfield      #8                  // Field observedStreamTime:J
      16: lload_3
      17: aload_0
      18: getfield      #8                  // Field observedStreamTime:J
      21: aload_0
      22: getfield      #16                 // Field retentionPeriod:J
      25: lsub
      26: lcmp
      27: ifgt          60
      30: aload_0
      31: getfield      #28                 // Field expiredRecordSensor:Lorg/apache/kafka/common/metrics/Sensor;
      34: dconst_1
      35: aload_0
      36: getfield      #21                 // Field context:Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;
      39: invokeinterface #35,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.currentSystemTimeMs:()J
      44: invokevirtual #36                 // Method org/apache/kafka/common/metrics/Sensor.record:(DJ)V
      47: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      50: ldc           #37                 // String Skipping record for expired segment.
      52: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      57: goto          165
      60: aload_2
      61: ifnull        136
      64: aload_0
      65: invokespecial #39                 // Method maybeUpdateSeqnumForDups:()V
      68: aload_0
      69: getfield      #18                 // Field retainDuplicates:Z
      72: ifeq          86
      75: aload_1
      76: aload_0
      77: getfield      #4                  // Field seqnum:I
      80: invokestatic  #40                 // Method wrapForDups:(Lorg/apache/kafka/common/utils/Bytes;I)Lorg/apache/kafka/common/utils/Bytes;
      83: goto          87
      86: aload_1
      87: astore        5
      89: aload_0
      90: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      93: lload_3
      94: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      97: invokedynamic #42,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
     102: invokeinterface #43,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     107: pop
     108: aload_0
     109: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
     112: lload_3
     113: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     116: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     121: checkcast     #45                 // class java/util/concurrent/ConcurrentNavigableMap
     124: aload         5
     126: aload_2
     127: invokeinterface #46,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: goto          165
     136: aload_0
     137: getfield      #18                 // Field retainDuplicates:Z
     140: ifne          165
     143: aload_0
     144: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
     147: lload_3
     148: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     151: aload_0
     152: aload_1
     153: lload_3
     154: invokedynamic #47,  0             // InvokeDynamic #2:apply:(Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore;Lorg/apache/kafka/common/utils/Bytes;J)Ljava/util/function/BiFunction;
     159: invokeinterface #48,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.computeIfPresent:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;
     164: pop
     165: return

  public byte[] fetch(org.apache.kafka.common.utils.Bytes, long);
    Code:
       0: aload_1
       1: ldc           #49                 // String key cannot be null
       3: invokestatic  #50                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokespecial #33                 // Method removeExpiredSegments:()V
      11: lload_2
      12: aload_0
      13: getfield      #8                  // Field observedStreamTime:J
      16: aload_0
      17: getfield      #16                 // Field retentionPeriod:J
      20: lsub
      21: lcmp
      22: ifgt          27
      25: aconst_null
      26: areturn
      27: aload_0
      28: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      31: lload_2
      32: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      40: checkcast     #45                 // class java/util/concurrent/ConcurrentNavigableMap
      43: astore        4
      45: aload         4
      47: ifnonnull     52
      50: aconst_null
      51: areturn
      52: aload         4
      54: aload_1
      55: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #51                 // class "[B"
      63: areturn

  public org.apache.kafka.streams.state.WindowStoreIterator<byte[]> fetch(org.apache.kafka.common.utils.Bytes, long, long);
    Code:
       0: aload_1
       1: ldc           #49                 // String key cannot be null
       3: invokestatic  #50                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokespecial #33                 // Method removeExpiredSegments:()V
      11: lload_2
      12: aload_0
      13: getfield      #8                  // Field observedStreamTime:J
      16: aload_0
      17: getfield      #16                 // Field retentionPeriod:J
      20: lsub
      21: lconst_1
      22: ladd
      23: invokestatic  #34                 // Method java/lang/Math.max:(JJ)J
      26: lstore        6
      28: lload         4
      30: lload         6
      32: lcmp
      33: ifge          40
      36: invokestatic  #52                 // Method org/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedInMemoryWindowStoreIterator.emptyIterator:()Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedInMemoryWindowStoreIterator;
      39: areturn
      40: aload_0
      41: aload_1
      42: aload_0
      43: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      46: lload         6
      48: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      51: iconst_1
      52: lload         4
      54: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      57: iconst_1
      58: invokeinterface #53,  5           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      63: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      68: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      73: invokespecial #56                 // Method registerNewWindowStoreIterator:(Lorg/apache/kafka/common/utils/Bytes;Ljava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedInMemoryWindowStoreIterator;
      76: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> fetch(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes, long, long);
    Code:
       0: aload_1
       1: ldc           #57                 // String from key cannot be null
       3: invokestatic  #50                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #58                 // String to key cannot be null
      10: invokestatic  #50                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: invokespecial #33                 // Method removeExpiredSegments:()V
      18: aload_1
      19: aload_2
      20: invokevirtual #59                 // Method org/apache/kafka/common/utils/Bytes.compareTo:(Lorg/apache/kafka/common/utils/Bytes;)I
      23: ifle          40
      26: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      29: ldc           #60                 // String Returning empty iterator for fetch with invalid key range: from > to. This may be due to serdes that don\'t preserve ordering when lexicographically comparing the serialized bytes. Note that the built-in numerical serdes do not follow this for negative numbers
      31: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      36: invokestatic  #61                 // Method org/apache/kafka/streams/state/internals/KeyValueIterators.emptyIterator:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      39: areturn
      40: lload_3
      41: aload_0
      42: getfield      #8                  // Field observedStreamTime:J
      45: aload_0
      46: getfield      #16                 // Field retentionPeriod:J
      49: lsub
      50: lconst_1
      51: ladd
      52: invokestatic  #34                 // Method java/lang/Math.max:(JJ)J
      55: lstore        7
      57: lload         5
      59: lload         7
      61: lcmp
      62: ifge          69
      65: invokestatic  #61                 // Method org/apache/kafka/streams/state/internals/KeyValueIterators.emptyIterator:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      68: areturn
      69: aload_0
      70: aload_1
      71: aload_2
      72: aload_0
      73: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      76: lload         7
      78: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      81: iconst_1
      82: lload         5
      84: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      87: iconst_1
      88: invokeinterface #53,  5           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      93: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      98: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     103: invokespecial #62                 // Method registerNewWindowedKeyValueIterator:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;Ljava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedWindowedKeyValueIterator;
     106: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> fetchAll(long, long);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method removeExpiredSegments:()V
       4: lload_1
       5: aload_0
       6: getfield      #8                  // Field observedStreamTime:J
       9: aload_0
      10: getfield      #16                 // Field retentionPeriod:J
      13: lsub
      14: lconst_1
      15: ladd
      16: invokestatic  #34                 // Method java/lang/Math.max:(JJ)J
      19: lstore        5
      21: lload_3
      22: lload         5
      24: lcmp
      25: ifge          32
      28: invokestatic  #61                 // Method org/apache/kafka/streams/state/internals/KeyValueIterators.emptyIterator:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      31: areturn
      32: aload_0
      33: aconst_null
      34: aconst_null
      35: aload_0
      36: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      39: lload         5
      41: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      44: iconst_1
      45: lload_3
      46: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      49: iconst_1
      50: invokeinterface #53,  5           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      55: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      60: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      65: invokespecial #62                 // Method registerNewWindowedKeyValueIterator:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;Ljava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedWindowedKeyValueIterator;
      68: areturn

  public org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> all();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method removeExpiredSegments:()V
       4: aload_0
       5: getfield      #8                  // Field observedStreamTime:J
       8: aload_0
       9: getfield      #16                 // Field retentionPeriod:J
      12: lsub
      13: lstore_1
      14: aload_0
      15: aconst_null
      16: aconst_null
      17: aload_0
      18: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      21: lload_1
      22: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      25: iconst_0
      26: invokeinterface #63,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.tailMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      31: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.entrySet:()Ljava/util/Set;
      36: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      41: invokespecial #62                 // Method registerNewWindowedKeyValueIterator:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;Ljava/util/Iterator;)Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedWindowedKeyValueIterator;
      44: areturn

  public boolean persistent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #14                 // Field open:Z
       4: ireturn

  public void flush();
    Code:
       0: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #13                 // Field openIterators:Ljava/util/Set;
       4: invokeinterface #64,  1           // InterfaceMethod java/util/Set.size:()I
       9: ifeq          74
      12: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #65                 // String Closing {} open iterators for store {}
      17: aload_0
      18: getfield      #13                 // Field openIterators:Ljava/util/Set;
      21: invokeinterface #64,  1           // InterfaceMethod java/util/Set.size:()I
      26: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aload_0
      30: getfield      #15                 // Field name:Ljava/lang/String;
      33: invokeinterface #67,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: aload_0
      39: getfield      #13                 // Field openIterators:Ljava/util/Set;
      42: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      47: astore_1
      48: aload_1
      49: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      54: ifeq          74
      57: aload_1
      58: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #70                 // class org/apache/kafka/streams/state/internals/InMemoryWindowStore$InMemoryWindowStoreIteratorWrapper
      66: astore_2
      67: aload_2
      68: invokevirtual #71                 // Method org/apache/kafka/streams/state/internals/InMemoryWindowStore$InMemoryWindowStoreIteratorWrapper.close:()V
      71: goto          48
      74: aload_0
      75: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      78: invokeinterface #72,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.clear:()V
      83: aload_0
      84: iconst_0
      85: putfield      #14                 // Field open:Z
      88: return

  private void removeExpiredSegments();
    Code:
       0: lconst_0
       1: aload_0
       2: getfield      #8                  // Field observedStreamTime:J
       5: aload_0
       6: getfield      #16                 // Field retentionPeriod:J
       9: lsub
      10: lconst_1
      11: ladd
      12: invokestatic  #34                 // Method java/lang/Math.max:(JJ)J
      15: lstore_1
      16: aload_0
      17: getfield      #13                 // Field openIterators:Ljava/util/Set;
      20: invokeinterface #55,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore_3
      26: aload_3
      27: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          62
      35: aload_3
      36: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #70                 // class org/apache/kafka/streams/state/internals/InMemoryWindowStore$InMemoryWindowStoreIteratorWrapper
      44: astore        4
      46: lload_1
      47: aload         4
      49: invokevirtual #73                 // Method org/apache/kafka/streams/state/internals/InMemoryWindowStore$InMemoryWindowStoreIteratorWrapper.minTime:()Ljava/lang/Long;
      52: invokevirtual #74                 // Method java/lang/Long.longValue:()J
      55: invokestatic  #75                 // Method java/lang/Math.min:(JJ)J
      58: lstore_1
      59: goto          26
      62: aload_0
      63: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      66: lload_1
      67: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      70: iconst_0
      71: invokeinterface #76,  3           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.headMap:(Ljava/lang/Object;Z)Ljava/util/concurrent/ConcurrentNavigableMap;
      76: invokeinterface #72,  1           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.clear:()V
      81: return

  private void maybeUpdateSeqnumForDups();
    Code:
       0: aload_0
       1: getfield      #18                 // Field retainDuplicates:Z
       4: ifeq          20
       7: aload_0
       8: aload_0
       9: getfield      #4                  // Field seqnum:I
      12: iconst_1
      13: iadd
      14: ldc           #77                 // int 2147483647
      16: iand
      17: putfield      #4                  // Field seqnum:I
      20: return

  private static org.apache.kafka.common.utils.Bytes wrapForDups(org.apache.kafka.common.utils.Bytes, int);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
       4: arraylength
       5: iconst_4
       6: iadd
       7: invokestatic  #80                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: astore_2
      11: aload_2
      12: aload_0
      13: invokevirtual #78                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      16: invokevirtual #81                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      19: pop
      20: aload_2
      21: iload_1
      22: invokevirtual #82                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      25: pop
      26: aload_2
      27: invokevirtual #83                 // Method java/nio/ByteBuffer.array:()[B
      30: invokestatic  #84                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
      33: areturn

  private static org.apache.kafka.common.utils.Bytes getKey(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
       4: arraylength
       5: iconst_4
       6: isub
       7: newarray       byte
       9: astore_1
      10: aload_0
      11: invokevirtual #78                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      14: iconst_0
      15: aload_1
      16: iconst_0
      17: aload_1
      18: arraylength
      19: invokestatic  #85                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      22: aload_1
      23: invokestatic  #84                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
      26: areturn

  private org.apache.kafka.streams.state.internals.InMemoryWindowStore$WrappedInMemoryWindowStoreIterator registerNewWindowStoreIterator(org.apache.kafka.common.utils.Bytes, java.util.Iterator<java.util.Map$Entry<java.lang.Long, java.util.concurrent.ConcurrentNavigableMap<org.apache.kafka.common.utils.Bytes, byte[]>>>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field retainDuplicates:Z
       4: ifeq          15
       7: aload_1
       8: iconst_0
       9: invokestatic  #40                 // Method wrapForDups:(Lorg/apache/kafka/common/utils/Bytes;I)Lorg/apache/kafka/common/utils/Bytes;
      12: goto          16
      15: aload_1
      16: astore_3
      17: aload_0
      18: getfield      #18                 // Field retainDuplicates:Z
      21: ifeq          33
      24: aload_1
      25: ldc           #77                 // int 2147483647
      27: invokestatic  #40                 // Method wrapForDups:(Lorg/apache/kafka/common/utils/Bytes;I)Lorg/apache/kafka/common/utils/Bytes;
      30: goto          34
      33: aload_1
      34: astore        4
      36: new           #87                 // class org/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedInMemoryWindowStoreIterator
      39: dup
      40: aload_3
      41: aload         4
      43: aload_2
      44: aload_0
      45: getfield      #13                 // Field openIterators:Ljava/util/Set;
      48: dup
      49: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      52: pop
      53: invokedynamic #89,  0             // InvokeDynamic #3:deregisterIterator:(Ljava/util/Set;)Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$ClosingCallback;
      58: aload_0
      59: getfield      #18                 // Field retainDuplicates:Z
      62: invokespecial #90                 // Method org/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedInMemoryWindowStoreIterator."<init>":(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;Ljava/util/Iterator;Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$ClosingCallback;Z)V
      65: astore        5
      67: aload_0
      68: getfield      #13                 // Field openIterators:Ljava/util/Set;
      71: aload         5
      73: invokeinterface #91,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      78: pop
      79: aload         5
      81: areturn

  private org.apache.kafka.streams.state.internals.InMemoryWindowStore$WrappedWindowedKeyValueIterator registerNewWindowedKeyValueIterator(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes, java.util.Iterator<java.util.Map$Entry<java.lang.Long, java.util.concurrent.ConcurrentNavigableMap<org.apache.kafka.common.utils.Bytes, byte[]>>>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field retainDuplicates:Z
       4: ifeq          19
       7: aload_1
       8: ifnull        19
      11: aload_1
      12: iconst_0
      13: invokestatic  #40                 // Method wrapForDups:(Lorg/apache/kafka/common/utils/Bytes;I)Lorg/apache/kafka/common/utils/Bytes;
      16: goto          20
      19: aload_1
      20: astore        4
      22: aload_0
      23: getfield      #18                 // Field retainDuplicates:Z
      26: ifeq          42
      29: aload_2
      30: ifnull        42
      33: aload_2
      34: ldc           #77                 // int 2147483647
      36: invokestatic  #40                 // Method wrapForDups:(Lorg/apache/kafka/common/utils/Bytes;I)Lorg/apache/kafka/common/utils/Bytes;
      39: goto          43
      42: aload_2
      43: astore        5
      45: new           #92                 // class org/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedWindowedKeyValueIterator
      48: dup
      49: aload         4
      51: aload         5
      53: aload_3
      54: aload_0
      55: getfield      #13                 // Field openIterators:Ljava/util/Set;
      58: dup
      59: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: pop
      63: invokedynamic #89,  0             // InvokeDynamic #3:deregisterIterator:(Ljava/util/Set;)Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$ClosingCallback;
      68: aload_0
      69: getfield      #18                 // Field retainDuplicates:Z
      72: aload_0
      73: getfield      #17                 // Field windowSize:J
      76: invokespecial #93                 // Method org/apache/kafka/streams/state/internals/InMemoryWindowStore$WrappedWindowedKeyValueIterator."<init>":(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;Ljava/util/Iterator;Lorg/apache/kafka/streams/state/internals/InMemoryWindowStore$ClosingCallback;ZJ)V
      79: astore        6
      81: aload_0
      82: getfield      #13                 // Field openIterators:Ljava/util/Set;
      85: aload         6
      87: invokeinterface #91,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      92: pop
      93: aload         6
      95: areturn

  public org.apache.kafka.streams.state.KeyValueIterator fetch(java.lang.Object, java.lang.Object, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #94                 // class org/apache/kafka/common/utils/Bytes
       9: lload_3
      10: lload         5
      12: invokevirtual #95                 // Method fetch:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/KeyValueIterator;
      15: areturn

  public org.apache.kafka.streams.state.WindowStoreIterator fetch(java.lang.Object, long, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/kafka/common/utils/Bytes
       5: lload_2
       6: lload         4
       8: invokevirtual #96                 // Method fetch:(Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/WindowStoreIterator;
      11: areturn

  public void put(java.lang.Object, java.lang.Object, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #51                 // class "[B"
       9: lload_3
      10: invokevirtual #32                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[BJ)V
      13: return

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #51                 // class "[B"
       9: invokevirtual #97                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      12: return

  public java.lang.Object fetch(java.lang.Object, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #94                 // class org/apache/kafka/common/utils/Bytes
       5: lload_2
       6: invokevirtual #98                 // Method fetch:(Lorg/apache/kafka/common/utils/Bytes;J)[B
       9: areturn

  private java.util.concurrent.ConcurrentNavigableMap lambda$put$2(org.apache.kafka.common.utils.Bytes, long, java.lang.Long, java.util.concurrent.ConcurrentNavigableMap);
    Code:
       0: aload         5
       2: aload_1
       3: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload         5
      11: invokeinterface #100,  1          // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.isEmpty:()Z
      16: ifeq          33
      19: aload_0
      20: getfield      #11                 // Field segmentMap:Ljava/util/concurrent/ConcurrentNavigableMap;
      23: lload_2
      24: invokestatic  #41                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      27: invokeinterface #99,  2           // InterfaceMethod java/util/concurrent/ConcurrentNavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      32: pop
      33: aload         5
      35: areturn

  private static java.util.concurrent.ConcurrentNavigableMap lambda$put$1(java.lang.Long);
    Code:
       0: new           #9                  // class java/util/concurrent/ConcurrentSkipListMap
       3: dup
       4: invokespecial #10                 // Method java/util/concurrent/ConcurrentSkipListMap."<init>":()V
       7: areturn

  private void lambda$init$0(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #101                // Method org/apache/kafka/streams/state/internals/WindowKeySchema.extractStoreKeyBytes:([B)[B
       5: invokestatic  #84                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
       8: aload_2
       9: aload_1
      10: invokestatic  #102                // Method org/apache/kafka/streams/state/internals/WindowKeySchema.extractStoreTimestamp:([B)J
      13: invokevirtual #32                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[BJ)V
      16: return

  static org.apache.kafka.common.utils.Bytes access$000(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method getKey:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/common/utils/Bytes;
       4: areturn

  static org.slf4j.Logger access$400();
    Code:
       0: getstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #79                 // class org/apache/kafka/streams/state/internals/InMemoryWindowStore
       2: invokestatic  #103                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field LOG:Lorg/slf4j/Logger;
       8: return
}
