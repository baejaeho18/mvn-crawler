Compiled from "ReadOnlyWindowStoreFacade.java"
class org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade$WindowStoreIteratorFacade<V> implements org.apache.kafka.streams.state.WindowStoreIterator<V> {
  final org.apache.kafka.streams.state.KeyValueIterator<java.lang.Long, org.apache.kafka.streams.state.ValueAndTimestamp<V>> innerIterator;

  org.apache.kafka.streams.state.internals.ReadOnlyWindowStoreFacade$WindowStoreIteratorFacade(org.apache.kafka.streams.state.KeyValueIterator<java.lang.Long, org.apache.kafka.streams.state.ValueAndTimestamp<V>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field innerIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       9: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #3,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.close:()V
       9: return

  public java.lang.Long peekNextKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #4,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.peekNextKey:()Ljava/lang/Object;
       9: checkcast     #5                  // class java/lang/Long
      12: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #6,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.hasNext:()Z
       9: ireturn

  public org.apache.kafka.streams.KeyValue<java.lang.Long, V> next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field innerIterator:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #7,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.next:()Ljava/lang/Object;
       9: checkcast     #8                  // class org/apache/kafka/streams/KeyValue
      12: astore_1
      13: aload_1
      14: getfield      #9                  // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      17: aload_1
      18: getfield      #10                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      21: checkcast     #11                 // class org/apache/kafka/streams/state/ValueAndTimestamp
      24: invokestatic  #12                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.getValueOrNull:(Lorg/apache/kafka/streams/state/ValueAndTimestamp;)Ljava/lang/Object;
      27: invokestatic  #13                 // Method org/apache/kafka/streams/KeyValue.pair:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
      30: areturn

  public java.lang.Object peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method peekNextKey:()Ljava/lang/Long;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method next:()Lorg/apache/kafka/streams/KeyValue;
       4: areturn
}
