Compiled from "KGroupedStream.java"
public interface org.apache.kafka.streams.kstream.KGroupedStream<K, V> {
  public abstract org.apache.kafka.streams.kstream.KTable<K, java.lang.Long> count();

  public abstract org.apache.kafka.streams.kstream.KTable<K, java.lang.Long> count(org.apache.kafka.streams.kstream.Named);

  public abstract org.apache.kafka.streams.kstream.KTable<K, java.lang.Long> count(org.apache.kafka.streams.kstream.Materialized<K, java.lang.Long, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract org.apache.kafka.streams.kstream.KTable<K, java.lang.Long> count(org.apache.kafka.streams.kstream.Named, org.apache.kafka.streams.kstream.Materialized<K, java.lang.Long, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract org.apache.kafka.streams.kstream.KTable<K, V> reduce(org.apache.kafka.streams.kstream.Reducer<V>);

  public abstract org.apache.kafka.streams.kstream.KTable<K, V> reduce(org.apache.kafka.streams.kstream.Reducer<V>, org.apache.kafka.streams.kstream.Materialized<K, V, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract org.apache.kafka.streams.kstream.KTable<K, V> reduce(org.apache.kafka.streams.kstream.Reducer<V>, org.apache.kafka.streams.kstream.Named, org.apache.kafka.streams.kstream.Materialized<K, V, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract <VR> org.apache.kafka.streams.kstream.KTable<K, VR> aggregate(org.apache.kafka.streams.kstream.Initializer<VR>, org.apache.kafka.streams.kstream.Aggregator<? super K, ? super V, VR>);

  public abstract <VR> org.apache.kafka.streams.kstream.KTable<K, VR> aggregate(org.apache.kafka.streams.kstream.Initializer<VR>, org.apache.kafka.streams.kstream.Aggregator<? super K, ? super V, VR>, org.apache.kafka.streams.kstream.Materialized<K, VR, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract <VR> org.apache.kafka.streams.kstream.KTable<K, VR> aggregate(org.apache.kafka.streams.kstream.Initializer<VR>, org.apache.kafka.streams.kstream.Aggregator<? super K, ? super V, VR>, org.apache.kafka.streams.kstream.Named, org.apache.kafka.streams.kstream.Materialized<K, VR, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);

  public abstract <W extends org.apache.kafka.streams.kstream.Window> org.apache.kafka.streams.kstream.TimeWindowedKStream<K, V> windowedBy(org.apache.kafka.streams.kstream.Windows<W>);

  public abstract org.apache.kafka.streams.kstream.SessionWindowedKStream<K, V> windowedBy(org.apache.kafka.streams.kstream.SessionWindows);

  public abstract <Vout> org.apache.kafka.streams.kstream.CogroupedKStream<K, Vout> cogroup(org.apache.kafka.streams.kstream.Aggregator<? super K, ? super V, Vout>);
}
