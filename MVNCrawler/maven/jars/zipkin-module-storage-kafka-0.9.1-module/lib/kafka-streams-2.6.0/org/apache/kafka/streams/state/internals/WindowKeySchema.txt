Compiled from "WindowKeySchema.java"
public class org.apache.kafka.streams.state.internals.WindowKeySchema implements org.apache.kafka.streams.state.internals.SegmentedBytesStore$KeySchema {
  private static final org.slf4j.Logger LOG;

  private static final int SEQNUM_SIZE;

  private static final int TIMESTAMP_SIZE;

  private static final int SUFFIX_SIZE;

  private static final byte[] MIN_SUFFIX;

  public org.apache.kafka.streams.state.internals.WindowKeySchema();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.kafka.common.utils.Bytes upperRange(org.apache.kafka.common.utils.Bytes, long);
    Code:
       0: bipush        12
       2: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: lload_2
       6: invokevirtual #4                  // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
       9: ldc           #6                  // int 2147483647
      11: invokevirtual #7                  // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      14: invokevirtual #8                  // Method java/nio/ByteBuffer.array:()[B
      17: astore        4
      19: aload_1
      20: aload         4
      22: invokestatic  #9                  // Method org/apache/kafka/streams/state/internals/OrderedBytes.upperRange:(Lorg/apache/kafka/common/utils/Bytes;[B)Lorg/apache/kafka/common/utils/Bytes;
      25: areturn

  public org.apache.kafka.common.utils.Bytes lowerRange(org.apache.kafka.common.utils.Bytes, long);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field MIN_SUFFIX:[B
       4: invokestatic  #11                 // Method org/apache/kafka/streams/state/internals/OrderedBytes.lowerRange:(Lorg/apache/kafka/common/utils/Bytes;[B)Lorg/apache/kafka/common/utils/Bytes;
       7: areturn

  public org.apache.kafka.common.utils.Bytes lowerRangeFixedSize(org.apache.kafka.common.utils.Bytes, long);
    Code:
       0: aload_1
       1: lconst_0
       2: lload_2
       3: invokestatic  #12                 // Method java/lang/Math.max:(JJ)J
       6: iconst_0
       7: invokestatic  #13                 // Method toStoreKeyBinary:(Lorg/apache/kafka/common/utils/Bytes;JI)Lorg/apache/kafka/common/utils/Bytes;
      10: areturn

  public org.apache.kafka.common.utils.Bytes upperRangeFixedSize(org.apache.kafka.common.utils.Bytes, long);
    Code:
       0: aload_1
       1: lload_2
       2: ldc           #6                  // int 2147483647
       4: invokestatic  #13                 // Method toStoreKeyBinary:(Lorg/apache/kafka/common/utils/Bytes;JI)Lorg/apache/kafka/common/utils/Bytes;
       7: areturn

  public long segmentTimestamp(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
       4: invokestatic  #15                 // Method extractStoreTimestamp:([B)J
       7: lreturn

  public org.apache.kafka.streams.state.internals.HasNextCondition hasNextCondition(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes, long, long);
    Code:
       0: aload_1
       1: aload_2
       2: lload_3
       3: lload         5
       5: invokedynamic #16,  0             // InvokeDynamic #0:hasNext:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;JJ)Lorg/apache/kafka/streams/state/internals/HasNextCondition;
      10: areturn

  public <S extends org.apache.kafka.streams.state.internals.Segment> java.util.List<S> segmentsToSearch(org.apache.kafka.streams.state.internals.Segments<S>, long, long);
    Code:
       0: aload_1
       1: lload_2
       2: lload         4
       4: invokeinterface #17,  5           // InterfaceMethod org/apache/kafka/streams/state/internals/Segments.segments:(JJ)Ljava/util/List;
       9: areturn

  static org.apache.kafka.streams.kstream.internals.TimeWindow timeWindowForSize(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: ladd
       3: lstore        4
       5: lload         4
       7: lconst_0
       8: lcmp
       9: ifge          27
      12: getstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
      15: ldc           #19                 // String Warning: window end time was truncated to Long.MAX
      17: invokeinterface #20,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      22: ldc2_w        #22                 // long 9223372036854775807l
      25: lstore        4
      27: new           #24                 // class org/apache/kafka/streams/kstream/internals/TimeWindow
      30: dup
      31: lload_0
      32: lload         4
      34: invokespecial #25                 // Method org/apache/kafka/streams/kstream/internals/TimeWindow."<init>":(JJ)V
      37: areturn

  public static <K> byte[] toBinary(org.apache.kafka.streams.kstream.Windowed<K>, org.apache.kafka.common.serialization.Serializer<K>, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #26                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
       6: invokeinterface #27,  3           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.serialize:(Ljava/lang/String;Ljava/lang/Object;)[B
      11: astore_3
      12: aload_3
      13: arraylength
      14: bipush        8
      16: iadd
      17: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      20: astore        4
      22: aload         4
      24: aload_3
      25: invokevirtual #28                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      28: pop
      29: aload         4
      31: aload_0
      32: invokevirtual #29                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
      35: invokevirtual #30                 // Method org/apache/kafka/streams/kstream/Window.start:()J
      38: invokevirtual #4                  // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      41: pop
      42: aload         4
      44: invokevirtual #8                  // Method java/nio/ByteBuffer.array:()[B
      47: areturn

  public static <K> org.apache.kafka.streams.kstream.Windowed<K> from(byte[], long, org.apache.kafka.common.serialization.Deserializer<K>, java.lang.String);
    Code:
       0: aload_0
       1: arraylength
       2: bipush        8
       4: isub
       5: newarray       byte
       7: astore        5
       9: aload_0
      10: iconst_0
      11: aload         5
      13: iconst_0
      14: aload         5
      16: arraylength
      17: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_3
      21: aload         4
      23: aload         5
      25: invokeinterface #32,  3           // InterfaceMethod org/apache/kafka/common/serialization/Deserializer.deserialize:(Ljava/lang/String;[B)Ljava/lang/Object;
      30: astore        6
      32: aload_0
      33: lload_1
      34: invokestatic  #33                 // Method extractWindow:([BJ)Lorg/apache/kafka/streams/kstream/Window;
      37: astore        7
      39: new           #34                 // class org/apache/kafka/streams/kstream/Windowed
      42: dup
      43: aload         6
      45: aload         7
      47: invokespecial #35                 // Method org/apache/kafka/streams/kstream/Windowed."<init>":(Ljava/lang/Object;Lorg/apache/kafka/streams/kstream/Window;)V
      50: areturn

  private static org.apache.kafka.streams.kstream.Window extractWindow(byte[], long);
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       4: astore_3
       5: aload_3
       6: aload_0
       7: arraylength
       8: bipush        8
      10: isub
      11: invokevirtual #37                 // Method java/nio/ByteBuffer.getLong:(I)J
      14: lstore        4
      16: lload         4
      18: lload_1
      19: invokestatic  #38                 // Method timeWindowForSize:(JJ)Lorg/apache/kafka/streams/kstream/internals/TimeWindow;
      22: areturn

  public static org.apache.kafka.common.utils.Bytes toStoreKeyBinary(org.apache.kafka.common.utils.Bytes, long, int);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
       4: astore        4
       6: aload         4
       8: lload_1
       9: iload_3
      10: invokestatic  #39                 // Method toStoreKeyBinary:([BJI)Lorg/apache/kafka/common/utils/Bytes;
      13: areturn

  public static <K> org.apache.kafka.common.utils.Bytes toStoreKeyBinary(K, long, int, org.apache.kafka.streams.state.StateSerdes<K, ?>);
    Code:
       0: aload         4
       2: aload_0
       3: invokevirtual #40                 // Method org/apache/kafka/streams/state/StateSerdes.rawKey:(Ljava/lang/Object;)[B
       6: astore        5
       8: aload         5
      10: lload_1
      11: iload_3
      12: invokestatic  #39                 // Method toStoreKeyBinary:([BJI)Lorg/apache/kafka/common/utils/Bytes;
      15: areturn

  public static org.apache.kafka.common.utils.Bytes toStoreKeyBinary(org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
       4: checkcast     #41                 // class org/apache/kafka/common/utils/Bytes
       7: invokevirtual #14                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      10: astore_2
      11: aload_2
      12: aload_0
      13: invokevirtual #29                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
      16: invokevirtual #30                 // Method org/apache/kafka/streams/kstream/Window.start:()J
      19: iload_1
      20: invokestatic  #39                 // Method toStoreKeyBinary:([BJI)Lorg/apache/kafka/common/utils/Bytes;
      23: areturn

  public static <K> org.apache.kafka.common.utils.Bytes toStoreKeyBinary(org.apache.kafka.streams.kstream.Windowed<K>, int, org.apache.kafka.streams.state.StateSerdes<K, ?>);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #26                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
       5: invokevirtual #40                 // Method org/apache/kafka/streams/state/StateSerdes.rawKey:(Ljava/lang/Object;)[B
       8: astore_3
       9: aload_3
      10: aload_0
      11: invokevirtual #29                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
      14: invokevirtual #30                 // Method org/apache/kafka/streams/kstream/Window.start:()J
      17: iload_1
      18: invokestatic  #39                 // Method toStoreKeyBinary:([BJI)Lorg/apache/kafka/common/utils/Bytes;
      21: areturn

  static org.apache.kafka.common.utils.Bytes toStoreKeyBinary(byte[], long, int);
    Code:
       0: aload_0
       1: arraylength
       2: bipush        8
       4: iadd
       5: iconst_4
       6: iadd
       7: invokestatic  #3                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      10: astore        4
      12: aload         4
      14: aload_0
      15: invokevirtual #28                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      18: pop
      19: aload         4
      21: lload_1
      22: invokevirtual #4                  // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      25: pop
      26: aload         4
      28: iload_3
      29: invokevirtual #7                  // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      32: pop
      33: aload         4
      35: invokevirtual #8                  // Method java/nio/ByteBuffer.array:()[B
      38: invokestatic  #42                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
      41: areturn

  static byte[] extractStoreKeyBytes(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: bipush        8
       4: isub
       5: iconst_4
       6: isub
       7: newarray       byte
       9: astore_1
      10: aload_0
      11: iconst_0
      12: aload_1
      13: iconst_0
      14: aload_1
      15: arraylength
      16: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_1
      20: areturn

  static <K> K extractStoreKey(byte[], org.apache.kafka.streams.state.StateSerdes<K, ?>);
    Code:
       0: aload_0
       1: arraylength
       2: bipush        8
       4: isub
       5: iconst_4
       6: isub
       7: newarray       byte
       9: astore_2
      10: aload_0
      11: iconst_0
      12: aload_2
      13: iconst_0
      14: aload_2
      15: arraylength
      16: invokestatic  #31                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: aload_1
      20: aload_2
      21: invokevirtual #43                 // Method org/apache/kafka/streams/state/StateSerdes.keyFrom:([B)Ljava/lang/Object;
      24: areturn

  static long extractStoreTimestamp(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       4: aload_0
       5: arraylength
       6: bipush        8
       8: isub
       9: iconst_4
      10: isub
      11: invokevirtual #37                 // Method java/nio/ByteBuffer.getLong:(I)J
      14: lreturn

  static int extractStoreSequence(byte[]);
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       4: aload_0
       5: arraylength
       6: iconst_4
       7: isub
       8: invokevirtual #44                 // Method java/nio/ByteBuffer.getInt:(I)I
      11: ireturn

  public static <K> org.apache.kafka.streams.kstream.Windowed<K> fromStoreKey(byte[], long, org.apache.kafka.common.serialization.Deserializer<K>, java.lang.String);
    Code:
       0: aload_3
       1: aload         4
       3: aload_0
       4: invokestatic  #45                 // Method extractStoreKeyBytes:([B)[B
       7: invokeinterface #32,  3           // InterfaceMethod org/apache/kafka/common/serialization/Deserializer.deserialize:(Ljava/lang/String;[B)Ljava/lang/Object;
      12: astore        5
      14: aload_0
      15: lload_1
      16: invokestatic  #46                 // Method extractStoreWindow:([BJ)Lorg/apache/kafka/streams/kstream/Window;
      19: astore        6
      21: new           #34                 // class org/apache/kafka/streams/kstream/Windowed
      24: dup
      25: aload         5
      27: aload         6
      29: invokespecial #35                 // Method org/apache/kafka/streams/kstream/Windowed."<init>":(Ljava/lang/Object;Lorg/apache/kafka/streams/kstream/Window;)V
      32: areturn

  public static <K> org.apache.kafka.streams.kstream.Windowed<K> fromStoreKey(org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, org.apache.kafka.common.serialization.Deserializer<K>, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: aload_0
       3: invokevirtual #26                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
       6: checkcast     #41                 // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #14                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      12: invokeinterface #32,  3           // InterfaceMethod org/apache/kafka/common/serialization/Deserializer.deserialize:(Ljava/lang/String;[B)Ljava/lang/Object;
      17: astore_3
      18: new           #34                 // class org/apache/kafka/streams/kstream/Windowed
      21: dup
      22: aload_3
      23: aload_0
      24: invokevirtual #29                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
      27: invokespecial #35                 // Method org/apache/kafka/streams/kstream/Windowed."<init>":(Ljava/lang/Object;Lorg/apache/kafka/streams/kstream/Window;)V
      30: areturn

  public static org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes> fromStoreBytesKey(byte[], long);
    Code:
       0: aload_0
       1: invokestatic  #45                 // Method extractStoreKeyBytes:([B)[B
       4: invokestatic  #42                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
       7: astore_3
       8: aload_0
       9: lload_1
      10: invokestatic  #46                 // Method extractStoreWindow:([BJ)Lorg/apache/kafka/streams/kstream/Window;
      13: astore        4
      15: new           #34                 // class org/apache/kafka/streams/kstream/Windowed
      18: dup
      19: aload_3
      20: aload         4
      22: invokespecial #35                 // Method org/apache/kafka/streams/kstream/Windowed."<init>":(Ljava/lang/Object;Lorg/apache/kafka/streams/kstream/Window;)V
      25: areturn

  static org.apache.kafka.streams.kstream.Window extractStoreWindow(byte[], long);
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       4: astore_3
       5: aload_3
       6: aload_0
       7: arraylength
       8: bipush        8
      10: isub
      11: iconst_4
      12: isub
      13: invokevirtual #37                 // Method java/nio/ByteBuffer.getLong:(I)J
      16: lstore        4
      18: lload         4
      20: lload_1
      21: invokestatic  #38                 // Method timeWindowForSize:(JJ)Lorg/apache/kafka/streams/kstream/internals/TimeWindow;
      24: areturn

  private static boolean lambda$hasNextCondition$0(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes, long, long, org.apache.kafka.streams.state.KeyValueIterator);
    Code:
       0: aload         6
       2: invokeinterface #47,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.hasNext:()Z
       7: ifeq          99
      10: aload         6
      12: invokeinterface #48,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.peekNextKey:()Ljava/lang/Object;
      17: checkcast     #41                 // class org/apache/kafka/common/utils/Bytes
      20: astore        7
      22: aload         7
      24: invokevirtual #14                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      27: invokestatic  #45                 // Method extractStoreKeyBytes:([B)[B
      30: invokestatic  #42                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
      33: astore        8
      35: aload         7
      37: invokevirtual #14                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      40: invokestatic  #15                 // Method extractStoreTimestamp:([B)J
      43: lstore        9
      45: aload_0
      46: ifnull        58
      49: aload         8
      51: aload_0
      52: invokevirtual #49                 // Method org/apache/kafka/common/utils/Bytes.compareTo:(Lorg/apache/kafka/common/utils/Bytes;)I
      55: iflt          88
      58: aload_1
      59: ifnull        71
      62: aload         8
      64: aload_1
      65: invokevirtual #49                 // Method org/apache/kafka/common/utils/Bytes.compareTo:(Lorg/apache/kafka/common/utils/Bytes;)I
      68: ifgt          88
      71: lload         9
      73: lload_2
      74: lcmp
      75: iflt          88
      78: lload         9
      80: lload         4
      82: lcmp
      83: ifgt          88
      86: iconst_1
      87: ireturn
      88: aload         6
      90: invokeinterface #50,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.next:()Ljava/lang/Object;
      95: pop
      96: goto          0
      99: iconst_0
     100: ireturn

  static {};
    Code:
       0: ldc           #1                  // class org/apache/kafka/streams/state/internals/WindowKeySchema
       2: invokestatic  #51                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #18                 // Field LOG:Lorg/slf4j/Logger;
       8: bipush        12
      10: newarray       byte
      12: putstatic     #10                 // Field MIN_SUFFIX:[B
      15: return
}
