Compiled from "KTableKTableJoinNode.java"
public class org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode<K, V1, V2, VR> extends org.apache.kafka.streams.kstream.internals.graph.BaseJoinProcessorNode<K, org.apache.kafka.streams.kstream.internals.Change<V1>, org.apache.kafka.streams.kstream.internals.Change<V2>, org.apache.kafka.streams.kstream.internals.Change<VR>> {
  private final org.apache.kafka.common.serialization.Serde<K> keySerde;

  private final org.apache.kafka.common.serialization.Serde<VR> valueSerde;

  private final java.lang.String[] joinThisStoreNames;

  private final java.lang.String[] joinOtherStoreNames;

  private final org.apache.kafka.streams.state.StoreBuilder<org.apache.kafka.streams.state.TimestampedKeyValueStore<K, VR>> storeBuilder;

  org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode(java.lang.String, org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, org.apache.kafka.streams.kstream.internals.Change<V1>>, org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, org.apache.kafka.streams.kstream.internals.Change<V2>>, org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, org.apache.kafka.streams.kstream.internals.Change<VR>>, java.lang.String, java.lang.String, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<VR>, java.lang.String[], java.lang.String[], org.apache.kafka.streams.state.StoreBuilder<org.apache.kafka.streams.state.TimestampedKeyValueStore<K, VR>>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload         6
      11: invokespecial #1                  // Method org/apache/kafka/streams/kstream/internals/graph/BaseJoinProcessorNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/ValueJoiner;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;Ljava/lang/String;Ljava/lang/String;)V
      14: aload_0
      15: aload         7
      17: putfield      #2                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      20: aload_0
      21: aload         8
      23: putfield      #3                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      26: aload_0
      27: aload         9
      29: putfield      #4                  // Field joinThisStoreNames:[Ljava/lang/String;
      32: aload_0
      33: aload         10
      35: putfield      #5                  // Field joinOtherStoreNames:[Ljava/lang/String;
      38: aload_0
      39: aload         11
      41: putfield      #6                  // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      44: return

  public org.apache.kafka.common.serialization.Serde<K> keySerde();
    Code:
       0: aload_0
       1: getfield      #2                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       4: areturn

  public org.apache.kafka.common.serialization.Serde<VR> valueSerde();
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
       4: areturn

  public java.lang.String[] joinThisStoreNames();
    Code:
       0: aload_0
       1: getfield      #4                  // Field joinThisStoreNames:[Ljava/lang/String;
       4: areturn

  public java.lang.String[] joinOtherStoreNames();
    Code:
       0: aload_0
       1: getfield      #5                  // Field joinOtherStoreNames:[Ljava/lang/String;
       4: areturn

  public java.lang.String queryableStoreName();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method mergeProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
       4: invokevirtual #8                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
       7: checkcast     #9                  // class org/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger
      10: invokevirtual #10                 // Method org/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger.getQueryableName:()Ljava/lang/String;
      13: areturn

  public org.apache.kafka.streams.kstream.internals.KTableKTableJoinMerger<K, VR> joinMerger();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method mergeProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
       4: invokevirtual #8                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
       7: checkcast     #9                  // class org/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger
      10: areturn

  public void writeToTopology(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method thisProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
       4: invokevirtual #12                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorName:()Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: invokevirtual #13                 // Method otherProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      12: invokevirtual #12                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorName:()Ljava/lang/String;
      15: astore_3
      16: aload_0
      17: invokevirtual #7                  // Method mergeProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      20: invokevirtual #12                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorName:()Ljava/lang/String;
      23: astore        4
      25: aload_1
      26: aload_2
      27: aload_0
      28: invokevirtual #11                 // Method thisProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      31: invokevirtual #8                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      34: iconst_1
      35: anewarray     #14                 // class java/lang/String
      38: dup
      39: iconst_0
      40: aload_0
      41: invokevirtual #15                 // Method thisJoinSideNodeName:()Ljava/lang/String;
      44: aastore
      45: invokevirtual #16                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addProcessor:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
      48: aload_1
      49: aload_3
      50: aload_0
      51: invokevirtual #13                 // Method otherProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      54: invokevirtual #8                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      57: iconst_1
      58: anewarray     #14                 // class java/lang/String
      61: dup
      62: iconst_0
      63: aload_0
      64: invokevirtual #17                 // Method otherJoinSideNodeName:()Ljava/lang/String;
      67: aastore
      68: invokevirtual #16                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addProcessor:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
      71: aload_1
      72: aload         4
      74: aload_0
      75: invokevirtual #7                  // Method mergeProcessorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      78: invokevirtual #8                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      81: iconst_2
      82: anewarray     #14                 // class java/lang/String
      85: dup
      86: iconst_0
      87: aload_2
      88: aastore
      89: dup
      90: iconst_1
      91: aload_3
      92: aastore
      93: invokevirtual #16                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addProcessor:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
      96: aload_1
      97: aload_2
      98: aload_0
      99: getfield      #5                  // Field joinOtherStoreNames:[Ljava/lang/String;
     102: invokevirtual #18                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.connectProcessorAndStateStores:(Ljava/lang/String;[Ljava/lang/String;)V
     105: aload_1
     106: aload_3
     107: aload_0
     108: getfield      #4                  // Field joinThisStoreNames:[Ljava/lang/String;
     111: invokevirtual #18                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.connectProcessorAndStateStores:(Ljava/lang/String;[Ljava/lang/String;)V
     114: aload_0
     115: getfield      #6                  // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
     118: ifnull        138
     121: aload_1
     122: aload_0
     123: getfield      #6                  // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
     126: iconst_1
     127: anewarray     #14                 // class java/lang/String
     130: dup
     131: iconst_0
     132: aload         4
     134: aastore
     135: invokevirtual #19                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;[Ljava/lang/String;)V
     138: return

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #22                 // String KTableKTableJoinNode{joinThisStoreNames=
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #24                 // Method joinThisStoreNames:()[Ljava/lang/String;
      16: invokestatic  #25                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #26                 // String , joinOtherStoreNames=
      24: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #27                 // Method joinOtherStoreNames:()[Ljava/lang/String;
      31: invokestatic  #25                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      34: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #28                 // String }
      39: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokespecial #29                 // Method org/apache/kafka/streams/kstream/internals/graph/BaseJoinProcessorNode.toString:()Ljava/lang/String;
      46: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: areturn

  public static <K, V1, V2, VR> org.apache.kafka.streams.kstream.internals.graph.KTableKTableJoinNode$KTableKTableJoinNodeBuilder<K, V1, V2, VR> kTableKTableJoinNodeBuilder();
    Code:
       0: new           #31                 // class org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder
       3: dup
       4: aconst_null
       5: invokespecial #32                 // Method org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$KTableKTableJoinNodeBuilder."<init>":(Lorg/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode$1;)V
       8: areturn
}
