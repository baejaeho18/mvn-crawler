Compiled from "Printed.java"
public class org.apache.kafka.streams.kstream.Printed<K, V> implements org.apache.kafka.streams.kstream.NamedOperation<org.apache.kafka.streams.kstream.Printed<K, V>> {
  protected final java.io.OutputStream outputStream;

  protected java.lang.String label;

  protected java.lang.String processorName;

  protected org.apache.kafka.streams.kstream.KeyValueMapper<? super K, ? super V, java.lang.String> mapper;

  private org.apache.kafka.streams.kstream.Printed(java.io.OutputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokedynamic #2,  0              // InvokeDynamic #0:apply:()Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      10: putfield      #3                  // Field mapper:Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      13: aload_0
      14: aload_1
      15: putfield      #4                  // Field outputStream:Ljava/io/OutputStream;
      18: return

  protected org.apache.kafka.streams.kstream.Printed(org.apache.kafka.streams.kstream.Printed<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokedynamic #2,  0              // InvokeDynamic #0:apply:()Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      10: putfield      #3                  // Field mapper:Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      13: aload_0
      14: aload_1
      15: getfield      #4                  // Field outputStream:Ljava/io/OutputStream;
      18: putfield      #4                  // Field outputStream:Ljava/io/OutputStream;
      21: aload_0
      22: aload_1
      23: getfield      #5                  // Field label:Ljava/lang/String;
      26: putfield      #5                  // Field label:Ljava/lang/String;
      29: aload_0
      30: aload_1
      31: getfield      #3                  // Field mapper:Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      34: putfield      #3                  // Field mapper:Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      37: aload_0
      38: aload_1
      39: getfield      #6                  // Field processorName:Ljava/lang/String;
      42: putfield      #6                  // Field processorName:Ljava/lang/String;
      45: return

  public static <K, V> org.apache.kafka.streams.kstream.Printed<K, V> toFile(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #7                  // String filePath can\'t be null
       3: invokestatic  #8                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
      11: invokevirtual #10                 // Method java/lang/String.isEmpty:()Z
      14: ifeq          27
      17: new           #11                 // class org/apache/kafka/streams/errors/TopologyException
      20: dup
      21: ldc           #12                 // String filePath can\'t be an empty string
      23: invokespecial #13                 // Method org/apache/kafka/streams/errors/TopologyException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: new           #14                 // class org/apache/kafka/streams/kstream/Printed
      30: dup
      31: aload_0
      32: iconst_0
      33: anewarray     #15                 // class java/lang/String
      36: invokestatic  #16                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
      39: iconst_0
      40: anewarray     #17                 // class java/nio/file/OpenOption
      43: invokestatic  #18                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;
      46: invokespecial #19                 // Method "<init>":(Ljava/io/OutputStream;)V
      49: areturn
      50: astore_1
      51: new           #11                 // class org/apache/kafka/streams/errors/TopologyException
      54: dup
      55: new           #21                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #23                 // String Unable to write stream to file at [
      64: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #25                 // String ]
      73: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #26                 // Method java/io/IOException.getMessage:()Ljava/lang/String;
      80: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #13                 // Method org/apache/kafka/streams/errors/TopologyException."<init>":(Ljava/lang/String;)V
      89: athrow
    Exception table:
       from    to  target type
          27    49    50   Class java/io/IOException

  public static <K, V> org.apache.kafka.streams.kstream.Printed<K, V> toSysOut();
    Code:
       0: new           #14                 // class org/apache/kafka/streams/kstream/Printed
       3: dup
       4: getstatic     #28                 // Field java/lang/System.out:Ljava/io/PrintStream;
       7: invokespecial #19                 // Method "<init>":(Ljava/io/OutputStream;)V
      10: areturn

  public org.apache.kafka.streams.kstream.Printed<K, V> withLabel(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #29                 // String label can\'t be null
       3: invokestatic  #8                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #5                  // Field label:Ljava/lang/String;
      12: aload_0
      13: areturn

  public org.apache.kafka.streams.kstream.Printed<K, V> withKeyValueMapper(org.apache.kafka.streams.kstream.KeyValueMapper<? super K, ? super V, java.lang.String>);
    Code:
       0: aload_1
       1: ldc           #30                 // String mapper can\'t be null
       3: invokestatic  #8                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: putfield      #3                  // Field mapper:Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      12: aload_0
      13: areturn

  public org.apache.kafka.streams.kstream.Printed<K, V> withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field processorName:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.kafka.streams.kstream.NamedOperation withName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #31                 // Method withName:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Printed;
       5: areturn

  private static java.lang.String lambda$new$0(java.lang.Object, java.lang.Object);
    Code:
       0: ldc           #32                 // String %s, %s
       2: iconst_2
       3: anewarray     #33                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: aastore
      10: dup
      11: iconst_1
      12: aload_1
      13: aastore
      14: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: areturn
}
