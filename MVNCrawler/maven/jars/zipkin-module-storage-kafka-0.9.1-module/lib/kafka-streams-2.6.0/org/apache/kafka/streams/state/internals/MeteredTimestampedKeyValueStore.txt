Compiled from "MeteredTimestampedKeyValueStore.java"
public class org.apache.kafka.streams.state.internals.MeteredTimestampedKeyValueStore<K, V> extends org.apache.kafka.streams.state.internals.MeteredKeyValueStore<K, org.apache.kafka.streams.state.ValueAndTimestamp<V>> implements org.apache.kafka.streams.state.TimestampedKeyValueStore<K, V> {
  org.apache.kafka.streams.state.internals.MeteredTimestampedKeyValueStore(org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>, java.lang.String, org.apache.kafka.common.utils.Time, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<org.apache.kafka.streams.state.ValueAndTimestamp<V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method org/apache/kafka/streams/state/internals/MeteredKeyValueStore."<init>":(Lorg/apache/kafka/streams/state/KeyValueStore;Ljava/lang/String;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
      11: return

  void initStoreSerde(org.apache.kafka.streams.processor.ProcessorContext);
    Code:
       0: aload_0
       1: new           #2                  // class org/apache/kafka/streams/state/StateSerdes
       4: dup
       5: aload_1
       6: invokeinterface #3,  1            // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.applicationId:()Ljava/lang/String;
      11: aload_0
      12: invokevirtual #4                  // Method name:()Ljava/lang/String;
      15: invokestatic  #5                  // Method org/apache/kafka/streams/processor/internals/ProcessorStateManager.storeChangelogTopic:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      18: aload_0
      19: getfield      #6                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      22: ifnonnull     34
      25: aload_1
      26: invokeinterface #7,  1            // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
      31: goto          38
      34: aload_0
      35: getfield      #6                  // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      38: aload_0
      39: getfield      #8                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      42: ifnonnull     61
      45: new           #9                  // class org/apache/kafka/streams/state/internals/ValueAndTimestampSerde
      48: dup
      49: aload_1
      50: invokeinterface #10,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
      55: invokespecial #11                 // Method org/apache/kafka/streams/state/internals/ValueAndTimestampSerde."<init>":(Lorg/apache/kafka/common/serialization/Serde;)V
      58: goto          65
      61: aload_0
      62: getfield      #8                  // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      65: invokespecial #12                 // Method org/apache/kafka/streams/state/StateSerdes."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)V
      68: putfield      #13                 // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
      71: return

  public org.apache.kafka.streams.state.internals.MeteredTimestampedKeyValueStore$RawAndDeserializedValue<V> getWithBinary(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #14,  0             // InvokeDynamic #0:get:(Lorg/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore;Ljava/lang/Object;)Ljava/util/function/Supplier;
       7: aload_0
       8: getfield      #15                 // Field time:Lorg/apache/kafka/common/utils/Time;
      11: aload_0
      12: getfield      #16                 // Field getSensor:Lorg/apache/kafka/common/metrics/Sensor;
      15: invokestatic  #17                 // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.maybeMeasureLatency:(Ljava/util/function/Supplier;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/metrics/Sensor;)Ljava/lang/Object;
      18: checkcast     #18                 // class org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore$RawAndDeserializedValue
      21: areturn
      22: astore_2
      23: aload_2
      24: invokevirtual #20                 // Method org/apache/kafka/streams/errors/ProcessorStateException.getMessage:()Ljava/lang/String;
      27: iconst_1
      28: anewarray     #21                 // class java/lang/Object
      31: dup
      32: iconst_0
      33: aload_1
      34: aastore
      35: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      38: astore_3
      39: new           #19                 // class org/apache/kafka/streams/errors/ProcessorStateException
      42: dup
      43: aload_3
      44: aload_2
      45: invokespecial #23                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      48: athrow
    Exception table:
       from    to  target type
           0    21    22   Class org/apache/kafka/streams/errors/ProcessorStateException

  public boolean putIfDifferentValues(K, org.apache.kafka.streams.state.ValueAndTimestamp<V>, byte[]);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload_1
       4: invokedynamic #24,  0             // InvokeDynamic #1:get:(Lorg/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore;Lorg/apache/kafka/streams/state/ValueAndTimestamp;[BLjava/lang/Object;)Ljava/util/function/Supplier;
       9: aload_0
      10: getfield      #15                 // Field time:Lorg/apache/kafka/common/utils/Time;
      13: aload_0
      14: getfield      #25                 // Field putSensor:Lorg/apache/kafka/common/metrics/Sensor;
      17: invokestatic  #17                 // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.maybeMeasureLatency:(Ljava/util/function/Supplier;Lorg/apache/kafka/common/utils/Time;Lorg/apache/kafka/common/metrics/Sensor;)Ljava/lang/Object;
      20: checkcast     #26                 // class java/lang/Boolean
      23: invokevirtual #27                 // Method java/lang/Boolean.booleanValue:()Z
      26: ireturn
      27: astore        4
      29: aload         4
      31: invokevirtual #20                 // Method org/apache/kafka/streams/errors/ProcessorStateException.getMessage:()Ljava/lang/String;
      34: iconst_2
      35: anewarray     #21                 // class java/lang/Object
      38: dup
      39: iconst_0
      40: aload_1
      41: aastore
      42: dup
      43: iconst_1
      44: aload_2
      45: aastore
      46: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      49: astore        5
      51: new           #19                 // class org/apache/kafka/streams/errors/ProcessorStateException
      54: dup
      55: aload         5
      57: aload         4
      59: invokespecial #23                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: athrow
    Exception table:
       from    to  target type
           0    26    27   Class org/apache/kafka/streams/errors/ProcessorStateException

  private java.lang.Boolean lambda$putIfDifferentValues$1(org.apache.kafka.streams.state.ValueAndTimestamp, byte[], java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
       4: aload_1
       5: invokevirtual #28                 // Method org/apache/kafka/streams/state/StateSerdes.rawValue:(Ljava/lang/Object;)[B
       8: astore        4
      10: aload_2
      11: aload         4
      13: invokestatic  #29                 // Method org/apache/kafka/streams/state/internals/ValueAndTimestampSerializer.compareValuesAndCheckForIncreasingTimestamp:([B[B)Z
      16: ifeq          24
      19: iconst_0
      20: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      23: areturn
      24: aload_0
      25: invokevirtual #31                 // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
      28: checkcast     #32                 // class org/apache/kafka/streams/state/KeyValueStore
      31: aload_0
      32: aload_3
      33: invokevirtual #33                 // Method keyBytes:(Ljava/lang/Object;)Lorg/apache/kafka/common/utils/Bytes;
      36: aload         4
      38: invokeinterface #34,  3           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      43: iconst_1
      44: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      47: areturn

  private org.apache.kafka.streams.state.internals.MeteredTimestampedKeyValueStore$RawAndDeserializedValue lambda$getWithBinary$0(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method wrapped:()Lorg/apache/kafka/streams/processor/StateStore;
       4: checkcast     #32                 // class org/apache/kafka/streams/state/KeyValueStore
       7: aload_0
       8: aload_1
       9: invokevirtual #33                 // Method keyBytes:(Ljava/lang/Object;)Lorg/apache/kafka/common/utils/Bytes;
      12: invokeinterface #35,  2           // InterfaceMethod org/apache/kafka/streams/state/KeyValueStore.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #36                 // class "[B"
      20: astore_2
      21: new           #18                 // class org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore$RawAndDeserializedValue
      24: dup
      25: aload_2
      26: aload_0
      27: aload_2
      28: invokevirtual #37                 // Method outerValue:([B)Ljava/lang/Object;
      31: checkcast     #38                 // class org/apache/kafka/streams/state/ValueAndTimestamp
      34: invokespecial #39                 // Method org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStore$RawAndDeserializedValue."<init>":([BLorg/apache/kafka/streams/state/ValueAndTimestamp;)V
      37: areturn
}
