Compiled from "InternalTopologyBuilder.java"
public class org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory<S extends org.apache.kafka.streams.processor.StateStore> {
  private final org.apache.kafka.streams.state.StoreBuilder<S> builder;

  private final java.util.Set<java.lang.String> users;

  private org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory(org.apache.kafka.streams.state.StoreBuilder<S>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/HashSet
       8: dup
       9: invokespecial #9                  // Method java/util/HashSet."<init>":()V
      12: putfield      #10                 // Field users:Ljava/util/Set;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      20: return

  public S build();
    Code:
       0: aload_0
       1: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
       4: invokeinterface #11,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.build:()Lorg/apache/kafka/streams/processor/StateStore;
       9: areturn

  long retentionPeriod();
    Code:
       0: aload_0
       1: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
       4: instanceof    #12                 // class org/apache/kafka/streams/state/internals/WindowStoreBuilder
       7: ifeq          21
      10: aload_0
      11: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      14: checkcast     #12                 // class org/apache/kafka/streams/state/internals/WindowStoreBuilder
      17: invokevirtual #13                 // Method org/apache/kafka/streams/state/internals/WindowStoreBuilder.retentionPeriod:()J
      20: lreturn
      21: aload_0
      22: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      25: instanceof    #14                 // class org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilder
      28: ifeq          42
      31: aload_0
      32: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      35: checkcast     #14                 // class org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilder
      38: invokevirtual #15                 // Method org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilder.retentionPeriod:()J
      41: lreturn
      42: aload_0
      43: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      46: instanceof    #16                 // class org/apache/kafka/streams/state/internals/SessionStoreBuilder
      49: ifeq          63
      52: aload_0
      53: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      56: checkcast     #16                 // class org/apache/kafka/streams/state/internals/SessionStoreBuilder
      59: invokevirtual #17                 // Method org/apache/kafka/streams/state/internals/SessionStoreBuilder.retentionPeriod:()J
      62: lreturn
      63: new           #18                 // class java/lang/IllegalStateException
      66: dup
      67: ldc           #19                 // String retentionPeriod is not supported when not a window store
      69: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      72: athrow

  private java.util.Set<java.lang.String> users();
    Code:
       0: aload_0
       1: getfield      #10                 // Field users:Ljava/util/Set;
       4: areturn

  public boolean loggingEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.loggingEnabled:()Z
       9: ireturn

  private java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
       4: invokeinterface #22,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.name:()Ljava/lang/String;
       9: areturn

  private boolean isWindowStore();
    Code:
       0: aload_0
       1: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
       4: instanceof    #12                 // class org/apache/kafka/streams/state/internals/WindowStoreBuilder
       7: ifne          30
      10: aload_0
      11: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      14: instanceof    #14                 // class org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilder
      17: ifne          30
      20: aload_0
      21: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
      24: instanceof    #16                 // class org/apache/kafka/streams/state/internals/SessionStoreBuilder
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  private java.util.Map<java.lang.String, java.lang.String> logConfig();
    Code:
       0: aload_0
       1: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
       4: invokeinterface #23,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.logConfig:()Ljava/util/Map;
       9: areturn

  static org.apache.kafka.streams.state.StoreBuilder access$400(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory);
    Code:
       0: aload_0
       1: getfield      #6                  // Field builder:Lorg/apache/kafka/streams/state/StoreBuilder;
       4: areturn

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory(org.apache.kafka.streams.state.StoreBuilder, org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method "<init>":(Lorg/apache/kafka/streams/state/StoreBuilder;)V
       5: return

  static java.util.Set access$800(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method users:()Ljava/util/Set;
       4: areturn

  static java.lang.String access$1300(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method name:()Ljava/lang/String;
       4: areturn

  static boolean access$1400(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method isWindowStore:()Z
       4: ireturn

  static java.util.Map access$1500(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$StateStoreFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method logConfig:()Ljava/util/Map;
       4: areturn
}
