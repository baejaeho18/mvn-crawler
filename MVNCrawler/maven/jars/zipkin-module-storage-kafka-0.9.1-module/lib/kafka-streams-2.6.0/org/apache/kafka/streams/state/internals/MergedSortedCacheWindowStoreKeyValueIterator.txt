Compiled from "MergedSortedCacheWindowStoreKeyValueIterator.java"
class org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator extends org.apache.kafka.streams.state.internals.AbstractMergedSortedCacheStoreIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[], byte[]> {
  private final org.apache.kafka.streams.state.StateSerdes<org.apache.kafka.common.utils.Bytes, byte[]> serdes;

  private final long windowSize;

  private final org.apache.kafka.streams.state.internals.SegmentedCacheFunction cacheFunction;

  org.apache.kafka.streams.state.internals.MergedSortedCacheWindowStoreKeyValueIterator(org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<org.apache.kafka.common.utils.Bytes, org.apache.kafka.streams.state.internals.LRUCacheEntry>, org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]>, org.apache.kafka.streams.state.StateSerdes<org.apache.kafka.common.utils.Bytes, byte[]>, long, org.apache.kafka.streams.state.internals.SegmentedCacheFunction);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/apache/kafka/streams/state/internals/AbstractMergedSortedCacheStoreIterator."<init>":(Lorg/apache/kafka/streams/state/internals/PeekingKeyValueIterator;Lorg/apache/kafka/streams/state/KeyValueIterator;)V
       6: aload_0
       7: aload_3
       8: putfield      #2                  // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
      11: aload_0
      12: lload         4
      14: putfield      #3                  // Field windowSize:J
      17: aload_0
      18: aload         6
      20: putfield      #4                  // Field cacheFunction:Lorg/apache/kafka/streams/state/internals/SegmentedCacheFunction;
      23: return

  org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes> deserializeStoreKey(org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>);
    Code:
       0: aload_1
       1: areturn

  org.apache.kafka.streams.KeyValue<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> deserializeStorePair(org.apache.kafka.streams.KeyValue<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]>);
    Code:
       0: aload_1
       1: areturn

  org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes> deserializeCacheKey(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheFunction:Lorg/apache/kafka/streams/state/internals/SegmentedCacheFunction;
       4: aload_1
       5: invokevirtual #5                  // Method org/apache/kafka/streams/state/internals/SegmentedCacheFunction.key:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/common/utils/Bytes;
       8: invokevirtual #6                  // Method org/apache/kafka/common/utils/Bytes.get:()[B
      11: astore_2
      12: aload_2
      13: aload_0
      14: getfield      #3                  // Field windowSize:J
      17: aload_0
      18: getfield      #2                  // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
      21: invokevirtual #7                  // Method org/apache/kafka/streams/state/StateSerdes.keyDeserializer:()Lorg/apache/kafka/common/serialization/Deserializer;
      24: aload_0
      25: getfield      #2                  // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
      28: invokevirtual #8                  // Method org/apache/kafka/streams/state/StateSerdes.topic:()Ljava/lang/String;
      31: invokestatic  #9                  // Method org/apache/kafka/streams/state/internals/WindowKeySchema.fromStoreKey:([BJLorg/apache/kafka/common/serialization/Deserializer;Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/Windowed;
      34: areturn

  byte[] deserializeCacheValue(org.apache.kafka.streams.state.internals.LRUCacheEntry);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method org/apache/kafka/streams/state/internals/LRUCacheEntry.value:()[B
       4: areturn

  int compare(org.apache.kafka.common.utils.Bytes, org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>);
    Code:
       0: aload_2
       1: invokevirtual #11                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
       4: checkcast     #12                 // class org/apache/kafka/common/utils/Bytes
       7: aload_2
       8: invokevirtual #13                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
      11: invokevirtual #14                 // Method org/apache/kafka/streams/kstream/Window.start:()J
      14: iconst_0
      15: invokestatic  #15                 // Method org/apache/kafka/streams/state/internals/WindowKeySchema.toStoreKeyBinary:(Lorg/apache/kafka/common/utils/Bytes;JI)Lorg/apache/kafka/common/utils/Bytes;
      18: astore_3
      19: aload_0
      20: getfield      #4                  // Field cacheFunction:Lorg/apache/kafka/streams/state/internals/SegmentedCacheFunction;
      23: aload_1
      24: aload_3
      25: invokevirtual #16                 // Method org/apache/kafka/streams/state/internals/SegmentedCacheFunction.compareSegmentedKeys:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)I
      28: ireturn

  java.lang.Object deserializeCacheValue(org.apache.kafka.streams.state.internals.LRUCacheEntry);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method deserializeCacheValue:(Lorg/apache/kafka/streams/state/internals/LRUCacheEntry;)[B
       5: areturn

  java.lang.Object deserializeCacheKey(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method deserializeCacheKey:(Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/kstream/Windowed;
       5: areturn

  java.lang.Object deserializeStoreKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #19                 // class org/apache/kafka/streams/kstream/Windowed
       5: invokevirtual #20                 // Method deserializeStoreKey:(Lorg/apache/kafka/streams/kstream/Windowed;)Lorg/apache/kafka/streams/kstream/Windowed;
       8: areturn

  int compare(org.apache.kafka.common.utils.Bytes, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #19                 // class org/apache/kafka/streams/kstream/Windowed
       6: invokevirtual #21                 // Method compare:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/streams/kstream/Windowed;)I
       9: ireturn
}
