Compiled from "MeteredWindowedKeyValueIterator.java"
class org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator<K, V> implements org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<K>, V> {
  private final org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]> iter;

  private final org.apache.kafka.common.metrics.Sensor sensor;

  private final org.apache.kafka.streams.StreamsMetrics metrics;

  private final org.apache.kafka.streams.state.StateSerdes<K, V> serdes;

  private final long startNs;

  private final org.apache.kafka.common.utils.Time time;

  org.apache.kafka.streams.state.internals.MeteredWindowedKeyValueIterator(org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>, byte[]>, org.apache.kafka.common.metrics.Sensor, org.apache.kafka.streams.StreamsMetrics, org.apache.kafka.streams.state.StateSerdes<K, V>, org.apache.kafka.common.utils.Time);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field iter:Lorg/apache/kafka/streams/state/KeyValueIterator;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sensor:Lorg/apache/kafka/common/metrics/Sensor;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field metrics:Lorg/apache/kafka/streams/StreamsMetrics;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
      25: aload_0
      26: aload         5
      28: invokeinterface #6,  1            // InterfaceMethod org/apache/kafka/common/utils/Time.nanoseconds:()J
      33: putfield      #7                  // Field startNs:J
      36: aload_0
      37: aload         5
      39: putfield      #8                  // Field time:Lorg/apache/kafka/common/utils/Time;
      42: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iter:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.hasNext:()Z
       9: ireturn

  public org.apache.kafka.streams.KeyValue<org.apache.kafka.streams.kstream.Windowed<K>, V> next();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iter:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.next:()Ljava/lang/Object;
       9: checkcast     #11                 // class org/apache/kafka/streams/KeyValue
      12: astore_1
      13: aload_0
      14: aload_1
      15: getfield      #12                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      18: checkcast     #13                 // class org/apache/kafka/streams/kstream/Windowed
      21: invokespecial #14                 // Method windowedKey:(Lorg/apache/kafka/streams/kstream/Windowed;)Lorg/apache/kafka/streams/kstream/Windowed;
      24: aload_0
      25: getfield      #5                  // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
      28: aload_1
      29: getfield      #15                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      32: checkcast     #16                 // class "[B"
      35: invokevirtual #17                 // Method org/apache/kafka/streams/state/StateSerdes.valueFrom:([B)Ljava/lang/Object;
      38: invokestatic  #18                 // Method org/apache/kafka/streams/KeyValue.pair:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kafka/streams/KeyValue;
      41: areturn

  private org.apache.kafka.streams.kstream.Windowed<K> windowedKey(org.apache.kafka.streams.kstream.Windowed<org.apache.kafka.common.utils.Bytes>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field serdes:Lorg/apache/kafka/streams/state/StateSerdes;
       4: aload_1
       5: invokevirtual #19                 // Method org/apache/kafka/streams/kstream/Windowed.key:()Ljava/lang/Object;
       8: checkcast     #20                 // class org/apache/kafka/common/utils/Bytes
      11: invokevirtual #21                 // Method org/apache/kafka/common/utils/Bytes.get:()[B
      14: invokevirtual #22                 // Method org/apache/kafka/streams/state/StateSerdes.keyFrom:([B)Ljava/lang/Object;
      17: astore_2
      18: new           #13                 // class org/apache/kafka/streams/kstream/Windowed
      21: dup
      22: aload_2
      23: aload_1
      24: invokevirtual #23                 // Method org/apache/kafka/streams/kstream/Windowed.window:()Lorg/apache/kafka/streams/kstream/Window;
      27: invokespecial #24                 // Method org/apache/kafka/streams/kstream/Windowed."<init>":(Ljava/lang/Object;Lorg/apache/kafka/streams/kstream/Window;)V
      30: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field iter:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #25,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.close:()V
       9: aload_0
      10: getfield      #3                  // Field sensor:Lorg/apache/kafka/common/metrics/Sensor;
      13: aload_0
      14: getfield      #8                  // Field time:Lorg/apache/kafka/common/utils/Time;
      17: invokeinterface #6,  1            // InterfaceMethod org/apache/kafka/common/utils/Time.nanoseconds:()J
      22: aload_0
      23: getfield      #7                  // Field startNs:J
      26: lsub
      27: l2d
      28: invokevirtual #26                 // Method org/apache/kafka/common/metrics/Sensor.record:(D)V
      31: goto          59
      34: astore_1
      35: aload_0
      36: getfield      #3                  // Field sensor:Lorg/apache/kafka/common/metrics/Sensor;
      39: aload_0
      40: getfield      #8                  // Field time:Lorg/apache/kafka/common/utils/Time;
      43: invokeinterface #6,  1            // InterfaceMethod org/apache/kafka/common/utils/Time.nanoseconds:()J
      48: aload_0
      49: getfield      #7                  // Field startNs:J
      52: lsub
      53: l2d
      54: invokevirtual #26                 // Method org/apache/kafka/common/metrics/Sensor.record:(D)V
      57: aload_1
      58: athrow
      59: return
    Exception table:
       from    to  target type
           0     9    34   any

  public org.apache.kafka.streams.kstream.Windowed<K> peekNextKey();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field iter:Lorg/apache/kafka/streams/state/KeyValueIterator;
       5: invokeinterface #27,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.peekNextKey:()Ljava/lang/Object;
      10: checkcast     #13                 // class org/apache/kafka/streams/kstream/Windowed
      13: invokespecial #14                 // Method windowedKey:(Lorg/apache/kafka/streams/kstream/Windowed;)Lorg/apache/kafka/streams/kstream/Windowed;
      16: areturn

  public java.lang.Object peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method peekNextKey:()Lorg/apache/kafka/streams/kstream/Windowed;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method next:()Lorg/apache/kafka/streams/KeyValue;
       4: areturn
}
