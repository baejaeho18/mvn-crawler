Compiled from "AbstractProcessorContext.java"
public abstract class org.apache.kafka.streams.processor.internals.AbstractProcessorContext implements org.apache.kafka.streams.processor.internals.InternalProcessorContext {
  public static final java.lang.String NONEXIST_TOPIC;

  private final org.apache.kafka.streams.processor.TaskId taskId;

  private final java.lang.String applicationId;

  private final org.apache.kafka.streams.StreamsConfig config;

  private final org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl metrics;

  private final org.apache.kafka.common.serialization.Serde<?> keySerde;

  private final org.apache.kafka.common.serialization.Serde<?> valueSerde;

  private boolean initialized;

  protected org.apache.kafka.streams.processor.internals.ProcessorRecordContext recordContext;

  protected org.apache.kafka.streams.processor.internals.ProcessorNode<?, ?> currentNode;

  private long currentSystemTimeMs;

  final org.apache.kafka.streams.processor.internals.StateManager stateManager;

  protected org.apache.kafka.streams.state.internals.ThreadCache cache;

  public org.apache.kafka.streams.processor.internals.AbstractProcessorContext(org.apache.kafka.streams.processor.TaskId, org.apache.kafka.streams.StreamsConfig, org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, org.apache.kafka.streams.processor.internals.StateManager, org.apache.kafka.streams.state.internals.ThreadCache);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
       9: aload_0
      10: aload_2
      11: ldc           #4                  // String application.id
      13: invokevirtual #5                  // Method org/apache/kafka/streams/StreamsConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
      16: putfield      #6                  // Field applicationId:Ljava/lang/String;
      19: aload_0
      20: aload_2
      21: putfield      #7                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      24: aload_0
      25: aload_3
      26: putfield      #8                  // Field metrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
      29: aload_0
      30: aload         4
      32: putfield      #9                  // Field stateManager:Lorg/apache/kafka/streams/processor/internals/StateManager;
      35: aload_0
      36: aload_2
      37: invokevirtual #10                 // Method org/apache/kafka/streams/StreamsConfig.defaultValueSerde:()Lorg/apache/kafka/common/serialization/Serde;
      40: putfield      #11                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
      43: aload_0
      44: aload_2
      45: invokevirtual #12                 // Method org/apache/kafka/streams/StreamsConfig.defaultKeySerde:()Lorg/apache/kafka/common/serialization/Serde;
      48: putfield      #13                 // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
      51: aload_0
      52: aload         5
      54: putfield      #14                 // Field cache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
      57: return

  public void setSystemTimeMs(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field currentSystemTimeMs:J
       5: return

  public long currentSystemTimeMs();
    Code:
       0: aload_0
       1: getfield      #15                 // Field currentSystemTimeMs:J
       4: lreturn

  public java.lang.String applicationId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field applicationId:Ljava/lang/String;
       4: areturn

  public org.apache.kafka.streams.processor.TaskId taskId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field taskId:Lorg/apache/kafka/streams/processor/TaskId;
       4: areturn

  public org.apache.kafka.common.serialization.Serde<?> keySerde();
    Code:
       0: aload_0
       1: getfield      #13                 // Field keySerde:Lorg/apache/kafka/common/serialization/Serde;
       4: areturn

  public org.apache.kafka.common.serialization.Serde<?> valueSerde();
    Code:
       0: aload_0
       1: getfield      #11                 // Field valueSerde:Lorg/apache/kafka/common/serialization/Serde;
       4: areturn

  public java.io.File stateDir();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateManager:Lorg/apache/kafka/streams/processor/internals/StateManager;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/StateManager.baseDir:()Ljava/io/File;
       9: areturn

  public org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl metrics();
    Code:
       0: aload_0
       1: getfield      #8                  // Field metrics:Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
       4: areturn

  public void register(org.apache.kafka.streams.processor.StateStore, org.apache.kafka.streams.processor.StateRestoreCallback);
    Code:
       0: aload_0
       1: getfield      #17                 // Field initialized:Z
       4: ifeq          17
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #19                 // String Can only create state stores during initialization.
      13: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: ldc           #21                 // String store must not be null
      20: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: getfield      #9                  // Field stateManager:Lorg/apache/kafka/streams/processor/internals/StateManager;
      28: aload_1
      29: aload_2
      30: invokeinterface #23,  3           // InterfaceMethod org/apache/kafka/streams/processor/internals/StateManager.registerStore:(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
      35: return

  public java.lang.String topic();
    Code:
       0: aload_0
       1: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: ifnonnull     17
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #25                 // String This should not happen as topic() should only be called while a record is processed
      13: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      21: invokevirtual #26                 // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.topic:()Ljava/lang/String;
      24: astore_1
      25: aload_1
      26: ldc           #28                 // String __null_topic__
      28: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifeq          36
      34: aconst_null
      35: areturn
      36: aload_1
      37: areturn

  public int partition();
    Code:
       0: aload_0
       1: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: ifnonnull     17
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String This should not happen as partition() should only be called while a record is processed
      13: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      21: invokevirtual #31                 // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.partition:()I
      24: ireturn

  public long offset();
    Code:
       0: aload_0
       1: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: ifnonnull     17
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #32                 // String This should not happen as offset() should only be called while a record is processed
      13: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      21: invokevirtual #33                 // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.offset:()J
      24: lreturn

  public org.apache.kafka.common.header.Headers headers();
    Code:
       0: aload_0
       1: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: ifnonnull     17
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #34                 // String This should not happen as headers() should only be called while a record is processed
      13: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      21: invokevirtual #35                 // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.headers:()Lorg/apache/kafka/common/header/Headers;
      24: areturn

  public long timestamp();
    Code:
       0: aload_0
       1: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: ifnonnull     17
       7: new           #18                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #36                 // String This should not happen as timestamp() should only be called while a record is processed
      13: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      21: invokevirtual #37                 // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.timestamp:()J
      24: lreturn

  public java.util.Map<java.lang.String, java.lang.Object> appConfigs();
    Code:
       0: new           #38                 // class java/util/HashMap
       3: dup
       4: invokespecial #39                 // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #7                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      13: invokevirtual #40                 // Method org/apache/kafka/streams/StreamsConfig.originals:()Ljava/util/Map;
      16: invokeinterface #41,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      21: aload_1
      22: aload_0
      23: getfield      #7                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
      26: invokevirtual #42                 // Method org/apache/kafka/streams/StreamsConfig.values:()Ljava/util/Map;
      29: invokeinterface #41,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      34: aload_1
      35: areturn

  public java.util.Map<java.lang.String, java.lang.Object> appConfigsWithPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field config:Lorg/apache/kafka/streams/StreamsConfig;
       4: aload_1
       5: invokevirtual #43                 // Method org/apache/kafka/streams/StreamsConfig.originalsWithPrefix:(Ljava/lang/String;)Ljava/util/Map;
       8: areturn

  public void setRecordContext(org.apache.kafka.streams.processor.internals.ProcessorRecordContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       5: return

  public org.apache.kafka.streams.processor.internals.ProcessorRecordContext recordContext();
    Code:
       0: aload_0
       1: getfield      #24                 // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: areturn

  public void setCurrentNode(org.apache.kafka.streams.processor.internals.ProcessorNode<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #44                 // Field currentNode:Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
       5: return

  public org.apache.kafka.streams.processor.internals.ProcessorNode<?, ?> currentNode();
    Code:
       0: aload_0
       1: getfield      #44                 // Field currentNode:Lorg/apache/kafka/streams/processor/internals/ProcessorNode;
       4: areturn

  public org.apache.kafka.streams.state.internals.ThreadCache cache();
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lorg/apache/kafka/streams/state/internals/ThreadCache;
       4: areturn

  public void initialize();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field initialized:Z
       5: return

  public void uninitialize();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #17                 // Field initialized:Z
       5: return

  public org.apache.kafka.streams.processor.internals.Task$TaskType taskType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stateManager:Lorg/apache/kafka/streams/processor/internals/StateManager;
       4: invokeinterface #45,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/StateManager.taskType:()Lorg/apache/kafka/streams/processor/internals/Task$TaskType;
       9: areturn

  public org.apache.kafka.streams.StreamsMetrics metrics();
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method metrics:()Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
       4: areturn
}
