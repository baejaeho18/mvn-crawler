Compiled from "StreamsProducer.java"
public class org.apache.kafka.streams.processor.internals.StreamsProducer {
  private final org.slf4j.Logger log;

  private final java.lang.String logPrefix;

  private final java.util.Map<java.lang.String, java.lang.Object> eosBetaProducerConfigs;

  private final org.apache.kafka.streams.KafkaClientSupplier clientSupplier;

  private final org.apache.kafka.streams.processor.internals.StreamThread$ProcessingMode processingMode;

  private org.apache.kafka.clients.producer.Producer<byte[], byte[]> producer;

  private boolean transactionInFlight;

  private boolean transactionInitialized;

  public org.apache.kafka.streams.processor.internals.StreamsProducer(org.apache.kafka.streams.StreamsConfig, java.lang.String, org.apache.kafka.streams.KafkaClientSupplier, org.apache.kafka.streams.processor.TaskId, java.util.UUID, org.apache.kafka.common.utils.LogContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field transactionInFlight:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field transactionInitialized:Z
      14: aload_1
      15: ldc           #4                  // String config cannot be null
      17: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_2
      22: ldc           #6                  // String threadId cannot be null
      24: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      27: pop
      28: aload_0
      29: aload_3
      30: ldc           #7                  // String clientSupplier cannot be null
      32: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      35: checkcast     #8                  // class org/apache/kafka/streams/KafkaClientSupplier
      38: putfield      #9                  // Field clientSupplier:Lorg/apache/kafka/streams/KafkaClientSupplier;
      41: aload_0
      42: aload         6
      44: ldc           #10                 // String logContext cannot be null
      46: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      49: checkcast     #11                 // class org/apache/kafka/common/utils/LogContext
      52: aload_0
      53: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      56: invokevirtual #13                 // Method org/apache/kafka/common/utils/LogContext.logger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      59: putfield      #14                 // Field log:Lorg/slf4j/Logger;
      62: aload_0
      63: aload         6
      65: invokevirtual #15                 // Method org/apache/kafka/common/utils/LogContext.logPrefix:()Ljava/lang/String;
      68: invokevirtual #16                 // Method java/lang/String.trim:()Ljava/lang/String;
      71: putfield      #17                 // Field logPrefix:Ljava/lang/String;
      74: aload_0
      75: aload_1
      76: invokestatic  #18                 // Method org/apache/kafka/streams/processor/internals/StreamThread.processingMode:(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      79: putfield      #19                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      82: getstatic     #20                 // Field org/apache/kafka/streams/processor/internals/StreamsProducer$1.$SwitchMap$org$apache$kafka$streams$processor$internals$StreamThread$ProcessingMode:[I
      85: aload_0
      86: getfield      #19                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      89: invokevirtual #21                 // Method org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.ordinal:()I
      92: iaload
      93: tableswitch   { // 1 to 3
                     1: 120
                     2: 138
                     3: 209
               default: 292
          }
     120: aload_1
     121: aload_2
     122: invokestatic  #22                 // Method org/apache/kafka/streams/processor/internals/ClientUtils.getThreadProducerClientId:(Ljava/lang/String;)Ljava/lang/String;
     125: invokevirtual #23                 // Method org/apache/kafka/streams/StreamsConfig.getProducerConfigs:(Ljava/lang/String;)Ljava/util/Map;
     128: astore        7
     130: aload_0
     131: aconst_null
     132: putfield      #24                 // Field eosBetaProducerConfigs:Ljava/util/Map;
     135: goto          322
     138: aload_1
     139: aload_2
     140: aload         4
     142: ldc           #25                 // String taskId cannot be null for exactly-once alpha
     144: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     147: checkcast     #26                 // class org/apache/kafka/streams/processor/TaskId
     150: invokestatic  #27                 // Method org/apache/kafka/streams/processor/internals/ClientUtils.getTaskProducerClientId:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/TaskId;)Ljava/lang/String;
     153: invokevirtual #23                 // Method org/apache/kafka/streams/StreamsConfig.getProducerConfigs:(Ljava/lang/String;)Ljava/util/Map;
     156: astore        7
     158: aload_1
     159: ldc           #29                 // String application.id
     161: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
     164: astore        8
     166: aload         7
     168: ldc           #32                 // String transactional.id
     170: new           #33                 // class java/lang/StringBuilder
     173: dup
     174: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     177: aload         8
     179: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: ldc           #36                 // String -
     184: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: aload         4
     189: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     192: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokeinterface #39,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     200: pop
     201: aload_0
     202: aconst_null
     203: putfield      #24                 // Field eosBetaProducerConfigs:Ljava/util/Map;
     206: goto          322
     209: aload_1
     210: aload_2
     211: invokestatic  #22                 // Method org/apache/kafka/streams/processor/internals/ClientUtils.getThreadProducerClientId:(Ljava/lang/String;)Ljava/lang/String;
     214: invokevirtual #23                 // Method org/apache/kafka/streams/StreamsConfig.getProducerConfigs:(Ljava/lang/String;)Ljava/util/Map;
     217: astore        7
     219: aload_1
     220: ldc           #29                 // String application.id
     222: invokevirtual #30                 // Method org/apache/kafka/streams/StreamsConfig.getString:(Ljava/lang/String;)Ljava/lang/String;
     225: astore        8
     227: aload         7
     229: ldc           #32                 // String transactional.id
     231: new           #33                 // class java/lang/StringBuilder
     234: dup
     235: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     238: aload         8
     240: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: ldc           #36                 // String -
     245: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: aload         5
     250: ldc           #40                 // String processId cannot be null for exactly-once beta
     252: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     255: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     258: ldc           #36                 // String -
     260: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     263: aload_2
     264: ldc           #41                 // String -StreamThread-
     266: invokevirtual #42                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     269: iconst_1
     270: aaload
     271: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     274: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     277: invokeinterface #39,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     282: pop
     283: aload_0
     284: aload         7
     286: putfield      #24                 // Field eosBetaProducerConfigs:Ljava/util/Map;
     289: goto          322
     292: new           #43                 // class java/lang/IllegalArgumentException
     295: dup
     296: new           #33                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     303: ldc           #44                 // String Unknown processing mode:
     305: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     308: aload_0
     309: getfield      #19                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
     312: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     315: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     318: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     321: athrow
     322: aload_0
     323: aload_3
     324: aload         7
     326: invokeinterface #46,  2           // InterfaceMethod org/apache/kafka/streams/KafkaClientSupplier.getProducer:(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
     331: putfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
     334: return

  private java.lang.String formatException(java.lang.String);
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #48                 // String  [
      13: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #17                 // Field logPrefix:Ljava/lang/String;
      20: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #49                 // String ]
      25: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  boolean eosEnabled();
    Code:
       0: aload_0
       1: getfield      #19                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       4: getstatic     #50                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_ALPHA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #19                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      14: getstatic     #51                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_BETA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  void initTransaction();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method eosEnabled:()Z
       4: ifne          21
       7: new           #53                 // class java/lang/IllegalStateException
      10: dup
      11: aload_0
      12: ldc           #54                 // String Exactly-once is not enabled
      14: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      17: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field transactionInitialized:Z
      25: ifne          77
      28: aload_0
      29: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      32: invokeinterface #57,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.initTransactions:()V
      37: aload_0
      38: iconst_1
      39: putfield      #3                  // Field transactionInitialized:Z
      42: goto          77
      45: astore_1
      46: aload_0
      47: getfield      #14                 // Field log:Lorg/slf4j/Logger;
      50: ldc           #59                 // String Timeout exception caught trying to initialize transactions. The broker is either slow or in bad state (like not having enough replicas) in responding to the request, or the connection to broker was interrupted sending the request or receiving the response. Will retry initializing the task in the next loop. Consider overwriting {} to a larger value to avoid timeout errors
      52: ldc           #60                 // String max.block.ms
      54: invokeinterface #61,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      59: aload_1
      60: athrow
      61: astore_1
      62: new           #63                 // class org/apache/kafka/streams/errors/StreamsException
      65: dup
      66: aload_0
      67: ldc           #64                 // String Error encountered trying to initialize transactions
      69: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      72: aload_1
      73: invokespecial #65                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      76: athrow
      77: return
    Exception table:
       from    to  target type
          28    42    45   Class org/apache/kafka/common/errors/TimeoutException
          28    42    61   Class org/apache/kafka/common/KafkaException

  public void resetProducer();
    Code:
       0: aload_0
       1: getfield      #19                 // Field processingMode:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       4: getstatic     #51                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_BETA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
       7: if_acmpeq     24
      10: new           #53                 // class java/lang/IllegalStateException
      13: dup
      14: aload_0
      15: ldc           #66                 // String Exactly-once beta is not enabled
      17: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      20: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      28: invokeinterface #67,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.close:()V
      33: aload_0
      34: aload_0
      35: getfield      #9                  // Field clientSupplier:Lorg/apache/kafka/streams/KafkaClientSupplier;
      38: aload_0
      39: getfield      #24                 // Field eosBetaProducerConfigs:Ljava/util/Map;
      42: invokeinterface #46,  2           // InterfaceMethod org/apache/kafka/streams/KafkaClientSupplier.getProducer:(Ljava/util/Map;)Lorg/apache/kafka/clients/producer/Producer;
      47: putfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      50: aload_0
      51: iconst_0
      52: putfield      #3                  // Field transactionInitialized:Z
      55: return

  private void maybeBeginTransaction() throws org.apache.kafka.common.errors.ProducerFencedException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method eosEnabled:()Z
       4: ifeq          63
       7: aload_0
       8: getfield      #2                  // Field transactionInFlight:Z
      11: ifne          63
      14: aload_0
      15: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      18: invokeinterface #68,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.beginTransaction:()V
      23: aload_0
      24: iconst_1
      25: putfield      #2                  // Field transactionInFlight:Z
      28: goto          63
      31: astore_1
      32: new           #70                 // class org/apache/kafka/streams/errors/TaskMigratedException
      35: dup
      36: aload_0
      37: ldc           #71                 // String Producer got fenced trying to begin a new transaction
      39: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      42: aload_1
      43: invokespecial #72                 // Method org/apache/kafka/streams/errors/TaskMigratedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      46: athrow
      47: astore_1
      48: new           #63                 // class org/apache/kafka/streams/errors/StreamsException
      51: dup
      52: aload_0
      53: ldc           #73                 // String Error encountered trying to begin a new transaction
      55: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      58: aload_1
      59: invokespecial #65                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      62: athrow
      63: return
    Exception table:
       from    to  target type
          14    28    31   Class org/apache/kafka/common/errors/ProducerFencedException
          14    28    47   Class org/apache/kafka/common/KafkaException

  java.util.concurrent.Future<org.apache.kafka.clients.producer.RecordMetadata> send(org.apache.kafka.clients.producer.ProducerRecord<byte[], byte[]>, org.apache.kafka.clients.producer.Callback);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method maybeBeginTransaction:()V
       4: aload_0
       5: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
       8: aload_1
       9: aload_2
      10: invokeinterface #75,  3           // InterfaceMethod org/apache/kafka/clients/producer/Producer.send:(Lorg/apache/kafka/clients/producer/ProducerRecord;Lorg/apache/kafka/clients/producer/Callback;)Ljava/util/concurrent/Future;
      15: areturn
      16: astore_3
      17: aload_3
      18: invokestatic  #76                 // Method isRecoverable:(Lorg/apache/kafka/common/KafkaException;)Z
      21: ifeq          42
      24: new           #70                 // class org/apache/kafka/streams/errors/TaskMigratedException
      27: dup
      28: aload_0
      29: ldc           #77                 // String Producer got fenced trying to send a record
      31: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      34: aload_3
      35: invokevirtual #78                 // Method org/apache/kafka/common/KafkaException.getCause:()Ljava/lang/Throwable;
      38: invokespecial #72                 // Method org/apache/kafka/streams/errors/TaskMigratedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      41: athrow
      42: new           #63                 // class org/apache/kafka/streams/errors/StreamsException
      45: dup
      46: aload_0
      47: ldc           #79                 // String Error encountered trying to send record to topic %s
      49: iconst_1
      50: anewarray     #80                 // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_1
      56: invokevirtual #81                 // Method org/apache/kafka/clients/producer/ProducerRecord.topic:()Ljava/lang/String;
      59: aastore
      60: invokestatic  #82                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      63: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      66: aload_3
      67: invokespecial #65                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
    Exception table:
       from    to  target type
           4    15    16   Class org/apache/kafka/common/KafkaException

  private static boolean isRecoverable(org.apache.kafka.common.KafkaException);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method org/apache/kafka/common/KafkaException.getCause:()Ljava/lang/Throwable;
       4: instanceof    #69                 // class org/apache/kafka/common/errors/ProducerFencedException
       7: ifne          20
      10: aload_0
      11: invokevirtual #78                 // Method org/apache/kafka/common/KafkaException.getCause:()Ljava/lang/Throwable;
      14: instanceof    #83                 // class org/apache/kafka/common/errors/UnknownProducerIdException
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  void commitTransaction(java.util.Map<org.apache.kafka.common.TopicPartition, org.apache.kafka.clients.consumer.OffsetAndMetadata>, org.apache.kafka.clients.consumer.ConsumerGroupMetadata) throws org.apache.kafka.common.errors.ProducerFencedException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method eosEnabled:()Z
       4: ifne          21
       7: new           #53                 // class java/lang/IllegalStateException
      10: dup
      11: aload_0
      12: ldc           #54                 // String Exactly-once is not enabled
      14: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      17: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: invokespecial #74                 // Method maybeBeginTransaction:()V
      25: aload_0
      26: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      29: aload_1
      30: aload_2
      31: invokeinterface #84,  3           // InterfaceMethod org/apache/kafka/clients/producer/Producer.sendOffsetsToTransaction:(Ljava/util/Map;Lorg/apache/kafka/clients/consumer/ConsumerGroupMetadata;)V
      36: aload_0
      37: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      40: invokeinterface #85,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.commitTransaction:()V
      45: aload_0
      46: iconst_0
      47: putfield      #2                  // Field transactionInFlight:Z
      50: goto          101
      53: astore_3
      54: new           #70                 // class org/apache/kafka/streams/errors/TaskMigratedException
      57: dup
      58: aload_0
      59: ldc           #87                 // String Producer got fenced trying to commit a transaction
      61: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      64: aload_3
      65: invokespecial #72                 // Method org/apache/kafka/streams/errors/TaskMigratedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      68: athrow
      69: astore_3
      70: new           #63                 // class org/apache/kafka/streams/errors/StreamsException
      73: dup
      74: aload_0
      75: ldc           #88                 // String Timed out trying to commit a transaction
      77: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      80: aload_3
      81: invokespecial #65                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: athrow
      85: astore_3
      86: new           #63                 // class org/apache/kafka/streams/errors/StreamsException
      89: dup
      90: aload_0
      91: ldc           #89                 // String Error encountered trying to commit a transaction
      93: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      96: aload_3
      97: invokespecial #65                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     100: athrow
     101: return
    Exception table:
       from    to  target type
          25    50    53   Class org/apache/kafka/common/errors/ProducerFencedException
          25    50    53   Class org/apache/kafka/clients/consumer/CommitFailedException
          25    50    69   Class org/apache/kafka/common/errors/TimeoutException
          25    50    85   Class org/apache/kafka/common/KafkaException

  void abortTransaction() throws org.apache.kafka.common.errors.ProducerFencedException;
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method eosEnabled:()Z
       4: ifne          21
       7: new           #53                 // class java/lang/IllegalStateException
      10: dup
      11: aload_0
      12: ldc           #54                 // String Exactly-once is not enabled
      14: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      17: invokespecial #56                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #2                  // Field transactionInFlight:Z
      25: ifeq          80
      28: aload_0
      29: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
      32: invokeinterface #90,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.abortTransaction:()V
      37: goto          75
      40: astore_1
      41: aload_0
      42: getfield      #14                 // Field log:Lorg/slf4j/Logger;
      45: ldc           #91                 // String Encountered {} while aborting the transaction; this is expected and hence swallowed
      47: aload_1
      48: invokevirtual #92                 // Method org/apache/kafka/common/errors/ProducerFencedException.getMessage:()Ljava/lang/String;
      51: invokeinterface #93,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      56: goto          75
      59: astore_1
      60: new           #63                 // class org/apache/kafka/streams/errors/StreamsException
      63: dup
      64: aload_0
      65: ldc           #94                 // String Error encounter trying to abort a transaction
      67: invokespecial #55                 // Method formatException:(Ljava/lang/String;)Ljava/lang/String;
      70: aload_1
      71: invokespecial #65                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: athrow
      75: aload_0
      76: iconst_0
      77: putfield      #2                  // Field transactionInFlight:Z
      80: return
    Exception table:
       from    to  target type
          28    37    40   Class org/apache/kafka/common/errors/ProducerFencedException
          28    37    59   Class org/apache/kafka/common/KafkaException

  java.util.List<org.apache.kafka.common.PartitionInfo> partitionsFor(java.lang.String) throws org.apache.kafka.common.errors.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
       4: aload_1
       5: invokeinterface #95,  2           // InterfaceMethod org/apache/kafka/clients/producer/Producer.partitionsFor:(Ljava/lang/String;)Ljava/util/List;
      10: areturn

  java.util.Map<org.apache.kafka.common.MetricName, ? extends org.apache.kafka.common.Metric> metrics();
    Code:
       0: aload_0
       1: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #96,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.metrics:()Ljava/util/Map;
       9: areturn

  void flush();
    Code:
       0: aload_0
       1: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #97,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.flush:()V
       9: return

  void close();
    Code:
       0: aload_0
       1: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
       4: invokeinterface #67,  1           // InterfaceMethod org/apache/kafka/clients/producer/Producer.close:()V
       9: return

  org.apache.kafka.clients.producer.Producer<byte[], byte[]> kafkaProducer();
    Code:
       0: aload_0
       1: getfield      #47                 // Field producer:Lorg/apache/kafka/clients/producer/Producer;
       4: areturn
}
