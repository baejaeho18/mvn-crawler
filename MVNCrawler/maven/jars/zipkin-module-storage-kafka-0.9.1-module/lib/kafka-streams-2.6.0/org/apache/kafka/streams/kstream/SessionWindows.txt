Compiled from "SessionWindows.java"
public final class org.apache.kafka.streams.kstream.SessionWindows {
  private final long gapMs;

  private final long maintainDurationMs;

  private final long graceMs;

  private org.apache.kafka.streams.kstream.SessionWindows(long, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #3                  // Field gapMs:J
       9: aload_0
      10: lload_3
      11: putfield      #4                  // Field maintainDurationMs:J
      14: aload_0
      15: lload         5
      17: putfield      #5                  // Field graceMs:J
      20: return

  public static org.apache.kafka.streams.kstream.SessionWindows with(long);
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifgt          16
       6: new           #6                  // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #7                  // String Gap time (inactivityGapMs) cannot be zero or negative.
      12: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: new           #9                  // class org/apache/kafka/streams/kstream/SessionWindows
      19: dup
      20: lload_0
      21: ldc2_w        #10                 // long 86400000l
      24: ldc2_w        #12                 // long -1l
      27: invokespecial #14                 // Method "<init>":(JJJ)V
      30: areturn

  public static org.apache.kafka.streams.kstream.SessionWindows with(java.time.Duration);
    Code:
       0: aload_0
       1: ldc           #15                 // String inactivityGap
       3: invokestatic  #16                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokestatic  #17                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      12: invokestatic  #18                 // Method with:(J)Lorg/apache/kafka/streams/kstream/SessionWindows;
      15: areturn

  public org.apache.kafka.streams.kstream.SessionWindows until(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #3                  // Field gapMs:J
       5: lcmp
       6: ifge          19
       9: new           #6                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #19                 // String Window retention time (durationMs) cannot be smaller than window gap.
      15: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #9                  // class org/apache/kafka/streams/kstream/SessionWindows
      22: dup
      23: aload_0
      24: getfield      #3                  // Field gapMs:J
      27: lload_1
      28: aload_0
      29: getfield      #5                  // Field graceMs:J
      32: invokespecial #14                 // Method "<init>":(JJJ)V
      35: areturn

  public org.apache.kafka.streams.kstream.SessionWindows grace(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #20                 // String afterWindowEnd
       3: invokestatic  #16                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokestatic  #17                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      12: lstore_3
      13: lload_3
      14: lconst_0
      15: lcmp
      16: ifge          29
      19: new           #6                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #21                 // String Grace period must not be negative.
      25: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #9                  // class org/apache/kafka/streams/kstream/SessionWindows
      32: dup
      33: aload_0
      34: getfield      #3                  // Field gapMs:J
      37: aload_0
      38: getfield      #4                  // Field maintainDurationMs:J
      41: lload_3
      42: invokespecial #14                 // Method "<init>":(JJJ)V
      45: areturn

  public long gracePeriodMs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field graceMs:J
       4: ldc2_w        #12                 // long -1l
       7: lcmp
       8: ifeq          18
      11: aload_0
      12: getfield      #5                  // Field graceMs:J
      15: goto          27
      18: aload_0
      19: invokevirtual #22                 // Method maintainMs:()J
      22: aload_0
      23: invokevirtual #23                 // Method inactivityGap:()J
      26: lsub
      27: lreturn

  public long inactivityGap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field gapMs:J
       4: lreturn

  public long maintainMs();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maintainDurationMs:J
       4: aload_0
       5: getfield      #3                  // Field gapMs:J
       8: invokestatic  #24                 // Method java/lang/Math.max:(JJ)J
      11: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #9                  // class org/apache/kafka/streams/kstream/SessionWindows
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field gapMs:J
      33: aload_2
      34: getfield      #3                  // Field gapMs:J
      37: lcmp
      38: ifne          69
      41: aload_0
      42: getfield      #4                  // Field maintainDurationMs:J
      45: aload_2
      46: getfield      #4                  // Field maintainDurationMs:J
      49: lcmp
      50: ifne          69
      53: aload_0
      54: getfield      #5                  // Field graceMs:J
      57: aload_2
      58: getfield      #5                  // Field graceMs:J
      61: lcmp
      62: ifne          69
      65: iconst_1
      66: goto          70
      69: iconst_0
      70: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #26                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #3                  // Field gapMs:J
      10: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #4                  // Field maintainDurationMs:J
      20: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      23: aastore
      24: dup
      25: iconst_2
      26: aload_0
      27: getfield      #5                  // Field graceMs:J
      30: invokestatic  #27                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: aastore
      34: invokestatic  #28                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      37: ireturn

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #31                 // String SessionWindows{gapMs=
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #3                  // Field gapMs:J
      16: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #34                 // String , maintainDurationMs=
      21: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field maintainDurationMs:J
      28: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #35                 // String , graceMs=
      33: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #5                  // Field graceMs:J
      40: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: bipush        125
      45: invokevirtual #36                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
}
