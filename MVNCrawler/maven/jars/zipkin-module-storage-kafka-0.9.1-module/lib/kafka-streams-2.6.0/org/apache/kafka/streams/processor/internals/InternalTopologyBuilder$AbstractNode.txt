Compiled from "InternalTopologyBuilder.java"
public abstract class org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$AbstractNode implements org.apache.kafka.streams.TopologyDescription$Node {
  final java.lang.String name;

  final java.util.Set<org.apache.kafka.streams.TopologyDescription$Node> predecessors;

  final java.util.Set<org.apache.kafka.streams.TopologyDescription$Node> successors;

  int size;

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$AbstractNode(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeSet
       8: dup
       9: invokestatic  #3                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$1700:()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$NodeComparator;
      12: invokespecial #4                  // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      15: putfield      #5                  // Field predecessors:Ljava/util/Set;
      18: aload_0
      19: new           #2                  // class java/util/TreeSet
      22: dup
      23: invokestatic  #3                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$1700:()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$NodeComparator;
      26: invokespecial #4                  // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      29: putfield      #6                  // Field successors:Ljava/util/Set;
      32: aload_1
      33: ldc           #7                  // String name cannot be null
      35: invokestatic  #8                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: aload_1
      41: putfield      #9                  // Field name:Ljava/lang/String;
      44: aload_0
      45: iconst_1
      46: putfield      #10                 // Field size:I
      49: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #9                  // Field name:Ljava/lang/String;
       4: areturn

  public java.util.Set<org.apache.kafka.streams.TopologyDescription$Node> predecessors();
    Code:
       0: aload_0
       1: getfield      #5                  // Field predecessors:Ljava/util/Set;
       4: invokestatic  #11                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.util.Set<org.apache.kafka.streams.TopologyDescription$Node> successors();
    Code:
       0: aload_0
       1: getfield      #6                  // Field successors:Ljava/util/Set;
       4: invokestatic  #11                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public void addPredecessor(org.apache.kafka.streams.TopologyDescription$Node);
    Code:
       0: aload_0
       1: getfield      #5                  // Field predecessors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void addSuccessor(org.apache.kafka.streams.TopologyDescription$Node);
    Code:
       0: aload_0
       1: getfield      #6                  // Field successors:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return
}
