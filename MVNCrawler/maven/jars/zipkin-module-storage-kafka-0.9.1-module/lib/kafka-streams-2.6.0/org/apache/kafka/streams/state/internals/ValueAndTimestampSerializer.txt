Compiled from "ValueAndTimestampSerializer.java"
public class org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer<V> implements org.apache.kafka.common.serialization.Serializer<org.apache.kafka.streams.state.ValueAndTimestamp<V>> {
  public final org.apache.kafka.common.serialization.Serializer<V> valueSerializer;

  private final org.apache.kafka.common.serialization.Serializer<java.lang.Long> timestampSerializer;

  org.apache.kafka.streams.state.internals.ValueAndTimestampSerializer(org.apache.kafka.common.serialization.Serializer<V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field valueSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      14: aload_0
      15: new           #4                  // class org/apache/kafka/common/serialization/LongSerializer
      18: dup
      19: invokespecial #5                  // Method org/apache/kafka/common/serialization/LongSerializer."<init>":()V
      22: putfield      #6                  // Field timestampSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      25: return

  private static boolean skipTimestampAndCompareValues(byte[], byte[]);
    Code:
       0: bipush        8
       2: istore_2
       3: iload_2
       4: aload_0
       5: arraylength
       6: if_icmpge     26
       9: aload_0
      10: iload_2
      11: baload
      12: aload_1
      13: iload_2
      14: baload
      15: if_icmpeq     20
      18: iconst_0
      19: ireturn
      20: iinc          2, 1
      23: goto          3
      26: iconst_1
      27: ireturn

  private static long extractTimestamp(byte[]);
    Code:
       0: bipush        8
       2: newarray       byte
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: bipush        8
      10: if_icmpge     25
      13: aload_1
      14: iload_2
      15: aload_0
      16: iload_2
      17: baload
      18: bastore
      19: iinc          2, 1
      22: goto          7
      25: aload_1
      26: invokestatic  #8                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      29: invokevirtual #9                  // Method java/nio/ByteBuffer.getLong:()J
      32: lreturn

  public static boolean compareValuesAndCheckForIncreasingTimestamp(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: ifnull        15
      11: aload_1
      12: ifnonnull     17
      15: iconst_0
      16: ireturn
      17: aload_0
      18: arraylength
      19: istore_2
      20: aload_1
      21: arraylength
      22: iload_2
      23: if_icmpeq     28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: invokestatic  #10                 // Method extractTimestamp:([B)J
      32: lstore_3
      33: aload_1
      34: invokestatic  #10                 // Method extractTimestamp:([B)J
      37: lstore        5
      39: lload         5
      41: lload_3
      42: lcmp
      43: ifge          48
      46: iconst_0
      47: ireturn
      48: aload_0
      49: aload_1
      50: invokestatic  #11                 // Method skipTimestampAndCompareValues:([B[B)Z
      53: ireturn

  public void configure(java.util.Map<java.lang.String, ?>, boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueSerializer:Lorg/apache/kafka/common/serialization/Serializer;
       4: aload_1
       5: iload_2
       6: invokeinterface #12,  3           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.configure:(Ljava/util/Map;Z)V
      11: aload_0
      12: getfield      #6                  // Field timestampSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      15: aload_1
      16: iload_2
      17: invokeinterface #12,  3           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.configure:(Ljava/util/Map;Z)V
      22: return

  public byte[] serialize(java.lang.String, org.apache.kafka.streams.state.ValueAndTimestamp<V>);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #13                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.value:()Ljava/lang/Object;
      12: aload_2
      13: invokevirtual #14                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.timestamp:()J
      16: invokevirtual #15                 // Method serialize:(Ljava/lang/String;Ljava/lang/Object;J)[B
      19: areturn

  public byte[] serialize(java.lang.String, V, long);
    Code:
       0: aload_2
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #3                  // Field valueSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      10: aload_1
      11: aload_2
      12: invokeinterface #16,  3           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.serialize:(Ljava/lang/String;Ljava/lang/Object;)[B
      17: astore        5
      19: aload         5
      21: ifnonnull     26
      24: aconst_null
      25: areturn
      26: aload_0
      27: getfield      #6                  // Field timestampSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      30: aload_1
      31: lload_3
      32: invokestatic  #17                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: invokeinterface #16,  3           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.serialize:(Ljava/lang/String;Ljava/lang/Object;)[B
      40: astore        6
      42: aload         6
      44: arraylength
      45: aload         5
      47: arraylength
      48: iadd
      49: invokestatic  #18                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      52: aload         6
      54: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      57: aload         5
      59: invokevirtual #19                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      62: invokevirtual #20                 // Method java/nio/ByteBuffer.array:()[B
      65: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueSerializer:Lorg/apache/kafka/common/serialization/Serializer;
       4: invokeinterface #21,  1           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.close:()V
       9: aload_0
      10: getfield      #6                  // Field timestampSerializer:Lorg/apache/kafka/common/serialization/Serializer;
      13: invokeinterface #21,  1           // InterfaceMethod org/apache/kafka/common/serialization/Serializer.close:()V
      18: return

  public byte[] serialize(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #22                 // class org/apache/kafka/streams/state/ValueAndTimestamp
       6: invokevirtual #23                 // Method serialize:(Ljava/lang/String;Lorg/apache/kafka/streams/state/ValueAndTimestamp;)[B
       9: areturn
}
