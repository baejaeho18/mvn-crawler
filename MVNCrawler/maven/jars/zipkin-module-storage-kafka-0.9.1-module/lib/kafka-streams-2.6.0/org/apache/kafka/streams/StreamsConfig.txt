Compiled from "StreamsConfig.java"
public class org.apache.kafka.streams.StreamsConfig extends org.apache.kafka.common.config.AbstractConfig {
  private static final org.slf4j.Logger log;

  private static final org.apache.kafka.common.config.ConfigDef CONFIG;

  private final boolean eosEnabled;

  private static final long DEFAULT_COMMIT_INTERVAL_MS;

  private static final long EOS_DEFAULT_COMMIT_INTERVAL_MS;

  public static final int DUMMY_THREAD_INDEX;

  public static final java.lang.String TOPIC_PREFIX;

  public static final java.lang.String CONSUMER_PREFIX;

  public static final java.lang.String MAIN_CONSUMER_PREFIX;

  public static final java.lang.String RESTORE_CONSUMER_PREFIX;

  public static final java.lang.String GLOBAL_CONSUMER_PREFIX;

  public static final java.lang.String PRODUCER_PREFIX;

  public static final java.lang.String ADMIN_CLIENT_PREFIX;

  public static final java.lang.String NO_OPTIMIZATION;

  public static final java.lang.String OPTIMIZE;

  public static final java.lang.String UPGRADE_FROM_0100;

  public static final java.lang.String UPGRADE_FROM_0101;

  public static final java.lang.String UPGRADE_FROM_0102;

  public static final java.lang.String UPGRADE_FROM_0110;

  public static final java.lang.String UPGRADE_FROM_10;

  public static final java.lang.String UPGRADE_FROM_11;

  public static final java.lang.String UPGRADE_FROM_20;

  public static final java.lang.String UPGRADE_FROM_21;

  public static final java.lang.String UPGRADE_FROM_22;

  public static final java.lang.String UPGRADE_FROM_23;

  public static final java.lang.String AT_LEAST_ONCE;

  public static final java.lang.String EXACTLY_ONCE;

  public static final java.lang.String EXACTLY_ONCE_BETA;

  public static final java.lang.String METRICS_0100_TO_24;

  public static final java.lang.String METRICS_LATEST;

  public static final java.lang.String ACCEPTABLE_RECOVERY_LAG_CONFIG;

  private static final java.lang.String ACCEPTABLE_RECOVERY_LAG_DOC;

  public static final java.lang.String APPLICATION_ID_CONFIG;

  private static final java.lang.String APPLICATION_ID_DOC;

  public static final java.lang.String APPLICATION_SERVER_CONFIG;

  private static final java.lang.String APPLICATION_SERVER_DOC;

  public static final java.lang.String BOOTSTRAP_SERVERS_CONFIG;

  public static final java.lang.String BUFFERED_RECORDS_PER_PARTITION_CONFIG;

  private static final java.lang.String BUFFERED_RECORDS_PER_PARTITION_DOC;

  public static final java.lang.String BUILT_IN_METRICS_VERSION_CONFIG;

  private static final java.lang.String BUILT_IN_METRICS_VERSION_DOC;

  public static final java.lang.String CACHE_MAX_BYTES_BUFFERING_CONFIG;

  private static final java.lang.String CACHE_MAX_BYTES_BUFFERING_DOC;

  public static final java.lang.String CLIENT_ID_CONFIG;

  private static final java.lang.String CLIENT_ID_DOC;

  public static final java.lang.String COMMIT_INTERVAL_MS_CONFIG;

  private static final java.lang.String COMMIT_INTERVAL_MS_DOC;

  public static final java.lang.String MAX_TASK_IDLE_MS_CONFIG;

  private static final java.lang.String MAX_TASK_IDLE_MS_DOC;

  public static final java.lang.String CONNECTIONS_MAX_IDLE_MS_CONFIG;

  public static final java.lang.String DEFAULT_DESERIALIZATION_EXCEPTION_HANDLER_CLASS_CONFIG;

  private static final java.lang.String DEFAULT_DESERIALIZATION_EXCEPTION_HANDLER_CLASS_DOC;

  public static final java.lang.String DEFAULT_PRODUCTION_EXCEPTION_HANDLER_CLASS_CONFIG;

  private static final java.lang.String DEFAULT_PRODUCTION_EXCEPTION_HANDLER_CLASS_DOC;

  public static final java.lang.String DEFAULT_WINDOWED_KEY_SERDE_INNER_CLASS;

  public static final java.lang.String DEFAULT_WINDOWED_VALUE_SERDE_INNER_CLASS;

  public static final java.lang.String DEFAULT_KEY_SERDE_CLASS_CONFIG;

  private static final java.lang.String DEFAULT_KEY_SERDE_CLASS_DOC;

  public static final java.lang.String DEFAULT_VALUE_SERDE_CLASS_CONFIG;

  private static final java.lang.String DEFAULT_VALUE_SERDE_CLASS_DOC;

  public static final java.lang.String DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_CONFIG;

  private static final java.lang.String DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_DOC;

  public static final java.lang.String MAX_WARMUP_REPLICAS_CONFIG;

  private static final java.lang.String MAX_WARMUP_REPLICAS_DOC;

  public static final java.lang.String METADATA_MAX_AGE_CONFIG;

  public static final java.lang.String METRICS_NUM_SAMPLES_CONFIG;

  public static final java.lang.String METRICS_RECORDING_LEVEL_CONFIG;

  public static final java.lang.String METRIC_REPORTER_CLASSES_CONFIG;

  public static final java.lang.String METRICS_SAMPLE_WINDOW_MS_CONFIG;

  public static final java.lang.String NUM_STANDBY_REPLICAS_CONFIG;

  private static final java.lang.String NUM_STANDBY_REPLICAS_DOC;

  public static final java.lang.String NUM_STREAM_THREADS_CONFIG;

  private static final java.lang.String NUM_STREAM_THREADS_DOC;

  public static final java.lang.String POLL_MS_CONFIG;

  private static final java.lang.String POLL_MS_DOC;

  public static final java.lang.String PROBING_REBALANCE_INTERVAL_MS_CONFIG;

  private static final java.lang.String PROBING_REBALANCE_INTERVAL_MS_DOC;

  public static final java.lang.String PROCESSING_GUARANTEE_CONFIG;

  private static final java.lang.String PROCESSING_GUARANTEE_DOC;

  public static final java.lang.String RECEIVE_BUFFER_CONFIG;

  public static final java.lang.String RECONNECT_BACKOFF_MS_CONFIG;

  public static final java.lang.String RECONNECT_BACKOFF_MAX_MS_CONFIG;

  public static final java.lang.String REPLICATION_FACTOR_CONFIG;

  private static final java.lang.String REPLICATION_FACTOR_DOC;

  public static final java.lang.String REQUEST_TIMEOUT_MS_CONFIG;

  public static final java.lang.String RETRIES_CONFIG;

  public static final java.lang.String RETRY_BACKOFF_MS_CONFIG;

  public static final java.lang.String ROCKSDB_CONFIG_SETTER_CLASS_CONFIG;

  private static final java.lang.String ROCKSDB_CONFIG_SETTER_CLASS_DOC;

  public static final java.lang.String SECURITY_PROTOCOL_CONFIG;

  public static final java.lang.String SEND_BUFFER_CONFIG;

  public static final java.lang.String STATE_CLEANUP_DELAY_MS_CONFIG;

  private static final java.lang.String STATE_CLEANUP_DELAY_MS_DOC;

  public static final java.lang.String STATE_DIR_CONFIG;

  private static final java.lang.String STATE_DIR_DOC;

  public static final java.lang.String TOPOLOGY_OPTIMIZATION;

  private static final java.lang.String TOPOLOGY_OPTIMIZATION_DOC;

  public static final java.lang.String UPGRADE_FROM_CONFIG;

  private static final java.lang.String UPGRADE_FROM_DOC;

  public static final java.lang.String WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_CONFIG;

  private static final java.lang.String WINDOW_STORE_CHANGE_LOG_ADDITIONAL_RETENTION_MS_DOC;

  public static final java.lang.String PARTITION_GROUPER_CLASS_CONFIG;

  private static final java.lang.String PARTITION_GROUPER_CLASS_DOC;

  private static final java.lang.String[] NON_CONFIGURABLE_CONSUMER_DEFAULT_CONFIGS;

  private static final java.lang.String[] NON_CONFIGURABLE_CONSUMER_EOS_CONFIGS;

  private static final java.lang.String[] NON_CONFIGURABLE_PRODUCER_EOS_CONFIGS;

  private static final java.util.Map<java.lang.String, java.lang.Object> PRODUCER_DEFAULT_OVERRIDES;

  private static final java.util.Map<java.lang.String, java.lang.Object> PRODUCER_EOS_OVERRIDES;

  private static final java.util.Map<java.lang.String, java.lang.Object> CONSUMER_DEFAULT_OVERRIDES;

  private static final java.util.Map<java.lang.String, java.lang.Object> CONSUMER_EOS_OVERRIDES;

  public static java.lang.String consumerPrefix(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #5                  // String consumer.
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String mainConsumerPrefix(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #8                  // String main.consumer.
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String restoreConsumerPrefix(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #9                  // String restore.consumer.
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String globalConsumerPrefix(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #10                 // String global.consumer.
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String producerPrefix(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #11                 // String producer.
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String adminClientPrefix(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #12                 // String admin.
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static java.lang.String topicPrefix(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #13                 // String topic.
       9: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  public static org.apache.kafka.common.config.ConfigDef configDef();
    Code:
       0: new           #14                 // class org/apache/kafka/common/config/ConfigDef
       3: dup
       4: getstatic     #15                 // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
       7: invokespecial #16                 // Method org/apache/kafka/common/config/ConfigDef."<init>":(Lorg/apache/kafka/common/config/ConfigDef;)V
      10: areturn

  public org.apache.kafka.streams.StreamsConfig(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #17                 // Method "<init>":(Ljava/util/Map;Z)V
       6: return

  protected org.apache.kafka.streams.StreamsConfig(java.util.Map<?, ?>, boolean);
    Code:
       0: aload_0
       1: getstatic     #15                 // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
       4: aload_1
       5: iload_2
       6: invokespecial #18                 // Method org/apache/kafka/common/config/AbstractConfig."<init>":(Lorg/apache/kafka/common/config/ConfigDef;Ljava/util/Map;Z)V
       9: aload_0
      10: aload_0
      11: invokestatic  #19                 // Method org/apache/kafka/streams/processor/internals/StreamThread.eosEnabled:(Lorg/apache/kafka/streams/StreamsConfig;)Z
      14: putfield      #20                 // Field eosEnabled:Z
      17: aload_1
      18: ldc           #21                 // String partition.grouper
      20: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      25: ifeq          40
      28: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      31: ldc           #24                 // String Configuration parameter `{}` is deprecated and will be removed in 3.0.0 release.
      33: ldc           #21                 // String partition.grouper
      35: invokeinterface #25,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      40: return

  protected java.util.Map<java.lang.String, java.lang.Object> postProcessParsedConfig(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method org/apache/kafka/clients/CommonClientConfigs.postProcessReconnectBackoffConfigs:(Lorg/apache/kafka/common/config/AbstractConfig;Ljava/util/Map;)Ljava/util/Map;
       5: astore_2
       6: aload_0
       7: invokestatic  #19                 // Method org/apache/kafka/streams/processor/internals/StreamThread.eosEnabled:(Lorg/apache/kafka/streams/StreamsConfig;)Z
      10: ifeq          60
      13: aload_0
      14: invokevirtual #27                 // Method originals:()Ljava/util/Map;
      17: ldc           #28                 // String commit.interval.ms
      19: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      24: ifne          60
      27: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
      30: ldc           #29                 // String Using {} default value of {} as exactly once is enabled.
      32: ldc           #28                 // String commit.interval.ms
      34: ldc2_w        #30                 // long 100l
      37: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      40: invokeinterface #33,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      45: aload_2
      46: ldc           #28                 // String commit.interval.ms
      48: ldc2_w        #30                 // long 100l
      51: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      54: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_2
      61: areturn

  private java.util.Map<java.lang.String, java.lang.Object> getCommonConsumerConfigs();
    Code:
       0: aload_0
       1: ldc           #5                  // String consumer.
       3: invokestatic  #35                 // Method org/apache/kafka/clients/consumer/ConsumerConfig.configNames:()Ljava/util/Set;
       6: invokespecial #36                 // Method getClientPropsWithPrefix:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Map;
       9: astore_1
      10: aload_0
      11: aload_1
      12: getstatic     #37                 // Field NON_CONFIGURABLE_CONSUMER_DEFAULT_CONFIGS:[Ljava/lang/String;
      15: invokespecial #38                 // Method checkIfUnexpectedUserSpecifiedConsumerConfig:(Ljava/util/Map;[Ljava/lang/String;)V
      18: aload_0
      19: aload_1
      20: getstatic     #39                 // Field NON_CONFIGURABLE_CONSUMER_EOS_CONFIGS:[Ljava/lang/String;
      23: invokespecial #38                 // Method checkIfUnexpectedUserSpecifiedConsumerConfig:(Ljava/util/Map;[Ljava/lang/String;)V
      26: new           #40                 // class java/util/HashMap
      29: dup
      30: aload_0
      31: getfield      #20                 // Field eosEnabled:Z
      34: ifeq          43
      37: getstatic     #41                 // Field CONSUMER_EOS_OVERRIDES:Ljava/util/Map;
      40: goto          46
      43: getstatic     #42                 // Field CONSUMER_DEFAULT_OVERRIDES:Ljava/util/Map;
      46: invokespecial #43                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      49: astore_2
      50: aload_0
      51: invokestatic  #44                 // Method org/apache/kafka/streams/processor/internals/StreamThread.processingMode:(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      54: getstatic     #45                 // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_BETA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      57: if_acmpne     73
      60: aload_2
      61: ldc           #46                 // String internal.throw.on.fetch.stable.offset.unsupported
      63: iconst_1
      64: invokestatic  #47                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      67: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: aload_2
      74: aload_0
      75: invokespecial #48                 // Method getClientCustomProps:()Ljava/util/Map;
      78: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      83: aload_2
      84: aload_1
      85: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      90: aload_2
      91: ldc           #51                 // String bootstrap.servers
      93: aload_0
      94: invokevirtual #27                 // Method originals:()Ljava/util/Map;
      97: ldc           #51                 // String bootstrap.servers
      99: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     104: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_2
     111: areturn

  private void checkIfUnexpectedUserSpecifiedConsumerConfig(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String[]);
    Code:
       0: ldc           #53                 // String Unexpected user-specified %s config: %s found. %sUser setting (%s) will be ignored and the Streams default setting (%s) will be used
       2: astore_3
       3: new           #3                  // class java/lang/StringBuilder
       6: dup
       7: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #54                 // String processing.guarantee is set to
      12: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: ldc           #55                 // String processing.guarantee
      18: invokevirtual #56                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
      21: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #57                 // String . Hence,
      26: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: astore        4
      34: aload_2
      35: astore        5
      37: aload         5
      39: arraylength
      40: istore        6
      42: iconst_0
      43: istore        7
      45: iload         7
      47: iload         6
      49: if_icmpge     465
      52: aload         5
      54: iload         7
      56: aaload
      57: astore        8
      59: aload_1
      60: aload         8
      62: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      67: ifeq          459
      70: getstatic     #42                 // Field CONSUMER_DEFAULT_OVERRIDES:Ljava/util/Map;
      73: aload         8
      75: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      80: ifeq          175
      83: aload_1
      84: aload         8
      86: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      91: getstatic     #42                 // Field CONSUMER_DEFAULT_OVERRIDES:Ljava/util/Map;
      94: aload         8
      96: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: invokevirtual #58                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     104: ifne          459
     107: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
     110: ldc           #53                 // String Unexpected user-specified %s config: %s found. %sUser setting (%s) will be ignored and the Streams default setting (%s) will be used
     112: iconst_5
     113: anewarray     #59                 // class java/lang/Object
     116: dup
     117: iconst_0
     118: ldc           #60                 // String consumer
     120: aastore
     121: dup
     122: iconst_1
     123: aload         8
     125: aastore
     126: dup
     127: iconst_2
     128: ldc           #61                 // String
     130: aastore
     131: dup
     132: iconst_3
     133: aload_1
     134: aload         8
     136: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     141: aastore
     142: dup
     143: iconst_4
     144: getstatic     #42                 // Field CONSUMER_DEFAULT_OVERRIDES:Ljava/util/Map;
     147: aload         8
     149: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     154: aastore
     155: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     158: invokeinterface #63,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     163: aload_1
     164: aload         8
     166: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     171: pop
     172: goto          459
     175: aload_0
     176: getfield      #20                 // Field eosEnabled:Z
     179: ifeq          459
     182: getstatic     #41                 // Field CONSUMER_EOS_OVERRIDES:Ljava/util/Map;
     185: aload         8
     187: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     192: ifeq          287
     195: aload_1
     196: aload         8
     198: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     203: getstatic     #41                 // Field CONSUMER_EOS_OVERRIDES:Ljava/util/Map;
     206: aload         8
     208: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     213: invokevirtual #58                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     216: ifne          459
     219: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
     222: ldc           #53                 // String Unexpected user-specified %s config: %s found. %sUser setting (%s) will be ignored and the Streams default setting (%s) will be used
     224: iconst_5
     225: anewarray     #59                 // class java/lang/Object
     228: dup
     229: iconst_0
     230: ldc           #60                 // String consumer
     232: aastore
     233: dup
     234: iconst_1
     235: aload         8
     237: aastore
     238: dup
     239: iconst_2
     240: aload         4
     242: aastore
     243: dup
     244: iconst_3
     245: aload_1
     246: aload         8
     248: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     253: aastore
     254: dup
     255: iconst_4
     256: getstatic     #41                 // Field CONSUMER_EOS_OVERRIDES:Ljava/util/Map;
     259: aload         8
     261: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     266: aastore
     267: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     270: invokeinterface #63,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     275: aload_1
     276: aload         8
     278: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     283: pop
     284: goto          459
     287: getstatic     #65                 // Field PRODUCER_EOS_OVERRIDES:Ljava/util/Map;
     290: aload         8
     292: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     297: ifeq          392
     300: aload_1
     301: aload         8
     303: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     308: getstatic     #65                 // Field PRODUCER_EOS_OVERRIDES:Ljava/util/Map;
     311: aload         8
     313: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     318: invokevirtual #58                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     321: ifne          459
     324: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
     327: ldc           #53                 // String Unexpected user-specified %s config: %s found. %sUser setting (%s) will be ignored and the Streams default setting (%s) will be used
     329: iconst_5
     330: anewarray     #59                 // class java/lang/Object
     333: dup
     334: iconst_0
     335: ldc           #66                 // String producer
     337: aastore
     338: dup
     339: iconst_1
     340: aload         8
     342: aastore
     343: dup
     344: iconst_2
     345: aload         4
     347: aastore
     348: dup
     349: iconst_3
     350: aload_1
     351: aload         8
     353: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     358: aastore
     359: dup
     360: iconst_4
     361: getstatic     #65                 // Field PRODUCER_EOS_OVERRIDES:Ljava/util/Map;
     364: aload         8
     366: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     371: aastore
     372: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     375: invokeinterface #63,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     380: aload_1
     381: aload         8
     383: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     388: pop
     389: goto          459
     392: ldc           #68                 // String transactional.id
     394: aload         8
     396: invokevirtual #69                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     399: ifeq          459
     402: getstatic     #23                 // Field log:Lorg/slf4j/Logger;
     405: ldc           #53                 // String Unexpected user-specified %s config: %s found. %sUser setting (%s) will be ignored and the Streams default setting (%s) will be used
     407: iconst_5
     408: anewarray     #59                 // class java/lang/Object
     411: dup
     412: iconst_0
     413: ldc           #66                 // String producer
     415: aastore
     416: dup
     417: iconst_1
     418: aload         8
     420: aastore
     421: dup
     422: iconst_2
     423: aload         4
     425: aastore
     426: dup
     427: iconst_3
     428: aload_1
     429: aload         8
     431: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     436: aastore
     437: dup
     438: iconst_4
     439: ldc           #70                 // String <appId>-<generatedSuffix>
     441: aastore
     442: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     445: invokeinterface #63,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
     450: aload_1
     451: aload         8
     453: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     458: pop
     459: iinc          7, 1
     462: goto          45
     465: aload_0
     466: getfield      #20                 // Field eosEnabled:Z
     469: ifeq          484
     472: aload_0
     473: aload_1
     474: ldc           #71                 // String max.in.flight.requests.per.connection
     476: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     481: invokespecial #72                 // Method verifyMaxInFlightRequestPerConnection:(Ljava/lang/Object;)V
     484: return

  private void verifyMaxInFlightRequestPerConnection(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        114
       4: aload_1
       5: instanceof    #73                 // class java/lang/Integer
       8: ifeq          22
      11: aload_1
      12: checkcast     #73                 // class java/lang/Integer
      15: invokevirtual #74                 // Method java/lang/Integer.intValue:()I
      18: istore_2
      19: goto          93
      22: aload_1
      23: instanceof    #75                 // class java/lang/String
      26: ifeq          57
      29: aload_1
      30: checkcast     #75                 // class java/lang/String
      33: invokevirtual #76                 // Method java/lang/String.trim:()Ljava/lang/String;
      36: invokestatic  #77                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      39: istore_2
      40: goto          93
      43: astore_3
      44: new           #79                 // class org/apache/kafka/common/config/ConfigException
      47: dup
      48: ldc           #71                 // String max.in.flight.requests.per.connection
      50: aload_1
      51: ldc           #80                 // String String value could not be parsed as 32-bit integer
      53: invokespecial #81                 // Method org/apache/kafka/common/config/ConfigException."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
      56: athrow
      57: new           #79                 // class org/apache/kafka/common/config/ConfigException
      60: dup
      61: ldc           #71                 // String max.in.flight.requests.per.connection
      63: aload_1
      64: new           #3                  // class java/lang/StringBuilder
      67: dup
      68: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #82                 // String Expected value to be a 32-bit integer, but it was a
      73: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      80: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
      83: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #81                 // Method org/apache/kafka/common/config/ConfigException."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
      92: athrow
      93: iload_2
      94: iconst_5
      95: if_icmple     114
      98: new           #79                 // class org/apache/kafka/common/config/ConfigException
     101: dup
     102: ldc           #71                 // String max.in.flight.requests.per.connection
     104: iload_2
     105: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     108: ldc           #86                 // String Can\'t exceed 5 when exactly-once processing is enabled
     110: invokespecial #81                 // Method org/apache/kafka/common/config/ConfigException."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)V
     113: athrow
     114: return
    Exception table:
       from    to  target type
          29    40    43   Class java/lang/NumberFormatException

  public java.util.Map<java.lang.String, java.lang.Object> getConsumerConfigs(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #87                 // Method getMainConsumerConfigs:(Ljava/lang/String;Ljava/lang/String;I)Ljava/util/Map;
       7: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getMainConsumerConfigs(java.lang.String, java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #88                 // Method getCommonConsumerConfigs:()Ljava/util/Map;
       4: astore        4
       6: aload_0
       7: ldc           #8                  // String main.consumer.
       9: invokevirtual #89                 // Method originalsWithPrefix:(Ljava/lang/String;)Ljava/util/Map;
      12: astore        5
      14: aload         5
      16: invokeinterface #90,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      21: invokeinterface #91,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore        6
      28: aload         6
      30: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          75
      38: aload         6
      40: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #94                 // class java/util/Map$Entry
      48: astore        7
      50: aload         4
      52: aload         7
      54: invokeinterface #95,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: aload         7
      61: invokeinterface #96,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      66: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: goto          28
      75: aload         4
      77: ldc           #97                 // String application.id
      79: aload_1
      80: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: aload         4
      88: ldc           #98                 // String group.id
      90: aload_1
      91: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: aload         4
      99: ldc           #99                 // String client.id
     101: aload_2
     102: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: aload         4
     110: ldc           #100                // String group.instance.id
     112: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     117: checkcast     #75                 // class java/lang/String
     120: astore        6
     122: aload         6
     124: ifnull        161
     127: aload         4
     129: ldc           #100                // String group.instance.id
     131: new           #3                  // class java/lang/StringBuilder
     134: dup
     135: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     138: aload         6
     140: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: ldc           #101                // String -
     145: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: iload_3
     149: invokevirtual #102                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     152: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     155: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     160: pop
     161: aload         4
     163: ldc           #103                // String upgrade.from
     165: aload_0
     166: ldc           #103                // String upgrade.from
     168: invokevirtual #56                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
     171: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     176: pop
     177: aload         4
     179: ldc           #104                // String replication.factor
     181: aload_0
     182: ldc           #104                // String replication.factor
     184: invokevirtual #105                // Method getInt:(Ljava/lang/String;)Ljava/lang/Integer;
     187: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     192: pop
     193: aload         4
     195: ldc           #106                // String application.server
     197: aload_0
     198: ldc           #106                // String application.server
     200: invokevirtual #56                 // Method getString:(Ljava/lang/String;)Ljava/lang/String;
     203: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     208: pop
     209: aload         4
     211: ldc           #107                // String num.standby.replicas
     213: aload_0
     214: ldc           #107                // String num.standby.replicas
     216: invokevirtual #105                // Method getInt:(Ljava/lang/String;)Ljava/lang/Integer;
     219: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     224: pop
     225: aload         4
     227: ldc           #108                // String acceptable.recovery.lag
     229: aload_0
     230: ldc           #108                // String acceptable.recovery.lag
     232: invokevirtual #109                // Method getLong:(Ljava/lang/String;)Ljava/lang/Long;
     235: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     240: pop
     241: aload         4
     243: ldc           #110                // String max.warmup.replicas
     245: aload_0
     246: ldc           #110                // String max.warmup.replicas
     248: invokevirtual #105                // Method getInt:(Ljava/lang/String;)Ljava/lang/Integer;
     251: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     256: pop
     257: aload         4
     259: ldc           #111                // String probing.rebalance.interval.ms
     261: aload_0
     262: ldc           #111                // String probing.rebalance.interval.ms
     264: invokevirtual #109                // Method getLong:(Ljava/lang/String;)Ljava/lang/Long;
     267: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     272: pop
     273: aload         4
     275: ldc           #112                // String partition.assignment.strategy
     277: ldc           #113                // class org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor
     279: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
     282: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     287: pop
     288: aload         4
     290: ldc           #114                // String windowstore.changelog.additional.retention.ms
     292: aload_0
     293: ldc           #114                // String windowstore.changelog.additional.retention.ms
     295: invokevirtual #109                // Method getLong:(Ljava/lang/String;)Ljava/lang/Long;
     298: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     303: pop
     304: aload         4
     306: ldc           #115                // String allow.auto.create.topics
     308: ldc           #116                // String false
     310: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     315: pop
     316: new           #117                // class org/apache/kafka/clients/admin/AdminClientConfig
     319: dup
     320: aload_0
     321: ldc           #12                 // String admin.
     323: invokestatic  #118                // Method org/apache/kafka/clients/admin/AdminClientConfig.configNames:()Ljava/util/Set;
     326: invokespecial #36                 // Method getClientPropsWithPrefix:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Map;
     329: invokespecial #119                // Method org/apache/kafka/clients/admin/AdminClientConfig."<init>":(Ljava/util/Map;)V
     332: astore        7
     334: aload         4
     336: ldc           #120                // String retries
     338: invokestatic  #121                // Method adminClientPrefix:(Ljava/lang/String;)Ljava/lang/String;
     341: aload         7
     343: ldc           #120                // String retries
     345: invokevirtual #122                // Method org/apache/kafka/clients/admin/AdminClientConfig.getInt:(Ljava/lang/String;)Ljava/lang/Integer;
     348: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     353: pop
     354: aload         4
     356: ldc           #123                // String retry.backoff.ms
     358: invokestatic  #121                // Method adminClientPrefix:(Ljava/lang/String;)Ljava/lang/String;
     361: aload         7
     363: ldc           #123                // String retry.backoff.ms
     365: invokevirtual #124                // Method org/apache/kafka/clients/admin/AdminClientConfig.getLong:(Ljava/lang/String;)Ljava/lang/Long;
     368: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     373: pop
     374: aload_0
     375: ldc           #13                 // String topic.
     377: iconst_0
     378: invokevirtual #125                // Method originalsWithPrefix:(Ljava/lang/String;Z)Ljava/util/Map;
     381: astore        8
     383: aload_0
     384: ldc           #11                 // String producer.
     386: invokestatic  #126                // Method org/apache/kafka/clients/producer/ProducerConfig.configNames:()Ljava/util/Set;
     389: invokespecial #36                 // Method getClientPropsWithPrefix:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Map;
     392: astore        9
     394: aload         8
     396: ldc           #128                // String segment.bytes
     398: invokestatic  #129                // Method topicPrefix:(Ljava/lang/String;)Ljava/lang/String;
     401: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     406: ifeq          498
     409: aload         9
     411: ldc           #130                // String batch.size
     413: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     418: ifeq          498
     421: aload         8
     423: ldc           #128                // String segment.bytes
     425: invokestatic  #129                // Method topicPrefix:(Ljava/lang/String;)Ljava/lang/String;
     428: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     433: invokevirtual #131                // Method java/lang/Object.toString:()Ljava/lang/String;
     436: invokestatic  #77                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     439: istore        10
     441: aload         9
     443: ldc           #130                // String batch.size
     445: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     450: invokevirtual #131                // Method java/lang/Object.toString:()Ljava/lang/String;
     453: invokestatic  #77                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     456: istore        11
     458: iload         10
     460: iload         11
     462: if_icmpge     498
     465: new           #132                // class java/lang/IllegalArgumentException
     468: dup
     469: ldc           #133                // String Specified topic segment size %d is is smaller than the configured producer batch size %d, this will cause produced batch not able to be appended to the topic
     471: iconst_2
     472: anewarray     #59                 // class java/lang/Object
     475: dup
     476: iconst_0
     477: iload         10
     479: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     482: aastore
     483: dup
     484: iconst_1
     485: iload         11
     487: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     490: aastore
     491: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     494: invokespecial #134                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     497: athrow
     498: aload         4
     500: aload         8
     502: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     507: aload         4
     509: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getRestoreConsumerConfigs(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #88                 // Method getCommonConsumerConfigs:()Ljava/util/Map;
       4: astore_2
       5: aload_0
       6: ldc           #9                  // String restore.consumer.
       8: invokevirtual #89                 // Method originalsWithPrefix:(Ljava/lang/String;)Ljava/util/Map;
      11: astore_3
      12: aload_3
      13: invokeinterface #90,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #91,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          71
      35: aload         4
      37: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #94                 // class java/util/Map$Entry
      45: astore        5
      47: aload_2
      48: aload         5
      50: invokeinterface #95,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: aload         5
      57: invokeinterface #96,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      62: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: goto          25
      71: aload_2
      72: ldc           #98                 // String group.id
      74: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload_2
      81: ldc           #100                // String group.instance.id
      83: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: aload_2
      90: ldc           #99                 // String client.id
      92: aload_1
      93: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: aload_2
     100: ldc           #135                // String auto.offset.reset
     102: ldc           #136                // String none
     104: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_2
     111: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getGlobalConsumerConfigs(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #88                 // Method getCommonConsumerConfigs:()Ljava/util/Map;
       4: astore_2
       5: aload_0
       6: ldc           #10                 // String global.consumer.
       8: invokevirtual #89                 // Method originalsWithPrefix:(Ljava/lang/String;)Ljava/util/Map;
      11: astore_3
      12: aload_3
      13: invokeinterface #90,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      18: invokeinterface #91,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          71
      35: aload         4
      37: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #94                 // class java/util/Map$Entry
      45: astore        5
      47: aload_2
      48: aload         5
      50: invokeinterface #95,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      55: aload         5
      57: invokeinterface #96,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      62: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      67: pop
      68: goto          25
      71: aload_2
      72: ldc           #98                 // String group.id
      74: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: aload_2
      81: ldc           #100                // String group.instance.id
      83: invokeinterface #64,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      88: pop
      89: aload_2
      90: ldc           #99                 // String client.id
      92: new           #3                  // class java/lang/StringBuilder
      95: dup
      96: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      99: aload_1
     100: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #137                // String -global-consumer
     105: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: aload_2
     118: ldc           #135                // String auto.offset.reset
     120: ldc           #136                // String none
     122: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     127: pop
     128: aload_2
     129: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getProducerConfigs(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #11                 // String producer.
       3: invokestatic  #126                // Method org/apache/kafka/clients/producer/ProducerConfig.configNames:()Ljava/util/Set;
       6: invokespecial #36                 // Method getClientPropsWithPrefix:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Map;
       9: astore_2
      10: aload_0
      11: aload_2
      12: getstatic     #138                // Field NON_CONFIGURABLE_PRODUCER_EOS_CONFIGS:[Ljava/lang/String;
      15: invokespecial #38                 // Method checkIfUnexpectedUserSpecifiedConsumerConfig:(Ljava/util/Map;[Ljava/lang/String;)V
      18: new           #40                 // class java/util/HashMap
      21: dup
      22: aload_0
      23: getfield      #20                 // Field eosEnabled:Z
      26: ifeq          35
      29: getstatic     #65                 // Field PRODUCER_EOS_OVERRIDES:Ljava/util/Map;
      32: goto          38
      35: getstatic     #139                // Field PRODUCER_DEFAULT_OVERRIDES:Ljava/util/Map;
      38: invokespecial #43                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      41: astore_3
      42: aload_3
      43: aload_0
      44: invokespecial #48                 // Method getClientCustomProps:()Ljava/util/Map;
      47: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      52: aload_3
      53: aload_2
      54: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      59: aload_0
      60: invokestatic  #44                 // Method org/apache/kafka/streams/processor/internals/StreamThread.processingMode:(Lorg/apache/kafka/streams/StreamsConfig;)Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      63: getstatic     #140                // Field org/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode.EXACTLY_ONCE_ALPHA:Lorg/apache/kafka/streams/processor/internals/StreamThread$ProcessingMode;
      66: if_acmpne     82
      69: aload_3
      70: ldc           #141                // String internal.auto.downgrade.txn.commit
      72: iconst_1
      73: invokestatic  #47                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      76: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: aload_3
      83: ldc           #51                 // String bootstrap.servers
      85: aload_0
      86: invokevirtual #27                 // Method originals:()Ljava/util/Map;
      89: ldc           #51                 // String bootstrap.servers
      91: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      96: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload_3
     103: ldc           #99                 // String client.id
     105: aload_1
     106: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: aload_3
     113: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getAdminConfigs(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #12                 // String admin.
       3: invokestatic  #118                // Method org/apache/kafka/clients/admin/AdminClientConfig.configNames:()Ljava/util/Set;
       6: invokespecial #36                 // Method getClientPropsWithPrefix:(Ljava/lang/String;Ljava/util/Set;)Ljava/util/Map;
       9: astore_2
      10: new           #40                 // class java/util/HashMap
      13: dup
      14: invokespecial #142                // Method java/util/HashMap."<init>":()V
      17: astore_3
      18: aload_3
      19: aload_0
      20: invokespecial #48                 // Method getClientCustomProps:()Ljava/util/Map;
      23: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      28: aload_3
      29: aload_2
      30: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      35: aload_3
      36: ldc           #99                 // String client.id
      38: aload_1
      39: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: aload_3
      46: areturn

  private java.util.Map<java.lang.String, java.lang.Object> getClientPropsWithPrefix(java.lang.String, java.util.Set<java.lang.String>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: invokevirtual #27                 // Method originals:()Ljava/util/Map;
       6: invokespecial #143                // Method clientProps:(Ljava/util/Set;Ljava/util/Map;)Ljava/util/Map;
       9: astore_3
      10: aload_3
      11: aload_0
      12: aload_1
      13: invokevirtual #89                 // Method originalsWithPrefix:(Ljava/lang/String;)Ljava/util/Map;
      16: invokeinterface #49,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      21: aload_3
      22: areturn

  private java.util.Map<java.lang.String, java.lang.Object> getClientCustomProps();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method originals:()Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      11: getstatic     #15                 // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
      14: invokevirtual #145                // Method org/apache/kafka/common/config/ConfigDef.names:()Ljava/util/Set;
      17: invokeinterface #146,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      22: pop
      23: aload_1
      24: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      29: invokestatic  #35                 // Method org/apache/kafka/clients/consumer/ConsumerConfig.configNames:()Ljava/util/Set;
      32: invokeinterface #146,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      37: pop
      38: aload_1
      39: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      44: invokestatic  #126                // Method org/apache/kafka/clients/producer/ProducerConfig.configNames:()Ljava/util/Set;
      47: invokeinterface #146,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      52: pop
      53: aload_1
      54: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      59: invokestatic  #118                // Method org/apache/kafka/clients/admin/AdminClientConfig.configNames:()Ljava/util/Set;
      62: invokeinterface #146,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      67: pop
      68: aload_1
      69: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      74: aload_0
      75: ldc           #5                  // String consumer.
      77: iconst_0
      78: invokevirtual #125                // Method originalsWithPrefix:(Ljava/lang/String;Z)Ljava/util/Map;
      81: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      86: invokeinterface #146,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      91: pop
      92: aload_1
      93: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      98: aload_0
      99: ldc           #11                 // String producer.
     101: iconst_0
     102: invokevirtual #125                // Method originalsWithPrefix:(Ljava/lang/String;Z)Ljava/util/Map;
     105: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     110: invokeinterface #146,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     115: pop
     116: aload_1
     117: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     122: aload_0
     123: ldc           #12                 // String admin.
     125: iconst_0
     126: invokevirtual #125                // Method originalsWithPrefix:(Ljava/lang/String;Z)Ljava/util/Map;
     129: invokeinterface #144,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
     134: invokeinterface #146,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     139: pop
     140: aload_1
     141: areturn

  public org.apache.kafka.common.serialization.Serde defaultKeySerde();
    Code:
       0: aload_0
       1: ldc           #147                // String default.key.serde
       3: invokevirtual #148                // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_0
       8: ldc           #147                // String default.key.serde
      10: ldc           #149                // class org/apache/kafka/common/serialization/Serde
      12: invokevirtual #150                // Method getConfiguredInstance:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      15: checkcast     #149                // class org/apache/kafka/common/serialization/Serde
      18: astore_2
      19: aload_2
      20: aload_0
      21: invokevirtual #27                 // Method originals:()Ljava/util/Map;
      24: iconst_1
      25: invokeinterface #151,  3          // InterfaceMethod org/apache/kafka/common/serialization/Serde.configure:(Ljava/util/Map;Z)V
      30: aload_2
      31: areturn
      32: astore_2
      33: new           #153                // class org/apache/kafka/streams/errors/StreamsException
      36: dup
      37: ldc           #154                // String Failed to configure key serde %s
      39: iconst_1
      40: anewarray     #59                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_1
      46: aastore
      47: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      50: aload_2
      51: invokespecial #155                // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
    Exception table:
       from    to  target type
           7    31    32   Class java/lang/Exception

  public org.apache.kafka.common.serialization.Serde defaultValueSerde();
    Code:
       0: aload_0
       1: ldc           #156                // String default.value.serde
       3: invokevirtual #148                // Method get:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_0
       8: ldc           #156                // String default.value.serde
      10: ldc           #149                // class org/apache/kafka/common/serialization/Serde
      12: invokevirtual #150                // Method getConfiguredInstance:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      15: checkcast     #149                // class org/apache/kafka/common/serialization/Serde
      18: astore_2
      19: aload_2
      20: aload_0
      21: invokevirtual #27                 // Method originals:()Ljava/util/Map;
      24: iconst_0
      25: invokeinterface #151,  3          // InterfaceMethod org/apache/kafka/common/serialization/Serde.configure:(Ljava/util/Map;Z)V
      30: aload_2
      31: areturn
      32: astore_2
      33: new           #153                // class org/apache/kafka/streams/errors/StreamsException
      36: dup
      37: ldc           #157                // String Failed to configure value serde %s
      39: iconst_1
      40: anewarray     #59                 // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_1
      46: aastore
      47: invokestatic  #62                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      50: aload_2
      51: invokespecial #155                // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      54: athrow
    Exception table:
       from    to  target type
           7    31    32   Class java/lang/Exception

  public org.apache.kafka.streams.processor.TimestampExtractor defaultTimestampExtractor();
    Code:
       0: aload_0
       1: ldc           #158                // String default.timestamp.extractor
       3: ldc           #159                // class org/apache/kafka/streams/processor/TimestampExtractor
       5: invokevirtual #150                // Method getConfiguredInstance:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #159                // class org/apache/kafka/streams/processor/TimestampExtractor
      11: areturn

  public org.apache.kafka.streams.errors.DeserializationExceptionHandler defaultDeserializationExceptionHandler();
    Code:
       0: aload_0
       1: ldc           #160                // String default.deserialization.exception.handler
       3: ldc           #161                // class org/apache/kafka/streams/errors/DeserializationExceptionHandler
       5: invokevirtual #150                // Method getConfiguredInstance:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #161                // class org/apache/kafka/streams/errors/DeserializationExceptionHandler
      11: areturn

  public org.apache.kafka.streams.errors.ProductionExceptionHandler defaultProductionExceptionHandler();
    Code:
       0: aload_0
       1: ldc           #162                // String default.production.exception.handler
       3: ldc           #163                // class org/apache/kafka/streams/errors/ProductionExceptionHandler
       5: invokevirtual #150                // Method getConfiguredInstance:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #163                // class org/apache/kafka/streams/errors/ProductionExceptionHandler
      11: areturn

  private java.util.Map<java.lang.String, java.lang.Object> clientProps(java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #40                 // class java/util/HashMap
       3: dup
       4: invokespecial #142                // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_1
       9: invokeinterface #91,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore        4
      16: aload         4
      18: invokeinterface #92,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          69
      26: aload         4
      28: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #75                 // class java/lang/String
      36: astore        5
      38: aload_2
      39: aload         5
      41: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      46: ifeq          66
      49: aload_3
      50: aload         5
      52: aload_2
      53: aload         5
      55: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: goto          16
      69: aload_3
      70: areturn

  public static void main(java.lang.String[]);
    Code:
       0: getstatic     #164                // Field java/lang/System.out:Ljava/io/PrintStream;
       3: getstatic     #15                 // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
       6: invokevirtual #165                // Method org/apache/kafka/common/config/ConfigDef.toHtml:()Ljava/lang/String;
       9: invokevirtual #166                // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      12: return

  static {};
    Code:
       0: ldc           #2                  // class org/apache/kafka/streams/StreamsConfig
       2: invokestatic  #167                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #23                 // Field log:Lorg/slf4j/Logger;
       8: iconst_1
       9: anewarray     #75                 // class java/lang/String
      12: dup
      13: iconst_0
      14: ldc           #168                // String enable.auto.commit
      16: aastore
      17: putstatic     #37                 // Field NON_CONFIGURABLE_CONSUMER_DEFAULT_CONFIGS:[Ljava/lang/String;
      20: iconst_1
      21: anewarray     #75                 // class java/lang/String
      24: dup
      25: iconst_0
      26: ldc           #169                // String isolation.level
      28: aastore
      29: putstatic     #39                 // Field NON_CONFIGURABLE_CONSUMER_EOS_CONFIGS:[Ljava/lang/String;
      32: iconst_3
      33: anewarray     #75                 // class java/lang/String
      36: dup
      37: iconst_0
      38: ldc           #170                // String enable.idempotence
      40: aastore
      41: dup
      42: iconst_1
      43: ldc           #71                 // String max.in.flight.requests.per.connection
      45: aastore
      46: dup
      47: iconst_2
      48: ldc           #68                 // String transactional.id
      50: aastore
      51: putstatic     #138                // Field NON_CONFIGURABLE_PRODUCER_EOS_CONFIGS:[Ljava/lang/String;
      54: new           #14                 // class org/apache/kafka/common/config/ConfigDef
      57: dup
      58: invokespecial #171                // Method org/apache/kafka/common/config/ConfigDef."<init>":()V
      61: ldc           #97                 // String application.id
      63: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
      66: getstatic     #173                // Field org/apache/kafka/common/config/ConfigDef$Importance.HIGH:Lorg/apache/kafka/common/config/ConfigDef$Importance;
      69: ldc           #174                // String An identifier for the stream processing application. Must be unique within the Kafka cluster. It is used as 1) the default client-id prefix, 2) the group-id for membership management, 3) the changelog topic prefix.
      71: invokevirtual #175                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
      74: ldc           #51                 // String bootstrap.servers
      76: getstatic     #176                // Field org/apache/kafka/common/config/ConfigDef$Type.LIST:Lorg/apache/kafka/common/config/ConfigDef$Type;
      79: getstatic     #173                // Field org/apache/kafka/common/config/ConfigDef$Importance.HIGH:Lorg/apache/kafka/common/config/ConfigDef$Importance;
      82: ldc           #177                // String A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping&mdash;this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <code>host1:port1,host2:port2,...</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).
      84: invokevirtual #175                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
      87: ldc           #104                // String replication.factor
      89: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
      92: iconst_1
      93: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      96: getstatic     #173                // Field org/apache/kafka/common/config/ConfigDef$Importance.HIGH:Lorg/apache/kafka/common/config/ConfigDef$Importance;
      99: ldc           #179                // String The replication factor for change log topics and repartition topics created by the stream processing application.
     101: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     104: ldc           #181                // String state.dir
     106: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     109: ldc           #182                // String /tmp/kafka-streams
     111: getstatic     #173                // Field org/apache/kafka/common/config/ConfigDef$Importance.HIGH:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     114: ldc           #183                // String Directory location for state store. This path must be unique for each streams instance sharing the same underlying filesystem.
     116: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     119: ldc           #108                // String acceptable.recovery.lag
     121: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     124: ldc2_w        #185                // long 10000l
     127: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     130: iconst_0
     131: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     134: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     137: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     140: ldc           #189                // String The maximum acceptable lag (number of offsets to catch up) for a client to be considered caught-up for an active task.Should correspond to a recovery time of well under a minute for a given workload. Must be at least 0.
     142: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     145: ldc           #191                // String cache.max.bytes.buffering
     147: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     150: ldc2_w        #192                // long 10485760l
     153: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     156: iconst_0
     157: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     160: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     163: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     166: ldc           #194                // String Maximum number of memory bytes to be used for buffering across all threads
     168: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     171: ldc           #99                 // String client.id
     173: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     176: ldc           #61                 // String
     178: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     181: ldc           #195                // String An ID prefix string used for the client IDs of internal consumer, producer and restore-consumer, with pattern \'<client.id>-StreamThread-<threadSequenceNumber>-<consumer|producer|restore-consumer>\'.
     183: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     186: ldc           #160                // String default.deserialization.exception.handler
     188: getstatic     #196                // Field org/apache/kafka/common/config/ConfigDef$Type.CLASS:Lorg/apache/kafka/common/config/ConfigDef$Type;
     191: ldc           #197                // class org/apache/kafka/streams/errors/LogAndFailExceptionHandler
     193: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
     196: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     199: ldc           #198                // String Exception handling class that implements the <code>org.apache.kafka.streams.errors.DeserializationExceptionHandler</code> interface.
     201: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     204: ldc           #147                // String default.key.serde
     206: getstatic     #196                // Field org/apache/kafka/common/config/ConfigDef$Type.CLASS:Lorg/apache/kafka/common/config/ConfigDef$Type;
     209: ldc           #199                // class org/apache/kafka/common/serialization/Serdes$ByteArraySerde
     211: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
     214: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     217: ldc           #200                // String  Default serializer / deserializer class for key that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via \'default.windowed.key.serde.inner\' or \'default.windowed.value.serde.inner\' as well
     219: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     222: ldc           #162                // String default.production.exception.handler
     224: getstatic     #196                // Field org/apache/kafka/common/config/ConfigDef$Type.CLASS:Lorg/apache/kafka/common/config/ConfigDef$Type;
     227: ldc           #201                // class org/apache/kafka/streams/errors/DefaultProductionExceptionHandler
     229: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
     232: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     235: ldc           #202                // String Exception handling class that implements the <code>org.apache.kafka.streams.errors.ProductionExceptionHandler</code> interface.
     237: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     240: ldc           #158                // String default.timestamp.extractor
     242: getstatic     #196                // Field org/apache/kafka/common/config/ConfigDef$Type.CLASS:Lorg/apache/kafka/common/config/ConfigDef$Type;
     245: ldc           #203                // class org/apache/kafka/streams/processor/FailOnInvalidTimestamp
     247: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
     250: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     253: ldc           #204                // String Default timestamp extractor class that implements the <code>org.apache.kafka.streams.processor.TimestampExtractor</code> interface.
     255: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     258: ldc           #156                // String default.value.serde
     260: getstatic     #196                // Field org/apache/kafka/common/config/ConfigDef$Type.CLASS:Lorg/apache/kafka/common/config/ConfigDef$Type;
     263: ldc           #199                // class org/apache/kafka/common/serialization/Serdes$ByteArraySerde
     265: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
     268: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     271: ldc           #205                // String Default serializer / deserializer class for value that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via \'default.windowed.key.serde.inner\' or \'default.windowed.value.serde.inner\' as well
     273: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     276: ldc           #107                // String num.standby.replicas
     278: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     281: iconst_0
     282: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     285: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     288: ldc           #206                // String The number of standby replicas for each task.
     290: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     293: ldc           #207                // String num.stream.threads
     295: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     298: iconst_1
     299: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     302: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     305: ldc           #208                // String The number of threads to execute stream processing.
     307: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     310: ldc           #209                // String max.task.idle.ms
     312: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     315: lconst_0
     316: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     319: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     322: ldc           #210                // String Maximum amount of time a stream task will stay idle when not all of its partition buffers contain records, to avoid potential out-of-order record processing across multiple input streams.
     324: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     327: ldc           #110                // String max.warmup.replicas
     329: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     332: iconst_2
     333: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     336: iconst_1
     337: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     340: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     343: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     346: ldc           #211                // String The maximum number of warmup replicas (extra standbys beyond the configured num.standbys) that can be assigned at once for the purpose of keeping  the task available on one instance while it is warming up on another instance it has been reassigned to. Used to throttle how much extra broker  traffic and cluster state can be used for high availability. Must be at least 1.
     348: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     351: ldc           #55                 // String processing.guarantee
     353: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     356: ldc           #212                // String at_least_once
     358: iconst_3
     359: anewarray     #75                 // class java/lang/String
     362: dup
     363: iconst_0
     364: ldc           #212                // String at_least_once
     366: aastore
     367: dup
     368: iconst_1
     369: ldc           #213                // String exactly_once
     371: aastore
     372: dup
     373: iconst_2
     374: ldc           #214                // String exactly_once_beta
     376: aastore
     377: invokestatic  #215                // Method org/apache/kafka/common/config/ConfigDef$ValidString.in:([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
     380: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     383: ldc           #216                // String The processing guarantee that should be used. Possible values are <code>at_least_once</code> (default), <code>exactly_once</code> (requires brokers version 0.11.0 or higher), and <code>exactly_once_beta</code> (requires brokers version 2.5 or higher). Note that exactly-once processing requires a cluster of at least three brokers by default what is the recommended setting for production; for development you can change this, by adjusting broker setting <code>transaction.state.log.replication.factor</code> and <code>transaction.state.log.min.isr</code>.
     385: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     388: ldc           #217                // String security.protocol
     390: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     393: ldc           #218                // String PLAINTEXT
     395: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     398: getstatic     #219                // Field org/apache/kafka/clients/CommonClientConfigs.SECURITY_PROTOCOL_DOC:Ljava/lang/String;
     401: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     404: ldc           #220                // String topology.optimization
     406: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     409: ldc           #136                // String none
     411: iconst_2
     412: anewarray     #75                 // class java/lang/String
     415: dup
     416: iconst_0
     417: ldc           #136                // String none
     419: aastore
     420: dup
     421: iconst_1
     422: ldc           #221                // String all
     424: aastore
     425: invokestatic  #215                // Method org/apache/kafka/common/config/ConfigDef$ValidString.in:([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
     428: getstatic     #188                // Field org/apache/kafka/common/config/ConfigDef$Importance.MEDIUM:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     431: ldc           #222                // String A configuration telling Kafka Streams if it should optimize the topology, disabled by default
     433: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     436: ldc           #106                // String application.server
     438: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     441: ldc           #61                 // String
     443: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     446: ldc           #224                // String A host:port pair pointing to a user-defined endpoint that can be used for state store discovery and interactive queries on this KafkaStreams instance.
     448: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     451: ldc           #225                // String buffered.records.per.partition
     453: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     456: sipush        1000
     459: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     462: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     465: ldc           #226                // String Maximum number of records to buffer per partition.
     467: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     470: ldc           #227                // String built.in.metrics.version
     472: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     475: ldc           #228                // String latest
     477: iconst_2
     478: anewarray     #75                 // class java/lang/String
     481: dup
     482: iconst_0
     483: ldc           #229                // String 0.10.0-2.4
     485: aastore
     486: dup
     487: iconst_1
     488: ldc           #228                // String latest
     490: aastore
     491: invokestatic  #215                // Method org/apache/kafka/common/config/ConfigDef$ValidString.in:([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
     494: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     497: ldc           #230                // String Version of the built-in metrics to use.
     499: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     502: ldc           #28                 // String commit.interval.ms
     504: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     507: ldc2_w        #231                // long 30000l
     510: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     513: iconst_0
     514: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     517: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     520: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     523: ldc           #233                // String The frequency with which to save the position of the processor. (Note, if <code>processing.guarantee</code> is set to <code>exactly_once</code>, the default value is <code>100</code>, otherwise the default value is <code>30000</code>.
     525: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     528: ldc           #234                // String connections.max.idle.ms
     530: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     533: ldc2_w        #235                // long 540000l
     536: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     539: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     542: ldc           #237                // String Close idle connections after the number of milliseconds specified by this config.
     544: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     547: ldc           #238                // String metadata.max.age.ms
     549: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     552: ldc2_w        #239                // long 300000l
     555: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     558: iconst_0
     559: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     562: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     565: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     568: ldc           #241                // String The period of time in milliseconds after which we force a refresh of metadata even if we haven\'t seen any partition leadership changes to proactively discover any new brokers or partitions.
     570: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     573: ldc           #242                // String metrics.num.samples
     575: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     578: iconst_2
     579: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     582: iconst_1
     583: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     586: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     589: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     592: ldc           #243                // String The number of samples maintained to compute metrics.
     594: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     597: ldc           #244                // String metric.reporters
     599: getstatic     #176                // Field org/apache/kafka/common/config/ConfigDef$Type.LIST:Lorg/apache/kafka/common/config/ConfigDef$Type;
     602: ldc           #61                 // String
     604: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     607: ldc           #245                // String A list of classes to use as metrics reporters. Implementing the <code>org.apache.kafka.common.metrics.MetricsReporter</code> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.
     609: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     612: ldc           #246                // String metrics.recording.level
     614: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     617: getstatic     #247                // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
     620: invokevirtual #248                // Method org/apache/kafka/common/metrics/Sensor$RecordingLevel.toString:()Ljava/lang/String;
     623: iconst_2
     624: anewarray     #75                 // class java/lang/String
     627: dup
     628: iconst_0
     629: getstatic     #247                // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
     632: invokevirtual #248                // Method org/apache/kafka/common/metrics/Sensor$RecordingLevel.toString:()Ljava/lang/String;
     635: aastore
     636: dup
     637: iconst_1
     638: getstatic     #249                // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.DEBUG:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
     641: invokevirtual #248                // Method org/apache/kafka/common/metrics/Sensor$RecordingLevel.toString:()Ljava/lang/String;
     644: aastore
     645: invokestatic  #215                // Method org/apache/kafka/common/config/ConfigDef$ValidString.in:([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
     648: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     651: ldc           #250                // String The highest recording level for metrics.
     653: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     656: ldc           #251                // String metrics.sample.window.ms
     658: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     661: ldc2_w        #231                // long 30000l
     664: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     667: iconst_0
     668: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     671: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     674: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     677: ldc           #252                // String The window of time a metrics sample is computed over.
     679: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     682: ldc           #21                 // String partition.grouper
     684: getstatic     #196                // Field org/apache/kafka/common/config/ConfigDef$Type.CLASS:Lorg/apache/kafka/common/config/ConfigDef$Type;
     687: ldc           #253                // class org/apache/kafka/streams/processor/DefaultPartitionGrouper
     689: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
     692: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     695: ldc           #254                // String Partition grouper class that implements the <code>org.apache.kafka.streams.processor.PartitionGrouper</code> interface. WARNING: This config is deprecated and will be removed in 3.0.0 release.
     697: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     700: ldc           #255                // String poll.ms
     702: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     705: ldc2_w        #30                 // long 100l
     708: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     711: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     714: ldc_w         #256                // String The amount of time in milliseconds to block waiting for input.
     717: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     720: ldc           #111                // String probing.rebalance.interval.ms
     722: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     725: ldc2_w        #257                // long 600000l
     728: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     731: ldc2_w        #259                // long 60000l
     734: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     737: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     740: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     743: ldc_w         #261                // String The maximum time to wait before triggering a rebalance to probe for warmup replicas that have finished warming up and are ready to become active. Probing rebalances will continue to be triggered until the assignment is balanced. Must be at least 1 minute.
     746: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     749: ldc_w         #262                // String receive.buffer.bytes
     752: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     755: ldc_w         #263                // int 32768
     758: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     761: iconst_m1
     762: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     765: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     768: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     771: ldc_w         #264                // String The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.
     774: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     777: ldc_w         #265                // String reconnect.backoff.ms
     780: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     783: ldc2_w        #266                // long 50l
     786: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     789: lconst_0
     790: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     793: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     796: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     799: ldc_w         #268                // String The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.
     802: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     805: ldc_w         #269                // String reconnect.backoff.max.ms
     808: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     811: ldc2_w        #270                // long 1000l
     814: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     817: lconst_0
     818: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     821: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     824: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     827: ldc_w         #272                // String The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.
     830: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     833: ldc           #120                // String retries
     835: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     838: iconst_0
     839: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     842: iconst_0
     843: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     846: ldc_w         #273                // int 2147483647
     849: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     852: invokestatic  #274                // Method org/apache/kafka/common/config/ConfigDef$Range.between:(Ljava/lang/Number;Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     855: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     858: ldc_w         #275                // String Setting a value greater than zero will cause the client to resend any request that fails with a potentially transient error.
     861: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     864: ldc           #123                // String retry.backoff.ms
     866: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     869: ldc2_w        #30                 // long 100l
     872: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     875: lconst_0
     876: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     879: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     882: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     885: ldc_w         #276                // String The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.
     888: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     891: ldc_w         #277                // String request.timeout.ms
     894: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     897: ldc_w         #278                // int 40000
     900: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     903: iconst_0
     904: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     907: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     910: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     913: ldc_w         #279                // String The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.
     916: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     919: ldc_w         #280                // String rocksdb.config.setter
     922: getstatic     #196                // Field org/apache/kafka/common/config/ConfigDef$Type.CLASS:Lorg/apache/kafka/common/config/ConfigDef$Type;
     925: aconst_null
     926: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     929: ldc_w         #281                // String A Rocks DB config setter class or class name that implements the <code>org.apache.kafka.streams.state.RocksDBConfigSetter</code> interface
     932: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     935: ldc_w         #282                // String send.buffer.bytes
     938: getstatic     #178                // Field org/apache/kafka/common/config/ConfigDef$Type.INT:Lorg/apache/kafka/common/config/ConfigDef$Type;
     941: ldc_w         #283                // int 131072
     944: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     947: iconst_m1
     948: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     951: invokestatic  #187                // Method org/apache/kafka/common/config/ConfigDef$Range.atLeast:(Ljava/lang/Number;)Lorg/apache/kafka/common/config/ConfigDef$Range;
     954: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     957: ldc_w         #284                // String The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.
     960: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     963: ldc_w         #285                // String state.cleanup.delay.ms
     966: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
     969: ldc2_w        #257                // long 600000l
     972: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     975: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
     978: ldc_w         #286                // String The amount of time in milliseconds to wait before deleting state when a partition has migrated. Only state directories that have not been modified for at least <code>state.cleanup.delay.ms</code> will be removed
     981: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
     984: ldc           #103                // String upgrade.from
     986: getstatic     #172                // Field org/apache/kafka/common/config/ConfigDef$Type.STRING:Lorg/apache/kafka/common/config/ConfigDef$Type;
     989: aconst_null
     990: bipush        11
     992: anewarray     #75                 // class java/lang/String
     995: dup
     996: iconst_0
     997: aconst_null
     998: aastore
     999: dup
    1000: iconst_1
    1001: ldc_w         #287                // String 0.10.0
    1004: aastore
    1005: dup
    1006: iconst_2
    1007: ldc_w         #288                // String 0.10.1
    1010: aastore
    1011: dup
    1012: iconst_3
    1013: ldc_w         #289                // String 0.10.2
    1016: aastore
    1017: dup
    1018: iconst_4
    1019: ldc_w         #290                // String 0.11.0
    1022: aastore
    1023: dup
    1024: iconst_5
    1025: ldc_w         #291                // String 1.0
    1028: aastore
    1029: dup
    1030: bipush        6
    1032: ldc_w         #292                // String 1.1
    1035: aastore
    1036: dup
    1037: bipush        7
    1039: ldc_w         #293                // String 2.0
    1042: aastore
    1043: dup
    1044: bipush        8
    1046: ldc_w         #294                // String 2.1
    1049: aastore
    1050: dup
    1051: bipush        9
    1053: ldc_w         #295                // String 2.2
    1056: aastore
    1057: dup
    1058: bipush        10
    1060: ldc_w         #296                // String 2.3
    1063: aastore
    1064: invokestatic  #215                // Method org/apache/kafka/common/config/ConfigDef$ValidString.in:([Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef$ValidString;
    1067: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
    1070: ldc_w         #297                // String Allows upgrading in a backward compatible way. This is needed when upgrading from [0.10.0, 1.1] to 2.0+, or when upgrading from [2.0, 2.3] to 2.4+. When upgrading from 2.4 to a newer version it is not required to specify this config. Default is `null`. Accepted values are \"0.10.0\", \"0.10.1\", \"0.10.2\", \"0.11.0\", \"1.0\", \"1.1\", \"2.0\", \"2.1\", \"2.2\", \"2.3\" (for upgrading from the corresponding old version).
    1073: invokevirtual #190                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Validator;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
    1076: ldc           #114                // String windowstore.changelog.additional.retention.ms
    1078: getstatic     #184                // Field org/apache/kafka/common/config/ConfigDef$Type.LONG:Lorg/apache/kafka/common/config/ConfigDef$Type;
    1081: ldc2_w        #298                // long 86400000l
    1084: invokestatic  #32                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
    1087: getstatic     #223                // Field org/apache/kafka/common/config/ConfigDef$Importance.LOW:Lorg/apache/kafka/common/config/ConfigDef$Importance;
    1090: ldc_w         #300                // String Added to a windows maintainMs to ensure data is not deleted from the log prematurely. Allows for clock drift. Default is 1 day
    1093: invokevirtual #180                // Method org/apache/kafka/common/config/ConfigDef.define:(Ljava/lang/String;Lorg/apache/kafka/common/config/ConfigDef$Type;Ljava/lang/Object;Lorg/apache/kafka/common/config/ConfigDef$Importance;Ljava/lang/String;)Lorg/apache/kafka/common/config/ConfigDef;
    1096: putstatic     #15                 // Field CONFIG:Lorg/apache/kafka/common/config/ConfigDef;
    1099: new           #40                 // class java/util/HashMap
    1102: dup
    1103: invokespecial #142                // Method java/util/HashMap."<init>":()V
    1106: astore_0
    1107: aload_0
    1108: ldc_w         #301                // String linger.ms
    1111: ldc_w         #302                // String 100
    1114: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1119: pop
    1120: aload_0
    1121: ldc_w         #303                // String transaction.timeout.ms
    1124: sipush        10000
    1127: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1130: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1135: pop
    1136: aload_0
    1137: invokestatic  #304                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
    1140: putstatic     #139                // Field PRODUCER_DEFAULT_OVERRIDES:Ljava/util/Map;
    1143: new           #40                 // class java/util/HashMap
    1146: dup
    1147: getstatic     #139                // Field PRODUCER_DEFAULT_OVERRIDES:Ljava/util/Map;
    1150: invokespecial #43                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
    1153: astore_0
    1154: aload_0
    1155: ldc_w         #305                // String delivery.timeout.ms
    1158: ldc_w         #273                // int 2147483647
    1161: invokestatic  #85                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1164: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1169: pop
    1170: aload_0
    1171: ldc           #170                // String enable.idempotence
    1173: iconst_1
    1174: invokestatic  #47                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1177: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1182: pop
    1183: aload_0
    1184: invokestatic  #304                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
    1187: putstatic     #65                 // Field PRODUCER_EOS_OVERRIDES:Ljava/util/Map;
    1190: new           #40                 // class java/util/HashMap
    1193: dup
    1194: invokespecial #142                // Method java/util/HashMap."<init>":()V
    1197: astore_0
    1198: aload_0
    1199: ldc_w         #306                // String max.poll.records
    1202: ldc_w         #307                // String 1000
    1205: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1210: pop
    1211: aload_0
    1212: ldc           #135                // String auto.offset.reset
    1214: ldc_w         #308                // String earliest
    1217: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1222: pop
    1223: aload_0
    1224: ldc           #168                // String enable.auto.commit
    1226: ldc           #116                // String false
    1228: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1233: pop
    1234: aload_0
    1235: ldc_w         #309                // String internal.leave.group.on.close
    1238: iconst_0
    1239: invokestatic  #47                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
    1242: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1247: pop
    1248: aload_0
    1249: invokestatic  #304                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
    1252: putstatic     #42                 // Field CONSUMER_DEFAULT_OVERRIDES:Ljava/util/Map;
    1255: new           #40                 // class java/util/HashMap
    1258: dup
    1259: getstatic     #42                 // Field CONSUMER_DEFAULT_OVERRIDES:Ljava/util/Map;
    1262: invokespecial #43                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
    1265: astore_0
    1266: aload_0
    1267: ldc           #169                // String isolation.level
    1269: getstatic     #310                // Field org/apache/kafka/common/IsolationLevel.READ_COMMITTED:Lorg/apache/kafka/common/IsolationLevel;
    1272: invokevirtual #311                // Method org/apache/kafka/common/IsolationLevel.name:()Ljava/lang/String;
    1275: getstatic     #312                // Field java/util/Locale.ROOT:Ljava/util/Locale;
    1278: invokevirtual #313                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
    1281: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1286: pop
    1287: aload_0
    1288: invokestatic  #304                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
    1291: putstatic     #41                 // Field CONSUMER_EOS_OVERRIDES:Ljava/util/Map;
    1294: return
}
