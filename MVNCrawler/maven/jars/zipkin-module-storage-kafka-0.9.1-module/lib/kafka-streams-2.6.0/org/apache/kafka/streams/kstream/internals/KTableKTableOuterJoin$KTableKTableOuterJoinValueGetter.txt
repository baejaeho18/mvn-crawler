Compiled from "KTableKTableOuterJoin.java"
class org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin$KTableKTableOuterJoinValueGetter implements org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, R> {
  private final org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, V1> valueGetter1;

  private final org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, V2> valueGetter2;

  final org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin this$0;

  org.apache.kafka.streams.kstream.internals.KTableKTableOuterJoin$KTableKTableOuterJoinValueGetter(org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, V1>, org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, V2>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/kafka/streams/kstream/internals/KTableKTableOuterJoin;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field valueGetter1:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field valueGetter2:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
      19: return

  public void init(org.apache.kafka.streams.processor.ProcessorContext);
    Code:
       0: aload_0
       1: getfield      #4                  // Field valueGetter1:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
      10: aload_0
      11: getfield      #5                  // Field valueGetter2:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
      14: aload_1
      15: invokeinterface #6,  2            // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
      20: return

  public org.apache.kafka.streams.state.ValueAndTimestamp<R> get(K);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #4                  // Field valueGetter1:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
       6: aload_1
       7: invokeinterface #7,  2            // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.get:(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
      12: astore_3
      13: aload_3
      14: ifnonnull     28
      17: aconst_null
      18: astore        4
      20: ldc2_w        #8                  // long -1l
      23: lstore        5
      25: goto          40
      28: aload_3
      29: invokevirtual #10                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.value:()Ljava/lang/Object;
      32: astore        4
      34: aload_3
      35: invokevirtual #11                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.timestamp:()J
      38: lstore        5
      40: aload_0
      41: getfield      #5                  // Field valueGetter2:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
      44: aload_1
      45: invokeinterface #7,  2            // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.get:(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
      50: astore        7
      52: aload         7
      54: ifnonnull     68
      57: aconst_null
      58: astore        8
      60: ldc2_w        #8                  // long -1l
      63: lstore        9
      65: goto          82
      68: aload         7
      70: invokevirtual #10                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.value:()Ljava/lang/Object;
      73: astore        8
      75: aload         7
      77: invokevirtual #11                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.timestamp:()J
      80: lstore        9
      82: aload         4
      84: ifnonnull     92
      87: aload         8
      89: ifnull        109
      92: aload_0
      93: getfield      #2                  // Field this$0:Lorg/apache/kafka/streams/kstream/internals/KTableKTableOuterJoin;
      96: getfield      #12                 // Field org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoin.joiner:Lorg/apache/kafka/streams/kstream/ValueJoiner;
      99: aload         4
     101: aload         8
     103: invokeinterface #13,  3           // InterfaceMethod org/apache/kafka/streams/kstream/ValueJoiner.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     108: astore_2
     109: aload_2
     110: lload         5
     112: lload         9
     114: invokestatic  #14                 // Method java/lang/Math.max:(JJ)J
     117: invokestatic  #15                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.make:(Ljava/lang/Object;J)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
     120: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field valueGetter1:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
       4: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.close:()V
       9: aload_0
      10: getfield      #5                  // Field valueGetter2:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
      13: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.close:()V
      18: return
}
