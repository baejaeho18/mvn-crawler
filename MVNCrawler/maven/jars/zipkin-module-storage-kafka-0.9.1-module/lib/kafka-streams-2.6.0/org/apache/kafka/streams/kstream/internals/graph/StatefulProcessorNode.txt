Compiled from "StatefulProcessorNode.java"
public class org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode<K, V> extends org.apache.kafka.streams.kstream.internals.graph.ProcessorGraphNode<K, V> {
  private final java.lang.String[] storeNames;

  private final org.apache.kafka.streams.state.StoreBuilder<?> storeBuilder;

  public org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode(org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, V>, java.util.Set<org.apache.kafka.streams.state.StoreBuilder<?>>, java.util.Set<org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<?, ?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorName:()Ljava/lang/String;
       5: aload_1
       6: invokespecial #2                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorGraphNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)V
       9: aload_2
      10: invokeinterface #3,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      15: invokedynamic #4,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      20: invokeinterface #5,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: astore        4
      27: aload_3
      28: invokeinterface #3,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      33: invokedynamic #6,  0              // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      38: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: astore        5
      45: aload_0
      46: aload         4
      48: aload         5
      50: invokestatic  #8                  // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      53: invokedynamic #9,  0              // InvokeDynamic #2:apply:()Ljava/util/function/IntFunction;
      58: invokeinterface #10,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      63: checkcast     #11                 // class "[Ljava/lang/String;"
      66: putfield      #12                 // Field storeNames:[Ljava/lang/String;
      69: aload_0
      70: aconst_null
      71: putfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      74: return

  public org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode(java.lang.String, org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, V>, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorGraphNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)V
       6: aload_0
       7: aload_3
       8: putfield      #12                 // Field storeNames:[Ljava/lang/String;
      11: aload_0
      12: aconst_null
      13: putfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      16: return

  public org.apache.kafka.streams.kstream.internals.graph.StatefulProcessorNode(java.lang.String, org.apache.kafka.streams.kstream.internals.graph.ProcessorParameters<K, V>, org.apache.kafka.streams.state.StoreBuilder<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorGraphNode."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)V
       6: aload_0
       7: aconst_null
       8: putfield      #12                 // Field storeNames:[Ljava/lang/String;
      11: aload_0
      12: aload_3
      13: putfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      16: return

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #16                 // String StatefulProcessorNode{storeNames=
       9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #12                 // Field storeNames:[Ljava/lang/String;
      16: invokestatic  #18                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      19: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #19                 // String , storeBuilder=
      24: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      31: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #21                 // String }
      36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokespecial #22                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorGraphNode.toString:()Ljava/lang/String;
      43: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  public void writeToTopology(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder);
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method processorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
       4: invokevirtual #1                  // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorName:()Ljava/lang/String;
       7: astore_2
       8: aload_0
       9: invokevirtual #24                 // Method processorParameters:()Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;
      12: invokevirtual #25                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.processorSupplier:()Lorg/apache/kafka/streams/processor/ProcessorSupplier;
      15: astore_3
      16: aload_1
      17: aload_2
      18: aload_3
      19: aload_0
      20: invokevirtual #26                 // Method parentNodeNames:()[Ljava/lang/String;
      23: invokevirtual #27                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addProcessor:(Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;[Ljava/lang/String;)V
      26: aload_0
      27: getfield      #12                 // Field storeNames:[Ljava/lang/String;
      30: ifnull        50
      33: aload_0
      34: getfield      #12                 // Field storeNames:[Ljava/lang/String;
      37: arraylength
      38: ifle          50
      41: aload_1
      42: aload_2
      43: aload_0
      44: getfield      #12                 // Field storeNames:[Ljava/lang/String;
      47: invokevirtual #28                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.connectProcessorAndStateStores:(Ljava/lang/String;[Ljava/lang/String;)V
      50: aload_0
      51: getfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      54: ifnull        73
      57: aload_1
      58: aload_0
      59: getfield      #13                 // Field storeBuilder:Lorg/apache/kafka/streams/state/StoreBuilder;
      62: iconst_1
      63: anewarray     #29                 // class java/lang/String
      66: dup
      67: iconst_0
      68: aload_2
      69: aastore
      70: invokevirtual #30                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;[Ljava/lang/String;)V
      73: aload_3
      74: invokeinterface #31,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorSupplier.stores:()Ljava/util/Set;
      79: ifnull        134
      82: aload_3
      83: invokeinterface #31,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorSupplier.stores:()Ljava/util/Set;
      88: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      93: astore        4
      95: aload         4
      97: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     102: ifeq          134
     105: aload         4
     107: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     112: checkcast     #35                 // class org/apache/kafka/streams/state/StoreBuilder
     115: astore        5
     117: aload_1
     118: aload         5
     120: iconst_1
     121: anewarray     #29                 // class java/lang/String
     124: dup
     125: iconst_0
     126: aload_2
     127: aastore
     128: invokevirtual #30                 // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.addStateStore:(Lorg/apache/kafka/streams/state/StoreBuilder;[Ljava/lang/String;)V
     131: goto          95
     134: return

  private static java.lang.String[] lambda$new$1(int);
    Code:
       0: iload_0
       1: anewarray     #29                 // class java/lang/String
       4: areturn

  private static java.util.stream.Stream lambda$new$0(org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier);
    Code:
       0: aload_0
       1: invokeinterface #36,  1           // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier.storeNames:()[Ljava/lang/String;
       6: invokestatic  #37                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       9: areturn
}
