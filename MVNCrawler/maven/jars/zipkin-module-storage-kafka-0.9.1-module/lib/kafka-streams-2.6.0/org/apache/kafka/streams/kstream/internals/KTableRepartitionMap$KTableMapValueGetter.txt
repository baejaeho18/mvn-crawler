Compiled from "KTableRepartitionMap.java"
class org.apache.kafka.streams.kstream.internals.KTableRepartitionMap$KTableMapValueGetter implements org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, org.apache.kafka.streams.KeyValue<K1, V1>> {
  private final org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, V> parentGetter;

  private org.apache.kafka.streams.processor.ProcessorContext context;

  final org.apache.kafka.streams.kstream.internals.KTableRepartitionMap this$0;

  org.apache.kafka.streams.kstream.internals.KTableRepartitionMap$KTableMapValueGetter(org.apache.kafka.streams.kstream.internals.KTableValueGetter<K, V>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/kafka/streams/kstream/internals/KTableRepartitionMap;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field parentGetter:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
      14: return

  public void init(org.apache.kafka.streams.processor.ProcessorContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field context:Lorg/apache/kafka/streams/processor/ProcessorContext;
       5: aload_0
       6: getfield      #3                  // Field parentGetter:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
       9: aload_1
      10: invokeinterface #5,  2            // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
      15: return

  public org.apache.kafka.streams.state.ValueAndTimestamp<org.apache.kafka.streams.KeyValue<K1, V1>> get(K);
    Code:
       0: aload_0
       1: getfield      #3                  // Field parentGetter:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.get:(Ljava/lang/Object;)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
      10: astore_2
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/apache/kafka/streams/kstream/internals/KTableRepartitionMap;
      15: invokestatic  #7                  // Method org/apache/kafka/streams/kstream/internals/KTableRepartitionMap.access$100:(Lorg/apache/kafka/streams/kstream/internals/KTableRepartitionMap;)Lorg/apache/kafka/streams/kstream/KeyValueMapper;
      18: aload_1
      19: aload_2
      20: invokestatic  #8                  // Method org/apache/kafka/streams/state/ValueAndTimestamp.getValueOrNull:(Lorg/apache/kafka/streams/state/ValueAndTimestamp;)Ljava/lang/Object;
      23: invokeinterface #9,  3            // InterfaceMethod org/apache/kafka/streams/kstream/KeyValueMapper.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: aload_2
      29: ifnonnull     44
      32: aload_0
      33: getfield      #4                  // Field context:Lorg/apache/kafka/streams/processor/ProcessorContext;
      36: invokeinterface #10,  1           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.timestamp:()J
      41: goto          48
      44: aload_2
      45: invokevirtual #11                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.timestamp:()J
      48: invokestatic  #12                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.make:(Ljava/lang/Object;J)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
      51: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field parentGetter:Lorg/apache/kafka/streams/kstream/internals/KTableValueGetter;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/kafka/streams/kstream/internals/KTableValueGetter.close:()V
       9: return
}
