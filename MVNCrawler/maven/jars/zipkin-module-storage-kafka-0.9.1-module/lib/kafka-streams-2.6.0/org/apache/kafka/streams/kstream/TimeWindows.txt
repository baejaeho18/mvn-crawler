Compiled from "TimeWindows.java"
public final class org.apache.kafka.streams.kstream.TimeWindows extends org.apache.kafka.streams.kstream.Windows<org.apache.kafka.streams.kstream.internals.TimeWindow> {
  private final long maintainDurationMs;

  public final long sizeMs;

  public final long advanceMs;

  private final long graceMs;

  private org.apache.kafka.streams.kstream.TimeWindows(long, long, long, long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/kafka/streams/kstream/Windows."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #3                  // Field sizeMs:J
       9: aload_0
      10: lload_3
      11: putfield      #4                  // Field advanceMs:J
      14: aload_0
      15: lload         5
      17: putfield      #5                  // Field graceMs:J
      20: aload_0
      21: lload         7
      23: putfield      #6                  // Field maintainDurationMs:J
      26: return

  private org.apache.kafka.streams.kstream.TimeWindows(long, long, long, long, int);
    Code:
       0: aload_0
       1: iload         9
       3: invokespecial #7                  // Method org/apache/kafka/streams/kstream/Windows."<init>":(I)V
       6: aload_0
       7: lload_1
       8: putfield      #3                  // Field sizeMs:J
      11: aload_0
      12: lload_3
      13: putfield      #4                  // Field advanceMs:J
      16: aload_0
      17: lload         5
      19: putfield      #5                  // Field graceMs:J
      22: aload_0
      23: lload         7
      25: putfield      #6                  // Field maintainDurationMs:J
      28: return

  public static org.apache.kafka.streams.kstream.TimeWindows of(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_0
       1: lconst_0
       2: lcmp
       3: ifgt          16
       6: new           #8                  // class java/lang/IllegalArgumentException
       9: dup
      10: ldc           #9                  // String Window size (sizeMs) must be larger than zero.
      12: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: new           #11                 // class org/apache/kafka/streams/kstream/TimeWindows
      19: dup
      20: lload_0
      21: lload_0
      22: ldc2_w        #12                 // long -1l
      25: ldc2_w        #14                 // long 86400000l
      28: invokespecial #16                 // Method "<init>":(JJJJ)V
      31: areturn

  public static org.apache.kafka.streams.kstream.TimeWindows of(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: ldc           #17                 // String size
       3: invokestatic  #18                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_0
       8: aload_1
       9: invokestatic  #19                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      12: invokestatic  #20                 // Method of:(J)Lorg/apache/kafka/streams/kstream/TimeWindows;
      15: areturn

  public org.apache.kafka.streams.kstream.TimeWindows advanceBy(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          15
       6: lload_1
       7: aload_0
       8: getfield      #3                  // Field sizeMs:J
      11: lcmp
      12: ifle          49
      15: new           #8                  // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #21                 // String Window advancement interval should be more than zero and less than window duration which is %d ms, but given advancement interval is: %d ms
      21: iconst_2
      22: anewarray     #22                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_0
      28: getfield      #3                  // Field sizeMs:J
      31: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      34: aastore
      35: dup
      36: iconst_1
      37: lload_1
      38: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: aastore
      42: invokestatic  #24                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: new           #11                 // class org/apache/kafka/streams/kstream/TimeWindows
      52: dup
      53: aload_0
      54: getfield      #3                  // Field sizeMs:J
      57: lload_1
      58: aload_0
      59: getfield      #5                  // Field graceMs:J
      62: aload_0
      63: getfield      #6                  // Field maintainDurationMs:J
      66: aload_0
      67: getfield      #25                 // Field segments:I
      70: invokespecial #26                 // Method "<init>":(JJJJI)V
      73: areturn

  public org.apache.kafka.streams.kstream.TimeWindows advanceBy(java.time.Duration);
    Code:
       0: aload_1
       1: ldc           #27                 // String advance
       3: invokestatic  #18                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokestatic  #19                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      13: invokevirtual #28                 // Method advanceBy:(J)Lorg/apache/kafka/streams/kstream/TimeWindows;
      16: areturn

  public java.util.Map<java.lang.Long, org.apache.kafka.streams.kstream.internals.TimeWindow> windowsFor(long);
    Code:
       0: lconst_0
       1: lload_1
       2: aload_0
       3: getfield      #3                  // Field sizeMs:J
       6: lsub
       7: aload_0
       8: getfield      #4                  // Field advanceMs:J
      11: ladd
      12: invokestatic  #29                 // Method java/lang/Math.max:(JJ)J
      15: aload_0
      16: getfield      #4                  // Field advanceMs:J
      19: ldiv
      20: aload_0
      21: getfield      #4                  // Field advanceMs:J
      24: lmul
      25: lstore_3
      26: new           #30                 // class java/util/LinkedHashMap
      29: dup
      30: invokespecial #31                 // Method java/util/LinkedHashMap."<init>":()V
      33: astore        5
      35: lload_3
      36: lload_1
      37: lcmp
      38: ifgt          81
      41: new           #32                 // class org/apache/kafka/streams/kstream/internals/TimeWindow
      44: dup
      45: lload_3
      46: lload_3
      47: aload_0
      48: getfield      #3                  // Field sizeMs:J
      51: ladd
      52: invokespecial #33                 // Method org/apache/kafka/streams/kstream/internals/TimeWindow."<init>":(JJ)V
      55: astore        6
      57: aload         5
      59: lload_3
      60: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      63: aload         6
      65: invokeinterface #34,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: lload_3
      72: aload_0
      73: getfield      #4                  // Field advanceMs:J
      76: ladd
      77: lstore_3
      78: goto          35
      81: aload         5
      83: areturn

  public long size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sizeMs:J
       4: lreturn

  public org.apache.kafka.streams.kstream.TimeWindows grace(java.time.Duration) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: ldc           #35                 // String afterWindowEnd
       3: invokestatic  #18                 // Method org/apache/kafka/streams/internals/ApiUtils.prepareMillisCheckFailMsgPrefix:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokestatic  #19                 // Method org/apache/kafka/streams/internals/ApiUtils.validateMillisecondDuration:(Ljava/time/Duration;Ljava/lang/String;)J
      12: lstore_3
      13: lload_3
      14: lconst_0
      15: lcmp
      16: ifge          29
      19: new           #8                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #36                 // String Grace period must not be negative.
      25: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #11                 // class org/apache/kafka/streams/kstream/TimeWindows
      32: dup
      33: aload_0
      34: getfield      #3                  // Field sizeMs:J
      37: aload_0
      38: getfield      #4                  // Field advanceMs:J
      41: lload_3
      42: aload_0
      43: getfield      #6                  // Field maintainDurationMs:J
      46: aload_0
      47: getfield      #25                 // Field segments:I
      50: invokespecial #26                 // Method "<init>":(JJJJI)V
      53: areturn

  public long gracePeriodMs();
    Code:
       0: aload_0
       1: getfield      #5                  // Field graceMs:J
       4: ldc2_w        #12                 // long -1l
       7: lcmp
       8: ifeq          18
      11: aload_0
      12: getfield      #5                  // Field graceMs:J
      15: goto          27
      18: aload_0
      19: invokevirtual #37                 // Method maintainMs:()J
      22: aload_0
      23: invokevirtual #38                 // Method size:()J
      26: lsub
      27: lreturn

  public org.apache.kafka.streams.kstream.TimeWindows until(long) throws java.lang.IllegalArgumentException;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #3                  // Field sizeMs:J
       5: lcmp
       6: ifge          19
       9: new           #8                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #39                 // String Window retention time (durationMs) cannot be smaller than the window size.
      15: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #11                 // class org/apache/kafka/streams/kstream/TimeWindows
      22: dup
      23: aload_0
      24: getfield      #3                  // Field sizeMs:J
      27: aload_0
      28: getfield      #4                  // Field advanceMs:J
      31: aload_0
      32: getfield      #5                  // Field graceMs:J
      35: lload_1
      36: aload_0
      37: getfield      #25                 // Field segments:I
      40: invokespecial #26                 // Method "<init>":(JJJJI)V
      43: areturn

  public long maintainMs();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maintainDurationMs:J
       4: aload_0
       5: getfield      #3                  // Field sizeMs:J
       8: invokestatic  #29                 // Method java/lang/Math.max:(JJ)J
      11: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #11                 // class org/apache/kafka/streams/kstream/TimeWindows
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field maintainDurationMs:J
      33: aload_2
      34: getfield      #6                  // Field maintainDurationMs:J
      37: lcmp
      38: ifne          92
      41: aload_0
      42: getfield      #25                 // Field segments:I
      45: aload_2
      46: getfield      #25                 // Field segments:I
      49: if_icmpne     92
      52: aload_0
      53: getfield      #3                  // Field sizeMs:J
      56: aload_2
      57: getfield      #3                  // Field sizeMs:J
      60: lcmp
      61: ifne          92
      64: aload_0
      65: getfield      #4                  // Field advanceMs:J
      68: aload_2
      69: getfield      #4                  // Field advanceMs:J
      72: lcmp
      73: ifne          92
      76: aload_0
      77: getfield      #5                  // Field graceMs:J
      80: aload_2
      81: getfield      #5                  // Field graceMs:J
      84: lcmp
      85: ifne          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: ireturn

  public int hashCode();
    Code:
       0: iconst_5
       1: anewarray     #22                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #6                  // Field maintainDurationMs:J
      10: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #25                 // Field segments:I
      20: invokestatic  #41                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: aastore
      24: dup
      25: iconst_2
      26: aload_0
      27: getfield      #3                  // Field sizeMs:J
      30: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      33: aastore
      34: dup
      35: iconst_3
      36: aload_0
      37: getfield      #4                  // Field advanceMs:J
      40: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      43: aastore
      44: dup
      45: iconst_4
      46: aload_0
      47: getfield      #5                  // Field graceMs:J
      50: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: aastore
      54: invokestatic  #42                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      57: ireturn

  public java.lang.String toString();
    Code:
       0: new           #43                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #45                 // String TimeWindows{maintainDurationMs=
       9: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field maintainDurationMs:J
      16: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #48                 // String , sizeMs=
      21: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field sizeMs:J
      28: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #49                 // String , advanceMs=
      33: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #4                  // Field advanceMs:J
      40: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #50                 // String , graceMs=
      45: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #5                  // Field graceMs:J
      52: invokevirtual #47                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      55: ldc           #51                 // String , segments=
      57: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #25                 // Field segments:I
      64: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: bipush        125
      69: invokevirtual #53                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public org.apache.kafka.streams.kstream.Windows until(long) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #55                 // Method until:(J)Lorg/apache/kafka/streams/kstream/TimeWindows;
       5: areturn
}
