Compiled from "InternalTopologyBuilder.java"
public final class org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$TopologyDescription implements org.apache.kafka.streams.TopologyDescription {
  private final java.util.TreeSet<org.apache.kafka.streams.TopologyDescription$Subtopology> subtopologies;

  private final java.util.TreeSet<org.apache.kafka.streams.TopologyDescription$GlobalStore> globalStores;

  public org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$TopologyDescription();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeSet
       8: dup
       9: invokestatic  #3                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$2100:()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$SubtopologyComparator;
      12: invokespecial #4                  // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      15: putfield      #5                  // Field subtopologies:Ljava/util/TreeSet;
      18: aload_0
      19: new           #2                  // class java/util/TreeSet
      22: dup
      23: invokestatic  #6                  // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.access$2200:()Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder$GlobalStoreComparator;
      26: invokespecial #4                  // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      29: putfield      #7                  // Field globalStores:Ljava/util/TreeSet;
      32: return

  public void addSubtopology(org.apache.kafka.streams.TopologyDescription$Subtopology);
    Code:
       0: aload_0
       1: getfield      #5                  // Field subtopologies:Ljava/util/TreeSet;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public void addGlobalStore(org.apache.kafka.streams.TopologyDescription$GlobalStore);
    Code:
       0: aload_0
       1: getfield      #7                  // Field globalStores:Ljava/util/TreeSet;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/TreeSet.add:(Ljava/lang/Object;)Z
       8: pop
       9: return

  public java.util.Set<org.apache.kafka.streams.TopologyDescription$Subtopology> subtopologies();
    Code:
       0: aload_0
       1: getfield      #5                  // Field subtopologies:Ljava/util/TreeSet;
       4: invokestatic  #9                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.util.Set<org.apache.kafka.streams.TopologyDescription$GlobalStore> globalStores();
    Code:
       0: aload_0
       1: getfield      #7                  // Field globalStores:Ljava/util/TreeSet;
       4: invokestatic  #9                  // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
       7: areturn

  public java.lang.String toString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #12                 // String Topologies:\n
      11: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: getfield      #5                  // Field subtopologies:Ljava/util/TreeSet;
      19: invokevirtual #14                 // Method java/util/TreeSet.descendingSet:()Ljava/util/NavigableSet;
      22: iconst_0
      23: anewarray     #15                 // class org/apache/kafka/streams/TopologyDescription$Subtopology
      26: invokeinterface #16,  2           // InterfaceMethod java/util/NavigableSet.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      31: checkcast     #17                 // class "[Lorg/apache/kafka/streams/TopologyDescription$Subtopology;"
      34: astore_2
      35: aload_0
      36: getfield      #7                  // Field globalStores:Ljava/util/TreeSet;
      39: invokevirtual #14                 // Method java/util/TreeSet.descendingSet:()Ljava/util/NavigableSet;
      42: iconst_0
      43: anewarray     #18                 // class org/apache/kafka/streams/TopologyDescription$GlobalStore
      46: invokeinterface #16,  2           // InterfaceMethod java/util/NavigableSet.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      51: checkcast     #19                 // class "[Lorg/apache/kafka/streams/TopologyDescription$GlobalStore;"
      54: astore_3
      55: iconst_0
      56: istore        4
      58: aload_2
      59: arraylength
      60: iconst_1
      61: isub
      62: istore        5
      64: aload_3
      65: arraylength
      66: iconst_1
      67: isub
      68: istore        6
      70: iload         5
      72: iconst_m1
      73: if_icmpeq     142
      76: iload         6
      78: iconst_m1
      79: if_icmpeq     142
      82: aload_1
      83: ldc           #20                 // String
      85: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: pop
      89: aload_2
      90: iload         5
      92: aaload
      93: astore        7
      95: aload_3
      96: iload         6
      98: aaload
      99: astore        8
     101: aload         7
     103: invokeinterface #21,  1           // InterfaceMethod org/apache/kafka/streams/TopologyDescription$Subtopology.id:()I
     108: iload         4
     110: if_icmpne     126
     113: aload_1
     114: aload         7
     116: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: pop
     120: iinc          5, -1
     123: goto          136
     126: aload_1
     127: aload         8
     129: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     132: pop
     133: iinc          6, -1
     136: iinc          4, 1
     139: goto          70
     142: iload         5
     144: iconst_m1
     145: if_icmpeq     174
     148: aload_2
     149: iload         5
     151: aaload
     152: astore        7
     154: aload_1
     155: ldc           #20                 // String
     157: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: pop
     161: aload_1
     162: aload         7
     164: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     167: pop
     168: iinc          5, -1
     171: goto          142
     174: iload         6
     176: iconst_m1
     177: if_icmpeq     206
     180: aload_3
     181: iload         6
     183: aaload
     184: astore        7
     186: aload_1
     187: ldc           #20                 // String
     189: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: pop
     193: aload_1
     194: aload         7
     196: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     199: pop
     200: iinc          6, -1
     203: goto          174
     206: aload_1
     207: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #25                 // class org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$TopologyDescription
      28: astore_2
      29: aload_0
      30: getfield      #5                  // Field subtopologies:Ljava/util/TreeSet;
      33: aload_2
      34: getfield      #5                  // Field subtopologies:Ljava/util/TreeSet;
      37: invokevirtual #26                 // Method java/util/TreeSet.equals:(Ljava/lang/Object;)Z
      40: ifeq          61
      43: aload_0
      44: getfield      #7                  // Field globalStores:Ljava/util/TreeSet;
      47: aload_2
      48: getfield      #7                  // Field globalStores:Ljava/util/TreeSet;
      51: invokevirtual #26                 // Method java/util/TreeSet.equals:(Ljava/lang/Object;)Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: iconst_2
       1: anewarray     #27                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #5                  // Field subtopologies:Ljava/util/TreeSet;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #7                  // Field globalStores:Ljava/util/TreeSet;
      17: aastore
      18: invokestatic  #28                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      21: ireturn
}
