Compiled from "InternalStreamsBuilder.java"
public class org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder implements org.apache.kafka.streams.kstream.internals.InternalNameProvider {
  private static final java.lang.String TABLE_SOURCE_SUFFIX;

  final org.apache.kafka.streams.processor.internals.InternalTopologyBuilder internalTopologyBuilder;

  private final java.util.concurrent.atomic.AtomicInteger index;

  private final java.util.concurrent.atomic.AtomicInteger buildPriorityIndex;

  private final java.util.LinkedHashMap<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, java.util.LinkedHashSet<org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<?, ?>>> keyChangingOperationsToOptimizableRepartitionNodes;

  private final java.util.LinkedHashSet<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode> mergeNodes;

  private final java.util.LinkedHashSet<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode> tableSourceNodes;

  private static final java.lang.String TOPOLOGY_ROOT;

  private static final org.slf4j.Logger LOG;

  protected final org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode root;

  public org.apache.kafka.streams.kstream.internals.InternalStreamsBuilder(org.apache.kafka.streams.processor.internals.InternalTopologyBuilder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      13: putfield      #4                  // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
      16: aload_0
      17: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
      20: dup
      21: iconst_0
      22: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      25: putfield      #5                  // Field buildPriorityIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      28: aload_0
      29: new           #6                  // class java/util/LinkedHashMap
      32: dup
      33: invokespecial #7                  // Method java/util/LinkedHashMap."<init>":()V
      36: putfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
      39: aload_0
      40: new           #9                  // class java/util/LinkedHashSet
      43: dup
      44: invokespecial #10                 // Method java/util/LinkedHashSet."<init>":()V
      47: putfield      #11                 // Field mergeNodes:Ljava/util/LinkedHashSet;
      50: aload_0
      51: new           #9                  // class java/util/LinkedHashSet
      54: dup
      55: invokespecial #10                 // Method java/util/LinkedHashSet."<init>":()V
      58: putfield      #12                 // Field tableSourceNodes:Ljava/util/LinkedHashSet;
      61: aload_0
      62: new           #13                 // class org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder$1
      65: dup
      66: aload_0
      67: ldc           #15                 // String root
      69: invokespecial #16                 // Method org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder$1."<init>":(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Ljava/lang/String;)V
      72: putfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      75: aload_0
      76: aload_1
      77: putfield      #18                 // Field internalTopologyBuilder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      80: return

  public <K, V> org.apache.kafka.streams.kstream.KStream<K, V> stream(java.util.Collection<java.lang.String>, org.apache.kafka.streams.kstream.internals.ConsumedInternal<K, V>);
    Code:
       0: new           #19                 // class org/apache/kafka/streams/kstream/internals/NamedInternal
       3: dup
       4: aload_2
       5: invokevirtual #20                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.name:()Ljava/lang/String;
       8: invokespecial #21                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal."<init>":(Ljava/lang/String;)V
      11: aload_0
      12: ldc           #23                 // String KSTREAM-SOURCE-
      14: invokevirtual #24                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal.orElseGenerateWithPrefix:(Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)Ljava/lang/String;
      17: astore_3
      18: new           #25                 // class org/apache/kafka/streams/kstream/internals/graph/StreamSourceNode
      21: dup
      22: aload_3
      23: aload_1
      24: aload_2
      25: invokespecial #26                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamSourceNode."<init>":(Ljava/lang/String;Ljava/util/Collection;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)V
      28: astore        4
      30: aload_0
      31: aload_0
      32: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      35: aload         4
      37: invokevirtual #27                 // Method addGraphNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
      40: new           #22                 // class org/apache/kafka/streams/kstream/internals/KStreamImpl
      43: dup
      44: aload_3
      45: aload_2
      46: invokevirtual #28                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
      49: aload_2
      50: invokevirtual #29                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
      53: aload_3
      54: invokestatic  #30                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      57: iconst_0
      58: aload         4
      60: aload_0
      61: invokespecial #31                 // Method org/apache/kafka/streams/kstream/internals/KStreamImpl."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;ZLorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
      64: areturn

  public <K, V> org.apache.kafka.streams.kstream.KStream<K, V> stream(java.util.regex.Pattern, org.apache.kafka.streams.kstream.internals.ConsumedInternal<K, V>);
    Code:
       0: aload_0
       1: ldc           #23                 // String KSTREAM-SOURCE-
       3: invokevirtual #32                 // Method newProcessorName:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_3
       7: new           #25                 // class org/apache/kafka/streams/kstream/internals/graph/StreamSourceNode
      10: dup
      11: aload_3
      12: aload_1
      13: aload_2
      14: invokespecial #33                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamSourceNode."<init>":(Ljava/lang/String;Ljava/util/regex/Pattern;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)V
      17: astore        4
      19: aload_0
      20: aload_0
      21: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      24: aload         4
      26: invokevirtual #27                 // Method addGraphNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
      29: new           #22                 // class org/apache/kafka/streams/kstream/internals/KStreamImpl
      32: dup
      33: aload_3
      34: aload_2
      35: invokevirtual #28                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
      38: aload_2
      39: invokevirtual #29                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
      42: aload_3
      43: invokestatic  #30                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      46: iconst_0
      47: aload         4
      49: aload_0
      50: invokespecial #31                 // Method org/apache/kafka/streams/kstream/internals/KStreamImpl."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;ZLorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
      53: areturn

  public <K, V> org.apache.kafka.streams.kstream.KTable<K, V> table(java.lang.String, org.apache.kafka.streams.kstream.internals.ConsumedInternal<K, V>, org.apache.kafka.streams.kstream.internals.MaterializedInternal<K, V, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: new           #19                 // class org/apache/kafka/streams/kstream/internals/NamedInternal
       3: dup
       4: aload_2
       5: invokevirtual #20                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.name:()Ljava/lang/String;
       8: invokespecial #21                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal."<init>":(Ljava/lang/String;)V
      11: astore        4
      13: aload         4
      15: ldc           #34                 // String -source
      17: aload_0
      18: ldc           #23                 // String KSTREAM-SOURCE-
      20: invokevirtual #35                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal.suffixWithOrElseGet:(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)Ljava/lang/String;
      23: astore        5
      25: aload         4
      27: aload_0
      28: ldc           #37                 // String KTABLE-SOURCE-
      30: invokevirtual #24                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal.orElseGenerateWithPrefix:(Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)Ljava/lang/String;
      33: astore        6
      35: new           #38                 // class org/apache/kafka/streams/kstream/internals/KTableSource
      38: dup
      39: aload_3
      40: invokevirtual #39                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.storeName:()Ljava/lang/String;
      43: aload_3
      44: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.queryableStoreName:()Ljava/lang/String;
      47: invokespecial #41                 // Method org/apache/kafka/streams/kstream/internals/KTableSource."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      50: astore        7
      52: new           #42                 // class org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters
      55: dup
      56: aload         7
      58: aload         6
      60: invokespecial #43                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters."<init>":(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/lang/String;)V
      63: astore        8
      65: invokestatic  #44                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.tableSourceNodeBuilder:()Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      68: aload_1
      69: invokevirtual #45                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withTopic:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      72: aload         5
      74: invokevirtual #46                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withSourceName:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      77: aload         6
      79: invokevirtual #47                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withNodeName:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      82: aload_2
      83: invokevirtual #48                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withConsumedInternal:(Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      86: aload_3
      87: invokevirtual #49                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withMaterializedInternal:(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      90: aload         8
      92: invokevirtual #50                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withProcessorParameters:(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      95: invokevirtual #51                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.build:()Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode;
      98: astore        9
     100: aload_0
     101: aload_0
     102: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
     105: aload         9
     107: invokevirtual #27                 // Method addGraphNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
     110: new           #36                 // class org/apache/kafka/streams/kstream/internals/KTableImpl
     113: dup
     114: aload         6
     116: aload_2
     117: invokevirtual #28                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
     120: aload_2
     121: invokevirtual #29                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
     124: aload         5
     126: invokestatic  #30                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
     129: aload_3
     130: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.queryableStoreName:()Ljava/lang/String;
     133: aload         7
     135: aload         9
     137: aload_0
     138: invokespecial #52                 // Method org/apache/kafka/streams/kstream/internals/KTableImpl."<init>":(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/util/Set;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;)V
     141: areturn

  public <K, V> org.apache.kafka.streams.kstream.GlobalKTable<K, V> globalTable(java.lang.String, org.apache.kafka.streams.kstream.internals.ConsumedInternal<K, V>, org.apache.kafka.streams.kstream.internals.MaterializedInternal<K, V, org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_2
       1: ldc           #53                 // String consumed can\'t be null
       3: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #55                 // String materialized can\'t be null
      10: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: invokevirtual #56                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.withLoggingDisabled:()Lorg/apache/kafka/streams/kstream/Materialized;
      18: pop
      19: new           #19                 // class org/apache/kafka/streams/kstream/internals/NamedInternal
      22: dup
      23: aload_2
      24: invokevirtual #20                 // Method org/apache/kafka/streams/kstream/internals/ConsumedInternal.name:()Ljava/lang/String;
      27: invokespecial #21                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal."<init>":(Ljava/lang/String;)V
      30: astore        4
      32: aload         4
      34: ldc           #34                 // String -source
      36: aload_0
      37: ldc           #23                 // String KSTREAM-SOURCE-
      39: invokevirtual #35                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal.suffixWithOrElseGet:(Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)Ljava/lang/String;
      42: astore        5
      44: aload         4
      46: aload_0
      47: ldc           #37                 // String KTABLE-SOURCE-
      49: invokevirtual #24                 // Method org/apache/kafka/streams/kstream/internals/NamedInternal.orElseGenerateWithPrefix:(Lorg/apache/kafka/streams/kstream/internals/InternalNameProvider;Ljava/lang/String;)Ljava/lang/String;
      52: astore        6
      54: aload_3
      55: invokevirtual #39                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.storeName:()Ljava/lang/String;
      58: astore        7
      60: new           #38                 // class org/apache/kafka/streams/kstream/internals/KTableSource
      63: dup
      64: aload         7
      66: aload         7
      68: invokespecial #41                 // Method org/apache/kafka/streams/kstream/internals/KTableSource."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      71: astore        8
      73: new           #42                 // class org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters
      76: dup
      77: aload         8
      79: aload         6
      81: invokespecial #43                 // Method org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters."<init>":(Lorg/apache/kafka/streams/processor/ProcessorSupplier;Ljava/lang/String;)V
      84: astore        9
      86: invokestatic  #44                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.tableSourceNodeBuilder:()Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      89: aload_1
      90: invokevirtual #45                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withTopic:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      93: iconst_1
      94: invokevirtual #57                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.isGlobalKTable:(Z)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
      97: aload         5
      99: invokevirtual #46                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withSourceName:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
     102: aload_2
     103: invokevirtual #48                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withConsumedInternal:(Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
     106: aload_3
     107: invokevirtual #49                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withMaterializedInternal:(Lorg/apache/kafka/streams/kstream/internals/MaterializedInternal;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
     110: aload         9
     112: invokevirtual #50                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.withProcessorParameters:(Lorg/apache/kafka/streams/kstream/internals/graph/ProcessorParameters;)Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder;
     115: invokevirtual #51                 // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode$TableSourceNodeBuilder.build:()Lorg/apache/kafka/streams/kstream/internals/graph/TableSourceNode;
     118: astore        10
     120: aload_0
     121: aload_0
     122: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
     125: aload         10
     127: invokevirtual #27                 // Method addGraphNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
     130: new           #58                 // class org/apache/kafka/streams/kstream/internals/GlobalKTableImpl
     133: dup
     134: new           #59                 // class org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier
     137: dup
     138: aload         7
     140: invokespecial #60                 // Method org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier."<init>":(Ljava/lang/String;)V
     143: aload_3
     144: invokevirtual #40                 // Method org/apache/kafka/streams/kstream/internals/MaterializedInternal.queryableStoreName:()Ljava/lang/String;
     147: invokespecial #61                 // Method org/apache/kafka/streams/kstream/internals/GlobalKTableImpl."<init>":(Lorg/apache/kafka/streams/kstream/internals/KTableValueGetterSupplier;Ljava/lang/String;)V
     150: areturn

  public java.lang.String newProcessorName(java.lang.String);
    Code:
       0: new           #62                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #65                 // String %010d
      13: iconst_1
      14: anewarray     #66                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #4                  // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      26: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public java.lang.String newStoreName(java.lang.String);
    Code:
       0: new           #62                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #71                 // String STATE-STORE-%010d
      13: iconst_1
      14: anewarray     #66                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #4                  // Field index:Ljava/util/concurrent/atomic/AtomicInteger;
      23: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      26: invokestatic  #68                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public synchronized void addStateStore(org.apache.kafka.streams.state.StoreBuilder<?>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
       5: new           #72                 // class org/apache/kafka/streams/kstream/internals/graph/StateStoreNode
       8: dup
       9: aload_1
      10: invokespecial #73                 // Method org/apache/kafka/streams/kstream/internals/graph/StateStoreNode."<init>":(Lorg/apache/kafka/streams/state/StoreBuilder;)V
      13: invokevirtual #27                 // Method addGraphNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
      16: return

  public synchronized <K, V> void addGlobalStore(org.apache.kafka.streams.state.StoreBuilder<?>, java.lang.String, java.lang.String, org.apache.kafka.streams.kstream.internals.ConsumedInternal<K, V>, java.lang.String, org.apache.kafka.streams.processor.ProcessorSupplier<K, V>);
    Code:
       0: new           #74                 // class org/apache/kafka/streams/kstream/internals/graph/GlobalStoreNode
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokespecial #75                 // Method org/apache/kafka/streams/kstream/internals/graph/GlobalStoreNode."<init>":(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
      16: astore        7
      18: aload_0
      19: aload_0
      20: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      23: aload         7
      25: invokevirtual #27                 // Method addGraphNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
      28: return

  public synchronized <K, V> void addGlobalStore(org.apache.kafka.streams.state.StoreBuilder<?>, java.lang.String, org.apache.kafka.streams.kstream.internals.ConsumedInternal<K, V>, org.apache.kafka.streams.processor.ProcessorSupplier<K, V>);
    Code:
       0: aload_1
       1: invokeinterface #76,  1           // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.withLoggingDisabled:()Lorg/apache/kafka/streams/state/StoreBuilder;
       6: pop
       7: aload_0
       8: ldc           #23                 // String KSTREAM-SOURCE-
      10: invokevirtual #32                 // Method newProcessorName:(Ljava/lang/String;)Ljava/lang/String;
      13: astore        5
      15: aload_0
      16: ldc           #37                 // String KTABLE-SOURCE-
      18: invokevirtual #32                 // Method newProcessorName:(Ljava/lang/String;)Ljava/lang/String;
      21: astore        6
      23: aload_0
      24: aload_1
      25: aload         5
      27: aload_2
      28: aload_3
      29: aload         6
      31: aload         4
      33: invokevirtual #77                 // Method addGlobalStore:(Lorg/apache/kafka/streams/state/StoreBuilder;Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/streams/kstream/internals/ConsumedInternal;Ljava/lang/String;Lorg/apache/kafka/streams/processor/ProcessorSupplier;)V
      36: return

  void addGraphNode(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_1
       1: ldc           #78                 // String parent node can\'t be null
       3: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #79                 // String child node can\'t be null
      10: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_1
      15: aload_2
      16: invokevirtual #80                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.addChild:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
      19: aload_0
      20: aload_2
      21: invokespecial #81                 // Method maybeAddNodeForOptimizationMetadata:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
      24: return

  void addGraphNode(java.util.Collection<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode>, org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_1
       1: ldc           #78                 // String parent node can\'t be null
       3: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #79                 // String child node can\'t be null
      10: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_1
      15: invokeinterface #82,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      20: ifeq          33
      23: new           #83                 // class org/apache/kafka/streams/errors/StreamsException
      26: dup
      27: ldc           #84                 // String Parent node collection can\'t be empty
      29: invokespecial #85                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_1
      34: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          70
      49: aload_3
      50: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      58: astore        4
      60: aload_0
      61: aload         4
      63: aload_2
      64: invokevirtual #27                 // Method addGraphNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
      67: goto          40
      70: return

  private void maybeAddNodeForOptimizationMetadata(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #5                  // Field buildPriorityIndex:Ljava/util/concurrent/atomic/AtomicInteger;
       5: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
       8: invokevirtual #90                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.setBuildPriority:(I)V
      11: aload_1
      12: invokevirtual #91                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.parentNodes:()Ljava/util/Collection;
      15: invokeinterface #82,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      20: ifeq          80
      23: aload_1
      24: invokevirtual #92                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.nodeName:()Ljava/lang/String;
      27: ldc           #15                 // String root
      29: invokevirtual #93                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifne          80
      35: new           #94                 // class java/lang/IllegalStateException
      38: dup
      39: new           #62                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #95                 // String Nodes should not have a null parent node.  Name:
      48: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokevirtual #92                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.nodeName:()Ljava/lang/String;
      55: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #96                 // String  Type:
      60: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_1
      64: invokevirtual #97                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      67: invokevirtual #98                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      70: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #99                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_1
      81: invokevirtual #100                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.isKeyChangingOperation:()Z
      84: ifeq          106
      87: aload_0
      88: getfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
      91: aload_1
      92: new           #9                  // class java/util/LinkedHashSet
      95: dup
      96: invokespecial #10                 // Method java/util/LinkedHashSet."<init>":()V
      99: invokevirtual #101                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     102: pop
     103: goto          180
     106: aload_1
     107: instanceof    #102                // class org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode
     110: ifeq          145
     113: aload_0
     114: aload_1
     115: invokespecial #103                // Method getKeyChangingParentNode:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
     118: astore_2
     119: aload_2
     120: ifnull        142
     123: aload_0
     124: getfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
     127: aload_2
     128: invokevirtual #104                // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     131: checkcast     #9                  // class java/util/LinkedHashSet
     134: aload_1
     135: checkcast     #102                // class org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode
     138: invokevirtual #105                // Method java/util/LinkedHashSet.add:(Ljava/lang/Object;)Z
     141: pop
     142: goto          180
     145: aload_1
     146: invokevirtual #106                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.isMergeNode:()Z
     149: ifeq          164
     152: aload_0
     153: getfield      #11                 // Field mergeNodes:Ljava/util/LinkedHashSet;
     156: aload_1
     157: invokevirtual #105                // Method java/util/LinkedHashSet.add:(Ljava/lang/Object;)Z
     160: pop
     161: goto          180
     164: aload_1
     165: instanceof    #107                // class org/apache/kafka/streams/kstream/internals/graph/TableSourceNode
     168: ifeq          180
     171: aload_0
     172: getfield      #12                 // Field tableSourceNodes:Ljava/util/LinkedHashSet;
     175: aload_1
     176: invokevirtual #105                // Method java/util/LinkedHashSet.add:(Ljava/lang/Object;)Z
     179: pop
     180: return

  public void buildAndOptimizeTopology();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #108                // Method buildAndOptimizeTopology:(Ljava/util/Properties;)V
       5: return

  public void buildAndOptimizeTopology(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #109                // Method maybePerformOptimizations:(Ljava/util/Properties;)V
       5: new           #110                // class java/util/PriorityQueue
       8: dup
       9: iconst_5
      10: invokedynamic #111,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      15: invokestatic  #112                // InterfaceMethod java/util/Comparator.comparing:(Ljava/util/function/Function;)Ljava/util/Comparator;
      18: invokespecial #113                // Method java/util/PriorityQueue."<init>":(ILjava/util/Comparator;)V
      21: astore_2
      22: aload_2
      23: aload_0
      24: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      27: invokevirtual #114                // Method java/util/PriorityQueue.offer:(Ljava/lang/Object;)Z
      30: pop
      31: aload_2
      32: invokevirtual #115                // Method java/util/PriorityQueue.isEmpty:()Z
      35: ifne          145
      38: aload_2
      39: invokevirtual #116                // Method java/util/PriorityQueue.remove:()Ljava/lang/Object;
      42: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      45: astore_3
      46: getstatic     #117                // Field LOG:Lorg/slf4j/Logger;
      49: invokeinterface #118,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      54: ifeq          72
      57: getstatic     #117                // Field LOG:Lorg/slf4j/Logger;
      60: ldc           #119                // String Adding nodes to topology {} child nodes {}
      62: aload_3
      63: aload_3
      64: invokevirtual #120                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.children:()Ljava/util/Collection;
      67: invokeinterface #121,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      72: aload_3
      73: invokevirtual #122                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.allParentsWrittenToTopology:()Z
      76: ifeq          99
      79: aload_3
      80: invokevirtual #123                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.hasWrittenToTopology:()Z
      83: ifne          99
      86: aload_3
      87: aload_0
      88: getfield      #18                 // Field internalTopologyBuilder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
      91: invokevirtual #124                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.writeToTopology:(Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;)V
      94: aload_3
      95: iconst_1
      96: invokevirtual #125                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.setHasWrittenToTopology:(Z)V
      99: aload_3
     100: invokevirtual #120                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.children:()Ljava/util/Collection;
     103: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     108: astore        4
     110: aload         4
     112: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     117: ifeq          142
     120: aload         4
     122: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     127: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
     130: astore        5
     132: aload_2
     133: aload         5
     135: invokevirtual #114                // Method java/util/PriorityQueue.offer:(Ljava/lang/Object;)Z
     138: pop
     139: goto          110
     142: goto          31
     145: aload_0
     146: getfield      #18                 // Field internalTopologyBuilder:Lorg/apache/kafka/streams/processor/internals/InternalTopologyBuilder;
     149: invokevirtual #126                // Method org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.validateCopartition:()V
     152: return

  private void maybePerformOptimizations(java.util.Properties);
    Code:
       0: aload_1
       1: ifnull        36
       4: ldc           #128                // String all
       6: aload_1
       7: ldc           #129                // String topology.optimization
       9: invokevirtual #130                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      12: invokevirtual #93                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          36
      18: getstatic     #117                // Field LOG:Lorg/slf4j/Logger;
      21: ldc           #131                // String Optimizing the Kafka Streams graph for repartition nodes
      23: invokeinterface #132,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      28: aload_0
      29: invokespecial #133                // Method optimizeKTableSourceTopics:()V
      32: aload_0
      33: invokespecial #134                // Method maybeOptimizeRepartitionOperations:()V
      36: return

  private void optimizeKTableSourceTopics();
    Code:
       0: getstatic     #117                // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #135                // String Marking KTable source nodes to optimize using source topic for changelogs
       5: invokeinterface #132,  2          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      10: aload_0
      11: getfield      #12                 // Field tableSourceNodes:Ljava/util/LinkedHashSet;
      14: invokedynamic #136,  0            // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      19: invokevirtual #137                // Method java/util/LinkedHashSet.forEach:(Ljava/util/function/Consumer;)V
      22: return

  private void maybeOptimizeRepartitionOperations();
    Code:
       0: aload_0
       1: invokespecial #138                // Method maybeUpdateKeyChangingRepartitionNodeMap:()V
       4: aload_0
       5: getfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
       8: invokevirtual #139                // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      11: invokeinterface #140,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          437
      26: aload_1
      27: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #141                // class java/util/Map$Entry
      35: astore_2
      36: aload_2
      37: invokeinterface #142,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      45: astore_3
      46: aload_2
      47: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      52: checkcast     #9                  // class java/util/LinkedHashSet
      55: invokevirtual #144                // Method java/util/LinkedHashSet.isEmpty:()Z
      58: ifeq          64
      61: goto          17
      64: new           #145                // class org/apache/kafka/streams/kstream/internals/GroupedInternal
      67: dup
      68: aload_0
      69: aload_2
      70: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #146                // class java/util/Collection
      78: invokespecial #147                // Method getRepartitionSerdes:(Ljava/util/Collection;)Lorg/apache/kafka/streams/kstream/internals/GroupedInternal;
      81: invokespecial #148                // Method org/apache/kafka/streams/kstream/internals/GroupedInternal."<init>":(Lorg/apache/kafka/streams/kstream/Grouped;)V
      84: astore        4
      86: aload_0
      87: aload_2
      88: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      93: checkcast     #146                // class java/util/Collection
      96: invokespecial #149                // Method getFirstRepartitionTopicName:(Ljava/util/Collection;)Ljava/lang/String;
      99: astore        5
     101: aload_0
     102: aload         5
     104: aload         4
     106: invokevirtual #150                // Method org/apache/kafka/streams/kstream/internals/GroupedInternal.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
     109: aload         4
     111: invokevirtual #151                // Method org/apache/kafka/streams/kstream/internals/GroupedInternal.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
     114: invokespecial #152                // Method createRepartitionNode:(Ljava/lang/String;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode;
     117: astore        6
     119: aload         6
     121: aload_3
     122: invokevirtual #153                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.buildPriority:()Ljava/lang/Integer;
     125: invokevirtual #154                // Method java/lang/Integer.intValue:()I
     128: invokevirtual #90                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.setBuildPriority:(I)V
     131: aload_2
     132: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     137: checkcast     #9                  // class java/util/LinkedHashSet
     140: invokevirtual #155                // Method java/util/LinkedHashSet.iterator:()Ljava/util/Iterator;
     143: astore        7
     145: aload         7
     147: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     152: ifeq          422
     155: aload         7
     157: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     162: checkcast     #102                // class org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode
     165: astore        8
     167: aload_0
     168: aload         8
     170: aload_3
     171: invokedynamic #156,  0            // InvokeDynamic #2:test:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)Ljava/util/function/Predicate;
     176: invokespecial #157                // Method findParentNodeMatching:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/function/Predicate;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
     179: astore        9
     181: aload         9
     183: ifnonnull     208
     186: new           #83                 // class org/apache/kafka/streams/errors/StreamsException
     189: dup
     190: ldc           #158                // String Found a null keyChangingChild node for %s
     192: iconst_1
     193: anewarray     #66                 // class java/lang/Object
     196: dup
     197: iconst_0
     198: aload         8
     200: aastore
     201: invokestatic  #69                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     204: invokespecial #85                 // Method org/apache/kafka/streams/errors/StreamsException."<init>":(Ljava/lang/String;)V
     207: athrow
     208: getstatic     #117                // Field LOG:Lorg/slf4j/Logger;
     211: ldc           #159                // String Found the child node of the key changer {} from the repartition {}.
     213: aload         9
     215: aload         8
     217: invokeinterface #121,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     222: aload         6
     224: aload         9
     226: invokevirtual #80                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.addChild:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
     229: getstatic     #117                // Field LOG:Lorg/slf4j/Logger;
     232: ldc           #160                // String Removing {} from {}  children {}
     234: iconst_3
     235: anewarray     #66                 // class java/lang/Object
     238: dup
     239: iconst_0
     240: aload         9
     242: aastore
     243: dup
     244: iconst_1
     245: aload_3
     246: aastore
     247: dup
     248: iconst_2
     249: aload_3
     250: invokevirtual #120                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.children:()Ljava/util/Collection;
     253: aastore
     254: invokeinterface #161,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     259: aload_3
     260: aload         9
     262: invokevirtual #162                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.removeChild:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)Z
     265: pop
     266: aload         8
     268: invokevirtual #163                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.children:()Ljava/util/Collection;
     271: astore        10
     273: aload         8
     275: invokevirtual #164                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.parentNodes:()Ljava/util/Collection;
     278: astore        11
     280: aload         10
     282: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     287: astore        12
     289: aload         12
     291: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     296: ifeq          355
     299: aload         12
     301: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     306: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
     309: astore        13
     311: aload         11
     313: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     318: astore        14
     320: aload         14
     322: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     327: ifeq          352
     330: aload         14
     332: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     337: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
     340: astore        15
     342: aload         15
     344: aload         13
     346: invokevirtual #80                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.addChild:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
     349: goto          320
     352: goto          289
     355: aload         11
     357: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     362: astore        12
     364: aload         12
     366: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     371: ifeq          397
     374: aload         12
     376: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     381: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
     384: astore        13
     386: aload         13
     388: aload         8
     390: invokevirtual #162                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.removeChild:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)Z
     393: pop
     394: goto          364
     397: aload         8
     399: invokevirtual #165                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.clearChildren:()V
     402: getstatic     #117                // Field LOG:Lorg/slf4j/Logger;
     405: ldc           #166                // String Updated node {} children {}
     407: aload         6
     409: aload         6
     411: invokevirtual #120                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.children:()Ljava/util/Collection;
     414: invokeinterface #121,  4          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     419: goto          145
     422: aload_3
     423: aload         6
     425: invokevirtual #80                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.addChild:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)V
     428: aload_1
     429: invokeinterface #167,  1          // InterfaceMethod java/util/Iterator.remove:()V
     434: goto          17
     437: return

  private void maybeUpdateKeyChangingRepartitionNodeMap();
    Code:
       0: new           #168                // class java/util/HashMap
       3: dup
       4: invokespecial #169                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: new           #170                // class java/util/HashSet
      11: dup
      12: invokespecial #171                // Method java/util/HashSet."<init>":()V
      15: astore_2
      16: aload_0
      17: getfield      #11                 // Field mergeNodes:Ljava/util/LinkedHashSet;
      20: invokevirtual #155                // Method java/util/LinkedHashSet.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          169
      33: aload_3
      34: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      42: astore        4
      44: aload_1
      45: aload         4
      47: new           #9                  // class java/util/LinkedHashSet
      50: dup
      51: invokespecial #10                 // Method java/util/LinkedHashSet."<init>":()V
      54: invokeinterface #172,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: pop
      60: aload_0
      61: getfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
      64: invokevirtual #139                // Method java/util/LinkedHashMap.entrySet:()Ljava/util/Set;
      67: astore        5
      69: aload         5
      71: invokeinterface #140,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      76: astore        6
      78: aload         6
      80: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      85: ifeq          166
      88: aload         6
      90: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      95: checkcast     #141                // class java/util/Map$Entry
      98: astore        7
     100: aload_0
     101: aload         4
     103: aload         7
     105: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     110: checkcast     #9                  // class java/util/LinkedHashSet
     113: invokespecial #173                // Method mergeNodeHasRepartitionChildren:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/LinkedHashSet;)Z
     116: ifeq          163
     119: aload_0
     120: aload         4
     122: aload         7
     124: invokedynamic #174,  0            // InvokeDynamic #3:test:(Ljava/util/Map$Entry;)Ljava/util/function/Predicate;
     129: invokespecial #157                // Method findParentNodeMatching:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/function/Predicate;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
     132: astore        8
     134: aload         8
     136: ifnull        163
     139: aload_1
     140: aload         4
     142: invokeinterface #175,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     147: checkcast     #176                // class java/util/Set
     150: aload         7
     152: invokeinterface #142,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     157: invokeinterface #177,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     162: pop
     163: goto          78
     166: goto          24
     169: aload_1
     170: invokeinterface #178,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
     175: invokeinterface #140,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     180: astore_3
     181: aload_3
     182: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     187: ifeq          310
     190: aload_3
     191: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     196: checkcast     #141                // class java/util/Map$Entry
     199: astore        4
     201: aload         4
     203: invokeinterface #142,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     208: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
     211: astore        5
     213: aload         4
     215: invokeinterface #143,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     220: checkcast     #146                // class java/util/Collection
     223: astore        6
     225: new           #9                  // class java/util/LinkedHashSet
     228: dup
     229: invokespecial #10                 // Method java/util/LinkedHashSet."<init>":()V
     232: astore        7
     234: aload         6
     236: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     241: astore        8
     243: aload         8
     245: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     250: ifeq          295
     253: aload         8
     255: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     260: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
     263: astore        9
     265: aload         7
     267: aload_0
     268: getfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
     271: aload         9
     273: invokevirtual #104                // Method java/util/LinkedHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     276: checkcast     #146                // class java/util/Collection
     279: invokevirtual #179                // Method java/util/LinkedHashSet.addAll:(Ljava/util/Collection;)Z
     282: pop
     283: aload_2
     284: aload         9
     286: invokeinterface #177,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     291: pop
     292: goto          243
     295: aload_0
     296: getfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
     299: aload         5
     301: aload         7
     303: invokevirtual #101                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     306: pop
     307: goto          181
     310: aload_2
     311: invokeinterface #140,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     316: astore_3
     317: aload_3
     318: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     323: ifeq          350
     326: aload_3
     327: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     332: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
     335: astore        4
     337: aload_0
     338: getfield      #8                  // Field keyChangingOperationsToOptimizableRepartitionNodes:Ljava/util/LinkedHashMap;
     341: aload         4
     343: invokevirtual #180                // Method java/util/LinkedHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     346: pop
     347: goto          317
     350: return

  private boolean mergeNodeHasRepartitionChildren(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, java.util.LinkedHashSet<org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<?, ?>>);
    Code:
       0: aload_2
       1: invokevirtual #181                // Method java/util/LinkedHashSet.stream:()Ljava/util/stream/Stream;
       4: aload_0
       5: aload_1
       6: invokedynamic #182,  0            // InvokeDynamic #4:test:(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)Ljava/util/function/Predicate;
      11: invokeinterface #183,  2          // InterfaceMethod java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z
      16: ireturn

  private <K, V> org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<K, V> createRepartitionNode(java.lang.String, org.apache.kafka.common.serialization.Serde<K>, org.apache.kafka.common.serialization.Serde<V>);
    Code:
       0: invokestatic  #184                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.optimizableRepartitionNodeBuilder:()Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder;
       3: astore        4
       5: aload_0
       6: aload_2
       7: aload_3
       8: aload_1
       9: aconst_null
      10: aload         4
      12: invokestatic  #185                // Method org/apache/kafka/streams/kstream/internals/KStreamImpl.createRepartitionedSource:(Lorg/apache/kafka/streams/kstream/internals/InternalStreamsBuilder;Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;Ljava/lang/String;Lorg/apache/kafka/streams/processor/StreamPartitioner;Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;)Ljava/lang/String;
      15: pop
      16: aload         4
      18: aload_1
      19: invokevirtual #186                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder.withRepartitionTopic:(Ljava/lang/String;)Lorg/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode$BaseRepartitionNodeBuilder;
      22: pop
      23: aload         4
      25: invokevirtual #187                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode$OptimizableRepartitionNodeBuilder.build:()Lorg/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode;
      28: areturn

  private org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode getKeyChangingParentNode(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #188,  0            // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
       7: invokespecial #157                // Method findParentNodeMatching:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/function/Predicate;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      10: astore_2
      11: aload_0
      12: aload_1
      13: invokedynamic #189,  0            // InvokeDynamic #6:test:()Ljava/util/function/Predicate;
      18: invokespecial #157                // Method findParentNodeMatching:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/function/Predicate;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      21: astore_3
      22: aload_2
      23: ifnull        36
      26: aload_2
      27: aload_3
      28: invokevirtual #190                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      31: ifeq          36
      34: aload_3
      35: areturn
      36: aconst_null
      37: areturn

  private java.lang.String getFirstRepartitionTopicName(java.util.Collection<org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<?, ?>>);
    Code:
       0: aload_1
       1: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      11: checkcast     #102                // class org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode
      14: invokevirtual #191                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.repartitionTopic:()Ljava/lang/String;
      17: areturn

  private <K, V> org.apache.kafka.streams.kstream.internals.GroupedInternal<K, V> getRepartitionSerdes(java.util.Collection<org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode<?, ?>>);
    Code:
       0: aconst_null
       1: astore_2
       2: aconst_null
       3: astore_3
       4: aload_1
       5: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      10: astore        4
      12: aload         4
      14: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          84
      22: aload         4
      24: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #102                // class org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode
      32: astore        5
      34: aload_2
      35: ifnonnull     52
      38: aload         5
      40: invokevirtual #192                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
      43: ifnull        52
      46: aload         5
      48: invokevirtual #192                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.keySerde:()Lorg/apache/kafka/common/serialization/Serde;
      51: astore_2
      52: aload_3
      53: ifnonnull     70
      56: aload         5
      58: invokevirtual #193                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
      61: ifnull        70
      64: aload         5
      66: invokevirtual #193                // Method org/apache/kafka/streams/kstream/internals/graph/OptimizableRepartitionNode.valueSerde:()Lorg/apache/kafka/common/serialization/Serde;
      69: astore_3
      70: aload_2
      71: ifnull        81
      74: aload_3
      75: ifnull        81
      78: goto          84
      81: goto          12
      84: new           #145                // class org/apache/kafka/streams/kstream/internals/GroupedInternal
      87: dup
      88: aload_2
      89: aload_3
      90: invokestatic  #194                // Method org/apache/kafka/streams/kstream/Grouped.with:(Lorg/apache/kafka/common/serialization/Serde;Lorg/apache/kafka/common/serialization/Serde;)Lorg/apache/kafka/streams/kstream/Grouped;
      93: invokespecial #148                // Method org/apache/kafka/streams/kstream/internals/GroupedInternal."<init>":(Lorg/apache/kafka/streams/kstream/Grouped;)V
      96: areturn

  private org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode findParentNodeMatching(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, java.util.function.Predicate<org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #195,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
       7: ifeq          12
      10: aload_1
      11: areturn
      12: aconst_null
      13: astore_3
      14: aload_1
      15: invokevirtual #91                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.parentNodes:()Ljava/util/Collection;
      18: invokeinterface #86,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          72
      35: aload         4
      37: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #89                 // class org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode
      45: astore        5
      47: aload_2
      48: aload         5
      50: invokeinterface #195,  2          // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      55: ifeq          61
      58: aload         5
      60: areturn
      61: aload_0
      62: aload         5
      64: aload_2
      65: invokespecial #157                // Method findParentNodeMatching:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/function/Predicate;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      68: astore_3
      69: goto          25
      72: aload_3
      73: areturn

  public org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode root();
    Code:
       0: aload_0
       1: getfield      #17                 // Field root:Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
       4: areturn

  private static boolean lambda$getKeyChangingParentNode$5(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_0
       1: invokevirtual #100                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.isKeyChangingOperation:()Z
       4: ifne          14
       7: aload_0
       8: invokevirtual #196                // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.isValueChangingOperation:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private boolean lambda$mergeNodeHasRepartitionChildren$4(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, org.apache.kafka.streams.kstream.internals.graph.OptimizableRepartitionNode);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokedynamic #197,  0            // InvokeDynamic #7:test:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;)Ljava/util/function/Predicate;
       8: invokespecial #157                // Method findParentNodeMatching:(Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;Ljava/util/function/Predicate;)Lorg/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode;
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private static boolean lambda$null$3(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.parentNodes:()Ljava/util/Collection;
       4: aload_0
       5: invokeinterface #198,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      10: ireturn

  private static boolean lambda$maybeUpdateKeyChangingRepartitionNodeMap$2(java.util.Map$Entry, org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.parentNodes:()Ljava/util/Collection;
       4: aload_0
       5: invokeinterface #142,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      10: invokeinterface #198,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      15: ireturn

  private static boolean lambda$maybeOptimizeRepartitionOperations$1(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode, org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_1
       1: invokevirtual #91                 // Method org/apache/kafka/streams/kstream/internals/graph/StreamsGraphNode.parentNodes:()Ljava/util/Collection;
       4: aload_0
       5: invokeinterface #198,  2          // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      10: ireturn

  private static void lambda$optimizeKTableSourceTopics$0(org.apache.kafka.streams.kstream.internals.graph.StreamsGraphNode);
    Code:
       0: aload_0
       1: checkcast     #107                // class org/apache/kafka/streams/kstream/internals/graph/TableSourceNode
       4: iconst_1
       5: invokevirtual #199                // Method org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.reuseSourceTopicForChangeLog:(Z)V
       8: return

  static {};
    Code:
       0: ldc           #14                 // class org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder
       2: invokestatic  #200                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #117                // Field LOG:Lorg/slf4j/Logger;
       8: return
}
