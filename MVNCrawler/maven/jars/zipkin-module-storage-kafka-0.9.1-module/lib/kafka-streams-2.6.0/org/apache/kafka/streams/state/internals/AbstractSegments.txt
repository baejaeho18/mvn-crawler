Compiled from "AbstractSegments.java"
abstract class org.apache.kafka.streams.state.internals.AbstractSegments<S extends org.apache.kafka.streams.state.internals.Segment> implements org.apache.kafka.streams.state.internals.Segments<S> {
  private static final org.slf4j.Logger log;

  final java.util.TreeMap<java.lang.Long, S> segments;

  final java.lang.String name;

  private final long retentionPeriod;

  private final long segmentInterval;

  private final java.text.SimpleDateFormat formatter;

  org.apache.kafka.streams.state.internals.AbstractSegments(java.lang.String, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #4                  // Field segments:Ljava/util/TreeMap;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field name:Ljava/lang/String;
      20: aload_0
      21: lload         4
      23: putfield      #6                  // Field segmentInterval:J
      26: aload_0
      27: lload_2
      28: putfield      #7                  // Field retentionPeriod:J
      31: aload_0
      32: new           #8                  // class java/text/SimpleDateFormat
      35: dup
      36: ldc           #9                  // String yyyyMMddHHmm
      38: invokespecial #10                 // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      41: putfield      #11                 // Field formatter:Ljava/text/SimpleDateFormat;
      44: aload_0
      45: getfield      #11                 // Field formatter:Ljava/text/SimpleDateFormat;
      48: new           #12                 // class java/util/SimpleTimeZone
      51: dup
      52: iconst_0
      53: ldc           #13                 // String UTC
      55: invokespecial #14                 // Method java/util/SimpleTimeZone."<init>":(ILjava/lang/String;)V
      58: invokevirtual #15                 // Method java/text/SimpleDateFormat.setTimeZone:(Ljava/util/TimeZone;)V
      61: return

  public long segmentId(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #6                  // Field segmentInterval:J
       5: ldiv
       6: lreturn

  public java.lang.String segmentName(long);
    Code:
       0: new           #16                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #5                  // Field name:Ljava/lang/String;
      11: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #19                 // String .
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: lload_1
      20: aload_0
      21: getfield      #6                  // Field segmentInterval:J
      24: lmul
      25: invokevirtual #20                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      28: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  public S getSegmentForTimestamp(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/TreeMap;
       4: aload_0
       5: lload_1
       6: invokevirtual #22                 // Method segmentId:(J)J
       9: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      12: invokevirtual #24                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #25                 // class org/apache/kafka/streams/state/internals/Segment
      18: areturn

  public S getOrCreateSegmentIfLive(long, org.apache.kafka.streams.processor.internals.InternalProcessorContext, long);
    Code:
       0: lload         4
       2: aload_0
       3: getfield      #7                  // Field retentionPeriod:J
       6: lsub
       7: lstore        6
       9: aload_0
      10: lload         6
      12: invokevirtual #22                 // Method segmentId:(J)J
      15: lstore        8
      17: lload_1
      18: lload         8
      20: lcmp
      21: iflt          35
      24: aload_0
      25: lload_1
      26: aload_3
      27: invokevirtual #26                 // Method getOrCreateSegment:(JLorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/streams/state/internals/Segment;
      30: astore        10
      32: goto          38
      35: aconst_null
      36: astore        10
      38: aload_0
      39: lload         8
      41: invokespecial #27                 // Method cleanupEarlierThan:(J)V
      44: aload         10
      46: areturn

  public void openExisting(org.apache.kafka.streams.processor.internals.InternalProcessorContext, long);
    Code:
       0: new           #28                 // class java/io/File
       3: dup
       4: aload_1
       5: invokeinterface #29,  1           // InterfaceMethod org/apache/kafka/streams/processor/internals/InternalProcessorContext.stateDir:()Ljava/io/File;
      10: aload_0
      11: getfield      #5                  // Field name:Ljava/lang/String;
      14: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      17: astore        4
      19: aload         4
      21: invokevirtual #31                 // Method java/io/File.exists:()Z
      24: ifeq          87
      27: aload         4
      29: invokevirtual #32                 // Method java/io/File.list:()[Ljava/lang/String;
      32: astore        5
      34: aload         5
      36: ifnull        84
      39: aload         5
      41: invokestatic  #33                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      44: aload_0
      45: aload         4
      47: invokedynamic #34,  0             // InvokeDynamic #0:apply:(Lorg/apache/kafka/streams/state/internals/AbstractSegments;Ljava/io/File;)Ljava/util/function/Function;
      52: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      57: invokeinterface #36,  1           // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
      62: invokedynamic #37,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      67: invokeinterface #38,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      72: aload_0
      73: aload_1
      74: invokedynamic #39,  0             // InvokeDynamic #2:accept:(Lorg/apache/kafka/streams/state/internals/AbstractSegments;Lorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Ljava/util/function/Consumer;
      79: invokeinterface #40,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      84: goto          124
      87: aload         4
      89: invokevirtual #41                 // Method java/io/File.mkdir:()Z
      92: ifne          124
      95: new           #42                 // class org/apache/kafka/streams/errors/ProcessorStateException
      98: dup
      99: ldc           #43                 // String dir %s doesn\'t exist and cannot be created for segments %s
     101: iconst_2
     102: anewarray     #44                 // class java/lang/Object
     105: dup
     106: iconst_0
     107: aload         4
     109: aastore
     110: dup
     111: iconst_1
     112: aload_0
     113: getfield      #5                  // Field name:Ljava/lang/String;
     116: aastore
     117: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     120: invokespecial #46                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: goto          129
     127: astore        4
     129: aload_0
     130: lload_2
     131: aload_0
     132: getfield      #7                  // Field retentionPeriod:J
     135: lsub
     136: invokevirtual #22                 // Method segmentId:(J)J
     139: lstore        4
     141: aload_0
     142: lload         4
     144: invokespecial #27                 // Method cleanupEarlierThan:(J)V
     147: return
    Exception table:
       from    to  target type
           0   124   127   Class java/lang/Exception

  public java.util.List<S> segments(long, long);
    Code:
       0: new           #48                 // class java/util/ArrayList
       3: dup
       4: invokespecial #49                 // Method java/util/ArrayList."<init>":()V
       7: astore        5
       9: aload_0
      10: getfield      #4                  // Field segments:Ljava/util/TreeMap;
      13: aload_0
      14: lload_1
      15: invokevirtual #22                 // Method segmentId:(J)J
      18: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: iconst_1
      22: aload_0
      23: lload_3
      24: invokevirtual #22                 // Method segmentId:(J)J
      27: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      30: iconst_1
      31: invokevirtual #50                 // Method java/util/TreeMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
      34: astore        6
      36: aload         6
      38: invokeinterface #51,  1           // InterfaceMethod java/util/NavigableMap.values:()Ljava/util/Collection;
      43: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      48: astore        7
      50: aload         7
      52: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          95
      60: aload         7
      62: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #25                 // class org/apache/kafka/streams/state/internals/Segment
      70: astore        8
      72: aload         8
      74: invokeinterface #55,  1           // InterfaceMethod org/apache/kafka/streams/state/internals/Segment.isOpen:()Z
      79: ifeq          92
      82: aload         5
      84: aload         8
      86: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      91: pop
      92: goto          50
      95: aload         5
      97: areturn

  public java.util.List<S> allSegments();
    Code:
       0: new           #48                 // class java/util/ArrayList
       3: dup
       4: invokespecial #49                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field segments:Ljava/util/TreeMap;
      12: invokevirtual #57                 // Method java/util/TreeMap.values:()Ljava/util/Collection;
      15: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          60
      30: aload_2
      31: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #25                 // class org/apache/kafka/streams/state/internals/Segment
      39: astore_3
      40: aload_3
      41: invokeinterface #55,  1           // InterfaceMethod org/apache/kafka/streams/state/internals/Segment.isOpen:()Z
      46: ifeq          57
      49: aload_1
      50: aload_3
      51: invokeinterface #56,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          21
      60: aload_1
      61: areturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/TreeMap;
       4: invokevirtual #57                 // Method java/util/TreeMap.values:()Ljava/util/Collection;
       7: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          41
      22: aload_1
      23: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #25                 // class org/apache/kafka/streams/state/internals/Segment
      31: astore_2
      32: aload_2
      33: invokeinterface #58,  1           // InterfaceMethod org/apache/kafka/streams/state/internals/Segment.flush:()V
      38: goto          13
      41: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/TreeMap;
       4: invokevirtual #57                 // Method java/util/TreeMap.values:()Ljava/util/Collection;
       7: invokeinterface #52,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          41
      22: aload_1
      23: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #25                 // class org/apache/kafka/streams/state/internals/Segment
      31: astore_2
      32: aload_2
      33: invokeinterface #59,  1           // InterfaceMethod org/apache/kafka/streams/state/internals/Segment.close:()V
      38: goto          13
      41: aload_0
      42: getfield      #4                  // Field segments:Ljava/util/TreeMap;
      45: invokevirtual #60                 // Method java/util/TreeMap.clear:()V
      48: return

  private void cleanupEarlierThan(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field segments:Ljava/util/TreeMap;
       4: lload_1
       5: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       8: iconst_0
       9: invokevirtual #61                 // Method java/util/TreeMap.headMap:(Ljava/lang/Object;Z)Ljava/util/NavigableMap;
      12: invokeinterface #62,  1           // InterfaceMethod java/util/NavigableMap.entrySet:()Ljava/util/Set;
      17: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #53,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          97
      32: aload_3
      33: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #64                 // class java/util/Map$Entry
      41: astore        4
      43: aload_3
      44: invokeinterface #65,  1           // InterfaceMethod java/util/Iterator.remove:()V
      49: aload         4
      51: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      56: checkcast     #25                 // class org/apache/kafka/streams/state/internals/Segment
      59: astore        5
      61: aload         5
      63: invokeinterface #59,  1           // InterfaceMethod org/apache/kafka/streams/state/internals/Segment.close:()V
      68: aload         5
      70: invokeinterface #67,  1           // InterfaceMethod org/apache/kafka/streams/state/internals/Segment.destroy:()V
      75: goto          94
      78: astore        6
      80: getstatic     #69                 // Field log:Lorg/slf4j/Logger;
      83: ldc           #70                 // String Error destroying {}
      85: aload         5
      87: aload         6
      89: invokeinterface #71,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      94: goto          23
      97: return
    Exception table:
       from    to  target type
          68    75    78   Class java/io/IOException

  private long segmentIdFromSegmentName(java.lang.String, java.io.File);
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: invokevirtual #72                 // Method java/lang/String.length:()I
       7: istore_3
       8: aload_1
       9: iload_3
      10: invokevirtual #73                 // Method java/lang/String.charAt:(I)C
      13: istore        4
      15: aload_1
      16: iload_3
      17: iconst_1
      18: iadd
      19: invokevirtual #74                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      22: astore        5
      24: iload         4
      26: bipush        45
      28: if_icmpne     81
      31: aload_0
      32: getfield      #11                 // Field formatter:Ljava/text/SimpleDateFormat;
      35: aload         5
      37: invokevirtual #75                 // Method java/text/SimpleDateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;
      40: invokevirtual #76                 // Method java/util/Date.getTime:()J
      43: aload_0
      44: getfield      #6                  // Field segmentInterval:J
      47: ldiv
      48: lstore        6
      50: goto          70
      53: astore        8
      55: getstatic     #69                 // Field log:Lorg/slf4j/Logger;
      58: ldc           #78                 // String Unable to parse segmentName {} to a date. This segment will be skipped
      60: aload_1
      61: invokeinterface #79,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      66: ldc2_w        #80                 // long -1l
      69: lreturn
      70: aload_0
      71: aload_2
      72: aload_1
      73: lload         6
      75: invokespecial #82                 // Method renameSegmentFile:(Ljava/io/File;Ljava/lang/String;J)V
      78: goto          140
      81: aload         5
      83: invokestatic  #83                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      86: aload_0
      87: getfield      #6                  // Field segmentInterval:J
      90: ldiv
      91: lstore        6
      93: goto          125
      96: astore        8
      98: new           #42                 // class org/apache/kafka/streams/errors/ProcessorStateException
     101: dup
     102: new           #16                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #85                 // String Unable to parse segment id as long from segmentName:
     111: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_1
     115: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #46                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: iload         4
     127: bipush        58
     129: if_icmpne     140
     132: aload_0
     133: aload_2
     134: aload_1
     135: lload         6
     137: invokespecial #82                 // Method renameSegmentFile:(Ljava/io/File;Ljava/lang/String;J)V
     140: lload         6
     142: lreturn
    Exception table:
       from    to  target type
          31    50    53   Class java/text/ParseException
          81    93    96   Class java/lang/NumberFormatException

  private void renameSegmentFile(java.io.File, java.lang.String, long);
    Code:
       0: new           #28                 // class java/io/File
       3: dup
       4: aload_1
       5: aload_0
       6: lload_3
       7: invokevirtual #86                 // Method segmentName:(J)Ljava/lang/String;
      10: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      13: astore        5
      15: new           #28                 // class java/io/File
      18: dup
      19: aload_1
      20: aload_2
      21: invokespecial #30                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      24: astore        6
      26: aload         6
      28: aload         5
      30: invokevirtual #87                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      33: ifne          74
      36: new           #42                 // class org/apache/kafka/streams/errors/ProcessorStateException
      39: dup
      40: new           #16                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #88                 // String Unable to rename old style segment from:
      49: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload         6
      54: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #90                 // String  to new name:
      59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload         5
      64: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #46                 // Method org/apache/kafka/streams/errors/ProcessorStateException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: return

  private void lambda$openExisting$2(org.apache.kafka.streams.processor.internals.InternalProcessorContext, java.lang.Long);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #91                 // Method java/lang/Long.longValue:()J
       5: aload_1
       6: invokevirtual #26                 // Method getOrCreateSegment:(JLorg/apache/kafka/streams/processor/internals/InternalProcessorContext;)Lorg/apache/kafka/streams/state/internals/Segment;
       9: pop
      10: return

  private static boolean lambda$openExisting$1(java.lang.Long);
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method java/lang/Long.longValue:()J
       4: lconst_0
       5: lcmp
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private java.lang.Long lambda$openExisting$0(java.io.File, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #92                 // Method segmentIdFromSegmentName:(Ljava/lang/String;Ljava/io/File;)J
       6: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: areturn

  static {};
    Code:
       0: ldc           #93                 // class org/apache/kafka/streams/state/internals/AbstractSegments
       2: invokestatic  #94                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #69                 // Field log:Lorg/slf4j/Logger;
       8: return
}
