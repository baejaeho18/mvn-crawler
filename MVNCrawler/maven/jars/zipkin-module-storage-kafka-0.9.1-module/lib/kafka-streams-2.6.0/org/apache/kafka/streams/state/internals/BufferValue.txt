Compiled from "BufferValue.java"
public final class org.apache.kafka.streams.state.internals.BufferValue {
  private static final int NULL_VALUE_SENTINEL;

  private static final int OLD_PREV_DUPLICATE_VALUE_SENTINEL;

  private final byte[] priorValue;

  private final byte[] oldValue;

  private final byte[] newValue;

  private final org.apache.kafka.streams.processor.internals.ProcessorRecordContext recordContext;

  org.apache.kafka.streams.state.internals.BufferValue(byte[], byte[], byte[], org.apache.kafka.streams.processor.internals.ProcessorRecordContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field oldValue:[B
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field newValue:[B
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      20: aload_1
      21: aload_2
      22: invokestatic  #5                  // Method java/util/Arrays.equals:([B[B)Z
      25: ifeq          36
      28: aload_0
      29: aload_2
      30: putfield      #6                  // Field priorValue:[B
      33: goto          41
      36: aload_0
      37: aload_1
      38: putfield      #6                  // Field priorValue:[B
      41: return

  byte[] priorValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field priorValue:[B
       4: areturn

  byte[] oldValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field oldValue:[B
       4: areturn

  byte[] newValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field newValue:[B
       4: areturn

  org.apache.kafka.streams.processor.internals.ProcessorRecordContext context();
    Code:
       0: aload_0
       1: getfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: areturn

  static org.apache.kafka.streams.state.internals.BufferValue deserialize(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.deserialize:(Ljava/nio/ByteBuffer;)Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
       4: astore_1
       5: aload_0
       6: invokestatic  #8                  // Method org/apache/kafka/common/utils/Utils.getNullableSizePrefixedArray:(Ljava/nio/ByteBuffer;)[B
       9: astore_2
      10: aload_0
      11: invokevirtual #9                  // Method java/nio/ByteBuffer.getInt:()I
      14: istore        4
      16: iload         4
      18: bipush        -2
      20: if_icmpne     28
      23: aload_2
      24: astore_3
      25: goto          35
      28: aload_0
      29: iload         4
      31: invokestatic  #11                 // Method org/apache/kafka/common/utils/Utils.getNullableArray:(Ljava/nio/ByteBuffer;I)[B
      34: astore_3
      35: aload_0
      36: invokestatic  #8                  // Method org/apache/kafka/common/utils/Utils.getNullableSizePrefixedArray:(Ljava/nio/ByteBuffer;)[B
      39: astore        5
      41: new           #10                 // class org/apache/kafka/streams/state/internals/BufferValue
      44: dup
      45: aload_2
      46: aload_3
      47: aload         5
      49: aload_1
      50: invokespecial #12                 // Method "<init>":([B[B[BLorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;)V
      53: areturn

  java.nio.ByteBuffer serialize(int);
    Code:
       0: iconst_4
       1: istore_2
       2: aload_0
       3: getfield      #6                  // Field priorValue:[B
       6: ifnonnull     13
       9: iconst_0
      10: goto          18
      13: aload_0
      14: getfield      #6                  // Field priorValue:[B
      17: arraylength
      18: istore_3
      19: aload_0
      20: getfield      #2                  // Field oldValue:[B
      23: ifnull        37
      26: aload_0
      27: getfield      #6                  // Field priorValue:[B
      30: aload_0
      31: getfield      #2                  // Field oldValue:[B
      34: if_acmpne     41
      37: iconst_0
      38: goto          46
      41: aload_0
      42: getfield      #2                  // Field oldValue:[B
      45: arraylength
      46: istore        4
      48: aload_0
      49: getfield      #3                  // Field newValue:[B
      52: ifnonnull     59
      55: iconst_0
      56: goto          64
      59: aload_0
      60: getfield      #3                  // Field newValue:[B
      63: arraylength
      64: istore        5
      66: aload_0
      67: getfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      70: invokevirtual #14                 // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.serialize:()[B
      73: astore        6
      75: aload         6
      77: arraylength
      78: iconst_4
      79: iadd
      80: iload_3
      81: iadd
      82: iconst_4
      83: iadd
      84: iload         4
      86: iadd
      87: iconst_4
      88: iadd
      89: iload         5
      91: iadd
      92: iload_1
      93: iadd
      94: invokestatic  #15                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      97: astore        7
      99: aload         7
     101: aload         6
     103: invokevirtual #16                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     106: pop
     107: aload         7
     109: aload_0
     110: getfield      #6                  // Field priorValue:[B
     113: invokestatic  #17                 // Method addValue:(Ljava/nio/ByteBuffer;[B)V
     116: aload_0
     117: getfield      #2                  // Field oldValue:[B
     120: ifnonnull     133
     123: aload         7
     125: iconst_m1
     126: invokevirtual #18                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     129: pop
     130: goto          176
     133: aload_0
     134: getfield      #6                  // Field priorValue:[B
     137: aload_0
     138: getfield      #2                  // Field oldValue:[B
     141: invokestatic  #5                  // Method java/util/Arrays.equals:([B[B)Z
     144: ifeq          158
     147: aload         7
     149: bipush        -2
     151: invokevirtual #18                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     154: pop
     155: goto          176
     158: aload         7
     160: iload         4
     162: invokevirtual #18                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
     165: pop
     166: aload         7
     168: aload_0
     169: getfield      #2                  // Field oldValue:[B
     172: invokevirtual #16                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     175: pop
     176: aload         7
     178: aload_0
     179: getfield      #3                  // Field newValue:[B
     182: invokestatic  #17                 // Method addValue:(Ljava/nio/ByteBuffer;[B)V
     185: aload         7
     187: areturn

  private static void addValue(java.nio.ByteBuffer, byte[]);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: aload_0
       5: iconst_m1
       6: invokevirtual #18                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
       9: pop
      10: goto          26
      13: aload_0
      14: aload_1
      15: arraylength
      16: invokevirtual #18                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
      19: pop
      20: aload_0
      21: aload_1
      22: invokevirtual #16                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
      25: pop
      26: return

  long residentMemorySizeEstimate();
    Code:
       0: aload_0
       1: getfield      #6                  // Field priorValue:[B
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #6                  // Field priorValue:[B
      15: arraylength
      16: aload_0
      17: getfield      #2                  // Field oldValue:[B
      20: ifnull        34
      23: aload_0
      24: getfield      #6                  // Field priorValue:[B
      27: aload_0
      28: getfield      #2                  // Field oldValue:[B
      31: if_acmpne     38
      34: iconst_0
      35: goto          43
      38: aload_0
      39: getfield      #2                  // Field oldValue:[B
      42: arraylength
      43: iadd
      44: aload_0
      45: getfield      #3                  // Field newValue:[B
      48: ifnonnull     55
      51: iconst_0
      52: goto          60
      55: aload_0
      56: getfield      #3                  // Field newValue:[B
      59: arraylength
      60: iadd
      61: i2l
      62: aload_0
      63: getfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      66: invokevirtual #19                 // Method org/apache/kafka/streams/processor/internals/ProcessorRecordContext.residentMemorySizeEstimate:()J
      69: ladd
      70: lreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #10                 // class org/apache/kafka/streams/state/internals/BufferValue
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field priorValue:[B
      33: aload_2
      34: getfield      #6                  // Field priorValue:[B
      37: invokestatic  #5                  // Method java/util/Arrays.equals:([B[B)Z
      40: ifeq          89
      43: aload_0
      44: getfield      #2                  // Field oldValue:[B
      47: aload_2
      48: getfield      #2                  // Field oldValue:[B
      51: invokestatic  #5                  // Method java/util/Arrays.equals:([B[B)Z
      54: ifeq          89
      57: aload_0
      58: getfield      #3                  // Field newValue:[B
      61: aload_2
      62: getfield      #3                  // Field newValue:[B
      65: invokestatic  #5                  // Method java/util/Arrays.equals:([B[B)Z
      68: ifeq          89
      71: aload_0
      72: getfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      75: aload_2
      76: getfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      79: invokestatic  #21                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      82: ifeq          89
      85: iconst_1
      86: goto          90
      89: iconst_0
      90: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #22                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      10: aastore
      11: invokestatic  #23                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: istore_1
      15: bipush        31
      17: iload_1
      18: imul
      19: aload_0
      20: getfield      #6                  // Field priorValue:[B
      23: invokestatic  #24                 // Method java/util/Arrays.hashCode:([B)I
      26: iadd
      27: istore_1
      28: bipush        31
      30: iload_1
      31: imul
      32: aload_0
      33: getfield      #2                  // Field oldValue:[B
      36: invokestatic  #24                 // Method java/util/Arrays.hashCode:([B)I
      39: iadd
      40: istore_1
      41: bipush        31
      43: iload_1
      44: imul
      45: aload_0
      46: getfield      #3                  // Field newValue:[B
      49: invokestatic  #24                 // Method java/util/Arrays.hashCode:([B)I
      52: iadd
      53: istore_1
      54: iload_1
      55: ireturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #27                 // String BufferValue{priorValue=
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field priorValue:[B
      16: invokestatic  #29                 // Method java/util/Arrays.toString:([B)Ljava/lang/String;
      19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #30                 // String , oldValue=
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #2                  // Field oldValue:[B
      31: invokestatic  #29                 // Method java/util/Arrays.toString:([B)Ljava/lang/String;
      34: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #31                 // String , newValue=
      39: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #3                  // Field newValue:[B
      46: invokestatic  #29                 // Method java/util/Arrays.toString:([B)Ljava/lang/String;
      49: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: ldc           #32                 // String , recordContext=
      54: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: getfield      #4                  // Field recordContext:Lorg/apache/kafka/streams/processor/internals/ProcessorRecordContext;
      61: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: bipush        125
      66: invokevirtual #34                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      69: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: areturn
}
