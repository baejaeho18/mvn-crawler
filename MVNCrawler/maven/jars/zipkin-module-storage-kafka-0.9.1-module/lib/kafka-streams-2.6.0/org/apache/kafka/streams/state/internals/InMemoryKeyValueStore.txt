Compiled from "InMemoryKeyValueStore.java"
public class org.apache.kafka.streams.state.internals.InMemoryKeyValueStore implements org.apache.kafka.streams.state.KeyValueStore<org.apache.kafka.common.utils.Bytes, byte[]> {
  private final java.lang.String name;

  private final java.util.NavigableMap<org.apache.kafka.common.utils.Bytes, byte[]> map;

  private volatile boolean open;

  private long size;

  private static final org.slf4j.Logger LOG;

  public org.apache.kafka.streams.state.internals.InMemoryKeyValueStore(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/TreeMap
       8: dup
       9: invokespecial #4                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #1                  // Field map:Ljava/util/NavigableMap;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field open:Z
      20: aload_0
      21: lconst_0
      22: putfield      #6                  // Field size:J
      25: aload_0
      26: aload_1
      27: putfield      #7                  // Field name:Ljava/lang/String;
      30: return

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public void init(org.apache.kafka.streams.processor.ProcessorContext, org.apache.kafka.streams.processor.StateStore);
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #6                  // Field size:J
       5: aload_2
       6: ifnull        22
       9: aload_1
      10: aload_2
      11: aload_0
      12: invokedynamic #8,  0              // InvokeDynamic #0:restore:(Lorg/apache/kafka/streams/state/internals/InMemoryKeyValueStore;)Lorg/apache/kafka/streams/processor/StateRestoreCallback;
      17: invokeinterface #9,  3            // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.register:(Lorg/apache/kafka/streams/processor/StateStore;Lorg/apache/kafka/streams/processor/StateRestoreCallback;)V
      22: aload_0
      23: iconst_1
      24: putfield      #5                  // Field open:Z
      27: return

  public boolean persistent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #5                  // Field open:Z
       4: ireturn

  public synchronized byte[] get(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/NavigableMap;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/NavigableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class "[B"
      13: areturn

  public synchronized void put(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_2
       1: ifnonnull     34
       4: aload_0
       5: dup
       6: getfield      #6                  // Field size:J
       9: aload_0
      10: getfield      #1                  // Field map:Ljava/util/NavigableMap;
      13: aload_1
      14: invokeinterface #12,  2           // InterfaceMethod java/util/NavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: ifnonnull     26
      22: lconst_0
      23: goto          27
      26: lconst_1
      27: lsub
      28: putfield      #6                  // Field size:J
      31: goto          62
      34: aload_0
      35: dup
      36: getfield      #6                  // Field size:J
      39: aload_0
      40: getfield      #1                  // Field map:Ljava/util/NavigableMap;
      43: aload_1
      44: aload_2
      45: invokeinterface #13,  3           // InterfaceMethod java/util/NavigableMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: ifnonnull     57
      53: lconst_1
      54: goto          58
      57: lconst_0
      58: ladd
      59: putfield      #6                  // Field size:J
      62: return

  public synchronized byte[] putIfAbsent(org.apache.kafka.common.utils.Bytes, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method get:(Lorg/apache/kafka/common/utils/Bytes;)[B
       5: astore_3
       6: aload_3
       7: ifnonnull     16
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokevirtual #15                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      16: aload_3
      17: areturn

  public void putAll(java.util.List<org.apache.kafka.streams.KeyValue<org.apache.kafka.common.utils.Bytes, byte[]>>);
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          47
      16: aload_2
      17: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #19                 // class org/apache/kafka/streams/KeyValue
      25: astore_3
      26: aload_0
      27: aload_3
      28: getfield      #20                 // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      31: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
      34: aload_3
      35: getfield      #22                 // Field org/apache/kafka/streams/KeyValue.value:Ljava/lang/Object;
      38: checkcast     #11                 // class "[B"
      41: invokevirtual #15                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      44: goto          7
      47: return

  public synchronized byte[] delete(org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/NavigableMap;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/NavigableMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class "[B"
      13: astore_2
      14: aload_0
      15: dup
      16: getfield      #6                  // Field size:J
      19: aload_2
      20: ifnonnull     27
      23: lconst_0
      24: goto          28
      27: lconst_1
      28: lsub
      29: putfield      #6                  // Field size:J
      32: aload_2
      33: areturn

  public synchronized org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> range(org.apache.kafka.common.utils.Bytes, org.apache.kafka.common.utils.Bytes);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #23                 // Method org/apache/kafka/common/utils/Bytes.compareTo:(Lorg/apache/kafka/common/utils/Bytes;)I
       5: ifle          22
       8: getstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
      11: ldc           #25                 // String Returning empty iterator for fetch with invalid key range: from > to. This may be due to serdes that don\'t preserve ordering when lexicographically comparing the serialized bytes. Note that the built-in numerical serdes do not follow this for negative numbers
      13: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      18: invokestatic  #27                 // Method org/apache/kafka/streams/state/internals/KeyValueIterators.emptyIterator:()Lorg/apache/kafka/streams/state/KeyValueIterator;
      21: areturn
      22: new           #28                 // class org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator
      25: dup
      26: aload_0
      27: getfield      #7                  // Field name:Ljava/lang/String;
      30: new           #29                 // class org/apache/kafka/streams/state/internals/InMemoryKeyValueStore$InMemoryKeyValueIterator
      33: dup
      34: aload_0
      35: aload_0
      36: getfield      #1                  // Field map:Ljava/util/NavigableMap;
      39: aload_1
      40: iconst_1
      41: aload_2
      42: iconst_1
      43: invokeinterface #30,  5           // InterfaceMethod java/util/NavigableMap.subMap:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableMap;
      48: invokeinterface #31,  1           // InterfaceMethod java/util/NavigableMap.keySet:()Ljava/util/Set;
      53: aconst_null
      54: invokespecial #32                 // Method org/apache/kafka/streams/state/internals/InMemoryKeyValueStore$InMemoryKeyValueIterator."<init>":(Lorg/apache/kafka/streams/state/internals/InMemoryKeyValueStore;Ljava/util/Set;Lorg/apache/kafka/streams/state/internals/InMemoryKeyValueStore$1;)V
      57: invokespecial #33                 // Method org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/state/KeyValueIterator;)V
      60: areturn

  public synchronized org.apache.kafka.streams.state.KeyValueIterator<org.apache.kafka.common.utils.Bytes, byte[]> all();
    Code:
       0: new           #28                 // class org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator
       3: dup
       4: aload_0
       5: getfield      #7                  // Field name:Ljava/lang/String;
       8: new           #29                 // class org/apache/kafka/streams/state/internals/InMemoryKeyValueStore$InMemoryKeyValueIterator
      11: dup
      12: aload_0
      13: aload_0
      14: getfield      #1                  // Field map:Ljava/util/NavigableMap;
      17: invokeinterface #31,  1           // InterfaceMethod java/util/NavigableMap.keySet:()Ljava/util/Set;
      22: aconst_null
      23: invokespecial #32                 // Method org/apache/kafka/streams/state/internals/InMemoryKeyValueStore$InMemoryKeyValueIterator."<init>":(Lorg/apache/kafka/streams/state/internals/InMemoryKeyValueStore;Ljava/util/Set;Lorg/apache/kafka/streams/state/internals/InMemoryKeyValueStore$1;)V
      26: invokespecial #33                 // Method org/apache/kafka/streams/state/internals/DelegatingPeekingKeyValueIterator."<init>":(Ljava/lang/String;Lorg/apache/kafka/streams/state/KeyValueIterator;)V
      29: areturn

  public long approximateNumEntries();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:J
       4: lreturn

  public void flush();
    Code:
       0: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/NavigableMap;
       4: invokeinterface #34,  1           // InterfaceMethod java/util/NavigableMap.clear:()V
       9: aload_0
      10: lconst_0
      11: putfield      #6                  // Field size:J
      14: aload_0
      15: iconst_0
      16: putfield      #5                  // Field open:Z
      19: return

  public java.lang.Object delete(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #35                 // Method delete:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #11                 // class "[B"
       9: invokevirtual #36                 // Method putIfAbsent:(Lorg/apache/kafka/common/utils/Bytes;[B)[B
      12: areturn

  public void put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #11                 // class "[B"
       9: invokevirtual #15                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
      12: return

  public org.apache.kafka.streams.state.KeyValueIterator range(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: aload_2
       6: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       9: invokevirtual #37                 // Method range:(Lorg/apache/kafka/common/utils/Bytes;Lorg/apache/kafka/common/utils/Bytes;)Lorg/apache/kafka/streams/state/KeyValueIterator;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #21                 // class org/apache/kafka/common/utils/Bytes
       5: invokevirtual #14                 // Method get:(Lorg/apache/kafka/common/utils/Bytes;)[B
       8: areturn

  private void lambda$init$0(byte[], byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method org/apache/kafka/common/utils/Bytes.wrap:([B)Lorg/apache/kafka/common/utils/Bytes;
       5: aload_2
       6: invokevirtual #15                 // Method put:(Lorg/apache/kafka/common/utils/Bytes;[B)V
       9: return

  static java.util.NavigableMap access$100(org.apache.kafka.streams.state.internals.InMemoryKeyValueStore);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/NavigableMap;
       4: areturn

  static {};
    Code:
       0: ldc           #39                 // class org/apache/kafka/streams/state/internals/InMemoryKeyValueStore
       2: invokestatic  #40                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #24                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
