Compiled from "InternalTopologyBuilder.java"
public class org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$TopicsInfo {
  final java.util.Set<java.lang.String> sinkTopics;

  public final java.util.Set<java.lang.String> sourceTopics;

  public final java.util.Map<java.lang.String, org.apache.kafka.streams.processor.internals.InternalTopicConfig> stateChangelogTopics;

  public final java.util.Map<java.lang.String, org.apache.kafka.streams.processor.internals.InternalTopicConfig> repartitionSourceTopics;

  org.apache.kafka.streams.processor.internals.InternalTopologyBuilder$TopicsInfo(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, org.apache.kafka.streams.processor.internals.InternalTopicConfig>, java.util.Map<java.lang.String, org.apache.kafka.streams.processor.internals.InternalTopicConfig>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sinkTopics:Ljava/util/Set;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sourceTopics:Ljava/util/Set;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field stateChangelogTopics:Ljava/util/Map;
      20: aload_0
      21: aload_3
      22: putfield      #5                  // Field repartitionSourceTopics:Ljava/util/Map;
      25: return

  public java.util.Set<org.apache.kafka.streams.processor.internals.InternalTopicConfig> nonSourceChangelogTopics();
    Code:
       0: new           #6                  // class java/util/HashSet
       3: dup
       4: invokespecial #7                  // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field stateChangelogTopics:Ljava/util/Map;
      12: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      17: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          76
      32: aload_2
      33: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #12                 // class java/util/Map$Entry
      41: astore_3
      42: aload_0
      43: getfield      #3                  // Field sourceTopics:Ljava/util/Set;
      46: aload_3
      47: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      52: invokeinterface #14,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      57: ifne          73
      60: aload_1
      61: aload_3
      62: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      67: invokeinterface #16,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      72: pop
      73: goto          23
      76: aload_1
      77: areturn

  public java.util.Set<java.lang.String> sourceTopicChangelogs();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sourceTopics:Ljava/util/Set;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
       9: aload_0
      10: getfield      #4                  // Field stateChangelogTopics:Ljava/util/Map;
      13: dup
      14: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: pop
      18: invokedynamic #19,  0             // InvokeDynamic #0:test:(Ljava/util/Map;)Ljava/util/function/Predicate;
      23: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      28: invokestatic  #21                 // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;
      31: invokeinterface #22,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      36: checkcast     #23                 // class java/util/Set
      39: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #24                 // class org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$TopicsInfo
       4: ifeq          50
       7: aload_1
       8: checkcast     #24                 // class org/apache/kafka/streams/processor/internals/InternalTopologyBuilder$TopicsInfo
      11: astore_2
      12: aload_2
      13: getfield      #3                  // Field sourceTopics:Ljava/util/Set;
      16: aload_0
      17: getfield      #3                  // Field sourceTopics:Ljava/util/Set;
      20: invokeinterface #25,  2           // InterfaceMethod java/util/Set.equals:(Ljava/lang/Object;)Z
      25: ifeq          48
      28: aload_2
      29: getfield      #4                  // Field stateChangelogTopics:Ljava/util/Map;
      32: aload_0
      33: getfield      #4                  // Field stateChangelogTopics:Ljava/util/Map;
      36: invokeinterface #26,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
      50: iconst_0
      51: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sourceTopics:Ljava/util/Set;
       4: invokeinterface #27,  1           // InterfaceMethod java/util/Set.hashCode:()I
       9: i2l
      10: bipush        32
      12: lshl
      13: aload_0
      14: getfield      #4                  // Field stateChangelogTopics:Ljava/util/Map;
      17: invokeinterface #28,  1           // InterfaceMethod java/util/Map.hashCode:()I
      22: i2l
      23: lor
      24: lstore_1
      25: lload_1
      26: ldc2_w        #29                 // long 4294967295l
      29: lrem
      30: l2i
      31: ireturn

  public java.lang.String toString();
    Code:
       0: new           #31                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #33                 // String TopicsInfo{sinkTopics=
       9: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field sinkTopics:Ljava/util/Set;
      16: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #36                 // String , sourceTopics=
      21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field sourceTopics:Ljava/util/Set;
      28: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #37                 // String , repartitionSourceTopics=
      33: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #5                  // Field repartitionSourceTopics:Ljava/util/Map;
      40: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #38                 // String , stateChangelogTopics=
      45: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #4                  // Field stateChangelogTopics:Ljava/util/Map;
      52: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: bipush        125
      57: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn
}
