Compiled from "KTableMapValues.java"
class org.apache.kafka.streams.kstream.internals.KTableMapValues<K, V, V1> implements org.apache.kafka.streams.kstream.internals.KTableProcessorSupplier<K, V, V1> {
  private final org.apache.kafka.streams.kstream.internals.KTableImpl<K, ?, V> parent;

  private final org.apache.kafka.streams.kstream.ValueMapperWithKey<? super K, ? super V, ? extends V1> mapper;

  private final java.lang.String queryableName;

  private boolean sendOldValues;

  org.apache.kafka.streams.kstream.internals.KTableMapValues(org.apache.kafka.streams.kstream.internals.KTableImpl<K, ?, V>, org.apache.kafka.streams.kstream.ValueMapperWithKey<? super K, ? super V, ? extends V1>, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field sendOldValues:Z
       9: aload_0
      10: aload_1
      11: putfield      #5                  // Field parent:Lorg/apache/kafka/streams/kstream/internals/KTableImpl;
      14: aload_0
      15: aload_2
      16: putfield      #7                  // Field mapper:Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;
      19: aload_0
      20: aload_3
      21: putfield      #4                  // Field queryableName:Ljava/lang/String;
      24: return

  public org.apache.kafka.streams.processor.Processor<K, org.apache.kafka.streams.kstream.internals.Change<V>> get();
    Code:
       0: new           #8                  // class org/apache/kafka/streams/kstream/internals/KTableMapValues$KTableMapValuesProcessor
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #9                  // Method org/apache/kafka/streams/kstream/internals/KTableMapValues$KTableMapValuesProcessor."<init>":(Lorg/apache/kafka/streams/kstream/internals/KTableMapValues;Lorg/apache/kafka/streams/kstream/internals/KTableMapValues$1;)V
       9: areturn

  public org.apache.kafka.streams.kstream.internals.KTableValueGetterSupplier<K, V1> view();
    Code:
       0: aload_0
       1: getfield      #4                  // Field queryableName:Ljava/lang/String;
       4: ifnull        19
       7: new           #10                 // class org/apache/kafka/streams/kstream/internals/KTableMaterializedValueGetterSupplier
      10: dup
      11: aload_0
      12: getfield      #4                  // Field queryableName:Ljava/lang/String;
      15: invokespecial #11                 // Method org/apache/kafka/streams/kstream/internals/KTableMaterializedValueGetterSupplier."<init>":(Ljava/lang/String;)V
      18: areturn
      19: new           #12                 // class org/apache/kafka/streams/kstream/internals/KTableMapValues$1
      22: dup
      23: aload_0
      24: invokespecial #13                 // Method org/apache/kafka/streams/kstream/internals/KTableMapValues$1."<init>":(Lorg/apache/kafka/streams/kstream/internals/KTableMapValues;)V
      27: areturn

  public void enableSendingOldValues();
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lorg/apache/kafka/streams/kstream/internals/KTableImpl;
       4: invokevirtual #14                 // Method org/apache/kafka/streams/kstream/internals/KTableImpl.enableSendingOldValues:()V
       7: aload_0
       8: iconst_1
       9: putfield      #3                  // Field sendOldValues:Z
      12: return

  private V1 computeValue(K, V);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_2
       3: ifnull        18
       6: aload_0
       7: getfield      #7                  // Field mapper:Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;
      10: aload_1
      11: aload_2
      12: invokeinterface #15,  3           // InterfaceMethod org/apache/kafka/streams/kstream/ValueMapperWithKey.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: astore_3
      18: aload_3
      19: areturn

  private org.apache.kafka.streams.state.ValueAndTimestamp<V1> computeValueAndTimestamp(K, org.apache.kafka.streams.state.ValueAndTimestamp<V>);
    Code:
       0: aconst_null
       1: astore_3
       2: lconst_0
       3: lstore        4
       5: aload_2
       6: ifnull        30
       9: aload_0
      10: getfield      #7                  // Field mapper:Lorg/apache/kafka/streams/kstream/ValueMapperWithKey;
      13: aload_1
      14: aload_2
      15: invokevirtual #16                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.value:()Ljava/lang/Object;
      18: invokeinterface #15,  3           // InterfaceMethod org/apache/kafka/streams/kstream/ValueMapperWithKey.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: astore_3
      24: aload_2
      25: invokevirtual #17                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.timestamp:()J
      28: lstore        4
      30: aload_3
      31: lload         4
      33: invokestatic  #18                 // Method org/apache/kafka/streams/state/ValueAndTimestamp.make:(Ljava/lang/Object;J)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
      36: areturn

  static org.apache.kafka.streams.kstream.internals.KTableImpl access$100(org.apache.kafka.streams.kstream.internals.KTableMapValues);
    Code:
       0: aload_0
       1: getfield      #5                  // Field parent:Lorg/apache/kafka/streams/kstream/internals/KTableImpl;
       4: areturn

  static java.lang.String access$200(org.apache.kafka.streams.kstream.internals.KTableMapValues);
    Code:
       0: aload_0
       1: getfield      #4                  // Field queryableName:Ljava/lang/String;
       4: areturn

  static boolean access$300(org.apache.kafka.streams.kstream.internals.KTableMapValues);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sendOldValues:Z
       4: ireturn

  static java.lang.Object access$400(org.apache.kafka.streams.kstream.internals.KTableMapValues, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method computeValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  static org.apache.kafka.streams.state.ValueAndTimestamp access$500(org.apache.kafka.streams.kstream.internals.KTableMapValues, java.lang.Object, org.apache.kafka.streams.state.ValueAndTimestamp);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method computeValueAndTimestamp:(Ljava/lang/Object;Lorg/apache/kafka/streams/state/ValueAndTimestamp;)Lorg/apache/kafka/streams/state/ValueAndTimestamp;
       6: areturn
}
