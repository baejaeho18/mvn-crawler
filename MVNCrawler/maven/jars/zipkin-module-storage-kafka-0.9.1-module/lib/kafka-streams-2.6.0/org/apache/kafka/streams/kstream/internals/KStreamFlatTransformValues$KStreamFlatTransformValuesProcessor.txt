Compiled from "KStreamFlatTransformValues.java"
public class org.apache.kafka.streams.kstream.internals.KStreamFlatTransformValues$KStreamFlatTransformValuesProcessor<KIn, VIn, VOut> implements org.apache.kafka.streams.processor.Processor<KIn, VIn> {
  private final org.apache.kafka.streams.kstream.ValueTransformerWithKey<KIn, VIn, java.lang.Iterable<VOut>> valueTransformer;

  private org.apache.kafka.streams.processor.ProcessorContext context;

  org.apache.kafka.streams.kstream.internals.KStreamFlatTransformValues$KStreamFlatTransformValuesProcessor(org.apache.kafka.streams.kstream.ValueTransformerWithKey<KIn, VIn, java.lang.Iterable<VOut>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field valueTransformer:Lorg/apache/kafka/streams/kstream/ValueTransformerWithKey;
       9: return

  public void init(org.apache.kafka.streams.processor.ProcessorContext);
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueTransformer:Lorg/apache/kafka/streams/kstream/ValueTransformerWithKey;
       4: new           #3                  // class org/apache/kafka/streams/processor/internals/ForwardingDisabledProcessorContext
       7: dup
       8: aload_1
       9: invokespecial #4                  // Method org/apache/kafka/streams/processor/internals/ForwardingDisabledProcessorContext."<init>":(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
      12: invokeinterface #5,  2            // InterfaceMethod org/apache/kafka/streams/kstream/ValueTransformerWithKey.init:(Lorg/apache/kafka/streams/processor/ProcessorContext;)V
      17: aload_0
      18: aload_1
      19: putfield      #6                  // Field context:Lorg/apache/kafka/streams/processor/ProcessorContext;
      22: return

  public void process(KIn, VIn);
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueTransformer:Lorg/apache/kafka/streams/kstream/ValueTransformerWithKey;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod org/apache/kafka/streams/kstream/ValueTransformerWithKey.transform:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #8                  // class java/lang/Iterable
      14: astore_3
      15: aload_3
      16: ifnull        61
      19: aload_3
      20: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          61
      37: aload         4
      39: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: astore        5
      46: aload_0
      47: getfield      #6                  // Field context:Lorg/apache/kafka/streams/processor/ProcessorContext;
      50: aload_1
      51: aload         5
      53: invokeinterface #12,  3           // InterfaceMethod org/apache/kafka/streams/processor/ProcessorContext.forward:(Ljava/lang/Object;Ljava/lang/Object;)V
      58: goto          27
      61: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #2                  // Field valueTransformer:Lorg/apache/kafka/streams/kstream/ValueTransformerWithKey;
       4: invokeinterface #13,  1           // InterfaceMethod org/apache/kafka/streams/kstream/ValueTransformerWithKey.close:()V
       9: return
}
