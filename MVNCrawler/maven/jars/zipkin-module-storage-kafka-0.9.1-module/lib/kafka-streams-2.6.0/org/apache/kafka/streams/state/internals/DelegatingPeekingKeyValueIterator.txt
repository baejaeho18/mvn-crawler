Compiled from "DelegatingPeekingKeyValueIterator.java"
public class org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator<K, V> implements org.apache.kafka.streams.state.KeyValueIterator<K, V>, org.apache.kafka.streams.state.internals.PeekingKeyValueIterator<K, V> {
  private final org.apache.kafka.streams.state.KeyValueIterator<K, V> underlying;

  private final java.lang.String storeName;

  private org.apache.kafka.streams.KeyValue<K, V> next;

  private volatile boolean open;

  public org.apache.kafka.streams.state.internals.DelegatingPeekingKeyValueIterator(java.lang.String, org.apache.kafka.streams.state.KeyValueIterator<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field open:Z
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field storeName:Ljava/lang/String;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field underlying:Lorg/apache/kafka/streams/state/KeyValueIterator;
      19: return

  public synchronized K peekNextKey();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasNext:()Z
       4: ifne          15
       7: new           #6                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #7                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #8                  // Field next:Lorg/apache/kafka/streams/KeyValue;
      19: getfield      #9                  // Field org/apache/kafka/streams/KeyValue.key:Ljava/lang/Object;
      22: areturn

  public synchronized void close();
    Code:
       0: aload_0
       1: getfield      #4                  // Field underlying:Lorg/apache/kafka/streams/state/KeyValueIterator;
       4: invokeinterface #10,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.close:()V
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field open:Z
      14: return

  public synchronized boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field open:Z
       4: ifne          31
       7: new           #11                 // class org/apache/kafka/streams/errors/InvalidStateStoreException
      10: dup
      11: ldc           #12                 // String Store %s has closed
      13: iconst_1
      14: anewarray     #13                 // class java/lang/Object
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #3                  // Field storeName:Ljava/lang/String;
      23: aastore
      24: invokestatic  #14                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      27: invokespecial #15                 // Method org/apache/kafka/streams/errors/InvalidStateStoreException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #8                  // Field next:Lorg/apache/kafka/streams/KeyValue;
      35: ifnull        40
      38: iconst_1
      39: ireturn
      40: aload_0
      41: getfield      #4                  // Field underlying:Lorg/apache/kafka/streams/state/KeyValueIterator;
      44: invokeinterface #16,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.hasNext:()Z
      49: ifne          54
      52: iconst_0
      53: ireturn
      54: aload_0
      55: aload_0
      56: getfield      #4                  // Field underlying:Lorg/apache/kafka/streams/state/KeyValueIterator;
      59: invokeinterface #17,  1           // InterfaceMethod org/apache/kafka/streams/state/KeyValueIterator.next:()Ljava/lang/Object;
      64: checkcast     #18                 // class org/apache/kafka/streams/KeyValue
      67: putfield      #8                  // Field next:Lorg/apache/kafka/streams/KeyValue;
      70: iconst_1
      71: ireturn

  public synchronized org.apache.kafka.streams.KeyValue<K, V> next();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasNext:()Z
       4: ifne          15
       7: new           #6                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #7                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #8                  // Field next:Lorg/apache/kafka/streams/KeyValue;
      19: astore_1
      20: aload_0
      21: aconst_null
      22: putfield      #8                  // Field next:Lorg/apache/kafka/streams/KeyValue;
      25: aload_1
      26: areturn

  public org.apache.kafka.streams.KeyValue<K, V> peekNext();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasNext:()Z
       4: ifne          15
       7: new           #6                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #7                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: getfield      #8                  // Field next:Lorg/apache/kafka/streams/KeyValue;
      19: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method next:()Lorg/apache/kafka/streams/KeyValue;
       4: areturn
}
