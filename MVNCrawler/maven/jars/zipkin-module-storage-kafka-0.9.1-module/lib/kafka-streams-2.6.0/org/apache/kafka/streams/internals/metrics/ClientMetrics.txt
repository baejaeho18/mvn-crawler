Compiled from "ClientMetrics.java"
public class org.apache.kafka.streams.internals.metrics.ClientMetrics {
  private static final org.slf4j.Logger log;

  private static final java.lang.String VERSION;

  private static final java.lang.String COMMIT_ID;

  private static final java.lang.String APPLICATION_ID;

  private static final java.lang.String TOPOLOGY_DESCRIPTION;

  private static final java.lang.String STATE;

  private static final java.lang.String ALIVE_STREAM_THREADS;

  private static final java.lang.String VERSION_FROM_FILE;

  private static final java.lang.String COMMIT_ID_FROM_FILE;

  private static final java.lang.String DEFAULT_VALUE;

  private static final java.lang.String VERSION_DESCRIPTION;

  private static final java.lang.String COMMIT_ID_DESCRIPTION;

  private static final java.lang.String APPLICATION_ID_DESCRIPTION;

  private static final java.lang.String TOPOLOGY_DESCRIPTION_DESCRIPTION;

  private static final java.lang.String STATE_DESCRIPTION;

  private static final java.lang.String ALIVE_STREAM_THREADS_DESCRIPTION;

  private org.apache.kafka.streams.internals.metrics.ClientMetrics();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String version();
    Code:
       0: getstatic     #2                  // Field VERSION_FROM_FILE:Ljava/lang/String;
       3: areturn

  public static java.lang.String commitId();
    Code:
       0: getstatic     #3                  // Field COMMIT_ID_FROM_FILE:Ljava/lang/String;
       3: areturn

  public static void addVersionMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl);
    Code:
       0: aload_0
       1: ldc           #5                  // String version
       3: ldc           #6                  // String The version of the Kafka Streams client
       5: getstatic     #7                  // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
       8: getstatic     #2                  // Field VERSION_FROM_FILE:Ljava/lang/String;
      11: invokevirtual #8                  // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.addClientLevelImmutableMetric:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/Object;)V
      14: return

  public static void addCommitIdMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl);
    Code:
       0: aload_0
       1: ldc           #9                  // String commit-id
       3: ldc           #10                 // String The version control commit ID of the Kafka Streams client
       5: getstatic     #7                  // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
       8: getstatic     #3                  // Field COMMIT_ID_FROM_FILE:Ljava/lang/String;
      11: invokevirtual #8                  // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.addClientLevelImmutableMetric:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/Object;)V
      14: return

  public static void addApplicationIdMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #11                 // String application-id
       3: ldc           #12                 // String The application ID of the Kafka Streams client
       5: getstatic     #7                  // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
       8: aload_1
       9: invokevirtual #8                  // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.addClientLevelImmutableMetric:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/Object;)V
      12: return

  public static void addTopologyDescriptionMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, java.lang.String);
    Code:
       0: aload_0
       1: ldc           #13                 // String topology-description
       3: ldc           #14                 // String The description of the topology executed in the Kafka Streams client
       5: getstatic     #7                  // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
       8: aload_1
       9: invokevirtual #8                  // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.addClientLevelImmutableMetric:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Ljava/lang/Object;)V
      12: return

  public static void addStateMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, org.apache.kafka.common.metrics.Gauge<org.apache.kafka.streams.KafkaStreams$State>);
    Code:
       0: aload_0
       1: ldc           #15                 // String state
       3: ldc           #16                 // String The state of the Kafka Streams client
       5: getstatic     #7                  // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
       8: aload_1
       9: invokevirtual #17                 // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.addClientLevelMutableMetric:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Lorg/apache/kafka/common/metrics/Gauge;)V
      12: return

  public static void addNumAliveStreamThreadMetric(org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl, org.apache.kafka.common.metrics.Gauge<java.lang.Integer>);
    Code:
       0: aload_0
       1: ldc           #18                 // String alive-stream-threads
       3: ldc           #19                 // String The current number of alive stream threads that are running or participating in rebalance
       5: getstatic     #7                  // Field org/apache/kafka/common/metrics/Sensor$RecordingLevel.INFO:Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;
       8: aload_1
       9: invokevirtual #17                 // Method org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.addClientLevelMutableMetric:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/kafka/common/metrics/Sensor$RecordingLevel;Lorg/apache/kafka/common/metrics/Gauge;)V
      12: return

  static {};
    Code:
       0: ldc           #4                  // class org/apache/kafka/streams/internals/metrics/ClientMetrics
       2: invokestatic  #20                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field log:Lorg/slf4j/Logger;
       8: new           #22                 // class java/util/Properties
      11: dup
      12: invokespecial #23                 // Method java/util/Properties."<init>":()V
      15: astore_0
      16: ldc           #4                  // class org/apache/kafka/streams/internals/metrics/ClientMetrics
      18: ldc           #24                 // String /kafka/kafka-streams-version.properties
      20: invokevirtual #25                 // Method java/lang/Class.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;
      23: astore_1
      24: aconst_null
      25: astore_2
      26: aload_0
      27: aload_1
      28: invokevirtual #26                 // Method java/util/Properties.load:(Ljava/io/InputStream;)V
      31: aload_1
      32: ifnull        102
      35: aload_2
      36: ifnull        55
      39: aload_1
      40: invokevirtual #27                 // Method java/io/InputStream.close:()V
      43: goto          102
      46: astore_3
      47: aload_2
      48: aload_3
      49: invokevirtual #29                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      52: goto          102
      55: aload_1
      56: invokevirtual #27                 // Method java/io/InputStream.close:()V
      59: goto          102
      62: astore_3
      63: aload_3
      64: astore_2
      65: aload_3
      66: athrow
      67: astore        4
      69: aload_1
      70: ifnull        99
      73: aload_2
      74: ifnull        95
      77: aload_1
      78: invokevirtual #27                 // Method java/io/InputStream.close:()V
      81: goto          99
      84: astore        5
      86: aload_2
      87: aload         5
      89: invokevirtual #29                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      92: goto          99
      95: aload_1
      96: invokevirtual #27                 // Method java/io/InputStream.close:()V
      99: aload         4
     101: athrow
     102: goto          117
     105: astore_1
     106: getstatic     #21                 // Field log:Lorg/slf4j/Logger;
     109: ldc           #31                 // String Error while loading kafka-streams-version.properties
     111: aload_1
     112: invokeinterface #32,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     117: aload_0
     118: ldc           #5                  // String version
     120: ldc           #33                 // String unknown
     122: invokevirtual #34                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     125: invokevirtual #35                 // Method java/lang/String.trim:()Ljava/lang/String;
     128: putstatic     #2                  // Field VERSION_FROM_FILE:Ljava/lang/String;
     131: aload_0
     132: ldc           #36                 // String commitId
     134: ldc           #33                 // String unknown
     136: invokevirtual #34                 // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     139: invokevirtual #35                 // Method java/lang/String.trim:()Ljava/lang/String;
     142: putstatic     #3                  // Field COMMIT_ID_FROM_FILE:Ljava/lang/String;
     145: return
    Exception table:
       from    to  target type
          39    43    46   Class java/lang/Throwable
          26    31    62   Class java/lang/Throwable
          26    31    67   any
          77    81    84   Class java/lang/Throwable
          62    69    67   any
          16   102   105   Class java/lang/Exception
}
