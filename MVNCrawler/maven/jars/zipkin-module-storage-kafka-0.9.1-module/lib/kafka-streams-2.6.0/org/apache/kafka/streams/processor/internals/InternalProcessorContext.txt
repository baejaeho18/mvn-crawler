Compiled from "InternalProcessorContext.java"
public interface org.apache.kafka.streams.processor.internals.InternalProcessorContext extends org.apache.kafka.streams.processor.ProcessorContext {
  public static final org.apache.kafka.common.serialization.BytesSerializer BYTES_KEY_SERIALIZER;

  public static final org.apache.kafka.common.serialization.ByteArraySerializer BYTEARRAY_VALUE_SERIALIZER;

  public abstract org.apache.kafka.streams.processor.internals.metrics.StreamsMetricsImpl metrics();

  public abstract void setSystemTimeMs(long);

  public abstract long currentSystemTimeMs();

  public abstract org.apache.kafka.streams.processor.internals.ProcessorRecordContext recordContext();

  public abstract void setRecordContext(org.apache.kafka.streams.processor.internals.ProcessorRecordContext);

  public abstract void setCurrentNode(org.apache.kafka.streams.processor.internals.ProcessorNode<?, ?>);

  public abstract org.apache.kafka.streams.processor.internals.ProcessorNode<?, ?> currentNode();

  public abstract org.apache.kafka.streams.state.internals.ThreadCache cache();

  public abstract void initialize();

  public abstract void uninitialize();

  public abstract org.apache.kafka.streams.processor.internals.Task$TaskType taskType();

  public abstract void transitionToActive(org.apache.kafka.streams.processor.internals.StreamTask, org.apache.kafka.streams.processor.internals.RecordCollector, org.apache.kafka.streams.state.internals.ThreadCache);

  public abstract void transitionToStandby(org.apache.kafka.streams.state.internals.ThreadCache);

  public abstract void registerCacheFlushListener(java.lang.String, org.apache.kafka.streams.state.internals.ThreadCache$DirtyEntryFlushListener);

  public default <T extends org.apache.kafka.streams.processor.StateStore> T getStateStore(org.apache.kafka.streams.state.StoreBuilder<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  1            // InterfaceMethod org/apache/kafka/streams/state/StoreBuilder.name:()Ljava/lang/String;
       7: invokeinterface #2,  2            // InterfaceMethod getStateStore:(Ljava/lang/String;)Lorg/apache/kafka/streams/processor/StateStore;
      12: areturn

  public abstract void logChange(java.lang.String, org.apache.kafka.common.utils.Bytes, byte[], long);

  public default org.apache.kafka.streams.StreamsMetrics metrics();
    Code:
       0: aload_0
       1: invokeinterface #3,  1            // InterfaceMethod metrics:()Lorg/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl;
       6: areturn

  static {};
    Code:
       0: new           #4                  // class org/apache/kafka/common/serialization/BytesSerializer
       3: dup
       4: invokespecial #5                  // Method org/apache/kafka/common/serialization/BytesSerializer."<init>":()V
       7: putstatic     #6                  // Field BYTES_KEY_SERIALIZER:Lorg/apache/kafka/common/serialization/BytesSerializer;
      10: new           #7                  // class org/apache/kafka/common/serialization/ByteArraySerializer
      13: dup
      14: invokespecial #8                  // Method org/apache/kafka/common/serialization/ByteArraySerializer."<init>":()V
      17: putstatic     #9                  // Field BYTEARRAY_VALUE_SERIALIZER:Lorg/apache/kafka/common/serialization/ByteArraySerializer;
      20: return
}
