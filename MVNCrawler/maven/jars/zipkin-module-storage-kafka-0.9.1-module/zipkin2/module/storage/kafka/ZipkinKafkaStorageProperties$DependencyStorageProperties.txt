Compiled from "ZipkinKafkaStorageProperties.java"
class zipkin2.module.storage.kafka.ZipkinKafkaStorageProperties$DependencyStorageProperties {
  private java.lang.Boolean enabled;

  private java.lang.String dependencyTopic;

  private java.lang.Long ttl;

  private java.util.Map<java.lang.String, java.lang.String> overrides;

  zipkin2.module.storage.kafka.ZipkinKafkaStorageProperties$DependencyStorageProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field overrides:Ljava/util/Map;
      15: return

  public java.lang.Boolean getEnabled();
    Code:
       0: aload_0
       1: getfield      #5                  // Field enabled:Ljava/lang/Boolean;
       4: areturn

  public void setEnabled(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field enabled:Ljava/lang/Boolean;
       5: return

  public java.lang.String getDependencyTopic();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dependencyTopic:Ljava/lang/String;
       4: areturn

  public void setDependencyTopic(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field dependencyTopic:Ljava/lang/String;
       5: return

  public java.lang.Long getTtl();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ttl:Ljava/lang/Long;
       4: areturn

  public void setTtl(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field ttl:Ljava/lang/Long;
       5: return

  public java.util.Map<java.lang.String, java.lang.String> getOverrides();
    Code:
       0: aload_0
       1: getfield      #4                  // Field overrides:Ljava/util/Map;
       4: areturn

  public void setOverrides(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field overrides:Ljava/util/Map;
       5: return

  zipkin2.storage.kafka.KafkaStorageBuilder$DependencyStorageBuilder toBuilder();
    Code:
       0: new           #8                  // class zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder
       3: dup
       4: invokespecial #9                  // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field enabled:Ljava/lang/Boolean;
      12: ifnull        27
      15: aload_1
      16: aload_0
      17: getfield      #5                  // Field enabled:Ljava/lang/Boolean;
      20: invokevirtual #10                 // Method java/lang/Boolean.booleanValue:()Z
      23: invokevirtual #11                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.enabled:(Z)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      26: pop
      27: aload_0
      28: getfield      #6                  // Field dependencyTopic:Ljava/lang/String;
      31: ifnull        43
      34: aload_1
      35: aload_0
      36: getfield      #6                  // Field dependencyTopic:Ljava/lang/String;
      39: invokevirtual #12                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.dependencyTopic:(Ljava/lang/String;)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      42: pop
      43: aload_0
      44: getfield      #7                  // Field ttl:Ljava/lang/Long;
      47: ifnull        65
      50: aload_1
      51: aload_0
      52: getfield      #7                  // Field ttl:Ljava/lang/Long;
      55: invokevirtual #13                 // Method java/lang/Long.longValue:()J
      58: invokestatic  #14                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      61: invokevirtual #15                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.ttl:(Ljava/time/Duration;)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      64: pop
      65: aload_0
      66: getfield      #4                  // Field overrides:Ljava/util/Map;
      69: ifnull        81
      72: aload_1
      73: aload_0
      74: getfield      #4                  // Field overrides:Ljava/util/Map;
      77: invokevirtual #16                 // Method zipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder.overrides:(Ljava/util/Map;)Lzipkin2/storage/kafka/KafkaStorageBuilder$DependencyStorageBuilder;
      80: pop
      81: aload_1
      82: areturn
}
