Compiled from "BasicAuth.kt"
public final class dev.neeffect.nee.ctx.web.BasicAuthProvider$UserSecurityContext<USERID, ROLE> implements dev.neeffect.nee.effects.security.SecurityCtx<USERID, ROLE> {
  private final USERID user;

  private final dev.neeffect.nee.security.UserRealm<USERID, ROLE> userRealm;

  public dev.neeffect.nee.effects.Out<dev.neeffect.nee.effects.security.SecurityError, USERID> getCurrentUser();
    Code:
       0: getstatic     #17                 // Field dev/neeffect/nee/effects/Out.Companion:Ldev/neeffect/nee/effects/Out$Companion;
       3: aload_0
       4: getfield      #21                 // Field user:Ljava/lang/Object;
       7: invokevirtual #27                 // Method dev/neeffect/nee/effects/Out$Companion.right:(Ljava/lang/Object;)Ldev/neeffect/nee/effects/Out;
      10: areturn

  public boolean hasRole(ROLE);
    Code:
       0: aload_0
       1: getfield      #37                 // Field userRealm:Ldev/neeffect/nee/security/UserRealm;
       4: aload_0
       5: getfield      #21                 // Field user:Ljava/lang/Object;
       8: aload_1
       9: invokeinterface #42,  3           // InterfaceMethod dev/neeffect/nee/security/UserRealm.hasRole:(Ljava/lang/Object;Ljava/lang/Object;)Z
      14: ireturn

  public dev.neeffect.nee.ctx.web.BasicAuthProvider$UserSecurityContext(USERID, dev.neeffect.nee.security.UserRealm<USERID, ROLE>);
    Code:
       0: aload_2
       1: ldc           #48                 // String userRealm
       3: invokestatic  #54                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #57                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #21                 // Field user:Ljava/lang/Object;
      15: aload_0
      16: aload_2
      17: putfield      #37                 // Field userRealm:Ldev/neeffect/nee/security/UserRealm;
      20: return
}
