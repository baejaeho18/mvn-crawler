Compiled from "TestLoad.java"
public class io.fabric8.testApp.TestLoad implements java.lang.Runnable {
  private final int MAX_ITERATIONS;

  private java.util.concurrent.atomic.AtomicBoolean done;

  private java.util.concurrent.atomic.AtomicLong count;

  private java.util.concurrent.atomic.AtomicLong count2;

  public io.fabric8.testApp.TestLoad();
    Code:
       0: aload_0
       1: bipush        100
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  public io.fabric8.testApp.TestLoad(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #5                  // Field done:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      19: dup
      20: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      23: putfield      #8                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      26: aload_0
      27: new           #6                  // class java/util/concurrent/atomic/AtomicLong
      30: dup
      31: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      34: putfield      #9                  // Field count2:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: iload_1
      39: putfield      #10                 // Field MAX_ITERATIONS:I
      42: return

  public long getCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void load(io.fabric8.testApp.TestValues);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method load1:(Lio/fabric8/testApp/TestValues;)V
       5: return

  public void load1(io.fabric8.testApp.TestValues);
    Code:
       0: aload_0
       1: ldc2_w        #13                 // long 100l
       4: invokespecial #15                 // Method sleep:(J)V
       7: aload_0
       8: aload_1
       9: invokevirtual #16                 // Method load2:(Lio/fabric8/testApp/TestValues;)V
      12: return

  public void load2(io.fabric8.testApp.TestValues);
    Code:
       0: aload_0
       1: ldc2_w        #17                 // long 10l
       4: invokespecial #15                 // Method sleep:(J)V
       7: aload_0
       8: getfield      #8                  // Field count:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      14: pop2
      15: return

  public void doSomethingElse();
    Code:
       0: aload_0
       1: ldc2_w        #20                 // long 20l
       4: invokespecial #15                 // Method sleep:(J)V
       7: aload_0
       8: getfield      #9                  // Field count2:Ljava/util/concurrent/atomic/AtomicLong;
      11: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      14: pop2
      15: return

  public void run();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #10                 // Field MAX_ITERATIONS:I
       7: if_icmpge     94
      10: invokestatic  #22                 // Method io/fabric8/testApp/TestValues.values:()[Lio/fabric8/testApp/TestValues;
      13: astore_2
      14: aload_2
      15: arraylength
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     88
      26: aload_2
      27: iload         4
      29: aaload
      30: astore        5
      32: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;
      35: new           #24                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      42: invokestatic  #26                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      45: invokevirtual #27                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      48: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #29                 // String  running #
      53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_1
      57: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      66: aload_0
      67: aload         5
      69: invokevirtual #33                 // Method load:(Lio/fabric8/testApp/TestValues;)V
      72: iload_1
      73: iconst_2
      74: irem
      75: ifne          82
      78: aload_0
      79: invokevirtual #34                 // Method doSomethingElse:()V
      82: iinc          4, 1
      85: goto          20
      88: iinc          1, 1
      91: goto          2
      94: getstatic     #23                 // Field java/lang/System.out:Ljava/io/PrintStream;
      97: new           #24                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     104: invokestatic  #26                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     107: invokevirtual #27                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     110: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: ldc           #35                 // String  done
     115: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokevirtual #32                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     124: aload_0
     125: getfield      #5                  // Field done:Ljava/util/concurrent/atomic/AtomicBoolean;
     128: iconst_1
     129: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     132: return

  private void sleep(long);
    Code:
       0: lload_1
       1: invokestatic  #37                 // Method java/lang/Thread.sleep:(J)V
       4: goto          8
       7: astore_3
       8: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/InterruptedException
}
