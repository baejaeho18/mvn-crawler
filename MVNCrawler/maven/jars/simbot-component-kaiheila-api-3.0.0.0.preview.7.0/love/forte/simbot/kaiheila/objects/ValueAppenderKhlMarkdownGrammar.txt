Compiled from "KMarkdown.kt"
public abstract class love.forte.simbot.kaiheila.objects.ValueAppenderKhlMarkdownGrammar<V extends java.lang.CharSequence> extends love.forte.simbot.kaiheila.objects.NoParamKhlMarkdownGrammar {
  private final V value;

  public love.forte.simbot.kaiheila.objects.ValueAppenderKhlMarkdownGrammar(V, love.forte.simbot.kaiheila.objects.KhlMarkdownGrammar$Source);
    Code:
       0: aload_1
       1: ldc           #12                 // String value
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #19                 // String grammarSource
       9: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: invokespecial #22                 // Method love/forte/simbot/kaiheila/objects/NoParamKhlMarkdownGrammar."<init>":(Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Source;)V
      17: aload_0
      18: aload_1
      19: putfield      #25                 // Field value:Ljava/lang/CharSequence;
      22: return

  public void appendTo(java.lang.Appendable);
    Code:
       0: aload_1
       1: ldc           #32                 // String appendable
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: aload_0
       8: getfield      #25                 // Field value:Ljava/lang/CharSequence;
      11: invokeinterface #38,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      16: pop
      17: return
}
