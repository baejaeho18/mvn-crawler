Compiled from "MessageCreateRequest.kt"
final class love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body {
  public static final love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body$Companion Companion;

  private final int type;

  private final love.forte.simbot.ID targetId;

  private final java.lang.String content;

  private final love.forte.simbot.ID quote;

  private final java.lang.String nonce;

  private final love.forte.simbot.ID tempTargetId;

  public love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body(int, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID);
    Code:
       0: aload_2
       1: ldc           #15                 // String targetId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #22                 // String content
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #25                 // Method java/lang/Object."<init>":()V
      16: aload_0
      17: iload_1
      18: putfield      #28                 // Field type:I
      21: aload_0
      22: aload_2
      23: putfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      26: aload_0
      27: aload_3
      28: putfield      #34                 // Field content:Ljava/lang/String;
      31: aload_0
      32: aload         4
      34: putfield      #36                 // Field quote:Llove/forte/simbot/ID;
      37: aload_0
      38: aload         5
      40: putfield      #38                 // Field nonce:Ljava/lang/String;
      43: aload_0
      44: aload         6
      46: putfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
      49: return

  public love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body(int, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         7
       2: bipush        8
       4: iand
       5: ifeq          11
       8: aconst_null
       9: astore        4
      11: iload         7
      13: bipush        16
      15: iand
      16: ifeq          22
      19: aconst_null
      20: astore        5
      22: iload         7
      24: bipush        32
      26: iand
      27: ifeq          33
      30: aconst_null
      31: astore        6
      33: aload_0
      34: iload_1
      35: aload_2
      36: aload_3
      37: aload         4
      39: aload         5
      41: aload         6
      43: invokespecial #45                 // Method "<init>":(ILlove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;)V
      46: return

  public final int getType();
    Code:
       0: aload_0
       1: getfield      #28                 // Field type:I
       4: ireturn

  public final love.forte.simbot.ID getTargetId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
       4: areturn

  public static void getTargetId$annotations();
    Code:
       0: return

  public final java.lang.String getContent();
    Code:
       0: aload_0
       1: getfield      #34                 // Field content:Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.ID getQuote();
    Code:
       0: aload_0
       1: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
       4: areturn

  public static void getQuote$annotations();
    Code:
       0: return

  public final java.lang.String getNonce();
    Code:
       0: aload_0
       1: getfield      #38                 // Field nonce:Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.ID getTempTargetId();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
       4: areturn

  public static void getTempTargetId$annotations();
    Code:
       0: return

  public final int component1();
    Code:
       0: aload_0
       1: getfield      #28                 // Field type:I
       4: ireturn

  public final love.forte.simbot.ID component2();
    Code:
       0: aload_0
       1: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
       4: areturn

  public final java.lang.String component3();
    Code:
       0: aload_0
       1: getfield      #34                 // Field content:Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.ID component4();
    Code:
       0: aload_0
       1: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
       4: areturn

  public final java.lang.String component5();
    Code:
       0: aload_0
       1: getfield      #38                 // Field nonce:Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.ID component6();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
       4: areturn

  public final love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body copy(int, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID);
    Code:
       0: aload_2
       1: ldc           #15                 // String targetId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #22                 // String content
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #2                  // class love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body
      15: dup
      16: iload_1
      17: aload_2
      18: aload_3
      19: aload         4
      21: aload         5
      23: aload         6
      25: invokespecial #45                 // Method "<init>":(ILlove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;)V
      28: areturn

  public static love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body copy$default(love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body, int, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, int, java.lang.Object);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: getfield      #28                 // Field type:I
      11: istore_1
      12: iload         7
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      23: astore_2
      24: iload         7
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: getfield      #34                 // Field content:Ljava/lang/String;
      35: astore_3
      36: iload         7
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
      48: astore        4
      50: iload         7
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: getfield      #38                 // Field nonce:Ljava/lang/String;
      62: astore        5
      64: iload         7
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
      76: astore        6
      78: aload_0
      79: iload_1
      80: aload_2
      81: aload_3
      82: aload         4
      84: aload         5
      86: aload         6
      88: invokevirtual #76                 // Method copy:(ILlove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;)Llove/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body;
      91: areturn

  public java.lang.String toString();
    Code:
       0: new           #79                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #80                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #82                 // String Body(type=
       9: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #28                 // Field type:I
      16: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #91                 // String , targetId=
      21: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      28: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #96                 // String , content=
      33: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #34                 // Field content:Ljava/lang/String;
      40: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #98                 // String , quote=
      45: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
      52: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #100                // String , nonce=
      57: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #38                 // Field nonce:Ljava/lang/String;
      64: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #102                // String , tempTargetId=
      69: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
      76: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: bipush        41
      81: invokevirtual #105                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      84: invokevirtual #107                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #28                 // Field type:I
       4: invokestatic  #113                // Method java/lang/Integer.hashCode:(I)I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      16: invokevirtual #117                // Method love/forte/simbot/ID.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: getfield      #34                 // Field content:Ljava/lang/String;
      29: invokevirtual #120                // Method java/lang/String.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
      42: ifnonnull     49
      45: iconst_0
      46: goto          56
      49: aload_0
      50: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
      53: invokevirtual #117                // Method love/forte/simbot/ID.hashCode:()I
      56: iadd
      57: istore_1
      58: iload_1
      59: bipush        31
      61: imul
      62: aload_0
      63: getfield      #38                 // Field nonce:Ljava/lang/String;
      66: ifnonnull     73
      69: iconst_0
      70: goto          80
      73: aload_0
      74: getfield      #38                 // Field nonce:Ljava/lang/String;
      77: invokevirtual #120                // Method java/lang/String.hashCode:()I
      80: iadd
      81: istore_1
      82: iload_1
      83: bipush        31
      85: imul
      86: aload_0
      87: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
      90: ifnonnull     97
      93: iconst_0
      94: goto          104
      97: aload_0
      98: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
     101: invokevirtual #117                // Method love/forte/simbot/ID.hashCode:()I
     104: iadd
     105: istore_1
     106: iload_1
     107: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body
      20: astore_2
      21: aload_0
      22: getfield      #28                 // Field type:I
      25: aload_2
      26: getfield      #28                 // Field type:I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      38: aload_2
      39: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      42: invokestatic  #128                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      45: ifne          50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: getfield      #34                 // Field content:Ljava/lang/String;
      54: aload_2
      55: getfield      #34                 // Field content:Ljava/lang/String;
      58: invokestatic  #128                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      61: ifne          66
      64: iconst_0
      65: ireturn
      66: aload_0
      67: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
      70: aload_2
      71: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
      74: invokestatic  #128                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: getfield      #38                 // Field nonce:Ljava/lang/String;
      86: aload_2
      87: getfield      #38                 // Field nonce:Ljava/lang/String;
      90: invokestatic  #128                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifne          98
      96: iconst_0
      97: ireturn
      98: aload_0
      99: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
     102: aload_2
     103: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
     106: invokestatic  #128                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     109: ifne          114
     112: iconst_0
     113: ireturn
     114: iconst_1
     115: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #136                // String self
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #137                // String output
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #138                // String serialDesc
      15: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: aload_0
      22: getfield      #28                 // Field type:I
      25: invokeinterface #144,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      30: aload_1
      31: aload_2
      32: iconst_1
      33: getstatic     #149                // Field love/forte/simbot/ID$AsCharSequenceIDSerializer.INSTANCE:Llove/forte/simbot/ID$AsCharSequenceIDSerializer;
      36: checkcast     #151                // class kotlinx/serialization/SerializationStrategy
      39: aload_0
      40: getfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      43: invokeinterface #155,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      48: aload_1
      49: aload_2
      50: iconst_2
      51: aload_0
      52: getfield      #34                 // Field content:Ljava/lang/String;
      55: invokeinterface #159,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      60: aload_1
      61: aload_2
      62: iconst_3
      63: invokeinterface #163,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
      68: ifeq          75
      71: iconst_1
      72: goto          87
      75: aload_0
      76: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
      79: ifnull        86
      82: iconst_1
      83: goto          87
      86: iconst_0
      87: ifeq          108
      90: aload_1
      91: aload_2
      92: iconst_3
      93: getstatic     #149                // Field love/forte/simbot/ID$AsCharSequenceIDSerializer.INSTANCE:Llove/forte/simbot/ID$AsCharSequenceIDSerializer;
      96: checkcast     #151                // class kotlinx/serialization/SerializationStrategy
      99: aload_0
     100: getfield      #36                 // Field quote:Llove/forte/simbot/ID;
     103: invokeinterface #166,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeNullableSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     108: aload_1
     109: aload_2
     110: iconst_4
     111: invokeinterface #163,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     116: ifeq          123
     119: iconst_1
     120: goto          135
     123: aload_0
     124: getfield      #38                 // Field nonce:Ljava/lang/String;
     127: ifnull        134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: ifeq          156
     138: aload_1
     139: aload_2
     140: iconst_4
     141: getstatic     #171                // Field kotlinx/serialization/internal/StringSerializer.INSTANCE:Lkotlinx/serialization/internal/StringSerializer;
     144: checkcast     #151                // class kotlinx/serialization/SerializationStrategy
     147: aload_0
     148: getfield      #38                 // Field nonce:Ljava/lang/String;
     151: invokeinterface #166,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeNullableSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     156: aload_1
     157: aload_2
     158: iconst_5
     159: invokeinterface #163,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     164: ifeq          171
     167: iconst_1
     168: goto          183
     171: aload_0
     172: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
     175: ifnull        182
     178: iconst_1
     179: goto          183
     182: iconst_0
     183: ifeq          204
     186: aload_1
     187: aload_2
     188: iconst_5
     189: getstatic     #149                // Field love/forte/simbot/ID$AsCharSequenceIDSerializer.INSTANCE:Llove/forte/simbot/ID$AsCharSequenceIDSerializer;
     192: checkcast     #151                // class kotlinx/serialization/SerializationStrategy
     195: aload_0
     196: getfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
     199: invokeinterface #166,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeNullableSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     204: return

  public love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Body(int, int, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: bipush        7
       2: bipush        7
       4: iload_1
       5: iand
       6: if_icmpeq     21
       9: iload_1
      10: bipush        7
      12: getstatic     #190                // Field love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body$$serializer;
      15: invokevirtual #194                // Method love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      18: invokestatic  #200                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      21: aload_0
      22: invokespecial #25                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: iload_2
      27: putfield      #28                 // Field type:I
      30: aload_0
      31: aload_3
      32: putfield      #31                 // Field targetId:Llove/forte/simbot/ID;
      35: aload_0
      36: aload         4
      38: putfield      #34                 // Field content:Ljava/lang/String;
      41: iload_1
      42: bipush        8
      44: iand
      45: ifne          56
      48: aload_0
      49: aconst_null
      50: putfield      #36                 // Field quote:Llove/forte/simbot/ID;
      53: goto          62
      56: aload_0
      57: aload         5
      59: putfield      #36                 // Field quote:Llove/forte/simbot/ID;
      62: iload_1
      63: bipush        16
      65: iand
      66: ifne          77
      69: aload_0
      70: aconst_null
      71: putfield      #38                 // Field nonce:Ljava/lang/String;
      74: goto          83
      77: aload_0
      78: aload         6
      80: putfield      #38                 // Field nonce:Ljava/lang/String;
      83: iload_1
      84: bipush        32
      86: iand
      87: ifne          98
      90: aload_0
      91: aconst_null
      92: putfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
      95: goto          104
      98: aload_0
      99: aload         7
     101: putfield      #40                 // Field tempTargetId:Llove/forte/simbot/ID;
     104: return

  static {};
    Code:
       0: new           #208                // class love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body$Companion
       3: dup
       4: aconst_null
       5: invokespecial #211                // Method love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #215                // Field Companion:Llove/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body$Companion;
      11: return
}
