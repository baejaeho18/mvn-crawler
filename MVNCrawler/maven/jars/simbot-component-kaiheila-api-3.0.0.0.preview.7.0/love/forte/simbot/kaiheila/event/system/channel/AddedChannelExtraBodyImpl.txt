Compiled from "AddedChannel.kt"
public final class love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl implements love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBody {
  public static final love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final love.forte.simbot.CharSequenceID guildId;

  private final love.forte.simbot.CharSequenceID masterId;

  private final love.forte.simbot.CharSequenceID parentId;

  private final java.lang.String name;

  private final java.lang.String topic;

  private final int type;

  private final java.lang.Integer _level;

  private final int slowMode;

  private final int limitAmount;

  private final boolean isCategory;

  private final java.lang.String serverUrl;

  public love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, java.lang.Integer, int, int, boolean, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #23                 // String id
       3: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #30                 // String guildId
       9: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #31                 // String masterId
      15: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #32                 // String parentId
      22: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #33                 // String name
      29: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         6
      34: ldc           #34                 // String topic
      36: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         12
      41: ldc           #35                 // String serverUrl
      43: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload_0
      47: invokespecial #38                 // Method java/lang/Object."<init>":()V
      50: aload_0
      51: aload_1
      52: putfield      #41                 // Field id:Llove/forte/simbot/CharSequenceID;
      55: aload_0
      56: aload_2
      57: putfield      #43                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      60: aload_0
      61: aload_3
      62: putfield      #45                 // Field masterId:Llove/forte/simbot/CharSequenceID;
      65: aload_0
      66: aload         4
      68: putfield      #47                 // Field parentId:Llove/forte/simbot/CharSequenceID;
      71: aload_0
      72: aload         5
      74: putfield      #50                 // Field name:Ljava/lang/String;
      77: aload_0
      78: aload         6
      80: putfield      #52                 // Field topic:Ljava/lang/String;
      83: aload_0
      84: iload         7
      86: putfield      #55                 // Field type:I
      89: aload_0
      90: aload         8
      92: putfield      #58                 // Field _level:Ljava/lang/Integer;
      95: aload_0
      96: iload         9
      98: putfield      #60                 // Field slowMode:I
     101: aload_0
     102: iload         10
     104: putfield      #62                 // Field limitAmount:I
     107: aload_0
     108: iload         11
     110: putfield      #65                 // Field isCategory:Z
     113: aload_0
     114: aload         12
     116: putfield      #67                 // Field serverUrl:Ljava/lang/String;
     119: nop
     120: aload_0
     121: invokevirtual #71                 // Method getType:()I
     124: istore        13
     126: iconst_1
     127: iload         13
     129: if_icmpgt     146
     132: iload         13
     134: iconst_3
     135: if_icmpge     142
     138: iconst_1
     139: goto          147
     142: iconst_0
     143: goto          147
     146: iconst_0
     147: ifne          180
     150: iconst_0
     151: istore        14
     153: ldc           #73                 // String Parameter type must be 1 or 2, but
     155: aload_0
     156: invokevirtual #71                 // Method getType:()I
     159: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     162: invokestatic  #83                 // Method kotlin/jvm/internal/Intrinsics.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     165: astore        14
     167: new           #85                 // class java/lang/IllegalStateException
     170: dup
     171: aload         14
     173: invokevirtual #89                 // Method java/lang/Object.toString:()Ljava/lang/String;
     176: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     179: athrow
     180: nop
     181: return

  public love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, java.lang.Integer, int, int, boolean, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         13
       2: sipush        128
       5: iand
       6: ifeq          12
       9: aconst_null
      10: astore        8
      12: iload         13
      14: sipush        256
      17: iand
      18: ifeq          24
      21: iconst_m1
      22: istore        9
      24: iload         13
      26: sipush        512
      29: iand
      30: ifeq          36
      33: iconst_m1
      34: istore        10
      36: iload         13
      38: sipush        1024
      41: iand
      42: ifeq          48
      45: iconst_0
      46: istore        11
      48: iload         13
      50: sipush        2048
      53: iand
      54: ifeq          61
      57: ldc           #102                // String
      59: astore        12
      61: aload_0
      62: aload_1
      63: aload_2
      64: aload_3
      65: aload         4
      67: aload         5
      69: aload         6
      71: iload         7
      73: aload         8
      75: iload         9
      77: iload         10
      79: iload         11
      81: aload         12
      83: invokespecial #104                // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Integer;IIZLjava/lang/String;)V
      86: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #41                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public love.forte.simbot.CharSequenceID getGuildId();
    Code:
       0: aload_0
       1: getfield      #43                 // Field guildId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getGuildId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getMasterId();
    Code:
       0: aload_0
       1: getfield      #45                 // Field masterId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getMasterId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getParentId();
    Code:
       0: aload_0
       1: getfield      #47                 // Field parentId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getParentId$annotations();
    Code:
       0: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #50                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getTopic();
    Code:
       0: aload_0
       1: getfield      #52                 // Field topic:Ljava/lang/String;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #55                 // Field type:I
       4: ireturn

  private static void get_level$annotations();
    Code:
       0: return

  public int getSlowMode();
    Code:
       0: aload_0
       1: getfield      #60                 // Field slowMode:I
       4: ireturn

  public static void getSlowMode$annotations();
    Code:
       0: return

  public int getLimitAmount();
    Code:
       0: aload_0
       1: getfield      #62                 // Field limitAmount:I
       4: ireturn

  public static void getLimitAmount$annotations();
    Code:
       0: return

  public boolean isCategory();
    Code:
       0: aload_0
       1: getfield      #65                 // Field isCategory:Z
       4: ireturn

  public static void isCategory$annotations();
    Code:
       0: return

  public java.lang.String getServerUrl();
    Code:
       0: aload_0
       1: getfield      #67                 // Field serverUrl:Ljava/lang/String;
       4: areturn

  public static void getServerUrl$annotations();
    Code:
       0: return

  public int getLevel();
    Code:
       0: aload_0
       1: getfield      #58                 // Field _level:Ljava/lang/Integer;
       4: dup
       5: ifnonnull     13
       8: pop
       9: iconst_m1
      10: goto          16
      13: invokevirtual #140                // Method java/lang/Integer.intValue:()I
      16: ireturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component2();
    Code:
       0: aload_0
       1: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component3();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component4();
    Code:
       0: aload_0
       1: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component5();
    Code:
       0: aload_0
       1: invokevirtual #155                // Method getName:()Ljava/lang/String;
       4: areturn

  public final java.lang.String component6();
    Code:
       0: aload_0
       1: invokevirtual #158                // Method getTopic:()Ljava/lang/String;
       4: areturn

  public final int component7();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getType:()I
       4: ireturn

  private final java.lang.Integer component8();
    Code:
       0: aload_0
       1: getfield      #58                 // Field _level:Ljava/lang/Integer;
       4: areturn

  public final int component9();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method getSlowMode:()I
       4: ireturn

  public final int component10();
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getLimitAmount:()I
       4: ireturn

  public final boolean component11();
    Code:
       0: aload_0
       1: invokevirtual #170                // Method isCategory:()Z
       4: ireturn

  public final java.lang.String component12();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl copy(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, java.lang.Integer, int, int, boolean, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #23                 // String id
       3: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #30                 // String guildId
       9: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #31                 // String masterId
      15: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #32                 // String parentId
      22: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #33                 // String name
      29: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         6
      34: ldc           #34                 // String topic
      36: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         12
      41: ldc           #35                 // String serverUrl
      43: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: new           #2                  // class love/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl
      49: dup
      50: aload_1
      51: aload_2
      52: aload_3
      53: aload         4
      55: aload         5
      57: aload         6
      59: iload         7
      61: aload         8
      63: iload         9
      65: iload         10
      67: iload         11
      69: aload         12
      71: invokespecial #104                // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Integer;IIZLjava/lang/String;)V
      74: areturn

  public static love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl copy$default(love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, java.lang.Integer, int, int, boolean, java.lang.String, int, java.lang.Object);
    Code:
       0: iload         13
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         13
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      23: astore_2
      24: iload         13
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      35: astore_3
      36: iload         13
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      48: astore        4
      50: iload         13
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #155                // Method getName:()Ljava/lang/String;
      62: astore        5
      64: iload         13
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #158                // Method getTopic:()Ljava/lang/String;
      76: astore        6
      78: iload         13
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #71                 // Method getType:()I
      90: istore        7
      92: iload         13
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: getfield      #58                 // Field _level:Ljava/lang/Integer;
     105: astore        8
     107: iload         13
     109: sipush        256
     112: iand
     113: ifeq          122
     116: aload_0
     117: invokevirtual #164                // Method getSlowMode:()I
     120: istore        9
     122: iload         13
     124: sipush        512
     127: iand
     128: ifeq          137
     131: aload_0
     132: invokevirtual #167                // Method getLimitAmount:()I
     135: istore        10
     137: iload         13
     139: sipush        1024
     142: iand
     143: ifeq          152
     146: aload_0
     147: invokevirtual #170                // Method isCategory:()Z
     150: istore        11
     152: iload         13
     154: sipush        2048
     157: iand
     158: ifeq          167
     161: aload_0
     162: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
     165: astore        12
     167: aload_0
     168: aload_1
     169: aload_2
     170: aload_3
     171: aload         4
     173: aload         5
     175: aload         6
     177: iload         7
     179: aload         8
     181: iload         9
     183: iload         10
     185: iload         11
     187: aload         12
     189: invokevirtual #179                // Method copy:(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Integer;IIZLjava/lang/String;)Llove/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl;
     192: areturn

  public java.lang.String toString();
    Code:
       0: new           #181                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #182                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #184                // String AddedChannelExtraBodyImpl(id=
      11: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
      18: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #193                // String , guildId=
      23: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      30: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #195                // String , masterId=
      35: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #197                // String , parentId=
      47: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      54: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #199                // String , name=
      59: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #155                // Method getName:()Ljava/lang/String;
      66: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #201                // String , topic=
      71: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #158                // Method getTopic:()Ljava/lang/String;
      78: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #203                // String , type=
      83: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #71                 // Method getType:()I
      90: invokevirtual #206                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: ldc           #208                // String , _level=
      95: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #58                 // Field _level:Ljava/lang/Integer;
     102: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: ldc           #210                // String , slowMode=
     107: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokevirtual #164                // Method getSlowMode:()I
     114: invokevirtual #206                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: ldc           #212                // String , limitAmount=
     119: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: invokevirtual #167                // Method getLimitAmount:()I
     126: invokevirtual #206                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #214                // String , isCategory=
     131: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: invokevirtual #170                // Method isCategory:()Z
     138: invokevirtual #217                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     141: ldc           #219                // String , serverUrl=
     143: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_1
     148: aload_0
     149: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
     152: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: bipush        41
     157: invokevirtual #222                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     160: pop
     161: aload_1
     162: invokevirtual #223                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #226                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #226                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      29: invokevirtual #226                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #226                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #155                // Method getName:()Ljava/lang/String;
      55: invokevirtual #227                // Method java/lang/String.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: bipush        31
      63: imul
      64: aload_0
      65: invokevirtual #158                // Method getTopic:()Ljava/lang/String;
      68: invokevirtual #227                // Method java/lang/String.hashCode:()I
      71: iadd
      72: istore_1
      73: iload_1
      74: bipush        31
      76: imul
      77: aload_0
      78: invokevirtual #71                 // Method getType:()I
      81: invokestatic  #230                // Method java/lang/Integer.hashCode:(I)I
      84: iadd
      85: istore_1
      86: iload_1
      87: bipush        31
      89: imul
      90: aload_0
      91: getfield      #58                 // Field _level:Ljava/lang/Integer;
      94: ifnonnull     101
      97: iconst_0
      98: goto          108
     101: aload_0
     102: getfield      #58                 // Field _level:Ljava/lang/Integer;
     105: invokevirtual #231                // Method java/lang/Object.hashCode:()I
     108: iadd
     109: istore_1
     110: iload_1
     111: bipush        31
     113: imul
     114: aload_0
     115: invokevirtual #164                // Method getSlowMode:()I
     118: invokestatic  #230                // Method java/lang/Integer.hashCode:(I)I
     121: iadd
     122: istore_1
     123: iload_1
     124: bipush        31
     126: imul
     127: aload_0
     128: invokevirtual #167                // Method getLimitAmount:()I
     131: invokestatic  #230                // Method java/lang/Integer.hashCode:(I)I
     134: iadd
     135: istore_1
     136: iload_1
     137: bipush        31
     139: imul
     140: aload_0
     141: invokevirtual #170                // Method isCategory:()Z
     144: dup
     145: ifeq          150
     148: pop
     149: iconst_1
     150: iadd
     151: istore_1
     152: iload_1
     153: bipush        31
     155: imul
     156: aload_0
     157: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
     160: invokevirtual #227                // Method java/lang/String.hashCode:()I
     163: iadd
     164: istore_1
     165: iload_1
     166: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      41: aload_2
      42: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      45: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      57: aload_2
      58: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      61: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      73: aload_2
      74: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      77: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload_0
      86: invokevirtual #155                // Method getName:()Ljava/lang/String;
      89: aload_2
      90: invokevirtual #155                // Method getName:()Ljava/lang/String;
      93: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifne          101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #158                // Method getTopic:()Ljava/lang/String;
     105: aload_2
     106: invokevirtual #158                // Method getTopic:()Ljava/lang/String;
     109: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     112: ifne          117
     115: iconst_0
     116: ireturn
     117: aload_0
     118: invokevirtual #71                 // Method getType:()I
     121: aload_2
     122: invokevirtual #71                 // Method getType:()I
     125: if_icmpeq     130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: getfield      #58                 // Field _level:Ljava/lang/Integer;
     134: aload_2
     135: getfield      #58                 // Field _level:Ljava/lang/Integer;
     138: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     141: ifne          146
     144: iconst_0
     145: ireturn
     146: aload_0
     147: invokevirtual #164                // Method getSlowMode:()I
     150: aload_2
     151: invokevirtual #164                // Method getSlowMode:()I
     154: if_icmpeq     159
     157: iconst_0
     158: ireturn
     159: aload_0
     160: invokevirtual #167                // Method getLimitAmount:()I
     163: aload_2
     164: invokevirtual #167                // Method getLimitAmount:()I
     167: if_icmpeq     172
     170: iconst_0
     171: ireturn
     172: aload_0
     173: invokevirtual #170                // Method isCategory:()Z
     176: aload_2
     177: invokevirtual #170                // Method isCategory:()Z
     180: if_icmpeq     185
     183: iconst_0
     184: ireturn
     185: aload_0
     186: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
     189: aload_2
     190: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
     193: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     196: ifne          201
     199: iconst_0
     200: ireturn
     201: iconst_1
     202: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #247                // String self
       3: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #248                // String output
       9: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #249                // String serialDesc
      15: invokestatic  #29                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #255                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #257                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #263,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: getstatic     #255                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      42: checkcast     #257                // class kotlinx/serialization/SerializationStrategy
      45: aload_0
      46: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      49: invokeinterface #263,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      54: aload_1
      55: aload_2
      56: iconst_2
      57: getstatic     #255                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      60: checkcast     #257                // class kotlinx/serialization/SerializationStrategy
      63: aload_0
      64: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      67: invokeinterface #263,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      72: aload_1
      73: aload_2
      74: iconst_3
      75: getstatic     #255                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      78: checkcast     #257                // class kotlinx/serialization/SerializationStrategy
      81: aload_0
      82: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      85: invokeinterface #263,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      90: aload_1
      91: aload_2
      92: iconst_4
      93: aload_0
      94: invokevirtual #155                // Method getName:()Ljava/lang/String;
      97: invokeinterface #267,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     102: aload_1
     103: aload_2
     104: iconst_5
     105: aload_0
     106: invokevirtual #158                // Method getTopic:()Ljava/lang/String;
     109: invokeinterface #267,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     114: aload_1
     115: aload_2
     116: bipush        6
     118: aload_0
     119: invokevirtual #71                 // Method getType:()I
     122: invokeinterface #271,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     127: aload_1
     128: aload_2
     129: bipush        7
     131: invokeinterface #275,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     136: ifeq          143
     139: iconst_1
     140: goto          155
     143: aload_0
     144: getfield      #58                 // Field _level:Ljava/lang/Integer;
     147: ifnull        154
     150: iconst_1
     151: goto          155
     154: iconst_0
     155: ifeq          177
     158: aload_1
     159: aload_2
     160: bipush        7
     162: getstatic     #280                // Field kotlinx/serialization/internal/IntSerializer.INSTANCE:Lkotlinx/serialization/internal/IntSerializer;
     165: checkcast     #257                // class kotlinx/serialization/SerializationStrategy
     168: aload_0
     169: getfield      #58                 // Field _level:Ljava/lang/Integer;
     172: invokeinterface #283,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeNullableSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     177: aload_1
     178: aload_2
     179: bipush        8
     181: invokeinterface #275,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     186: ifeq          193
     189: iconst_1
     190: goto          206
     193: aload_0
     194: invokevirtual #164                // Method getSlowMode:()I
     197: iconst_m1
     198: if_icmpeq     205
     201: iconst_1
     202: goto          206
     205: iconst_0
     206: ifeq          222
     209: aload_1
     210: aload_2
     211: bipush        8
     213: aload_0
     214: invokevirtual #164                // Method getSlowMode:()I
     217: invokeinterface #271,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     222: aload_1
     223: aload_2
     224: bipush        9
     226: invokeinterface #275,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     231: ifeq          238
     234: iconst_1
     235: goto          251
     238: aload_0
     239: invokevirtual #167                // Method getLimitAmount:()I
     242: iconst_m1
     243: if_icmpeq     250
     246: iconst_1
     247: goto          251
     250: iconst_0
     251: ifeq          267
     254: aload_1
     255: aload_2
     256: bipush        9
     258: aload_0
     259: invokevirtual #167                // Method getLimitAmount:()I
     262: invokeinterface #271,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     267: aload_1
     268: aload_2
     269: bipush        10
     271: invokeinterface #275,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     276: ifeq          283
     279: iconst_1
     280: goto          295
     283: aload_0
     284: invokevirtual #170                // Method isCategory:()Z
     287: ifeq          294
     290: iconst_1
     291: goto          295
     294: iconst_0
     295: ifeq          320
     298: aload_1
     299: aload_2
     300: bipush        10
     302: getstatic     #287                // Field love/forte/simbot/kaiheila/util/BooleanToIntSerializer.INSTANCE:Llove/forte/simbot/kaiheila/util/BooleanToIntSerializer;
     305: checkcast     #257                // class kotlinx/serialization/SerializationStrategy
     308: aload_0
     309: invokevirtual #170                // Method isCategory:()Z
     312: invokestatic  #292                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     315: invokeinterface #263,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     320: aload_1
     321: aload_2
     322: bipush        11
     324: invokeinterface #275,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     329: ifeq          336
     332: iconst_1
     333: goto          353
     336: aload_0
     337: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
     340: ldc           #102                // String
     342: invokestatic  #239                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     345: ifne          352
     348: iconst_1
     349: goto          353
     352: iconst_0
     353: ifeq          369
     356: aload_1
     357: aload_2
     358: bipush        11
     360: aload_0
     361: invokevirtual #173                // Method getServerUrl:()Ljava/lang/String;
     364: invokeinterface #267,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     369: return

  public love.forte.simbot.kaiheila.event.system.channel.AddedChannelExtraBodyImpl(int, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, java.lang.Integer, int, int, boolean, java.lang.String, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: bipush        127
       2: bipush        127
       4: iload_1
       5: iand
       6: if_icmpeq     21
       9: iload_1
      10: bipush        127
      12: getstatic     #309                // Field love/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl$$serializer;
      15: invokevirtual #313                // Method love/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      18: invokestatic  #319                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      21: aload_0
      22: invokespecial #38                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: aload_2
      27: putfield      #41                 // Field id:Llove/forte/simbot/CharSequenceID;
      30: aload_0
      31: aload_3
      32: putfield      #43                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      35: aload_0
      36: aload         4
      38: putfield      #45                 // Field masterId:Llove/forte/simbot/CharSequenceID;
      41: aload_0
      42: aload         5
      44: putfield      #47                 // Field parentId:Llove/forte/simbot/CharSequenceID;
      47: aload_0
      48: aload         6
      50: putfield      #50                 // Field name:Ljava/lang/String;
      53: aload_0
      54: aload         7
      56: putfield      #52                 // Field topic:Ljava/lang/String;
      59: aload_0
      60: iload         8
      62: putfield      #55                 // Field type:I
      65: iload_1
      66: sipush        128
      69: iand
      70: ifne          81
      73: aload_0
      74: aconst_null
      75: putfield      #58                 // Field _level:Ljava/lang/Integer;
      78: goto          87
      81: aload_0
      82: aload         9
      84: putfield      #58                 // Field _level:Ljava/lang/Integer;
      87: iload_1
      88: sipush        256
      91: iand
      92: ifne          103
      95: aload_0
      96: iconst_m1
      97: putfield      #60                 // Field slowMode:I
     100: goto          109
     103: aload_0
     104: iload         10
     106: putfield      #60                 // Field slowMode:I
     109: iload_1
     110: sipush        512
     113: iand
     114: ifne          125
     117: aload_0
     118: iconst_m1
     119: putfield      #62                 // Field limitAmount:I
     122: goto          131
     125: aload_0
     126: iload         11
     128: putfield      #62                 // Field limitAmount:I
     131: iload_1
     132: sipush        1024
     135: iand
     136: ifne          147
     139: aload_0
     140: iconst_0
     141: putfield      #65                 // Field isCategory:Z
     144: goto          153
     147: aload_0
     148: iload         12
     150: putfield      #65                 // Field isCategory:Z
     153: iload_1
     154: sipush        2048
     157: iand
     158: ifne          170
     161: aload_0
     162: ldc           #102                // String
     164: putfield      #67                 // Field serverUrl:Ljava/lang/String;
     167: goto          176
     170: aload_0
     171: aload         13
     173: putfield      #67                 // Field serverUrl:Ljava/lang/String;
     176: aload_0
     177: invokevirtual #71                 // Method getType:()I
     180: istore        15
     182: iconst_1
     183: iload         15
     185: if_icmpgt     202
     188: iload         15
     190: iconst_3
     191: if_icmpge     198
     194: iconst_1
     195: goto          203
     198: iconst_0
     199: goto          203
     202: iconst_0
     203: ifne          236
     206: iconst_0
     207: istore        16
     209: ldc           #73                 // String Parameter type must be 1 or 2, but
     211: aload_0
     212: invokevirtual #71                 // Method getType:()I
     215: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     218: invokestatic  #83                 // Method kotlin/jvm/internal/Intrinsics.stringPlus:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
     221: astore        16
     223: new           #85                 // class java/lang/IllegalStateException
     226: dup
     227: aload         16
     229: invokevirtual #89                 // Method java/lang/Object.toString:()Ljava/lang/String;
     232: invokespecial #92                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     235: athrow
     236: return

  public love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #328                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getGuildId();
    Code:
       0: aload_0
       1: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #328                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getMasterId();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #328                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getParentId();
    Code:
       0: aload_0
       1: invokevirtual #152                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #328                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #331                // class love/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #334                // Method love/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #338                // Field Companion:Llove/forte/simbot/kaiheila/event/system/channel/AddedChannelExtraBodyImpl$Companion;
      11: return
}
