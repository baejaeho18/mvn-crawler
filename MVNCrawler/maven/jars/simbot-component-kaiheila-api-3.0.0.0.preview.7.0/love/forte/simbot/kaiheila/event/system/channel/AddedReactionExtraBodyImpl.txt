Compiled from "AddedReaction.kt"
public final class love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl implements love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBody {
  public static final love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID msgId;

  private final love.forte.simbot.CharSequenceID userId;

  private final love.forte.simbot.CharSequenceID channelId;

  private final love.forte.simbot.kaiheila.objects.ReactionEmoji emoji;

  public love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.kaiheila.objects.ReactionEmoji);
    Code:
       0: aload_1
       1: ldc           #14                 // String msgId
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #21                 // String userId
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #22                 // String channelId
      15: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #23                 // String emoji
      22: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload_0
      26: invokespecial #26                 // Method java/lang/Object."<init>":()V
      29: aload_0
      30: aload_1
      31: putfield      #29                 // Field msgId:Llove/forte/simbot/CharSequenceID;
      34: aload_0
      35: aload_2
      36: putfield      #31                 // Field userId:Llove/forte/simbot/CharSequenceID;
      39: aload_0
      40: aload_3
      41: putfield      #33                 // Field channelId:Llove/forte/simbot/CharSequenceID;
      44: aload_0
      45: aload         4
      47: putfield      #36                 // Field emoji:Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      50: return

  public love.forte.simbot.CharSequenceID getMsgId();
    Code:
       0: aload_0
       1: getfield      #29                 // Field msgId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getMsgId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getUserId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field userId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getUserId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getChannelId();
    Code:
       0: aload_0
       1: getfield      #33                 // Field channelId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getChannelId$annotations();
    Code:
       0: return

  public love.forte.simbot.kaiheila.objects.ReactionEmoji getEmoji();
    Code:
       0: aload_0
       1: getfield      #36                 // Field emoji:Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
       4: areturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component2();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component3();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.kaiheila.objects.ReactionEmoji component4();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getEmoji:()Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
       4: areturn

  public final love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl copy(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.kaiheila.objects.ReactionEmoji);
    Code:
       0: aload_1
       1: ldc           #14                 // String msgId
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #21                 // String userId
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #22                 // String channelId
      15: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #23                 // String emoji
      22: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: new           #2                  // class love/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl
      28: dup
      29: aload_1
      30: aload_2
      31: aload_3
      32: aload         4
      34: invokespecial #68                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/kaiheila/objects/ReactionEmoji;)V
      37: areturn

  public static love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl copy$default(love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.kaiheila.objects.ReactionEmoji, int, java.lang.Object);
    Code:
       0: iload         5
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         5
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      23: astore_2
      24: iload         5
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      35: astore_3
      36: iload         5
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #64                 // Method getEmoji:()Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      48: astore        4
      50: aload_0
      51: aload_1
      52: aload_2
      53: aload_3
      54: aload         4
      56: invokevirtual #72                 // Method copy:(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/kaiheila/objects/ReactionEmoji;)Llove/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl;
      59: areturn

  public java.lang.String toString();
    Code:
       0: new           #76                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #77                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #79                 // String AddedReactionExtraBodyImpl(msgId=
       9: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #88                 // String , userId=
      21: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      28: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #90                 // String , channelId=
      33: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      40: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #92                 // String , emoji=
      45: invokevirtual #83                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #64                 // Method getEmoji:()Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      52: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: bipush        41
      57: invokevirtual #95                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #103                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #103                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      29: invokevirtual #103                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #64                 // Method getEmoji:()Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      42: invokevirtual #106                // Method love/forte/simbot/kaiheila/objects/ReactionEmoji.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #116                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      41: aload_2
      42: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      45: invokestatic  #116                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      57: aload_2
      58: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      61: invokestatic  #116                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #64                 // Method getEmoji:()Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      73: aload_2
      74: invokevirtual #64                 // Method getEmoji:()Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      77: invokestatic  #116                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: iconst_1
      86: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #124                // String self
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #125                // String output
       9: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #126                // String serialDesc
      15: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #132                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #134                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #140,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: getstatic     #132                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      42: checkcast     #134                // class kotlinx/serialization/SerializationStrategy
      45: aload_0
      46: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      49: invokeinterface #140,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      54: aload_1
      55: aload_2
      56: iconst_2
      57: getstatic     #132                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      60: checkcast     #134                // class kotlinx/serialization/SerializationStrategy
      63: aload_0
      64: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      67: invokeinterface #140,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      72: aload_1
      73: aload_2
      74: iconst_3
      75: getstatic     #145                // Field love/forte/simbot/kaiheila/objects/ReactionEmoji$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/ReactionEmoji$$serializer;
      78: checkcast     #134                // class kotlinx/serialization/SerializationStrategy
      81: aload_0
      82: invokevirtual #64                 // Method getEmoji:()Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      85: invokeinterface #140,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      90: return

  public love.forte.simbot.kaiheila.event.system.channel.AddedReactionExtraBodyImpl(int, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.kaiheila.objects.ReactionEmoji, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: bipush        15
       2: bipush        15
       4: iload_1
       5: iand
       6: if_icmpeq     21
       9: iload_1
      10: bipush        15
      12: getstatic     #164                // Field love/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl$$serializer;
      15: invokevirtual #168                // Method love/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      18: invokestatic  #174                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      21: aload_0
      22: invokespecial #26                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: aload_2
      27: putfield      #29                 // Field msgId:Llove/forte/simbot/CharSequenceID;
      30: aload_0
      31: aload_3
      32: putfield      #31                 // Field userId:Llove/forte/simbot/CharSequenceID;
      35: aload_0
      36: aload         4
      38: putfield      #33                 // Field channelId:Llove/forte/simbot/CharSequenceID;
      41: aload_0
      42: aload         5
      44: putfield      #36                 // Field emoji:Llove/forte/simbot/kaiheila/objects/ReactionEmoji;
      47: return

  public love.forte.simbot.ID getMsgId();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #180                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getUserId();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #180                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getChannelId();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #180                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #183                // class love/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #186                // Method love/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #190                // Field Companion:Llove/forte/simbot/kaiheila/event/system/channel/AddedReactionExtraBodyImpl$Companion;
      11: return
}
