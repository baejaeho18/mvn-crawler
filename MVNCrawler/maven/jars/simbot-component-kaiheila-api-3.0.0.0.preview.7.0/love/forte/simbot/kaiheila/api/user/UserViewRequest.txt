Compiled from "UserViewRequest.kt"
public final class love.forte.simbot.kaiheila.api.user.UserViewRequest extends love.forte.simbot.kaiheila.api.KaiheilaGetRequest<love.forte.simbot.kaiheila.objects.User> {
  public static final love.forte.simbot.kaiheila.api.user.UserViewRequest$Key Key;

  private final love.forte.simbot.ID userId;

  private final love.forte.simbot.ID guildId;

  public love.forte.simbot.kaiheila.api.user.UserViewRequest(love.forte.simbot.ID, love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #11                 // String userId
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #18                 // String guildId
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #21                 // Method love/forte/simbot/kaiheila/api/KaiheilaGetRequest."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #24                 // Field userId:Llove/forte/simbot/ID;
      21: aload_0
      22: aload_2
      23: putfield      #26                 // Field guildId:Llove/forte/simbot/ID;
      26: return

  public kotlinx.serialization.DeserializationStrategy<? extends love.forte.simbot.kaiheila.objects.User> getResultDeserializer();
    Code:
       0: getstatic     #37                 // Field love/forte/simbot/kaiheila/objects/UserImpl.Companion:Llove/forte/simbot/kaiheila/objects/UserImpl$Companion;
       3: invokevirtual #43                 // Method love/forte/simbot/kaiheila/objects/UserImpl$Companion.serializer:()Lkotlinx/serialization/KSerializer;
       6: checkcast     #45                 // class kotlinx/serialization/DeserializationStrategy
       9: areturn

  protected java.util.List<java.lang.String> getApiPaths();
    Code:
       0: getstatic     #52                 // Field Key:Llove/forte/simbot/kaiheila/api/user/UserViewRequest$Key;
       3: invokevirtual #57                 // Method love/forte/simbot/kaiheila/api/user/UserViewRequest$Key.getApiPathList:()Ljava/util/List;
       6: areturn

  protected void buildParameters(io.ktor.http.ParametersBuilder);
    Code:
       0: aload_1
       1: ldc           #62                 // String <this>
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #64                 // String user_id
       9: aload_0
      10: getfield      #24                 // Field userId:Llove/forte/simbot/ID;
      13: astore_2
      14: iconst_0
      15: istore_3
      16: aload_2
      17: invokevirtual #70                 // Method love/forte/simbot/ID.toString:()Ljava/lang/String;
      20: invokeinterface #76,  3           // InterfaceMethod io/ktor/http/ParametersBuilder.append:(Ljava/lang/String;Ljava/lang/String;)V
      25: aload_1
      26: ldc           #78                 // String guild_id
      28: aload_0
      29: getfield      #26                 // Field guildId:Llove/forte/simbot/ID;
      32: astore_2
      33: iconst_0
      34: istore_3
      35: aload_2
      36: invokevirtual #70                 // Method love/forte/simbot/ID.toString:()Ljava/lang/String;
      39: invokeinterface #76,  3           // InterfaceMethod io/ktor/http/ParametersBuilder.append:(Ljava/lang/String;Ljava/lang/String;)V
      44: return

  static {};
    Code:
       0: new           #54                 // class love/forte/simbot/kaiheila/api/user/UserViewRequest$Key
       3: dup
       4: aconst_null
       5: invokespecial #86                 // Method love/forte/simbot/kaiheila/api/user/UserViewRequest$Key."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #52                 // Field Key:Llove/forte/simbot/kaiheila/api/user/UserViewRequest$Key;
      11: return
}
