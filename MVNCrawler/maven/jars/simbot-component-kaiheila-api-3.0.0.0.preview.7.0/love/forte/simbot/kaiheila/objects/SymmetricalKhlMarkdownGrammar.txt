Compiled from "KMarkdown.kt"
public abstract class love.forte.simbot.kaiheila.objects.SymmetricalKhlMarkdownGrammar extends love.forte.simbot.kaiheila.objects.BaseKhlMarkdownGrammar<java.lang.CharSequence> {
  private final java.lang.CharSequence wing;

  public love.forte.simbot.kaiheila.objects.SymmetricalKhlMarkdownGrammar(java.lang.CharSequence, love.forte.simbot.kaiheila.objects.KhlMarkdownGrammar$Source);
    Code:
       0: aload_1
       1: ldc           #11                 // String wing
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #18                 // String grammarSource
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: invokespecial #21                 // Method love/forte/simbot/kaiheila/objects/BaseKhlMarkdownGrammar."<init>":(Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Source;)V
      17: aload_0
      18: aload_1
      19: putfield      #24                 // Field wing:Ljava/lang/CharSequence;
      22: return

  public void appendTo(java.lang.CharSequence, java.lang.Appendable);
    Code:
       0: aload_1
       1: ldc           #32                 // String param
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #33                 // String appendable
       9: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: aload_0
      14: getfield      #24                 // Field wing:Ljava/lang/CharSequence;
      17: invokeinterface #39,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      22: aload_1
      23: invokeinterface #39,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      28: aload_0
      29: getfield      #24                 // Field wing:Ljava/lang/CharSequence;
      32: invokeinterface #39,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      37: pop
      38: return

  public void appendTo(java.lang.Object, java.lang.Appendable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #43                 // class java/lang/CharSequence
       5: aload_2
       6: invokevirtual #45                 // Method appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
       9: return
}
