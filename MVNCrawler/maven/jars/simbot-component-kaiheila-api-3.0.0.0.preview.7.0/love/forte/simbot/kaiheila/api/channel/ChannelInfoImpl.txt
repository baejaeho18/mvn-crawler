Compiled from "ChannelListRequest.kt"
public final class love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl implements love.forte.simbot.kaiheila.api.channel.ChannelInfo {
  public static final love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final java.lang.String name;

  private final boolean isCategory;

  private final love.forte.simbot.CharSequenceID userId;

  private final love.forte.simbot.CharSequenceID parentId;

  private final int level;

  private final int type;

  private final int maximumMember;

  private final java.lang.String topic;

  private final int slowMode;

  private final java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl> permissionOverwrites;

  private final int permissionSync;

  public love.forte.simbot.ID guildIdLate;

  public love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl(love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, int, int, int, java.lang.String, int, java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl>, int);
    Code:
       0: aload_1
       1: ldc           #24                 // String id
       3: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #31                 // String name
       9: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #32                 // String userId
      16: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload         5
      21: ldc           #33                 // String parentId
      23: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload         9
      28: ldc           #34                 // String topic
      30: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload         11
      35: ldc           #35                 // String permissionOverwrites
      37: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      40: aload_0
      41: invokespecial #38                 // Method java/lang/Object."<init>":()V
      44: aload_0
      45: aload_1
      46: putfield      #41                 // Field id:Llove/forte/simbot/CharSequenceID;
      49: aload_0
      50: aload_2
      51: putfield      #44                 // Field name:Ljava/lang/String;
      54: aload_0
      55: iload_3
      56: putfield      #47                 // Field isCategory:Z
      59: aload_0
      60: aload         4
      62: putfield      #49                 // Field userId:Llove/forte/simbot/CharSequenceID;
      65: aload_0
      66: aload         5
      68: putfield      #51                 // Field parentId:Llove/forte/simbot/CharSequenceID;
      71: aload_0
      72: iload         6
      74: putfield      #54                 // Field level:I
      77: aload_0
      78: iload         7
      80: putfield      #56                 // Field type:I
      83: aload_0
      84: iload         8
      86: putfield      #58                 // Field maximumMember:I
      89: aload_0
      90: aload         9
      92: putfield      #60                 // Field topic:Ljava/lang/String;
      95: aload_0
      96: iload         10
      98: putfield      #62                 // Field slowMode:I
     101: aload_0
     102: aload         11
     104: putfield      #65                 // Field permissionOverwrites:Ljava/util/List;
     107: aload_0
     108: iload         12
     110: putfield      #67                 // Field permissionSync:I
     113: return

  public love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl(love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, int, int, int, java.lang.String, int, java.util.List, int, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         13
       2: sipush        256
       5: iand
       6: ifeq          13
       9: ldc           #72                 // String
      11: astore        9
      13: iload         13
      15: sipush        512
      18: iand
      19: ifeq          25
      22: iconst_0
      23: istore        10
      25: iload         13
      27: sipush        1024
      30: iand
      31: ifeq          39
      34: invokestatic  #78                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      37: astore        11
      39: iload         13
      41: sipush        2048
      44: iand
      45: ifeq          51
      48: iconst_0
      49: istore        12
      51: aload_0
      52: aload_1
      53: aload_2
      54: iload_3
      55: aload         4
      57: aload         5
      59: iload         6
      61: iload         7
      63: iload         8
      65: aload         9
      67: iload         10
      69: aload         11
      71: iload         12
      73: invokespecial #80                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;IIILjava/lang/String;ILjava/util/List;I)V
      76: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #41                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #44                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean isCategory();
    Code:
       0: aload_0
       1: getfield      #47                 // Field isCategory:Z
       4: ireturn

  public static void isCategory$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getUserId();
    Code:
       0: aload_0
       1: getfield      #49                 // Field userId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getUserId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getParentId();
    Code:
       0: aload_0
       1: getfield      #51                 // Field parentId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getParentId$annotations();
    Code:
       0: return

  public int getLevel();
    Code:
       0: aload_0
       1: getfield      #54                 // Field level:I
       4: ireturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #56                 // Field type:I
       4: ireturn

  public int getMaximumMember();
    Code:
       0: aload_0
       1: getfield      #58                 // Field maximumMember:I
       4: ireturn

  public static void getMaximumMember$annotations();
    Code:
       0: return

  public java.lang.String getTopic();
    Code:
       0: aload_0
       1: getfield      #60                 // Field topic:Ljava/lang/String;
       4: areturn

  public int getSlowMode();
    Code:
       0: aload_0
       1: getfield      #62                 // Field slowMode:I
       4: ireturn

  public static void getSlowMode$annotations();
    Code:
       0: return

  public java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl> getPermissionOverwrites();
    Code:
       0: aload_0
       1: getfield      #65                 // Field permissionOverwrites:Ljava/util/List;
       4: areturn

  public static void getPermissionOverwrites$annotations();
    Code:
       0: return

  public int getPermissionSync();
    Code:
       0: aload_0
       1: getfield      #67                 // Field permissionSync:I
       4: ireturn

  public static void getPermissionSync$annotations();
    Code:
       0: return

  public java.util.List<love.forte.simbot.CharSequenceID> getPermissionUsers();
    Code:
       0: invokestatic  #78                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
       3: areturn

  public final love.forte.simbot.ID getGuildIdLate$simbot_component_kaiheila_api();
    Code:
       0: aload_0
       1: getfield      #120                // Field guildIdLate:Llove/forte/simbot/ID;
       4: astore_1
       5: aload_1
       6: ifnull        11
       9: aload_1
      10: areturn
      11: ldc           #121                // String guildIdLate
      13: invokestatic  #125                // Method kotlin/jvm/internal/Intrinsics.throwUninitializedPropertyAccessException:(Ljava/lang/String;)V
      16: aconst_null
      17: areturn

  public final void setGuildIdLate$simbot_component_kaiheila_api(love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #131                // String <set-?>
       3: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #120                // Field guildIdLate:Llove/forte/simbot/ID;
      11: return

  public static void getGuildIdLate$simbot_component_kaiheila_api$annotations();
    Code:
       0: return

  public love.forte.simbot.ID getGuildId();
    Code:
       0: aload_0
       1: invokevirtual #136                // Method getGuildIdLate$simbot_component_kaiheila_api:()Llove/forte/simbot/ID;
       4: areturn

  public int getCurrentMember();
    Code:
       0: iconst_m1
       1: ireturn

  public java.lang.String getIcon();
    Code:
       0: ldc           #72                 // String
       2: areturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component2();
    Code:
       0: aload_0
       1: invokevirtual #144                // Method getName:()Ljava/lang/String;
       4: areturn

  public final boolean component3();
    Code:
       0: aload_0
       1: invokevirtual #147                // Method isCategory:()Z
       4: ireturn

  public final love.forte.simbot.CharSequenceID component4();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component5();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final int component6();
    Code:
       0: aload_0
       1: invokevirtual #156                // Method getLevel:()I
       4: ireturn

  public final int component7();
    Code:
       0: aload_0
       1: invokevirtual #159                // Method getType:()I
       4: ireturn

  public final int component8();
    Code:
       0: aload_0
       1: invokevirtual #162                // Method getMaximumMember:()I
       4: ireturn

  public final java.lang.String component9();
    Code:
       0: aload_0
       1: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
       4: areturn

  public final int component10();
    Code:
       0: aload_0
       1: invokevirtual #168                // Method getSlowMode:()I
       4: ireturn

  public final java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl> component11();
    Code:
       0: aload_0
       1: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
       4: areturn

  public final int component12();
    Code:
       0: aload_0
       1: invokevirtual #174                // Method getPermissionSync:()I
       4: ireturn

  public final love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl copy(love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, int, int, int, java.lang.String, int, java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl>, int);
    Code:
       0: aload_1
       1: ldc           #24                 // String id
       3: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #31                 // String name
       9: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #32                 // String userId
      16: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload         5
      21: ldc           #33                 // String parentId
      23: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload         9
      28: ldc           #34                 // String topic
      30: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload         11
      35: ldc           #35                 // String permissionOverwrites
      37: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      40: new           #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl
      43: dup
      44: aload_1
      45: aload_2
      46: iload_3
      47: aload         4
      49: aload         5
      51: iload         6
      53: iload         7
      55: iload         8
      57: aload         9
      59: iload         10
      61: aload         11
      63: iload         12
      65: invokespecial #80                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;IIILjava/lang/String;ILjava/util/List;I)V
      68: areturn

  public static love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl copy$default(love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl, love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, int, int, int, java.lang.String, int, java.util.List, int, int, java.lang.Object);
    Code:
       0: iload         13
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         13
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #144                // Method getName:()Ljava/lang/String;
      23: astore_2
      24: iload         13
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #147                // Method isCategory:()Z
      35: istore_3
      36: iload         13
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      48: astore        4
      50: iload         13
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      62: astore        5
      64: iload         13
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #156                // Method getLevel:()I
      76: istore        6
      78: iload         13
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #159                // Method getType:()I
      90: istore        7
      92: iload         13
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: invokevirtual #162                // Method getMaximumMember:()I
     105: istore        8
     107: iload         13
     109: sipush        256
     112: iand
     113: ifeq          122
     116: aload_0
     117: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
     120: astore        9
     122: iload         13
     124: sipush        512
     127: iand
     128: ifeq          137
     131: aload_0
     132: invokevirtual #168                // Method getSlowMode:()I
     135: istore        10
     137: iload         13
     139: sipush        1024
     142: iand
     143: ifeq          152
     146: aload_0
     147: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
     150: astore        11
     152: iload         13
     154: sipush        2048
     157: iand
     158: ifeq          167
     161: aload_0
     162: invokevirtual #174                // Method getPermissionSync:()I
     165: istore        12
     167: aload_0
     168: aload_1
     169: aload_2
     170: iload_3
     171: aload         4
     173: aload         5
     175: iload         6
     177: iload         7
     179: iload         8
     181: aload         9
     183: iload         10
     185: aload         11
     187: iload         12
     189: invokevirtual #181                // Method copy:(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;IIILjava/lang/String;ILjava/util/List;I)Llove/forte/simbot/kaiheila/api/channel/ChannelInfoImpl;
     192: areturn

  public java.lang.String toString();
    Code:
       0: new           #184                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #185                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #187                // String ChannelInfoImpl(id=
      11: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
      18: invokevirtual #194                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #196                // String , name=
      23: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #144                // Method getName:()Ljava/lang/String;
      30: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #198                // String , isCategory=
      35: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #147                // Method isCategory:()Z
      42: invokevirtual #201                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      45: ldc           #203                // String , userId=
      47: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      54: invokevirtual #194                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #205                // String , parentId=
      59: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      66: invokevirtual #194                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #207                // String , level=
      71: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #156                // Method getLevel:()I
      78: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: ldc           #212                // String , type=
      83: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #159                // Method getType:()I
      90: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: ldc           #214                // String , maximumMember=
      95: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: invokevirtual #162                // Method getMaximumMember:()I
     102: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: ldc           #216                // String , topic=
     107: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
     114: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #218                // String , slowMode=
     119: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: invokevirtual #168                // Method getSlowMode:()I
     126: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #220                // String , permissionOverwrites=
     131: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
     138: invokevirtual #194                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     141: ldc           #222                // String , permissionSync=
     143: invokevirtual #191                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_1
     148: aload_0
     149: invokevirtual #174                // Method getPermissionSync:()I
     152: invokevirtual #210                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     155: bipush        41
     157: invokevirtual #225                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     160: pop
     161: aload_1
     162: invokevirtual #227                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #232                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #144                // Method getName:()Ljava/lang/String;
      16: invokevirtual #235                // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #147                // Method isCategory:()Z
      29: dup
      30: ifeq          35
      33: pop
      34: iconst_1
      35: iadd
      36: istore_1
      37: iload_1
      38: bipush        31
      40: imul
      41: aload_0
      42: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      45: invokevirtual #232                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      48: iadd
      49: istore_1
      50: iload_1
      51: bipush        31
      53: imul
      54: aload_0
      55: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      58: invokevirtual #232                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      61: iadd
      62: istore_1
      63: iload_1
      64: bipush        31
      66: imul
      67: aload_0
      68: invokevirtual #156                // Method getLevel:()I
      71: invokestatic  #240                // Method java/lang/Integer.hashCode:(I)I
      74: iadd
      75: istore_1
      76: iload_1
      77: bipush        31
      79: imul
      80: aload_0
      81: invokevirtual #159                // Method getType:()I
      84: invokestatic  #240                // Method java/lang/Integer.hashCode:(I)I
      87: iadd
      88: istore_1
      89: iload_1
      90: bipush        31
      92: imul
      93: aload_0
      94: invokevirtual #162                // Method getMaximumMember:()I
      97: invokestatic  #240                // Method java/lang/Integer.hashCode:(I)I
     100: iadd
     101: istore_1
     102: iload_1
     103: bipush        31
     105: imul
     106: aload_0
     107: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
     110: invokevirtual #235                // Method java/lang/String.hashCode:()I
     113: iadd
     114: istore_1
     115: iload_1
     116: bipush        31
     118: imul
     119: aload_0
     120: invokevirtual #168                // Method getSlowMode:()I
     123: invokestatic  #240                // Method java/lang/Integer.hashCode:(I)I
     126: iadd
     127: istore_1
     128: iload_1
     129: bipush        31
     131: imul
     132: aload_0
     133: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
     136: invokevirtual #241                // Method java/lang/Object.hashCode:()I
     139: iadd
     140: istore_1
     141: iload_1
     142: bipush        31
     144: imul
     145: aload_0
     146: invokevirtual #174                // Method getPermissionSync:()I
     149: invokestatic  #240                // Method java/lang/Integer.hashCode:(I)I
     152: iadd
     153: istore_1
     154: iload_1
     155: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #144                // Method getName:()Ljava/lang/String;
      41: aload_2
      42: invokevirtual #144                // Method getName:()Ljava/lang/String;
      45: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #147                // Method isCategory:()Z
      57: aload_2
      58: invokevirtual #147                // Method isCategory:()Z
      61: if_icmpeq     66
      64: iconst_0
      65: ireturn
      66: aload_0
      67: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      70: aload_2
      71: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      74: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      86: aload_2
      87: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      90: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifne          98
      96: iconst_0
      97: ireturn
      98: aload_0
      99: invokevirtual #156                // Method getLevel:()I
     102: aload_2
     103: invokevirtual #156                // Method getLevel:()I
     106: if_icmpeq     111
     109: iconst_0
     110: ireturn
     111: aload_0
     112: invokevirtual #159                // Method getType:()I
     115: aload_2
     116: invokevirtual #159                // Method getType:()I
     119: if_icmpeq     124
     122: iconst_0
     123: ireturn
     124: aload_0
     125: invokevirtual #162                // Method getMaximumMember:()I
     128: aload_2
     129: invokevirtual #162                // Method getMaximumMember:()I
     132: if_icmpeq     137
     135: iconst_0
     136: ireturn
     137: aload_0
     138: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
     141: aload_2
     142: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
     145: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     148: ifne          153
     151: iconst_0
     152: ireturn
     153: aload_0
     154: invokevirtual #168                // Method getSlowMode:()I
     157: aload_2
     158: invokevirtual #168                // Method getSlowMode:()I
     161: if_icmpeq     166
     164: iconst_0
     165: ireturn
     166: aload_0
     167: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
     170: aload_2
     171: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
     174: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     177: ifne          182
     180: iconst_0
     181: ireturn
     182: aload_0
     183: invokevirtual #174                // Method getPermissionSync:()I
     186: aload_2
     187: invokevirtual #174                // Method getPermissionSync:()I
     190: if_icmpeq     195
     193: iconst_0
     194: ireturn
     195: iconst_1
     196: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc_w         #258                // String self
       4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: ldc_w         #259                // String output
      11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_2
      15: ldc_w         #260                // String serialDesc
      18: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_1
      22: aload_2
      23: iconst_0
      24: getstatic     #266                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      27: checkcast     #268                // class kotlinx/serialization/SerializationStrategy
      30: aload_0
      31: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
      34: invokeinterface #274,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      39: aload_1
      40: aload_2
      41: iconst_1
      42: aload_0
      43: invokevirtual #144                // Method getName:()Ljava/lang/String;
      46: invokeinterface #278,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      51: aload_1
      52: aload_2
      53: iconst_2
      54: aload_0
      55: invokevirtual #147                // Method isCategory:()Z
      58: invokeinterface #282,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
      63: aload_1
      64: aload_2
      65: iconst_3
      66: getstatic     #266                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      69: checkcast     #268                // class kotlinx/serialization/SerializationStrategy
      72: aload_0
      73: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      76: invokeinterface #274,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      81: aload_1
      82: aload_2
      83: iconst_4
      84: getstatic     #266                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      87: checkcast     #268                // class kotlinx/serialization/SerializationStrategy
      90: aload_0
      91: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      94: invokeinterface #274,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      99: aload_1
     100: aload_2
     101: iconst_5
     102: aload_0
     103: invokevirtual #156                // Method getLevel:()I
     106: invokeinterface #286,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     111: aload_1
     112: aload_2
     113: bipush        6
     115: aload_0
     116: invokevirtual #159                // Method getType:()I
     119: invokeinterface #286,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     124: aload_1
     125: aload_2
     126: bipush        7
     128: aload_0
     129: invokevirtual #162                // Method getMaximumMember:()I
     132: invokeinterface #286,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     137: aload_1
     138: aload_2
     139: bipush        8
     141: invokeinterface #290,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     146: ifeq          153
     149: iconst_1
     150: goto          170
     153: aload_0
     154: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
     157: ldc           #72                 // String
     159: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     162: ifne          169
     165: iconst_1
     166: goto          170
     169: iconst_0
     170: ifeq          186
     173: aload_1
     174: aload_2
     175: bipush        8
     177: aload_0
     178: invokevirtual #165                // Method getTopic:()Ljava/lang/String;
     181: invokeinterface #278,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     186: aload_1
     187: aload_2
     188: bipush        9
     190: invokeinterface #290,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     195: ifeq          202
     198: iconst_1
     199: goto          214
     202: aload_0
     203: invokevirtual #168                // Method getSlowMode:()I
     206: ifeq          213
     209: iconst_1
     210: goto          214
     213: iconst_0
     214: ifeq          230
     217: aload_1
     218: aload_2
     219: bipush        9
     221: aload_0
     222: invokevirtual #168                // Method getSlowMode:()I
     225: invokeinterface #286,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     230: aload_1
     231: aload_2
     232: bipush        10
     234: invokeinterface #290,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     239: ifeq          246
     242: iconst_1
     243: goto          264
     246: aload_0
     247: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
     250: invokestatic  #78                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     253: invokestatic  #250                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     256: ifne          263
     259: iconst_1
     260: goto          264
     263: iconst_0
     264: ifeq          296
     267: aload_1
     268: aload_2
     269: bipush        10
     271: new           #292                // class kotlinx/serialization/internal/ArrayListSerializer
     274: dup
     275: getstatic     #297                // Field love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$$serializer;
     278: checkcast     #299                // class kotlinx/serialization/KSerializer
     281: invokespecial #302                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     284: checkcast     #268                // class kotlinx/serialization/SerializationStrategy
     287: aload_0
     288: invokevirtual #171                // Method getPermissionOverwrites:()Ljava/util/List;
     291: invokeinterface #274,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     296: aload_1
     297: aload_2
     298: bipush        11
     300: invokeinterface #290,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     305: ifeq          312
     308: iconst_1
     309: goto          324
     312: aload_0
     313: invokevirtual #174                // Method getPermissionSync:()I
     316: ifeq          323
     319: iconst_1
     320: goto          324
     323: iconst_0
     324: ifeq          340
     327: aload_1
     328: aload_2
     329: bipush        11
     331: aload_0
     332: invokevirtual #174                // Method getPermissionSync:()I
     335: invokeinterface #286,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     340: return

  public love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl(int, love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, int, int, int, java.lang.String, int, java.util.List, int, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: sipush        255
       3: sipush        255
       6: iload_1
       7: iand
       8: if_icmpeq     24
      11: iload_1
      12: sipush        255
      15: getstatic     #319                // Field love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$$serializer;
      18: invokevirtual #323                // Method love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      21: invokestatic  #329                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      24: aload_0
      25: invokespecial #38                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_2
      30: putfield      #41                 // Field id:Llove/forte/simbot/CharSequenceID;
      33: aload_0
      34: aload_3
      35: putfield      #44                 // Field name:Ljava/lang/String;
      38: aload_0
      39: iload         4
      41: putfield      #47                 // Field isCategory:Z
      44: aload_0
      45: aload         5
      47: putfield      #49                 // Field userId:Llove/forte/simbot/CharSequenceID;
      50: aload_0
      51: aload         6
      53: putfield      #51                 // Field parentId:Llove/forte/simbot/CharSequenceID;
      56: aload_0
      57: iload         7
      59: putfield      #54                 // Field level:I
      62: aload_0
      63: iload         8
      65: putfield      #56                 // Field type:I
      68: aload_0
      69: iload         9
      71: putfield      #58                 // Field maximumMember:I
      74: iload_1
      75: sipush        256
      78: iand
      79: ifne          91
      82: aload_0
      83: ldc           #72                 // String
      85: putfield      #60                 // Field topic:Ljava/lang/String;
      88: goto          97
      91: aload_0
      92: aload         10
      94: putfield      #60                 // Field topic:Ljava/lang/String;
      97: iload_1
      98: sipush        512
     101: iand
     102: ifne          113
     105: aload_0
     106: iconst_0
     107: putfield      #62                 // Field slowMode:I
     110: goto          119
     113: aload_0
     114: iload         11
     116: putfield      #62                 // Field slowMode:I
     119: iload_1
     120: sipush        1024
     123: iand
     124: ifne          137
     127: aload_0
     128: invokestatic  #78                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     131: putfield      #65                 // Field permissionOverwrites:Ljava/util/List;
     134: goto          143
     137: aload_0
     138: aload         12
     140: putfield      #65                 // Field permissionOverwrites:Ljava/util/List;
     143: iload_1
     144: sipush        2048
     147: iand
     148: ifne          159
     151: aload_0
     152: iconst_0
     153: putfield      #67                 // Field permissionSync:I
     156: goto          165
     159: aload_0
     160: iload         13
     162: putfield      #67                 // Field permissionSync:I
     165: return

  public love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: invokevirtual #141                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #127                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getUserId();
    Code:
       0: aload_0
       1: invokevirtual #150                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #127                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getParentId();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #127                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #339                // class love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #342                // Method love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #346                // Field Companion:Llove/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$Companion;
      11: return
}
