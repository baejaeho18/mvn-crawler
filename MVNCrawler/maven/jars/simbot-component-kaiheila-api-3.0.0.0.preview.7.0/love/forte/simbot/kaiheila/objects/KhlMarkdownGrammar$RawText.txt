Compiled from "KMarkdown.kt"
public final class love.forte.simbot.kaiheila.objects.KhlMarkdownGrammar$RawText extends love.forte.simbot.kaiheila.objects.BaseMarkdownKhlMarkdownGrammar<java.lang.CharSequence> {
  public static final love.forte.simbot.kaiheila.objects.KhlMarkdownGrammar$RawText INSTANCE;

  private love.forte.simbot.kaiheila.objects.KhlMarkdownGrammar$RawText();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method love/forte/simbot/kaiheila/objects/BaseMarkdownKhlMarkdownGrammar."<init>":()V
       4: return

  public void appendTo(java.lang.CharSequence, java.lang.Appendable);
    Code:
       0: aload_1
       1: ldc           #17                 // String param
       3: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #24                 // String appendable
       9: invokestatic  #23                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: aload_1
      14: invokeinterface #30,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      19: pop
      20: return

  public void appendTo(java.lang.Object, java.lang.Appendable);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #35                 // class java/lang/CharSequence
       5: aload_2
       6: invokevirtual #37                 // Method appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
       9: return

  static {};
    Code:
       0: new           #2                  // class love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$RawText
       3: dup
       4: invokespecial #40                 // Method "<init>":()V
       7: putstatic     #43                 // Field INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$RawText;
      10: return
}
