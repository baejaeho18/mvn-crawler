Compiled from "KMarkdown.kt"
public final class love.forte.simbot.kaiheila.objects.MdServerEmoticons {
  private final java.lang.CharSequence name;

  private final love.forte.simbot.ID id;

  public love.forte.simbot.kaiheila.objects.MdServerEmoticons(java.lang.CharSequence, love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #10                 // String name
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #17                 // String id
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #20                 // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #23                 // Field name:Ljava/lang/CharSequence;
      21: aload_0
      22: aload_2
      23: putfield      #26                 // Field id:Llove/forte/simbot/ID;
      26: return

  public final java.lang.CharSequence getName();
    Code:
       0: aload_0
       1: getfield      #23                 // Field name:Ljava/lang/CharSequence;
       4: areturn

  public final love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: getfield      #26                 // Field id:Llove/forte/simbot/ID;
       4: areturn

  public final java.lang.CharSequence component1();
    Code:
       0: aload_0
       1: getfield      #23                 // Field name:Ljava/lang/CharSequence;
       4: areturn

  public final love.forte.simbot.ID component2();
    Code:
       0: aload_0
       1: getfield      #26                 // Field id:Llove/forte/simbot/ID;
       4: areturn

  public final love.forte.simbot.kaiheila.objects.MdServerEmoticons copy(java.lang.CharSequence, love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #10                 // String name
       3: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #17                 // String id
       9: invokestatic  #16                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #2                  // class love/forte/simbot/kaiheila/objects/MdServerEmoticons
      15: dup
      16: aload_1
      17: aload_2
      18: invokespecial #38                 // Method "<init>":(Ljava/lang/CharSequence;Llove/forte/simbot/ID;)V
      21: areturn

  public static love.forte.simbot.kaiheila.objects.MdServerEmoticons copy$default(love.forte.simbot.kaiheila.objects.MdServerEmoticons, java.lang.CharSequence, love.forte.simbot.ID, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          11
       6: aload_0
       7: getfield      #23                 // Field name:Ljava/lang/CharSequence;
      10: astore_1
      11: iload_3
      12: iconst_2
      13: iand
      14: ifeq          22
      17: aload_0
      18: getfield      #26                 // Field id:Llove/forte/simbot/ID;
      21: astore_2
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokevirtual #42                 // Method copy:(Ljava/lang/CharSequence;Llove/forte/simbot/ID;)Llove/forte/simbot/kaiheila/objects/MdServerEmoticons;
      28: areturn

  public java.lang.String toString();
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #49                 // String MdServerEmoticons(name=
       9: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #23                 // Field name:Ljava/lang/CharSequence;
      16: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #58                 // String , id=
      21: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #26                 // Field id:Llove/forte/simbot/ID;
      28: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        41
      33: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field name:Ljava/lang/CharSequence;
       4: invokevirtual #67                 // Method java/lang/Object.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: getfield      #26                 // Field id:Llove/forte/simbot/ID;
      16: invokevirtual #70                 // Method love/forte/simbot/ID.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/objects/MdServerEmoticons
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/MdServerEmoticons
      20: astore_2
      21: aload_0
      22: getfield      #23                 // Field name:Ljava/lang/CharSequence;
      25: aload_2
      26: getfield      #23                 // Field name:Ljava/lang/CharSequence;
      29: invokestatic  #80                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #26                 // Field id:Llove/forte/simbot/ID;
      41: aload_2
      42: getfield      #26                 // Field id:Llove/forte/simbot/ID;
      45: invokestatic  #80                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: iconst_1
      54: ireturn
}
