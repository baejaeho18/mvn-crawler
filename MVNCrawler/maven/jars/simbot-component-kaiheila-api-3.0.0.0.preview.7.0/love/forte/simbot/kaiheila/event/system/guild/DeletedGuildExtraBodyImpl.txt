Compiled from "DeletedGuild.kt"
public final class love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl implements love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBody {
  public static final love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final java.lang.String name;

  private final love.forte.simbot.CharSequenceID userId;

  private final java.lang.String icon;

  private final int notifyType;

  private final java.lang.String region;

  private final boolean enableOpen;

  private final love.forte.simbot.CharSequenceID openId;

  private final love.forte.simbot.CharSequenceID defaultChannelId;

  private final love.forte.simbot.CharSequenceID welcomeChannelId;

  public love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl(love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID);
    Code:
       0: aload_1
       1: ldc           #20                 // String id
       3: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #27                 // String name
       9: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #28                 // String userId
      15: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #29                 // String icon
      22: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         6
      27: ldc           #30                 // String region
      29: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         8
      34: ldc           #31                 // String openId
      36: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         9
      41: ldc           #32                 // String defaultChannelId
      43: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         10
      48: ldc           #33                 // String welcomeChannelId
      50: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload_0
      54: invokespecial #36                 // Method java/lang/Object."<init>":()V
      57: aload_0
      58: aload_1
      59: putfield      #39                 // Field id:Llove/forte/simbot/CharSequenceID;
      62: aload_0
      63: aload_2
      64: putfield      #42                 // Field name:Ljava/lang/String;
      67: aload_0
      68: aload_3
      69: putfield      #44                 // Field userId:Llove/forte/simbot/CharSequenceID;
      72: aload_0
      73: aload         4
      75: putfield      #46                 // Field icon:Ljava/lang/String;
      78: aload_0
      79: iload         5
      81: putfield      #49                 // Field notifyType:I
      84: aload_0
      85: aload         6
      87: putfield      #51                 // Field region:Ljava/lang/String;
      90: aload_0
      91: iload         7
      93: putfield      #54                 // Field enableOpen:Z
      96: aload_0
      97: aload         8
      99: putfield      #56                 // Field openId:Llove/forte/simbot/CharSequenceID;
     102: aload_0
     103: aload         9
     105: putfield      #58                 // Field defaultChannelId:Llove/forte/simbot/CharSequenceID;
     108: aload_0
     109: aload         10
     111: putfield      #60                 // Field welcomeChannelId:Llove/forte/simbot/CharSequenceID;
     114: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #39                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #42                 // Field name:Ljava/lang/String;
       4: areturn

  public love.forte.simbot.CharSequenceID getUserId();
    Code:
       0: aload_0
       1: getfield      #44                 // Field userId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getUserId$annotations();
    Code:
       0: return

  public java.lang.String getIcon();
    Code:
       0: aload_0
       1: getfield      #46                 // Field icon:Ljava/lang/String;
       4: areturn

  public int getNotifyType();
    Code:
       0: aload_0
       1: getfield      #49                 // Field notifyType:I
       4: ireturn

  public static void getNotifyType$annotations();
    Code:
       0: return

  public java.lang.String getRegion();
    Code:
       0: aload_0
       1: getfield      #51                 // Field region:Ljava/lang/String;
       4: areturn

  public boolean getEnableOpen();
    Code:
       0: aload_0
       1: getfield      #54                 // Field enableOpen:Z
       4: ireturn

  public static void getEnableOpen$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getOpenId();
    Code:
       0: aload_0
       1: getfield      #56                 // Field openId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getOpenId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getDefaultChannelId();
    Code:
       0: aload_0
       1: getfield      #58                 // Field defaultChannelId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getDefaultChannelId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getWelcomeChannelId();
    Code:
       0: aload_0
       1: getfield      #60                 // Field welcomeChannelId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getWelcomeChannelId$annotations();
    Code:
       0: return

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component2();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method getName:()Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.CharSequenceID component3();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component4();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getIcon:()Ljava/lang/String;
       4: areturn

  public final int component5();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method getNotifyType:()I
       4: ireturn

  public final java.lang.String component6();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getRegion:()Ljava/lang/String;
       4: areturn

  public final boolean component7();
    Code:
       0: aload_0
       1: invokevirtual #114                // Method getEnableOpen:()Z
       4: ireturn

  public final love.forte.simbot.CharSequenceID component8();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component9();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component10();
    Code:
       0: aload_0
       1: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl copy(love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID);
    Code:
       0: aload_1
       1: ldc           #20                 // String id
       3: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #27                 // String name
       9: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #28                 // String userId
      15: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #29                 // String icon
      22: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         6
      27: ldc           #30                 // String region
      29: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         8
      34: ldc           #31                 // String openId
      36: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         9
      41: ldc           #32                 // String defaultChannelId
      43: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         10
      48: ldc           #33                 // String welcomeChannelId
      50: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: new           #2                  // class love/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl
      56: dup
      57: aload_1
      58: aload_2
      59: aload_3
      60: aload         4
      62: iload         5
      64: aload         6
      66: iload         7
      68: aload         8
      70: aload         9
      72: aload         10
      74: invokespecial #127                // Method "<init>":(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ILjava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;)V
      77: areturn

  public static love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl copy$default(love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, int, java.lang.Object);
    Code:
       0: iload         11
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         11
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #99                 // Method getName:()Ljava/lang/String;
      23: astore_2
      24: iload         11
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      35: astore_3
      36: iload         11
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #105                // Method getIcon:()Ljava/lang/String;
      48: astore        4
      50: iload         11
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #108                // Method getNotifyType:()I
      62: istore        5
      64: iload         11
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #111                // Method getRegion:()Ljava/lang/String;
      76: astore        6
      78: iload         11
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #114                // Method getEnableOpen:()Z
      90: istore        7
      92: iload         11
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     105: astore        8
     107: iload         11
     109: sipush        256
     112: iand
     113: ifeq          122
     116: aload_0
     117: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     120: astore        9
     122: iload         11
     124: sipush        512
     127: iand
     128: ifeq          137
     131: aload_0
     132: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     135: astore        10
     137: aload_0
     138: aload_1
     139: aload_2
     140: aload_3
     141: aload         4
     143: iload         5
     145: aload         6
     147: iload         7
     149: aload         8
     151: aload         9
     153: aload         10
     155: invokevirtual #131                // Method copy:(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ILjava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;)Llove/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl;
     158: areturn

  public java.lang.String toString();
    Code:
       0: new           #134                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #135                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #137                // String DeletedGuildExtraBodyImpl(id=
       9: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #146                // String , name=
      21: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #99                 // Method getName:()Ljava/lang/String;
      28: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #148                // String , userId=
      33: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      40: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #150                // String , icon=
      45: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #105                // Method getIcon:()Ljava/lang/String;
      52: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #152                // String , notifyType=
      57: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #108                // Method getNotifyType:()I
      64: invokevirtual #155                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #157                // String , region=
      69: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #111                // Method getRegion:()Ljava/lang/String;
      76: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #159                // String , enableOpen=
      81: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #114                // Method getEnableOpen:()Z
      88: invokevirtual #162                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: ldc           #164                // String , openId=
      93: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     100: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #166                // String , defaultChannelId=
     105: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     112: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: ldc           #168                // String , welcomeChannelId=
     117: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     124: invokevirtual #144                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: bipush        41
     129: invokevirtual #171                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     132: invokevirtual #173                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #178                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #99                 // Method getName:()Ljava/lang/String;
      16: invokevirtual #181                // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      29: invokevirtual #178                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #105                // Method getIcon:()Ljava/lang/String;
      42: invokevirtual #181                // Method java/lang/String.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #108                // Method getNotifyType:()I
      55: invokestatic  #186                // Method java/lang/Integer.hashCode:(I)I
      58: iadd
      59: istore_1
      60: iload_1
      61: bipush        31
      63: imul
      64: aload_0
      65: invokevirtual #111                // Method getRegion:()Ljava/lang/String;
      68: invokevirtual #181                // Method java/lang/String.hashCode:()I
      71: iadd
      72: istore_1
      73: iload_1
      74: bipush        31
      76: imul
      77: aload_0
      78: invokevirtual #114                // Method getEnableOpen:()Z
      81: dup
      82: ifeq          87
      85: pop
      86: iconst_1
      87: iadd
      88: istore_1
      89: iload_1
      90: bipush        31
      92: imul
      93: aload_0
      94: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
      97: invokevirtual #178                // Method love/forte/simbot/CharSequenceID.hashCode:()I
     100: iadd
     101: istore_1
     102: iload_1
     103: bipush        31
     105: imul
     106: aload_0
     107: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     110: invokevirtual #178                // Method love/forte/simbot/CharSequenceID.hashCode:()I
     113: iadd
     114: istore_1
     115: iload_1
     116: bipush        31
     118: imul
     119: aload_0
     120: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     123: invokevirtual #178                // Method love/forte/simbot/CharSequenceID.hashCode:()I
     126: iadd
     127: istore_1
     128: iload_1
     129: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #99                 // Method getName:()Ljava/lang/String;
      41: aload_2
      42: invokevirtual #99                 // Method getName:()Ljava/lang/String;
      45: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      57: aload_2
      58: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      61: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #105                // Method getIcon:()Ljava/lang/String;
      73: aload_2
      74: invokevirtual #105                // Method getIcon:()Ljava/lang/String;
      77: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload_0
      86: invokevirtual #108                // Method getNotifyType:()I
      89: aload_2
      90: invokevirtual #108                // Method getNotifyType:()I
      93: if_icmpeq     98
      96: iconst_0
      97: ireturn
      98: aload_0
      99: invokevirtual #111                // Method getRegion:()Ljava/lang/String;
     102: aload_2
     103: invokevirtual #111                // Method getRegion:()Ljava/lang/String;
     106: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     109: ifne          114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokevirtual #114                // Method getEnableOpen:()Z
     118: aload_2
     119: invokevirtual #114                // Method getEnableOpen:()Z
     122: if_icmpeq     127
     125: iconst_0
     126: ireturn
     127: aload_0
     128: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     131: aload_2
     132: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     135: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     138: ifne          143
     141: iconst_0
     142: ireturn
     143: aload_0
     144: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     147: aload_2
     148: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     151: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     154: ifne          159
     157: iconst_0
     158: ireturn
     159: aload_0
     160: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     163: aload_2
     164: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     167: invokestatic  #195                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     170: ifne          175
     173: iconst_0
     174: ireturn
     175: iconst_1
     176: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #203                // String self
       3: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #204                // String output
       9: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #205                // String serialDesc
      15: invokestatic  #26                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #211                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #213                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #219,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: aload_0
      40: invokevirtual #99                 // Method getName:()Ljava/lang/String;
      43: invokeinterface #223,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      48: aload_1
      49: aload_2
      50: iconst_2
      51: getstatic     #211                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      54: checkcast     #213                // class kotlinx/serialization/SerializationStrategy
      57: aload_0
      58: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      61: invokeinterface #219,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      66: aload_1
      67: aload_2
      68: iconst_3
      69: aload_0
      70: invokevirtual #105                // Method getIcon:()Ljava/lang/String;
      73: invokeinterface #223,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      78: aload_1
      79: aload_2
      80: iconst_4
      81: aload_0
      82: invokevirtual #108                // Method getNotifyType:()I
      85: invokeinterface #227,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      90: aload_1
      91: aload_2
      92: iconst_5
      93: aload_0
      94: invokevirtual #111                // Method getRegion:()Ljava/lang/String;
      97: invokeinterface #223,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     102: aload_1
     103: aload_2
     104: bipush        6
     106: getstatic     #231                // Field love/forte/simbot/kaiheila/util/BooleanToIntSerializer.INSTANCE:Llove/forte/simbot/kaiheila/util/BooleanToIntSerializer;
     109: checkcast     #213                // class kotlinx/serialization/SerializationStrategy
     112: aload_0
     113: invokevirtual #114                // Method getEnableOpen:()Z
     116: invokestatic  #237                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     119: invokeinterface #219,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     124: aload_1
     125: aload_2
     126: bipush        7
     128: getstatic     #211                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     131: checkcast     #213                // class kotlinx/serialization/SerializationStrategy
     134: aload_0
     135: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     138: invokeinterface #219,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     143: aload_1
     144: aload_2
     145: bipush        8
     147: getstatic     #211                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     150: checkcast     #213                // class kotlinx/serialization/SerializationStrategy
     153: aload_0
     154: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     157: invokeinterface #219,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     162: aload_1
     163: aload_2
     164: bipush        9
     166: getstatic     #211                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     169: checkcast     #213                // class kotlinx/serialization/SerializationStrategy
     172: aload_0
     173: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     176: invokeinterface #219,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     181: return

  public love.forte.simbot.kaiheila.event.system.guild.DeletedGuildExtraBodyImpl(int, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: sipush        1023
       3: sipush        1023
       6: iload_1
       7: iand
       8: if_icmpeq     24
      11: iload_1
      12: sipush        1023
      15: getstatic     #256                // Field love/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl$$serializer;
      18: invokevirtual #260                // Method love/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      21: invokestatic  #266                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      24: aload_0
      25: invokespecial #36                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_2
      30: putfield      #39                 // Field id:Llove/forte/simbot/CharSequenceID;
      33: aload_0
      34: aload_3
      35: putfield      #42                 // Field name:Ljava/lang/String;
      38: aload_0
      39: aload         4
      41: putfield      #44                 // Field userId:Llove/forte/simbot/CharSequenceID;
      44: aload_0
      45: aload         5
      47: putfield      #46                 // Field icon:Ljava/lang/String;
      50: aload_0
      51: iload         6
      53: putfield      #49                 // Field notifyType:I
      56: aload_0
      57: aload         7
      59: putfield      #51                 // Field region:Ljava/lang/String;
      62: aload_0
      63: iload         8
      65: putfield      #54                 // Field enableOpen:Z
      68: aload_0
      69: aload         9
      71: putfield      #56                 // Field openId:Llove/forte/simbot/CharSequenceID;
      74: aload_0
      75: aload         10
      77: putfield      #58                 // Field defaultChannelId:Llove/forte/simbot/CharSequenceID;
      80: aload_0
      81: aload         11
      83: putfield      #60                 // Field welcomeChannelId:Llove/forte/simbot/CharSequenceID;
      86: return

  public love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #272                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getUserId();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #272                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getOpenId();
    Code:
       0: aload_0
       1: invokevirtual #117                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #272                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getDefaultChannelId();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #272                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getWelcomeChannelId();
    Code:
       0: aload_0
       1: invokevirtual #123                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #272                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #275                // class love/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #278                // Method love/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #282                // Field Companion:Llove/forte/simbot/kaiheila/event/system/guild/DeletedGuildExtraBodyImpl$Companion;
      11: return
}
