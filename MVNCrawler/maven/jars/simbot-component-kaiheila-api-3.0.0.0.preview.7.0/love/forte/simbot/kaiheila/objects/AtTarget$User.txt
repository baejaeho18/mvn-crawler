Compiled from "KMarkdown.kt"
public final class love.forte.simbot.kaiheila.objects.AtTarget$User extends love.forte.simbot.kaiheila.objects.AtTarget implements java.lang.CharSequence {
  private final java.lang.String id;

  public love.forte.simbot.kaiheila.objects.AtTarget$User(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #11                 // String id
       3: invokestatic  #17                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aconst_null
       8: invokespecial #20                 // Method love/forte/simbot/kaiheila/objects/AtTarget."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
      11: aload_0
      12: aload_1
      13: putfield      #23                 // Field id:Ljava/lang/String;
      16: return

  public final java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #23                 // Field id:Ljava/lang/String;
       4: areturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #23                 // Field id:Ljava/lang/String;
       4: invokevirtual #34                 // Method java/lang/String.length:()I
       7: ireturn

  public char get(int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field id:Ljava/lang/String;
       4: iload_1
       5: invokevirtual #40                 // Method java/lang/String.charAt:(I)C
       8: ireturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: getfield      #23                 // Field id:Ljava/lang/String;
       4: iload_1
       5: iload_2
       6: invokevirtual #47                 // Method java/lang/String.subSequence:(II)Ljava/lang/CharSequence;
       9: areturn
}
