Compiled from "IntimacyUpdateRequest.kt"
public final class love.forte.simbot.kaiheila.api.intimacy.IntimacyUpdateRequest extends love.forte.simbot.kaiheila.api.KaiheilaPostRequest<kotlin.Unit> {
  public static final love.forte.simbot.kaiheila.api.intimacy.IntimacyUpdateRequest$Key Key;

  private final love.forte.simbot.ID userId;

  private final java.lang.Integer score;

  private final java.lang.String socialInfo;

  private final love.forte.simbot.ID imgId;

  public love.forte.simbot.kaiheila.api.intimacy.IntimacyUpdateRequest(love.forte.simbot.ID, java.lang.Integer, java.lang.String, love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #15                 // String userId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: iconst_0
       8: iconst_1
       9: aconst_null
      10: invokespecial #24                 // Method love/forte/simbot/kaiheila/api/KaiheilaPostRequest."<init>":(ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
      13: aload_0
      14: aload_1
      15: putfield      #27                 // Field userId:Llove/forte/simbot/ID;
      18: aload_0
      19: aload_2
      20: putfield      #30                 // Field score:Ljava/lang/Integer;
      23: aload_0
      24: aload_3
      25: putfield      #33                 // Field socialInfo:Ljava/lang/String;
      28: aload_0
      29: aload         4
      31: putfield      #35                 // Field imgId:Llove/forte/simbot/ID;
      34: nop
      35: getstatic     #41                 // Field love/forte/simbot/Simbot.INSTANCE:Llove/forte/simbot/Simbot;
      38: astore        5
      40: aload_0
      41: getfield      #30                 // Field score:Ljava/lang/Integer;
      44: ifnull        71
      47: new           #43                 // class kotlin/ranges/IntRange
      50: dup
      51: iconst_0
      52: sipush        2200
      55: invokespecial #46                 // Method kotlin/ranges/IntRange."<init>":(II)V
      58: aload_0
      59: getfield      #30                 // Field score:Ljava/lang/Integer;
      62: invokevirtual #52                 // Method java/lang/Integer.intValue:()I
      65: invokevirtual #56                 // Method kotlin/ranges/IntRange.contains:(I)Z
      68: ifeq          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: istore        6
      78: iconst_0
      79: istore        7
      81: nop
      82: iload         6
      84: ifne          107
      87: iconst_0
      88: istore        8
      90: ldc           #58                 // String Score must in 0 .. 2200
      92: astore        8
      94: new           #60                 // class love/forte/simbot/SimbotIllegalArgumentException
      97: dup
      98: aload         8
     100: invokevirtual #66                 // Method java/lang/Object.toString:()Ljava/lang/String;
     103: invokespecial #69                 // Method love/forte/simbot/SimbotIllegalArgumentException."<init>":(Ljava/lang/String;)V
     106: athrow
     107: nop
     108: getstatic     #41                 // Field love/forte/simbot/Simbot.INSTANCE:Llove/forte/simbot/Simbot;
     111: astore        5
     113: aload_0
     114: getfield      #33                 // Field socialInfo:Ljava/lang/String;
     117: dup
     118: ifnonnull     126
     121: pop
     122: iconst_1
     123: goto          156
     126: invokevirtual #74                 // Method java/lang/String.length:()I
     129: istore        7
     131: iload         7
     133: istore        9
     135: iconst_0
     136: istore        10
     138: iload         9
     140: sipush        500
     143: if_icmpgt     150
     146: iconst_1
     147: goto          151
     150: iconst_0
     151: nop
     152: istore        8
     154: iload         8
     156: istore        6
     158: iconst_0
     159: istore        7
     161: nop
     162: iload         6
     164: ifne          187
     167: iconst_0
     168: istore        8
     170: ldc           #76                 // String Social info must <= 500.
     172: astore        8
     174: new           #60                 // class love/forte/simbot/SimbotIllegalArgumentException
     177: dup
     178: aload         8
     180: invokevirtual #66                 // Method java/lang/Object.toString:()Ljava/lang/String;
     183: invokespecial #69                 // Method love/forte/simbot/SimbotIllegalArgumentException."<init>":(Ljava/lang/String;)V
     186: athrow
     187: nop
     188: nop
     189: return

  public love.forte.simbot.kaiheila.api.intimacy.IntimacyUpdateRequest(love.forte.simbot.ID, java.lang.Integer, java.lang.String, love.forte.simbot.ID, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         5
       2: iconst_2
       3: iand
       4: ifeq          9
       7: aconst_null
       8: astore_2
       9: iload         5
      11: iconst_4
      12: iand
      13: ifeq          18
      16: aconst_null
      17: astore_3
      18: iload         5
      20: bipush        8
      22: iand
      23: ifeq          29
      26: aconst_null
      27: astore        4
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: invokespecial #94                 // Method "<init>":(Llove/forte/simbot/ID;Ljava/lang/Integer;Ljava/lang/String;Llove/forte/simbot/ID;)V
      38: return

  public kotlinx.serialization.DeserializationStrategy<? extends kotlin.Unit> getResultDeserializer();
    Code:
       0: getstatic     #102                // Field kotlin/Unit.INSTANCE:Lkotlin/Unit;
       3: invokestatic  #108                // Method kotlinx/serialization/builtins/BuiltinSerializersKt.serializer:(Lkotlin/Unit;)Lkotlinx/serialization/KSerializer;
       6: checkcast     #110                // class kotlinx/serialization/DeserializationStrategy
       9: areturn

  protected java.util.List<java.lang.String> getApiPaths();
    Code:
       0: getstatic     #117                // Field Key:Llove/forte/simbot/kaiheila/api/intimacy/IntimacyUpdateRequest$Key;
       3: invokevirtual #122                // Method love/forte/simbot/kaiheila/api/intimacy/IntimacyUpdateRequest$Key.getApiPathList:()Ljava/util/List;
       6: areturn

  protected java.lang.Object createBody();
    Code:
       0: new           #126                // class love/forte/simbot/kaiheila/api/intimacy/IntimacyUpdateRequest$Body
       3: dup
       4: aload_0
       5: getfield      #27                 // Field userId:Llove/forte/simbot/ID;
       8: aload_0
       9: getfield      #30                 // Field score:Ljava/lang/Integer;
      12: aload_0
      13: getfield      #33                 // Field socialInfo:Ljava/lang/String;
      16: aload_0
      17: getfield      #35                 // Field imgId:Llove/forte/simbot/ID;
      20: invokespecial #127                // Method love/forte/simbot/kaiheila/api/intimacy/IntimacyUpdateRequest$Body."<init>":(Llove/forte/simbot/ID;Ljava/lang/Integer;Ljava/lang/String;Llove/forte/simbot/ID;)V
      23: areturn

  public love.forte.simbot.kaiheila.api.intimacy.IntimacyUpdateRequest(love.forte.simbot.ID, java.lang.Integer, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #15                 // String userId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: aconst_null
      11: bipush        8
      13: aconst_null
      14: invokespecial #130                // Method "<init>":(Llove/forte/simbot/ID;Ljava/lang/Integer;Ljava/lang/String;Llove/forte/simbot/ID;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      17: return

  public love.forte.simbot.kaiheila.api.intimacy.IntimacyUpdateRequest(love.forte.simbot.ID, java.lang.Integer);
    Code:
       0: aload_1
       1: ldc           #15                 // String userId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: aconst_null
      10: aconst_null
      11: bipush        12
      13: aconst_null
      14: invokespecial #130                // Method "<init>":(Llove/forte/simbot/ID;Ljava/lang/Integer;Ljava/lang/String;Llove/forte/simbot/ID;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      17: return

  public love.forte.simbot.kaiheila.api.intimacy.IntimacyUpdateRequest(love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #15                 // String userId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aconst_null
       9: aconst_null
      10: aconst_null
      11: bipush        14
      13: aconst_null
      14: invokespecial #130                // Method "<init>":(Llove/forte/simbot/ID;Ljava/lang/Integer;Ljava/lang/String;Llove/forte/simbot/ID;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      17: return

  static {};
    Code:
       0: new           #119                // class love/forte/simbot/kaiheila/api/intimacy/IntimacyUpdateRequest$Key
       3: dup
       4: aconst_null
       5: invokespecial #137                // Method love/forte/simbot/kaiheila/api/intimacy/IntimacyUpdateRequest$Key."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #117                // Field Key:Llove/forte/simbot/kaiheila/api/intimacy/IntimacyUpdateRequest$Key;
      11: return
}
