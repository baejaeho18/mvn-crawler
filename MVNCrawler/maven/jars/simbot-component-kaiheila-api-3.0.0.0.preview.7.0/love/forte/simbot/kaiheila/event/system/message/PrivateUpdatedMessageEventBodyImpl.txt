Compiled from "UpdatedPrivateMessageEvent.kt"
public final class love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl implements love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBody {
  public static final love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID msgId;

  private final love.forte.simbot.CharSequenceID chatCode;

  private final love.forte.simbot.CharSequenceID authorId;

  private final love.forte.simbot.CharSequenceID targetId;

  private final java.lang.String content;

  private final love.forte.simbot.Timestamp updatedAt;

  public love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.Timestamp);
    Code:
       0: aload_1
       1: ldc           #16                 // String msgId
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #23                 // String chatCode
       9: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #24                 // String authorId
      15: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #25                 // String targetId
      22: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #26                 // String content
      29: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         6
      34: ldc           #27                 // String updatedAt
      36: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload_0
      40: invokespecial #30                 // Method java/lang/Object."<init>":()V
      43: aload_0
      44: aload_1
      45: putfield      #33                 // Field msgId:Llove/forte/simbot/CharSequenceID;
      48: aload_0
      49: aload_2
      50: putfield      #35                 // Field chatCode:Llove/forte/simbot/CharSequenceID;
      53: aload_0
      54: aload_3
      55: putfield      #37                 // Field authorId:Llove/forte/simbot/CharSequenceID;
      58: aload_0
      59: aload         4
      61: putfield      #39                 // Field targetId:Llove/forte/simbot/CharSequenceID;
      64: aload_0
      65: aload         5
      67: putfield      #42                 // Field content:Ljava/lang/String;
      70: aload_0
      71: aload         6
      73: putfield      #45                 // Field updatedAt:Llove/forte/simbot/Timestamp;
      76: return

  public love.forte.simbot.CharSequenceID getMsgId();
    Code:
       0: aload_0
       1: getfield      #33                 // Field msgId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getMsgId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getChatCode();
    Code:
       0: aload_0
       1: getfield      #35                 // Field chatCode:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getChatCode$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getAuthorId();
    Code:
       0: aload_0
       1: getfield      #37                 // Field authorId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getAuthorId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getTargetId();
    Code:
       0: aload_0
       1: getfield      #39                 // Field targetId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getTargetId$annotations();
    Code:
       0: return

  public java.lang.String getContent();
    Code:
       0: aload_0
       1: getfield      #42                 // Field content:Ljava/lang/String;
       4: areturn

  public static void getContent$annotations();
    Code:
       0: return

  public love.forte.simbot.Timestamp getUpdatedAt();
    Code:
       0: aload_0
       1: getfield      #45                 // Field updatedAt:Llove/forte/simbot/Timestamp;
       4: areturn

  public static void getUpdatedAt$annotations();
    Code:
       0: return

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component2();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component3();
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component4();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component5();
    Code:
       0: aload_0
       1: invokevirtual #84                 // Method getContent:()Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.Timestamp component6();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getUpdatedAt:()Llove/forte/simbot/Timestamp;
       4: areturn

  public final love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl copy(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.Timestamp);
    Code:
       0: aload_1
       1: ldc           #16                 // String msgId
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #23                 // String chatCode
       9: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #24                 // String authorId
      15: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #25                 // String targetId
      22: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #26                 // String content
      29: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         6
      34: ldc           #27                 // String updatedAt
      36: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: new           #2                  // class love/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl
      42: dup
      43: aload_1
      44: aload_2
      45: aload_3
      46: aload         4
      48: aload         5
      50: aload         6
      52: invokespecial #91                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Llove/forte/simbot/Timestamp;)V
      55: areturn

  public static love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl copy$default(love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.Timestamp, int, java.lang.Object);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         7
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
      23: astore_2
      24: iload         7
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      35: astore_3
      36: iload         7
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
      48: astore        4
      50: iload         7
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #84                 // Method getContent:()Ljava/lang/String;
      62: astore        5
      64: iload         7
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #87                 // Method getUpdatedAt:()Llove/forte/simbot/Timestamp;
      76: astore        6
      78: aload_0
      79: aload_1
      80: aload_2
      81: aload_3
      82: aload         4
      84: aload         5
      86: aload         6
      88: invokevirtual #95                 // Method copy:(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Llove/forte/simbot/Timestamp;)Llove/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl;
      91: areturn

  public java.lang.String toString();
    Code:
       0: new           #98                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #99                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #101                // String PrivateUpdatedMessageEventBodyImpl(msgId=
       9: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #110                // String , chatCode=
      21: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
      28: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #112                // String , authorId=
      33: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      40: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #114                // String , targetId=
      45: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
      52: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #116                // String , content=
      57: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #84                 // Method getContent:()Ljava/lang/String;
      64: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #118                // String , updatedAt=
      69: invokevirtual #105                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #87                 // Method getUpdatedAt:()Llove/forte/simbot/Timestamp;
      76: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: bipush        41
      81: invokevirtual #121                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      84: invokevirtual #123                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #129                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #129                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      29: invokevirtual #129                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #129                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #84                 // Method getContent:()Ljava/lang/String;
      55: invokevirtual #132                // Method java/lang/String.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: bipush        31
      63: imul
      64: aload_0
      65: invokevirtual #87                 // Method getUpdatedAt:()Llove/forte/simbot/Timestamp;
      68: invokevirtual #135                // Method love/forte/simbot/Timestamp.hashCode:()I
      71: iadd
      72: istore_1
      73: iload_1
      74: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #145                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
      41: aload_2
      42: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
      45: invokestatic  #145                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      57: aload_2
      58: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      61: invokestatic  #145                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
      73: aload_2
      74: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
      77: invokestatic  #145                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload_0
      86: invokevirtual #84                 // Method getContent:()Ljava/lang/String;
      89: aload_2
      90: invokevirtual #84                 // Method getContent:()Ljava/lang/String;
      93: invokestatic  #145                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifne          101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #87                 // Method getUpdatedAt:()Llove/forte/simbot/Timestamp;
     105: aload_2
     106: invokevirtual #87                 // Method getUpdatedAt:()Llove/forte/simbot/Timestamp;
     109: invokestatic  #145                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     112: ifne          117
     115: iconst_0
     116: ireturn
     117: iconst_1
     118: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #153                // String self
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #154                // String output
       9: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #155                // String serialDesc
      15: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #161                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #163                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #169,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: getstatic     #161                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      42: checkcast     #163                // class kotlinx/serialization/SerializationStrategy
      45: aload_0
      46: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
      49: invokeinterface #169,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      54: aload_1
      55: aload_2
      56: iconst_2
      57: getstatic     #161                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      60: checkcast     #163                // class kotlinx/serialization/SerializationStrategy
      63: aload_0
      64: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      67: invokeinterface #169,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      72: aload_1
      73: aload_2
      74: iconst_3
      75: getstatic     #161                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      78: checkcast     #163                // class kotlinx/serialization/SerializationStrategy
      81: aload_0
      82: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
      85: invokeinterface #169,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      90: aload_1
      91: aload_2
      92: iconst_4
      93: aload_0
      94: invokevirtual #84                 // Method getContent:()Ljava/lang/String;
      97: invokeinterface #173,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     102: aload_1
     103: aload_2
     104: iconst_5
     105: getstatic     #178                // Field love/forte/simbot/TimestampSerializer.INSTANCE:Llove/forte/simbot/TimestampSerializer;
     108: checkcast     #163                // class kotlinx/serialization/SerializationStrategy
     111: aload_0
     112: invokevirtual #87                 // Method getUpdatedAt:()Llove/forte/simbot/Timestamp;
     115: invokeinterface #169,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     120: return

  public love.forte.simbot.kaiheila.event.system.message.PrivateUpdatedMessageEventBodyImpl(int, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.Timestamp, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: bipush        63
       2: bipush        63
       4: iload_1
       5: iand
       6: if_icmpeq     21
       9: iload_1
      10: bipush        63
      12: getstatic     #197                // Field love/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl$$serializer;
      15: invokevirtual #201                // Method love/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      18: invokestatic  #207                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      21: aload_0
      22: invokespecial #30                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: aload_2
      27: putfield      #33                 // Field msgId:Llove/forte/simbot/CharSequenceID;
      30: aload_0
      31: aload_3
      32: putfield      #35                 // Field chatCode:Llove/forte/simbot/CharSequenceID;
      35: aload_0
      36: aload         4
      38: putfield      #37                 // Field authorId:Llove/forte/simbot/CharSequenceID;
      41: aload_0
      42: aload         5
      44: putfield      #39                 // Field targetId:Llove/forte/simbot/CharSequenceID;
      47: aload_0
      48: aload         6
      50: putfield      #42                 // Field content:Ljava/lang/String;
      53: aload_0
      54: aload         7
      56: putfield      #45                 // Field updatedAt:Llove/forte/simbot/Timestamp;
      59: return

  public love.forte.simbot.ID getMsgId();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method getMsgId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #213                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getChatCode();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method getChatCode:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #213                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getAuthorId();
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #213                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getTargetId();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getTargetId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #213                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #216                // class love/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #219                // Method love/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #223                // Field Companion:Llove/forte/simbot/kaiheila/event/system/message/PrivateUpdatedMessageEventBodyImpl$Companion;
      11: return
}
