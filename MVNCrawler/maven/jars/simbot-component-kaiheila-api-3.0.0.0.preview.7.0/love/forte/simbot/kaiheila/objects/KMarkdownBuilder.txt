Compiled from "KMarkdown.kt"
public final class love.forte.simbot.kaiheila.objects.KMarkdownBuilder {
  private final java.lang.Appendable appender;

  public love.forte.simbot.kaiheila.objects.KMarkdownBuilder(java.lang.Appendable);
    Code:
       0: aload_1
       1: ldc           #9                  // String appender
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #18                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #21                 // Field appender:Ljava/lang/Appendable;
      15: return

  public love.forte.simbot.kaiheila.objects.KMarkdownBuilder(java.lang.Appendable, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload_2
       1: iconst_1
       2: iand
       3: ifeq          17
       6: new           #26                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      13: checkcast     #29                 // class java/lang/Appendable
      16: astore_1
      17: aload_0
      18: aload_1
      19: invokespecial #31                 // Method "<init>":(Ljava/lang/Appendable;)V
      22: return

  public final java.lang.Appendable getAppender();
    Code:
       0: aload_0
       1: getfield      #21                 // Field appender:Ljava/lang/Appendable;
       4: areturn

  public love.forte.simbot.kaiheila.objects.KMarkdownBuilder(int);
    Code:
       0: aload_0
       1: new           #26                 // class java/lang/StringBuilder
       4: dup
       5: iload_1
       6: invokespecial #37                 // Method java/lang/StringBuilder."<init>":(I)V
       9: checkcast     #29                 // class java/lang/Appendable
      12: invokespecial #31                 // Method "<init>":(Ljava/lang/Appendable;)V
      15: return

  private final java.lang.Appendable ap(char);
    Code:
       0: aload_0
       1: getfield      #21                 // Field appender:Ljava/lang/Appendable;
       4: astore_2
       5: aload_2
       6: astore_3
       7: iconst_0
       8: istore        4
      10: aload_3
      11: iload_1
      12: invokeinterface #44,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      17: pop
      18: aload_2
      19: areturn

  private final java.lang.Appendable ap(java.lang.CharSequence);
    Code:
       0: aload_0
       1: getfield      #21                 // Field appender:Ljava/lang/Appendable;
       4: astore_2
       5: aload_2
       6: astore_3
       7: iconst_0
       8: istore        4
      10: aload_3
      11: aload_1
      12: invokeinterface #50,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      17: pop
      18: aload_2
      19: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder text(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #56                 // String text
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #62                 // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$RawText.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$RawText;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #68                 // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$RawText.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder bold(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #77                 // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Bold.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Bold;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #78                 // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Bold.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder italic(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #85                 // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Italic.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Italic;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #86                 // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Italic.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder boldItalic(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #93                 // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$BoldItalic.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$BoldItalic;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #94                 // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$BoldItalic.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder strikethrough(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #101                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Strikethrough.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Strikethrough;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #102                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Strikethrough.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder link(love.forte.simbot.kaiheila.objects.MdLink);
    Code:
       0: aload_1
       1: ldc           #106                // String link
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #111                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Link.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Link;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #114                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Link.appendTo:(Llove/forte/simbot/kaiheila/objects/MdLink;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder link(java.lang.String, java.lang.String);
    Code:
       0: aload_2
       1: ldc           #122                // String url
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_3
       8: aload_3
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore        4
      14: iconst_0
      15: istore        5
      17: getstatic     #111                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Link.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Link;
      20: aload_1
      21: checkcast     #124                // class java/lang/CharSequence
      24: aload_2
      25: checkcast     #124                // class java/lang/CharSequence
      28: aload_0
      29: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      32: invokevirtual #127                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Link.appendTo:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      35: aload_3
      36: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      39: areturn

  public static love.forte.simbot.kaiheila.objects.KMarkdownBuilder link$default(love.forte.simbot.kaiheila.objects.KMarkdownBuilder, java.lang.String, java.lang.String, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          8
       6: aconst_null
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #133                // Method link:(Ljava/lang/String;Ljava/lang/String;)Llove/forte/simbot/kaiheila/objects/KMarkdownBuilder;
      14: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder divider();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
       6: astore_2
       7: iconst_0
       8: istore_3
       9: getstatic     #140                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Divider.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Divider;
      12: aload_0
      13: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      16: invokevirtual #142                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Divider.appendTo:(Ljava/lang/Appendable;)V
      19: aload_1
      20: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      23: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder quote(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #149                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Quote.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Quote;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #150                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Quote.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder quoteAndEnd(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #149                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Quote.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Quote;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #155                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Quote.appendToEnd:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder underscore(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #162                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Underscore.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Underscore;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #163                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Underscore.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder hide(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #170                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Hide.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Hide;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #171                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Hide.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder emoji(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #176                // String id
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #181                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Emoji.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Emoji;
      19: aload_1
      20: checkcast     #124                // class java/lang/CharSequence
      23: aload_0
      24: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      27: invokevirtual #182                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Emoji.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      30: aload_2
      31: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      34: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder serverEmoticons(love.forte.simbot.kaiheila.objects.MdServerEmoticons);
    Code:
       0: aload_1
       1: ldc           #72                 // String value
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #190                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$ServerEmoticons.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$ServerEmoticons;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #193                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$ServerEmoticons.appendTo:(Llove/forte/simbot/kaiheila/objects/MdServerEmoticons;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder serverEmoticons(java.lang.CharSequence, love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #197                // String name
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #176                // String id
       9: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: astore_3
      14: aload_3
      15: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      18: astore        4
      20: iconst_0
      21: istore        5
      23: getstatic     #190                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$ServerEmoticons.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$ServerEmoticons;
      26: aload_1
      27: aload_2
      28: aload_0
      29: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      32: invokevirtual #200                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$ServerEmoticons.appendTo:(Ljava/lang/CharSequence;Llove/forte/simbot/ID;Ljava/lang/Appendable;)V
      35: aload_3
      36: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      39: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder channel(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #176                // String id
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #208                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Channel.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Channel;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #209                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Channel.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder at(love.forte.simbot.kaiheila.objects.AtTarget);
    Code:
       0: aload_1
       1: ldc           #214                // String target
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #219                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$At.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$At;
      19: aload_1
      20: checkcast     #124                // class java/lang/CharSequence
      23: aload_0
      24: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      27: invokevirtual #220                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$At.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      30: aload_2
      31: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      34: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder at(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #214                // String target
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #219                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$At.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$At;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #220                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$At.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder role(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #226                // String roleId
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #231                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Role.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Role;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #232                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$Role.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder inlineCode(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #236                // String code
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #241                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$InlineCode.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$InlineCode;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #242                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$InlineCode.appendTo:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder codeBlock(love.forte.simbot.kaiheila.objects.MdCodeBlock);
    Code:
       0: aload_1
       1: ldc           #236                // String code
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_2
       8: aload_2
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore_3
      13: iconst_0
      14: istore        4
      16: getstatic     #250                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$CodeBlock.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$CodeBlock;
      19: aload_1
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokevirtual #253                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$CodeBlock.appendTo:(Llove/forte/simbot/kaiheila/objects/MdCodeBlock;Ljava/lang/Appendable;)V
      27: aload_2
      28: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      31: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder codeBlock(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_2
       1: ldc           #236                // String code
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: astore_3
       8: aload_3
       9: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      12: astore        4
      14: iconst_0
      15: istore        5
      17: getstatic     #250                // Field love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$CodeBlock.INSTANCE:Llove/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$CodeBlock;
      20: aload_1
      21: aload_2
      22: aload_0
      23: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      26: invokevirtual #258                // Method love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar$CodeBlock.appendTo:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/Appendable;)V
      29: aload_3
      30: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      33: areturn

  public static love.forte.simbot.kaiheila.objects.KMarkdownBuilder codeBlock$default(love.forte.simbot.kaiheila.objects.KMarkdownBuilder, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          8
       6: aconst_null
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #263                // Method codeBlock:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Llove/forte/simbot/kaiheila/objects/KMarkdownBuilder;
      14: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder space();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_0
      10: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      13: bipush        32
      15: invokeinterface #44,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      20: pop
      21: aload_1
      22: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      25: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder newLine();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_0
      10: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      13: bipush        10
      15: invokeinterface #44,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;
      20: dup
      21: ldc_w         #268                // String append(\'\\n\')
      24: invokestatic  #271                // Method kotlin/jvm/internal/Intrinsics.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V
      27: pop
      28: nop
      29: aload_1
      30: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      33: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder appendRawMd(java.lang.String);
    Code:
       0: aload_1
       1: ldc_w         #275                // String raw
       4: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: astore_2
       9: aload_2
      10: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      13: astore_3
      14: iconst_0
      15: istore        4
      17: aload_0
      18: aload_1
      19: checkcast     #124                // class java/lang/CharSequence
      22: invokespecial #277                // Method ap:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      25: pop
      26: aload_2
      27: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      30: areturn

  public final <P> love.forte.simbot.kaiheila.objects.KMarkdownBuilder append(love.forte.simbot.kaiheila.objects.KhlMarkdownGrammar<P>, P);
    Code:
       0: aload_1
       1: ldc_w         #283                // String grammar
       4: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_0
       8: astore_3
       9: aload_3
      10: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      13: astore        4
      15: iconst_0
      16: istore        5
      18: aload_1
      19: aload_2
      20: aload_0
      21: invokevirtual #64                 // Method getAppender:()Ljava/lang/Appendable;
      24: invokeinterface #288,  3          // InterfaceMethod love/forte/simbot/kaiheila/objects/KhlMarkdownGrammar.appendTo:(Ljava/lang/Object;Ljava/lang/Appendable;)V
      29: nop
      30: aload_3
      31: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/KMarkdownBuilder
      34: areturn

  public final java.lang.String buildRaw();
    Code:
       0: aload_0
       1: getfield      #21                 // Field appender:Ljava/lang/Appendable;
       4: invokevirtual #296                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdown build();
    Code:
       0: new           #300                // class love/forte/simbot/kaiheila/objects/RawValueKMarkdown
       3: dup
       4: aload_0
       5: invokevirtual #302                // Method buildRaw:()Ljava/lang/String;
       8: aconst_null
       9: aconst_null
      10: bipush        6
      12: aconst_null
      13: invokespecial #305                // Method love/forte/simbot/kaiheila/objects/RawValueKMarkdown."<init>":(Ljava/lang/String;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      16: checkcast     #307                // class love/forte/simbot/kaiheila/objects/KMarkdown
      19: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder link(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #122                // String url
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aconst_null
       8: aload_1
       9: iconst_1
      10: aconst_null
      11: invokestatic  #309                // Method link$default:(Llove/forte/simbot/kaiheila/objects/KMarkdownBuilder;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Llove/forte/simbot/kaiheila/objects/KMarkdownBuilder;
      14: areturn

  public final love.forte.simbot.kaiheila.objects.KMarkdownBuilder codeBlock(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #236                // String code
       3: invokestatic  #15                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aconst_null
       8: aload_1
       9: iconst_1
      10: aconst_null
      11: invokestatic  #311                // Method codeBlock$default:(Llove/forte/simbot/kaiheila/objects/KMarkdownBuilder;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/Object;)Llove/forte/simbot/kaiheila/objects/KMarkdownBuilder;
      14: areturn

  public love.forte.simbot.kaiheila.objects.KMarkdownBuilder();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_1
       3: aconst_null
       4: invokespecial #313                // Method "<init>":(Ljava/lang/Appendable;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
       7: return
}
