Compiled from "InviteInfoImpl.kt"
public final class love.forte.simbot.kaiheila.api.invite.InviteInfoImpl implements love.forte.simbot.kaiheila.api.invite.InviteInfo {
  public static final love.forte.simbot.kaiheila.api.invite.InviteInfoImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID guildId;

  private final love.forte.simbot.CharSequenceID channelId;

  private final java.lang.String urlCode;

  private final java.lang.String url;

  private final love.forte.simbot.kaiheila.objects.UserImpl user;

  public love.forte.simbot.kaiheila.api.invite.InviteInfoImpl(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.kaiheila.objects.UserImpl);
    Code:
       0: aload_1
       1: ldc           #15                 // String guildId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #22                 // String channelId
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #23                 // String urlCode
      15: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #24                 // String url
      22: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #25                 // String user
      29: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_0
      33: invokespecial #28                 // Method java/lang/Object."<init>":()V
      36: aload_0
      37: aload_1
      38: putfield      #31                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      41: aload_0
      42: aload_2
      43: putfield      #33                 // Field channelId:Llove/forte/simbot/CharSequenceID;
      46: aload_0
      47: aload_3
      48: putfield      #36                 // Field urlCode:Ljava/lang/String;
      51: aload_0
      52: aload         4
      54: putfield      #38                 // Field url:Ljava/lang/String;
      57: aload_0
      58: aload         5
      60: putfield      #41                 // Field user:Llove/forte/simbot/kaiheila/objects/UserImpl;
      63: return

  public love.forte.simbot.CharSequenceID getGuildId();
    Code:
       0: aload_0
       1: getfield      #31                 // Field guildId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getGuildId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getChannelId();
    Code:
       0: aload_0
       1: getfield      #33                 // Field channelId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getChannelId$annotations();
    Code:
       0: return

  public java.lang.String getUrlCode();
    Code:
       0: aload_0
       1: getfield      #36                 // Field urlCode:Ljava/lang/String;
       4: areturn

  public static void getUrlCode$annotations();
    Code:
       0: return

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #38                 // Field url:Ljava/lang/String;
       4: areturn

  public love.forte.simbot.kaiheila.objects.UserImpl getUser();
    Code:
       0: aload_0
       1: getfield      #41                 // Field user:Llove/forte/simbot/kaiheila/objects/UserImpl;
       4: areturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component2();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component3();
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method getUrlCode:()Ljava/lang/String;
       4: areturn

  public final java.lang.String component4();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getUrl:()Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.kaiheila.objects.UserImpl component5();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
       4: areturn

  public final love.forte.simbot.kaiheila.api.invite.InviteInfoImpl copy(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.kaiheila.objects.UserImpl);
    Code:
       0: aload_1
       1: ldc           #15                 // String guildId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #22                 // String channelId
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #23                 // String urlCode
      15: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #24                 // String url
      22: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #25                 // String user
      29: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: new           #2                  // class love/forte/simbot/kaiheila/api/invite/InviteInfoImpl
      35: dup
      36: aload_1
      37: aload_2
      38: aload_3
      39: aload         4
      41: aload         5
      43: invokespecial #78                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;Llove/forte/simbot/kaiheila/objects/UserImpl;)V
      46: areturn

  public static love.forte.simbot.kaiheila.api.invite.InviteInfoImpl copy$default(love.forte.simbot.kaiheila.api.invite.InviteInfoImpl, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.kaiheila.objects.UserImpl, int, java.lang.Object);
    Code:
       0: iload         6
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         6
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      23: astore_2
      24: iload         6
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #68                 // Method getUrlCode:()Ljava/lang/String;
      35: astore_3
      36: iload         6
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #71                 // Method getUrl:()Ljava/lang/String;
      48: astore        4
      50: iload         6
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      62: astore        5
      64: aload_0
      65: aload_1
      66: aload_2
      67: aload_3
      68: aload         4
      70: aload         5
      72: invokevirtual #82                 // Method copy:(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;Llove/forte/simbot/kaiheila/objects/UserImpl;)Llove/forte/simbot/kaiheila/api/invite/InviteInfoImpl;
      75: areturn

  public java.lang.String toString();
    Code:
       0: new           #85                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #86                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #88                 // String InviteInfoImpl(guildId=
       9: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #97                 // String , channelId=
      21: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      28: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #99                 // String , urlCode=
      33: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #68                 // Method getUrlCode:()Ljava/lang/String;
      40: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #101                // String , url=
      45: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #71                 // Method getUrl:()Ljava/lang/String;
      52: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #103                // String , user=
      57: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      64: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: bipush        41
      69: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #108                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #114                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #114                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #68                 // Method getUrlCode:()Ljava/lang/String;
      29: invokevirtual #117                // Method java/lang/String.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #71                 // Method getUrl:()Ljava/lang/String;
      42: invokevirtual #117                // Method java/lang/String.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      55: invokevirtual #120                // Method love/forte/simbot/kaiheila/objects/UserImpl.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/api/invite/InviteInfoImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/api/invite/InviteInfoImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #130                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      41: aload_2
      42: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      45: invokestatic  #130                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #68                 // Method getUrlCode:()Ljava/lang/String;
      57: aload_2
      58: invokevirtual #68                 // Method getUrlCode:()Ljava/lang/String;
      61: invokestatic  #130                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #71                 // Method getUrl:()Ljava/lang/String;
      73: aload_2
      74: invokevirtual #71                 // Method getUrl:()Ljava/lang/String;
      77: invokestatic  #130                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload_0
      86: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      89: aload_2
      90: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      93: invokestatic  #130                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifne          101
      99: iconst_0
     100: ireturn
     101: iconst_1
     102: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.api.invite.InviteInfoImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #138                // String self
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #139                // String output
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #140                // String serialDesc
      15: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #146                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #148                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #154,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: getstatic     #146                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      42: checkcast     #148                // class kotlinx/serialization/SerializationStrategy
      45: aload_0
      46: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
      49: invokeinterface #154,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      54: aload_1
      55: aload_2
      56: iconst_2
      57: aload_0
      58: invokevirtual #68                 // Method getUrlCode:()Ljava/lang/String;
      61: invokeinterface #158,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      66: aload_1
      67: aload_2
      68: iconst_3
      69: aload_0
      70: invokevirtual #71                 // Method getUrl:()Ljava/lang/String;
      73: invokeinterface #158,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      78: aload_1
      79: aload_2
      80: iconst_4
      81: getstatic     #163                // Field love/forte/simbot/kaiheila/objects/UserImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/UserImpl$$serializer;
      84: checkcast     #148                // class kotlinx/serialization/SerializationStrategy
      87: aload_0
      88: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      91: invokeinterface #154,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      96: return

  public love.forte.simbot.kaiheila.api.invite.InviteInfoImpl(int, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.kaiheila.objects.UserImpl, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: bipush        31
       2: bipush        31
       4: iload_1
       5: iand
       6: if_icmpeq     21
       9: iload_1
      10: bipush        31
      12: getstatic     #182                // Field love/forte/simbot/kaiheila/api/invite/InviteInfoImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/invite/InviteInfoImpl$$serializer;
      15: invokevirtual #186                // Method love/forte/simbot/kaiheila/api/invite/InviteInfoImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      18: invokestatic  #192                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      21: aload_0
      22: invokespecial #28                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: aload_2
      27: putfield      #31                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      30: aload_0
      31: aload_3
      32: putfield      #33                 // Field channelId:Llove/forte/simbot/CharSequenceID;
      35: aload_0
      36: aload         4
      38: putfield      #36                 // Field urlCode:Ljava/lang/String;
      41: aload_0
      42: aload         5
      44: putfield      #38                 // Field url:Ljava/lang/String;
      47: aload_0
      48: aload         6
      50: putfield      #41                 // Field user:Llove/forte/simbot/kaiheila/objects/UserImpl;
      53: return

  public love.forte.simbot.ID getGuildId();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #198                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getChannelId();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method getChannelId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #198                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.kaiheila.objects.User getUser();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method getUser:()Llove/forte/simbot/kaiheila/objects/UserImpl;
       4: checkcast     #201                // class love/forte/simbot/kaiheila/objects/User
       7: areturn

  static {};
    Code:
       0: new           #204                // class love/forte/simbot/kaiheila/api/invite/InviteInfoImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #207                // Method love/forte/simbot/kaiheila/api/invite/InviteInfoImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #211                // Field Companion:Llove/forte/simbot/kaiheila/api/invite/InviteInfoImpl$Companion;
      11: return
}
