Compiled from "ChannelListRequest.kt"
public final class love.forte.simbot.kaiheila.api.channel.ChannelListRequest extends love.forte.simbot.kaiheila.api.KaiheilaGetRequest<love.forte.simbot.kaiheila.api.KaiheilaApiResult$ListData<? extends love.forte.simbot.kaiheila.api.channel.ChannelInfo>> {
  public static final love.forte.simbot.kaiheila.api.channel.ChannelListRequest$Key Key;

  private final love.forte.simbot.ID guildId;

  private final java.lang.Integer page;

  private final java.lang.Integer pageSize;

  private final java.lang.Integer type;

  private static final kotlinx.serialization.KSerializer<love.forte.simbot.kaiheila.api.KaiheilaApiResult$ListData<love.forte.simbot.kaiheila.api.channel.ChannelInfoImpl>> serializer;

  public love.forte.simbot.kaiheila.api.channel.ChannelListRequest(love.forte.simbot.ID, java.lang.Integer, java.lang.Integer, java.lang.Integer);
    Code:
       0: aload_1
       1: ldc           #14                 // String guildId
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #23                 // Method love/forte/simbot/kaiheila/api/KaiheilaGetRequest."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #26                 // Field guildId:Llove/forte/simbot/ID;
      15: aload_0
      16: aload_2
      17: putfield      #29                 // Field page:Ljava/lang/Integer;
      20: aload_0
      21: aload_3
      22: putfield      #31                 // Field pageSize:Ljava/lang/Integer;
      25: aload_0
      26: aload         4
      28: putfield      #33                 // Field type:Ljava/lang/Integer;
      31: return

  public love.forte.simbot.kaiheila.api.channel.ChannelListRequest(love.forte.simbot.ID, java.lang.Integer, java.lang.Integer, java.lang.Integer, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         5
       2: iconst_2
       3: iand
       4: ifeq          9
       7: aconst_null
       8: astore_2
       9: iload         5
      11: iconst_4
      12: iand
      13: ifeq          18
      16: aconst_null
      17: astore_3
      18: iload         5
      20: bipush        8
      22: iand
      23: ifeq          29
      26: aconst_null
      27: astore        4
      29: aload_0
      30: aload_1
      31: aload_2
      32: aload_3
      33: aload         4
      35: invokespecial #38                 // Method "<init>":(Llove/forte/simbot/ID;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)V
      38: return

  public kotlinx.serialization.DeserializationStrategy<? extends love.forte.simbot.kaiheila.api.KaiheilaApiResult$ListData<love.forte.simbot.kaiheila.api.channel.ChannelInfo>> getResultDeserializer();
    Code:
       0: getstatic     #45                 // Field serializer:Lkotlinx/serialization/KSerializer;
       3: checkcast     #47                 // class kotlinx/serialization/DeserializationStrategy
       6: areturn

  protected java.util.List<java.lang.String> getApiPaths();
    Code:
       0: getstatic     #54                 // Field Key:Llove/forte/simbot/kaiheila/api/channel/ChannelListRequest$Key;
       3: invokevirtual #59                 // Method love/forte/simbot/kaiheila/api/channel/ChannelListRequest$Key.getApiPathList:()Ljava/util/List;
       6: areturn

  protected void buildParameters(io.ktor.http.ParametersBuilder);
    Code:
       0: aload_1
       1: ldc           #64                 // String <this>
       3: invokestatic  #20                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #66                 // String guild_id
       9: aload_0
      10: getfield      #26                 // Field guildId:Llove/forte/simbot/ID;
      13: astore_2
      14: iconst_0
      15: istore_3
      16: aload_2
      17: invokevirtual #72                 // Method love/forte/simbot/ID.toString:()Ljava/lang/String;
      20: invokeinterface #78,  3           // InterfaceMethod io/ktor/http/ParametersBuilder.append:(Ljava/lang/String;Ljava/lang/String;)V
      25: aload_1
      26: astore_2
      27: ldc           #79                 // String page
      29: astore_3
      30: aload_0
      31: getfield      #29                 // Field page:Ljava/lang/Integer;
      34: astore        4
      36: iconst_0
      37: istore        5
      39: aload         4
      41: dup
      42: ifnonnull     49
      45: pop
      46: goto          88
      49: astore        6
      51: iconst_0
      52: istore        7
      54: aload_2
      55: aload_3
      56: aload         6
      58: astore        8
      60: astore        10
      62: astore        9
      64: aload         8
      66: astore        8
      68: aload         8
      70: invokestatic  #85                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      73: astore        11
      75: aload         9
      77: aload         10
      79: aload         11
      81: invokeinterface #78,  3           // InterfaceMethod io/ktor/http/ParametersBuilder.append:(Ljava/lang/String;Ljava/lang/String;)V
      86: nop
      87: nop
      88: nop
      89: aload_1
      90: astore_2
      91: ldc           #87                 // String page_size
      93: astore_3
      94: aload_0
      95: getfield      #31                 // Field pageSize:Ljava/lang/Integer;
      98: astore        4
     100: iconst_0
     101: istore        5
     103: aload         4
     105: dup
     106: ifnonnull     113
     109: pop
     110: goto          152
     113: astore        6
     115: iconst_0
     116: istore        7
     118: aload_2
     119: aload_3
     120: aload         6
     122: astore        8
     124: astore        10
     126: astore        9
     128: aload         8
     130: astore        8
     132: aload         8
     134: invokestatic  #85                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     137: astore        11
     139: aload         9
     141: aload         10
     143: aload         11
     145: invokeinterface #78,  3           // InterfaceMethod io/ktor/http/ParametersBuilder.append:(Ljava/lang/String;Ljava/lang/String;)V
     150: nop
     151: nop
     152: nop
     153: aload_1
     154: astore_2
     155: ldc           #88                 // String type
     157: astore_3
     158: aload_0
     159: getfield      #33                 // Field type:Ljava/lang/Integer;
     162: astore        4
     164: iconst_0
     165: istore        5
     167: aload         4
     169: dup
     170: ifnonnull     177
     173: pop
     174: goto          216
     177: astore        6
     179: iconst_0
     180: istore        7
     182: aload_2
     183: aload_3
     184: aload         6
     186: astore        8
     188: astore        10
     190: astore        9
     192: aload         8
     194: astore        8
     196: aload         8
     198: invokestatic  #85                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     201: astore        11
     203: aload         9
     205: aload         10
     207: aload         11
     209: invokeinterface #78,  3           // InterfaceMethod io/ktor/http/ParametersBuilder.append:(Ljava/lang/String;Ljava/lang/String;)V
     214: nop
     215: nop
     216: nop
     217: return

  public java.lang.Object requestData(io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, kotlin.coroutines.Continuation);
    Code:
       0: aload         4
       2: instanceof    #107                // class love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1
       5: ifeq          41
       8: aload         4
      10: checkcast     #107                // class love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1
      13: astore        13
      15: aload         13
      17: getfield      #110                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.label:I
      20: ldc           #111                // int -2147483648
      22: iand
      23: ifeq          41
      26: aload         13
      28: dup
      29: getfield      #110                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.label:I
      32: ldc           #111                // int -2147483648
      34: isub
      35: putfield      #110                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.label:I
      38: goto          53
      41: new           #107                // class love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1
      44: dup
      45: aload_0
      46: aload         4
      48: invokespecial #114                // Method love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1."<init>":(Llove/forte/simbot/kaiheila/api/channel/ChannelListRequest;Lkotlin/coroutines/Continuation;)V
      51: astore        13
      53: aload         13
      55: getfield      #117                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.result:Ljava/lang/Object;
      58: astore        12
      60: invokestatic  #123                // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      63: astore        14
      65: aload         13
      67: getfield      #110                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.label:I
      70: tableswitch   { // 0 to 1
                     0: 92
                     1: 127
               default: 239
          }
      92: aload         12
      94: invokestatic  #129                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
      97: aload_0
      98: aload_1
      99: aload_2
     100: aload_3
     101: aload         13
     103: aload         13
     105: aload_0
     106: putfield      #132                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.L$0:Ljava/lang/Object;
     109: aload         13
     111: iconst_1
     112: putfield      #110                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.label:I
     115: invokespecial #134                // Method love/forte/simbot/kaiheila/api/KaiheilaGetRequest.requestData:(Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     118: dup
     119: aload         14
     121: if_acmpne     143
     124: aload         14
     126: areturn
     127: aload         13
     129: getfield      #132                // Field love/forte/simbot/kaiheila/api/channel/ChannelListRequest$requestData$1.L$0:Ljava/lang/Object;
     132: checkcast     #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelListRequest
     135: astore_0
     136: aload         12
     138: invokestatic  #129                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     141: aload         12
     143: checkcast     #136                // class love/forte/simbot/kaiheila/api/KaiheilaApiResult$ListData
     146: astore        5
     148: aload         5
     150: invokevirtual #139                // Method love/forte/simbot/kaiheila/api/KaiheilaApiResult$ListData.getItems:()Ljava/util/List;
     153: checkcast     #141                // class java/lang/Iterable
     156: astore        6
     158: iconst_0
     159: istore        7
     161: aload         6
     163: invokeinterface #145,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     168: astore        8
     170: aload         8
     172: invokeinterface #151,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     177: ifeq          235
     180: aload         8
     182: invokeinterface #154,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     187: astore        9
     189: aload         9
     191: checkcast     #156                // class love/forte/simbot/kaiheila/api/channel/ChannelInfo
     194: astore        10
     196: iconst_0
     197: istore        11
     199: aload         10
     201: instanceof    #158                // class love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl
     204: ifeq          215
     207: aload         10
     209: checkcast     #158                // class love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl
     212: goto          216
     215: aconst_null
     216: dup
     217: ifnonnull     224
     220: pop
     221: goto          231
     224: aload_0
     225: getfield      #26                 // Field guildId:Llove/forte/simbot/ID;
     228: invokevirtual #162                // Method love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl.setGuildIdLate$simbot_component_kaiheila_api:(Llove/forte/simbot/ID;)V
     231: nop
     232: goto          170
     235: nop
     236: aload         5
     238: areturn
     239: new           #164                // class java/lang/IllegalStateException
     242: dup
     243: ldc           #166                // String call to \'resume\' before \'invoke\' with coroutine
     245: invokespecial #169                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     248: athrow

  static {};
    Code:
       0: new           #56                 // class love/forte/simbot/kaiheila/api/channel/ChannelListRequest$Key
       3: dup
       4: aconst_null
       5: invokespecial #197                // Method love/forte/simbot/kaiheila/api/channel/ChannelListRequest$Key."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #54                 // Field Key:Llove/forte/simbot/kaiheila/api/channel/ChannelListRequest$Key;
      11: getstatic     #201                // Field love/forte/simbot/kaiheila/api/KaiheilaApiResult$ListData.Companion:Llove/forte/simbot/kaiheila/api/KaiheilaApiResult$ListData$Companion;
      14: getstatic     #204                // Field love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl.Companion:Llove/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$Companion;
      17: invokevirtual #209                // Method love/forte/simbot/kaiheila/api/channel/ChannelInfoImpl$Companion.serializer:()Lkotlinx/serialization/KSerializer;
      20: invokevirtual #214                // Method love/forte/simbot/kaiheila/api/KaiheilaApiResult$ListData$Companion.serializer:(Lkotlinx/serialization/KSerializer;)Lkotlinx/serialization/KSerializer;
      23: putstatic     #45                 // Field serializer:Lkotlinx/serialization/KSerializer;
      26: return
}
