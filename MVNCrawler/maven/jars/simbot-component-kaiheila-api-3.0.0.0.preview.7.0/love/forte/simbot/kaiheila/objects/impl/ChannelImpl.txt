Compiled from "ChannelImpl.kt"
public final class love.forte.simbot.kaiheila.objects.impl.ChannelImpl implements love.forte.simbot.kaiheila.objects.Channel {
  public static final love.forte.simbot.kaiheila.objects.impl.ChannelImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final java.lang.String name;

  private final love.forte.simbot.CharSequenceID userId;

  private final love.forte.simbot.CharSequenceID guildId;

  private final java.lang.String topic;

  private final boolean isCategory;

  private final love.forte.simbot.CharSequenceID parentId;

  private final int level;

  private final int slowMode;

  private final int type;

  private final java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl> permissionOverwrites;

  private final java.util.List<love.forte.simbot.CharSequenceID> permissionUsers;

  private final int permissionSync;

  private final int currentMember;

  private final java.lang.String icon;

  private final int maximumMember;

  public love.forte.simbot.kaiheila.objects.impl.ChannelImpl(love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, int, int, int, java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl>, java.util.List<love.forte.simbot.CharSequenceID>, int, int, java.lang.String, int);
    Code:
       0: aload_1
       1: ldc           #27                 // String id
       3: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #34                 // String name
       9: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #35                 // String userId
      15: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #36                 // String guildId
      22: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #37                 // String topic
      29: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         7
      34: ldc           #38                 // String parentId
      36: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         11
      41: ldc           #39                 // String permissionOverwrites
      43: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         12
      48: ldc           #40                 // String permissionUsers
      50: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload         15
      55: ldc           #41                 // String icon
      57: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      60: aload_0
      61: invokespecial #44                 // Method java/lang/Object."<init>":()V
      64: aload_0
      65: aload_1
      66: putfield      #47                 // Field id:Llove/forte/simbot/CharSequenceID;
      69: aload_0
      70: aload_2
      71: putfield      #50                 // Field name:Ljava/lang/String;
      74: aload_0
      75: aload_3
      76: putfield      #52                 // Field userId:Llove/forte/simbot/CharSequenceID;
      79: aload_0
      80: aload         4
      82: putfield      #54                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      85: aload_0
      86: aload         5
      88: putfield      #56                 // Field topic:Ljava/lang/String;
      91: aload_0
      92: iload         6
      94: putfield      #59                 // Field isCategory:Z
      97: aload_0
      98: aload         7
     100: putfield      #61                 // Field parentId:Llove/forte/simbot/CharSequenceID;
     103: aload_0
     104: iload         8
     106: putfield      #64                 // Field level:I
     109: aload_0
     110: iload         9
     112: putfield      #66                 // Field slowMode:I
     115: aload_0
     116: iload         10
     118: putfield      #68                 // Field type:I
     121: aload_0
     122: aload         11
     124: putfield      #71                 // Field permissionOverwrites:Ljava/util/List;
     127: aload_0
     128: aload         12
     130: putfield      #73                 // Field permissionUsers:Ljava/util/List;
     133: aload_0
     134: iload         13
     136: putfield      #75                 // Field permissionSync:I
     139: aload_0
     140: iload         14
     142: putfield      #77                 // Field currentMember:I
     145: aload_0
     146: aload         15
     148: putfield      #79                 // Field icon:Ljava/lang/String;
     151: aload_0
     152: iload         16
     154: putfield      #81                 // Field maximumMember:I
     157: return

  public love.forte.simbot.kaiheila.objects.impl.ChannelImpl(love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, int, int, int, java.util.List, java.util.List, int, int, java.lang.String, int, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         17
       2: sipush        1024
       5: iand
       6: ifeq          14
       9: invokestatic  #90                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      12: astore        11
      14: iload         17
      16: sipush        2048
      19: iand
      20: ifeq          28
      23: invokestatic  #90                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      26: astore        12
      28: iload         17
      30: sipush        8192
      33: iand
      34: ifeq          40
      37: iconst_m1
      38: istore        14
      40: iload         17
      42: sipush        16384
      45: iand
      46: ifeq          53
      49: ldc           #92                 // String
      51: astore        15
      53: iload         17
      55: ldc           #93                 // int 32768
      57: iand
      58: ifeq          64
      61: iconst_m1
      62: istore        16
      64: aload_0
      65: aload_1
      66: aload_2
      67: aload_3
      68: aload         4
      70: aload         5
      72: iload         6
      74: aload         7
      76: iload         8
      78: iload         9
      80: iload         10
      82: aload         11
      84: aload         12
      86: iload         13
      88: iload         14
      90: aload         15
      92: iload         16
      94: invokespecial #95                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ZLlove/forte/simbot/CharSequenceID;IIILjava/util/List;Ljava/util/List;IILjava/lang/String;I)V
      97: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #47                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #50                 // Field name:Ljava/lang/String;
       4: areturn

  public love.forte.simbot.CharSequenceID getUserId();
    Code:
       0: aload_0
       1: getfield      #52                 // Field userId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getUserId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getGuildId();
    Code:
       0: aload_0
       1: getfield      #54                 // Field guildId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getGuildId$annotations();
    Code:
       0: return

  public java.lang.String getTopic();
    Code:
       0: aload_0
       1: getfield      #56                 // Field topic:Ljava/lang/String;
       4: areturn

  public boolean isCategory();
    Code:
       0: aload_0
       1: getfield      #59                 // Field isCategory:Z
       4: ireturn

  public static void isCategory$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getParentId();
    Code:
       0: aload_0
       1: getfield      #61                 // Field parentId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getParentId$annotations();
    Code:
       0: return

  public int getLevel();
    Code:
       0: aload_0
       1: getfield      #64                 // Field level:I
       4: ireturn

  public int getSlowMode();
    Code:
       0: aload_0
       1: getfield      #66                 // Field slowMode:I
       4: ireturn

  public static void getSlowMode$annotations();
    Code:
       0: return

  public int getType();
    Code:
       0: aload_0
       1: getfield      #68                 // Field type:I
       4: ireturn

  public java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl> getPermissionOverwrites();
    Code:
       0: aload_0
       1: getfield      #71                 // Field permissionOverwrites:Ljava/util/List;
       4: areturn

  public static void getPermissionOverwrites$annotations();
    Code:
       0: return

  public java.util.List<love.forte.simbot.CharSequenceID> getPermissionUsers();
    Code:
       0: aload_0
       1: getfield      #73                 // Field permissionUsers:Ljava/util/List;
       4: areturn

  public static void getPermissionUsers$annotations();
    Code:
       0: return

  public int getPermissionSync();
    Code:
       0: aload_0
       1: getfield      #75                 // Field permissionSync:I
       4: ireturn

  public static void getPermissionSync$annotations();
    Code:
       0: return

  public int getCurrentMember();
    Code:
       0: aload_0
       1: getfield      #77                 // Field currentMember:I
       4: ireturn

  public java.lang.String getIcon();
    Code:
       0: aload_0
       1: getfield      #79                 // Field icon:Ljava/lang/String;
       4: areturn

  public int getMaximumMember();
    Code:
       0: aload_0
       1: getfield      #81                 // Field maximumMember:I
       4: ireturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component2();
    Code:
       0: aload_0
       1: invokevirtual #140                // Method getName:()Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.CharSequenceID component3();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component4();
    Code:
       0: aload_0
       1: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component5();
    Code:
       0: aload_0
       1: invokevirtual #149                // Method getTopic:()Ljava/lang/String;
       4: areturn

  public final boolean component6();
    Code:
       0: aload_0
       1: invokevirtual #152                // Method isCategory:()Z
       4: ireturn

  public final love.forte.simbot.CharSequenceID component7();
    Code:
       0: aload_0
       1: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final int component8();
    Code:
       0: aload_0
       1: invokevirtual #158                // Method getLevel:()I
       4: ireturn

  public final int component9();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method getSlowMode:()I
       4: ireturn

  public final int component10();
    Code:
       0: aload_0
       1: invokevirtual #164                // Method getType:()I
       4: ireturn

  public final java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl> component11();
    Code:
       0: aload_0
       1: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
       4: areturn

  public final java.util.List<love.forte.simbot.CharSequenceID> component12();
    Code:
       0: aload_0
       1: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
       4: areturn

  public final int component13();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method getPermissionSync:()I
       4: ireturn

  public final int component14();
    Code:
       0: aload_0
       1: invokevirtual #176                // Method getCurrentMember:()I
       4: ireturn

  public final java.lang.String component15();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
       4: areturn

  public final int component16();
    Code:
       0: aload_0
       1: invokevirtual #182                // Method getMaximumMember:()I
       4: ireturn

  public final love.forte.simbot.kaiheila.objects.impl.ChannelImpl copy(love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, int, int, int, java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl>, java.util.List<love.forte.simbot.CharSequenceID>, int, int, java.lang.String, int);
    Code:
       0: aload_1
       1: ldc           #27                 // String id
       3: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #34                 // String name
       9: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #35                 // String userId
      15: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #36                 // String guildId
      22: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #37                 // String topic
      29: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         7
      34: ldc           #38                 // String parentId
      36: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         11
      41: ldc           #39                 // String permissionOverwrites
      43: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         12
      48: ldc           #40                 // String permissionUsers
      50: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload         15
      55: ldc           #41                 // String icon
      57: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      60: new           #2                  // class love/forte/simbot/kaiheila/objects/impl/ChannelImpl
      63: dup
      64: aload_1
      65: aload_2
      66: aload_3
      67: aload         4
      69: aload         5
      71: iload         6
      73: aload         7
      75: iload         8
      77: iload         9
      79: iload         10
      81: aload         11
      83: aload         12
      85: iload         13
      87: iload         14
      89: aload         15
      91: iload         16
      93: invokespecial #95                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ZLlove/forte/simbot/CharSequenceID;IIILjava/util/List;Ljava/util/List;IILjava/lang/String;I)V
      96: areturn

  public static love.forte.simbot.kaiheila.objects.impl.ChannelImpl copy$default(love.forte.simbot.kaiheila.objects.impl.ChannelImpl, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, int, int, int, java.util.List, java.util.List, int, int, java.lang.String, int, int, java.lang.Object);
    Code:
       0: iload         17
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         17
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #140                // Method getName:()Ljava/lang/String;
      23: astore_2
      24: iload         17
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      35: astore_3
      36: iload         17
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      48: astore        4
      50: iload         17
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #149                // Method getTopic:()Ljava/lang/String;
      62: astore        5
      64: iload         17
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #152                // Method isCategory:()Z
      76: istore        6
      78: iload         17
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      90: astore        7
      92: iload         17
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: invokevirtual #158                // Method getLevel:()I
     105: istore        8
     107: iload         17
     109: sipush        256
     112: iand
     113: ifeq          122
     116: aload_0
     117: invokevirtual #161                // Method getSlowMode:()I
     120: istore        9
     122: iload         17
     124: sipush        512
     127: iand
     128: ifeq          137
     131: aload_0
     132: invokevirtual #164                // Method getType:()I
     135: istore        10
     137: iload         17
     139: sipush        1024
     142: iand
     143: ifeq          152
     146: aload_0
     147: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
     150: astore        11
     152: iload         17
     154: sipush        2048
     157: iand
     158: ifeq          167
     161: aload_0
     162: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
     165: astore        12
     167: iload         17
     169: sipush        4096
     172: iand
     173: ifeq          182
     176: aload_0
     177: invokevirtual #173                // Method getPermissionSync:()I
     180: istore        13
     182: iload         17
     184: sipush        8192
     187: iand
     188: ifeq          197
     191: aload_0
     192: invokevirtual #176                // Method getCurrentMember:()I
     195: istore        14
     197: iload         17
     199: sipush        16384
     202: iand
     203: ifeq          212
     206: aload_0
     207: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
     210: astore        15
     212: iload         17
     214: ldc           #93                 // int 32768
     216: iand
     217: ifeq          226
     220: aload_0
     221: invokevirtual #182                // Method getMaximumMember:()I
     224: istore        16
     226: aload_0
     227: aload_1
     228: aload_2
     229: aload_3
     230: aload         4
     232: aload         5
     234: iload         6
     236: aload         7
     238: iload         8
     240: iload         9
     242: iload         10
     244: aload         11
     246: aload         12
     248: iload         13
     250: iload         14
     252: aload         15
     254: iload         16
     256: invokevirtual #189                // Method copy:(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ZLlove/forte/simbot/CharSequenceID;IIILjava/util/List;Ljava/util/List;IILjava/lang/String;I)Llove/forte/simbot/kaiheila/objects/impl/ChannelImpl;
     259: areturn

  public java.lang.String toString();
    Code:
       0: new           #192                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #193                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #195                // String ChannelImpl(id=
      11: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
      18: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #204                // String , name=
      23: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #140                // Method getName:()Ljava/lang/String;
      30: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #206                // String , userId=
      35: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #208                // String , guildId=
      47: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      54: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #210                // String , topic=
      59: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #149                // Method getTopic:()Ljava/lang/String;
      66: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #212                // String , isCategory=
      71: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #152                // Method isCategory:()Z
      78: invokevirtual #215                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      81: ldc           #217                // String , parentId=
      83: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      90: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: ldc           #219                // String , level=
      95: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: invokevirtual #158                // Method getLevel:()I
     102: invokevirtual #222                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: ldc           #224                // String , slowMode=
     107: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokevirtual #161                // Method getSlowMode:()I
     114: invokevirtual #222                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: ldc           #226                // String , type=
     119: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: invokevirtual #164                // Method getType:()I
     126: invokevirtual #222                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #228                // String , permissionOverwrites=
     131: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
     138: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     141: ldc           #230                // String , permissionUsers=
     143: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_1
     148: aload_0
     149: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
     152: invokevirtual #202                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     155: ldc           #232                // String , permissionSync=
     157: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_0
     161: invokevirtual #173                // Method getPermissionSync:()I
     164: invokevirtual #222                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     167: ldc           #234                // String , currentMember=
     169: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_0
     173: invokevirtual #176                // Method getCurrentMember:()I
     176: invokevirtual #222                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     179: ldc           #236                // String , icon=
     181: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_0
     185: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
     188: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: ldc           #238                // String , maximumMember=
     193: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload_0
     197: invokevirtual #182                // Method getMaximumMember:()I
     200: invokevirtual #222                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     203: bipush        41
     205: invokevirtual #241                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     208: pop
     209: aload_1
     210: invokevirtual #243                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #248                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #140                // Method getName:()Ljava/lang/String;
      16: invokevirtual #251                // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      29: invokevirtual #248                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #248                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #149                // Method getTopic:()Ljava/lang/String;
      55: invokevirtual #251                // Method java/lang/String.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: bipush        31
      63: imul
      64: aload_0
      65: invokevirtual #152                // Method isCategory:()Z
      68: dup
      69: ifeq          74
      72: pop
      73: iconst_1
      74: iadd
      75: istore_1
      76: iload_1
      77: bipush        31
      79: imul
      80: aload_0
      81: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      84: invokevirtual #248                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      87: iadd
      88: istore_1
      89: iload_1
      90: bipush        31
      92: imul
      93: aload_0
      94: invokevirtual #158                // Method getLevel:()I
      97: invokestatic  #256                // Method java/lang/Integer.hashCode:(I)I
     100: iadd
     101: istore_1
     102: iload_1
     103: bipush        31
     105: imul
     106: aload_0
     107: invokevirtual #161                // Method getSlowMode:()I
     110: invokestatic  #256                // Method java/lang/Integer.hashCode:(I)I
     113: iadd
     114: istore_1
     115: iload_1
     116: bipush        31
     118: imul
     119: aload_0
     120: invokevirtual #164                // Method getType:()I
     123: invokestatic  #256                // Method java/lang/Integer.hashCode:(I)I
     126: iadd
     127: istore_1
     128: iload_1
     129: bipush        31
     131: imul
     132: aload_0
     133: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
     136: invokevirtual #257                // Method java/lang/Object.hashCode:()I
     139: iadd
     140: istore_1
     141: iload_1
     142: bipush        31
     144: imul
     145: aload_0
     146: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
     149: invokevirtual #257                // Method java/lang/Object.hashCode:()I
     152: iadd
     153: istore_1
     154: iload_1
     155: bipush        31
     157: imul
     158: aload_0
     159: invokevirtual #173                // Method getPermissionSync:()I
     162: invokestatic  #256                // Method java/lang/Integer.hashCode:(I)I
     165: iadd
     166: istore_1
     167: iload_1
     168: bipush        31
     170: imul
     171: aload_0
     172: invokevirtual #176                // Method getCurrentMember:()I
     175: invokestatic  #256                // Method java/lang/Integer.hashCode:(I)I
     178: iadd
     179: istore_1
     180: iload_1
     181: bipush        31
     183: imul
     184: aload_0
     185: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
     188: invokevirtual #251                // Method java/lang/String.hashCode:()I
     191: iadd
     192: istore_1
     193: iload_1
     194: bipush        31
     196: imul
     197: aload_0
     198: invokevirtual #182                // Method getMaximumMember:()I
     201: invokestatic  #256                // Method java/lang/Integer.hashCode:(I)I
     204: iadd
     205: istore_1
     206: iload_1
     207: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/objects/impl/ChannelImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/impl/ChannelImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #140                // Method getName:()Ljava/lang/String;
      41: aload_2
      42: invokevirtual #140                // Method getName:()Ljava/lang/String;
      45: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      57: aload_2
      58: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      61: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      73: aload_2
      74: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      77: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload_0
      86: invokevirtual #149                // Method getTopic:()Ljava/lang/String;
      89: aload_2
      90: invokevirtual #149                // Method getTopic:()Ljava/lang/String;
      93: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifne          101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #152                // Method isCategory:()Z
     105: aload_2
     106: invokevirtual #152                // Method isCategory:()Z
     109: if_icmpeq     114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
     118: aload_2
     119: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
     122: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     125: ifne          130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: invokevirtual #158                // Method getLevel:()I
     134: aload_2
     135: invokevirtual #158                // Method getLevel:()I
     138: if_icmpeq     143
     141: iconst_0
     142: ireturn
     143: aload_0
     144: invokevirtual #161                // Method getSlowMode:()I
     147: aload_2
     148: invokevirtual #161                // Method getSlowMode:()I
     151: if_icmpeq     156
     154: iconst_0
     155: ireturn
     156: aload_0
     157: invokevirtual #164                // Method getType:()I
     160: aload_2
     161: invokevirtual #164                // Method getType:()I
     164: if_icmpeq     169
     167: iconst_0
     168: ireturn
     169: aload_0
     170: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
     173: aload_2
     174: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
     177: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     180: ifne          185
     183: iconst_0
     184: ireturn
     185: aload_0
     186: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
     189: aload_2
     190: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
     193: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     196: ifne          201
     199: iconst_0
     200: ireturn
     201: aload_0
     202: invokevirtual #173                // Method getPermissionSync:()I
     205: aload_2
     206: invokevirtual #173                // Method getPermissionSync:()I
     209: if_icmpeq     214
     212: iconst_0
     213: ireturn
     214: aload_0
     215: invokevirtual #176                // Method getCurrentMember:()I
     218: aload_2
     219: invokevirtual #176                // Method getCurrentMember:()I
     222: if_icmpeq     227
     225: iconst_0
     226: ireturn
     227: aload_0
     228: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
     231: aload_2
     232: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
     235: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     238: ifne          243
     241: iconst_0
     242: ireturn
     243: aload_0
     244: invokevirtual #182                // Method getMaximumMember:()I
     247: aload_2
     248: invokevirtual #182                // Method getMaximumMember:()I
     251: if_icmpeq     256
     254: iconst_0
     255: ireturn
     256: iconst_1
     257: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.objects.impl.ChannelImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc_w         #274                // String self
       4: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: ldc_w         #275                // String output
      11: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_2
      15: ldc_w         #276                // String serialDesc
      18: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_1
      22: aload_2
      23: iconst_0
      24: getstatic     #282                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      27: checkcast     #284                // class kotlinx/serialization/SerializationStrategy
      30: aload_0
      31: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
      34: invokeinterface #290,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      39: aload_1
      40: aload_2
      41: iconst_1
      42: aload_0
      43: invokevirtual #140                // Method getName:()Ljava/lang/String;
      46: invokeinterface #294,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      51: aload_1
      52: aload_2
      53: iconst_2
      54: getstatic     #282                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      57: checkcast     #284                // class kotlinx/serialization/SerializationStrategy
      60: aload_0
      61: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      64: invokeinterface #290,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      69: aload_1
      70: aload_2
      71: iconst_3
      72: getstatic     #282                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      75: checkcast     #284                // class kotlinx/serialization/SerializationStrategy
      78: aload_0
      79: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      82: invokeinterface #290,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      87: aload_1
      88: aload_2
      89: iconst_4
      90: aload_0
      91: invokevirtual #149                // Method getTopic:()Ljava/lang/String;
      94: invokeinterface #294,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      99: aload_1
     100: aload_2
     101: iconst_5
     102: aload_0
     103: invokevirtual #152                // Method isCategory:()Z
     106: invokeinterface #298,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
     111: aload_1
     112: aload_2
     113: bipush        6
     115: getstatic     #282                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     118: checkcast     #284                // class kotlinx/serialization/SerializationStrategy
     121: aload_0
     122: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
     125: invokeinterface #290,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     130: aload_1
     131: aload_2
     132: bipush        7
     134: aload_0
     135: invokevirtual #158                // Method getLevel:()I
     138: invokeinterface #302,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     143: aload_1
     144: aload_2
     145: bipush        8
     147: aload_0
     148: invokevirtual #161                // Method getSlowMode:()I
     151: invokeinterface #302,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     156: aload_1
     157: aload_2
     158: bipush        9
     160: aload_0
     161: invokevirtual #164                // Method getType:()I
     164: invokeinterface #302,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     169: aload_1
     170: aload_2
     171: bipush        10
     173: invokeinterface #306,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     178: ifeq          185
     181: iconst_1
     182: goto          203
     185: aload_0
     186: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
     189: invokestatic  #90                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     192: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     195: ifne          202
     198: iconst_1
     199: goto          203
     202: iconst_0
     203: ifeq          235
     206: aload_1
     207: aload_2
     208: bipush        10
     210: new           #308                // class kotlinx/serialization/internal/ArrayListSerializer
     213: dup
     214: getstatic     #313                // Field love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$$serializer;
     217: checkcast     #315                // class kotlinx/serialization/KSerializer
     220: invokespecial #318                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     223: checkcast     #284                // class kotlinx/serialization/SerializationStrategy
     226: aload_0
     227: invokevirtual #167                // Method getPermissionOverwrites:()Ljava/util/List;
     230: invokeinterface #290,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     235: aload_1
     236: aload_2
     237: bipush        11
     239: invokeinterface #306,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     244: ifeq          251
     247: iconst_1
     248: goto          269
     251: aload_0
     252: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
     255: invokestatic  #90                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     258: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     261: ifne          268
     264: iconst_1
     265: goto          269
     268: iconst_0
     269: ifeq          301
     272: aload_1
     273: aload_2
     274: bipush        11
     276: new           #308                // class kotlinx/serialization/internal/ArrayListSerializer
     279: dup
     280: getstatic     #282                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     283: checkcast     #315                // class kotlinx/serialization/KSerializer
     286: invokespecial #318                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     289: checkcast     #284                // class kotlinx/serialization/SerializationStrategy
     292: aload_0
     293: invokevirtual #170                // Method getPermissionUsers:()Ljava/util/List;
     296: invokeinterface #290,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     301: aload_1
     302: aload_2
     303: bipush        12
     305: aload_0
     306: invokevirtual #173                // Method getPermissionSync:()I
     309: invokeinterface #302,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     314: aload_1
     315: aload_2
     316: bipush        13
     318: invokeinterface #306,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     323: ifeq          330
     326: iconst_1
     327: goto          343
     330: aload_0
     331: invokevirtual #176                // Method getCurrentMember:()I
     334: iconst_m1
     335: if_icmpeq     342
     338: iconst_1
     339: goto          343
     342: iconst_0
     343: ifeq          359
     346: aload_1
     347: aload_2
     348: bipush        13
     350: aload_0
     351: invokevirtual #176                // Method getCurrentMember:()I
     354: invokeinterface #302,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     359: aload_1
     360: aload_2
     361: bipush        14
     363: invokeinterface #306,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     368: ifeq          375
     371: iconst_1
     372: goto          392
     375: aload_0
     376: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
     379: ldc           #92                 // String
     381: invokestatic  #266                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     384: ifne          391
     387: iconst_1
     388: goto          392
     391: iconst_0
     392: ifeq          408
     395: aload_1
     396: aload_2
     397: bipush        14
     399: aload_0
     400: invokevirtual #179                // Method getIcon:()Ljava/lang/String;
     403: invokeinterface #294,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     408: aload_1
     409: aload_2
     410: bipush        15
     412: invokeinterface #306,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     417: ifeq          424
     420: iconst_1
     421: goto          437
     424: aload_0
     425: invokevirtual #182                // Method getMaximumMember:()I
     428: iconst_m1
     429: if_icmpeq     436
     432: iconst_1
     433: goto          437
     436: iconst_0
     437: ifeq          453
     440: aload_1
     441: aload_2
     442: bipush        15
     444: aload_0
     445: invokevirtual #182                // Method getMaximumMember:()I
     448: invokeinterface #302,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     453: return

  public love.forte.simbot.kaiheila.objects.impl.ChannelImpl(int, love.forte.simbot.CharSequenceID, java.lang.String, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, boolean, love.forte.simbot.CharSequenceID, int, int, int, java.util.List, java.util.List, int, int, java.lang.String, int, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: sipush        5119
       3: sipush        5119
       6: iload_1
       7: iand
       8: if_icmpeq     24
      11: iload_1
      12: sipush        5119
      15: getstatic     #335                // Field love/forte/simbot/kaiheila/objects/impl/ChannelImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/ChannelImpl$$serializer;
      18: invokevirtual #339                // Method love/forte/simbot/kaiheila/objects/impl/ChannelImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      21: invokestatic  #345                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      24: aload_0
      25: invokespecial #44                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_2
      30: putfield      #47                 // Field id:Llove/forte/simbot/CharSequenceID;
      33: aload_0
      34: aload_3
      35: putfield      #50                 // Field name:Ljava/lang/String;
      38: aload_0
      39: aload         4
      41: putfield      #52                 // Field userId:Llove/forte/simbot/CharSequenceID;
      44: aload_0
      45: aload         5
      47: putfield      #54                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      50: aload_0
      51: aload         6
      53: putfield      #56                 // Field topic:Ljava/lang/String;
      56: aload_0
      57: iload         7
      59: putfield      #59                 // Field isCategory:Z
      62: aload_0
      63: aload         8
      65: putfield      #61                 // Field parentId:Llove/forte/simbot/CharSequenceID;
      68: aload_0
      69: iload         9
      71: putfield      #64                 // Field level:I
      74: aload_0
      75: iload         10
      77: putfield      #66                 // Field slowMode:I
      80: aload_0
      81: iload         11
      83: putfield      #68                 // Field type:I
      86: iload_1
      87: sipush        1024
      90: iand
      91: ifne          104
      94: aload_0
      95: invokestatic  #90                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      98: putfield      #71                 // Field permissionOverwrites:Ljava/util/List;
     101: goto          110
     104: aload_0
     105: aload         12
     107: putfield      #71                 // Field permissionOverwrites:Ljava/util/List;
     110: iload_1
     111: sipush        2048
     114: iand
     115: ifne          128
     118: aload_0
     119: invokestatic  #90                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     122: putfield      #73                 // Field permissionUsers:Ljava/util/List;
     125: goto          134
     128: aload_0
     129: aload         13
     131: putfield      #73                 // Field permissionUsers:Ljava/util/List;
     134: aload_0
     135: iload         14
     137: putfield      #75                 // Field permissionSync:I
     140: iload_1
     141: sipush        8192
     144: iand
     145: ifne          156
     148: aload_0
     149: iconst_m1
     150: putfield      #77                 // Field currentMember:I
     153: goto          162
     156: aload_0
     157: iload         15
     159: putfield      #77                 // Field currentMember:I
     162: iload_1
     163: sipush        16384
     166: iand
     167: ifne          179
     170: aload_0
     171: ldc           #92                 // String
     173: putfield      #79                 // Field icon:Ljava/lang/String;
     176: goto          185
     179: aload_0
     180: aload         16
     182: putfield      #79                 // Field icon:Ljava/lang/String;
     185: iload_1
     186: ldc           #93                 // int 32768
     188: iand
     189: ifne          200
     192: aload_0
     193: iconst_m1
     194: putfield      #81                 // Field maximumMember:I
     197: goto          206
     200: aload_0
     201: iload         17
     203: putfield      #81                 // Field maximumMember:I
     206: return

  public love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: invokevirtual #137                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #355                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getUserId();
    Code:
       0: aload_0
       1: invokevirtual #143                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #355                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getGuildId();
    Code:
       0: aload_0
       1: invokevirtual #146                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #355                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getParentId();
    Code:
       0: aload_0
       1: invokevirtual #155                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #355                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #358                // class love/forte/simbot/kaiheila/objects/impl/ChannelImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #361                // Method love/forte/simbot/kaiheila/objects/impl/ChannelImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #365                // Field Companion:Llove/forte/simbot/kaiheila/objects/impl/ChannelImpl$Companion;
      11: return
}
