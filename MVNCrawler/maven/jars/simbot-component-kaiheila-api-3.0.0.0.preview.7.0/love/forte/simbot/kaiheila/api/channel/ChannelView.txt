Compiled from "ChannelViewRequest.kt"
public final class love.forte.simbot.kaiheila.api.channel.ChannelView implements love.forte.simbot.kaiheila.objects.Channel {
  public static final love.forte.simbot.kaiheila.api.channel.ChannelView$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final love.forte.simbot.CharSequenceID guildId;

  private final love.forte.simbot.CharSequenceID userId;

  private final love.forte.simbot.CharSequenceID parentId;

  private final java.lang.String name;

  private final java.lang.String topic;

  private final int type;

  private final int level;

  private final int slowMode;

  private final int maximumMember;

  private final boolean isCategory;

  private final java.lang.String serverUrl;

  private final java.util.List<love.forte.simbot.kaiheila.objects.ChannelPermissionOverwrites> permissionOverwrites;

  private final java.util.List<love.forte.simbot.CharSequenceID> permissionUsers;

  private final int permissionSync;

  public love.forte.simbot.kaiheila.api.channel.ChannelView(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, int, int, int, boolean, java.lang.String, java.util.List<? extends love.forte.simbot.kaiheila.objects.ChannelPermissionOverwrites>, java.util.List<love.forte.simbot.CharSequenceID>, int);
    Code:
       0: aload_1
       1: ldc           #27                 // String id
       3: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #34                 // String guildId
       9: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #35                 // String userId
      15: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #36                 // String parentId
      22: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #37                 // String name
      29: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         6
      34: ldc           #38                 // String topic
      36: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         12
      41: ldc           #39                 // String serverUrl
      43: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         13
      48: ldc           #40                 // String permissionOverwrites
      50: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload         14
      55: ldc           #41                 // String permissionUsers
      57: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      60: aload_0
      61: invokespecial #44                 // Method java/lang/Object."<init>":()V
      64: aload_0
      65: aload_1
      66: putfield      #47                 // Field id:Llove/forte/simbot/CharSequenceID;
      69: aload_0
      70: aload_2
      71: putfield      #49                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      74: aload_0
      75: aload_3
      76: putfield      #51                 // Field userId:Llove/forte/simbot/CharSequenceID;
      79: aload_0
      80: aload         4
      82: putfield      #53                 // Field parentId:Llove/forte/simbot/CharSequenceID;
      85: aload_0
      86: aload         5
      88: putfield      #56                 // Field name:Ljava/lang/String;
      91: aload_0
      92: aload         6
      94: putfield      #58                 // Field topic:Ljava/lang/String;
      97: aload_0
      98: iload         7
     100: putfield      #61                 // Field type:I
     103: aload_0
     104: iload         8
     106: putfield      #63                 // Field level:I
     109: aload_0
     110: iload         9
     112: putfield      #65                 // Field slowMode:I
     115: aload_0
     116: iload         10
     118: putfield      #67                 // Field maximumMember:I
     121: aload_0
     122: iload         11
     124: putfield      #70                 // Field isCategory:Z
     127: aload_0
     128: aload         12
     130: putfield      #72                 // Field serverUrl:Ljava/lang/String;
     133: aload_0
     134: aload         13
     136: putfield      #75                 // Field permissionOverwrites:Ljava/util/List;
     139: aload_0
     140: aload         14
     142: putfield      #77                 // Field permissionUsers:Ljava/util/List;
     145: aload_0
     146: iload         15
     148: putfield      #79                 // Field permissionSync:I
     151: return

  public love.forte.simbot.kaiheila.api.channel.ChannelView(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, int, int, int, boolean, java.lang.String, java.util.List, java.util.List, int, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         16
       2: sipush        4096
       5: iand
       6: ifeq          14
       9: invokestatic  #88                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      12: astore        13
      14: iload         16
      16: sipush        8192
      19: iand
      20: ifeq          28
      23: invokestatic  #88                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
      26: astore        14
      28: iload         16
      30: sipush        16384
      33: iand
      34: ifeq          40
      37: iconst_0
      38: istore        15
      40: aload_0
      41: aload_1
      42: aload_2
      43: aload_3
      44: aload         4
      46: aload         5
      48: aload         6
      50: iload         7
      52: iload         8
      54: iload         9
      56: iload         10
      58: iload         11
      60: aload         12
      62: aload         13
      64: aload         14
      66: iload         15
      68: invokespecial #90                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;IIIIZLjava/lang/String;Ljava/util/List;Ljava/util/List;I)V
      71: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #47                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public love.forte.simbot.CharSequenceID getGuildId();
    Code:
       0: aload_0
       1: getfield      #49                 // Field guildId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getGuildId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getUserId();
    Code:
       0: aload_0
       1: getfield      #51                 // Field userId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getUserId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getParentId();
    Code:
       0: aload_0
       1: getfield      #53                 // Field parentId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getParentId$annotations();
    Code:
       0: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #56                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getTopic();
    Code:
       0: aload_0
       1: getfield      #58                 // Field topic:Ljava/lang/String;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #61                 // Field type:I
       4: ireturn

  public int getLevel();
    Code:
       0: aload_0
       1: getfield      #63                 // Field level:I
       4: ireturn

  public int getSlowMode();
    Code:
       0: aload_0
       1: getfield      #65                 // Field slowMode:I
       4: ireturn

  public static void getSlowMode$annotations();
    Code:
       0: return

  public int getMaximumMember();
    Code:
       0: aload_0
       1: getfield      #67                 // Field maximumMember:I
       4: ireturn

  public static void getMaximumMember$annotations();
    Code:
       0: return

  public boolean isCategory();
    Code:
       0: aload_0
       1: getfield      #70                 // Field isCategory:Z
       4: ireturn

  public static void isCategory$annotations();
    Code:
       0: return

  public final java.lang.String getServerUrl();
    Code:
       0: aload_0
       1: getfield      #72                 // Field serverUrl:Ljava/lang/String;
       4: areturn

  public static void getServerUrl$annotations();
    Code:
       0: return

  public java.util.List<love.forte.simbot.kaiheila.objects.ChannelPermissionOverwrites> getPermissionOverwrites();
    Code:
       0: aload_0
       1: getfield      #75                 // Field permissionOverwrites:Ljava/util/List;
       4: areturn

  public static void getPermissionOverwrites$annotations();
    Code:
       0: return

  public java.util.List<love.forte.simbot.CharSequenceID> getPermissionUsers();
    Code:
       0: aload_0
       1: getfield      #77                 // Field permissionUsers:Ljava/util/List;
       4: areturn

  public static void getPermissionUsers$annotations();
    Code:
       0: return

  public int getPermissionSync();
    Code:
       0: aload_0
       1: getfield      #79                 // Field permissionSync:I
       4: ireturn

  public static void getPermissionSync$annotations();
    Code:
       0: return

  public int getCurrentMember();
    Code:
       0: iconst_m1
       1: ireturn

  public java.lang.String getIcon();
    Code:
       0: ldc           #136                // String
       2: areturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component2();
    Code:
       0: aload_0
       1: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component3();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component4();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component5();
    Code:
       0: aload_0
       1: invokevirtual #151                // Method getName:()Ljava/lang/String;
       4: areturn

  public final java.lang.String component6();
    Code:
       0: aload_0
       1: invokevirtual #154                // Method getTopic:()Ljava/lang/String;
       4: areturn

  public final int component7();
    Code:
       0: aload_0
       1: invokevirtual #157                // Method getType:()I
       4: ireturn

  public final int component8();
    Code:
       0: aload_0
       1: invokevirtual #160                // Method getLevel:()I
       4: ireturn

  public final int component9();
    Code:
       0: aload_0
       1: invokevirtual #163                // Method getSlowMode:()I
       4: ireturn

  public final int component10();
    Code:
       0: aload_0
       1: invokevirtual #166                // Method getMaximumMember:()I
       4: ireturn

  public final boolean component11();
    Code:
       0: aload_0
       1: invokevirtual #169                // Method isCategory:()Z
       4: ireturn

  public final java.lang.String component12();
    Code:
       0: aload_0
       1: getfield      #72                 // Field serverUrl:Ljava/lang/String;
       4: areturn

  public final java.util.List<love.forte.simbot.kaiheila.objects.ChannelPermissionOverwrites> component13();
    Code:
       0: aload_0
       1: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
       4: areturn

  public final java.util.List<love.forte.simbot.CharSequenceID> component14();
    Code:
       0: aload_0
       1: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
       4: areturn

  public final int component15();
    Code:
       0: aload_0
       1: invokevirtual #179                // Method getPermissionSync:()I
       4: ireturn

  public final love.forte.simbot.kaiheila.api.channel.ChannelView copy(love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, int, int, int, boolean, java.lang.String, java.util.List<? extends love.forte.simbot.kaiheila.objects.ChannelPermissionOverwrites>, java.util.List<love.forte.simbot.CharSequenceID>, int);
    Code:
       0: aload_1
       1: ldc           #27                 // String id
       3: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #34                 // String guildId
       9: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #35                 // String userId
      15: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #36                 // String parentId
      22: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #37                 // String name
      29: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         6
      34: ldc           #38                 // String topic
      36: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         12
      41: ldc           #39                 // String serverUrl
      43: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         13
      48: ldc           #40                 // String permissionOverwrites
      50: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload         14
      55: ldc           #41                 // String permissionUsers
      57: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      60: new           #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelView
      63: dup
      64: aload_1
      65: aload_2
      66: aload_3
      67: aload         4
      69: aload         5
      71: aload         6
      73: iload         7
      75: iload         8
      77: iload         9
      79: iload         10
      81: iload         11
      83: aload         12
      85: aload         13
      87: aload         14
      89: iload         15
      91: invokespecial #90                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;IIIIZLjava/lang/String;Ljava/util/List;Ljava/util/List;I)V
      94: areturn

  public static love.forte.simbot.kaiheila.api.channel.ChannelView copy$default(love.forte.simbot.kaiheila.api.channel.ChannelView, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, int, int, int, boolean, java.lang.String, java.util.List, java.util.List, int, int, java.lang.Object);
    Code:
       0: iload         16
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         16
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      23: astore_2
      24: iload         16
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      35: astore_3
      36: iload         16
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      48: astore        4
      50: iload         16
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #151                // Method getName:()Ljava/lang/String;
      62: astore        5
      64: iload         16
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #154                // Method getTopic:()Ljava/lang/String;
      76: astore        6
      78: iload         16
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #157                // Method getType:()I
      90: istore        7
      92: iload         16
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: invokevirtual #160                // Method getLevel:()I
     105: istore        8
     107: iload         16
     109: sipush        256
     112: iand
     113: ifeq          122
     116: aload_0
     117: invokevirtual #163                // Method getSlowMode:()I
     120: istore        9
     122: iload         16
     124: sipush        512
     127: iand
     128: ifeq          137
     131: aload_0
     132: invokevirtual #166                // Method getMaximumMember:()I
     135: istore        10
     137: iload         16
     139: sipush        1024
     142: iand
     143: ifeq          152
     146: aload_0
     147: invokevirtual #169                // Method isCategory:()Z
     150: istore        11
     152: iload         16
     154: sipush        2048
     157: iand
     158: ifeq          167
     161: aload_0
     162: getfield      #72                 // Field serverUrl:Ljava/lang/String;
     165: astore        12
     167: iload         16
     169: sipush        4096
     172: iand
     173: ifeq          182
     176: aload_0
     177: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
     180: astore        13
     182: iload         16
     184: sipush        8192
     187: iand
     188: ifeq          197
     191: aload_0
     192: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
     195: astore        14
     197: iload         16
     199: sipush        16384
     202: iand
     203: ifeq          212
     206: aload_0
     207: invokevirtual #179                // Method getPermissionSync:()I
     210: istore        15
     212: aload_0
     213: aload_1
     214: aload_2
     215: aload_3
     216: aload         4
     218: aload         5
     220: aload         6
     222: iload         7
     224: iload         8
     226: iload         9
     228: iload         10
     230: iload         11
     232: aload         12
     234: aload         13
     236: aload         14
     238: iload         15
     240: invokevirtual #186                // Method copy:(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;IIIIZLjava/lang/String;Ljava/util/List;Ljava/util/List;I)Llove/forte/simbot/kaiheila/api/channel/ChannelView;
     243: areturn

  public java.lang.String toString();
    Code:
       0: new           #189                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #190                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #192                // String ChannelView(id=
      11: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
      18: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #201                // String , guildId=
      23: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      30: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #203                // String , userId=
      35: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #205                // String , parentId=
      47: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      54: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #207                // String , name=
      59: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #151                // Method getName:()Ljava/lang/String;
      66: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #209                // String , topic=
      71: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #154                // Method getTopic:()Ljava/lang/String;
      78: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #211                // String , type=
      83: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #157                // Method getType:()I
      90: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      93: ldc           #216                // String , level=
      95: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: invokevirtual #160                // Method getLevel:()I
     102: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: ldc           #218                // String , slowMode=
     107: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokevirtual #163                // Method getSlowMode:()I
     114: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: ldc           #220                // String , maximumMember=
     119: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: invokevirtual #166                // Method getMaximumMember:()I
     126: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: ldc           #222                // String , isCategory=
     131: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: invokevirtual #169                // Method isCategory:()Z
     138: invokevirtual #225                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     141: ldc           #227                // String , serverUrl=
     143: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_1
     148: aload_0
     149: getfield      #72                 // Field serverUrl:Ljava/lang/String;
     152: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: ldc           #229                // String , permissionOverwrites=
     157: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_0
     161: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
     164: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     167: ldc           #231                // String , permissionUsers=
     169: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_0
     173: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
     176: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     179: ldc           #233                // String , permissionSync=
     181: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_0
     185: invokevirtual #179                // Method getPermissionSync:()I
     188: invokevirtual #214                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     191: bipush        41
     193: invokevirtual #236                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     196: pop
     197: aload_1
     198: invokevirtual #238                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     201: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #243                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #243                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      29: invokevirtual #243                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #243                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #151                // Method getName:()Ljava/lang/String;
      55: invokevirtual #246                // Method java/lang/String.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: bipush        31
      63: imul
      64: aload_0
      65: invokevirtual #154                // Method getTopic:()Ljava/lang/String;
      68: invokevirtual #246                // Method java/lang/String.hashCode:()I
      71: iadd
      72: istore_1
      73: iload_1
      74: bipush        31
      76: imul
      77: aload_0
      78: invokevirtual #157                // Method getType:()I
      81: invokestatic  #251                // Method java/lang/Integer.hashCode:(I)I
      84: iadd
      85: istore_1
      86: iload_1
      87: bipush        31
      89: imul
      90: aload_0
      91: invokevirtual #160                // Method getLevel:()I
      94: invokestatic  #251                // Method java/lang/Integer.hashCode:(I)I
      97: iadd
      98: istore_1
      99: iload_1
     100: bipush        31
     102: imul
     103: aload_0
     104: invokevirtual #163                // Method getSlowMode:()I
     107: invokestatic  #251                // Method java/lang/Integer.hashCode:(I)I
     110: iadd
     111: istore_1
     112: iload_1
     113: bipush        31
     115: imul
     116: aload_0
     117: invokevirtual #166                // Method getMaximumMember:()I
     120: invokestatic  #251                // Method java/lang/Integer.hashCode:(I)I
     123: iadd
     124: istore_1
     125: iload_1
     126: bipush        31
     128: imul
     129: aload_0
     130: invokevirtual #169                // Method isCategory:()Z
     133: dup
     134: ifeq          139
     137: pop
     138: iconst_1
     139: iadd
     140: istore_1
     141: iload_1
     142: bipush        31
     144: imul
     145: aload_0
     146: getfield      #72                 // Field serverUrl:Ljava/lang/String;
     149: invokevirtual #246                // Method java/lang/String.hashCode:()I
     152: iadd
     153: istore_1
     154: iload_1
     155: bipush        31
     157: imul
     158: aload_0
     159: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
     162: invokevirtual #252                // Method java/lang/Object.hashCode:()I
     165: iadd
     166: istore_1
     167: iload_1
     168: bipush        31
     170: imul
     171: aload_0
     172: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
     175: invokevirtual #252                // Method java/lang/Object.hashCode:()I
     178: iadd
     179: istore_1
     180: iload_1
     181: bipush        31
     183: imul
     184: aload_0
     185: invokevirtual #179                // Method getPermissionSync:()I
     188: invokestatic  #251                // Method java/lang/Integer.hashCode:(I)I
     191: iadd
     192: istore_1
     193: iload_1
     194: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelView
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelView
      20: astore_2
      21: aload_0
      22: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      41: aload_2
      42: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      45: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      57: aload_2
      58: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      61: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      73: aload_2
      74: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      77: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload_0
      86: invokevirtual #151                // Method getName:()Ljava/lang/String;
      89: aload_2
      90: invokevirtual #151                // Method getName:()Ljava/lang/String;
      93: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifne          101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #154                // Method getTopic:()Ljava/lang/String;
     105: aload_2
     106: invokevirtual #154                // Method getTopic:()Ljava/lang/String;
     109: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     112: ifne          117
     115: iconst_0
     116: ireturn
     117: aload_0
     118: invokevirtual #157                // Method getType:()I
     121: aload_2
     122: invokevirtual #157                // Method getType:()I
     125: if_icmpeq     130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: invokevirtual #160                // Method getLevel:()I
     134: aload_2
     135: invokevirtual #160                // Method getLevel:()I
     138: if_icmpeq     143
     141: iconst_0
     142: ireturn
     143: aload_0
     144: invokevirtual #163                // Method getSlowMode:()I
     147: aload_2
     148: invokevirtual #163                // Method getSlowMode:()I
     151: if_icmpeq     156
     154: iconst_0
     155: ireturn
     156: aload_0
     157: invokevirtual #166                // Method getMaximumMember:()I
     160: aload_2
     161: invokevirtual #166                // Method getMaximumMember:()I
     164: if_icmpeq     169
     167: iconst_0
     168: ireturn
     169: aload_0
     170: invokevirtual #169                // Method isCategory:()Z
     173: aload_2
     174: invokevirtual #169                // Method isCategory:()Z
     177: if_icmpeq     182
     180: iconst_0
     181: ireturn
     182: aload_0
     183: getfield      #72                 // Field serverUrl:Ljava/lang/String;
     186: aload_2
     187: getfield      #72                 // Field serverUrl:Ljava/lang/String;
     190: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     193: ifne          198
     196: iconst_0
     197: ireturn
     198: aload_0
     199: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
     202: aload_2
     203: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
     206: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     209: ifne          214
     212: iconst_0
     213: ireturn
     214: aload_0
     215: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
     218: aload_2
     219: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
     222: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     225: ifne          230
     228: iconst_0
     229: ireturn
     230: aload_0
     231: invokevirtual #179                // Method getPermissionSync:()I
     234: aload_2
     235: invokevirtual #179                // Method getPermissionSync:()I
     238: if_icmpeq     243
     241: iconst_0
     242: ireturn
     243: iconst_1
     244: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.api.channel.ChannelView, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc_w         #269                // String self
       4: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: ldc_w         #270                // String output
      11: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_2
      15: ldc_w         #271                // String serialDesc
      18: invokestatic  #33                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_1
      22: aload_2
      23: iconst_0
      24: getstatic     #277                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      27: checkcast     #279                // class kotlinx/serialization/SerializationStrategy
      30: aload_0
      31: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
      34: invokeinterface #285,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      39: aload_1
      40: aload_2
      41: iconst_1
      42: getstatic     #277                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      45: checkcast     #279                // class kotlinx/serialization/SerializationStrategy
      48: aload_0
      49: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
      52: invokeinterface #285,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      57: aload_1
      58: aload_2
      59: iconst_2
      60: getstatic     #277                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      63: checkcast     #279                // class kotlinx/serialization/SerializationStrategy
      66: aload_0
      67: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
      70: invokeinterface #285,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      75: aload_1
      76: aload_2
      77: iconst_3
      78: getstatic     #277                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      81: checkcast     #279                // class kotlinx/serialization/SerializationStrategy
      84: aload_0
      85: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
      88: invokeinterface #285,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      93: aload_1
      94: aload_2
      95: iconst_4
      96: aload_0
      97: invokevirtual #151                // Method getName:()Ljava/lang/String;
     100: invokeinterface #289,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     105: aload_1
     106: aload_2
     107: iconst_5
     108: aload_0
     109: invokevirtual #154                // Method getTopic:()Ljava/lang/String;
     112: invokeinterface #289,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     117: aload_1
     118: aload_2
     119: bipush        6
     121: aload_0
     122: invokevirtual #157                // Method getType:()I
     125: invokeinterface #293,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     130: aload_1
     131: aload_2
     132: bipush        7
     134: aload_0
     135: invokevirtual #160                // Method getLevel:()I
     138: invokeinterface #293,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     143: aload_1
     144: aload_2
     145: bipush        8
     147: aload_0
     148: invokevirtual #163                // Method getSlowMode:()I
     151: invokeinterface #293,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     156: aload_1
     157: aload_2
     158: bipush        9
     160: aload_0
     161: invokevirtual #166                // Method getMaximumMember:()I
     164: invokeinterface #293,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     169: aload_1
     170: aload_2
     171: bipush        10
     173: aload_0
     174: invokevirtual #169                // Method isCategory:()Z
     177: invokeinterface #297,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
     182: aload_1
     183: aload_2
     184: bipush        11
     186: aload_0
     187: getfield      #72                 // Field serverUrl:Ljava/lang/String;
     190: invokeinterface #289,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     195: aload_1
     196: aload_2
     197: bipush        12
     199: invokeinterface #301,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     204: ifeq          211
     207: iconst_1
     208: goto          229
     211: aload_0
     212: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
     215: invokestatic  #88                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     218: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     221: ifne          228
     224: iconst_1
     225: goto          229
     228: iconst_0
     229: ifeq          275
     232: aload_1
     233: aload_2
     234: bipush        12
     236: new           #303                // class kotlinx/serialization/internal/ArrayListSerializer
     239: dup
     240: new           #305                // class kotlinx/serialization/PolymorphicSerializer
     243: dup
     244: ldc_w         #307                // class love/forte/simbot/kaiheila/objects/ChannelPermissionOverwrites
     247: invokestatic  #313                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     250: iconst_0
     251: anewarray     #315                // class java/lang/annotation/Annotation
     254: invokespecial #318                // Method kotlinx/serialization/PolymorphicSerializer."<init>":(Lkotlin/reflect/KClass;[Ljava/lang/annotation/Annotation;)V
     257: checkcast     #320                // class kotlinx/serialization/KSerializer
     260: invokespecial #323                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     263: checkcast     #279                // class kotlinx/serialization/SerializationStrategy
     266: aload_0
     267: invokevirtual #173                // Method getPermissionOverwrites:()Ljava/util/List;
     270: invokeinterface #285,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     275: aload_1
     276: aload_2
     277: bipush        13
     279: invokeinterface #301,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     284: ifeq          291
     287: iconst_1
     288: goto          309
     291: aload_0
     292: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
     295: invokestatic  #88                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     298: invokestatic  #261                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     301: ifne          308
     304: iconst_1
     305: goto          309
     308: iconst_0
     309: ifeq          341
     312: aload_1
     313: aload_2
     314: bipush        13
     316: new           #303                // class kotlinx/serialization/internal/ArrayListSerializer
     319: dup
     320: getstatic     #277                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     323: checkcast     #320                // class kotlinx/serialization/KSerializer
     326: invokespecial #323                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     329: checkcast     #279                // class kotlinx/serialization/SerializationStrategy
     332: aload_0
     333: invokevirtual #176                // Method getPermissionUsers:()Ljava/util/List;
     336: invokeinterface #285,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     341: aload_1
     342: aload_2
     343: bipush        14
     345: invokeinterface #301,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     350: ifeq          357
     353: iconst_1
     354: goto          369
     357: aload_0
     358: invokevirtual #179                // Method getPermissionSync:()I
     361: ifeq          368
     364: iconst_1
     365: goto          369
     368: iconst_0
     369: ifeq          385
     372: aload_1
     373: aload_2
     374: bipush        14
     376: aload_0
     377: invokevirtual #179                // Method getPermissionSync:()I
     380: invokeinterface #293,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     385: return

  public love.forte.simbot.kaiheila.api.channel.ChannelView(int, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, int, int, int, int, boolean, java.lang.String, java.util.List, java.util.List, int, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: sipush        4095
       3: sipush        4095
       6: iload_1
       7: iand
       8: if_icmpeq     24
      11: iload_1
      12: sipush        4095
      15: getstatic     #340                // Field love/forte/simbot/kaiheila/api/channel/ChannelView$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/channel/ChannelView$$serializer;
      18: invokevirtual #344                // Method love/forte/simbot/kaiheila/api/channel/ChannelView$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      21: invokestatic  #350                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      24: aload_0
      25: invokespecial #44                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_2
      30: putfield      #47                 // Field id:Llove/forte/simbot/CharSequenceID;
      33: aload_0
      34: aload_3
      35: putfield      #49                 // Field guildId:Llove/forte/simbot/CharSequenceID;
      38: aload_0
      39: aload         4
      41: putfield      #51                 // Field userId:Llove/forte/simbot/CharSequenceID;
      44: aload_0
      45: aload         5
      47: putfield      #53                 // Field parentId:Llove/forte/simbot/CharSequenceID;
      50: aload_0
      51: aload         6
      53: putfield      #56                 // Field name:Ljava/lang/String;
      56: aload_0
      57: aload         7
      59: putfield      #58                 // Field topic:Ljava/lang/String;
      62: aload_0
      63: iload         8
      65: putfield      #61                 // Field type:I
      68: aload_0
      69: iload         9
      71: putfield      #63                 // Field level:I
      74: aload_0
      75: iload         10
      77: putfield      #65                 // Field slowMode:I
      80: aload_0
      81: iload         11
      83: putfield      #67                 // Field maximumMember:I
      86: aload_0
      87: iload         12
      89: putfield      #70                 // Field isCategory:Z
      92: aload_0
      93: aload         13
      95: putfield      #72                 // Field serverUrl:Ljava/lang/String;
      98: iload_1
      99: sipush        4096
     102: iand
     103: ifne          116
     106: aload_0
     107: invokestatic  #88                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     110: putfield      #75                 // Field permissionOverwrites:Ljava/util/List;
     113: goto          122
     116: aload_0
     117: aload         14
     119: putfield      #75                 // Field permissionOverwrites:Ljava/util/List;
     122: iload_1
     123: sipush        8192
     126: iand
     127: ifne          140
     130: aload_0
     131: invokestatic  #88                 // Method kotlin/collections/CollectionsKt.emptyList:()Ljava/util/List;
     134: putfield      #77                 // Field permissionUsers:Ljava/util/List;
     137: goto          146
     140: aload_0
     141: aload         15
     143: putfield      #77                 // Field permissionUsers:Ljava/util/List;
     146: iload_1
     147: sipush        16384
     150: iand
     151: ifne          162
     154: aload_0
     155: iconst_0
     156: putfield      #79                 // Field permissionSync:I
     159: goto          168
     162: aload_0
     163: iload         16
     165: putfield      #79                 // Field permissionSync:I
     168: return

  public love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: invokevirtual #139                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #360                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getGuildId();
    Code:
       0: aload_0
       1: invokevirtual #142                // Method getGuildId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #360                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getUserId();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getUserId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #360                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getParentId();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method getParentId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #360                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #363                // class love/forte/simbot/kaiheila/api/channel/ChannelView$Companion
       3: dup
       4: aconst_null
       5: invokespecial #366                // Method love/forte/simbot/kaiheila/api/channel/ChannelView$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #370                // Field Companion:Llove/forte/simbot/kaiheila/api/channel/ChannelView$Companion;
      11: return
}
