Compiled from "UserChatViewRequest.kt"
public final class love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl implements love.forte.simbot.kaiheila.api.userchat.UserChatView {
  public static final love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID code;

  private final love.forte.simbot.Timestamp lastReadTime;

  private final love.forte.simbot.Timestamp latestMsgTime;

  private final int unreadCount;

  private final boolean isFriend;

  private final boolean isBlocked;

  private final boolean isTargetBlocked;

  private final love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfoImpl targetInfo;

  public love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl(love.forte.simbot.CharSequenceID, love.forte.simbot.Timestamp, love.forte.simbot.Timestamp, int, boolean, boolean, boolean, love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfoImpl);
    Code:
       0: aload_1
       1: ldc           #18                 // String code
       3: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #25                 // String lastReadTime
       9: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #26                 // String latestMsgTime
      15: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         8
      20: ldc           #27                 // String targetInfo
      22: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload_0
      26: invokespecial #30                 // Method java/lang/Object."<init>":()V
      29: aload_0
      30: aload_1
      31: putfield      #33                 // Field code:Llove/forte/simbot/CharSequenceID;
      34: aload_0
      35: aload_2
      36: putfield      #36                 // Field lastReadTime:Llove/forte/simbot/Timestamp;
      39: aload_0
      40: aload_3
      41: putfield      #38                 // Field latestMsgTime:Llove/forte/simbot/Timestamp;
      44: aload_0
      45: iload         4
      47: putfield      #41                 // Field unreadCount:I
      50: aload_0
      51: iload         5
      53: putfield      #44                 // Field isFriend:Z
      56: aload_0
      57: iload         6
      59: putfield      #46                 // Field isBlocked:Z
      62: aload_0
      63: iload         7
      65: putfield      #48                 // Field isTargetBlocked:Z
      68: aload_0
      69: aload         8
      71: putfield      #51                 // Field targetInfo:Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
      74: return

  public love.forte.simbot.CharSequenceID getCode();
    Code:
       0: aload_0
       1: getfield      #33                 // Field code:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public love.forte.simbot.Timestamp getLastReadTime();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lastReadTime:Llove/forte/simbot/Timestamp;
       4: areturn

  public static void getLastReadTime$annotations();
    Code:
       0: return

  public love.forte.simbot.Timestamp getLatestMsgTime();
    Code:
       0: aload_0
       1: getfield      #38                 // Field latestMsgTime:Llove/forte/simbot/Timestamp;
       4: areturn

  public static void getLatestMsgTime$annotations();
    Code:
       0: return

  public int getUnreadCount();
    Code:
       0: aload_0
       1: getfield      #41                 // Field unreadCount:I
       4: ireturn

  public static void getUnreadCount$annotations();
    Code:
       0: return

  public boolean isFriend();
    Code:
       0: aload_0
       1: getfield      #44                 // Field isFriend:Z
       4: ireturn

  public static void isFriend$annotations();
    Code:
       0: return

  public boolean isBlocked();
    Code:
       0: aload_0
       1: getfield      #46                 // Field isBlocked:Z
       4: ireturn

  public static void isBlocked$annotations();
    Code:
       0: return

  public boolean isTargetBlocked();
    Code:
       0: aload_0
       1: getfield      #48                 // Field isTargetBlocked:Z
       4: ireturn

  public static void isTargetBlocked$annotations();
    Code:
       0: return

  public love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfoImpl getTargetInfo();
    Code:
       0: aload_0
       1: getfield      #51                 // Field targetInfo:Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
       4: areturn

  public static void getTargetInfo$annotations();
    Code:
       0: return

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.Timestamp component2();
    Code:
       0: aload_0
       1: invokevirtual #85                 // Method getLastReadTime:()Llove/forte/simbot/Timestamp;
       4: areturn

  public final love.forte.simbot.Timestamp component3();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method getLatestMsgTime:()Llove/forte/simbot/Timestamp;
       4: areturn

  public final int component4();
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method getUnreadCount:()I
       4: ireturn

  public final boolean component5();
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method isFriend:()Z
       4: ireturn

  public final boolean component6();
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method isBlocked:()Z
       4: ireturn

  public final boolean component7();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method isTargetBlocked:()Z
       4: ireturn

  public final love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfoImpl component8();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
       4: areturn

  public final love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl copy(love.forte.simbot.CharSequenceID, love.forte.simbot.Timestamp, love.forte.simbot.Timestamp, int, boolean, boolean, boolean, love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfoImpl);
    Code:
       0: aload_1
       1: ldc           #18                 // String code
       3: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #25                 // String lastReadTime
       9: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #26                 // String latestMsgTime
      15: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         8
      20: ldc           #27                 // String targetInfo
      22: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: new           #2                  // class love/forte/simbot/kaiheila/api/userchat/UserChatViewImpl
      28: dup
      29: aload_1
      30: aload_2
      31: aload_3
      32: iload         4
      34: iload         5
      36: iload         6
      38: iload         7
      40: aload         8
      42: invokespecial #107                // Method "<init>":(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/Timestamp;Llove/forte/simbot/Timestamp;IZZZLlove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;)V
      45: areturn

  public static love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl copy$default(love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl, love.forte.simbot.CharSequenceID, love.forte.simbot.Timestamp, love.forte.simbot.Timestamp, int, boolean, boolean, boolean, love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfoImpl, int, java.lang.Object);
    Code:
       0: iload         9
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         9
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #85                 // Method getLastReadTime:()Llove/forte/simbot/Timestamp;
      23: astore_2
      24: iload         9
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #88                 // Method getLatestMsgTime:()Llove/forte/simbot/Timestamp;
      35: astore_3
      36: iload         9
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #91                 // Method getUnreadCount:()I
      48: istore        4
      50: iload         9
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #94                 // Method isFriend:()Z
      62: istore        5
      64: iload         9
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #97                 // Method isBlocked:()Z
      76: istore        6
      78: iload         9
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #100                // Method isTargetBlocked:()Z
      90: istore        7
      92: iload         9
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
     105: astore        8
     107: aload_0
     108: aload_1
     109: aload_2
     110: aload_3
     111: iload         4
     113: iload         5
     115: iload         6
     117: iload         7
     119: aload         8
     121: invokevirtual #111                // Method copy:(Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/Timestamp;Llove/forte/simbot/Timestamp;IZZZLlove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;)Llove/forte/simbot/kaiheila/api/userchat/UserChatViewImpl;
     124: areturn

  public java.lang.String toString();
    Code:
       0: new           #115                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #116                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #118                // String UserChatViewImpl(code=
       9: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #127                // String , lastReadTime=
      21: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #85                 // Method getLastReadTime:()Llove/forte/simbot/Timestamp;
      28: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #129                // String , latestMsgTime=
      33: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #88                 // Method getLatestMsgTime:()Llove/forte/simbot/Timestamp;
      40: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #131                // String , unreadCount=
      45: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #91                 // Method getUnreadCount:()I
      52: invokevirtual #134                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: ldc           #136                // String , isFriend=
      57: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #94                 // Method isFriend:()Z
      64: invokevirtual #139                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      67: ldc           #141                // String , isBlocked=
      69: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #97                 // Method isBlocked:()Z
      76: invokevirtual #139                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      79: ldc           #143                // String , isTargetBlocked=
      81: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #100                // Method isTargetBlocked:()Z
      88: invokevirtual #139                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      91: ldc           #145                // String , targetInfo=
      93: invokevirtual #122                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
     100: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: bipush        41
     105: invokevirtual #148                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     108: invokevirtual #150                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #155                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #85                 // Method getLastReadTime:()Llove/forte/simbot/Timestamp;
      16: invokevirtual #158                // Method love/forte/simbot/Timestamp.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #88                 // Method getLatestMsgTime:()Llove/forte/simbot/Timestamp;
      29: invokevirtual #158                // Method love/forte/simbot/Timestamp.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #91                 // Method getUnreadCount:()I
      42: invokestatic  #163                // Method java/lang/Integer.hashCode:(I)I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #94                 // Method isFriend:()Z
      55: dup
      56: ifeq          61
      59: pop
      60: iconst_1
      61: iadd
      62: istore_1
      63: iload_1
      64: bipush        31
      66: imul
      67: aload_0
      68: invokevirtual #97                 // Method isBlocked:()Z
      71: dup
      72: ifeq          77
      75: pop
      76: iconst_1
      77: iadd
      78: istore_1
      79: iload_1
      80: bipush        31
      82: imul
      83: aload_0
      84: invokevirtual #100                // Method isTargetBlocked:()Z
      87: dup
      88: ifeq          93
      91: pop
      92: iconst_1
      93: iadd
      94: istore_1
      95: iload_1
      96: bipush        31
      98: imul
      99: aload_0
     100: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
     103: invokevirtual #166                // Method love/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl.hashCode:()I
     106: iadd
     107: istore_1
     108: iload_1
     109: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/api/userchat/UserChatViewImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/api/userchat/UserChatViewImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #175                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #85                 // Method getLastReadTime:()Llove/forte/simbot/Timestamp;
      41: aload_2
      42: invokevirtual #85                 // Method getLastReadTime:()Llove/forte/simbot/Timestamp;
      45: invokestatic  #175                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #88                 // Method getLatestMsgTime:()Llove/forte/simbot/Timestamp;
      57: aload_2
      58: invokevirtual #88                 // Method getLatestMsgTime:()Llove/forte/simbot/Timestamp;
      61: invokestatic  #175                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #91                 // Method getUnreadCount:()I
      73: aload_2
      74: invokevirtual #91                 // Method getUnreadCount:()I
      77: if_icmpeq     82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: invokevirtual #94                 // Method isFriend:()Z
      86: aload_2
      87: invokevirtual #94                 // Method isFriend:()Z
      90: if_icmpeq     95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: invokevirtual #97                 // Method isBlocked:()Z
      99: aload_2
     100: invokevirtual #97                 // Method isBlocked:()Z
     103: if_icmpeq     108
     106: iconst_0
     107: ireturn
     108: aload_0
     109: invokevirtual #100                // Method isTargetBlocked:()Z
     112: aload_2
     113: invokevirtual #100                // Method isTargetBlocked:()Z
     116: if_icmpeq     121
     119: iconst_0
     120: ireturn
     121: aload_0
     122: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
     125: aload_2
     126: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
     129: invokestatic  #175                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     132: ifne          137
     135: iconst_0
     136: ireturn
     137: iconst_1
     138: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #183                // String self
       3: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #184                // String output
       9: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #185                // String serialDesc
      15: invokestatic  #24                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #191                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #193                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #199,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: getstatic     #204                // Field love/forte/simbot/TimestampSerializer.INSTANCE:Llove/forte/simbot/TimestampSerializer;
      42: checkcast     #193                // class kotlinx/serialization/SerializationStrategy
      45: aload_0
      46: invokevirtual #85                 // Method getLastReadTime:()Llove/forte/simbot/Timestamp;
      49: invokeinterface #199,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      54: aload_1
      55: aload_2
      56: iconst_2
      57: getstatic     #204                // Field love/forte/simbot/TimestampSerializer.INSTANCE:Llove/forte/simbot/TimestampSerializer;
      60: checkcast     #193                // class kotlinx/serialization/SerializationStrategy
      63: aload_0
      64: invokevirtual #88                 // Method getLatestMsgTime:()Llove/forte/simbot/Timestamp;
      67: invokeinterface #199,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      72: aload_1
      73: aload_2
      74: iconst_3
      75: aload_0
      76: invokevirtual #91                 // Method getUnreadCount:()I
      79: invokeinterface #208,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      84: aload_1
      85: aload_2
      86: iconst_4
      87: aload_0
      88: invokevirtual #94                 // Method isFriend:()Z
      91: invokeinterface #212,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
      96: aload_1
      97: aload_2
      98: iconst_5
      99: aload_0
     100: invokevirtual #97                 // Method isBlocked:()Z
     103: invokeinterface #212,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
     108: aload_1
     109: aload_2
     110: bipush        6
     112: aload_0
     113: invokevirtual #100                // Method isTargetBlocked:()Z
     116: invokeinterface #212,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
     121: aload_1
     122: aload_2
     123: bipush        7
     125: getstatic     #217                // Field love/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl$$serializer;
     128: checkcast     #193                // class kotlinx/serialization/SerializationStrategy
     131: aload_0
     132: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
     135: invokeinterface #199,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     140: return

  public love.forte.simbot.kaiheila.api.userchat.UserChatViewImpl(int, love.forte.simbot.CharSequenceID, love.forte.simbot.Timestamp, love.forte.simbot.Timestamp, int, boolean, boolean, boolean, love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfoImpl, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: sipush        255
       3: sipush        255
       6: iload_1
       7: iand
       8: if_icmpeq     24
      11: iload_1
      12: sipush        255
      15: getstatic     #236                // Field love/forte/simbot/kaiheila/api/userchat/UserChatViewImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/userchat/UserChatViewImpl$$serializer;
      18: invokevirtual #240                // Method love/forte/simbot/kaiheila/api/userchat/UserChatViewImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      21: invokestatic  #246                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      24: aload_0
      25: invokespecial #30                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_2
      30: putfield      #33                 // Field code:Llove/forte/simbot/CharSequenceID;
      33: aload_0
      34: aload_3
      35: putfield      #36                 // Field lastReadTime:Llove/forte/simbot/Timestamp;
      38: aload_0
      39: aload         4
      41: putfield      #38                 // Field latestMsgTime:Llove/forte/simbot/Timestamp;
      44: aload_0
      45: iload         5
      47: putfield      #41                 // Field unreadCount:I
      50: aload_0
      51: iload         6
      53: putfield      #44                 // Field isFriend:Z
      56: aload_0
      57: iload         7
      59: putfield      #46                 // Field isBlocked:Z
      62: aload_0
      63: iload         8
      65: putfield      #48                 // Field isTargetBlocked:Z
      68: aload_0
      69: aload         9
      71: putfield      #51                 // Field targetInfo:Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
      74: return

  public love.forte.simbot.ID getCode();
    Code:
       0: aload_0
       1: invokevirtual #82                 // Method getCode:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #252                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.kaiheila.api.userchat.UserChatTargetInfo getTargetInfo();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method getTargetInfo:()Llove/forte/simbot/kaiheila/api/userchat/UserChatTargetInfoImpl;
       4: checkcast     #255                // class love/forte/simbot/kaiheila/api/userchat/UserChatTargetInfo
       7: areturn

  static {};
    Code:
       0: new           #258                // class love/forte/simbot/kaiheila/api/userchat/UserChatViewImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #261                // Method love/forte/simbot/kaiheila/api/userchat/UserChatViewImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #265                // Field Companion:Llove/forte/simbot/kaiheila/api/userchat/UserChatViewImpl$Companion;
      11: return
}
