Compiled from "MessageCreateRequest.kt"
public final class love.forte.simbot.kaiheila.api.message.MessageCreateRequest extends love.forte.simbot.kaiheila.api.KaiheilaPostRequest<love.forte.simbot.kaiheila.api.message.MessageCreated> {
  public static final love.forte.simbot.kaiheila.api.message.MessageCreateRequest$Key Key;

  private final int type;

  private final love.forte.simbot.ID targetId;

  private final java.lang.String content;

  private final love.forte.simbot.ID quote;

  private final java.lang.String nonce;

  private final love.forte.simbot.ID tempTargetId;

  public love.forte.simbot.kaiheila.api.message.MessageCreateRequest(int, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID);
    Code:
       0: aload_2
       1: ldc           #16                 // String targetId
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #23                 // String content
       9: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: iconst_0
      14: iconst_1
      15: aconst_null
      16: invokespecial #26                 // Method love/forte/simbot/kaiheila/api/KaiheilaPostRequest."<init>":(ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
      19: aload_0
      20: iload_1
      21: putfield      #29                 // Field type:I
      24: aload_0
      25: aload_2
      26: putfield      #32                 // Field targetId:Llove/forte/simbot/ID;
      29: aload_0
      30: aload_3
      31: putfield      #35                 // Field content:Ljava/lang/String;
      34: aload_0
      35: aload         4
      37: putfield      #37                 // Field quote:Llove/forte/simbot/ID;
      40: aload_0
      41: aload         5
      43: putfield      #39                 // Field nonce:Ljava/lang/String;
      46: aload_0
      47: aload         6
      49: putfield      #41                 // Field tempTargetId:Llove/forte/simbot/ID;
      52: return

  public love.forte.simbot.kaiheila.api.message.MessageCreateRequest(int, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, java.lang.String, love.forte.simbot.ID, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          14
       7: getstatic     #50                 // Field love/forte/simbot/kaiheila/api/message/MessageType.TEXT:Llove/forte/simbot/kaiheila/api/message/MessageType;
      10: invokevirtual #54                 // Method love/forte/simbot/kaiheila/api/message/MessageType.getType:()I
      13: istore_1
      14: iload         7
      16: bipush        8
      18: iand
      19: ifeq          25
      22: aconst_null
      23: astore        4
      25: iload         7
      27: bipush        16
      29: iand
      30: ifeq          36
      33: aconst_null
      34: astore        5
      36: iload         7
      38: bipush        32
      40: iand
      41: ifeq          47
      44: aconst_null
      45: astore        6
      47: aload_0
      48: iload_1
      49: aload_2
      50: aload_3
      51: aload         4
      53: aload         5
      55: aload         6
      57: invokespecial #56                 // Method "<init>":(ILlove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;)V
      60: return

  private static void getTargetId$annotations();
    Code:
       0: return

  private static void getQuote$annotations();
    Code:
       0: return

  private static void getTempTargetId$annotations();
    Code:
       0: return

  public kotlinx.serialization.DeserializationStrategy<? extends love.forte.simbot.kaiheila.api.message.MessageCreated> getResultDeserializer();
    Code:
       0: getstatic     #72                 // Field love/forte/simbot/kaiheila/api/message/MessageCreated.Companion:Llove/forte/simbot/kaiheila/api/message/MessageCreated$Companion;
       3: invokevirtual #78                 // Method love/forte/simbot/kaiheila/api/message/MessageCreated$Companion.serializer:()Lkotlinx/serialization/KSerializer;
       6: checkcast     #80                 // class kotlinx/serialization/DeserializationStrategy
       9: areturn

  protected java.util.List<java.lang.String> getApiPaths();
    Code:
       0: getstatic     #87                 // Field Key:Llove/forte/simbot/kaiheila/api/message/MessageCreateRequest$Key;
       3: invokevirtual #92                 // Method love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Key.getApiPathList:()Ljava/util/List;
       6: areturn

  protected java.lang.Object createBody();
    Code:
       0: new           #96                 // class love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body
       3: dup
       4: aload_0
       5: getfield      #29                 // Field type:I
       8: aload_0
       9: getfield      #32                 // Field targetId:Llove/forte/simbot/ID;
      12: aload_0
      13: getfield      #35                 // Field content:Ljava/lang/String;
      16: aload_0
      17: getfield      #37                 // Field quote:Llove/forte/simbot/ID;
      20: aload_0
      21: getfield      #39                 // Field nonce:Ljava/lang/String;
      24: aload_0
      25: getfield      #41                 // Field tempTargetId:Llove/forte/simbot/ID;
      28: invokespecial #97                 // Method love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Body."<init>":(ILlove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;Ljava/lang/String;Llove/forte/simbot/ID;)V
      31: areturn

  public final love.forte.simbot.kaiheila.api.message.DirectMessageCreateRequest toDirect(love.forte.simbot.ID);
    Code:
       0: aload_1
       1: ldc           #16                 // String targetId
       3: invokestatic  #22                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #105                // Field love/forte/simbot/kaiheila/api/message/DirectMessageCreateRequest.Key:Llove/forte/simbot/kaiheila/api/message/DirectMessageCreateRequest$Key;
       9: aload_1
      10: aload_0
      11: getfield      #35                 // Field content:Ljava/lang/String;
      14: aload_0
      15: getfield      #29                 // Field type:I
      18: aload_0
      19: getfield      #37                 // Field quote:Llove/forte/simbot/ID;
      22: aload_0
      23: getfield      #39                 // Field nonce:Ljava/lang/String;
      26: invokevirtual #111                // Method love/forte/simbot/kaiheila/api/message/DirectMessageCreateRequest$Key.byTargetId:(Llove/forte/simbot/ID;Ljava/lang/String;ILlove/forte/simbot/ID;Ljava/lang/String;)Llove/forte/simbot/kaiheila/api/message/DirectMessageCreateRequest;
      29: areturn

  public static love.forte.simbot.kaiheila.api.message.DirectMessageCreateRequest toDirect$default(love.forte.simbot.kaiheila.api.message.MessageCreateRequest, love.forte.simbot.ID, int, java.lang.Object);
    Code:
       0: iload_2
       1: iconst_1
       2: iand
       3: ifeq          11
       6: aload_0
       7: getfield      #32                 // Field targetId:Llove/forte/simbot/ID;
      10: astore_1
      11: aload_0
      12: aload_1
      13: invokevirtual #115                // Method toDirect:(Llove/forte/simbot/ID;)Llove/forte/simbot/kaiheila/api/message/DirectMessageCreateRequest;
      16: areturn

  public final love.forte.simbot.kaiheila.api.message.DirectMessageCreateRequest toDirect();
    Code:
       0: aload_0
       1: aconst_null
       2: iconst_1
       3: aconst_null
       4: invokestatic  #118                // Method toDirect$default:(Llove/forte/simbot/kaiheila/api/message/MessageCreateRequest;Llove/forte/simbot/ID;ILjava/lang/Object;)Llove/forte/simbot/kaiheila/api/message/DirectMessageCreateRequest;
       7: areturn

  static {};
    Code:
       0: new           #89                 // class love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Key
       3: dup
       4: aconst_null
       5: invokespecial #122                // Method love/forte/simbot/kaiheila/api/message/MessageCreateRequest$Key."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #87                 // Field Key:Llove/forte/simbot/kaiheila/api/message/MessageCreateRequest$Key;
      11: return
}
