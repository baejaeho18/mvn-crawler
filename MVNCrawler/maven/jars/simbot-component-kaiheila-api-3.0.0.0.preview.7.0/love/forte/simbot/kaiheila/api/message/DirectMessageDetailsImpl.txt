Compiled from "MessageDetailsImpl.kt"
public final class love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl implements love.forte.simbot.kaiheila.api.message.DirectMessageDetails {
  public static final love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final int type;

  private final love.forte.simbot.CharSequenceID authorId;

  private final java.lang.String content;

  private final java.util.List<java.util.Map<java.lang.String, java.lang.String>> embeds;

  private final java.util.List<java.util.Map<java.lang.String, java.lang.String>> attachments;

  private final java.util.List<love.forte.simbot.kaiheila.api.message.ReactionImpl> reactions;

  private final love.forte.simbot.kaiheila.objects.impl.QuoteImpl quote;

  private final boolean readStatus;

  public love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl(love.forte.simbot.CharSequenceID, int, love.forte.simbot.CharSequenceID, java.lang.String, java.util.List<? extends java.util.Map<java.lang.String, java.lang.String>>, java.util.List<? extends java.util.Map<java.lang.String, java.lang.String>>, java.util.List<love.forte.simbot.kaiheila.api.message.ReactionImpl>, love.forte.simbot.kaiheila.objects.impl.QuoteImpl, boolean);
    Code:
       0: aload_1
       1: ldc           #21                 // String id
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #28                 // String authorId
       9: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #29                 // String content
      16: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload         5
      21: ldc           #30                 // String embeds
      23: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload         6
      28: ldc           #31                 // String attachments
      30: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload         7
      35: ldc           #32                 // String reactions
      37: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      40: aload_0
      41: invokespecial #35                 // Method java/lang/Object."<init>":()V
      44: aload_0
      45: aload_1
      46: putfield      #38                 // Field id:Llove/forte/simbot/CharSequenceID;
      49: aload_0
      50: iload_2
      51: putfield      #41                 // Field type:I
      54: aload_0
      55: aload_3
      56: putfield      #43                 // Field authorId:Llove/forte/simbot/CharSequenceID;
      59: aload_0
      60: aload         4
      62: putfield      #46                 // Field content:Ljava/lang/String;
      65: aload_0
      66: aload         5
      68: putfield      #49                 // Field embeds:Ljava/util/List;
      71: aload_0
      72: aload         6
      74: putfield      #51                 // Field attachments:Ljava/util/List;
      77: aload_0
      78: aload         7
      80: putfield      #53                 // Field reactions:Ljava/util/List;
      83: aload_0
      84: aload         8
      86: putfield      #56                 // Field quote:Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
      89: aload_0
      90: iload         9
      92: putfield      #59                 // Field readStatus:Z
      95: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #38                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #41                 // Field type:I
       4: ireturn

  public love.forte.simbot.CharSequenceID getAuthorId();
    Code:
       0: aload_0
       1: getfield      #43                 // Field authorId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getAuthorId$annotations();
    Code:
       0: return

  public java.lang.String getContent();
    Code:
       0: aload_0
       1: getfield      #46                 // Field content:Ljava/lang/String;
       4: areturn

  public java.util.List<java.util.Map<java.lang.String, java.lang.String>> getEmbeds();
    Code:
       0: aload_0
       1: getfield      #49                 // Field embeds:Ljava/util/List;
       4: areturn

  public java.util.List<java.util.Map<java.lang.String, java.lang.String>> getAttachments();
    Code:
       0: aload_0
       1: getfield      #51                 // Field attachments:Ljava/util/List;
       4: areturn

  public java.util.List<love.forte.simbot.kaiheila.api.message.ReactionImpl> getReactions();
    Code:
       0: aload_0
       1: getfield      #53                 // Field reactions:Ljava/util/List;
       4: areturn

  public love.forte.simbot.kaiheila.objects.impl.QuoteImpl getQuote();
    Code:
       0: aload_0
       1: getfield      #56                 // Field quote:Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
       4: areturn

  public boolean getReadStatus();
    Code:
       0: aload_0
       1: getfield      #59                 // Field readStatus:Z
       4: ireturn

  public static void getReadStatus$annotations();
    Code:
       0: return

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final int component2();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method getType:()I
       4: ireturn

  public final love.forte.simbot.CharSequenceID component3();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component4();
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method getContent:()Ljava/lang/String;
       4: areturn

  public final java.util.List<java.util.Map<java.lang.String, java.lang.String>> component5();
    Code:
       0: aload_0
       1: invokevirtual #99                 // Method getEmbeds:()Ljava/util/List;
       4: areturn

  public final java.util.List<java.util.Map<java.lang.String, java.lang.String>> component6();
    Code:
       0: aload_0
       1: invokevirtual #102                // Method getAttachments:()Ljava/util/List;
       4: areturn

  public final java.util.List<love.forte.simbot.kaiheila.api.message.ReactionImpl> component7();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getReactions:()Ljava/util/List;
       4: areturn

  public final love.forte.simbot.kaiheila.objects.impl.QuoteImpl component8();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
       4: areturn

  public final boolean component9();
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getReadStatus:()Z
       4: ireturn

  public final love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl copy(love.forte.simbot.CharSequenceID, int, love.forte.simbot.CharSequenceID, java.lang.String, java.util.List<? extends java.util.Map<java.lang.String, java.lang.String>>, java.util.List<? extends java.util.Map<java.lang.String, java.lang.String>>, java.util.List<love.forte.simbot.kaiheila.api.message.ReactionImpl>, love.forte.simbot.kaiheila.objects.impl.QuoteImpl, boolean);
    Code:
       0: aload_1
       1: ldc           #21                 // String id
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #28                 // String authorId
       9: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #29                 // String content
      16: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload         5
      21: ldc           #30                 // String embeds
      23: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload         6
      28: ldc           #31                 // String attachments
      30: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload         7
      35: ldc           #32                 // String reactions
      37: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      40: new           #2                  // class love/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl
      43: dup
      44: aload_1
      45: iload_2
      46: aload_3
      47: aload         4
      49: aload         5
      51: aload         6
      53: aload         7
      55: aload         8
      57: iload         9
      59: invokespecial #116                // Method "<init>":(Llove/forte/simbot/CharSequenceID;ILlove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;Z)V
      62: areturn

  public static love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl copy$default(love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl, love.forte.simbot.CharSequenceID, int, love.forte.simbot.CharSequenceID, java.lang.String, java.util.List, java.util.List, java.util.List, love.forte.simbot.kaiheila.objects.impl.QuoteImpl, boolean, int, java.lang.Object);
    Code:
       0: iload         10
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         10
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #90                 // Method getType:()I
      23: istore_2
      24: iload         10
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      35: astore_3
      36: iload         10
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #96                 // Method getContent:()Ljava/lang/String;
      48: astore        4
      50: iload         10
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #99                 // Method getEmbeds:()Ljava/util/List;
      62: astore        5
      64: iload         10
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #102                // Method getAttachments:()Ljava/util/List;
      76: astore        6
      78: iload         10
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #105                // Method getReactions:()Ljava/util/List;
      90: astore        7
      92: iload         10
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
     105: astore        8
     107: iload         10
     109: sipush        256
     112: iand
     113: ifeq          122
     116: aload_0
     117: invokevirtual #111                // Method getReadStatus:()Z
     120: istore        9
     122: aload_0
     123: aload_1
     124: iload_2
     125: aload_3
     126: aload         4
     128: aload         5
     130: aload         6
     132: aload         7
     134: aload         8
     136: iload         9
     138: invokevirtual #120                // Method copy:(Llove/forte/simbot/CharSequenceID;ILlove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/util/List;Ljava/util/List;Ljava/util/List;Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;Z)Llove/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl;
     141: areturn

  public java.lang.String toString();
    Code:
       0: new           #123                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #124                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #126                // String DirectMessageDetailsImpl(id=
       9: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #135                // String , type=
      21: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #90                 // Method getType:()I
      28: invokevirtual #138                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #140                // String , authorId=
      33: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      40: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #142                // String , content=
      45: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #96                 // Method getContent:()Ljava/lang/String;
      52: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #144                // String , embeds=
      57: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #99                 // Method getEmbeds:()Ljava/util/List;
      64: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #146                // String , attachments=
      69: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #102                // Method getAttachments:()Ljava/util/List;
      76: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #148                // String , reactions=
      81: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #105                // Method getReactions:()Ljava/util/List;
      88: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      91: ldc           #150                // String , quote=
      93: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
     100: invokevirtual #133                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #152                // String , readStatus=
     105: invokevirtual #130                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: invokevirtual #111                // Method getReadStatus:()Z
     112: invokevirtual #155                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     115: bipush        41
     117: invokevirtual #158                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: invokevirtual #160                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #165                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #90                 // Method getType:()I
      16: invokestatic  #170                // Method java/lang/Integer.hashCode:(I)I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      29: invokevirtual #165                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #96                 // Method getContent:()Ljava/lang/String;
      42: invokevirtual #173                // Method java/lang/String.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #99                 // Method getEmbeds:()Ljava/util/List;
      55: invokevirtual #174                // Method java/lang/Object.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: bipush        31
      63: imul
      64: aload_0
      65: invokevirtual #102                // Method getAttachments:()Ljava/util/List;
      68: invokevirtual #174                // Method java/lang/Object.hashCode:()I
      71: iadd
      72: istore_1
      73: iload_1
      74: bipush        31
      76: imul
      77: aload_0
      78: invokevirtual #105                // Method getReactions:()Ljava/util/List;
      81: invokevirtual #174                // Method java/lang/Object.hashCode:()I
      84: iadd
      85: istore_1
      86: iload_1
      87: bipush        31
      89: imul
      90: aload_0
      91: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
      94: ifnonnull     101
      97: iconst_0
      98: goto          108
     101: aload_0
     102: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
     105: invokevirtual #177                // Method love/forte/simbot/kaiheila/objects/impl/QuoteImpl.hashCode:()I
     108: iadd
     109: istore_1
     110: iload_1
     111: bipush        31
     113: imul
     114: aload_0
     115: invokevirtual #111                // Method getReadStatus:()Z
     118: dup
     119: ifeq          124
     122: pop
     123: iconst_1
     124: iadd
     125: istore_1
     126: iload_1
     127: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #185                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #90                 // Method getType:()I
      41: aload_2
      42: invokevirtual #90                 // Method getType:()I
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      54: aload_2
      55: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      58: invokestatic  #185                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      61: ifne          66
      64: iconst_0
      65: ireturn
      66: aload_0
      67: invokevirtual #96                 // Method getContent:()Ljava/lang/String;
      70: aload_2
      71: invokevirtual #96                 // Method getContent:()Ljava/lang/String;
      74: invokestatic  #185                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: invokevirtual #99                 // Method getEmbeds:()Ljava/util/List;
      86: aload_2
      87: invokevirtual #99                 // Method getEmbeds:()Ljava/util/List;
      90: invokestatic  #185                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifne          98
      96: iconst_0
      97: ireturn
      98: aload_0
      99: invokevirtual #102                // Method getAttachments:()Ljava/util/List;
     102: aload_2
     103: invokevirtual #102                // Method getAttachments:()Ljava/util/List;
     106: invokestatic  #185                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     109: ifne          114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokevirtual #105                // Method getReactions:()Ljava/util/List;
     118: aload_2
     119: invokevirtual #105                // Method getReactions:()Ljava/util/List;
     122: invokestatic  #185                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     125: ifne          130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
     134: aload_2
     135: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
     138: invokestatic  #185                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     141: ifne          146
     144: iconst_0
     145: ireturn
     146: aload_0
     147: invokevirtual #111                // Method getReadStatus:()Z
     150: aload_2
     151: invokevirtual #111                // Method getReadStatus:()Z
     154: if_icmpeq     159
     157: iconst_0
     158: ireturn
     159: iconst_1
     160: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #193                // String self
       3: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #194                // String output
       9: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #195                // String serialDesc
      15: invokestatic  #27                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #201                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #203                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #209,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: aload_0
      40: invokevirtual #90                 // Method getType:()I
      43: invokeinterface #213,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      48: aload_1
      49: aload_2
      50: iconst_2
      51: getstatic     #201                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      54: checkcast     #203                // class kotlinx/serialization/SerializationStrategy
      57: aload_0
      58: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
      61: invokeinterface #209,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      66: aload_1
      67: aload_2
      68: iconst_3
      69: aload_0
      70: invokevirtual #96                 // Method getContent:()Ljava/lang/String;
      73: invokeinterface #217,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      78: aload_1
      79: aload_2
      80: iconst_4
      81: new           #219                // class kotlinx/serialization/internal/ArrayListSerializer
      84: dup
      85: new           #221                // class kotlinx/serialization/internal/LinkedHashMapSerializer
      88: dup
      89: getstatic     #226                // Field kotlinx/serialization/internal/StringSerializer.INSTANCE:Lkotlinx/serialization/internal/StringSerializer;
      92: checkcast     #228                // class kotlinx/serialization/KSerializer
      95: getstatic     #226                // Field kotlinx/serialization/internal/StringSerializer.INSTANCE:Lkotlinx/serialization/internal/StringSerializer;
      98: checkcast     #228                // class kotlinx/serialization/KSerializer
     101: invokespecial #231                // Method kotlinx/serialization/internal/LinkedHashMapSerializer."<init>":(Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
     104: checkcast     #228                // class kotlinx/serialization/KSerializer
     107: invokespecial #234                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     110: checkcast     #203                // class kotlinx/serialization/SerializationStrategy
     113: aload_0
     114: invokevirtual #99                 // Method getEmbeds:()Ljava/util/List;
     117: invokeinterface #209,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     122: aload_1
     123: aload_2
     124: iconst_5
     125: new           #219                // class kotlinx/serialization/internal/ArrayListSerializer
     128: dup
     129: new           #221                // class kotlinx/serialization/internal/LinkedHashMapSerializer
     132: dup
     133: getstatic     #226                // Field kotlinx/serialization/internal/StringSerializer.INSTANCE:Lkotlinx/serialization/internal/StringSerializer;
     136: checkcast     #228                // class kotlinx/serialization/KSerializer
     139: getstatic     #226                // Field kotlinx/serialization/internal/StringSerializer.INSTANCE:Lkotlinx/serialization/internal/StringSerializer;
     142: checkcast     #228                // class kotlinx/serialization/KSerializer
     145: invokespecial #231                // Method kotlinx/serialization/internal/LinkedHashMapSerializer."<init>":(Lkotlinx/serialization/KSerializer;Lkotlinx/serialization/KSerializer;)V
     148: checkcast     #228                // class kotlinx/serialization/KSerializer
     151: invokespecial #234                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     154: checkcast     #203                // class kotlinx/serialization/SerializationStrategy
     157: aload_0
     158: invokevirtual #102                // Method getAttachments:()Ljava/util/List;
     161: invokeinterface #209,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     166: aload_1
     167: aload_2
     168: bipush        6
     170: new           #219                // class kotlinx/serialization/internal/ArrayListSerializer
     173: dup
     174: getstatic     #239                // Field love/forte/simbot/kaiheila/api/message/ReactionImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/message/ReactionImpl$$serializer;
     177: checkcast     #228                // class kotlinx/serialization/KSerializer
     180: invokespecial #234                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     183: checkcast     #203                // class kotlinx/serialization/SerializationStrategy
     186: aload_0
     187: invokevirtual #105                // Method getReactions:()Ljava/util/List;
     190: invokeinterface #209,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     195: aload_1
     196: aload_2
     197: bipush        7
     199: getstatic     #244                // Field love/forte/simbot/kaiheila/objects/impl/QuoteImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl$$serializer;
     202: checkcast     #203                // class kotlinx/serialization/SerializationStrategy
     205: aload_0
     206: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
     209: invokeinterface #247,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeNullableSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     214: aload_1
     215: aload_2
     216: bipush        8
     218: aload_0
     219: invokevirtual #111                // Method getReadStatus:()Z
     222: invokeinterface #251,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
     227: return

  public love.forte.simbot.kaiheila.api.message.DirectMessageDetailsImpl(int, love.forte.simbot.CharSequenceID, int, love.forte.simbot.CharSequenceID, java.lang.String, java.util.List, java.util.List, java.util.List, love.forte.simbot.kaiheila.objects.impl.QuoteImpl, boolean, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: sipush        511
       3: sipush        511
       6: iload_1
       7: iand
       8: if_icmpeq     24
      11: iload_1
      12: sipush        511
      15: getstatic     #270                // Field love/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl$$serializer;
      18: invokevirtual #274                // Method love/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      21: invokestatic  #280                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      24: aload_0
      25: invokespecial #35                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_2
      30: putfield      #38                 // Field id:Llove/forte/simbot/CharSequenceID;
      33: aload_0
      34: iload_3
      35: putfield      #41                 // Field type:I
      38: aload_0
      39: aload         4
      41: putfield      #43                 // Field authorId:Llove/forte/simbot/CharSequenceID;
      44: aload_0
      45: aload         5
      47: putfield      #46                 // Field content:Ljava/lang/String;
      50: aload_0
      51: aload         6
      53: putfield      #49                 // Field embeds:Ljava/util/List;
      56: aload_0
      57: aload         7
      59: putfield      #51                 // Field attachments:Ljava/util/List;
      62: aload_0
      63: aload         8
      65: putfield      #53                 // Field reactions:Ljava/util/List;
      68: aload_0
      69: aload         9
      71: putfield      #56                 // Field quote:Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
      74: aload_0
      75: iload         10
      77: putfield      #59                 // Field readStatus:Z
      80: return

  public love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #286                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getAuthorId();
    Code:
       0: aload_0
       1: invokevirtual #93                 // Method getAuthorId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #286                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.kaiheila.objects.Quote getQuote();
    Code:
       0: aload_0
       1: invokevirtual #108                // Method getQuote:()Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
       4: checkcast     #289                // class love/forte/simbot/kaiheila/objects/Quote
       7: areturn

  static {};
    Code:
       0: new           #292                // class love/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #295                // Method love/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #299                // Field Companion:Llove/forte/simbot/kaiheila/api/message/DirectMessageDetailsImpl$Companion;
      11: return
}
