Compiled from "ApiRequest.kt"
public abstract class love.forte.simbot.kaiheila.api.KaiheilaApiRequest<T> {
  public static final love.forte.simbot.kaiheila.api.KaiheilaApiRequest$Companion Companion;

  private static final kotlinx.serialization.json.Json DEFAULT_JSON;

  private static final java.util.function.Consumer<io.ktor.client.statement.HttpResponse> defaultRequestPostChecker;

  public love.forte.simbot.kaiheila.api.KaiheilaApiRequest();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract io.ktor.http.Url getUrl();

  public abstract io.ktor.http.HttpMethod getMethod();

  public abstract kotlinx.serialization.DeserializationStrategy<? extends T> getResultDeserializer();

  protected void requestFinishingAction(io.ktor.client.request.HttpRequestBuilder);
    Code:
       0: aload_1
       1: ldc           #24                 // String <this>
       3: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #36                 // Method io/ktor/client/request/HttpRequestBuilder.getHeaders:()Lio/ktor/http/HeadersBuilder;
      10: getstatic     #42                 // Field io/ktor/http/HttpHeaders.INSTANCE:Lio/ktor/http/HttpHeaders;
      13: invokevirtual #46                 // Method io/ktor/http/HttpHeaders.getContentType:()Ljava/lang/String;
      16: getstatic     #51                 // Field io/ktor/http/ContentType$Application.INSTANCE:Lio/ktor/http/ContentType$Application;
      19: invokevirtual #55                 // Method io/ktor/http/ContentType$Application.getJson:()Lio/ktor/http/ContentType;
      22: invokevirtual #60                 // Method io/ktor/http/ContentType.toString:()Ljava/lang/String;
      25: invokevirtual #66                 // Method io/ktor/http/HeadersBuilder.set:(Ljava/lang/String;Ljava/lang/String;)V
      28: return

  public java.lang.Object request(io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #73                 // Method request$suspendImpl:(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
      11: areturn

  static java.lang.Object request$suspendImpl(love.forte.simbot.kaiheila.api.KaiheilaApiRequest, io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation);
    Code:
       0: aload         5
       2: instanceof    #85                 // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1
       5: ifeq          41
       8: aload         5
      10: checkcast     #85                 // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1
      13: astore        19
      15: aload         19
      17: getfield      #89                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.label:I
      20: ldc           #90                 // int -2147483648
      22: iand
      23: ifeq          41
      26: aload         19
      28: dup
      29: getfield      #89                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.label:I
      32: ldc           #90                 // int -2147483648
      34: isub
      35: putfield      #89                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.label:I
      38: goto          53
      41: new           #85                 // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1
      44: dup
      45: aload_0
      46: aload         5
      48: invokespecial #93                 // Method love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1."<init>":(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lkotlin/coroutines/Continuation;)V
      51: astore        19
      53: aload         19
      55: getfield      #97                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.result:Ljava/lang/Object;
      58: astore        18
      60: invokestatic  #103                // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      63: astore        20
      65: aload         19
      67: getfield      #89                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.label:I
      70: tableswitch   { // 0 to 3
                     0: 100
                     1: 232
                     2: 297
                     3: 383
               default: 673
          }
     100: aload         18
     102: invokestatic  #109                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     105: aload_0
     106: astore        7
     108: iconst_0
     109: istore        8
     111: aload_1
     112: astore        9
     114: iconst_0
     115: istore        10
     117: aload         9
     119: astore        11
     121: new           #32                 // class io/ktor/client/request/HttpRequestBuilder
     124: dup
     125: invokespecial #110                // Method io/ktor/client/request/HttpRequestBuilder."<init>":()V
     128: astore        12
     130: aload         12
     132: astore        13
     134: iconst_0
     135: istore        14
     137: aload         13
     139: aload         7
     141: invokevirtual #112                // Method getMethod:()Lio/ktor/http/HttpMethod;
     144: invokevirtual #116                // Method io/ktor/client/request/HttpRequestBuilder.setMethod:(Lio/ktor/http/HttpMethod;)V
     147: aload         13
     149: aload         7
     151: invokevirtual #118                // Method getUrl:()Lio/ktor/http/Url;
     154: invokestatic  #124                // Method io/ktor/client/request/BuildersWithUrlKt.url:(Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/http/Url;)V
     157: aload         13
     159: invokevirtual #36                 // Method io/ktor/client/request/HttpRequestBuilder.getHeaders:()Lio/ktor/http/HeadersBuilder;
     162: getstatic     #42                 // Field io/ktor/http/HttpHeaders.INSTANCE:Lio/ktor/http/HttpHeaders;
     165: invokevirtual #127                // Method io/ktor/http/HttpHeaders.getAuthorization:()Ljava/lang/String;
     168: aload_2
     169: invokevirtual #66                 // Method io/ktor/http/HeadersBuilder.set:(Ljava/lang/String;Ljava/lang/String;)V
     172: aload         13
     174: astore        15
     176: iconst_0
     177: istore        16
     179: aload_0
     180: aload         15
     182: invokevirtual #129                // Method requestFinishingAction:(Lio/ktor/client/request/HttpRequestBuilder;)V
     185: nop
     186: nop
     187: aload         12
     189: astore        12
     191: iconst_0
     192: istore        17
     194: new           #131                // class io/ktor/client/statement/HttpStatement
     197: dup
     198: aload         12
     200: aload         11
     202: invokespecial #134                // Method io/ktor/client/statement/HttpStatement."<init>":(Lio/ktor/client/request/HttpRequestBuilder;Lio/ktor/client/HttpClient;)V
     205: aload         19
     207: aload         19
     209: aload         4
     211: putfield      #137                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.L$0:Ljava/lang/Object;
     214: aload         19
     216: iconst_1
     217: putfield      #89                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.label:I
     220: invokevirtual #141                // Method io/ktor/client/statement/HttpStatement.execute:(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     223: dup
     224: aload         20
     226: if_acmpne     258
     229: aload         20
     231: areturn
     232: iconst_0
     233: istore        8
     235: iconst_0
     236: istore        10
     238: iconst_0
     239: istore        17
     241: aload         19
     243: getfield      #137                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.L$0:Ljava/lang/Object;
     246: checkcast     #143                // class kotlin/jvm/functions/Function2
     249: astore        4
     251: aload         18
     253: invokestatic  #109                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     256: aload         18
     258: nop
     259: checkcast     #145                // class io/ktor/client/statement/HttpResponse
     262: astore        6
     264: aload         4
     266: aload         6
     268: aload         19
     270: aload         19
     272: aload         6
     274: putfield      #137                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.L$0:Ljava/lang/Object;
     277: aload         19
     279: iconst_2
     280: putfield      #89                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.label:I
     283: invokeinterface #149,  3          // InterfaceMethod kotlin/jvm/functions/Function2.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     288: dup
     289: aload         20
     291: if_acmpne     314
     294: aload         20
     296: areturn
     297: aload         19
     299: getfield      #137                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.L$0:Ljava/lang/Object;
     302: checkcast     #145                // class io/ktor/client/statement/HttpResponse
     305: astore        6
     307: aload         18
     309: invokestatic  #109                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     312: aload         18
     314: pop
     315: aload         6
     317: astore        8
     319: iconst_0
     320: istore        9
     322: aload         8
     324: invokevirtual #153                // Method io/ktor/client/statement/HttpResponse.getCall:()Lio/ktor/client/call/HttpClientCall;
     327: iconst_0
     328: istore        10
     330: ldc           #155                // class love/forte/simbot/kaiheila/api/ApiResult
     332: invokestatic  #161                // Method kotlin/jvm/internal/Reflection.typeOf:(Ljava/lang/Class;)Lkotlin/reflect/KType;
     335: astore        11
     337: aload         11
     339: invokestatic  #167                // Method kotlin/reflect/TypesJVMKt.getJavaType:(Lkotlin/reflect/KType;)Ljava/lang/reflect/Type;
     342: astore        12
     344: aload         12
     346: ldc           #155                // class love/forte/simbot/kaiheila/api/ApiResult
     348: invokestatic  #171                // Method kotlin/jvm/internal/Reflection.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/reflect/KClass;
     351: aload         11
     353: invokestatic  #177                // Method io/ktor/util/reflect/TypeInfoJvmKt.typeInfoImpl:(Ljava/lang/reflect/Type;Lkotlin/reflect/KClass;Lkotlin/reflect/KType;)Lio/ktor/util/reflect/TypeInfo;
     356: aload         19
     358: aload         19
     360: aload         6
     362: putfield      #137                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.L$0:Ljava/lang/Object;
     365: aload         19
     367: iconst_3
     368: putfield      #89                 // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.label:I
     371: invokevirtual #183                // Method io/ktor/client/call/HttpClientCall.body:(Lio/ktor/util/reflect/TypeInfo;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
     374: dup
     375: aload         20
     377: if_acmpne     403
     380: aload         20
     382: areturn
     383: iconst_0
     384: istore        9
     386: aload         19
     388: getfield      #137                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$1.L$0:Ljava/lang/Object;
     391: checkcast     #145                // class io/ktor/client/statement/HttpResponse
     394: astore        6
     396: aload         18
     398: invokestatic  #109                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     401: aload         18
     403: dup
     404: ifnonnull     417
     407: new           #185                // class java/lang/NullPointerException
     410: dup
     411: ldc           #187                // String null cannot be cast to non-null type love.forte.simbot.kaiheila.api.ApiResult
     413: invokespecial #190                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
     416: athrow
     417: checkcast     #155                // class love/forte/simbot/kaiheila/api/ApiResult
     420: astore        7
     422: aload         6
     424: invokevirtual #193                // Method io/ktor/client/statement/HttpResponse.getHeaders:()Lio/ktor/http/Headers;
     427: astore        8
     429: aload         8
     431: ldc           #195                // String X-Rate-Limit-Limit
     433: invokeinterface #201,  2          // InterfaceMethod io/ktor/http/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
     438: dup
     439: ifnonnull     447
     442: pop
     443: aconst_null
     444: goto          450
     447: invokestatic  #207                // Method kotlin/text/StringsKt.toLongOrNull:(Ljava/lang/String;)Ljava/lang/Long;
     450: astore        9
     452: aload         8
     454: ldc           #209                // String X-Rate-Limit-Remaining
     456: invokeinterface #201,  2          // InterfaceMethod io/ktor/http/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
     461: dup
     462: ifnonnull     470
     465: pop
     466: aconst_null
     467: goto          473
     470: invokestatic  #207                // Method kotlin/text/StringsKt.toLongOrNull:(Ljava/lang/String;)Ljava/lang/Long;
     473: astore        10
     475: aload         8
     477: ldc           #211                // String X-Rate-Limit-Reset
     479: invokeinterface #201,  2          // InterfaceMethod io/ktor/http/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
     484: dup
     485: ifnonnull     493
     488: pop
     489: aconst_null
     490: goto          496
     493: invokestatic  #207                // Method kotlin/text/StringsKt.toLongOrNull:(Ljava/lang/String;)Ljava/lang/Long;
     496: astore        11
     498: aload         8
     500: ldc           #213                // String X-Rate-Limit-Bucket
     502: invokeinterface #201,  2          // InterfaceMethod io/ktor/http/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
     507: astore        12
     509: aload         8
     511: ldc           #215                // String X-Rate-Limit-Global
     513: invokeinterface #201,  2          // InterfaceMethod io/ktor/http/Headers.get:(Ljava/lang/String;)Ljava/lang/String;
     518: ifnull        525
     521: iconst_1
     522: goto          526
     525: iconst_0
     526: istore        13
     528: aload         9
     530: ifnonnull     553
     533: aload         10
     535: ifnonnull     553
     538: aload         11
     540: ifnonnull     553
     543: aload         12
     545: ifnonnull     553
     548: iload         13
     550: ifeq          655
     553: new           #217                // class love/forte/simbot/kaiheila/api/RateLimit
     556: dup
     557: aload         9
     559: dup
     560: ifnonnull     576
     563: pop
     564: getstatic     #221                // Field love/forte/simbot/kaiheila/api/RateLimit.Companion:Llove/forte/simbot/kaiheila/api/RateLimit$Companion;
     567: invokevirtual #227                // Method love/forte/simbot/kaiheila/api/RateLimit$Companion.getDEFAULT:()Llove/forte/simbot/kaiheila/api/RateLimit;
     570: invokevirtual #231                // Method love/forte/simbot/kaiheila/api/RateLimit.getLimit:()J
     573: goto          579
     576: invokevirtual #236                // Method java/lang/Long.longValue:()J
     579: aload         10
     581: dup
     582: ifnonnull     598
     585: pop
     586: getstatic     #221                // Field love/forte/simbot/kaiheila/api/RateLimit.Companion:Llove/forte/simbot/kaiheila/api/RateLimit$Companion;
     589: invokevirtual #227                // Method love/forte/simbot/kaiheila/api/RateLimit$Companion.getDEFAULT:()Llove/forte/simbot/kaiheila/api/RateLimit;
     592: invokevirtual #239                // Method love/forte/simbot/kaiheila/api/RateLimit.getRemaining:()J
     595: goto          601
     598: invokevirtual #236                // Method java/lang/Long.longValue:()J
     601: aload         11
     603: dup
     604: ifnonnull     620
     607: pop
     608: getstatic     #221                // Field love/forte/simbot/kaiheila/api/RateLimit.Companion:Llove/forte/simbot/kaiheila/api/RateLimit$Companion;
     611: invokevirtual #227                // Method love/forte/simbot/kaiheila/api/RateLimit$Companion.getDEFAULT:()Llove/forte/simbot/kaiheila/api/RateLimit;
     614: invokevirtual #242                // Method love/forte/simbot/kaiheila/api/RateLimit.getReset:()J
     617: goto          623
     620: invokevirtual #236                // Method java/lang/Long.longValue:()J
     623: aload         12
     625: dup
     626: ifnonnull     639
     629: pop
     630: getstatic     #221                // Field love/forte/simbot/kaiheila/api/RateLimit.Companion:Llove/forte/simbot/kaiheila/api/RateLimit$Companion;
     633: invokevirtual #227                // Method love/forte/simbot/kaiheila/api/RateLimit$Companion.getDEFAULT:()Llove/forte/simbot/kaiheila/api/RateLimit;
     636: invokevirtual #245                // Method love/forte/simbot/kaiheila/api/RateLimit.getBucket:()Ljava/lang/String;
     639: iload         13
     641: ifeq          648
     644: iconst_1
     645: goto          649
     648: iconst_0
     649: invokespecial #248                // Method love/forte/simbot/kaiheila/api/RateLimit."<init>":(JJJLjava/lang/String;Z)V
     652: goto          661
     655: getstatic     #221                // Field love/forte/simbot/kaiheila/api/RateLimit.Companion:Llove/forte/simbot/kaiheila/api/RateLimit$Companion;
     658: invokevirtual #227                // Method love/forte/simbot/kaiheila/api/RateLimit$Companion.getDEFAULT:()Llove/forte/simbot/kaiheila/api/RateLimit;
     661: astore        14
     663: aload         7
     665: aload         14
     667: invokevirtual #252                // Method love/forte/simbot/kaiheila/api/ApiResult.setRateLimit:(Llove/forte/simbot/kaiheila/api/RateLimit;)V
     670: aload         7
     672: areturn
     673: new           #254                // class java/lang/IllegalStateException
     676: dup
     677: ldc_w         #256                // String call to \'resume\' before \'invoke\' with coroutine
     680: invokespecial #257                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     683: athrow

  public static java.lang.Object request$default(love.forte.simbot.kaiheila.api.KaiheilaApiRequest, io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, kotlin.jvm.functions.Function2, kotlin.coroutines.Continuation, int, java.lang.Object);
    Code:
       0: aload         7
       2: ifnull        16
       5: new           #302                // class java/lang/UnsupportedOperationException
       8: dup
       9: ldc_w         #304                // String Super calls with default arguments not supported in this target, function: request
      12: invokespecial #305                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: iload         6
      18: iconst_4
      19: iand
      20: ifeq          27
      23: getstatic     #308                // Field DEFAULT_JSON:Lkotlinx/serialization/json/Json;
      26: astore_3
      27: iload         6
      29: bipush        8
      31: iand
      32: ifeq          48
      35: new           #310                // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$2
      38: dup
      39: aconst_null
      40: invokespecial #313                // Method love/forte/simbot/kaiheila/api/KaiheilaApiRequest$request$2."<init>":(Lkotlin/coroutines/Continuation;)V
      43: checkcast     #143                // class kotlin/jvm/functions/Function2
      46: astore        4
      48: aload_0
      49: aload_1
      50: aload_2
      51: aload_3
      52: aload         4
      54: aload         5
      56: invokevirtual #315                // Method request:(Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
      59: areturn

  public love.forte.simbot.kaiheila.api.ApiResult requestBlocking(io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, java.util.function.Consumer<io.ktor.client.statement.HttpResponse>);
    Code:
       0: aload_1
       1: ldc_w         #322                // String client
       4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #323                // String authorization
      11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_3
      15: ldc_w         #324                // String decoder
      18: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload         4
      23: ldc_w         #325                // String postchecker
      26: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      29: aconst_null
      30: new           #327                // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestBlocking$1
      33: dup
      34: aload_0
      35: aload_1
      36: aload_2
      37: aload_3
      38: aload         4
      40: aconst_null
      41: invokespecial #330                // Method love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestBlocking$1."<init>":(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Ljava/util/function/Consumer;Lkotlin/coroutines/Continuation;)V
      44: checkcast     #143                // class kotlin/jvm/functions/Function2
      47: iconst_1
      48: aconst_null
      49: invokestatic  #336                // Method love/forte/simbot/utils/BlockingRunnerKt.runInBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #155                // class love/forte/simbot/kaiheila/api/ApiResult
      55: areturn

  public static love.forte.simbot.kaiheila.api.ApiResult requestBlocking$default(love.forte.simbot.kaiheila.api.KaiheilaApiRequest, io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, java.util.function.Consumer, int, java.lang.Object);
    Code:
       0: aload         6
       2: ifnull        16
       5: new           #302                // class java/lang/UnsupportedOperationException
       8: dup
       9: ldc_w         #341                // String Super calls with default arguments not supported in this target, function: requestBlocking
      12: invokespecial #305                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: iload         5
      18: iconst_4
      19: iand
      20: ifeq          27
      23: getstatic     #308                // Field DEFAULT_JSON:Lkotlinx/serialization/json/Json;
      26: astore_3
      27: iload         5
      29: bipush        8
      31: iand
      32: ifeq          40
      35: getstatic     #344                // Field defaultRequestPostChecker:Ljava/util/function/Consumer;
      38: astore        4
      40: aload_0
      41: aload_1
      42: aload_2
      43: aload_3
      44: aload         4
      46: invokevirtual #346                // Method requestBlocking:(Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Ljava/util/function/Consumer;)Llove/forte/simbot/kaiheila/api/ApiResult;
      49: areturn

  public java.lang.Object requestData(io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, kotlin.coroutines.Continuation);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #352                // Method requestData$suspendImpl:(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
       9: areturn

  static java.lang.Object requestData$suspendImpl(love.forte.simbot.kaiheila.api.KaiheilaApiRequest, io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, kotlin.coroutines.Continuation);
    Code:
       0: aload         4
       2: instanceof    #354                // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1
       5: ifeq          41
       8: aload         4
      10: checkcast     #354                // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1
      13: astore        7
      15: aload         7
      17: getfield      #355                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.label:I
      20: ldc           #90                 // int -2147483648
      22: iand
      23: ifeq          41
      26: aload         7
      28: dup
      29: getfield      #355                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.label:I
      32: ldc           #90                 // int -2147483648
      34: isub
      35: putfield      #355                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.label:I
      38: goto          53
      41: new           #354                // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1
      44: dup
      45: aload_0
      46: aload         4
      48: invokespecial #356                // Method love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1."<init>":(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lkotlin/coroutines/Continuation;)V
      51: astore        7
      53: aload         7
      55: getfield      #357                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.result:Ljava/lang/Object;
      58: astore        6
      60: invokestatic  #103                // Method kotlin/coroutines/intrinsics/IntrinsicsKt.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;
      63: astore        8
      65: aload         7
      67: getfield      #355                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.label:I
      70: tableswitch   { // 0 to 1
                     0: 92
                     1: 137
               default: 178
          }
      92: aload         6
      94: invokestatic  #109                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
      97: aload_0
      98: aload_1
      99: aload_2
     100: aload_3
     101: aconst_null
     102: aload         7
     104: bipush        8
     106: aconst_null
     107: aload         7
     109: aload_0
     110: putfield      #358                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.L$0:Ljava/lang/Object;
     113: aload         7
     115: aload_3
     116: putfield      #361                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.L$1:Ljava/lang/Object;
     119: aload         7
     121: iconst_1
     122: putfield      #355                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.label:I
     125: invokestatic  #363                // Method request$default:(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;ILjava/lang/Object;)Ljava/lang/Object;
     128: dup
     129: aload         8
     131: if_acmpne     162
     134: aload         8
     136: areturn
     137: aload         7
     139: getfield      #361                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.L$1:Ljava/lang/Object;
     142: checkcast     #296                // class kotlinx/serialization/json/Json
     145: astore_3
     146: aload         7
     148: getfield      #358                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestData$1.L$0:Ljava/lang/Object;
     151: checkcast     #2                  // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest
     154: astore_0
     155: aload         6
     157: invokestatic  #109                // Method kotlin/ResultKt.throwOnFailure:(Ljava/lang/Object;)V
     160: aload         6
     162: checkcast     #155                // class love/forte/simbot/kaiheila/api/ApiResult
     165: astore        5
     167: aload         5
     169: aload_3
     170: aload_0
     171: invokevirtual #365                // Method getResultDeserializer:()Lkotlinx/serialization/DeserializationStrategy;
     174: invokevirtual #369                // Method love/forte/simbot/kaiheila/api/ApiResult.parseDataOrThrow:(Lkotlinx/serialization/json/Json;Lkotlinx/serialization/DeserializationStrategy;)Ljava/lang/Object;
     177: areturn
     178: new           #254                // class java/lang/IllegalStateException
     181: dup
     182: ldc_w         #256                // String call to \'resume\' before \'invoke\' with coroutine
     185: invokespecial #257                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     188: athrow

  public static java.lang.Object requestData$default(love.forte.simbot.kaiheila.api.KaiheilaApiRequest, io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, kotlin.coroutines.Continuation, int, java.lang.Object);
    Code:
       0: aload         6
       2: ifnull        16
       5: new           #302                // class java/lang/UnsupportedOperationException
       8: dup
       9: ldc_w         #373                // String Super calls with default arguments not supported in this target, function: requestData
      12: invokespecial #305                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: iload         5
      18: iconst_4
      19: iand
      20: ifeq          27
      23: getstatic     #308                // Field DEFAULT_JSON:Lkotlinx/serialization/json/Json;
      26: astore_3
      27: aload_0
      28: aload_1
      29: aload_2
      30: aload_3
      31: aload         4
      33: invokevirtual #375                // Method requestData:(Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
      36: areturn

  public T requestDataBlocking(io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json);
    Code:
       0: aload_1
       1: ldc_w         #322                // String client
       4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #323                // String authorization
      11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_3
      15: ldc_w         #324                // String decoder
      18: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aconst_null
      22: new           #380                // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestDataBlocking$1
      25: dup
      26: aload_0
      27: aload_1
      28: aload_2
      29: aload_3
      30: aconst_null
      31: invokespecial #383                // Method love/forte/simbot/kaiheila/api/KaiheilaApiRequest$requestDataBlocking$1."<init>":(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Lkotlin/coroutines/Continuation;)V
      34: checkcast     #143                // class kotlin/jvm/functions/Function2
      37: iconst_1
      38: aconst_null
      39: invokestatic  #336                // Method love/forte/simbot/utils/BlockingRunnerKt.runInBlocking$default:(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;ILjava/lang/Object;)Ljava/lang/Object;
      42: areturn

  public static java.lang.Object requestDataBlocking$default(love.forte.simbot.kaiheila.api.KaiheilaApiRequest, io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json, int, java.lang.Object);
    Code:
       0: aload         5
       2: ifnull        16
       5: new           #302                // class java/lang/UnsupportedOperationException
       8: dup
       9: ldc_w         #387                // String Super calls with default arguments not supported in this target, function: requestDataBlocking
      12: invokespecial #305                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: iload         4
      18: iconst_4
      19: iand
      20: ifeq          27
      23: getstatic     #308                // Field DEFAULT_JSON:Lkotlinx/serialization/json/Json;
      26: astore_3
      27: aload_0
      28: aload_1
      29: aload_2
      30: aload_3
      31: invokevirtual #389                // Method requestDataBlocking:(Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;)Ljava/lang/Object;
      34: areturn

  public final love.forte.simbot.kaiheila.api.ApiResult requestBlocking(io.ktor.client.HttpClient, java.lang.String, kotlinx.serialization.json.Json);
    Code:
       0: aload_1
       1: ldc_w         #322                // String client
       4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #323                // String authorization
      11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_3
      15: ldc_w         #324                // String decoder
      18: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: aload_2
      24: aload_3
      25: aconst_null
      26: bipush        8
      28: aconst_null
      29: invokestatic  #392                // Method requestBlocking$default:(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Ljava/util/function/Consumer;ILjava/lang/Object;)Llove/forte/simbot/kaiheila/api/ApiResult;
      32: areturn

  public final love.forte.simbot.kaiheila.api.ApiResult requestBlocking(io.ktor.client.HttpClient, java.lang.String);
    Code:
       0: aload_1
       1: ldc_w         #322                // String client
       4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #323                // String authorization
      11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_0
      15: aload_1
      16: aload_2
      17: aconst_null
      18: aconst_null
      19: bipush        12
      21: aconst_null
      22: invokestatic  #392                // Method requestBlocking$default:(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;Ljava/util/function/Consumer;ILjava/lang/Object;)Llove/forte/simbot/kaiheila/api/ApiResult;
      25: areturn

  public final T requestDataBlocking(io.ktor.client.HttpClient, java.lang.String);
    Code:
       0: aload_1
       1: ldc_w         #322                // String client
       4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_2
       8: ldc_w         #323                // String authorization
      11: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_0
      15: aload_1
      16: aload_2
      17: aconst_null
      18: iconst_4
      19: aconst_null
      20: invokestatic  #397                // Method requestDataBlocking$default:(Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest;Lio/ktor/client/HttpClient;Ljava/lang/String;Lkotlinx/serialization/json/Json;ILjava/lang/Object;)Ljava/lang/Object;
      23: areturn

  private static final void defaultRequestPostChecker$lambda-1(io.ktor.client.statement.HttpResponse);
    Code:
       0: aload_0
       1: ldc_w         #401                // String it
       4: invokestatic  #30                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: return

  public static final kotlinx.serialization.json.Json access$getDEFAULT_JSON$cp();
    Code:
       0: getstatic     #308                // Field DEFAULT_JSON:Lkotlinx/serialization/json/Json;
       3: areturn

  public static final java.util.function.Consumer access$getDefaultRequestPostChecker$cp();
    Code:
       0: getstatic     #344                // Field defaultRequestPostChecker:Ljava/util/function/Consumer;
       3: areturn

  static {};
    Code:
       0: new           #408                // class love/forte/simbot/kaiheila/api/KaiheilaApiRequest$Companion
       3: dup
       4: aconst_null
       5: invokespecial #411                // Method love/forte/simbot/kaiheila/api/KaiheilaApiRequest$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #414                // Field Companion:Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest$Companion;
      11: aconst_null
      12: getstatic     #419                // Field love/forte/simbot/kaiheila/api/KaiheilaApiRequest$Companion$DEFAULT_JSON$1.INSTANCE:Llove/forte/simbot/kaiheila/api/KaiheilaApiRequest$Companion$DEFAULT_JSON$1;
      15: checkcast     #421                // class kotlin/jvm/functions/Function1
      18: iconst_1
      19: aconst_null
      20: invokestatic  #427                // Method kotlinx/serialization/json/JsonKt.Json$default:(Lkotlinx/serialization/json/Json;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lkotlinx/serialization/json/Json;
      23: putstatic     #308                // Field DEFAULT_JSON:Lkotlinx/serialization/json/Json;
      26: invokedynamic #442,  0            // InvokeDynamic #0:accept:()Ljava/util/function/Consumer;
      31: putstatic     #344                // Field defaultRequestPostChecker:Ljava/util/function/Consumer;
      34: return
}
