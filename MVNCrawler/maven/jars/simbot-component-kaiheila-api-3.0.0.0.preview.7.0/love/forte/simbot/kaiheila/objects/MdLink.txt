Compiled from "KMarkdown.kt"
public final class love.forte.simbot.kaiheila.objects.MdLink {
  private final java.lang.CharSequence name;

  private final java.lang.CharSequence url;

  public love.forte.simbot.kaiheila.objects.MdLink(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_2
       1: ldc           #12                 // String url
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokespecial #21                 // Method java/lang/Object."<init>":()V
      10: aload_0
      11: aload_1
      12: putfield      #24                 // Field name:Ljava/lang/CharSequence;
      15: aload_0
      16: aload_2
      17: putfield      #26                 // Field url:Ljava/lang/CharSequence;
      20: return

  public love.forte.simbot.kaiheila.objects.MdLink(java.lang.CharSequence, java.lang.CharSequence, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          8
       6: aconst_null
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #31                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
      14: return

  public final java.lang.CharSequence getName();
    Code:
       0: aload_0
       1: getfield      #24                 // Field name:Ljava/lang/CharSequence;
       4: areturn

  public final java.lang.CharSequence getUrl();
    Code:
       0: aload_0
       1: getfield      #26                 // Field url:Ljava/lang/CharSequence;
       4: areturn

  public final java.lang.CharSequence component1();
    Code:
       0: aload_0
       1: getfield      #24                 // Field name:Ljava/lang/CharSequence;
       4: areturn

  public final java.lang.CharSequence component2();
    Code:
       0: aload_0
       1: getfield      #26                 // Field url:Ljava/lang/CharSequence;
       4: areturn

  public final love.forte.simbot.kaiheila.objects.MdLink copy(java.lang.CharSequence, java.lang.CharSequence);
    Code:
       0: aload_2
       1: ldc           #12                 // String url
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #2                  // class love/forte/simbot/kaiheila/objects/MdLink
       9: dup
      10: aload_1
      11: aload_2
      12: invokespecial #31                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
      15: areturn

  public static love.forte.simbot.kaiheila.objects.MdLink copy$default(love.forte.simbot.kaiheila.objects.MdLink, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.Object);
    Code:
       0: iload_3
       1: iconst_1
       2: iand
       3: ifeq          11
       6: aload_0
       7: getfield      #24                 // Field name:Ljava/lang/CharSequence;
      10: astore_1
      11: iload_3
      12: iconst_2
      13: iand
      14: ifeq          22
      17: aload_0
      18: getfield      #26                 // Field url:Ljava/lang/CharSequence;
      21: astore_2
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokevirtual #42                 // Method copy:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Llove/forte/simbot/kaiheila/objects/MdLink;
      28: areturn

  public java.lang.String toString();
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #49                 // String MdLink(name=
       9: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #24                 // Field name:Ljava/lang/CharSequence;
      16: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #58                 // String , url=
      21: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #26                 // Field url:Ljava/lang/CharSequence;
      28: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        41
      33: invokevirtual #61                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #24                 // Field name:Ljava/lang/CharSequence;
       4: ifnonnull     11
       7: iconst_0
       8: goto          18
      11: aload_0
      12: getfield      #24                 // Field name:Ljava/lang/CharSequence;
      15: invokevirtual #67                 // Method java/lang/Object.hashCode:()I
      18: istore_1
      19: iload_1
      20: bipush        31
      22: imul
      23: aload_0
      24: getfield      #26                 // Field url:Ljava/lang/CharSequence;
      27: invokevirtual #67                 // Method java/lang/Object.hashCode:()I
      30: iadd
      31: istore_1
      32: iload_1
      33: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/objects/MdLink
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/MdLink
      20: astore_2
      21: aload_0
      22: getfield      #24                 // Field name:Ljava/lang/CharSequence;
      25: aload_2
      26: getfield      #24                 // Field name:Ljava/lang/CharSequence;
      29: invokestatic  #76                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #26                 // Field url:Ljava/lang/CharSequence;
      41: aload_2
      42: getfield      #26                 // Field url:Ljava/lang/CharSequence;
      45: invokestatic  #76                 // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: iconst_1
      54: ireturn

  public love.forte.simbot.kaiheila.objects.MdLink(java.lang.CharSequence);
    Code:
       0: aload_1
       1: ldc           #12                 // String url
       3: invokestatic  #18                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aconst_null
       8: aload_1
       9: iconst_1
      10: aconst_null
      11: invokespecial #80                 // Method "<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
      14: return
}
