Compiled from "ChannelPermissionOverwritesImpl.kt"
public final class love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl implements love.forte.simbot.kaiheila.objects.ChannelPermissionOverwrites {
  public static final love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl$Companion Companion;

  private final int roleId;

  private final int allow;

  private final int deny;

  public love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #17                 // Field roleId:I
       9: aload_0
      10: iload_2
      11: putfield      #19                 // Field allow:I
      14: aload_0
      15: iload_3
      16: putfield      #21                 // Field deny:I
      19: return

  public int getRoleId();
    Code:
       0: aload_0
       1: getfield      #17                 // Field roleId:I
       4: ireturn

  public static void getRoleId$annotations();
    Code:
       0: return

  public int getAllow();
    Code:
       0: aload_0
       1: getfield      #19                 // Field allow:I
       4: ireturn

  public int getDeny();
    Code:
       0: aload_0
       1: getfield      #21                 // Field deny:I
       4: ireturn

  public final int component1();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getRoleId:()I
       4: ireturn

  public final int component2();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getAllow:()I
       4: ireturn

  public final int component3();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getDeny:()I
       4: ireturn

  public final love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl copy(int, int, int);
    Code:
       0: new           #2                  // class love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl
       3: dup
       4: iload_1
       5: iload_2
       6: iload_3
       7: invokespecial #45                 // Method "<init>":(III)V
      10: areturn

  public static love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl copy$default(love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl, int, int, int, int, java.lang.Object);
    Code:
       0: iload         4
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #34                 // Method getRoleId:()I
      11: istore_1
      12: iload         4
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #37                 // Method getAllow:()I
      23: istore_2
      24: iload         4
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #40                 // Method getDeny:()I
      35: istore_3
      36: aload_0
      37: iload_1
      38: iload_2
      39: iload_3
      40: invokevirtual #49                 // Method copy:(III)Llove/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl;
      43: areturn

  public java.lang.String toString();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #56                 // String ChannelPermissionOverwritesImpl(roleId=
       9: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #34                 // Method getRoleId:()I
      16: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #65                 // String , allow=
      21: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #37                 // Method getAllow:()I
      28: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #67                 // String , deny=
      33: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #40                 // Method getDeny:()I
      40: invokevirtual #63                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: bipush        41
      45: invokevirtual #70                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: invokevirtual #72                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method getRoleId:()I
       4: invokestatic  #78                 // Method java/lang/Integer.hashCode:(I)I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #37                 // Method getAllow:()I
      16: invokestatic  #78                 // Method java/lang/Integer.hashCode:(I)I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #40                 // Method getDeny:()I
      29: invokestatic  #78                 // Method java/lang/Integer.hashCode:(I)I
      32: iadd
      33: istore_1
      34: iload_1
      35: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #34                 // Method getRoleId:()I
      25: aload_2
      26: invokevirtual #34                 // Method getRoleId:()I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_0
      35: invokevirtual #37                 // Method getAllow:()I
      38: aload_2
      39: invokevirtual #37                 // Method getAllow:()I
      42: if_icmpeq     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: invokevirtual #40                 // Method getDeny:()I
      51: aload_2
      52: invokevirtual #40                 // Method getDeny:()I
      55: if_icmpeq     60
      58: iconst_0
      59: ireturn
      60: iconst_1
      61: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #91                 // String self
       3: invokestatic  #97                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #98                 // String output
       9: invokestatic  #97                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #99                 // String serialDesc
      15: invokestatic  #97                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: aload_0
      22: invokevirtual #34                 // Method getRoleId:()I
      25: invokeinterface #105,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      30: aload_1
      31: aload_2
      32: iconst_1
      33: aload_0
      34: invokevirtual #37                 // Method getAllow:()I
      37: invokeinterface #105,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      42: aload_1
      43: aload_2
      44: iconst_2
      45: aload_0
      46: invokevirtual #40                 // Method getDeny:()I
      49: invokeinterface #105,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      54: return

  public love.forte.simbot.kaiheila.objects.impl.ChannelPermissionOverwritesImpl(int, int, int, int, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: bipush        7
       2: bipush        7
       4: iload_1
       5: iand
       6: if_icmpeq     21
       9: iload_1
      10: bipush        7
      12: getstatic     #125                // Field love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$$serializer;
      15: invokevirtual #129                // Method love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      18: invokestatic  #135                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      21: aload_0
      22: invokespecial #14                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: iload_2
      27: putfield      #17                 // Field roleId:I
      30: aload_0
      31: iload_3
      32: putfield      #19                 // Field allow:I
      35: aload_0
      36: iload         4
      38: putfield      #21                 // Field deny:I
      41: return

  static {};
    Code:
       0: new           #141                // class love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #144                // Method love/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #148                // Field Companion:Llove/forte/simbot/kaiheila/objects/impl/ChannelPermissionOverwritesImpl$Companion;
      11: return
}
