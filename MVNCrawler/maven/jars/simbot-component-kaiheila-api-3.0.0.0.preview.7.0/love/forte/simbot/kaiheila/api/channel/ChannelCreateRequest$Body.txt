Compiled from "ChannelCreateRequest.kt"
final class love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body {
  public static final love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body$Companion Companion;

  private final love.forte.simbot.ID guildId;

  private final java.lang.String name;

  private final int type;

  private final love.forte.simbot.ID parentId;

  private final int limitAmount;

  private final int voiceQuality;

  public love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body(love.forte.simbot.ID, java.lang.String, int, love.forte.simbot.ID, int, int);
    Code:
       0: aload_1
       1: ldc           #15                 // String guildId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #22                 // String name
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: invokespecial #25                 // Method java/lang/Object."<init>":()V
      16: aload_0
      17: aload_1
      18: putfield      #28                 // Field guildId:Llove/forte/simbot/ID;
      21: aload_0
      22: aload_2
      23: putfield      #31                 // Field name:Ljava/lang/String;
      26: aload_0
      27: iload_3
      28: putfield      #34                 // Field type:I
      31: aload_0
      32: aload         4
      34: putfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      37: aload_0
      38: iload         5
      40: putfield      #38                 // Field limitAmount:I
      43: aload_0
      44: iload         6
      46: putfield      #40                 // Field voiceQuality:I
      49: return

  public love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body(love.forte.simbot.ID, java.lang.String, int, love.forte.simbot.ID, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         7
       2: iconst_4
       3: iand
       4: ifeq          9
       7: iconst_1
       8: istore_3
       9: iload         7
      11: bipush        8
      13: iand
      14: ifeq          20
      17: aconst_null
      18: astore        4
      20: iload         7
      22: bipush        16
      24: iand
      25: ifeq          32
      28: bipush        99
      30: istore        5
      32: iload         7
      34: bipush        32
      36: iand
      37: ifeq          43
      40: iconst_2
      41: istore        6
      43: aload_0
      44: aload_1
      45: aload_2
      46: iload_3
      47: aload         4
      49: iload         5
      51: iload         6
      53: invokespecial #45                 // Method "<init>":(Llove/forte/simbot/ID;Ljava/lang/String;ILlove/forte/simbot/ID;II)V
      56: return

  public final love.forte.simbot.ID getGuildId();
    Code:
       0: aload_0
       1: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
       4: areturn

  public static void getGuildId$annotations();
    Code:
       0: return

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field name:Ljava/lang/String;
       4: areturn

  public final int getType();
    Code:
       0: aload_0
       1: getfield      #34                 // Field type:I
       4: ireturn

  public final love.forte.simbot.ID getParentId();
    Code:
       0: aload_0
       1: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
       4: areturn

  public static void getParentId$annotations();
    Code:
       0: return

  public final int getLimitAmount();
    Code:
       0: aload_0
       1: getfield      #38                 // Field limitAmount:I
       4: ireturn

  public static void getLimitAmount$annotations();
    Code:
       0: return

  public final int getVoiceQuality();
    Code:
       0: aload_0
       1: getfield      #40                 // Field voiceQuality:I
       4: ireturn

  public static void getVoiceQuality$annotations();
    Code:
       0: return

  public final love.forte.simbot.ID component1();
    Code:
       0: aload_0
       1: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
       4: areturn

  public final java.lang.String component2();
    Code:
       0: aload_0
       1: getfield      #31                 // Field name:Ljava/lang/String;
       4: areturn

  public final int component3();
    Code:
       0: aload_0
       1: getfield      #34                 // Field type:I
       4: ireturn

  public final love.forte.simbot.ID component4();
    Code:
       0: aload_0
       1: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
       4: areturn

  public final int component5();
    Code:
       0: aload_0
       1: getfield      #38                 // Field limitAmount:I
       4: ireturn

  public final int component6();
    Code:
       0: aload_0
       1: getfield      #40                 // Field voiceQuality:I
       4: ireturn

  public final love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body copy(love.forte.simbot.ID, java.lang.String, int, love.forte.simbot.ID, int, int);
    Code:
       0: aload_1
       1: ldc           #15                 // String guildId
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #22                 // String name
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body
      15: dup
      16: aload_1
      17: aload_2
      18: iload_3
      19: aload         4
      21: iload         5
      23: iload         6
      25: invokespecial #45                 // Method "<init>":(Llove/forte/simbot/ID;Ljava/lang/String;ILlove/forte/simbot/ID;II)V
      28: areturn

  public static love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body copy$default(love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body, love.forte.simbot.ID, java.lang.String, int, love.forte.simbot.ID, int, int, int, java.lang.Object);
    Code:
       0: iload         7
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
      11: astore_1
      12: iload         7
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: getfield      #31                 // Field name:Ljava/lang/String;
      23: astore_2
      24: iload         7
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: getfield      #34                 // Field type:I
      35: istore_3
      36: iload         7
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      48: astore        4
      50: iload         7
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: getfield      #38                 // Field limitAmount:I
      62: istore        5
      64: iload         7
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: getfield      #40                 // Field voiceQuality:I
      76: istore        6
      78: aload_0
      79: aload_1
      80: aload_2
      81: iload_3
      82: aload         4
      84: iload         5
      86: iload         6
      88: invokevirtual #79                 // Method copy:(Llove/forte/simbot/ID;Ljava/lang/String;ILlove/forte/simbot/ID;II)Llove/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body;
      91: areturn

  public java.lang.String toString();
    Code:
       0: new           #82                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #83                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #85                 // String Body(guildId=
       9: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
      16: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #94                 // String , name=
      21: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #31                 // Field name:Ljava/lang/String;
      28: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #96                 // String , type=
      33: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #34                 // Field type:I
      40: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #101                // String , parentId=
      45: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      52: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #103                // String , limitAmount=
      57: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #38                 // Field limitAmount:I
      64: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      67: ldc           #105                // String , voiceQuality=
      69: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #40                 // Field voiceQuality:I
      76: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      79: bipush        41
      81: invokevirtual #108                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      84: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
       4: invokevirtual #115                // Method love/forte/simbot/ID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: getfield      #31                 // Field name:Ljava/lang/String;
      16: invokevirtual #118                // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: getfield      #34                 // Field type:I
      29: invokestatic  #123                // Method java/lang/Integer.hashCode:(I)I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      42: ifnonnull     49
      45: iconst_0
      46: goto          56
      49: aload_0
      50: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      53: invokevirtual #115                // Method love/forte/simbot/ID.hashCode:()I
      56: iadd
      57: istore_1
      58: iload_1
      59: bipush        31
      61: imul
      62: aload_0
      63: getfield      #38                 // Field limitAmount:I
      66: invokestatic  #123                // Method java/lang/Integer.hashCode:(I)I
      69: iadd
      70: istore_1
      71: iload_1
      72: bipush        31
      74: imul
      75: aload_0
      76: getfield      #40                 // Field voiceQuality:I
      79: invokestatic  #123                // Method java/lang/Integer.hashCode:(I)I
      82: iadd
      83: istore_1
      84: iload_1
      85: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body
      20: astore_2
      21: aload_0
      22: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
      25: aload_2
      26: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
      29: invokestatic  #131                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: getfield      #31                 // Field name:Ljava/lang/String;
      41: aload_2
      42: getfield      #31                 // Field name:Ljava/lang/String;
      45: invokestatic  #131                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: getfield      #34                 // Field type:I
      57: aload_2
      58: getfield      #34                 // Field type:I
      61: if_icmpeq     66
      64: iconst_0
      65: ireturn
      66: aload_0
      67: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      70: aload_2
      71: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      74: invokestatic  #131                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: getfield      #38                 // Field limitAmount:I
      86: aload_2
      87: getfield      #38                 // Field limitAmount:I
      90: if_icmpeq     95
      93: iconst_0
      94: ireturn
      95: aload_0
      96: getfield      #40                 // Field voiceQuality:I
      99: aload_2
     100: getfield      #40                 // Field voiceQuality:I
     103: if_icmpeq     108
     106: iconst_0
     107: ireturn
     108: iconst_1
     109: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #139                // String self
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #140                // String output
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #141                // String serialDesc
      15: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #146                // Field love/forte/simbot/ID$AsCharSequenceIDSerializer.INSTANCE:Llove/forte/simbot/ID$AsCharSequenceIDSerializer;
      24: checkcast     #148                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: getfield      #28                 // Field guildId:Llove/forte/simbot/ID;
      31: invokeinterface #154,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: aload_0
      40: getfield      #31                 // Field name:Ljava/lang/String;
      43: invokeinterface #158,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      48: aload_1
      49: aload_2
      50: iconst_2
      51: invokeinterface #162,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
      56: ifeq          63
      59: iconst_1
      60: goto          76
      63: aload_0
      64: getfield      #34                 // Field type:I
      67: iconst_1
      68: if_icmpeq     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ifeq          91
      79: aload_1
      80: aload_2
      81: iconst_2
      82: aload_0
      83: getfield      #34                 // Field type:I
      86: invokeinterface #166,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      91: aload_1
      92: aload_2
      93: iconst_3
      94: invokeinterface #162,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
      99: ifeq          106
     102: iconst_1
     103: goto          118
     106: aload_0
     107: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
     110: ifnull        117
     113: iconst_1
     114: goto          118
     117: iconst_0
     118: ifeq          139
     121: aload_1
     122: aload_2
     123: iconst_3
     124: getstatic     #146                // Field love/forte/simbot/ID$AsCharSequenceIDSerializer.INSTANCE:Llove/forte/simbot/ID$AsCharSequenceIDSerializer;
     127: checkcast     #148                // class kotlinx/serialization/SerializationStrategy
     130: aload_0
     131: getfield      #36                 // Field parentId:Llove/forte/simbot/ID;
     134: invokeinterface #169,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeNullableSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     139: aload_1
     140: aload_2
     141: iconst_4
     142: invokeinterface #162,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     147: ifeq          154
     150: iconst_1
     151: goto          168
     154: aload_0
     155: getfield      #38                 // Field limitAmount:I
     158: bipush        99
     160: if_icmpeq     167
     163: iconst_1
     164: goto          168
     167: iconst_0
     168: ifeq          183
     171: aload_1
     172: aload_2
     173: iconst_4
     174: aload_0
     175: getfield      #38                 // Field limitAmount:I
     178: invokeinterface #166,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     183: aload_1
     184: aload_2
     185: iconst_5
     186: invokeinterface #162,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     191: ifeq          198
     194: iconst_1
     195: goto          211
     198: aload_0
     199: getfield      #40                 // Field voiceQuality:I
     202: iconst_2
     203: if_icmpeq     210
     206: iconst_1
     207: goto          211
     210: iconst_0
     211: ifeq          226
     214: aload_1
     215: aload_2
     216: iconst_5
     217: aload_0
     218: getfield      #40                 // Field voiceQuality:I
     221: invokeinterface #166,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     226: return

  public love.forte.simbot.kaiheila.api.channel.ChannelCreateRequest$Body(int, love.forte.simbot.ID, java.lang.String, int, love.forte.simbot.ID, int, int, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: iconst_3
       1: iconst_3
       2: iload_1
       3: iand
       4: if_icmpeq     18
       7: iload_1
       8: iconst_3
       9: getstatic     #188                // Field love/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body$$serializer;
      12: invokevirtual #192                // Method love/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      15: invokestatic  #198                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      18: aload_0
      19: invokespecial #25                 // Method java/lang/Object."<init>":()V
      22: aload_0
      23: aload_2
      24: putfield      #28                 // Field guildId:Llove/forte/simbot/ID;
      27: aload_0
      28: aload_3
      29: putfield      #31                 // Field name:Ljava/lang/String;
      32: iload_1
      33: iconst_4
      34: iand
      35: ifne          46
      38: aload_0
      39: iconst_1
      40: putfield      #34                 // Field type:I
      43: goto          52
      46: aload_0
      47: iload         4
      49: putfield      #34                 // Field type:I
      52: iload_1
      53: bipush        8
      55: iand
      56: ifne          67
      59: aload_0
      60: aconst_null
      61: putfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      64: goto          73
      67: aload_0
      68: aload         5
      70: putfield      #36                 // Field parentId:Llove/forte/simbot/ID;
      73: iload_1
      74: bipush        16
      76: iand
      77: ifne          89
      80: aload_0
      81: bipush        99
      83: putfield      #38                 // Field limitAmount:I
      86: goto          95
      89: aload_0
      90: iload         6
      92: putfield      #38                 // Field limitAmount:I
      95: iload_1
      96: bipush        32
      98: iand
      99: ifne          110
     102: aload_0
     103: iconst_2
     104: putfield      #40                 // Field voiceQuality:I
     107: goto          116
     110: aload_0
     111: iload         7
     113: putfield      #40                 // Field voiceQuality:I
     116: return

  static {};
    Code:
       0: new           #206                // class love/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body$Companion
       3: dup
       4: aconst_null
       5: invokespecial #209                // Method love/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #213                // Field Companion:Llove/forte/simbot/kaiheila/api/channel/ChannelCreateRequest$Body$Companion;
      11: return
}
