Compiled from "QuoteImpl.kt"
public final class love.forte.simbot.kaiheila.objects.impl.QuoteImpl implements love.forte.simbot.kaiheila.objects.Quote {
  public static final love.forte.simbot.kaiheila.objects.impl.QuoteImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final int type;

  private final java.lang.String content;

  private final love.forte.simbot.Timestamp createAt;

  private final love.forte.simbot.kaiheila.objects.UserImpl author;

  public love.forte.simbot.kaiheila.objects.impl.QuoteImpl(love.forte.simbot.CharSequenceID, int, java.lang.String, love.forte.simbot.Timestamp, love.forte.simbot.kaiheila.objects.UserImpl);
    Code:
       0: aload_1
       1: ldc           #15                 // String id
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #22                 // String content
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #23                 // String createAt
      16: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload         5
      21: ldc           #24                 // String author
      23: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: invokespecial #27                 // Method java/lang/Object."<init>":()V
      30: aload_0
      31: aload_1
      32: putfield      #30                 // Field id:Llove/forte/simbot/CharSequenceID;
      35: aload_0
      36: iload_2
      37: putfield      #33                 // Field type:I
      40: aload_0
      41: aload_3
      42: putfield      #36                 // Field content:Ljava/lang/String;
      45: aload_0
      46: aload         4
      48: putfield      #39                 // Field createAt:Llove/forte/simbot/Timestamp;
      51: aload_0
      52: aload         5
      54: putfield      #42                 // Field author:Llove/forte/simbot/kaiheila/objects/UserImpl;
      57: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #30                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #33                 // Field type:I
       4: ireturn

  public java.lang.String getContent();
    Code:
       0: aload_0
       1: getfield      #36                 // Field content:Ljava/lang/String;
       4: areturn

  public love.forte.simbot.Timestamp getCreateAt();
    Code:
       0: aload_0
       1: getfield      #39                 // Field createAt:Llove/forte/simbot/Timestamp;
       4: areturn

  public static void getCreateAt$annotations();
    Code:
       0: return

  public love.forte.simbot.kaiheila.objects.UserImpl getAuthor();
    Code:
       0: aload_0
       1: getfield      #42                 // Field author:Llove/forte/simbot/kaiheila/objects/UserImpl;
       4: areturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final int component2();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getType:()I
       4: ireturn

  public final java.lang.String component3();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getContent:()Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.Timestamp component4();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method getCreateAt:()Llove/forte/simbot/Timestamp;
       4: areturn

  public final love.forte.simbot.kaiheila.objects.UserImpl component5();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
       4: areturn

  public final love.forte.simbot.kaiheila.objects.impl.QuoteImpl copy(love.forte.simbot.CharSequenceID, int, java.lang.String, love.forte.simbot.Timestamp, love.forte.simbot.kaiheila.objects.UserImpl);
    Code:
       0: aload_1
       1: ldc           #15                 // String id
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_3
       7: ldc           #22                 // String content
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload         4
      14: ldc           #23                 // String createAt
      16: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      19: aload         5
      21: ldc           #24                 // String author
      23: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      26: new           #2                  // class love/forte/simbot/kaiheila/objects/impl/QuoteImpl
      29: dup
      30: aload_1
      31: iload_2
      32: aload_3
      33: aload         4
      35: aload         5
      37: invokespecial #77                 // Method "<init>":(Llove/forte/simbot/CharSequenceID;ILjava/lang/String;Llove/forte/simbot/Timestamp;Llove/forte/simbot/kaiheila/objects/UserImpl;)V
      40: areturn

  public static love.forte.simbot.kaiheila.objects.impl.QuoteImpl copy$default(love.forte.simbot.kaiheila.objects.impl.QuoteImpl, love.forte.simbot.CharSequenceID, int, java.lang.String, love.forte.simbot.Timestamp, love.forte.simbot.kaiheila.objects.UserImpl, int, java.lang.Object);
    Code:
       0: iload         6
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #61                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         6
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #64                 // Method getType:()I
      23: istore_2
      24: iload         6
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #67                 // Method getContent:()Ljava/lang/String;
      35: astore_3
      36: iload         6
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #70                 // Method getCreateAt:()Llove/forte/simbot/Timestamp;
      48: astore        4
      50: iload         6
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      62: astore        5
      64: aload_0
      65: aload_1
      66: iload_2
      67: aload_3
      68: aload         4
      70: aload         5
      72: invokevirtual #81                 // Method copy:(Llove/forte/simbot/CharSequenceID;ILjava/lang/String;Llove/forte/simbot/Timestamp;Llove/forte/simbot/kaiheila/objects/UserImpl;)Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl;
      75: areturn

  public java.lang.String toString();
    Code:
       0: new           #84                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #85                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #87                 // String QuoteImpl(id=
       9: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #61                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      16: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #96                 // String , type=
      21: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #64                 // Method getType:()I
      28: invokevirtual #99                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #101                // String , content=
      33: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #67                 // Method getContent:()Ljava/lang/String;
      40: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #103                // String , createAt=
      45: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #70                 // Method getCreateAt:()Llove/forte/simbot/Timestamp;
      52: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: ldc           #105                // String , author=
      57: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      64: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: bipush        41
      69: invokevirtual #108                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      72: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #115                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #64                 // Method getType:()I
      16: invokestatic  #120                // Method java/lang/Integer.hashCode:(I)I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #67                 // Method getContent:()Ljava/lang/String;
      29: invokevirtual #123                // Method java/lang/String.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #70                 // Method getCreateAt:()Llove/forte/simbot/Timestamp;
      42: invokevirtual #126                // Method love/forte/simbot/Timestamp.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      55: invokevirtual #129                // Method love/forte/simbot/kaiheila/objects/UserImpl.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/objects/impl/QuoteImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/impl/QuoteImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #61                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #61                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #64                 // Method getType:()I
      41: aload_2
      42: invokevirtual #64                 // Method getType:()I
      45: if_icmpeq     50
      48: iconst_0
      49: ireturn
      50: aload_0
      51: invokevirtual #67                 // Method getContent:()Ljava/lang/String;
      54: aload_2
      55: invokevirtual #67                 // Method getContent:()Ljava/lang/String;
      58: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      61: ifne          66
      64: iconst_0
      65: ireturn
      66: aload_0
      67: invokevirtual #70                 // Method getCreateAt:()Llove/forte/simbot/Timestamp;
      70: aload_2
      71: invokevirtual #70                 // Method getCreateAt:()Llove/forte/simbot/Timestamp;
      74: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      77: ifne          82
      80: iconst_0
      81: ireturn
      82: aload_0
      83: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      86: aload_2
      87: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      90: invokestatic  #138                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifne          98
      96: iconst_0
      97: ireturn
      98: iconst_1
      99: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.objects.impl.QuoteImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc           #146                // String self
       3: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #147                // String output
       9: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #148                // String serialDesc
      15: invokestatic  #21                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: aload_2
      20: iconst_0
      21: getstatic     #154                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      24: checkcast     #156                // class kotlinx/serialization/SerializationStrategy
      27: aload_0
      28: invokevirtual #61                 // Method getId:()Llove/forte/simbot/CharSequenceID;
      31: invokeinterface #162,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      36: aload_1
      37: aload_2
      38: iconst_1
      39: aload_0
      40: invokevirtual #64                 // Method getType:()I
      43: invokeinterface #166,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
      48: aload_1
      49: aload_2
      50: iconst_2
      51: aload_0
      52: invokevirtual #67                 // Method getContent:()Ljava/lang/String;
      55: invokeinterface #170,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      60: aload_1
      61: aload_2
      62: iconst_3
      63: getstatic     #175                // Field love/forte/simbot/TimestampSerializer.INSTANCE:Llove/forte/simbot/TimestampSerializer;
      66: checkcast     #156                // class kotlinx/serialization/SerializationStrategy
      69: aload_0
      70: invokevirtual #70                 // Method getCreateAt:()Llove/forte/simbot/Timestamp;
      73: invokeinterface #162,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      78: aload_1
      79: aload_2
      80: iconst_4
      81: getstatic     #180                // Field love/forte/simbot/kaiheila/objects/UserImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/UserImpl$$serializer;
      84: checkcast     #156                // class kotlinx/serialization/SerializationStrategy
      87: aload_0
      88: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
      91: invokeinterface #162,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      96: return

  public love.forte.simbot.kaiheila.objects.impl.QuoteImpl(int, love.forte.simbot.CharSequenceID, int, java.lang.String, love.forte.simbot.Timestamp, love.forte.simbot.kaiheila.objects.UserImpl, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: bipush        31
       2: bipush        31
       4: iload_1
       5: iand
       6: if_icmpeq     21
       9: iload_1
      10: bipush        31
      12: getstatic     #199                // Field love/forte/simbot/kaiheila/objects/impl/QuoteImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl$$serializer;
      15: invokevirtual #203                // Method love/forte/simbot/kaiheila/objects/impl/QuoteImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      18: invokestatic  #209                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      21: aload_0
      22: invokespecial #27                 // Method java/lang/Object."<init>":()V
      25: aload_0
      26: aload_2
      27: putfield      #30                 // Field id:Llove/forte/simbot/CharSequenceID;
      30: aload_0
      31: iload_3
      32: putfield      #33                 // Field type:I
      35: aload_0
      36: aload         4
      38: putfield      #36                 // Field content:Ljava/lang/String;
      41: aload_0
      42: aload         5
      44: putfield      #39                 // Field createAt:Llove/forte/simbot/Timestamp;
      47: aload_0
      48: aload         6
      50: putfield      #42                 // Field author:Llove/forte/simbot/kaiheila/objects/UserImpl;
      53: return

  public love.forte.simbot.kaiheila.objects.User getAuthor();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method getAuthor:()Llove/forte/simbot/kaiheila/objects/UserImpl;
       4: checkcast     #215                // class love/forte/simbot/kaiheila/objects/User
       7: areturn

  static {};
    Code:
       0: new           #218                // class love/forte/simbot/kaiheila/objects/impl/QuoteImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #221                // Method love/forte/simbot/kaiheila/objects/impl/QuoteImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #225                // Field Companion:Llove/forte/simbot/kaiheila/objects/impl/QuoteImpl$Companion;
      11: return
}
