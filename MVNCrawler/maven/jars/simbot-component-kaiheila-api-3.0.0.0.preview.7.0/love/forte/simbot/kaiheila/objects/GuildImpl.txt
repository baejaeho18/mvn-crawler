Compiled from "Guild.kt"
public final class love.forte.simbot.kaiheila.objects.GuildImpl implements love.forte.simbot.kaiheila.objects.Guild {
  public static final love.forte.simbot.kaiheila.objects.GuildImpl$Companion Companion;

  private final love.forte.simbot.CharSequenceID id;

  private final java.lang.String name;

  private final java.lang.String topic;

  private final love.forte.simbot.CharSequenceID masterId;

  private final java.lang.String icon;

  private final int notifyType;

  private final java.lang.String region;

  private final boolean enableOpen;

  private final love.forte.simbot.CharSequenceID openId;

  private final love.forte.simbot.CharSequenceID defaultChannelId;

  private final love.forte.simbot.CharSequenceID welcomeChannelId;

  private final java.util.List<love.forte.simbot.kaiheila.objects.impl.RoleImpl> roles;

  private final java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelImpl> channels;

  private final int maximumChannel;

  private final love.forte.simbot.Timestamp createTime;

  private final int currentMember;

  private final int maximumMember;

  public love.forte.simbot.kaiheila.objects.GuildImpl(love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.util.List<love.forte.simbot.kaiheila.objects.impl.RoleImpl>, java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelImpl>, int, love.forte.simbot.Timestamp, int, int);
    Code:
       0: aload_1
       1: ldc           #28                 // String id
       3: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #35                 // String name
       9: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #36                 // String topic
      15: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #37                 // String masterId
      22: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #38                 // String icon
      29: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         7
      34: ldc           #39                 // String region
      36: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         9
      41: ldc           #40                 // String openId
      43: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         10
      48: ldc           #41                 // String defaultChannelId
      50: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload         11
      55: ldc           #42                 // String welcomeChannelId
      57: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      60: aload         12
      62: ldc           #43                 // String roles
      64: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      67: aload         13
      69: ldc           #44                 // String channels
      71: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      74: aload         15
      76: ldc           #45                 // String createTime
      78: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      81: aload_0
      82: invokespecial #48                 // Method java/lang/Object."<init>":()V
      85: aload_0
      86: aload_1
      87: putfield      #51                 // Field id:Llove/forte/simbot/CharSequenceID;
      90: aload_0
      91: aload_2
      92: putfield      #54                 // Field name:Ljava/lang/String;
      95: aload_0
      96: aload_3
      97: putfield      #56                 // Field topic:Ljava/lang/String;
     100: aload_0
     101: aload         4
     103: putfield      #58                 // Field masterId:Llove/forte/simbot/CharSequenceID;
     106: aload_0
     107: aload         5
     109: putfield      #60                 // Field icon:Ljava/lang/String;
     112: aload_0
     113: iload         6
     115: putfield      #63                 // Field notifyType:I
     118: aload_0
     119: aload         7
     121: putfield      #65                 // Field region:Ljava/lang/String;
     124: aload_0
     125: iload         8
     127: putfield      #68                 // Field enableOpen:Z
     130: aload_0
     131: aload         9
     133: putfield      #70                 // Field openId:Llove/forte/simbot/CharSequenceID;
     136: aload_0
     137: aload         10
     139: putfield      #72                 // Field defaultChannelId:Llove/forte/simbot/CharSequenceID;
     142: aload_0
     143: aload         11
     145: putfield      #74                 // Field welcomeChannelId:Llove/forte/simbot/CharSequenceID;
     148: aload_0
     149: aload         12
     151: putfield      #77                 // Field roles:Ljava/util/List;
     154: aload_0
     155: aload         13
     157: putfield      #79                 // Field channels:Ljava/util/List;
     160: aload_0
     161: iload         14
     163: putfield      #81                 // Field maximumChannel:I
     166: aload_0
     167: aload         15
     169: putfield      #84                 // Field createTime:Llove/forte/simbot/Timestamp;
     172: aload_0
     173: iload         16
     175: putfield      #86                 // Field currentMember:I
     178: aload_0
     179: iload         17
     181: putfield      #88                 // Field maximumMember:I
     184: return

  public love.forte.simbot.kaiheila.objects.GuildImpl(love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.util.List, java.util.List, int, love.forte.simbot.Timestamp, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker);
    Code:
       0: iload         18
       2: sipush        8192
       5: iand
       6: ifeq          12
       9: iconst_m1
      10: istore        14
      12: iload         18
      14: sipush        16384
      17: iand
      18: ifeq          29
      21: getstatic     #97                 // Field love/forte/simbot/Timestamp$NotSupport.INSTANCE:Llove/forte/simbot/Timestamp$NotSupport;
      24: checkcast     #99                 // class love/forte/simbot/Timestamp
      27: astore        15
      29: iload         18
      31: ldc           #100                // int 32768
      33: iand
      34: ifeq          40
      37: iconst_m1
      38: istore        16
      40: iload         18
      42: ldc           #101                // int 65536
      44: iand
      45: ifeq          51
      48: iconst_m1
      49: istore        17
      51: aload_0
      52: aload_1
      53: aload_2
      54: aload_3
      55: aload         4
      57: aload         5
      59: iload         6
      61: aload         7
      63: iload         8
      65: aload         9
      67: aload         10
      69: aload         11
      71: aload         12
      73: aload         13
      75: iload         14
      77: aload         15
      79: iload         16
      81: iload         17
      83: invokespecial #103                // Method "<init>":(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ILjava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/util/List;Ljava/util/List;ILlove/forte/simbot/Timestamp;II)V
      86: return

  public love.forte.simbot.CharSequenceID getId();
    Code:
       0: aload_0
       1: getfield      #51                 // Field id:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #54                 // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getTopic();
    Code:
       0: aload_0
       1: getfield      #56                 // Field topic:Ljava/lang/String;
       4: areturn

  public love.forte.simbot.CharSequenceID getMasterId();
    Code:
       0: aload_0
       1: getfield      #58                 // Field masterId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getMasterId$annotations();
    Code:
       0: return

  public java.lang.String getIcon();
    Code:
       0: aload_0
       1: getfield      #60                 // Field icon:Ljava/lang/String;
       4: areturn

  public int getNotifyType();
    Code:
       0: aload_0
       1: getfield      #63                 // Field notifyType:I
       4: ireturn

  public static void getNotifyType$annotations();
    Code:
       0: return

  public java.lang.String getRegion();
    Code:
       0: aload_0
       1: getfield      #65                 // Field region:Ljava/lang/String;
       4: areturn

  public boolean getEnableOpen();
    Code:
       0: aload_0
       1: getfield      #68                 // Field enableOpen:Z
       4: ireturn

  public static void getEnableOpen$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getOpenId();
    Code:
       0: aload_0
       1: getfield      #70                 // Field openId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getOpenId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getDefaultChannelId();
    Code:
       0: aload_0
       1: getfield      #72                 // Field defaultChannelId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getDefaultChannelId$annotations();
    Code:
       0: return

  public love.forte.simbot.CharSequenceID getWelcomeChannelId();
    Code:
       0: aload_0
       1: getfield      #74                 // Field welcomeChannelId:Llove/forte/simbot/CharSequenceID;
       4: areturn

  public static void getWelcomeChannelId$annotations();
    Code:
       0: return

  public java.util.List<love.forte.simbot.kaiheila.objects.impl.RoleImpl> getRoles();
    Code:
       0: aload_0
       1: getfield      #77                 // Field roles:Ljava/util/List;
       4: areturn

  public java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelImpl> getChannels();
    Code:
       0: aload_0
       1: getfield      #79                 // Field channels:Ljava/util/List;
       4: areturn

  public int getMaximumChannel();
    Code:
       0: aload_0
       1: getfield      #81                 // Field maximumChannel:I
       4: ireturn

  public love.forte.simbot.Timestamp getCreateTime();
    Code:
       0: aload_0
       1: getfield      #84                 // Field createTime:Llove/forte/simbot/Timestamp;
       4: areturn

  public int getCurrentMember();
    Code:
       0: aload_0
       1: getfield      #86                 // Field currentMember:I
       4: ireturn

  public int getMaximumMember();
    Code:
       0: aload_0
       1: getfield      #88                 // Field maximumMember:I
       4: ireturn

  public final love.forte.simbot.CharSequenceID component1();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component2();
    Code:
       0: aload_0
       1: invokevirtual #148                // Method getName:()Ljava/lang/String;
       4: areturn

  public final java.lang.String component3();
    Code:
       0: aload_0
       1: invokevirtual #151                // Method getTopic:()Ljava/lang/String;
       4: areturn

  public final love.forte.simbot.CharSequenceID component4();
    Code:
       0: aload_0
       1: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.lang.String component5();
    Code:
       0: aload_0
       1: invokevirtual #157                // Method getIcon:()Ljava/lang/String;
       4: areturn

  public final int component6();
    Code:
       0: aload_0
       1: invokevirtual #160                // Method getNotifyType:()I
       4: ireturn

  public final java.lang.String component7();
    Code:
       0: aload_0
       1: invokevirtual #163                // Method getRegion:()Ljava/lang/String;
       4: areturn

  public final boolean component8();
    Code:
       0: aload_0
       1: invokevirtual #166                // Method getEnableOpen:()Z
       4: ireturn

  public final love.forte.simbot.CharSequenceID component9();
    Code:
       0: aload_0
       1: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component10();
    Code:
       0: aload_0
       1: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final love.forte.simbot.CharSequenceID component11();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
       4: areturn

  public final java.util.List<love.forte.simbot.kaiheila.objects.impl.RoleImpl> component12();
    Code:
       0: aload_0
       1: invokevirtual #178                // Method getRoles:()Ljava/util/List;
       4: areturn

  public final java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelImpl> component13();
    Code:
       0: aload_0
       1: invokevirtual #181                // Method getChannels:()Ljava/util/List;
       4: areturn

  public final int component14();
    Code:
       0: aload_0
       1: invokevirtual #184                // Method getMaximumChannel:()I
       4: ireturn

  public final love.forte.simbot.Timestamp component15();
    Code:
       0: aload_0
       1: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
       4: areturn

  public final int component16();
    Code:
       0: aload_0
       1: invokevirtual #190                // Method getCurrentMember:()I
       4: ireturn

  public final int component17();
    Code:
       0: aload_0
       1: invokevirtual #193                // Method getMaximumMember:()I
       4: ireturn

  public final love.forte.simbot.kaiheila.objects.GuildImpl copy(love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.util.List<love.forte.simbot.kaiheila.objects.impl.RoleImpl>, java.util.List<love.forte.simbot.kaiheila.objects.impl.ChannelImpl>, int, love.forte.simbot.Timestamp, int, int);
    Code:
       0: aload_1
       1: ldc           #28                 // String id
       3: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #35                 // String name
       9: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_3
      13: ldc           #36                 // String topic
      15: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload         4
      20: ldc           #37                 // String masterId
      22: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      25: aload         5
      27: ldc           #38                 // String icon
      29: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload         7
      34: ldc           #39                 // String region
      36: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload         9
      41: ldc           #40                 // String openId
      43: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload         10
      48: ldc           #41                 // String defaultChannelId
      50: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      53: aload         11
      55: ldc           #42                 // String welcomeChannelId
      57: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      60: aload         12
      62: ldc           #43                 // String roles
      64: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      67: aload         13
      69: ldc           #44                 // String channels
      71: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      74: aload         15
      76: ldc           #45                 // String createTime
      78: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      81: new           #2                  // class love/forte/simbot/kaiheila/objects/GuildImpl
      84: dup
      85: aload_1
      86: aload_2
      87: aload_3
      88: aload         4
      90: aload         5
      92: iload         6
      94: aload         7
      96: iload         8
      98: aload         9
     100: aload         10
     102: aload         11
     104: aload         12
     106: aload         13
     108: iload         14
     110: aload         15
     112: iload         16
     114: iload         17
     116: invokespecial #103                // Method "<init>":(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ILjava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/util/List;Ljava/util/List;ILlove/forte/simbot/Timestamp;II)V
     119: areturn

  public static love.forte.simbot.kaiheila.objects.GuildImpl copy$default(love.forte.simbot.kaiheila.objects.GuildImpl, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.util.List, java.util.List, int, love.forte.simbot.Timestamp, int, int, int, java.lang.Object);
    Code:
       0: iload         18
       2: iconst_1
       3: iand
       4: ifeq          12
       7: aload_0
       8: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
      11: astore_1
      12: iload         18
      14: iconst_2
      15: iand
      16: ifeq          24
      19: aload_0
      20: invokevirtual #148                // Method getName:()Ljava/lang/String;
      23: astore_2
      24: iload         18
      26: iconst_4
      27: iand
      28: ifeq          36
      31: aload_0
      32: invokevirtual #151                // Method getTopic:()Ljava/lang/String;
      35: astore_3
      36: iload         18
      38: bipush        8
      40: iand
      41: ifeq          50
      44: aload_0
      45: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      48: astore        4
      50: iload         18
      52: bipush        16
      54: iand
      55: ifeq          64
      58: aload_0
      59: invokevirtual #157                // Method getIcon:()Ljava/lang/String;
      62: astore        5
      64: iload         18
      66: bipush        32
      68: iand
      69: ifeq          78
      72: aload_0
      73: invokevirtual #160                // Method getNotifyType:()I
      76: istore        6
      78: iload         18
      80: bipush        64
      82: iand
      83: ifeq          92
      86: aload_0
      87: invokevirtual #163                // Method getRegion:()Ljava/lang/String;
      90: astore        7
      92: iload         18
      94: sipush        128
      97: iand
      98: ifeq          107
     101: aload_0
     102: invokevirtual #166                // Method getEnableOpen:()Z
     105: istore        8
     107: iload         18
     109: sipush        256
     112: iand
     113: ifeq          122
     116: aload_0
     117: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     120: astore        9
     122: iload         18
     124: sipush        512
     127: iand
     128: ifeq          137
     131: aload_0
     132: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     135: astore        10
     137: iload         18
     139: sipush        1024
     142: iand
     143: ifeq          152
     146: aload_0
     147: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     150: astore        11
     152: iload         18
     154: sipush        2048
     157: iand
     158: ifeq          167
     161: aload_0
     162: invokevirtual #178                // Method getRoles:()Ljava/util/List;
     165: astore        12
     167: iload         18
     169: sipush        4096
     172: iand
     173: ifeq          182
     176: aload_0
     177: invokevirtual #181                // Method getChannels:()Ljava/util/List;
     180: astore        13
     182: iload         18
     184: sipush        8192
     187: iand
     188: ifeq          197
     191: aload_0
     192: invokevirtual #184                // Method getMaximumChannel:()I
     195: istore        14
     197: iload         18
     199: sipush        16384
     202: iand
     203: ifeq          212
     206: aload_0
     207: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
     210: astore        15
     212: iload         18
     214: ldc           #100                // int 32768
     216: iand
     217: ifeq          226
     220: aload_0
     221: invokevirtual #190                // Method getCurrentMember:()I
     224: istore        16
     226: iload         18
     228: ldc           #101                // int 65536
     230: iand
     231: ifeq          240
     234: aload_0
     235: invokevirtual #193                // Method getMaximumMember:()I
     238: istore        17
     240: aload_0
     241: aload_1
     242: aload_2
     243: aload_3
     244: aload         4
     246: aload         5
     248: iload         6
     250: aload         7
     252: iload         8
     254: aload         9
     256: aload         10
     258: aload         11
     260: aload         12
     262: aload         13
     264: iload         14
     266: aload         15
     268: iload         16
     270: iload         17
     272: invokevirtual #200                // Method copy:(Llove/forte/simbot/CharSequenceID;Ljava/lang/String;Ljava/lang/String;Llove/forte/simbot/CharSequenceID;Ljava/lang/String;ILjava/lang/String;ZLlove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Llove/forte/simbot/CharSequenceID;Ljava/util/List;Ljava/util/List;ILlove/forte/simbot/Timestamp;II)Llove/forte/simbot/kaiheila/objects/GuildImpl;
     275: areturn

  public java.lang.String toString();
    Code:
       0: new           #203                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #204                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #206                // String GuildImpl(id=
      11: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: aload_0
      15: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
      18: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      21: ldc           #215                // String , name=
      23: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #148                // Method getName:()Ljava/lang/String;
      30: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #217                // String , topic=
      35: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #151                // Method getTopic:()Ljava/lang/String;
      42: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #219                // String , masterId=
      47: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_0
      51: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      54: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      57: ldc           #221                // String , icon=
      59: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: invokevirtual #157                // Method getIcon:()Ljava/lang/String;
      66: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #223                // String , notifyType=
      71: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_0
      75: invokevirtual #160                // Method getNotifyType:()I
      78: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: ldc           #228                // String , region=
      83: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: invokevirtual #163                // Method getRegion:()Ljava/lang/String;
      90: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #230                // String , enableOpen=
      95: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: invokevirtual #166                // Method getEnableOpen:()Z
     102: invokevirtual #233                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     105: ldc           #235                // String , openId=
     107: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_0
     111: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     114: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     117: ldc           #237                // String , defaultChannelId=
     119: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     126: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     129: ldc           #239                // String , welcomeChannelId=
     131: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     138: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     141: ldc           #241                // String , roles=
     143: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: pop
     147: aload_1
     148: aload_0
     149: invokevirtual #178                // Method getRoles:()Ljava/util/List;
     152: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     155: ldc           #243                // String , channels=
     157: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_0
     161: invokevirtual #181                // Method getChannels:()Ljava/util/List;
     164: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     167: ldc           #245                // String , maximumChannel=
     169: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_0
     173: invokevirtual #184                // Method getMaximumChannel:()I
     176: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     179: ldc           #247                // String , createTime=
     181: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_0
     185: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
     188: invokevirtual #213                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     191: ldc           #249                // String , currentMember=
     193: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload_0
     197: invokevirtual #190                // Method getCurrentMember:()I
     200: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     203: ldc           #251                // String , maximumMember=
     205: invokevirtual #210                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_0
     209: invokevirtual #193                // Method getMaximumMember:()I
     212: invokevirtual #226                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     215: bipush        41
     217: invokevirtual #254                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     220: pop
     221: aload_1
     222: invokevirtual #256                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     225: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: invokevirtual #261                // Method love/forte/simbot/CharSequenceID.hashCode:()I
       7: istore_1
       8: iload_1
       9: bipush        31
      11: imul
      12: aload_0
      13: invokevirtual #148                // Method getName:()Ljava/lang/String;
      16: invokevirtual #264                // Method java/lang/String.hashCode:()I
      19: iadd
      20: istore_1
      21: iload_1
      22: bipush        31
      24: imul
      25: aload_0
      26: invokevirtual #151                // Method getTopic:()Ljava/lang/String;
      29: invokevirtual #264                // Method java/lang/String.hashCode:()I
      32: iadd
      33: istore_1
      34: iload_1
      35: bipush        31
      37: imul
      38: aload_0
      39: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      42: invokevirtual #261                // Method love/forte/simbot/CharSequenceID.hashCode:()I
      45: iadd
      46: istore_1
      47: iload_1
      48: bipush        31
      50: imul
      51: aload_0
      52: invokevirtual #157                // Method getIcon:()Ljava/lang/String;
      55: invokevirtual #264                // Method java/lang/String.hashCode:()I
      58: iadd
      59: istore_1
      60: iload_1
      61: bipush        31
      63: imul
      64: aload_0
      65: invokevirtual #160                // Method getNotifyType:()I
      68: invokestatic  #269                // Method java/lang/Integer.hashCode:(I)I
      71: iadd
      72: istore_1
      73: iload_1
      74: bipush        31
      76: imul
      77: aload_0
      78: invokevirtual #163                // Method getRegion:()Ljava/lang/String;
      81: invokevirtual #264                // Method java/lang/String.hashCode:()I
      84: iadd
      85: istore_1
      86: iload_1
      87: bipush        31
      89: imul
      90: aload_0
      91: invokevirtual #166                // Method getEnableOpen:()Z
      94: dup
      95: ifeq          100
      98: pop
      99: iconst_1
     100: iadd
     101: istore_1
     102: iload_1
     103: bipush        31
     105: imul
     106: aload_0
     107: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     110: invokevirtual #261                // Method love/forte/simbot/CharSequenceID.hashCode:()I
     113: iadd
     114: istore_1
     115: iload_1
     116: bipush        31
     118: imul
     119: aload_0
     120: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     123: invokevirtual #261                // Method love/forte/simbot/CharSequenceID.hashCode:()I
     126: iadd
     127: istore_1
     128: iload_1
     129: bipush        31
     131: imul
     132: aload_0
     133: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     136: invokevirtual #261                // Method love/forte/simbot/CharSequenceID.hashCode:()I
     139: iadd
     140: istore_1
     141: iload_1
     142: bipush        31
     144: imul
     145: aload_0
     146: invokevirtual #178                // Method getRoles:()Ljava/util/List;
     149: invokevirtual #270                // Method java/lang/Object.hashCode:()I
     152: iadd
     153: istore_1
     154: iload_1
     155: bipush        31
     157: imul
     158: aload_0
     159: invokevirtual #181                // Method getChannels:()Ljava/util/List;
     162: invokevirtual #270                // Method java/lang/Object.hashCode:()I
     165: iadd
     166: istore_1
     167: iload_1
     168: bipush        31
     170: imul
     171: aload_0
     172: invokevirtual #184                // Method getMaximumChannel:()I
     175: invokestatic  #269                // Method java/lang/Integer.hashCode:(I)I
     178: iadd
     179: istore_1
     180: iload_1
     181: bipush        31
     183: imul
     184: aload_0
     185: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
     188: invokevirtual #271                // Method love/forte/simbot/Timestamp.hashCode:()I
     191: iadd
     192: istore_1
     193: iload_1
     194: bipush        31
     196: imul
     197: aload_0
     198: invokevirtual #190                // Method getCurrentMember:()I
     201: invokestatic  #269                // Method java/lang/Integer.hashCode:(I)I
     204: iadd
     205: istore_1
     206: iload_1
     207: bipush        31
     209: imul
     210: aload_0
     211: invokevirtual #193                // Method getMaximumMember:()I
     214: invokestatic  #269                // Method java/lang/Integer.hashCode:(I)I
     217: iadd
     218: istore_1
     219: iload_1
     220: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class love/forte/simbot/kaiheila/objects/GuildImpl
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class love/forte/simbot/kaiheila/objects/GuildImpl
      20: astore_2
      21: aload_0
      22: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
      25: aload_2
      26: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
      29: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      32: ifne          37
      35: iconst_0
      36: ireturn
      37: aload_0
      38: invokevirtual #148                // Method getName:()Ljava/lang/String;
      41: aload_2
      42: invokevirtual #148                // Method getName:()Ljava/lang/String;
      45: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: aload_0
      54: invokevirtual #151                // Method getTopic:()Ljava/lang/String;
      57: aload_2
      58: invokevirtual #151                // Method getTopic:()Ljava/lang/String;
      61: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifne          69
      67: iconst_0
      68: ireturn
      69: aload_0
      70: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      73: aload_2
      74: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      77: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      80: ifne          85
      83: iconst_0
      84: ireturn
      85: aload_0
      86: invokevirtual #157                // Method getIcon:()Ljava/lang/String;
      89: aload_2
      90: invokevirtual #157                // Method getIcon:()Ljava/lang/String;
      93: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
      96: ifne          101
      99: iconst_0
     100: ireturn
     101: aload_0
     102: invokevirtual #160                // Method getNotifyType:()I
     105: aload_2
     106: invokevirtual #160                // Method getNotifyType:()I
     109: if_icmpeq     114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: invokevirtual #163                // Method getRegion:()Ljava/lang/String;
     118: aload_2
     119: invokevirtual #163                // Method getRegion:()Ljava/lang/String;
     122: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     125: ifne          130
     128: iconst_0
     129: ireturn
     130: aload_0
     131: invokevirtual #166                // Method getEnableOpen:()Z
     134: aload_2
     135: invokevirtual #166                // Method getEnableOpen:()Z
     138: if_icmpeq     143
     141: iconst_0
     142: ireturn
     143: aload_0
     144: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     147: aload_2
     148: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     151: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     154: ifne          159
     157: iconst_0
     158: ireturn
     159: aload_0
     160: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     163: aload_2
     164: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     167: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     170: ifne          175
     173: iconst_0
     174: ireturn
     175: aload_0
     176: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     179: aload_2
     180: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     183: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     186: ifne          191
     189: iconst_0
     190: ireturn
     191: aload_0
     192: invokevirtual #178                // Method getRoles:()Ljava/util/List;
     195: aload_2
     196: invokevirtual #178                // Method getRoles:()Ljava/util/List;
     199: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     202: ifne          207
     205: iconst_0
     206: ireturn
     207: aload_0
     208: invokevirtual #181                // Method getChannels:()Ljava/util/List;
     211: aload_2
     212: invokevirtual #181                // Method getChannels:()Ljava/util/List;
     215: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     218: ifne          223
     221: iconst_0
     222: ireturn
     223: aload_0
     224: invokevirtual #184                // Method getMaximumChannel:()I
     227: aload_2
     228: invokevirtual #184                // Method getMaximumChannel:()I
     231: if_icmpeq     236
     234: iconst_0
     235: ireturn
     236: aload_0
     237: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
     240: aload_2
     241: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
     244: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     247: ifne          252
     250: iconst_0
     251: ireturn
     252: aload_0
     253: invokevirtual #190                // Method getCurrentMember:()I
     256: aload_2
     257: invokevirtual #190                // Method getCurrentMember:()I
     260: if_icmpeq     265
     263: iconst_0
     264: ireturn
     265: aload_0
     266: invokevirtual #193                // Method getMaximumMember:()I
     269: aload_2
     270: invokevirtual #193                // Method getMaximumMember:()I
     273: if_icmpeq     278
     276: iconst_0
     277: ireturn
     278: iconst_1
     279: ireturn

  public static final void write$Self(love.forte.simbot.kaiheila.objects.GuildImpl, kotlinx.serialization.encoding.CompositeEncoder, kotlinx.serialization.descriptors.SerialDescriptor);
    Code:
       0: aload_0
       1: ldc_w         #288                // String self
       4: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
       7: aload_1
       8: ldc_w         #289                // String output
      11: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      14: aload_2
      15: ldc_w         #290                // String serialDesc
      18: invokestatic  #34                 // Method kotlin/jvm/internal/Intrinsics.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_1
      22: aload_2
      23: iconst_0
      24: getstatic     #295                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      27: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
      30: aload_0
      31: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
      34: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      39: aload_1
      40: aload_2
      41: iconst_1
      42: aload_0
      43: invokevirtual #148                // Method getName:()Ljava/lang/String;
      46: invokeinterface #307,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      51: aload_1
      52: aload_2
      53: iconst_2
      54: aload_0
      55: invokevirtual #151                // Method getTopic:()Ljava/lang/String;
      58: invokeinterface #307,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      63: aload_1
      64: aload_2
      65: iconst_3
      66: getstatic     #295                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
      69: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
      72: aload_0
      73: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
      76: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
      81: aload_1
      82: aload_2
      83: iconst_4
      84: aload_0
      85: invokevirtual #157                // Method getIcon:()Ljava/lang/String;
      88: invokeinterface #307,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
      93: aload_1
      94: aload_2
      95: iconst_5
      96: aload_0
      97: invokevirtual #160                // Method getNotifyType:()I
     100: invokeinterface #311,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     105: aload_1
     106: aload_2
     107: bipush        6
     109: aload_0
     110: invokevirtual #163                // Method getRegion:()Ljava/lang/String;
     113: invokeinterface #307,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeStringElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILjava/lang/String;)V
     118: aload_1
     119: aload_2
     120: bipush        7
     122: aload_0
     123: invokevirtual #166                // Method getEnableOpen:()Z
     126: invokeinterface #315,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeBooleanElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;IZ)V
     131: aload_1
     132: aload_2
     133: bipush        8
     135: getstatic     #295                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     138: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
     141: aload_0
     142: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
     145: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     150: aload_1
     151: aload_2
     152: bipush        9
     154: getstatic     #295                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     157: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
     160: aload_0
     161: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
     164: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     169: aload_1
     170: aload_2
     171: bipush        10
     173: getstatic     #295                // Field love/forte/simbot/CharSequenceID$Serializer.INSTANCE:Llove/forte/simbot/CharSequenceID$Serializer;
     176: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
     179: aload_0
     180: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
     183: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     188: aload_1
     189: aload_2
     190: bipush        11
     192: new           #317                // class kotlinx/serialization/internal/ArrayListSerializer
     195: dup
     196: getstatic     #322                // Field love/forte/simbot/kaiheila/objects/impl/RoleImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/RoleImpl$$serializer;
     199: checkcast     #324                // class kotlinx/serialization/KSerializer
     202: invokespecial #327                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     205: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
     208: aload_0
     209: invokevirtual #178                // Method getRoles:()Ljava/util/List;
     212: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     217: aload_1
     218: aload_2
     219: bipush        12
     221: new           #317                // class kotlinx/serialization/internal/ArrayListSerializer
     224: dup
     225: getstatic     #332                // Field love/forte/simbot/kaiheila/objects/impl/ChannelImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/impl/ChannelImpl$$serializer;
     228: checkcast     #324                // class kotlinx/serialization/KSerializer
     231: invokespecial #327                // Method kotlinx/serialization/internal/ArrayListSerializer."<init>":(Lkotlinx/serialization/KSerializer;)V
     234: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
     237: aload_0
     238: invokevirtual #181                // Method getChannels:()Ljava/util/List;
     241: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     246: aload_1
     247: aload_2
     248: bipush        13
     250: invokeinterface #336,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     255: ifeq          262
     258: iconst_1
     259: goto          275
     262: aload_0
     263: invokevirtual #184                // Method getMaximumChannel:()I
     266: iconst_m1
     267: if_icmpeq     274
     270: iconst_1
     271: goto          275
     274: iconst_0
     275: ifeq          291
     278: aload_1
     279: aload_2
     280: bipush        13
     282: aload_0
     283: invokevirtual #184                // Method getMaximumChannel:()I
     286: invokeinterface #311,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     291: aload_1
     292: aload_2
     293: bipush        14
     295: invokeinterface #336,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     300: ifeq          307
     303: iconst_1
     304: goto          325
     307: aload_0
     308: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
     311: getstatic     #97                 // Field love/forte/simbot/Timestamp$NotSupport.INSTANCE:Llove/forte/simbot/Timestamp$NotSupport;
     314: invokestatic  #280                // Method kotlin/jvm/internal/Intrinsics.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z
     317: ifne          324
     320: iconst_1
     321: goto          325
     324: iconst_0
     325: ifeq          347
     328: aload_1
     329: aload_2
     330: bipush        14
     332: getstatic     #341                // Field love/forte/simbot/TimestampSerializer.INSTANCE:Llove/forte/simbot/TimestampSerializer;
     335: checkcast     #297                // class kotlinx/serialization/SerializationStrategy
     338: aload_0
     339: invokevirtual #187                // Method getCreateTime:()Llove/forte/simbot/Timestamp;
     342: invokeinterface #303,  5          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeSerializableElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;ILkotlinx/serialization/SerializationStrategy;Ljava/lang/Object;)V
     347: aload_1
     348: aload_2
     349: bipush        15
     351: invokeinterface #336,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     356: ifeq          363
     359: iconst_1
     360: goto          376
     363: aload_0
     364: invokevirtual #190                // Method getCurrentMember:()I
     367: iconst_m1
     368: if_icmpeq     375
     371: iconst_1
     372: goto          376
     375: iconst_0
     376: ifeq          392
     379: aload_1
     380: aload_2
     381: bipush        15
     383: aload_0
     384: invokevirtual #190                // Method getCurrentMember:()I
     387: invokeinterface #311,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     392: aload_1
     393: aload_2
     394: bipush        16
     396: invokeinterface #336,  3          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.shouldEncodeElementDefault:(Lkotlinx/serialization/descriptors/SerialDescriptor;I)Z
     401: ifeq          408
     404: iconst_1
     405: goto          421
     408: aload_0
     409: invokevirtual #193                // Method getMaximumMember:()I
     412: iconst_m1
     413: if_icmpeq     420
     416: iconst_1
     417: goto          421
     420: iconst_0
     421: ifeq          437
     424: aload_1
     425: aload_2
     426: bipush        16
     428: aload_0
     429: invokevirtual #193                // Method getMaximumMember:()I
     432: invokeinterface #311,  4          // InterfaceMethod kotlinx/serialization/encoding/CompositeEncoder.encodeIntElement:(Lkotlinx/serialization/descriptors/SerialDescriptor;II)V
     437: return

  public love.forte.simbot.kaiheila.objects.GuildImpl(int, love.forte.simbot.CharSequenceID, java.lang.String, java.lang.String, love.forte.simbot.CharSequenceID, java.lang.String, int, java.lang.String, boolean, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, love.forte.simbot.CharSequenceID, java.util.List, java.util.List, int, love.forte.simbot.Timestamp, int, int, kotlinx.serialization.internal.SerializationConstructorMarker);
    Code:
       0: sipush        8191
       3: sipush        8191
       6: iload_1
       7: iand
       8: if_icmpeq     24
      11: iload_1
      12: sipush        8191
      15: getstatic     #360                // Field love/forte/simbot/kaiheila/objects/GuildImpl$$serializer.INSTANCE:Llove/forte/simbot/kaiheila/objects/GuildImpl$$serializer;
      18: invokevirtual #364                // Method love/forte/simbot/kaiheila/objects/GuildImpl$$serializer.getDescriptor:()Lkotlinx/serialization/descriptors/SerialDescriptor;
      21: invokestatic  #370                // Method kotlinx/serialization/internal/PluginExceptionsKt.throwMissingFieldException:(IILkotlinx/serialization/descriptors/SerialDescriptor;)V
      24: aload_0
      25: invokespecial #48                 // Method java/lang/Object."<init>":()V
      28: aload_0
      29: aload_2
      30: putfield      #51                 // Field id:Llove/forte/simbot/CharSequenceID;
      33: aload_0
      34: aload_3
      35: putfield      #54                 // Field name:Ljava/lang/String;
      38: aload_0
      39: aload         4
      41: putfield      #56                 // Field topic:Ljava/lang/String;
      44: aload_0
      45: aload         5
      47: putfield      #58                 // Field masterId:Llove/forte/simbot/CharSequenceID;
      50: aload_0
      51: aload         6
      53: putfield      #60                 // Field icon:Ljava/lang/String;
      56: aload_0
      57: iload         7
      59: putfield      #63                 // Field notifyType:I
      62: aload_0
      63: aload         8
      65: putfield      #65                 // Field region:Ljava/lang/String;
      68: aload_0
      69: iload         9
      71: putfield      #68                 // Field enableOpen:Z
      74: aload_0
      75: aload         10
      77: putfield      #70                 // Field openId:Llove/forte/simbot/CharSequenceID;
      80: aload_0
      81: aload         11
      83: putfield      #72                 // Field defaultChannelId:Llove/forte/simbot/CharSequenceID;
      86: aload_0
      87: aload         12
      89: putfield      #74                 // Field welcomeChannelId:Llove/forte/simbot/CharSequenceID;
      92: aload_0
      93: aload         13
      95: putfield      #77                 // Field roles:Ljava/util/List;
      98: aload_0
      99: aload         14
     101: putfield      #79                 // Field channels:Ljava/util/List;
     104: iload_1
     105: sipush        8192
     108: iand
     109: ifne          120
     112: aload_0
     113: iconst_m1
     114: putfield      #81                 // Field maximumChannel:I
     117: goto          126
     120: aload_0
     121: iload         15
     123: putfield      #81                 // Field maximumChannel:I
     126: iload_1
     127: sipush        16384
     130: iand
     131: ifne          147
     134: aload_0
     135: getstatic     #97                 // Field love/forte/simbot/Timestamp$NotSupport.INSTANCE:Llove/forte/simbot/Timestamp$NotSupport;
     138: checkcast     #99                 // class love/forte/simbot/Timestamp
     141: putfield      #84                 // Field createTime:Llove/forte/simbot/Timestamp;
     144: goto          153
     147: aload_0
     148: aload         16
     150: putfield      #84                 // Field createTime:Llove/forte/simbot/Timestamp;
     153: iload_1
     154: ldc           #100                // int 32768
     156: iand
     157: ifne          168
     160: aload_0
     161: iconst_m1
     162: putfield      #86                 // Field currentMember:I
     165: goto          174
     168: aload_0
     169: iload         17
     171: putfield      #86                 // Field currentMember:I
     174: iload_1
     175: ldc           #101                // int 65536
     177: iand
     178: ifne          189
     181: aload_0
     182: iconst_m1
     183: putfield      #88                 // Field maximumMember:I
     186: goto          195
     189: aload_0
     190: iload         18
     192: putfield      #88                 // Field maximumMember:I
     195: return

  public love.forte.simbot.ID getId();
    Code:
       0: aload_0
       1: invokevirtual #145                // Method getId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #380                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getMasterId();
    Code:
       0: aload_0
       1: invokevirtual #154                // Method getMasterId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #380                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getOpenId();
    Code:
       0: aload_0
       1: invokevirtual #169                // Method getOpenId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #380                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getDefaultChannelId();
    Code:
       0: aload_0
       1: invokevirtual #172                // Method getDefaultChannelId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #380                // class love/forte/simbot/ID
       7: areturn

  public love.forte.simbot.ID getWelcomeChannelId();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method getWelcomeChannelId:()Llove/forte/simbot/CharSequenceID;
       4: checkcast     #380                // class love/forte/simbot/ID
       7: areturn

  static {};
    Code:
       0: new           #383                // class love/forte/simbot/kaiheila/objects/GuildImpl$Companion
       3: dup
       4: aconst_null
       5: invokespecial #386                // Method love/forte/simbot/kaiheila/objects/GuildImpl$Companion."<init>":(Lkotlin/jvm/internal/DefaultConstructorMarker;)V
       8: putstatic     #390                // Field Companion:Llove/forte/simbot/kaiheila/objects/GuildImpl$Companion;
      11: return
}
