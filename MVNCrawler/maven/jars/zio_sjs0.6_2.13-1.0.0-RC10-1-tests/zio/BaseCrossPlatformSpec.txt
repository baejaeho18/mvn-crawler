Compiled from "BaseCrossPlatformSpec.scala"
public abstract class zio.BaseCrossPlatformSpec extends org.specs2.Specification implements zio.DefaultRuntime {
  private final zio.internal.Platform Platform;

  private final scala.concurrent.ExecutionContext ec;

  private final scala.concurrent.duration.Duration DefaultTimeout;

  private final java.util.Timer timer;

  private zio.clock.Clock Environment;

  public final <R1> zio.Runtime<R1> map(scala.Function1<zio.clock.Clock, R1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #58                 // InterfaceMethod zio/Runtime.map$:(Lzio/Runtime;Lscala/Function1;)Lzio/Runtime;
       5: areturn

  public final zio.Runtime<zio.clock.Clock> mapPlatform(scala.Function1<zio.internal.Platform, zio.internal.Platform>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #66                 // InterfaceMethod zio/Runtime.mapPlatform$:(Lzio/Runtime;Lscala/Function1;)Lzio/Runtime;
       5: areturn

  public final <E, A> A unsafeRun(scala.Function0<zio.ZIO<zio.clock.Clock, E, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #74                 // InterfaceMethod zio/Runtime.unsafeRun$:(Lzio/Runtime;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public final <E, A> zio.Exit<E, A> unsafeRunSync(scala.Function0<zio.ZIO<zio.clock.Clock, E, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #82                 // InterfaceMethod zio/Runtime.unsafeRunSync$:(Lzio/Runtime;Lscala/Function0;)Lzio/Exit;
       5: areturn

  public final <E, A> void unsafeRunAsync(scala.Function0<zio.ZIO<zio.clock.Clock, E, A>>, scala.Function1<zio.Exit<E, A>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #90                 // InterfaceMethod zio/Runtime.unsafeRunAsync$:(Lzio/Runtime;Lscala/Function0;Lscala/Function1;)V
       6: return

  public final <E, A> void unsafeRunAsync_(zio.ZIO<zio.clock.Clock, E, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #97                 // InterfaceMethod zio/Runtime.unsafeRunAsync_$:(Lzio/Runtime;Lzio/ZIO;)V
       5: return

  public final <E extends java.lang.Throwable, A> scala.concurrent.Future<A> unsafeRunToFuture(zio.ZIO<zio.clock.Clock, E, A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #106                // InterfaceMethod zio/Runtime.unsafeRunToFuture$:(Lzio/Runtime;Lzio/ZIO;)Lscala/concurrent/Future;
       5: areturn

  public final <R1> zio.Runtime<R1> const(R1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #114                // InterfaceMethod zio/Runtime.const$:(Lzio/Runtime;Ljava/lang/Object;)Lzio/Runtime;
       5: areturn

  public final zio.Runtime<zio.clock.Clock> withExecutor(zio.internal.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #123                // InterfaceMethod zio/Runtime.withExecutor$:(Lzio/Runtime;Lzio/internal/Executor;)Lzio/Runtime;
       5: areturn

  public final zio.Runtime<zio.clock.Clock> withFatal(scala.Function1<java.lang.Throwable, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #129                // InterfaceMethod zio/Runtime.withFatal$:(Lzio/Runtime;Lscala/Function1;)Lzio/Runtime;
       5: areturn

  public final zio.Runtime<zio.clock.Clock> withReportFatal(scala.Function1<java.lang.Throwable, scala.runtime.Nothing$>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #134                // InterfaceMethod zio/Runtime.withReportFatal$:(Lzio/Runtime;Lscala/Function1;)Lzio/Runtime;
       5: areturn

  public final zio.Runtime<zio.clock.Clock> withReportFailure(scala.Function1<zio.Cause<?>, scala.runtime.BoxedUnit>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #139                // InterfaceMethod zio/Runtime.withReportFailure$:(Lzio/Runtime;Lscala/Function1;)Lzio/Runtime;
       5: areturn

  public final zio.Runtime<zio.clock.Clock> withTracing(zio.internal.Tracing);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #147                // InterfaceMethod zio/Runtime.withTracing$:(Lzio/Runtime;Lzio/internal/Tracing;)Lzio/Runtime;
       5: areturn

  public final zio.Runtime<zio.clock.Clock> withTracingConfig(zio.internal.tracing.TracingConfig);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #156                // InterfaceMethod zio/Runtime.withTracingConfig$:(Lzio/Runtime;Lzio/internal/tracing/TracingConfig;)Lzio/Runtime;
       5: areturn

  public zio.clock.Clock Environment();
    Code:
       0: aload_0
       1: getfield      #160                // Field Environment:Lzio/clock/Clock;
       4: areturn

  public void zio$DefaultRuntime$_setter_$Platform_$eq(zio.internal.Platform);
    Code:
       0: return

  public void zio$DefaultRuntime$_setter_$Environment_$eq(zio.clock.Clock);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #160                // Field Environment:Lzio/clock/Clock;
       5: return

  public zio.internal.Platform Platform();
    Code:
       0: aload_0
       1: getfield      #168                // Field Platform:Lzio/internal/Platform;
       4: areturn

  public scala.concurrent.ExecutionContext ec();
    Code:
       0: aload_0
       1: getfield      #171                // Field ec:Lscala/concurrent/ExecutionContext;
       4: areturn

  public scala.concurrent.duration.Duration DefaultTimeout();
    Code:
       0: aload_0
       1: getfield      #174                // Field DefaultTimeout:Lscala/concurrent/duration/Duration;
       4: areturn

  public java.util.Timer timer();
    Code:
       0: aload_0
       1: getfield      #177                // Field timer:Ljava/util/Timer;
       4: areturn

  public <R, A, A1> zio.ZIO<R, java.lang.String, A1> exactlyOnce(A, scala.Function1<zio.ZIO<java.lang.Object, scala.runtime.Nothing$, A>, zio.ZIO<R, java.lang.String, A1>>);
    Code:
       0: getstatic     #188                // Field zio/Ref$.MODULE$:Lzio/Ref$;
       3: iconst_0
       4: invokestatic  #194                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: invokevirtual #198                // Method zio/Ref$.make:(Ljava/lang/Object;)Lzio/ZIO;
      10: aload_2
      11: aload_1
      12: invokedynamic #219,  0            // InvokeDynamic #0:apply:(Lscala/Function1;Ljava/lang/Object;)Lscala/Function1;
      17: invokeinterface #223,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      22: areturn

  public <R, E, A> zio.ZIO<R, E, A> withLatch(scala.Function1<zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit>, zio.ZIO<R, E, A>>);
    Code:
       0: getstatic     #230                // Field zio/Promise$.MODULE$:Lzio/Promise$;
       3: invokevirtual #233                // Method zio/Promise$.make:()Lzio/ZIO;
       6: aload_1
       7: invokedynamic #241,  0            // InvokeDynamic #1:apply:(Lscala/Function1;)Lscala/Function1;
      12: invokeinterface #244,  2          // InterfaceMethod zio/ZIO.$greater$greater$eq:(Lscala/Function1;)Lzio/ZIO;
      17: areturn

  public <R, E, A> zio.ZIO<R, E, A> withLatch(scala.Function2<zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit>, zio.ZIO<java.lang.Object, scala.runtime.Nothing$, scala.runtime.BoxedUnit>, zio.ZIO<R, E, A>>);
    Code:
       0: getstatic     #188                // Field zio/Ref$.MODULE$:Lzio/Ref$;
       3: iconst_1
       4: invokestatic  #250                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       7: invokevirtual #198                // Method zio/Ref$.make:(Ljava/lang/Object;)Lzio/ZIO;
      10: aload_1
      11: invokedynamic #258,  0            // InvokeDynamic #2:apply:(Lscala/Function2;)Lscala/Function1;
      16: invokeinterface #223,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      21: areturn

  public <A, R, E> org.specs2.specification.core.AsExecution<zio.ZIO<R, E, A>> zioAsExecution(org.specs2.execute.AsResult<A>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #275,  0            // InvokeDynamic #3:execute:(Lzio/BaseCrossPlatformSpec;Lorg/specs2/execute/AsResult;)Lorg/specs2/specification/core/AsExecution;
       7: areturn

  public <E, R, A> scala.concurrent.Future<A> runToFutureWithTimeout(zio.ZIO<R, E, A>, scala.concurrent.duration.Duration, org.specs2.execute.AsResult<A>);
    Code:
       0: getstatic     #286                // Field scala/concurrent/Promise$.MODULE$:Lscala/concurrent/Promise$;
       3: invokevirtual #289                // Method scala/concurrent/Promise$.apply:()Lscala/concurrent/Promise;
       6: astore        4
       8: new           #27                 // class zio/BaseCrossPlatformSpec$$anon$1
      11: dup
      12: aconst_null
      13: aload         4
      15: aload_2
      16: invokespecial #293                // Method zio/BaseCrossPlatformSpec$$anon$1."<init>":(Lzio/BaseCrossPlatformSpec;Lscala/concurrent/Promise;Lscala/concurrent/duration/Duration;)V
      19: astore        5
      21: aload_0
      22: invokevirtual #295                // Method timer:()Ljava/util/Timer;
      25: aload         5
      27: aload_2
      28: invokevirtual #301                // Method scala/concurrent/duration/Duration.toMillis:()J
      31: invokevirtual #307                // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      34: aload_0
      35: aload_1
      36: invokeinterface #310,  1          // InterfaceMethod zio/ZIO.sandbox:()Lzio/ZIO;
      41: invokedynamic #319,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      46: invokeinterface #322,  2          // InterfaceMethod zio/ZIO.mapError:(Lscala/Function1;)Lzio/ZIO;
      51: invokevirtual #324                // Method unsafeRunToFuture:(Lzio/ZIO;)Lscala/concurrent/Future;
      54: aload         4
      56: invokedynamic #334,  0            // InvokeDynamic #5:apply:(Lscala/concurrent/Promise;)Lscala/Function1;
      61: aload_0
      62: invokevirtual #336                // Method ec:()Lscala/concurrent/ExecutionContext;
      65: invokeinterface #341,  3          // InterfaceMethod scala/concurrent/Future.map:(Lscala/Function1;Lscala/concurrent/ExecutionContext;)Lscala/concurrent/Future;
      70: pop
      71: aload         4
      73: invokeinterface #347,  1          // InterfaceMethod scala/concurrent/Promise.future:()Lscala/concurrent/Future;
      78: areturn

  public <R, E, A> zio.BaseCrossPlatformSpec$ZIOMustExpectable<R, E, A> ZIOMustExpectable(zio.ZIO<R, E, A>);
    Code:
       0: new           #29                 // class zio/BaseCrossPlatformSpec$ZIOMustExpectable
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #356                // Method zio/BaseCrossPlatformSpec$ZIOMustExpectable."<init>":(Lzio/BaseCrossPlatformSpec;Lzio/ZIO;)V
       9: areturn

  public java.lang.Object Environment();
    Code:
       0: aload_0
       1: invokevirtual #359                // Method Environment:()Lzio/clock/Clock;
       4: areturn

  public static final void $anonfun$Platform$1(zio.Cause);
    Code:
       0: return

  public static final int $anonfun$exactlyOnce$2(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: ireturn

  public static final zio.ZIO $anonfun$exactlyOnce$3(java.lang.Object);
    Code:
       0: getstatic     #373                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       3: aload_0
       4: invokevirtual #376                // Method zio/ZIO$.succeed:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  public static final java.lang.Object $anonfun$exactlyOnce$6(java.lang.Object, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: areturn

  public static final zio.ZIO $anonfun$exactlyOnce$5(java.lang.Object, int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpeq     17
       5: getstatic     #373                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
       8: ldc_w         #386                // String Accessed more than once
      11: invokevirtual #389                // Method zio/ZIO$.fail:(Ljava/lang/Object;)Lzio/ZIO;
      14: goto          26
      17: getstatic     #373                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      20: getstatic     #394                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      23: invokevirtual #376                // Method zio/ZIO$.succeed:(Ljava/lang/Object;)Lzio/ZIO;
      26: aload_0
      27: invokedynamic #402,  0            // InvokeDynamic #6:apply:(Ljava/lang/Object;)Lscala/Function1;
      32: invokeinterface #404,  2          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;)Lzio/ZIO;
      37: areturn

  public static final zio.ZIO $anonfun$exactlyOnce$4(java.util.concurrent.atomic.AtomicReference, java.lang.Object);
    Code:
       0: getstatic     #188                // Field zio/Ref$.MODULE$:Lzio/Ref$;
       3: aload_0
       4: invokevirtual #412                // Method zio/Ref$.get$extension:(Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
       7: aload_1
       8: invokedynamic #418,  0            // InvokeDynamic #7:apply:(Ljava/lang/Object;)Lscala/Function1;
      13: invokeinterface #223,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      18: areturn

  public static final zio.ZIO $anonfun$exactlyOnce$1(scala.Function1, java.lang.Object, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: getstatic     #188                // Field zio/Ref$.MODULE$:Lzio/Ref$;
       4: aload_2
       5: invokedynamic #431,  0            // InvokeDynamic #8:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      10: invokevirtual #435                // Method zio/Ref$.update$extension:(Ljava/util/concurrent/atomic/AtomicReference;Lscala/Function1;)Lzio/ZIO;
      13: aload_1
      14: invokedynamic #443,  0            // InvokeDynamic #9:apply:(Ljava/lang/Object;)Lscala/Function0;
      19: invokeinterface #447,  2          // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;)Lzio/ZIO;
      24: invokeinterface #451,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #34                 // class zio/ZIO
      32: aload_2
      33: invokedynamic #457,  0            // InvokeDynamic #10:apply:(Ljava/util/concurrent/atomic/AtomicReference;)Lscala/Function1;
      38: invokeinterface #223,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      43: areturn

  public static final zio.ZIO $anonfun$withLatch$2(java.util.concurrent.atomic.AtomicReference);
    Code:
       0: getstatic     #230                // Field zio/Promise$.MODULE$:Lzio/Promise$;
       3: aload_0
       4: invokevirtual #462                // Method zio/Promise$.await$extension:(Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
       7: areturn

  public static final zio.ZIO $anonfun$withLatch$1(scala.Function1, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: getstatic     #230                // Field zio/Promise$.MODULE$:Lzio/Promise$;
       4: aload_1
       5: getstatic     #394                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: invokevirtual #469                // Method zio/Promise$.succeed$extension:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Object;)Lzio/ZIO;
      11: invokeinterface #472,  1          // InterfaceMethod zio/ZIO.unit:()Lzio/ZIO;
      16: invokeinterface #451,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #34                 // class zio/ZIO
      24: aload_1
      25: invokedynamic #478,  0            // InvokeDynamic #11:apply:(Ljava/util/concurrent/atomic/AtomicReference;)Lscala/Function0;
      30: invokeinterface #481,  2          // InterfaceMethod zio/ZIO.$less$times:(Lscala/Function0;)Lzio/ZIO;
      35: areturn

  public static final zio.ZIO $anonfun$withLatch$6(zio.InterruptStatus, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: getstatic     #488                // Field zio/ZIO$InterruptStatusRestore$.MODULE$:Lzio/ZIO$InterruptStatusRestore$;
       3: aload_0
       4: getstatic     #230                // Field zio/Promise$.MODULE$:Lzio/Promise$;
       7: aload_1
       8: invokevirtual #462                // Method zio/Promise$.await$extension:(Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
      11: invokevirtual #492                // Method zio/ZIO$InterruptStatusRestore$.apply$extension:(Lzio/InterruptStatus;Lzio/ZIO;)Lzio/ZIO;
      14: areturn

  public static final zio.ZIO $anonfun$withLatch$5(java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference, zio.InterruptStatus);
    Code:
       0: getstatic     #188                // Field zio/Ref$.MODULE$:Lzio/Ref$;
       3: aload_0
       4: iconst_0
       5: invokestatic  #250                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
       8: invokevirtual #500                // Method zio/Ref$.set$extension:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Object;)Lzio/ZIO;
      11: aload_2
      12: aload_1
      13: invokedynamic #506,  0            // InvokeDynamic #12:apply:(Lzio/InterruptStatus;Ljava/util/concurrent/atomic/AtomicReference;)Lscala/Function0;
      18: invokeinterface #447,  2          // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;)Lzio/ZIO;
      23: areturn

  public static final java.lang.Object $anonfun$withLatch$8(java.lang.Object, scala.runtime.BoxedUnit);
    Code:
       0: aload_0
       1: areturn

  public static final zio.ZIO $anonfun$withLatch$7(java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference, java.lang.Object);
    Code:
       0: getstatic     #517                // Field zio/UIO$.MODULE$:Lzio/UIO$;
       3: getstatic     #188                // Field zio/Ref$.MODULE$:Lzio/Ref$;
       6: aload_0
       7: invokevirtual #412                // Method zio/Ref$.get$extension:(Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
      10: getstatic     #230                // Field zio/Promise$.MODULE$:Lzio/Promise$;
      13: aload_1
      14: invokevirtual #462                // Method zio/Promise$.await$extension:(Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
      17: invokevirtual #521                // Method zio/UIO$.whenM:(Lzio/ZIO;Lzio/ZIO;)Lzio/ZIO;
      20: aload_2
      21: invokedynamic #525,  0            // InvokeDynamic #13:apply:(Ljava/lang/Object;)Lscala/Function1;
      26: invokeinterface #404,  2          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;)Lzio/ZIO;
      31: areturn

  public static final zio.ZIO $anonfun$withLatch$4(scala.Function2, java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: aload_0
       1: getstatic     #230                // Field zio/Promise$.MODULE$:Lzio/Promise$;
       4: aload_2
       5: getstatic     #394                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: invokevirtual #469                // Method zio/Promise$.succeed$extension:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/lang/Object;)Lzio/ZIO;
      11: invokeinterface #472,  1          // InterfaceMethod zio/ZIO.unit:()Lzio/ZIO;
      16: getstatic     #373                // Field zio/ZIO$.MODULE$:Lzio/ZIO$;
      19: aload_1
      20: aload_2
      21: invokedynamic #535,  0            // InvokeDynamic #14:apply:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;)Lscala/Function1;
      26: invokevirtual #538                // Method zio/ZIO$.uninterruptibleMask:(Lscala/Function1;)Lzio/ZIO;
      29: invokeinterface #543,  3          // InterfaceMethod scala/Function2.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      34: checkcast     #34                 // class zio/ZIO
      37: aload_1
      38: aload_2
      39: invokedynamic #547,  0            // InvokeDynamic #15:apply:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;)Lscala/Function1;
      44: invokeinterface #223,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      49: areturn

  public static final zio.ZIO $anonfun$withLatch$3(scala.Function2, java.util.concurrent.atomic.AtomicReference);
    Code:
       0: getstatic     #230                // Field zio/Promise$.MODULE$:Lzio/Promise$;
       3: invokevirtual #233                // Method zio/Promise$.make:()Lzio/ZIO;
       6: aload_0
       7: aload_1
       8: invokedynamic #557,  0            // InvokeDynamic #16:apply:(Lscala/Function2;Ljava/util/concurrent/atomic/AtomicReference;)Lscala/Function1;
      13: invokeinterface #223,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      18: areturn

  public static final scala.concurrent.Future $anonfun$zioAsExecution$2(zio.BaseCrossPlatformSpec, scala.Function0, org.specs2.execute.AsResult, org.specs2.specification.core.Env);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #567,  1          // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: checkcast     #34                 // class zio/ZIO
      10: aload_0
      11: invokevirtual #569                // Method DefaultTimeout:()Lscala/concurrent/duration/Duration;
      14: aload_2
      15: invokevirtual #571                // Method runToFutureWithTimeout:(Lzio/ZIO;Lscala/concurrent/duration/Duration;Lorg/specs2/execute/AsResult;)Lscala/concurrent/Future;
      18: areturn

  public static final org.specs2.specification.core.Execution $anonfun$zioAsExecution$1(zio.BaseCrossPlatformSpec, org.specs2.execute.AsResult, scala.Function0);
    Code:
       0: getstatic     #577                // Field org/specs2/specification/core/Execution$.MODULE$:Lorg/specs2/specification/core/Execution$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokedynamic #585,  0            // InvokeDynamic #17:apply:(Lzio/BaseCrossPlatformSpec;Lscala/Function0;Lorg/specs2/execute/AsResult;)Lscala/Function1;
      11: aload_1
      12: invokevirtual #589                // Method org/specs2/specification/core/Execution$.withEnvAsync:(Lscala/Function1;Lorg/specs2/execute/AsResult;)Lorg/specs2/specification/core/Execution;
      15: areturn

  public static final zio.FiberFailure $anonfun$runToFutureWithTimeout$1(zio.Cause);
    Code:
       0: new           #592                // class zio/FiberFailure
       3: dup
       4: aload_0
       5: invokespecial #594                // Method zio/FiberFailure."<init>":(Lzio/Cause;)V
       8: areturn

  public static final scala.concurrent.Promise $anonfun$runToFutureWithTimeout$2(scala.concurrent.Promise, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #598,  2          // InterfaceMethod scala/concurrent/Promise.success:(Ljava/lang/Object;)Lscala/concurrent/Promise;
       7: areturn

  public zio.BaseCrossPlatformSpec();
    Code:
       0: aload_0
       1: invokespecial #601                // Method org/specs2/Specification."<init>":()V
       4: aload_0
       5: invokestatic  #605                // InterfaceMethod zio/Runtime.$init$:(Lzio/Runtime;)V
       8: aload_0
       9: invokestatic  #608                // InterfaceMethod zio/DefaultRuntime.$init$:(Lzio/DefaultRuntime;)V
      12: aload_0
      13: getstatic     #613                // Field zio/internal/PlatformLive$.MODULE$:Lzio/internal/PlatformLive$;
      16: invokevirtual #616                // Method zio/internal/PlatformLive$.makeDefault:()Lzio/internal/Platform;
      19: invokedynamic #623,  0            // InvokeDynamic #18:apply:()Lscala/Function1;
      24: invokeinterface #628,  2          // InterfaceMethod zio/internal/Platform.withReportFailure:(Lscala/Function1;)Lzio/internal/Platform;
      29: putfield      #168                // Field Platform:Lzio/internal/Platform;
      32: aload_0
      33: getstatic     #631                // Field scala/concurrent/ExecutionContext$Implicits$.MODULE$:Lscala/concurrent/ExecutionContext$Implicits$;
      36: invokevirtual #634                // Method scala/concurrent/ExecutionContext$Implicits$.global:()Lscala/concurrent/ExecutionContext;
      39: putfield      #171                // Field ec:Lscala/concurrent/ExecutionContext;
      42: aload_0
      43: new           #22                 // class scala/concurrent/duration/package$DurationInt
      46: dup
      47: getstatic     #639                // Field scala/concurrent/duration/package$.MODULE$:Lscala/concurrent/duration/package$;
      50: bipush        60
      52: invokevirtual #641                // Method scala/concurrent/duration/package$.DurationInt:(I)I
      55: invokespecial #644                // Method scala/concurrent/duration/package$DurationInt."<init>":(I)V
      58: invokevirtual #648                // Method scala/concurrent/duration/package$DurationInt.seconds:()Lscala/concurrent/duration/FiniteDuration;
      61: putfield      #174                // Field DefaultTimeout:Lscala/concurrent/duration/Duration;
      64: aload_0
      65: new           #303                // class java/util/Timer
      68: dup
      69: invokespecial #649                // Method java/util/Timer."<init>":()V
      72: putfield      #177                // Field timer:Ljava/util/Timer;
      75: invokestatic  #654                // Method scala/runtime/Statics.releaseFence:()V
      78: return

  public static final zio.ZIO $anonfun$exactlyOnce$1$adapted(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #656                // class zio/Ref
       6: invokevirtual #660                // Method zio/Ref.zio$Ref$$value:()Ljava/util/concurrent/atomic/AtomicReference;
       9: invokestatic  #662                // Method $anonfun$exactlyOnce$1:(Lscala/Function1;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
      12: areturn

  public static final zio.ZIO $anonfun$withLatch$1$adapted(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #664                // class zio/Promise
       5: invokevirtual #667                // Method zio/Promise.zio$Promise$$state:()Ljava/util/concurrent/atomic/AtomicReference;
       8: invokestatic  #669                // Method $anonfun$withLatch$1:(Lscala/Function1;Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
      11: areturn

  public static final zio.ZIO $anonfun$withLatch$3$adapted(scala.Function2, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #656                // class zio/Ref
       5: invokevirtual #660                // Method zio/Ref.zio$Ref$$value:()Ljava/util/concurrent/atomic/AtomicReference;
       8: invokestatic  #671                // Method $anonfun$withLatch$3:(Lscala/Function2;Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
      11: areturn

  public static final zio.ZIO $anonfun$exactlyOnce$5$adapted(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #675                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokestatic  #677                // Method $anonfun$exactlyOnce$5:(Ljava/lang/Object;I)Lzio/ZIO;
       8: areturn

  public static final zio.ZIO $anonfun$withLatch$5$adapted(java.util.concurrent.atomic.AtomicReference, java.util.concurrent.atomic.AtomicReference, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #32                 // class zio/ZIO$InterruptStatusRestore
       6: invokevirtual #681                // Method zio/ZIO$InterruptStatusRestore.zio$ZIO$InterruptStatusRestore$$flag:()Lzio/InterruptStatus;
       9: invokestatic  #683                // Method $anonfun$withLatch$5:(Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;Lzio/InterruptStatus;)Lzio/ZIO;
      12: areturn

  public static final zio.ZIO $anonfun$withLatch$4$adapted(scala.Function2, java.util.concurrent.atomic.AtomicReference, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #664                // class zio/Promise
       6: invokevirtual #667                // Method zio/Promise.zio$Promise$$state:()Ljava/util/concurrent/atomic/AtomicReference;
       9: invokestatic  #685                // Method $anonfun$withLatch$4:(Lscala/Function2;Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/atomic/AtomicReference;)Lzio/ZIO;
      12: areturn

  public static final java.lang.Object $anonfun$Platform$1$adapted(zio.Cause);
    Code:
       0: aload_0
       1: invokestatic  #687                // Method $anonfun$Platform$1:(Lzio/Cause;)V
       4: getstatic     #394                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #699,  0            // InvokeDynamic #19:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
