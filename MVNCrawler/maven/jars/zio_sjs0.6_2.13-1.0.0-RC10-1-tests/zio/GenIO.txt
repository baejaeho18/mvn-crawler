Compiled from "GenIO.scala"
public interface zio.GenIO {
  public static org.scalacheck.Gen genSyncSuccess$(zio.GenIO, org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // InterfaceMethod genSyncSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       5: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genSyncSuccess(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #33                 // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: invokedynamic #54,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
      12: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      15: areturn

  public static org.scalacheck.Gen genAsyncSuccess$(zio.GenIO, org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // InterfaceMethod genAsyncSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       5: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genAsyncSuccess(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #33                 // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: invokedynamic #71,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
      12: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      15: areturn

  public static org.scalacheck.Gen genSuccess$(zio.GenIO, org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #76                 // InterfaceMethod genSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       5: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genSuccess(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod genSyncSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      10: aload_0
      11: aload_1
      12: invokeinterface #66,  2           // InterfaceMethod genAsyncSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      17: getstatic     #86                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      20: iconst_0
      21: anewarray     #56                 // class org/scalacheck/Gen
      24: invokevirtual #90                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      27: invokevirtual #94                 // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      30: areturn

  public static org.scalacheck.Gen genSyncFailure$(zio.GenIO, org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #99                 // InterfaceMethod genSyncFailure:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       5: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genSyncFailure(org.scalacheck.Arbitrary<E>);
    Code:
       0: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #33                 // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: invokedynamic #105,  0            // InvokeDynamic #2:apply:()Lscala/Function1;
      12: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      15: areturn

  public static org.scalacheck.Gen genAsyncFailure$(zio.GenIO, org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #110                // InterfaceMethod genAsyncFailure:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       5: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genAsyncFailure(org.scalacheck.Arbitrary<E>);
    Code:
       0: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #33                 // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: invokedynamic #115,  0            // InvokeDynamic #3:apply:()Lscala/Function1;
      12: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      15: areturn

  public static org.scalacheck.Gen genFailure$(zio.GenIO, org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #120                // InterfaceMethod genFailure:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       5: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genFailure(org.scalacheck.Arbitrary<E>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_1
       5: invokeinterface #99,  2           // InterfaceMethod genSyncFailure:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      10: aload_0
      11: aload_1
      12: invokeinterface #110,  2          // InterfaceMethod genAsyncFailure:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      17: getstatic     #86                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      20: iconst_0
      21: anewarray     #56                 // class org/scalacheck/Gen
      24: invokevirtual #90                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      27: invokevirtual #94                 // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      30: areturn

  public static org.scalacheck.Gen genIO$(zio.GenIO, org.scalacheck.Arbitrary, org.scalacheck.Cogen, org.scalacheck.Arbitrary, org.scalacheck.Cogen);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #130                // InterfaceMethod genIO:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
       9: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genIO(org.scalacheck.Arbitrary<E>, org.scalacheck.Cogen<E>, org.scalacheck.Arbitrary<A>, org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_3
       5: invokeinterface #76,  2           // InterfaceMethod genSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      10: aload_0
      11: aload_1
      12: invokeinterface #120,  2          // InterfaceMethod genFailure:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      17: getstatic     #86                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      20: iconst_0
      21: anewarray     #56                 // class org/scalacheck/Gen
      24: invokevirtual #90                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      27: invokevirtual #94                 // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      30: areturn

  public static org.scalacheck.Gen genLikeTrans$(zio.GenIO, org.scalacheck.Gen, org.scalacheck.Arbitrary, org.scalacheck.Cogen, org.scalacheck.Arbitrary, org.scalacheck.Cogen);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #143                // InterfaceMethod genLikeTrans:(Lorg/scalacheck/Gen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
      11: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genLikeTrans(org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>>, org.scalacheck.Arbitrary<E>, org.scalacheck.Cogen<E>, org.scalacheck.Arbitrary<A>, org.scalacheck.Cogen<A>);
    Code:
       0: aload_0
       1: aload         4
       3: aload         5
       5: aload_2
       6: aload_3
       7: invokedynamic #155,  0            // InvokeDynamic #4:apply:(Lzio/GenIO;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lscala/Function1;
      12: astore        6
      14: aload_1
      15: aload_0
      16: aload         6
      18: aload_2
      19: aload_3
      20: aload         4
      22: aload         5
      24: invokedynamic #163,  0            // InvokeDynamic #5:apply:(Lzio/GenIO;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lscala/Function1;
      29: invokevirtual #166                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      32: areturn

  public static org.scalacheck.Gen genIdentityTrans$(zio.GenIO, org.scalacheck.Gen, org.scalacheck.Arbitrary, org.scalacheck.Cogen, org.scalacheck.Arbitrary, org.scalacheck.Cogen);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #176                // InterfaceMethod genIdentityTrans:(Lorg/scalacheck/Gen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
      11: areturn

  public default <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genIdentityTrans(org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>>, org.scalacheck.Arbitrary<E>, org.scalacheck.Cogen<E>, org.scalacheck.Arbitrary<A>, org.scalacheck.Cogen<A>);
    Code:
       0: aload_0
       1: aload         4
       3: invokedynamic #184,  0            // InvokeDynamic #6:apply:(Lzio/GenIO;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
       8: astore        6
      10: aload_1
      11: aload_0
      12: aload         6
      14: aload_2
      15: aload_3
      16: aload         4
      18: aload         5
      20: invokedynamic #189,  0            // InvokeDynamic #7:apply:(Lzio/GenIO;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lscala/Function1;
      25: invokevirtual #166                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      28: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genTransformations(scala.Function1<zio.ZIO<java.lang.Object, E, A>, org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>>>, zio.ZIO<java.lang.Object, E, A>, org.scalacheck.Arbitrary<E>, org.scalacheck.Cogen<E>, org.scalacheck.Arbitrary<A>, org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_1
       4: aload_2
       5: invokedynamic #208,  0            // InvokeDynamic #8:apply:(Lscala/Function1;Lzio/ZIO;)Lscala/Function1;
      10: invokevirtual #211                // Method org/scalacheck/Gen$.sized:(Lscala/Function1;)Lorg/scalacheck/Gen;
      13: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfMaps(zio.ZIO<java.lang.Object, E, A>, org.scalacheck.Arbitrary<A>, org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       6: aload_2
       7: aload_3
       8: invokevirtual #221                // Method org/scalacheck/Arbitrary$.arbFunction1:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Arbitrary;
      11: invokevirtual #33                 // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      14: aload_1
      15: invokedynamic #231,  0            // InvokeDynamic #9:apply:(Lzio/ZIO;)Lscala/Function1;
      20: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      23: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfIdentityMaps(zio.ZIO<java.lang.Object, E, A>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_1
       4: invokedynamic #238,  0            // InvokeDynamic #10:apply:()Lscala/Function1;
       9: invokeinterface #242,  2          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;)Lzio/ZIO;
      14: invokevirtual #245                // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      17: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfMapErrors(zio.ZIO<java.lang.Object, E, A>, org.scalacheck.Arbitrary<E>, org.scalacheck.Cogen<E>);
    Code:
       0: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: getstatic     #30                 // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       6: aload_2
       7: aload_3
       8: invokevirtual #221                // Method org/scalacheck/Arbitrary$.arbFunction1:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Arbitrary;
      11: invokevirtual #33                 // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      14: aload_1
      15: invokedynamic #254,  0            // InvokeDynamic #11:apply:(Lzio/ZIO;)Lscala/Function1;
      20: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      23: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfIdentityMapErrors(zio.ZIO<java.lang.Object, E, A>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_1
       4: invokedynamic #260,  0            // InvokeDynamic #12:apply:()Lscala/Function1;
       9: invokeinterface #263,  2          // InterfaceMethod zio/ZIO.mapError:(Lscala/Function1;)Lzio/ZIO;
      14: invokevirtual #245                // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      17: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfFlatMaps(zio.ZIO<java.lang.Object, E, A>, org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>>, org.scalacheck.Cogen<A>);
    Code:
       0: aload_2
       1: aload_1
       2: invokedynamic #275,  0            // InvokeDynamic #13:apply:(Lzio/ZIO;)Lscala/Function1;
       7: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      10: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfIdentityFlatMaps(zio.ZIO<java.lang.Object, E, A>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_1
       4: invokedynamic #281,  0            // InvokeDynamic #14:apply:()Lscala/Function1;
       9: invokeinterface #283,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      14: invokevirtual #245                // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      17: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfRace(zio.ZIO<java.lang.Object, E, A>);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_1
       4: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       7: invokevirtual #293                // Method zio/IO$.never:()Lzio/ZIO;
      10: invokeinterface #296,  2          // InterfaceMethod zio/ZIO.race:(Lzio/ZIO;)Lzio/ZIO;
      15: invokevirtual #245                // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      18: areturn

  private <E, A> org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>> genOfParallel(zio.ZIO<java.lang.Object, E, A>, org.scalacheck.Gen<zio.ZIO<java.lang.Object, E, A>>);
    Code:
       0: aload_2
       1: aload_1
       2: invokedynamic #304,  0            // InvokeDynamic #15:apply:(Lzio/ZIO;)Lscala/Function1;
       7: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      10: areturn

  public static java.lang.Object $anonfun$genSyncSuccess$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static zio.ZIO $anonfun$genSyncSuccess$1(java.lang.Object);
    Code:
       0: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       3: aload_0
       4: invokedynamic #316,  0            // InvokeDynamic #16:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: invokevirtual #320                // Method zio/IO$.succeedLazy:(Lscala/Function0;)Lzio/ZIO;
      12: areturn

  public static void $anonfun$genAsyncSuccess$2(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       4: aload_0
       5: invokevirtual #327                // Method zio/IO$.succeed:(Ljava/lang/Object;)Lzio/ZIO;
       8: invokeinterface #331,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public static zio.ZIO $anonfun$genAsyncSuccess$1(java.lang.Object);
    Code:
       0: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       3: aload_0
       4: invokedynamic #342,  0            // InvokeDynamic #17:apply:(Ljava/lang/Object;)Lscala/Function1;
       9: invokevirtual #345                // Method zio/IO$.effectAsync:(Lscala/Function1;)Lzio/ZIO;
      12: areturn

  public static zio.ZIO $anonfun$genSyncFailure$1(java.lang.Object);
    Code:
       0: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       3: aload_0
       4: invokevirtual #349                // Method zio/IO$.fail:(Ljava/lang/Object;)Lzio/ZIO;
       7: areturn

  public static void $anonfun$genAsyncFailure$2(java.lang.Object, scala.Function1);
    Code:
       0: aload_1
       1: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       4: aload_0
       5: invokevirtual #349                // Method zio/IO$.fail:(Ljava/lang/Object;)Lzio/ZIO;
       8: invokeinterface #331,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: return

  public static zio.ZIO $anonfun$genAsyncFailure$1(java.lang.Object);
    Code:
       0: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       3: aload_0
       4: invokedynamic #357,  0            // InvokeDynamic #18:apply:(Ljava/lang/Object;)Lscala/Function1;
       9: invokevirtual #345                // Method zio/IO$.effectAsync:(Lscala/Function1;)Lzio/ZIO;
      12: areturn

  public static org.scalacheck.Gen $anonfun$genLikeTrans$1(zio.GenIO, org.scalacheck.Arbitrary, org.scalacheck.Cogen, org.scalacheck.Arbitrary, org.scalacheck.Cogen, zio.ZIO);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload         5
       6: aload_0
       7: aload_1
       8: invokeinterface #76,  2           // InterfaceMethod genSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      13: aload_2
      14: invokespecial #363                // InterfaceMethod genOfFlatMaps:(Lzio/ZIO;Lorg/scalacheck/Gen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
      17: aload_0
      18: aload         5
      20: aload_1
      21: aload_2
      22: invokespecial #365                // InterfaceMethod genOfMaps:(Lzio/ZIO;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
      25: getstatic     #86                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      28: iconst_3
      29: anewarray     #56                 // class org/scalacheck/Gen
      32: dup
      33: iconst_0
      34: aload_0
      35: aload         5
      37: invokespecial #367                // InterfaceMethod genOfRace:(Lzio/ZIO;)Lorg/scalacheck/Gen;
      40: aastore
      41: dup
      42: iconst_1
      43: aload_0
      44: aload         5
      46: aload_0
      47: aload_1
      48: invokeinterface #76,  2           // InterfaceMethod genSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      53: invokespecial #369                // InterfaceMethod genOfParallel:(Lzio/ZIO;Lorg/scalacheck/Gen;)Lorg/scalacheck/Gen;
      56: aastore
      57: dup
      58: iconst_2
      59: aload_0
      60: aload         5
      62: aload_3
      63: aload         4
      65: invokespecial #371                // InterfaceMethod genOfMapErrors:(Lzio/ZIO;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
      68: aastore
      69: invokevirtual #90                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      72: invokevirtual #94                 // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      75: areturn

  public static org.scalacheck.Gen $anonfun$genLikeTrans$2(zio.GenIO, scala.Function1, org.scalacheck.Arbitrary, org.scalacheck.Cogen, org.scalacheck.Arbitrary, org.scalacheck.Cogen, zio.ZIO);
    Code:
       0: aload_0
       1: aload_1
       2: aload         6
       4: aload_2
       5: aload_3
       6: aload         4
       8: aload         5
      10: invokespecial #374                // InterfaceMethod genTransformations:(Lscala/Function1;Lzio/ZIO;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
      13: areturn

  public static org.scalacheck.Gen $anonfun$genIdentityTrans$1(zio.GenIO, org.scalacheck.Arbitrary, zio.ZIO);
    Code:
       0: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_2
       5: invokespecial #377                // InterfaceMethod genOfIdentityFlatMaps:(Lzio/ZIO;)Lorg/scalacheck/Gen;
       8: aload_0
       9: aload_2
      10: invokespecial #379                // InterfaceMethod genOfIdentityMaps:(Lzio/ZIO;)Lorg/scalacheck/Gen;
      13: getstatic     #86                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      16: iconst_3
      17: anewarray     #56                 // class org/scalacheck/Gen
      20: dup
      21: iconst_0
      22: aload_0
      23: aload_2
      24: invokespecial #381                // InterfaceMethod genOfIdentityMapErrors:(Lzio/ZIO;)Lorg/scalacheck/Gen;
      27: aastore
      28: dup
      29: iconst_1
      30: aload_0
      31: aload_2
      32: invokespecial #367                // InterfaceMethod genOfRace:(Lzio/ZIO;)Lorg/scalacheck/Gen;
      35: aastore
      36: dup
      37: iconst_2
      38: aload_0
      39: aload_2
      40: aload_0
      41: aload_1
      42: invokeinterface #76,  2           // InterfaceMethod genSuccess:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      47: invokespecial #369                // InterfaceMethod genOfParallel:(Lzio/ZIO;Lorg/scalacheck/Gen;)Lorg/scalacheck/Gen;
      50: aastore
      51: invokevirtual #90                 // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      54: invokevirtual #94                 // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      57: areturn

  public static org.scalacheck.Gen $anonfun$genIdentityTrans$2(zio.GenIO, scala.Function1, org.scalacheck.Arbitrary, org.scalacheck.Cogen, org.scalacheck.Arbitrary, org.scalacheck.Cogen, zio.ZIO);
    Code:
       0: aload_0
       1: aload_1
       2: aload         6
       4: aload_2
       5: aload_3
       6: aload         4
       8: aload         5
      10: invokespecial #374                // InterfaceMethod genTransformations:(Lscala/Function1;Lzio/ZIO;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Gen;
      13: areturn

  public static zio.ZIO $anonfun$genTransformations$2(zio.ZIO);
    Code:
       0: aload_0
       1: areturn

  public static org.scalacheck.Gen $anonfun$genTransformations$3(int, scala.Function1, zio.ZIO);
    Code:
       0: iload_0
       1: iconst_1
       2: isub
       3: aload_2
       4: aload_1
       5: invokestatic  #396                // InterfaceMethod append1$1:(ILzio/ZIO;Lscala/Function1;)Lorg/scalacheck/Gen;
       8: areturn

  private static org.scalacheck.Gen append1$1(int, zio.ZIO, scala.Function1);
    Code:
       0: iload_0
       1: iconst_0
       2: if_icmpgt     13
       5: getstatic     #81                 // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       8: aload_1
       9: invokevirtual #245                // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      12: areturn
      13: aload_2
      14: aload_1
      15: invokeinterface #331,  2          // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #56                 // class org/scalacheck/Gen
      23: invokedynamic #402,  0            // InvokeDynamic #19:apply:()Lscala/Function1;
      28: invokevirtual #60                 // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      31: iload_0
      32: aload_2
      33: invokedynamic #408,  0            // InvokeDynamic #20:apply:(ILscala/Function1;)Lscala/Function1;
      38: invokevirtual #166                // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      41: areturn

  public static org.scalacheck.Gen $anonfun$genTransformations$1(scala.Function1, zio.ZIO, int);
    Code:
       0: iload_2
       1: aload_1
       2: aload_0
       3: invokestatic  #396                // InterfaceMethod append1$1:(ILzio/ZIO;Lscala/Function1;)Lorg/scalacheck/Gen;
       6: areturn

  public static zio.ZIO $anonfun$genOfMaps$1(zio.ZIO, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #242,  2          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;)Lzio/ZIO;
       7: areturn

  public static java.lang.Object $anonfun$genOfIdentityMaps$1(java.lang.Object);
    Code:
       0: getstatic     #420                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #423                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static zio.ZIO $anonfun$genOfMapErrors$1(zio.ZIO, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #263,  2          // InterfaceMethod zio/ZIO.mapError:(Lscala/Function1;)Lzio/ZIO;
       7: areturn

  public static java.lang.Object $anonfun$genOfIdentityMapErrors$1(java.lang.Object);
    Code:
       0: getstatic     #420                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_0
       4: invokevirtual #423                // Method scala/Predef$.identity:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public static zio.ZIO $anonfun$genOfFlatMaps$2(zio.ZIO, java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static zio.ZIO $anonfun$genOfFlatMaps$1(zio.ZIO, zio.ZIO);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #434,  0            // InvokeDynamic #21:apply:(Lzio/ZIO;)Lscala/Function1;
       7: invokeinterface #283,  2          // InterfaceMethod zio/ZIO.flatMap:(Lscala/Function1;)Lzio/ZIO;
      12: areturn

  public static java.lang.Object $anonfun$genOfIdentityFlatMaps$2(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public static zio.ZIO $anonfun$genOfIdentityFlatMaps$1(java.lang.Object);
    Code:
       0: getstatic     #289                // Field zio/IO$.MODULE$:Lzio/IO$;
       3: aload_0
       4: invokedynamic #440,  0            // InvokeDynamic #22:apply:(Ljava/lang/Object;)Lscala/Function0;
       9: invokevirtual #320                // Method zio/IO$.succeedLazy:(Lscala/Function0;)Lzio/ZIO;
      12: areturn

  public static java.lang.Object $anonfun$genOfParallel$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #448                // Method scala/Tuple2._1:()Ljava/lang/Object;
       4: areturn

  public static zio.ZIO $anonfun$genOfParallel$1(zio.ZIO, zio.ZIO);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #454,  2          // InterfaceMethod zio/ZIO.zipPar:(Lzio/ZIO;)Lzio/ZIO;
       7: invokedynamic #459,  0            // InvokeDynamic #23:apply:()Lscala/Function1;
      12: invokeinterface #242,  2          // InterfaceMethod zio/ZIO.map:(Lscala/Function1;)Lzio/ZIO;
      17: areturn

  public static void $init$(zio.GenIO);
    Code:
       0: return

  public static org.scalacheck.Gen $anonfun$genTransformations$1$adapted(scala.Function1, zio.ZIO, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #467                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokestatic  #469                // InterfaceMethod $anonfun$genTransformations$1:(Lscala/Function1;Lzio/ZIO;I)Lorg/scalacheck/Gen;
       9: areturn

  public static java.lang.Object $anonfun$genAsyncSuccess$2$adapted(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #471                // InterfaceMethod $anonfun$genAsyncSuccess$2:(Ljava/lang/Object;Lscala/Function1;)V
       5: getstatic     #477                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  public static java.lang.Object $anonfun$genAsyncFailure$2$adapted(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #479                // InterfaceMethod $anonfun$genAsyncFailure$2:(Ljava/lang/Object;Lscala/Function1;)V
       5: getstatic     #477                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       8: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #491,  0            // InvokeDynamic #24:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
