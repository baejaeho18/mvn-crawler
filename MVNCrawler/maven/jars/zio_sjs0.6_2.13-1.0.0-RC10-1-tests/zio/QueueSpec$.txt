Compiled from "QueueSpec.scala"
public final class zio.QueueSpec$ {
  public static final zio.QueueSpec$ MODULE$;

  public static {};
    Code:
       0: new           #2                  // class zio/QueueSpec$
       3: dup
       4: invokespecial #17                 // Method "<init>":()V
       7: putstatic     #19                 // Field MODULE$:Lzio/QueueSpec$;
      10: return

  public <A> zio.ZIO<zio.clock.Clock, scala.runtime.Nothing$, java.lang.Object> waitForSize(zio.ZQueue<java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, A, A>, int);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod zio/ZQueue.size:()Lzio/ZIO;
       6: invokedynamic #49,  0             // InvokeDynamic #0:apply:()Lscala/Function0;
      11: invokeinterface #55,  2           // InterfaceMethod zio/ZIO.$less$times:(Lscala/Function0;)Lzio/ZIO;
      16: getstatic     #60                 // Field zio/ZSchedule$.MODULE$:Lzio/ZSchedule$;
      19: iload_2
      20: invokedynamic #71,  0             // InvokeDynamic #1:apply$mcZI$sp:(I)Lscala/runtime/java8/JFunction1$mcZI$sp;
      25: invokevirtual #75                 // Method zio/ZSchedule$.doWhile:(Lscala/Function1;)Lzio/ZSchedule;
      28: invokeinterface #79,  2           // InterfaceMethod zio/ZIO.repeat:(Lzio/ZSchedule;)Lzio/ZIO;
      33: areturn

  public static final zio.ZIO $anonfun$waitForSize$1();
    Code:
       0: getstatic     #87                 // Field zio/clock/package$.MODULE$:Lzio/clock/package$;
       3: getstatic     #92                 // Field zio/duration/package$.MODULE$:Lzio/duration/package$;
       6: bipush        10
       8: invokevirtual #96                 // Method zio/duration/package$.durationInt:(I)Lzio/duration/DurationSyntax;
      11: invokevirtual #102                // Method zio/duration/DurationSyntax.millis:()Lzio/duration/Duration;
      14: invokevirtual #106                // Method zio/clock/package$.sleep:(Lzio/duration/Duration;)Lzio/ZIO;
      17: areturn

  public static final boolean $anonfun$waitForSize$2(int, int);
    Code:
       0: iload_1
       1: iload_0
       2: if_icmpeq     7
       5: iconst_1
       6: ireturn
       7: iconst_0
       8: ireturn

  private zio.QueueSpec$();
    Code:
       0: aload_0
       1: invokespecial #109                // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #121,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
