Compiled from "RbinMock.scala"
public final class zio.aws.rbin.RbinMock$$anon$2 implements zio.aws.rbin.Rbin {
  private final software.amazon.awssdk.services.rbin.RbinAsyncClient api;

  private final zio.test.mock.Proxy proxy$1;

  private final zio.Runtime rts$1;

  public software.amazon.awssdk.services.rbin.RbinAsyncClient api();
    Code:
       0: aload_0
       1: getfield      #89                 // Field api:Lsoftware/amazon/awssdk/services/rbin/RbinAsyncClient;
       4: areturn

  public <R1> zio.aws.rbin.Rbin withAspect(zio.ZIOAspect<scala.runtime.Nothing$, R1, zio.aws.core.AwsError, zio.aws.core.AwsError, scala.runtime.Nothing$, zio.aws.core.aspects.package$Described<?>>, zio.ZEnvironment<R1>);
    Code:
       0: aload_0
       1: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.DeleteRuleResponse$ReadOnly> deleteRule(zio.aws.rbin.model.DeleteRuleRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #108                // Field zio/aws/rbin/RbinMock$DeleteRule$.MODULE$:Lzio/aws/rbin/RbinMock$DeleteRule$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.UpdateRuleResponse$ReadOnly> updateRule(zio.aws.rbin.model.UpdateRuleRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #121                // Field zio/aws/rbin/RbinMock$UpdateRule$.MODULE$:Lzio/aws/rbin/RbinMock$UpdateRule$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.UntagResourceResponse$ReadOnly> untagResource(zio.aws.rbin.model.UntagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #128                // Field zio/aws/rbin/RbinMock$UntagResource$.MODULE$:Lzio/aws/rbin/RbinMock$UntagResource$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.ListTagsForResourceResponse$ReadOnly> listTagsForResource(zio.aws.rbin.model.ListTagsForResourceRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #135                // Field zio/aws/rbin/RbinMock$ListTagsForResource$.MODULE$:Lzio/aws/rbin/RbinMock$ListTagsForResource$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.TagResourceResponse$ReadOnly> tagResource(zio.aws.rbin.model.TagResourceRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #142                // Field zio/aws/rbin/RbinMock$TagResource$.MODULE$:Lzio/aws/rbin/RbinMock$TagResource$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.stream.ZStream<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.RuleSummary$ReadOnly> listRules(zio.aws.rbin.model.ListRulesRequest);
    Code:
       0: aload_0
       1: getfield      #148                // Field rts$1:Lzio/Runtime;
       4: aload_0
       5: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       8: getstatic     #151                // Field zio/aws/rbin/RbinMock$ListRules$.MODULE$:Lzio/aws/rbin/RbinMock$ListRules$;
      11: aload_1
      12: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      15: ldc           #153                // String zio.aws.rbin.RbinMock.compose.$anon.listRules(RbinMock.scala:100)
      17: invokeinterface #159,  3          // InterfaceMethod zio/Runtime.unsafeRun:(Lzio/ZIO;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #161                // class zio/stream/ZStream
      25: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.ListRulesResponse$ReadOnly> listRulesPaginated(zio.aws.rbin.model.ListRulesRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #168                // Field zio/aws/rbin/RbinMock$ListRulesPaginated$.MODULE$:Lzio/aws/rbin/RbinMock$ListRulesPaginated$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.GetRuleResponse$ReadOnly> getRule(zio.aws.rbin.model.GetRuleRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #174                // Field zio/aws/rbin/RbinMock$GetRule$.MODULE$:Lzio/aws/rbin/RbinMock$GetRule$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public zio.ZIO<java.lang.Object, zio.aws.core.AwsError, zio.aws.rbin.model.CreateRuleResponse$ReadOnly> createRule(zio.aws.rbin.model.CreateRuleRequest);
    Code:
       0: aload_0
       1: getfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       4: getstatic     #181                // Field zio/aws/rbin/RbinMock$CreateRule$.MODULE$:Lzio/aws/rbin/RbinMock$CreateRule$;
       7: aload_1
       8: invokevirtual #114                // Method zio/test/mock/Proxy.apply:(Lzio/test/mock/Capability;Ljava/lang/Object;)Lzio/ZIO;
      11: areturn

  public java.lang.Object withAspect(zio.ZIOAspect, zio.ZEnvironment);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #185                // Method withAspect:(Lzio/ZIOAspect;Lzio/ZEnvironment;)Lzio/aws/rbin/Rbin;
       6: areturn

  public zio.aws.rbin.RbinMock$$anon$2(zio.test.mock.Proxy, zio.Runtime);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #104                // Field proxy$1:Lzio/test/mock/Proxy;
       5: aload_0
       6: aload_2
       7: putfield      #148                // Field rts$1:Lzio/Runtime;
      10: aload_0
      11: invokespecial #190                // Method java/lang/Object."<init>":()V
      14: aload_0
      15: aconst_null
      16: putfield      #89                 // Field api:Lsoftware/amazon/awssdk/services/rbin/RbinAsyncClient;
      19: return
}
