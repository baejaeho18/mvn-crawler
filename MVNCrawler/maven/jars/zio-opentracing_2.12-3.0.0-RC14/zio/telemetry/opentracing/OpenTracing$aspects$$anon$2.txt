Compiled from "OpenTracing.scala"
public final class zio.telemetry.opentracing.OpenTracing$aspects$$anon$2 implements zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> {
  private final zio.telemetry.opentracing.OpenTracing$aspects$ $outer;

  private final java.lang.String operation$2;

  private final boolean tagError$2;

  private final boolean logError$2;

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $greater$greater$greater(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #36                 // InterfaceMethod zio/ZIOAspect.$greater$greater$greater$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $at$at(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // InterfaceMethod zio/ZIOAspect.$at$at$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> andThen(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // InterfaceMethod zio/ZIOAspect.andThen$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> flip();
    Code:
       0: aload_0
       1: invokestatic  #53                 // InterfaceMethod zio/ZIOAspect.flip$:(Lzio/ZIOAspect;)Lzio/ZIOAspect;
       4: areturn

  public <R, E, A> zio.ZIO<R, E, A> apply(zio.ZIO<R, E, A>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #60                 // Field $outer:Lzio/telemetry/opentracing/OpenTracing$aspects$;
       4: invokevirtual #64                 // Method zio/telemetry/opentracing/OpenTracing$aspects$.zio$telemetry$opentracing$OpenTracing$aspects$$$outer:()Lzio/telemetry/opentracing/OpenTracing;
       7: aload_0
       8: getfield      #66                 // Field operation$2:Ljava/lang/String;
      11: aload_0
      12: getfield      #68                 // Field tagError$2:Z
      15: aload_0
      16: getfield      #70                 // Field logError$2:Z
      19: aload_1
      20: invokedynamic #93,  0             // InvokeDynamic #0:apply:(Lzio/ZIO;)Lscala/Function0;
      25: aload_2
      26: invokeinterface #96,  6           // InterfaceMethod zio/telemetry/opentracing/OpenTracing.span:(Ljava/lang/String;ZZLscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      31: areturn

  public static final zio.ZIO $anonfun$apply$2(zio.ZIO);
    Code:
       0: aload_0
       1: areturn

  public zio.telemetry.opentracing.OpenTracing$aspects$$anon$2(zio.telemetry.opentracing.OpenTracing$aspects$, java.lang.String, boolean, boolean);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #60                 // Field $outer:Lzio/telemetry/opentracing/OpenTracing$aspects$;
      11: aload_0
      12: aload_2
      13: putfield      #66                 // Field operation$2:Ljava/lang/String;
      16: aload_0
      17: iload_3
      18: putfield      #68                 // Field tagError$2:Z
      21: aload_0
      22: iload         4
      24: putfield      #70                 // Field logError$2:Z
      27: aload_0
      28: invokespecial #104                // Method java/lang/Object."<init>":()V
      31: aload_0
      32: invokestatic  #108                // InterfaceMethod zio/ZIOAspect.$init$:(Lzio/ZIOAspect;)V
      35: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #120,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
