Compiled from "OpenTracing.scala"
public class zio.telemetry.opentracing.OpenTracing$aspects$ {
  private final zio.telemetry.opentracing.OpenTracing $outer;

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> root(java.lang.String, boolean, boolean);
    Code:
       0: new           #10                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$1
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #40                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$1."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Ljava/lang/String;ZZ)V
      11: areturn

  public boolean root$default$2();
    Code:
       0: iconst_1
       1: ireturn

  public boolean root$default$3();
    Code:
       0: iconst_1
       1: ireturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> span(java.lang.String, boolean, boolean);
    Code:
       0: new           #14                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$2
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokespecial #49                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$2."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Ljava/lang/String;ZZ)V
      11: areturn

  public boolean span$default$2();
    Code:
       0: iconst_1
       1: ireturn

  public boolean span$default$3();
    Code:
       0: iconst_1
       1: ireturn

  public <C> zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> spanFrom(io.opentracing.propagation.Format<C>, C, java.lang.String, boolean, boolean);
    Code:
       0: new           #16                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$3
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: iload         4
      10: iload         5
      12: invokespecial #59                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$3."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Lio/opentracing/propagation/Format;Ljava/lang/Object;Ljava/lang/String;ZZ)V
      15: areturn

  public <C> boolean spanFrom$default$4();
    Code:
       0: iconst_1
       1: ireturn

  public <C> boolean spanFrom$default$5();
    Code:
       0: iconst_1
       1: ireturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> setBaggageItem(java.lang.String, java.lang.String);
    Code:
       0: new           #18                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$4
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #72                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$4."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Ljava/lang/String;Ljava/lang/String;)V
      10: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> tag(java.lang.String, java.lang.String);
    Code:
       0: new           #20                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$5
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #74                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$5."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Ljava/lang/String;Ljava/lang/String;)V
      10: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> tag(java.lang.String, int);
    Code:
       0: new           #22                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$6
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #79                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$6."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Ljava/lang/String;I)V
      10: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> tag(java.lang.String, boolean);
    Code:
       0: new           #24                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$7
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokespecial #85                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$7."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Ljava/lang/String;Z)V
      10: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> log(scala.collection.immutable.Map<java.lang.String, ?>);
    Code:
       0: new           #26                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$8
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #92                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$8."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Lscala/collection/immutable/Map;)V
       9: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> log(java.lang.String);
    Code:
       0: new           #28                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$9
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #99                 // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$9."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Ljava/lang/String;)V
       9: areturn

  public <C> zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> inject(io.opentracing.propagation.Format<C>, C);
    Code:
       0: new           #12                 // class zio/telemetry/opentracing/OpenTracing$aspects$$anon$10
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #105                // Method zio/telemetry/opentracing/OpenTracing$aspects$$anon$10."<init>":(Lzio/telemetry/opentracing/OpenTracing$aspects$;Lio/opentracing/propagation/Format;Ljava/lang/Object;)V
      10: areturn

  public zio.telemetry.opentracing.OpenTracing zio$telemetry$opentracing$OpenTracing$aspects$$$outer();
    Code:
       0: aload_0
       1: getfield      #109                // Field $outer:Lzio/telemetry/opentracing/OpenTracing;
       4: areturn

  public zio.telemetry.opentracing.OpenTracing$aspects$(zio.telemetry.opentracing.OpenTracing);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #109                // Field $outer:Lzio/telemetry/opentracing/OpenTracing;
      11: aload_0
      12: invokespecial #113                // Method java/lang/Object."<init>":()V
      15: return
}
