Compiled from "OpenTracing.scala"
public final class zio.telemetry.opentracing.OpenTracing$aspects$$anon$3 implements zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> {
  private final zio.telemetry.opentracing.OpenTracing$aspects$ $outer;

  private final io.opentracing.propagation.Format format$1;

  private final java.lang.Object carrier$1;

  private final java.lang.String operation$3;

  private final boolean tagError$3;

  private final boolean logError$3;

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $greater$greater$greater(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // InterfaceMethod zio/ZIOAspect.$greater$greater$greater$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $at$at(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #47                 // InterfaceMethod zio/ZIOAspect.$at$at$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> andThen(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #51                 // InterfaceMethod zio/ZIOAspect.andThen$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> flip();
    Code:
       0: aload_0
       1: invokestatic  #57                 // InterfaceMethod zio/ZIOAspect.flip$:(Lzio/ZIOAspect;)Lzio/ZIOAspect;
       4: areturn

  public <R, E, A> zio.ZIO<R, E, A> apply(zio.ZIO<R, E, A>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #64                 // Field $outer:Lzio/telemetry/opentracing/OpenTracing$aspects$;
       4: invokevirtual #68                 // Method zio/telemetry/opentracing/OpenTracing$aspects$.zio$telemetry$opentracing$OpenTracing$aspects$$$outer:()Lzio/telemetry/opentracing/OpenTracing;
       7: aload_0
       8: getfield      #70                 // Field format$1:Lio/opentracing/propagation/Format;
      11: aload_0
      12: getfield      #72                 // Field carrier$1:Ljava/lang/Object;
      15: aload_0
      16: getfield      #74                 // Field operation$3:Ljava/lang/String;
      19: aload_0
      20: getfield      #76                 // Field tagError$3:Z
      23: aload_0
      24: getfield      #78                 // Field logError$3:Z
      27: aload_1
      28: invokedynamic #101,  0            // InvokeDynamic #0:apply:(Lzio/ZIO;)Lscala/Function0;
      33: aload_2
      34: invokeinterface #104,  8          // InterfaceMethod zio/telemetry/opentracing/OpenTracing.spanFrom:(Lio/opentracing/propagation/Format;Ljava/lang/Object;Ljava/lang/String;ZZLscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      39: areturn

  public static final zio.ZIO $anonfun$apply$3(zio.ZIO);
    Code:
       0: aload_0
       1: areturn

  public zio.telemetry.opentracing.OpenTracing$aspects$$anon$3(zio.telemetry.opentracing.OpenTracing$aspects$, io.opentracing.propagation.Format, java.lang.Object, java.lang.String, boolean, boolean);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #64                 // Field $outer:Lzio/telemetry/opentracing/OpenTracing$aspects$;
      11: aload_0
      12: aload_2
      13: putfield      #70                 // Field format$1:Lio/opentracing/propagation/Format;
      16: aload_0
      17: aload_3
      18: putfield      #72                 // Field carrier$1:Ljava/lang/Object;
      21: aload_0
      22: aload         4
      24: putfield      #74                 // Field operation$3:Ljava/lang/String;
      27: aload_0
      28: iload         5
      30: putfield      #76                 // Field tagError$3:Z
      33: aload_0
      34: iload         6
      36: putfield      #78                 // Field logError$3:Z
      39: aload_0
      40: invokespecial #111                // Method java/lang/Object."<init>":()V
      43: aload_0
      44: invokestatic  #115                // InterfaceMethod zio/ZIOAspect.$init$:(Lzio/ZIOAspect;)V
      47: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #127,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
