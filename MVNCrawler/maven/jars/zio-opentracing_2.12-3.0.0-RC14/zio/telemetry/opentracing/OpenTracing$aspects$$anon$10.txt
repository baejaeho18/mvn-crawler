Compiled from "OpenTracing.scala"
public final class zio.telemetry.opentracing.OpenTracing$aspects$$anon$10 implements zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> {
  private final zio.telemetry.opentracing.OpenTracing$aspects$ $outer;

  private final io.opentracing.propagation.Format format$2;

  private final java.lang.Object carrier$2;

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $greater$greater$greater(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #35                 // InterfaceMethod zio/ZIOAspect.$greater$greater$greater$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> $at$at(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // InterfaceMethod zio/ZIOAspect.$at$at$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public <LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1> andThen(zio.ZIOAspect<LowerR1, UpperR1, LowerE1, UpperE1, LowerA1, UpperA1>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #46                 // InterfaceMethod zio/ZIOAspect.andThen$:(Lzio/ZIOAspect;Lzio/ZIOAspect;)Lzio/ZIOAspect;
       5: areturn

  public zio.ZIOAspect<scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object, scala.runtime.Nothing$, java.lang.Object> flip();
    Code:
       0: aload_0
       1: invokestatic  #52                 // InterfaceMethod zio/ZIOAspect.flip$:(Lzio/ZIOAspect;)Lzio/ZIOAspect;
       4: areturn

  public <R, E, A> zio.ZIO<R, E, A> apply(zio.ZIO<R, E, A>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #59                 // Field $outer:Lzio/telemetry/opentracing/OpenTracing$aspects$;
       4: invokevirtual #63                 // Method zio/telemetry/opentracing/OpenTracing$aspects$.zio$telemetry$opentracing$OpenTracing$aspects$$$outer:()Lzio/telemetry/opentracing/OpenTracing;
       7: aload_0
       8: getfield      #65                 // Field format$2:Lio/opentracing/propagation/Format;
      11: aload_0
      12: getfield      #67                 // Field carrier$2:Ljava/lang/Object;
      15: aload_2
      16: invokeinterface #70,  4           // InterfaceMethod zio/telemetry/opentracing/OpenTracing.inject:(Lio/opentracing/propagation/Format;Ljava/lang/Object;Ljava/lang/Object;)Lzio/ZIO;
      21: aload_1
      22: invokedynamic #93,  0             // InvokeDynamic #0:apply:(Lzio/ZIO;)Lscala/Function0;
      27: aload_2
      28: invokeinterface #99,  3           // InterfaceMethod zio/ZIO.$times$greater:(Lscala/Function0;Ljava/lang/Object;)Lzio/ZIO;
      33: areturn

  public static final zio.ZIO $anonfun$apply$10(zio.ZIO);
    Code:
       0: aload_0
       1: areturn

  public zio.telemetry.opentracing.OpenTracing$aspects$$anon$10(zio.telemetry.opentracing.OpenTracing$aspects$, io.opentracing.propagation.Format, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: athrow
       6: aload_0
       7: aload_1
       8: putfield      #59                 // Field $outer:Lzio/telemetry/opentracing/OpenTracing$aspects$;
      11: aload_0
      12: aload_2
      13: putfield      #65                 // Field format$2:Lio/opentracing/propagation/Format;
      16: aload_0
      17: aload_3
      18: putfield      #67                 // Field carrier$2:Ljava/lang/Object;
      21: aload_0
      22: invokespecial #106                // Method java/lang/Object."<init>":()V
      25: aload_0
      26: invokestatic  #110                // InterfaceMethod zio/ZIOAspect.$init$:(Lzio/ZIOAspect;)V
      29: return

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #122,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
