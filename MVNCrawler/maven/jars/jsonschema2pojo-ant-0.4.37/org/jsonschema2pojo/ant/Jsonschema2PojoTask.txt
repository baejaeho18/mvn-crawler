Compiled from "Jsonschema2PojoTask.java"
public class org.jsonschema2pojo.ant.Jsonschema2PojoTask extends org.apache.tools.ant.Task implements org.jsonschema2pojo.GenerationConfig {
  private boolean generateBuilders;

  private boolean includeConstructors;

  private boolean usePrimitives;

  private java.lang.String source;

  private java.io.File targetDirectory;

  private java.lang.String targetPackage;

  private boolean skip;

  private char[] propertyWordDelimiters;

  private boolean useLongIntegers;

  private boolean useBigIntegers;

  private boolean useDoubleNumbers;

  private boolean useBigDecimals;

  private boolean includeHashcodeAndEquals;

  private boolean includeToString;

  private java.lang.String[] toStringExcludes;

  private org.jsonschema2pojo.AnnotationStyle annotationStyle;

  private org.jsonschema2pojo.InclusionLevel inclusionLevel;

  private java.lang.Class<? extends org.jsonschema2pojo.Annotator> customAnnotator;

  private java.lang.Class<? extends org.jsonschema2pojo.rules.RuleFactory> customRuleFactory;

  private boolean includeJsr303Annotations;

  private boolean includeJsr305Annotations;

  private org.jsonschema2pojo.SourceType sourceType;

  private org.apache.tools.ant.types.Path classpath;

  private boolean removeOldOutput;

  private java.lang.String outputEncoding;

  private boolean useJodaDates;

  private boolean useJodaLocalDates;

  private boolean useJodaLocalTimes;

  private boolean useCommonsLang3;

  private boolean parcelable;

  private boolean serializable;

  private boolean initializeCollections;

  private java.lang.String classNamePrefix;

  private java.lang.String classNameSuffix;

  private java.lang.String[] fileExtensions;

  private boolean constructorsRequiredPropertiesOnly;

  private boolean includeAdditionalProperties;

  private boolean includeAccessors;

  private java.lang.String targetVersion;

  private boolean includeDynamicAccessors;

  private java.lang.String dateTimeType;

  private java.lang.String timeType;

  private java.lang.String dateType;

  private boolean formatDateTimes;

  private boolean formatDates;

  private boolean formatTimes;

  private java.lang.String customDatePattern;

  private java.lang.String customTimePattern;

  private java.lang.String customDateTimePattern;

  private java.lang.String refFragmentPathDelimiters;

  private org.jsonschema2pojo.SourceSortOrder sourceSortOrder;

  public org.jsonschema2pojo.ant.Jsonschema2PojoTask();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/tools/ant/Task."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field includeConstructors:Z
       9: aload_0
      10: iconst_3
      11: newarray       char
      13: dup
      14: iconst_0
      15: bipush        45
      17: castore
      18: dup
      19: iconst_1
      20: bipush        32
      22: castore
      23: dup
      24: iconst_2
      25: bipush        95
      27: castore
      28: putfield      #3                  // Field propertyWordDelimiters:[C
      31: aload_0
      32: iconst_0
      33: putfield      #4                  // Field useBigIntegers:Z
      36: aload_0
      37: iconst_1
      38: putfield      #5                  // Field useDoubleNumbers:Z
      41: aload_0
      42: iconst_0
      43: putfield      #6                  // Field useBigDecimals:Z
      46: aload_0
      47: iconst_1
      48: putfield      #7                  // Field includeHashcodeAndEquals:Z
      51: aload_0
      52: iconst_1
      53: putfield      #8                  // Field includeToString:Z
      56: aload_0
      57: iconst_0
      58: anewarray     #9                  // class java/lang/String
      61: putfield      #10                 // Field toStringExcludes:[Ljava/lang/String;
      64: aload_0
      65: getstatic     #11                 // Field org/jsonschema2pojo/AnnotationStyle.JACKSON:Lorg/jsonschema2pojo/AnnotationStyle;
      68: putfield      #12                 // Field annotationStyle:Lorg/jsonschema2pojo/AnnotationStyle;
      71: aload_0
      72: getstatic     #13                 // Field org/jsonschema2pojo/InclusionLevel.NON_NULL:Lorg/jsonschema2pojo/InclusionLevel;
      75: putfield      #14                 // Field inclusionLevel:Lorg/jsonschema2pojo/InclusionLevel;
      78: aload_0
      79: ldc           #15                 // class org/jsonschema2pojo/NoopAnnotator
      81: putfield      #16                 // Field customAnnotator:Ljava/lang/Class;
      84: aload_0
      85: ldc           #17                 // class org/jsonschema2pojo/rules/RuleFactory
      87: putfield      #18                 // Field customRuleFactory:Ljava/lang/Class;
      90: aload_0
      91: iconst_0
      92: putfield      #19                 // Field includeJsr303Annotations:Z
      95: aload_0
      96: iconst_0
      97: putfield      #20                 // Field includeJsr305Annotations:Z
     100: aload_0
     101: getstatic     #21                 // Field org/jsonschema2pojo/SourceType.JSONSCHEMA:Lorg/jsonschema2pojo/SourceType;
     104: putfield      #22                 // Field sourceType:Lorg/jsonschema2pojo/SourceType;
     107: aload_0
     108: iconst_0
     109: putfield      #23                 // Field removeOldOutput:Z
     112: aload_0
     113: ldc           #24                 // String UTF-8
     115: putfield      #25                 // Field outputEncoding:Ljava/lang/String;
     118: aload_0
     119: iconst_0
     120: putfield      #26                 // Field useJodaDates:Z
     123: aload_0
     124: iconst_0
     125: putfield      #27                 // Field useJodaLocalDates:Z
     128: aload_0
     129: iconst_0
     130: putfield      #28                 // Field useJodaLocalTimes:Z
     133: aload_0
     134: iconst_0
     135: putfield      #29                 // Field useCommonsLang3:Z
     138: aload_0
     139: iconst_0
     140: putfield      #30                 // Field parcelable:Z
     143: aload_0
     144: iconst_0
     145: putfield      #31                 // Field serializable:Z
     148: aload_0
     149: iconst_1
     150: putfield      #32                 // Field initializeCollections:Z
     153: aload_0
     154: ldc           #33                 // String
     156: putfield      #34                 // Field classNamePrefix:Ljava/lang/String;
     159: aload_0
     160: ldc           #33                 // String
     162: putfield      #35                 // Field classNameSuffix:Ljava/lang/String;
     165: aload_0
     166: iconst_0
     167: anewarray     #9                  // class java/lang/String
     170: putfield      #36                 // Field fileExtensions:[Ljava/lang/String;
     173: aload_0
     174: iconst_0
     175: putfield      #37                 // Field constructorsRequiredPropertiesOnly:Z
     178: aload_0
     179: iconst_1
     180: putfield      #38                 // Field includeAdditionalProperties:Z
     183: aload_0
     184: iconst_1
     185: putfield      #39                 // Field includeAccessors:Z
     188: aload_0
     189: ldc           #40                 // String 1.6
     191: putfield      #41                 // Field targetVersion:Ljava/lang/String;
     194: aload_0
     195: iconst_0
     196: putfield      #42                 // Field includeDynamicAccessors:Z
     199: aload_0
     200: iconst_0
     201: putfield      #43                 // Field formatDateTimes:Z
     204: aload_0
     205: iconst_0
     206: putfield      #44                 // Field formatDates:Z
     209: aload_0
     210: iconst_0
     211: putfield      #45                 // Field formatTimes:Z
     214: aload_0
     215: ldc           #46                 // String #/.
     217: putfield      #47                 // Field refFragmentPathDelimiters:Ljava/lang/String;
     220: aload_0
     221: getstatic     #48                 // Field org/jsonschema2pojo/SourceSortOrder.OS:Lorg/jsonschema2pojo/SourceSortOrder;
     224: putfield      #49                 // Field sourceSortOrder:Lorg/jsonschema2pojo/SourceSortOrder;
     227: return

  public void execute() throws org.apache.tools.ant.BuildException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field skip:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #51                 // Field source:Ljava/lang/String;
      12: ifnonnull     22
      15: aload_0
      16: ldc           #52                 // String source attribute is required but was not set
      18: invokevirtual #53                 // Method log:(Ljava/lang/String;)V
      21: return
      22: aload_0
      23: getfield      #51                 // Field source:Ljava/lang/String;
      26: invokestatic  #54                 // Method org/jsonschema2pojo/util/URLUtil.parseURL:(Ljava/lang/String;)Ljava/net/URL;
      29: astore_1
      30: goto          55
      33: astore_2
      34: aload_0
      35: ldc           #56                 // String Invalid schema source provided: %s
      37: iconst_1
      38: anewarray     #57                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: aload_0
      44: getfield      #51                 // Field source:Ljava/lang/String;
      47: aastore
      48: invokestatic  #58                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: invokevirtual #53                 // Method log:(Ljava/lang/String;)V
      54: return
      55: aload_1
      56: invokevirtual #59                 // Method java/net/URL.toString:()Ljava/lang/String;
      59: invokestatic  #60                 // Method org/jsonschema2pojo/util/URLUtil.parseProtocol:(Ljava/lang/String;)Lorg/jsonschema2pojo/URLProtocol;
      62: getstatic     #61                 // Field org/jsonschema2pojo/URLProtocol.FILE:Lorg/jsonschema2pojo/URLProtocol;
      65: if_acmpne     114
      68: new           #62                 // class java/io/File
      71: dup
      72: aload_1
      73: invokevirtual #63                 // Method java/net/URL.getFile:()Ljava/lang/String;
      76: invokespecial #64                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      79: astore_2
      80: aload_2
      81: invokevirtual #65                 // Method java/io/File.exists:()Z
      84: ifne          114
      87: aload_0
      88: new           #66                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
      95: aload_2
      96: invokevirtual #68                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      99: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: ldc           #70                 // String  cannot be found
     104: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokevirtual #53                 // Method log:(Ljava/lang/String;)V
     113: return
     114: aload_0
     115: getfield      #72                 // Field targetDirectory:Ljava/io/File;
     118: ifnonnull     128
     121: aload_0
     122: ldc           #73                 // String targetDirectory attribute is required but was not set
     124: invokevirtual #53                 // Method log:(Ljava/lang/String;)V
     127: return
     128: aload_0
     129: invokespecial #74                 // Method buildExtendedClassloader:()Ljava/lang/ClassLoader;
     132: astore_2
     133: invokestatic  #75                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     136: aload_2
     137: invokevirtual #76                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
     140: aload_0
     141: invokestatic  #77                 // Method org/jsonschema2pojo/Jsonschema2Pojo.generate:(Lorg/jsonschema2pojo/GenerationConfig;)V
     144: goto          179
     147: astore_3
     148: new           #79                 // class org/apache/tools/ant/BuildException
     151: dup
     152: new           #66                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #80                 // String Error generating classes from JSON Schema file(s)
     161: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_0
     165: getfield      #51                 // Field source:Ljava/lang/String;
     168: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     174: aload_3
     175: invokespecial #81                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     178: athrow
     179: return
    Exception table:
       from    to  target type
          22    30    33   Class java/lang/IllegalArgumentException
         140   144   147   Class java/io/IOException

  private java.lang.ClassLoader buildExtendedClassloader();
    Code:
       0: new           #82                 // class java/util/ArrayList
       3: dup
       4: invokespecial #83                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #84                 // Method getClasspath:()Lorg/apache/tools/ant/types/Path;
      12: invokevirtual #85                 // Method org/apache/tools/ant/types/Path.list:()[Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     97
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: aload_1
      35: new           #62                 // class java/io/File
      38: dup
      39: aload         5
      41: invokespecial #64                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      44: invokevirtual #86                 // Method java/io/File.toURI:()Ljava/net/URI;
      47: invokevirtual #87                 // Method java/net/URI.toURL:()Ljava/net/URL;
      50: invokeinterface #88,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: goto          91
      59: astore        6
      61: new           #79                 // class org/apache/tools/ant/BuildException
      64: dup
      65: new           #66                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #90                 // String Unable to use classpath entry as it could not be understood as a valid URL:
      74: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload         5
      79: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: aload         6
      87: invokespecial #81                 // Method org/apache/tools/ant/BuildException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      90: athrow
      91: iinc          4, 1
      94: goto          22
      97: invokestatic  #75                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     100: invokevirtual #91                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
     103: astore_2
     104: new           #92                 // class org/jsonschema2pojo/ant/Jsonschema2PojoTask$1
     107: dup
     108: aload_0
     109: aload_1
     110: aload_2
     111: invokespecial #93                 // Method org/jsonschema2pojo/ant/Jsonschema2PojoTask$1."<init>":(Lorg/jsonschema2pojo/ant/Jsonschema2PojoTask;Ljava/util/List;Ljava/lang/ClassLoader;)V
     114: invokestatic  #94                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
     117: checkcast     #95                 // class java/lang/ClassLoader
     120: areturn
    Exception table:
       from    to  target type
          34    56    59   Class java/net/MalformedURLException

  public void setIncludeConstructors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field includeConstructors:Z
       5: return

  public void setConstructorsRequiredPropertiesOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #37                 // Field constructorsRequiredPropertiesOnly:Z
       5: return

  public void setGenerateBuilders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #96                 // Field generateBuilders:Z
       5: return

  public void setUsePrimitives(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #97                 // Field usePrimitives:Z
       5: return

  public void setUseLongIntegers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #98                 // Field useLongIntegers:Z
       5: return

  public void setUseBigIntegers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field useBigIntegers:Z
       5: return

  public void setUseDoubleNumbers(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field useDoubleNumbers:Z
       5: return

  public void setUseBigDecimals(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field useBigDecimals:Z
       5: return

  public void setSource(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field source:Ljava/lang/String;
       5: return

  public void setTargetDirectory(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #72                 // Field targetDirectory:Ljava/io/File;
       5: return

  public void setTargetPackage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #99                 // Field targetPackage:Ljava/lang/String;
       5: return

  public void setSkip(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #50                 // Field skip:Z
       5: return

  public void setPropertyWordDelimiters(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #100                // Method org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;
       5: invokevirtual #101                // Method java/lang/String.toCharArray:()[C
       8: putfield      #3                  // Field propertyWordDelimiters:[C
      11: return

  public void setIncludeHashcodeAndEquals(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field includeHashcodeAndEquals:Z
       5: return

  public void setIncludeToString(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field includeToString:Z
       5: return

  public void setAnnotationStyle(org.jsonschema2pojo.AnnotationStyle);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field annotationStyle:Lorg/jsonschema2pojo/AnnotationStyle;
       5: return

  public void setInclusionLevel(org.jsonschema2pojo.InclusionLevel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field inclusionLevel:Lorg/jsonschema2pojo/InclusionLevel;
       5: return

  public void setCustomAnnotator(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #102                // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ifeq          28
       7: aload_0
       8: aload_1
       9: invokestatic  #103                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      12: putfield      #16                 // Field customAnnotator:Ljava/lang/Class;
      15: goto          34
      18: astore_2
      19: new           #55                 // class java/lang/IllegalArgumentException
      22: dup
      23: aload_2
      24: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: aload_0
      29: ldc           #15                 // class org/jsonschema2pojo/NoopAnnotator
      31: putfield      #16                 // Field customAnnotator:Ljava/lang/Class;
      34: return
    Exception table:
       from    to  target type
           7    15    18   Class java/lang/ClassNotFoundException

  public void setCustomRuleFactory(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #102                // Method org/apache/commons/lang3/StringUtils.isNotBlank:(Ljava/lang/CharSequence;)Z
       4: ifeq          28
       7: aload_0
       8: aload_1
       9: invokestatic  #103                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      12: putfield      #18                 // Field customRuleFactory:Ljava/lang/Class;
      15: goto          34
      18: astore_2
      19: new           #55                 // class java/lang/IllegalArgumentException
      22: dup
      23: aload_2
      24: invokespecial #105                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      27: athrow
      28: aload_0
      29: ldc           #17                 // class org/jsonschema2pojo/rules/RuleFactory
      31: putfield      #18                 // Field customRuleFactory:Ljava/lang/Class;
      34: return
    Exception table:
       from    to  target type
           7    15    18   Class java/lang/ClassNotFoundException

  public void setIncludeJsr303Annotations(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field includeJsr303Annotations:Z
       5: return

  public void setIncludeJsr305Annotations(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field includeJsr305Annotations:Z
       5: return

  public void setSourceType(org.jsonschema2pojo.SourceType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field sourceType:Lorg/jsonschema2pojo/SourceType;
       5: return

  public void setRemoveOldOutput(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #23                 // Field removeOldOutput:Z
       5: return

  public void setOutputEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field outputEncoding:Ljava/lang/String;
       5: return

  public void setUseJodaDates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field useJodaDates:Z
       5: return

  public void setUseJodaLocalDates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #27                 // Field useJodaLocalDates:Z
       5: return

  public void setUseJodaLocalTimes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field useJodaLocalTimes:Z
       5: return

  public void setUseCommonsLang3(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field useCommonsLang3:Z
       5: return

  public void setParcelable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field parcelable:Z
       5: return

  public void setSerializable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #31                 // Field serializable:Z
       5: return

  public void setInitializeCollections(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field initializeCollections:Z
       5: return

  public void setClassNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field classNamePrefix:Ljava/lang/String;
       5: return

  public void setClassNameSuffix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field classNameSuffix:Ljava/lang/String;
       5: return

  public void setFileExtensions(java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field fileExtensions:[Ljava/lang/String;
       5: return

  public void setIncludeAdditionalProperties(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field includeAdditionalProperties:Z
       5: return

  public void setIncludeAccessors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field includeAccessors:Z
       5: return

  public void setTargetVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field targetVersion:Ljava/lang/String;
       5: return

  public void setIncludeDynamicAccessors(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field includeDynamicAccessors:Z
       5: return

  public void setFormatDateTime(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field formatDateTimes:Z
       5: return

  public void setFormatTimes(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #45                 // Field formatTimes:Z
       5: return

  public void setFormatDates(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #44                 // Field formatDates:Z
       5: return

  public void setCustomDatePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field customDatePattern:Ljava/lang/String;
       5: return

  public void setCustomTimePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #107                // Field customTimePattern:Ljava/lang/String;
       5: return

  public void setCustomDateTimePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field customDateTimePattern:Ljava/lang/String;
       5: return

  public void setRefFragmentPathDelimiters(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #47                 // Field refFragmentPathDelimiters:Ljava/lang/String;
       5: return

  public void setSourceSortOrder(org.jsonschema2pojo.SourceSortOrder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #49                 // Field sourceSortOrder:Lorg/jsonschema2pojo/SourceSortOrder;
       5: return

  public boolean isGenerateBuilders();
    Code:
       0: aload_0
       1: getfield      #96                 // Field generateBuilders:Z
       4: ireturn

  public boolean isUsePrimitives();
    Code:
       0: aload_0
       1: getfield      #97                 // Field usePrimitives:Z
       4: ireturn

  public java.util.Iterator<java.net.URL> getSource();
    Code:
       0: aload_0
       1: getfield      #51                 // Field source:Ljava/lang/String;
       4: invokestatic  #54                 // Method org/jsonschema2pojo/util/URLUtil.parseURL:(Ljava/lang/String;)Ljava/net/URL;
       7: invokestatic  #109                // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      10: invokeinterface #110,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: areturn

  public java.io.File getTargetDirectory();
    Code:
       0: aload_0
       1: getfield      #72                 // Field targetDirectory:Ljava/io/File;
       4: areturn

  public java.lang.String getTargetPackage();
    Code:
       0: aload_0
       1: getfield      #99                 // Field targetPackage:Ljava/lang/String;
       4: areturn

  public char[] getPropertyWordDelimiters();
    Code:
       0: aload_0
       1: getfield      #3                  // Field propertyWordDelimiters:[C
       4: invokevirtual #111                // Method "[C".clone:()Ljava/lang/Object;
       7: checkcast     #112                // class "[C"
      10: areturn

  public boolean isSkip();
    Code:
       0: aload_0
       1: getfield      #50                 // Field skip:Z
       4: ireturn

  public boolean isUseLongIntegers();
    Code:
       0: aload_0
       1: getfield      #98                 // Field useLongIntegers:Z
       4: ireturn

  public boolean isUseDoubleNumbers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field useDoubleNumbers:Z
       4: ireturn

  public boolean isIncludeHashcodeAndEquals();
    Code:
       0: aload_0
       1: getfield      #7                  // Field includeHashcodeAndEquals:Z
       4: ireturn

  public boolean isIncludeToString();
    Code:
       0: aload_0
       1: getfield      #8                  // Field includeToString:Z
       4: ireturn

  public java.lang.String[] getToStringExcludes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field toStringExcludes:[Ljava/lang/String;
       4: areturn

  public org.jsonschema2pojo.AnnotationStyle getAnnotationStyle();
    Code:
       0: aload_0
       1: getfield      #12                 // Field annotationStyle:Lorg/jsonschema2pojo/AnnotationStyle;
       4: areturn

  public org.jsonschema2pojo.InclusionLevel getInclusionLevel();
    Code:
       0: aload_0
       1: getfield      #14                 // Field inclusionLevel:Lorg/jsonschema2pojo/InclusionLevel;
       4: areturn

  public java.lang.Class<? extends org.jsonschema2pojo.Annotator> getCustomAnnotator();
    Code:
       0: aload_0
       1: getfield      #16                 // Field customAnnotator:Ljava/lang/Class;
       4: areturn

  public java.lang.Class<? extends org.jsonschema2pojo.rules.RuleFactory> getCustomRuleFactory();
    Code:
       0: aload_0
       1: getfield      #18                 // Field customRuleFactory:Ljava/lang/Class;
       4: areturn

  public boolean isIncludeJsr303Annotations();
    Code:
       0: aload_0
       1: getfield      #19                 // Field includeJsr303Annotations:Z
       4: ireturn

  public boolean isIncludeJsr305Annotations();
    Code:
       0: aload_0
       1: getfield      #20                 // Field includeJsr305Annotations:Z
       4: ireturn

  public org.jsonschema2pojo.SourceType getSourceType();
    Code:
       0: aload_0
       1: getfield      #22                 // Field sourceType:Lorg/jsonschema2pojo/SourceType;
       4: areturn

  public org.apache.tools.ant.types.Path createClasspath();
    Code:
       0: aload_0
       1: getfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
       4: ifnonnull     22
       7: aload_0
       8: new           #114                // class org/apache/tools/ant/types/Path
      11: dup
      12: aload_0
      13: invokevirtual #115                // Method getProject:()Lorg/apache/tools/ant/Project;
      16: invokespecial #116                // Method org/apache/tools/ant/types/Path."<init>":(Lorg/apache/tools/ant/Project;)V
      19: putfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
      22: aload_0
      23: getfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
      26: invokevirtual #117                // Method org/apache/tools/ant/types/Path.createPath:()Lorg/apache/tools/ant/types/Path;
      29: areturn

  public void setClasspath(org.apache.tools.ant.types.Path);
    Code:
       0: aload_0
       1: getfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
       4: ifnonnull     15
       7: aload_0
       8: aload_1
       9: putfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
      12: goto          23
      15: aload_0
      16: getfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
      19: aload_1
      20: invokevirtual #118                // Method org/apache/tools/ant/types/Path.append:(Lorg/apache/tools/ant/types/Path;)V
      23: return

  public void setClasspathRef(org.apache.tools.ant.types.Reference);
    Code:
       0: aload_0
       1: invokevirtual #119                // Method createClasspath:()Lorg/apache/tools/ant/types/Path;
       4: aload_1
       5: invokevirtual #120                // Method org/apache/tools/ant/types/Path.setRefid:(Lorg/apache/tools/ant/types/Reference;)V
       8: return

  public org.apache.tools.ant.types.Path getClasspath();
    Code:
       0: aload_0
       1: getfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
       4: ifnonnull     21
       7: new           #114                // class org/apache/tools/ant/types/Path
      10: dup
      11: aload_0
      12: invokevirtual #115                // Method getProject:()Lorg/apache/tools/ant/Project;
      15: invokespecial #116                // Method org/apache/tools/ant/types/Path."<init>":(Lorg/apache/tools/ant/Project;)V
      18: goto          25
      21: aload_0
      22: getfield      #113                // Field classpath:Lorg/apache/tools/ant/types/Path;
      25: areturn

  public boolean isRemoveOldOutput();
    Code:
       0: aload_0
       1: getfield      #23                 // Field removeOldOutput:Z
       4: ireturn

  public java.lang.String getOutputEncoding();
    Code:
       0: aload_0
       1: getfield      #25                 // Field outputEncoding:Ljava/lang/String;
       4: areturn

  public boolean isUseJodaDates();
    Code:
       0: aload_0
       1: getfield      #26                 // Field useJodaDates:Z
       4: ireturn

  public boolean isUseJodaLocalDates();
    Code:
       0: aload_0
       1: getfield      #27                 // Field useJodaLocalDates:Z
       4: ireturn

  public boolean isUseJodaLocalTimes();
    Code:
       0: aload_0
       1: getfield      #28                 // Field useJodaLocalTimes:Z
       4: ireturn

  public boolean isUseCommonsLang3();
    Code:
       0: aload_0
       1: getfield      #29                 // Field useCommonsLang3:Z
       4: ireturn

  public boolean isParcelable();
    Code:
       0: aload_0
       1: getfield      #30                 // Field parcelable:Z
       4: ireturn

  public boolean isSerializable();
    Code:
       0: aload_0
       1: getfield      #31                 // Field serializable:Z
       4: ireturn

  public java.io.FileFilter getFileFilter();
    Code:
       0: new           #121                // class org/jsonschema2pojo/AllFileFilter
       3: dup
       4: invokespecial #122                // Method org/jsonschema2pojo/AllFileFilter."<init>":()V
       7: areturn

  public boolean isInitializeCollections();
    Code:
       0: aload_0
       1: getfield      #32                 // Field initializeCollections:Z
       4: ireturn

  public java.lang.String getClassNamePrefix();
    Code:
       0: aload_0
       1: getfield      #34                 // Field classNamePrefix:Ljava/lang/String;
       4: areturn

  public java.lang.String getClassNameSuffix();
    Code:
       0: aload_0
       1: getfield      #35                 // Field classNameSuffix:Ljava/lang/String;
       4: areturn

  public java.lang.String[] getFileExtensions();
    Code:
       0: aload_0
       1: getfield      #36                 // Field fileExtensions:[Ljava/lang/String;
       4: areturn

  public boolean isIncludeConstructors();
    Code:
       0: aload_0
       1: getfield      #2                  // Field includeConstructors:Z
       4: ireturn

  public boolean isConstructorsRequiredPropertiesOnly();
    Code:
       0: aload_0
       1: getfield      #37                 // Field constructorsRequiredPropertiesOnly:Z
       4: ireturn

  public boolean isIncludeAdditionalProperties();
    Code:
       0: aload_0
       1: getfield      #38                 // Field includeAdditionalProperties:Z
       4: ireturn

  public boolean isIncludeAccessors();
    Code:
       0: aload_0
       1: getfield      #39                 // Field includeAccessors:Z
       4: ireturn

  public java.lang.String getTargetVersion();
    Code:
       0: aload_0
       1: getfield      #41                 // Field targetVersion:Ljava/lang/String;
       4: areturn

  public boolean isIncludeDynamicAccessors();
    Code:
       0: aload_0
       1: getfield      #42                 // Field includeDynamicAccessors:Z
       4: ireturn

  public java.lang.String getDateTimeType();
    Code:
       0: aload_0
       1: getfield      #123                // Field dateTimeType:Ljava/lang/String;
       4: areturn

  public java.lang.String getDateType();
    Code:
       0: aload_0
       1: getfield      #124                // Field dateType:Ljava/lang/String;
       4: areturn

  public java.lang.String getTimeType();
    Code:
       0: aload_0
       1: getfield      #125                // Field timeType:Ljava/lang/String;
       4: areturn

  public boolean isUseBigIntegers();
    Code:
       0: aload_0
       1: getfield      #4                  // Field useBigIntegers:Z
       4: ireturn

  public boolean isUseBigDecimals();
    Code:
       0: aload_0
       1: getfield      #6                  // Field useBigDecimals:Z
       4: ireturn

  public boolean isFormatDateTimes();
    Code:
       0: aload_0
       1: getfield      #43                 // Field formatDateTimes:Z
       4: ireturn

  public boolean isFormatDates();
    Code:
       0: aload_0
       1: getfield      #44                 // Field formatDates:Z
       4: ireturn

  public boolean isFormatTimes();
    Code:
       0: aload_0
       1: getfield      #45                 // Field formatTimes:Z
       4: ireturn

  public java.lang.String getCustomDatePattern();
    Code:
       0: aload_0
       1: getfield      #106                // Field customDatePattern:Ljava/lang/String;
       4: areturn

  public java.lang.String getCustomTimePattern();
    Code:
       0: aload_0
       1: getfield      #107                // Field customTimePattern:Ljava/lang/String;
       4: areturn

  public java.lang.String getCustomDateTimePattern();
    Code:
       0: aload_0
       1: getfield      #108                // Field customDateTimePattern:Ljava/lang/String;
       4: areturn

  public java.lang.String getRefFragmentPathDelimiters();
    Code:
       0: aload_0
       1: getfield      #47                 // Field refFragmentPathDelimiters:Ljava/lang/String;
       4: areturn

  public org.jsonschema2pojo.SourceSortOrder getSourceSortOrder();
    Code:
       0: aload_0
       1: getfield      #49                 // Field sourceSortOrder:Lorg/jsonschema2pojo/SourceSortOrder;
       4: areturn
}
