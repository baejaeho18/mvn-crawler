Compiled from "PhysicalTable.java"
final class software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl implements software.amazon.awssdk.services.quicksight.model.PhysicalTable$Builder {
  private software.amazon.awssdk.services.quicksight.model.RelationalTable relationalTable;

  private software.amazon.awssdk.services.quicksight.model.CustomSql customSql;

  private software.amazon.awssdk.services.quicksight.model.S3Source s3Source;

  private software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: return

  private software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl(software.amazon.awssdk.services.quicksight.model.PhysicalTable);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #7                  // Method software/amazon/awssdk/services/quicksight/model/PhysicalTable.access$500:(Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable;)Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;
       9: invokevirtual #8                  // Method relationalTable:(Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;)Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable$Builder;
      12: pop
      13: aload_0
      14: aload_1
      15: invokestatic  #9                  // Method software/amazon/awssdk/services/quicksight/model/PhysicalTable.access$600:(Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable;)Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;
      18: invokevirtual #10                 // Method customSql:(Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;)Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable$Builder;
      21: pop
      22: aload_0
      23: aload_1
      24: invokestatic  #11                 // Method software/amazon/awssdk/services/quicksight/model/PhysicalTable.access$700:(Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable;)Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;
      27: invokevirtual #12                 // Method s3Source:(Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;)Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable$Builder;
      30: pop
      31: return

  public final software.amazon.awssdk.services.quicksight.model.RelationalTable$Builder getRelationalTable();
    Code:
       0: aload_0
       1: getfield      #5                  // Field relationalTable:Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;
       4: ifnull        17
       7: aload_0
       8: getfield      #5                  // Field relationalTable:Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;
      11: invokevirtual #13                 // Method software/amazon/awssdk/services/quicksight/model/RelationalTable.toBuilder:()Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable$Builder;
      14: goto          18
      17: aconst_null
      18: areturn

  public final software.amazon.awssdk.services.quicksight.model.PhysicalTable$Builder relationalTable(software.amazon.awssdk.services.quicksight.model.RelationalTable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field relationalTable:Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;
       5: aload_0
       6: areturn

  public final void setRelationalTable(software.amazon.awssdk.services.quicksight.model.RelationalTable$BuilderImpl);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #14                 // Method software/amazon/awssdk/services/quicksight/model/RelationalTable$BuilderImpl.build:()Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;
       9: goto          13
      12: aconst_null
      13: putfield      #5                  // Field relationalTable:Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;
      16: return

  public final software.amazon.awssdk.services.quicksight.model.CustomSql$Builder getCustomSql();
    Code:
       0: aload_0
       1: getfield      #4                  // Field customSql:Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field customSql:Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;
      11: invokevirtual #15                 // Method software/amazon/awssdk/services/quicksight/model/CustomSql.toBuilder:()Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql$Builder;
      14: goto          18
      17: aconst_null
      18: areturn

  public final software.amazon.awssdk.services.quicksight.model.PhysicalTable$Builder customSql(software.amazon.awssdk.services.quicksight.model.CustomSql);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field customSql:Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;
       5: aload_0
       6: areturn

  public final void setCustomSql(software.amazon.awssdk.services.quicksight.model.CustomSql$BuilderImpl);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #16                 // Method software/amazon/awssdk/services/quicksight/model/CustomSql$BuilderImpl.build:()Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;
       9: goto          13
      12: aconst_null
      13: putfield      #4                  // Field customSql:Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;
      16: return

  public final software.amazon.awssdk.services.quicksight.model.S3Source$Builder getS3Source();
    Code:
       0: aload_0
       1: getfield      #3                  // Field s3Source:Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;
       4: ifnull        17
       7: aload_0
       8: getfield      #3                  // Field s3Source:Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;
      11: invokevirtual #17                 // Method software/amazon/awssdk/services/quicksight/model/S3Source.toBuilder:()Lsoftware/amazon/awssdk/services/quicksight/model/S3Source$Builder;
      14: goto          18
      17: aconst_null
      18: areturn

  public final software.amazon.awssdk.services.quicksight.model.PhysicalTable$Builder s3Source(software.amazon.awssdk.services.quicksight.model.S3Source);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field s3Source:Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;
       5: aload_0
       6: areturn

  public final void setS3Source(software.amazon.awssdk.services.quicksight.model.S3Source$BuilderImpl);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #18                 // Method software/amazon/awssdk/services/quicksight/model/S3Source$BuilderImpl.build:()Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;
       9: goto          13
      12: aconst_null
      13: putfield      #3                  // Field s3Source:Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;
      16: return

  public software.amazon.awssdk.services.quicksight.model.PhysicalTable build();
    Code:
       0: new           #19                 // class software/amazon/awssdk/services/quicksight/model/PhysicalTable
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #20                 // Method software/amazon/awssdk/services/quicksight/model/PhysicalTable."<init>":(Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable$BuilderImpl;Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable$1;)V
       9: areturn

  public java.util.List<software.amazon.awssdk.core.SdkField<?>> sdkFields();
    Code:
       0: invokestatic  #21                 // Method software/amazon/awssdk/services/quicksight/model/PhysicalTable.access$900:()Ljava/util/List;
       3: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method build:()Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable;
       4: areturn

  static software.amazon.awssdk.services.quicksight.model.RelationalTable access$000(software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl);
    Code:
       0: aload_0
       1: getfield      #5                  // Field relationalTable:Lsoftware/amazon/awssdk/services/quicksight/model/RelationalTable;
       4: areturn

  static software.amazon.awssdk.services.quicksight.model.CustomSql access$100(software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field customSql:Lsoftware/amazon/awssdk/services/quicksight/model/CustomSql;
       4: areturn

  static software.amazon.awssdk.services.quicksight.model.S3Source access$200(software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field s3Source:Lsoftware/amazon/awssdk/services/quicksight/model/S3Source;
       4: areturn

  software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl(software.amazon.awssdk.services.quicksight.model.PhysicalTable, software.amazon.awssdk.services.quicksight.model.PhysicalTable$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lsoftware/amazon/awssdk/services/quicksight/model/PhysicalTable;)V
       5: return

  software.amazon.awssdk.services.quicksight.model.PhysicalTable$BuilderImpl(software.amazon.awssdk.services.quicksight.model.PhysicalTable$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
