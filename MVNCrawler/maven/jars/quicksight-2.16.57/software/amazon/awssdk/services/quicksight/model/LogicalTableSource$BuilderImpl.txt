Compiled from "LogicalTableSource.java"
final class software.amazon.awssdk.services.quicksight.model.LogicalTableSource$BuilderImpl implements software.amazon.awssdk.services.quicksight.model.LogicalTableSource$Builder {
  private software.amazon.awssdk.services.quicksight.model.JoinInstruction joinInstruction;

  private java.lang.String physicalTableId;

  private software.amazon.awssdk.services.quicksight.model.LogicalTableSource$BuilderImpl();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  private software.amazon.awssdk.services.quicksight.model.LogicalTableSource$BuilderImpl(software.amazon.awssdk.services.quicksight.model.LogicalTableSource);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #6                  // Method software/amazon/awssdk/services/quicksight/model/LogicalTableSource.access$400:(Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource;)Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;
       9: invokevirtual #7                  // Method joinInstruction:(Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;)Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource$Builder;
      12: pop
      13: aload_0
      14: aload_1
      15: invokestatic  #8                  // Method software/amazon/awssdk/services/quicksight/model/LogicalTableSource.access$500:(Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource;)Ljava/lang/String;
      18: invokevirtual #9                  // Method physicalTableId:(Ljava/lang/String;)Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource$Builder;
      21: pop
      22: return

  public final software.amazon.awssdk.services.quicksight.model.JoinInstruction$Builder getJoinInstruction();
    Code:
       0: aload_0
       1: getfield      #4                  // Field joinInstruction:Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;
       4: ifnull        17
       7: aload_0
       8: getfield      #4                  // Field joinInstruction:Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;
      11: invokevirtual #10                 // Method software/amazon/awssdk/services/quicksight/model/JoinInstruction.toBuilder:()Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction$Builder;
      14: goto          18
      17: aconst_null
      18: areturn

  public final software.amazon.awssdk.services.quicksight.model.LogicalTableSource$Builder joinInstruction(software.amazon.awssdk.services.quicksight.model.JoinInstruction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field joinInstruction:Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;
       5: aload_0
       6: areturn

  public final void setJoinInstruction(software.amazon.awssdk.services.quicksight.model.JoinInstruction$BuilderImpl);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        12
       5: aload_1
       6: invokevirtual #11                 // Method software/amazon/awssdk/services/quicksight/model/JoinInstruction$BuilderImpl.build:()Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;
       9: goto          13
      12: aconst_null
      13: putfield      #4                  // Field joinInstruction:Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;
      16: return

  public final java.lang.String getPhysicalTableId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field physicalTableId:Ljava/lang/String;
       4: areturn

  public final software.amazon.awssdk.services.quicksight.model.LogicalTableSource$Builder physicalTableId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field physicalTableId:Ljava/lang/String;
       5: aload_0
       6: areturn

  public final void setPhysicalTableId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field physicalTableId:Ljava/lang/String;
       5: return

  public software.amazon.awssdk.services.quicksight.model.LogicalTableSource build();
    Code:
       0: new           #12                 // class software/amazon/awssdk/services/quicksight/model/LogicalTableSource
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #13                 // Method software/amazon/awssdk/services/quicksight/model/LogicalTableSource."<init>":(Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource$BuilderImpl;Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource$1;)V
       9: areturn

  public java.util.List<software.amazon.awssdk.core.SdkField<?>> sdkFields();
    Code:
       0: invokestatic  #14                 // Method software/amazon/awssdk/services/quicksight/model/LogicalTableSource.access$700:()Ljava/util/List;
       3: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method build:()Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource;
       4: areturn

  static software.amazon.awssdk.services.quicksight.model.JoinInstruction access$000(software.amazon.awssdk.services.quicksight.model.LogicalTableSource$BuilderImpl);
    Code:
       0: aload_0
       1: getfield      #4                  // Field joinInstruction:Lsoftware/amazon/awssdk/services/quicksight/model/JoinInstruction;
       4: areturn

  static java.lang.String access$100(software.amazon.awssdk.services.quicksight.model.LogicalTableSource$BuilderImpl);
    Code:
       0: aload_0
       1: getfield      #3                  // Field physicalTableId:Ljava/lang/String;
       4: areturn

  software.amazon.awssdk.services.quicksight.model.LogicalTableSource$BuilderImpl(software.amazon.awssdk.services.quicksight.model.LogicalTableSource, software.amazon.awssdk.services.quicksight.model.LogicalTableSource$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lsoftware/amazon/awssdk/services/quicksight/model/LogicalTableSource;)V
       5: return

  software.amazon.awssdk.services.quicksight.model.LogicalTableSource$BuilderImpl(software.amazon.awssdk.services.quicksight.model.LogicalTableSource$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
