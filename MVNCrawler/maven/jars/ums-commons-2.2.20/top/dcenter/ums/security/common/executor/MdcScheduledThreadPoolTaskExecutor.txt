Compiled from "MdcScheduledThreadPoolTaskExecutor.java"
public class top.dcenter.ums.security.common.executor.MdcScheduledThreadPoolTaskExecutor extends java.util.concurrent.ScheduledThreadPoolExecutor {
  public top.dcenter.ums.security.common.executor.MdcScheduledThreadPoolTaskExecutor(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(I)V
       5: return

  public top.dcenter.ums.security.common.executor.MdcScheduledThreadPoolTaskExecutor(int, java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #2                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;)V
       6: return

  public top.dcenter.ums.security.common.executor.MdcScheduledThreadPoolTaskExecutor(int, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #3                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/RejectedExecutionHandler;)V
       6: return

  public top.dcenter.ums.security.common.executor.MdcScheduledThreadPoolTaskExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: invokespecial #4                  // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
       7: return

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore        5
       5: aload_0
       6: aload_1
       7: aload         5
       9: invokespecial #6                  // Method decorateRunnable:(Ljava/lang/Runnable;Ljava/util/Map;)Ljava/lang/Runnable;
      12: astore        6
      14: aload_0
      15: aload         6
      17: lload_2
      18: aload         4
      20: invokespecial #7                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      23: areturn

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore        5
       5: aload_0
       6: aload_1
       7: aload         5
       9: invokespecial #8                  // Method decorateCallable:(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/util/concurrent/Callable;
      12: astore        6
      14: aload_0
      15: aload         6
      17: lload_2
      18: aload         4
      20: invokespecial #9                  // Method java/util/concurrent/ScheduledThreadPoolExecutor.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      23: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore        7
       5: aload_0
       6: aload_1
       7: aload         7
       9: invokespecial #6                  // Method decorateRunnable:(Ljava/lang/Runnable;Ljava/util/Map;)Ljava/lang/Runnable;
      12: astore        8
      14: aload_0
      15: aload         8
      17: lload_2
      18: lload         4
      20: aload         6
      22: invokespecial #10                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      25: areturn

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore        7
       5: aload_0
       6: aload_1
       7: aload         7
       9: invokespecial #6                  // Method decorateRunnable:(Ljava/lang/Runnable;Ljava/util/Map;)Ljava/lang/Runnable;
      12: astore        8
      14: aload_0
      15: aload         8
      17: lload_2
      18: lload         4
      20: aload         6
      22: invokespecial #11                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      25: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #6                  // Method decorateRunnable:(Ljava/lang/Runnable;Ljava/util/Map;)Ljava/lang/Runnable;
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokespecial #12                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.execute:(Ljava/lang/Runnable;)V
      16: return

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #6                  // Method decorateRunnable:(Ljava/lang/Runnable;Ljava/util/Map;)Ljava/lang/Runnable;
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokespecial #13                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      16: areturn

  public <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore_3
       4: aload_0
       5: aload_1
       6: aload_3
       7: invokespecial #6                  // Method decorateRunnable:(Ljava/lang/Runnable;Ljava/util/Map;)Ljava/lang/Runnable;
      10: astore        4
      12: aload_0
      13: aload         4
      15: aload_2
      16: invokespecial #14                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      19: areturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore_2
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #8                  // Method decorateCallable:(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/util/concurrent/Callable;
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokespecial #15                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      16: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore_2
       4: aload_0
       5: aload_1
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      11: aload_0
      12: aload_2
      13: invokedynamic #17,  0             // InvokeDynamic #0:apply:(Ltop/dcenter/ums/security/common/executor/MdcScheduledThreadPoolTaskExecutor;Ljava/util/Map;)Ljava/util/function/Function;
      18: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      26: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #21                 // class java/util/Collection
      34: invokespecial #22                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      37: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore        5
       5: aload_0
       6: aload_1
       7: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: aload_0
      13: aload         5
      15: invokedynamic #23,  0             // InvokeDynamic #1:apply:(Ltop/dcenter/ums/security/common/executor/MdcScheduledThreadPoolTaskExecutor;Ljava/util/Map;)Ljava/util/function/Function;
      20: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      28: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      33: checkcast     #21                 // class java/util/Collection
      36: lload_2
      37: aload         4
      39: invokespecial #24                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      42: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore_2
       4: aload_0
       5: aload_1
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      11: aload_0
      12: aload_2
      13: invokedynamic #25,  0             // InvokeDynamic #2:apply:(Ltop/dcenter/ums/security/common/executor/MdcScheduledThreadPoolTaskExecutor;Ljava/util/Map;)Ljava/util/function/Function;
      18: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      23: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      26: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #21                 // class java/util/Collection
      34: invokespecial #26                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      37: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #5                  // Method org/slf4j/MDC.getCopyOfContextMap:()Ljava/util/Map;
       3: astore        5
       5: aload_0
       6: aload_1
       7: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      12: aload_0
      13: aload         5
      15: invokedynamic #27,  0             // InvokeDynamic #3:apply:(Ltop/dcenter/ums/security/common/executor/MdcScheduledThreadPoolTaskExecutor;Ljava/util/Map;)Ljava/util/function/Function;
      20: invokeinterface #18,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      25: invokestatic  #19                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      28: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      33: checkcast     #21                 // class java/util/Collection
      36: lload_2
      37: aload         4
      39: invokespecial #28                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      42: areturn

  private void run(java.lang.Runnable, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_2
       5: invokestatic  #29                 // Method org/slf4j/MDC.setContextMap:(Ljava/util/Map;)V
       8: aload_1
       9: invokeinterface #30,  1           // InterfaceMethod java/lang/Runnable.run:()V
      14: invokestatic  #31                 // Method org/slf4j/MDC.clear:()V
      17: goto          26
      20: astore_3
      21: invokestatic  #31                 // Method org/slf4j/MDC.clear:()V
      24: aload_3
      25: athrow
      26: return
    Exception table:
       from    to  target type
           8    14    20   any

  private <V> V call(java.util.concurrent.Callable<V>, java.util.Map<java.lang.String, java.lang.String>) throws java.lang.Exception;
    Code:
       0: aload_2
       1: ifnull        8
       4: aload_2
       5: invokestatic  #29                 // Method org/slf4j/MDC.setContextMap:(Ljava/util/Map;)V
       8: aload_1
       9: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      14: astore_3
      15: invokestatic  #31                 // Method org/slf4j/MDC.clear:()V
      18: aload_3
      19: areturn
      20: astore        4
      22: invokestatic  #31                 // Method org/slf4j/MDC.clear:()V
      25: aload         4
      27: athrow
    Exception table:
       from    to  target type
           8    15    20   any
          20    22    20   any

  private java.lang.Runnable decorateRunnable(java.lang.Runnable, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #33,  0             // InvokeDynamic #4:run:(Ltop/dcenter/ums/security/common/executor/MdcScheduledThreadPoolTaskExecutor;Ljava/lang/Runnable;Ljava/util/Map;)Ljava/lang/Runnable;
       8: areturn

  private <V> java.util.concurrent.Callable<V> decorateCallable(java.util.concurrent.Callable<V>, java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #34,  0             // InvokeDynamic #5:call:(Ltop/dcenter/ums/security/common/executor/MdcScheduledThreadPoolTaskExecutor;Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/util/concurrent/Callable;
       8: areturn

  private java.lang.Object lambda$decorateCallable$5(java.util.concurrent.Callable, java.util.Map) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #35                 // Method call:(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/lang/Object;
       6: areturn

  private void lambda$decorateRunnable$4(java.lang.Runnable, java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #36                 // Method run:(Ljava/lang/Runnable;Ljava/util/Map;)V
       6: return

  private java.util.concurrent.Callable lambda$invokeAll$3(java.util.Map, java.util.concurrent.Callable);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #8                  // Method decorateCallable:(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/util/concurrent/Callable;
       6: areturn

  private java.util.concurrent.Callable lambda$invokeAll$2(java.util.Map, java.util.concurrent.Callable);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #8                  // Method decorateCallable:(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/util/concurrent/Callable;
       6: areturn

  private java.util.concurrent.Callable lambda$invokeAny$1(java.util.Map, java.util.concurrent.Callable);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #8                  // Method decorateCallable:(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/util/concurrent/Callable;
       6: areturn

  private java.util.concurrent.Callable lambda$invokeAny$0(java.util.Map, java.util.concurrent.Callable);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #8                  // Method decorateCallable:(Ljava/util/concurrent/Callable;Ljava/util/Map;)Ljava/util/concurrent/Callable;
       6: areturn
}
