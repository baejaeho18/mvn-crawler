Compiled from "MathPreconditions.java"
final class com.google.common.math.MathPreconditions {
  static int checkPositive(java.lang.String, int);
    Code:
       0: iload_1
       1: ifgt          51
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: bipush        26
      10: aload_0
      11: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #3                  // Method java/lang/String.length:()I
      17: iadd
      18: new           #4                  // class java/lang/StringBuilder
      21: dup_x1
      22: swap
      23: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      26: aload_0
      27: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #7                  // String  (
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_1
      36: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #9                  // String ) must be > 0
      41: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_1
      52: ireturn

  static long checkPositive(java.lang.String, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          53
       6: new           #1                  // class java/lang/IllegalArgumentException
       9: dup
      10: bipush        35
      12: aload_0
      13: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      16: invokevirtual #3                  // Method java/lang/String.length:()I
      19: iadd
      20: new           #4                  // class java/lang/StringBuilder
      23: dup_x1
      24: swap
      25: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      28: aload_0
      29: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #7                  // String  (
      34: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: lload_1
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      41: ldc           #9                  // String ) must be > 0
      43: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: lload_1
      54: lreturn

  static java.math.BigInteger checkPositive(java.lang.String, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/math/BigInteger.signum:()I
       4: ifgt          67
       7: new           #1                  // class java/lang/IllegalArgumentException
      10: dup
      11: aload_1
      12: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      15: astore_2
      16: bipush        15
      18: aload_0
      19: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      22: invokevirtual #3                  // Method java/lang/String.length:()I
      25: iadd
      26: aload_2
      27: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      30: invokevirtual #3                  // Method java/lang/String.length:()I
      33: iadd
      34: new           #4                  // class java/lang/StringBuilder
      37: dup_x1
      38: swap
      39: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      42: aload_0
      43: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #7                  // String  (
      48: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #9                  // String ) must be > 0
      57: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_1
      68: areturn

  static int checkNonNegative(java.lang.String, int);
    Code:
       0: iload_1
       1: ifge          51
       4: new           #1                  // class java/lang/IllegalArgumentException
       7: dup
       8: bipush        27
      10: aload_0
      11: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #3                  // Method java/lang/String.length:()I
      17: iadd
      18: new           #4                  // class java/lang/StringBuilder
      21: dup_x1
      22: swap
      23: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      26: aload_0
      27: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #7                  // String  (
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_1
      36: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #14                 // String ) must be >= 0
      41: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_1
      52: ireturn

  static long checkNonNegative(java.lang.String, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifge          53
       6: new           #1                  // class java/lang/IllegalArgumentException
       9: dup
      10: bipush        36
      12: aload_0
      13: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      16: invokevirtual #3                  // Method java/lang/String.length:()I
      19: iadd
      20: new           #4                  // class java/lang/StringBuilder
      23: dup_x1
      24: swap
      25: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      28: aload_0
      29: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #7                  // String  (
      34: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: lload_1
      38: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      41: ldc           #14                 // String ) must be >= 0
      43: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: lload_1
      54: lreturn

  static java.math.BigInteger checkNonNegative(java.lang.String, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #13                 // Method java/math/BigInteger.signum:()I
       4: ifge          67
       7: new           #1                  // class java/lang/IllegalArgumentException
      10: dup
      11: aload_1
      12: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      15: astore_2
      16: bipush        16
      18: aload_0
      19: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      22: invokevirtual #3                  // Method java/lang/String.length:()I
      25: iadd
      26: aload_2
      27: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      30: invokevirtual #3                  // Method java/lang/String.length:()I
      33: iadd
      34: new           #4                  // class java/lang/StringBuilder
      37: dup_x1
      38: swap
      39: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      42: aload_0
      43: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #7                  // String  (
      48: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #14                 // String ) must be >= 0
      57: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: aload_1
      68: areturn

  static double checkNonNegative(java.lang.String, double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: ifge          53
       6: new           #1                  // class java/lang/IllegalArgumentException
       9: dup
      10: bipush        40
      12: aload_0
      13: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      16: invokevirtual #3                  // Method java/lang/String.length:()I
      19: iadd
      20: new           #4                  // class java/lang/StringBuilder
      23: dup_x1
      24: swap
      25: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      28: aload_0
      29: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #7                  // String  (
      34: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: dload_1
      38: invokevirtual #15                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      41: ldc           #14                 // String ) must be >= 0
      43: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: dload_1
      54: dreturn

  static void checkRoundingUnnecessary(boolean);
    Code:
       0: iload_0
       1: ifne          14
       4: new           #16                 // class java/lang/ArithmeticException
       7: dup
       8: ldc           #17                 // String mode was UNNECESSARY, but rounding was necessary
      10: invokespecial #18                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: return

  static void checkInRangeForRoundingInputs(boolean, double, java.math.RoundingMode);
    Code:
       0: iload_0
       1: ifne          59
       4: new           #16                 // class java/lang/ArithmeticException
       7: dup
       8: aload_3
       9: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      12: astore        4
      14: bipush        83
      16: aload         4
      18: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      21: invokevirtual #3                  // Method java/lang/String.length:()I
      24: iadd
      25: new           #4                  // class java/lang/StringBuilder
      28: dup_x1
      29: swap
      30: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      33: ldc           #19                 // String rounded value is out of range for input
      35: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: dload_1
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      42: ldc           #20                 // String  and rounding mode
      44: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         4
      49: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #18                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: return

  static void checkNoOverflow(boolean, java.lang.String, int, int);
    Code:
       0: iload_0
       1: ifne          65
       4: new           #16                 // class java/lang/ArithmeticException
       7: dup
       8: bipush        36
      10: aload_1
      11: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #3                  // Method java/lang/String.length:()I
      17: iadd
      18: new           #4                  // class java/lang/StringBuilder
      21: dup_x1
      22: swap
      23: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      26: ldc           #21                 // String overflow:
      28: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #22                 // String (
      37: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: iload_2
      41: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #23                 // String ,
      46: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: iload_3
      50: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: ldc           #24                 // String )
      55: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #18                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: return

  static void checkNoOverflow(boolean, java.lang.String, long, long);
    Code:
       0: iload_0
       1: ifne          66
       4: new           #16                 // class java/lang/ArithmeticException
       7: dup
       8: bipush        54
      10: aload_1
      11: invokestatic  #2                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #3                  // Method java/lang/String.length:()I
      17: iadd
      18: new           #4                  // class java/lang/StringBuilder
      21: dup_x1
      22: swap
      23: invokespecial #5                  // Method java/lang/StringBuilder."<init>":(I)V
      26: ldc           #21                 // String overflow:
      28: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #22                 // String (
      37: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: lload_2
      41: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      44: ldc           #23                 // String ,
      46: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: lload         4
      51: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      54: ldc           #24                 // String )
      56: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #18                 // Method java/lang/ArithmeticException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: return

  private com.google.common.math.MathPreconditions();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method java/lang/Object."<init>":()V
       4: return
}
