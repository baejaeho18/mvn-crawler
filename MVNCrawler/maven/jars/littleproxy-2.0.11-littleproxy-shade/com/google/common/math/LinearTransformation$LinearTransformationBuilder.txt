Compiled from "LinearTransformation.java"
public final class com.google.common.math.LinearTransformation$LinearTransformationBuilder {
  private final double x1;

  private final double y1;

  private com.google.common.math.LinearTransformation$LinearTransformationBuilder(double, double);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: dload_1
       6: putfield      #3                  // Field x1:D
       9: aload_0
      10: dload_3
      11: putfield      #4                  // Field y1:D
      14: return

  public com.google.common.math.LinearTransformation and(double, double);
    Code:
       0: dload_1
       1: invokestatic  #5                  // Method com/google/common/math/DoubleUtils.isFinite:(D)Z
       4: ifeq          18
       7: dload_3
       8: invokestatic  #5                  // Method com/google/common/math/DoubleUtils.isFinite:(D)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      22: dload_1
      23: aload_0
      24: getfield      #3                  // Field x1:D
      27: dcmpl
      28: ifne          60
      31: dload_3
      32: aload_0
      33: getfield      #4                  // Field y1:D
      36: dcmpl
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      48: new           #7                  // class com/google/common/math/LinearTransformation$VerticalLinearTransformation
      51: dup
      52: aload_0
      53: getfield      #3                  // Field x1:D
      56: invokespecial #8                  // Method com/google/common/math/LinearTransformation$VerticalLinearTransformation."<init>":(D)V
      59: areturn
      60: aload_0
      61: dload_3
      62: aload_0
      63: getfield      #4                  // Field y1:D
      66: dsub
      67: dload_1
      68: aload_0
      69: getfield      #3                  // Field x1:D
      72: dsub
      73: ddiv
      74: invokevirtual #9                  // Method withSlope:(D)Lcom/google/common/math/LinearTransformation;
      77: areturn

  public com.google.common.math.LinearTransformation withSlope(double);
    Code:
       0: dload_1
       1: invokestatic  #10                 // Method java/lang/Double.isNaN:(D)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      15: dload_1
      16: invokestatic  #5                  // Method com/google/common/math/DoubleUtils.isFinite:(D)Z
      19: ifeq          44
      22: aload_0
      23: getfield      #4                  // Field y1:D
      26: aload_0
      27: getfield      #3                  // Field x1:D
      30: dload_1
      31: dmul
      32: dsub
      33: dstore_3
      34: new           #11                 // class com/google/common/math/LinearTransformation$RegularLinearTransformation
      37: dup
      38: dload_1
      39: dload_3
      40: invokespecial #12                 // Method com/google/common/math/LinearTransformation$RegularLinearTransformation."<init>":(DD)V
      43: areturn
      44: new           #7                  // class com/google/common/math/LinearTransformation$VerticalLinearTransformation
      47: dup
      48: aload_0
      49: getfield      #3                  // Field x1:D
      52: invokespecial #8                  // Method com/google/common/math/LinearTransformation$VerticalLinearTransformation."<init>":(D)V
      55: areturn

  com.google.common.math.LinearTransformation$LinearTransformationBuilder(double, double, com.google.common.math.LinearTransformation$1);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokespecial #1                  // Method "<init>":(DD)V
       6: return
}
