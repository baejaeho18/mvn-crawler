Compiled from "BaseEncoding.java"
final class com.google.common.io.BaseEncoding$Alphabet {
  private final java.lang.String name;

  private final char[] chars;

  final int mask;

  final int bitsPerChar;

  final int charsPerChunk;

  final int bytesPerChunk;

  private final byte[] decodabet;

  private final boolean[] validPadding;

  com.google.common.io.BaseEncoding$Alphabet(java.lang.String, char[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class java/lang/String
      12: putfield      #5                  // Field name:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #6                  // class "[C"
      23: putfield      #1                  // Field chars:[C
      26: aload_0
      27: aload_2
      28: arraylength
      29: getstatic     #7                  // Field java/math/RoundingMode.UNNECESSARY:Ljava/math/RoundingMode;
      32: invokestatic  #8                  // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
      35: putfield      #9                  // Field bitsPerChar:I
      38: goto          78
      41: astore_3
      42: new           #11                 // class java/lang/IllegalArgumentException
      45: dup
      46: aload_2
      47: arraylength
      48: istore        4
      50: bipush        35
      52: new           #12                 // class java/lang/StringBuilder
      55: dup_x1
      56: swap
      57: invokespecial #13                 // Method java/lang/StringBuilder."<init>":(I)V
      60: ldc           #14                 // String Illegal alphabet length
      62: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: iload         4
      67: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: aload_3
      74: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      77: athrow
      78: bipush        8
      80: aload_0
      81: getfield      #9                  // Field bitsPerChar:I
      84: invokestatic  #19                 // Method java/lang/Integer.lowestOneBit:(I)I
      87: invokestatic  #20                 // Method java/lang/Math.min:(II)I
      90: istore_3
      91: aload_0
      92: bipush        8
      94: iload_3
      95: idiv
      96: putfield      #21                 // Field charsPerChunk:I
      99: aload_0
     100: aload_0
     101: getfield      #9                  // Field bitsPerChar:I
     104: iload_3
     105: idiv
     106: putfield      #22                 // Field bytesPerChunk:I
     109: goto          159
     112: astore        4
     114: new           #11                 // class java/lang/IllegalArgumentException
     117: dup
     118: ldc           #23                 // String Illegal alphabet
     120: new           #4                  // class java/lang/String
     123: dup
     124: aload_2
     125: invokespecial #24                 // Method java/lang/String."<init>":([C)V
     128: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
     131: dup
     132: invokevirtual #26                 // Method java/lang/String.length:()I
     135: ifeq          144
     138: invokevirtual #27                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
     141: goto          153
     144: pop
     145: new           #4                  // class java/lang/String
     148: dup_x1
     149: swap
     150: invokespecial #28                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
     153: aload         4
     155: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     158: athrow
     159: aload_0
     160: aload_2
     161: arraylength
     162: iconst_1
     163: isub
     164: putfield      #29                 // Field mask:I
     167: sipush        128
     170: newarray       byte
     172: astore        4
     174: aload         4
     176: iconst_m1
     177: invokestatic  #31                 // Method java/util/Arrays.fill:([BB)V
     180: iconst_0
     181: istore        5
     183: iload         5
     185: aload_2
     186: arraylength
     187: if_icmpge     251
     190: aload_2
     191: iload         5
     193: caload
     194: istore        6
     196: iload         6
     198: aload         4
     200: arraylength
     201: if_icmpge     208
     204: iconst_1
     205: goto          209
     208: iconst_0
     209: ldc           #32                 // String Non-ASCII character: %s
     211: iload         6
     213: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;C)V
     216: aload         4
     218: iload         6
     220: baload
     221: iconst_m1
     222: if_icmpne     229
     225: iconst_1
     226: goto          230
     229: iconst_0
     230: ldc           #34                 // String Duplicate character: %s
     232: iload         6
     234: invokestatic  #33                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;C)V
     237: aload         4
     239: iload         6
     241: iload         5
     243: i2b
     244: bastore
     245: iinc          5, 1
     248: goto          183
     251: aload_0
     252: aload         4
     254: putfield      #35                 // Field decodabet:[B
     257: aload_0
     258: getfield      #21                 // Field charsPerChunk:I
     261: newarray       boolean
     263: astore        5
     265: iconst_0
     266: istore        6
     268: iload         6
     270: aload_0
     271: getfield      #22                 // Field bytesPerChunk:I
     274: if_icmpge     302
     277: aload         5
     279: iload         6
     281: bipush        8
     283: imul
     284: aload_0
     285: getfield      #9                  // Field bitsPerChar:I
     288: getstatic     #36                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
     291: invokestatic  #37                 // Method com/google/common/math/IntMath.divide:(IILjava/math/RoundingMode;)I
     294: iconst_1
     295: bastore
     296: iinc          6, 1
     299: goto          268
     302: aload_0
     303: aload         5
     305: putfield      #38                 // Field validPadding:[Z
     308: return
    Exception table:
       from    to  target type
          26    38    41   Class java/lang/ArithmeticException
          91   109   112   Class java/lang/ArithmeticException

  char encode(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: iload_1
       5: caload
       6: ireturn

  boolean isValidPaddingStartPosition(int);
    Code:
       0: aload_0
       1: getfield      #38                 // Field validPadding:[Z
       4: iload_1
       5: aload_0
       6: getfield      #21                 // Field charsPerChunk:I
       9: irem
      10: baload
      11: ireturn

  boolean canDecode(char);
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmpgt     20
       6: aload_0
       7: getfield      #35                 // Field decodabet:[B
      10: iload_1
      11: baload
      12: iconst_m1
      13: if_icmpeq     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  int decode(char) throws com.google.common.io.BaseEncoding$DecodingException;
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmple     45
       6: new           #39                 // class com/google/common/io/BaseEncoding$DecodingException
       9: dup
      10: ldc           #40                 // String Unrecognized character: 0x
      12: iload_1
      13: invokestatic  #41                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      16: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      19: dup
      20: invokevirtual #26                 // Method java/lang/String.length:()I
      23: ifeq          32
      26: invokevirtual #27                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      29: goto          41
      32: pop
      33: new           #4                  // class java/lang/String
      36: dup_x1
      37: swap
      38: invokespecial #28                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
      41: invokespecial #42                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #35                 // Field decodabet:[B
      49: iload_1
      50: baload
      51: istore_2
      52: iload_2
      53: iconst_m1
      54: if_icmpne     138
      57: iload_1
      58: bipush        32
      60: if_icmple     69
      63: iload_1
      64: bipush        127
      66: if_icmpne     108
      69: new           #39                 // class com/google/common/io/BaseEncoding$DecodingException
      72: dup
      73: ldc           #40                 // String Unrecognized character: 0x
      75: iload_1
      76: invokestatic  #41                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      79: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      82: dup
      83: invokevirtual #26                 // Method java/lang/String.length:()I
      86: ifeq          95
      89: invokevirtual #27                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      92: goto          104
      95: pop
      96: new           #4                  // class java/lang/String
      99: dup_x1
     100: swap
     101: invokespecial #28                 // Method java/lang/String."<init>":(Ljava/lang/String;)V
     104: invokespecial #42                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
     107: athrow
     108: new           #39                 // class com/google/common/io/BaseEncoding$DecodingException
     111: dup
     112: bipush        25
     114: new           #12                 // class java/lang/StringBuilder
     117: dup_x1
     118: swap
     119: invokespecial #13                 // Method java/lang/StringBuilder."<init>":(I)V
     122: ldc           #43                 // String Unrecognized character:
     124: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: iload_1
     128: invokevirtual #44                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     131: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokespecial #42                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
     137: athrow
     138: iload_2
     139: ireturn

  private boolean hasLowerCase();
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #45                 // Method com/google/common/base/Ascii.isLowerCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  private boolean hasUpperCase();
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #46                 // Method com/google/common/base/Ascii.isUpperCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  com.google.common.io.BaseEncoding$Alphabet upperCase();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method hasLowerCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #48                 // Method hasUpperCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #49                 // String Cannot call upperCase() on a mixed-case alphabet
      23: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #1                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #1                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #1                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #51                 // Method com/google/common/base/Ascii.toUpperCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #52                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: aload_0
      68: getfield      #5                  // Field name:Ljava/lang/String;
      71: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      74: ldc           #53                 // String .upperCase()
      76: invokevirtual #27                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      79: aload_1
      80: invokespecial #54                 // Method "<init>":(Ljava/lang/String;[C)V
      83: areturn

  com.google.common.io.BaseEncoding$Alphabet lowerCase();
    Code:
       0: aload_0
       1: invokespecial #48                 // Method hasUpperCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #47                 // Method hasLowerCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #55                 // String Cannot call lowerCase() on a mixed-case alphabet
      23: invokestatic  #50                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #1                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #1                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #1                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #56                 // Method com/google/common/base/Ascii.toLowerCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #52                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: aload_0
      68: getfield      #5                  // Field name:Ljava/lang/String;
      71: invokestatic  #25                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      74: ldc           #57                 // String .lowerCase()
      76: invokevirtual #27                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      79: aload_1
      80: invokespecial #54                 // Method "<init>":(Ljava/lang/String;[C)V
      83: areturn

  public boolean matches(char);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #35                 // Field decodabet:[B
       5: arraylength
       6: if_icmpge     23
       9: aload_0
      10: getfield      #35                 // Field decodabet:[B
      13: iload_1
      14: baload
      15: iconst_m1
      16: if_icmpeq     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #52                 // class com/google/common/io/BaseEncoding$Alphabet
       4: ifeq          24
       7: aload_1
       8: checkcast     #52                 // class com/google/common/io/BaseEncoding$Alphabet
      11: astore_2
      12: aload_0
      13: getfield      #1                  // Field chars:[C
      16: aload_2
      17: getfield      #1                  // Field chars:[C
      20: invokestatic  #58                 // Method java/util/Arrays.equals:([C[C)Z
      23: ireturn
      24: iconst_0
      25: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: invokestatic  #59                 // Method java/util/Arrays.hashCode:([C)I
       7: ireturn

  static char[] access$000(com.google.common.io.BaseEncoding$Alphabet);
    Code:
       0: aload_0
       1: getfield      #1                  // Field chars:[C
       4: areturn
}
