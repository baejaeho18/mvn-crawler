Compiled from "MultiReader.java"
class com.google.common.io.MultiReader extends java.io.Reader {
  private final java.util.Iterator<? extends com.google.common.io.CharSource> it;

  private java.io.Reader current;

  com.google.common.io.MultiReader(java.util.Iterator<? extends com.google.common.io.CharSource>) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/Reader."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field it:Ljava/util/Iterator;
       9: aload_0
      10: invokespecial #3                  // Method advance:()V
      13: return

  private void advance() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method close:()V
       4: aload_0
       5: getfield      #2                  // Field it:Ljava/util/Iterator;
       8: invokeinterface #5,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          35
      16: aload_0
      17: aload_0
      18: getfield      #2                  // Field it:Ljava/util/Iterator;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #7                  // class com/google/common/io/CharSource
      29: invokevirtual #8                  // Method com/google/common/io/CharSource.openStream:()Ljava/io/Reader;
      32: putfield      #9                  // Field current:Ljava/io/Reader;
      35: return

  public int read(char[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #9                  // Field current:Ljava/io/Reader;
       9: ifnonnull     14
      12: iconst_m1
      13: ireturn
      14: aload_0
      15: getfield      #9                  // Field current:Ljava/io/Reader;
      18: aload_1
      19: iload_2
      20: iload_3
      21: invokevirtual #11                 // Method java/io/Reader.read:([CII)I
      24: istore        4
      26: iload         4
      28: iconst_m1
      29: if_icmpne     44
      32: aload_0
      33: invokespecial #3                  // Method advance:()V
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokevirtual #12                 // Method read:([CII)I
      43: ireturn
      44: iload         4
      46: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #13                 // String n is negative
      13: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      16: lload_1
      17: lconst_0
      18: lcmp
      19: ifle          53
      22: aload_0
      23: getfield      #9                  // Field current:Ljava/io/Reader;
      26: ifnull        53
      29: aload_0
      30: getfield      #9                  // Field current:Ljava/io/Reader;
      33: lload_1
      34: invokevirtual #15                 // Method java/io/Reader.skip:(J)J
      37: lstore_3
      38: lload_3
      39: lconst_0
      40: lcmp
      41: ifle          46
      44: lload_3
      45: lreturn
      46: aload_0
      47: invokespecial #3                  // Method advance:()V
      50: goto          22
      53: lconst_0
      54: lreturn

  public boolean ready() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field current:Ljava/io/Reader;
       4: ifnull        21
       7: aload_0
       8: getfield      #9                  // Field current:Ljava/io/Reader;
      11: invokevirtual #16                 // Method java/io/Reader.ready:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field current:Ljava/io/Reader;
       4: ifnull        30
       7: aload_0
       8: getfield      #9                  // Field current:Ljava/io/Reader;
      11: invokevirtual #17                 // Method java/io/Reader.close:()V
      14: aload_0
      15: aconst_null
      16: putfield      #9                  // Field current:Ljava/io/Reader;
      19: goto          30
      22: astore_1
      23: aload_0
      24: aconst_null
      25: putfield      #9                  // Field current:Ljava/io/Reader;
      28: aload_1
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    14    22   any
}
