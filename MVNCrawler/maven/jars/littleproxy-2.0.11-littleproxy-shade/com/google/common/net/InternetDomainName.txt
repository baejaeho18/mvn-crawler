Compiled from "InternetDomainName.java"
public final class com.google.common.net.InternetDomainName {
  private static final com.google.common.base.CharMatcher DOTS_MATCHER;

  private static final com.google.common.base.Splitter DOT_SPLITTER;

  private static final com.google.common.base.Joiner DOT_JOINER;

  private static final int NO_SUFFIX_FOUND;

  private static final int MAX_PARTS;

  private static final int MAX_LENGTH;

  private static final int MAX_DOMAIN_PART_LENGTH;

  private final java.lang.String name;

  private final com.google.common.collect.ImmutableList<java.lang.String> parts;

  private final int publicSuffixIndex;

  private final int registrySuffixIndex;

  private static final com.google.common.base.CharMatcher DASH_MATCHER;

  private static final com.google.common.base.CharMatcher DIGIT_MATCHER;

  private static final com.google.common.base.CharMatcher LETTER_MATCHER;

  private static final com.google.common.base.CharMatcher PART_CHAR_MATCHER;

  com.google.common.net.InternetDomainName(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: getstatic     #2                  // Field DOTS_MATCHER:Lcom/google/common/base/CharMatcher;
       7: aload_1
       8: bipush        46
      10: invokevirtual #3                  // Method com/google/common/base/CharMatcher.replaceFrom:(Ljava/lang/CharSequence;C)Ljava/lang/String;
      13: invokestatic  #4                  // Method com/google/common/base/Ascii.toLowerCase:(Ljava/lang/String;)Ljava/lang/String;
      16: astore_1
      17: aload_1
      18: ldc           #5                  // String .
      20: invokevirtual #6                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      23: ifeq          38
      26: aload_1
      27: iconst_0
      28: aload_1
      29: invokevirtual #7                  // Method java/lang/String.length:()I
      32: iconst_1
      33: isub
      34: invokevirtual #8                  // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: astore_1
      38: aload_1
      39: invokevirtual #7                  // Method java/lang/String.length:()I
      42: sipush        253
      45: if_icmpgt     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ldc           #10                 // String Domain name too long: \'%s\':
      55: aload_1
      56: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
      59: aload_0
      60: aload_1
      61: putfield      #12                 // Field name:Ljava/lang/String;
      64: aload_0
      65: getstatic     #13                 // Field DOT_SPLITTER:Lcom/google/common/base/Splitter;
      68: aload_1
      69: invokevirtual #14                 // Method com/google/common/base/Splitter.split:(Ljava/lang/CharSequence;)Ljava/lang/Iterable;
      72: invokestatic  #15                 // Method com/google/common/collect/ImmutableList.copyOf:(Ljava/lang/Iterable;)Lcom/google/common/collect/ImmutableList;
      75: putfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
      78: aload_0
      79: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
      82: invokevirtual #17                 // Method com/google/common/collect/ImmutableList.size:()I
      85: bipush        127
      87: if_icmpgt     94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: ldc           #18                 // String Domain has too many parts: \'%s\'
      97: aload_1
      98: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     101: aload_0
     102: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
     105: invokestatic  #19                 // Method validateSyntax:(Ljava/util/List;)Z
     108: ldc           #20                 // String Not a valid domain name: \'%s\'
     110: aload_1
     111: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;Ljava/lang/Object;)V
     114: aload_0
     115: aload_0
     116: invokestatic  #21                 // Method com/google/common/base/Optional.absent:()Lcom/google/common/base/Optional;
     119: invokespecial #22                 // Method findSuffixOfType:(Lcom/google/common/base/Optional;)I
     122: putfield      #23                 // Field publicSuffixIndex:I
     125: aload_0
     126: aload_0
     127: getstatic     #24                 // Field com/google/thirdparty/publicsuffix/PublicSuffixType.REGISTRY:Lcom/google/thirdparty/publicsuffix/PublicSuffixType;
     130: invokestatic  #25                 // Method com/google/common/base/Optional.of:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
     133: invokespecial #22                 // Method findSuffixOfType:(Lcom/google/common/base/Optional;)I
     136: putfield      #26                 // Field registrySuffixIndex:I
     139: return

  private int findSuffixOfType(com.google.common.base.Optional<com.google.thirdparty.publicsuffix.PublicSuffixType>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #17                 // Method com/google/common/collect/ImmutableList.size:()I
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     87
      15: getstatic     #27                 // Field DOT_JOINER:Lcom/google/common/base/Joiner;
      18: aload_0
      19: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
      22: iload_3
      23: iload_2
      24: invokevirtual #28                 // Method com/google/common/collect/ImmutableList.subList:(II)Lcom/google/common/collect/ImmutableList;
      27: invokevirtual #29                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
      30: astore        4
      32: aload_1
      33: getstatic     #30                 // Field com/google/thirdparty/publicsuffix/PublicSuffixPatterns.EXACT:Lcom/google/common/collect/ImmutableMap;
      36: aload         4
      38: invokevirtual #31                 // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      41: checkcast     #32                 // class com/google/thirdparty/publicsuffix/PublicSuffixType
      44: invokestatic  #33                 // Method com/google/common/base/Optional.fromNullable:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      47: invokestatic  #34                 // Method matchesType:(Lcom/google/common/base/Optional;Lcom/google/common/base/Optional;)Z
      50: ifeq          55
      53: iload_3
      54: ireturn
      55: getstatic     #35                 // Field com/google/thirdparty/publicsuffix/PublicSuffixPatterns.EXCLUDED:Lcom/google/common/collect/ImmutableMap;
      58: aload         4
      60: invokevirtual #36                 // Method com/google/common/collect/ImmutableMap.containsKey:(Ljava/lang/Object;)Z
      63: ifeq          70
      66: iload_3
      67: iconst_1
      68: iadd
      69: ireturn
      70: aload_1
      71: aload         4
      73: invokestatic  #37                 // Method matchesWildcardSuffixType:(Lcom/google/common/base/Optional;Ljava/lang/String;)Z
      76: ifeq          81
      79: iload_3
      80: ireturn
      81: iinc          3, 1
      84: goto          10
      87: iconst_m1
      88: ireturn

  public static com.google.common.net.InternetDomainName from(java.lang.String);
    Code:
       0: new           #9                  // class com/google/common/net/InternetDomainName
       3: dup
       4: aload_0
       5: invokestatic  #38                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #39                 // class java/lang/String
      11: invokespecial #40                 // Method "<init>":(Ljava/lang/String;)V
      14: areturn

  private static boolean validateSyntax(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokeinterface #41,  1           // InterfaceMethod java/util/List.size:()I
       6: iconst_1
       7: isub
       8: istore_1
       9: aload_0
      10: iload_1
      11: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      16: checkcast     #39                 // class java/lang/String
      19: iconst_1
      20: invokestatic  #43                 // Method validatePart:(Ljava/lang/String;Z)Z
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: iconst_0
      29: istore_2
      30: iload_2
      31: iload_1
      32: if_icmpge     62
      35: aload_0
      36: iload_2
      37: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: checkcast     #39                 // class java/lang/String
      45: astore_3
      46: aload_3
      47: iconst_0
      48: invokestatic  #43                 // Method validatePart:(Ljava/lang/String;Z)Z
      51: ifne          56
      54: iconst_0
      55: ireturn
      56: iinc          2, 1
      59: goto          30
      62: iconst_1
      63: ireturn

  private static boolean validatePart(java.lang.String, boolean);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/lang/String.length:()I
       4: iconst_1
       5: if_icmplt     17
       8: aload_0
       9: invokevirtual #7                  // Method java/lang/String.length:()I
      12: bipush        63
      14: if_icmple     19
      17: iconst_0
      18: ireturn
      19: invokestatic  #44                 // Method com/google/common/base/CharMatcher.ascii:()Lcom/google/common/base/CharMatcher;
      22: aload_0
      23: invokevirtual #45                 // Method com/google/common/base/CharMatcher.retainFrom:(Ljava/lang/CharSequence;)Ljava/lang/String;
      26: astore_2
      27: getstatic     #46                 // Field PART_CHAR_MATCHER:Lcom/google/common/base/CharMatcher;
      30: aload_2
      31: invokevirtual #47                 // Method com/google/common/base/CharMatcher.matchesAllOf:(Ljava/lang/CharSequence;)Z
      34: ifne          39
      37: iconst_0
      38: ireturn
      39: getstatic     #48                 // Field DASH_MATCHER:Lcom/google/common/base/CharMatcher;
      42: aload_0
      43: iconst_0
      44: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      47: invokevirtual #50                 // Method com/google/common/base/CharMatcher.matches:(C)Z
      50: ifne          72
      53: getstatic     #48                 // Field DASH_MATCHER:Lcom/google/common/base/CharMatcher;
      56: aload_0
      57: aload_0
      58: invokevirtual #7                  // Method java/lang/String.length:()I
      61: iconst_1
      62: isub
      63: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      66: invokevirtual #50                 // Method com/google/common/base/CharMatcher.matches:(C)Z
      69: ifeq          74
      72: iconst_0
      73: ireturn
      74: iload_1
      75: ifeq          94
      78: getstatic     #51                 // Field DIGIT_MATCHER:Lcom/google/common/base/CharMatcher;
      81: aload_0
      82: iconst_0
      83: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      86: invokevirtual #50                 // Method com/google/common/base/CharMatcher.matches:(C)Z
      89: ifeq          94
      92: iconst_0
      93: ireturn
      94: iconst_1
      95: ireturn

  public com.google.common.collect.ImmutableList<java.lang.String> parts();
    Code:
       0: aload_0
       1: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
       4: areturn

  public boolean isPublicSuffix();
    Code:
       0: aload_0
       1: getfield      #23                 // Field publicSuffixIndex:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasPublicSuffix();
    Code:
       0: aload_0
       1: getfield      #23                 // Field publicSuffixIndex:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public com.google.common.net.InternetDomainName publicSuffix();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method hasPublicSuffix:()Z
       4: ifeq          18
       7: aload_0
       8: aload_0
       9: getfield      #23                 // Field publicSuffixIndex:I
      12: invokespecial #53                 // Method ancestor:(I)Lcom/google/common/net/InternetDomainName;
      15: goto          19
      18: aconst_null
      19: areturn

  public boolean isUnderPublicSuffix();
    Code:
       0: aload_0
       1: getfield      #23                 // Field publicSuffixIndex:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isTopPrivateDomain();
    Code:
       0: aload_0
       1: getfield      #23                 // Field publicSuffixIndex:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public com.google.common.net.InternetDomainName topPrivateDomain();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method isTopPrivateDomain:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #55                 // Method isUnderPublicSuffix:()Z
      13: ldc           #56                 // String Not under a public suffix: %s
      15: aload_0
      16: getfield      #12                 // Field name:Ljava/lang/String;
      19: invokestatic  #57                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      22: aload_0
      23: aload_0
      24: getfield      #23                 // Field publicSuffixIndex:I
      27: iconst_1
      28: isub
      29: invokespecial #53                 // Method ancestor:(I)Lcom/google/common/net/InternetDomainName;
      32: areturn

  public boolean isRegistrySuffix();
    Code:
       0: aload_0
       1: getfield      #26                 // Field registrySuffixIndex:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasRegistrySuffix();
    Code:
       0: aload_0
       1: getfield      #26                 // Field registrySuffixIndex:I
       4: iconst_m1
       5: if_icmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public com.google.common.net.InternetDomainName registrySuffix();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method hasRegistrySuffix:()Z
       4: ifeq          18
       7: aload_0
       8: aload_0
       9: getfield      #26                 // Field registrySuffixIndex:I
      12: invokespecial #53                 // Method ancestor:(I)Lcom/google/common/net/InternetDomainName;
      15: goto          19
      18: aconst_null
      19: areturn

  public boolean isUnderRegistrySuffix();
    Code:
       0: aload_0
       1: getfield      #26                 // Field registrySuffixIndex:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isTopDomainUnderRegistrySuffix();
    Code:
       0: aload_0
       1: getfield      #26                 // Field registrySuffixIndex:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public com.google.common.net.InternetDomainName topDomainUnderRegistrySuffix();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method isTopDomainUnderRegistrySuffix:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokevirtual #60                 // Method isUnderRegistrySuffix:()Z
      13: ldc           #61                 // String Not under a registry suffix: %s
      15: aload_0
      16: getfield      #12                 // Field name:Ljava/lang/String;
      19: invokestatic  #57                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      22: aload_0
      23: aload_0
      24: getfield      #26                 // Field registrySuffixIndex:I
      27: iconst_1
      28: isub
      29: invokespecial #53                 // Method ancestor:(I)Lcom/google/common/net/InternetDomainName;
      32: areturn

  public boolean hasParent();
    Code:
       0: aload_0
       1: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
       4: invokevirtual #17                 // Method com/google/common/collect/ImmutableList.size:()I
       7: iconst_1
       8: if_icmple     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public com.google.common.net.InternetDomainName parent();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method hasParent:()Z
       4: ldc           #63                 // String Domain \'%s\' has no parent
       6: aload_0
       7: getfield      #12                 // Field name:Ljava/lang/String;
      10: invokestatic  #57                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;Ljava/lang/Object;)V
      13: aload_0
      14: iconst_1
      15: invokespecial #53                 // Method ancestor:(I)Lcom/google/common/net/InternetDomainName;
      18: areturn

  private com.google.common.net.InternetDomainName ancestor(int);
    Code:
       0: getstatic     #27                 // Field DOT_JOINER:Lcom/google/common/base/Joiner;
       3: aload_0
       4: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
       7: iload_1
       8: aload_0
       9: getfield      #16                 // Field parts:Lcom/google/common/collect/ImmutableList;
      12: invokevirtual #17                 // Method com/google/common/collect/ImmutableList.size:()I
      15: invokevirtual #28                 // Method com/google/common/collect/ImmutableList.subList:(II)Lcom/google/common/collect/ImmutableList;
      18: invokevirtual #29                 // Method com/google/common/base/Joiner.join:(Ljava/lang/Iterable;)Ljava/lang/String;
      21: invokestatic  #64                 // Method from:(Ljava/lang/String;)Lcom/google/common/net/InternetDomainName;
      24: areturn

  public com.google.common.net.InternetDomainName child(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #38                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #39                 // class java/lang/String
       7: astore_2
       8: aload_0
       9: getfield      #12                 // Field name:Ljava/lang/String;
      12: astore_3
      13: iconst_1
      14: aload_2
      15: invokestatic  #65                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      18: invokevirtual #7                  // Method java/lang/String.length:()I
      21: iadd
      22: aload_3
      23: invokestatic  #65                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      26: invokevirtual #7                  // Method java/lang/String.length:()I
      29: iadd
      30: new           #66                 // class java/lang/StringBuilder
      33: dup_x1
      34: swap
      35: invokespecial #67                 // Method java/lang/StringBuilder."<init>":(I)V
      38: aload_2
      39: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #5                  // String .
      44: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_3
      48: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokestatic  #64                 // Method from:(Ljava/lang/String;)Lcom/google/common/net/InternetDomainName;
      57: areturn

  public static boolean isValid(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method from:(Ljava/lang/String;)Lcom/google/common/net/InternetDomainName;
       4: astore_1
       5: iconst_1
       6: ireturn
       7: astore_1
       8: iconst_0
       9: ireturn
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/IllegalArgumentException

  private static boolean matchesWildcardSuffixType(com.google.common.base.Optional<com.google.thirdparty.publicsuffix.PublicSuffixType>, java.lang.String);
    Code:
       0: getstatic     #13                 // Field DOT_SPLITTER:Lcom/google/common/base/Splitter;
       3: iconst_2
       4: invokevirtual #71                 // Method com/google/common/base/Splitter.limit:(I)Lcom/google/common/base/Splitter;
       7: aload_1
       8: invokevirtual #72                 // Method com/google/common/base/Splitter.splitToList:(Ljava/lang/CharSequence;)Ljava/util/List;
      11: astore_2
      12: aload_2
      13: invokeinterface #41,  1           // InterfaceMethod java/util/List.size:()I
      18: iconst_2
      19: if_icmpne     52
      22: aload_0
      23: getstatic     #73                 // Field com/google/thirdparty/publicsuffix/PublicSuffixPatterns.UNDER:Lcom/google/common/collect/ImmutableMap;
      26: aload_2
      27: iconst_1
      28: invokeinterface #42,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      33: invokevirtual #31                 // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #32                 // class com/google/thirdparty/publicsuffix/PublicSuffixType
      39: invokestatic  #33                 // Method com/google/common/base/Optional.fromNullable:(Ljava/lang/Object;)Lcom/google/common/base/Optional;
      42: invokestatic  #34                 // Method matchesType:(Lcom/google/common/base/Optional;Lcom/google/common/base/Optional;)Z
      45: ifeq          52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  private static boolean matchesType(com.google.common.base.Optional<com.google.thirdparty.publicsuffix.PublicSuffixType>, com.google.common.base.Optional<com.google.thirdparty.publicsuffix.PublicSuffixType>);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method com/google/common/base/Optional.isPresent:()Z
       4: ifeq          15
       7: aload_0
       8: aload_1
       9: invokevirtual #75                 // Method com/google/common/base/Optional.equals:(Ljava/lang/Object;)Z
      12: goto          19
      15: aload_1
      16: invokevirtual #74                 // Method com/google/common/base/Optional.isPresent:()Z
      19: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #9                  // class com/google/common/net/InternetDomainName
      11: ifeq          31
      14: aload_1
      15: checkcast     #9                  // class com/google/common/net/InternetDomainName
      18: astore_2
      19: aload_0
      20: getfield      #12                 // Field name:Ljava/lang/String;
      23: aload_2
      24: getfield      #12                 // Field name:Ljava/lang/String;
      27: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      30: ireturn
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:Ljava/lang/String;
       4: invokevirtual #77                 // Method java/lang/String.hashCode:()I
       7: ireturn

  static {};
    Code:
       0: ldc           #78                 // String .。．｡
       2: invokestatic  #79                 // Method com/google/common/base/CharMatcher.anyOf:(Ljava/lang/CharSequence;)Lcom/google/common/base/CharMatcher;
       5: putstatic     #2                  // Field DOTS_MATCHER:Lcom/google/common/base/CharMatcher;
       8: bipush        46
      10: invokestatic  #80                 // Method com/google/common/base/Splitter.on:(C)Lcom/google/common/base/Splitter;
      13: putstatic     #13                 // Field DOT_SPLITTER:Lcom/google/common/base/Splitter;
      16: bipush        46
      18: invokestatic  #81                 // Method com/google/common/base/Joiner.on:(C)Lcom/google/common/base/Joiner;
      21: putstatic     #27                 // Field DOT_JOINER:Lcom/google/common/base/Joiner;
      24: ldc           #82                 // String -_
      26: invokestatic  #79                 // Method com/google/common/base/CharMatcher.anyOf:(Ljava/lang/CharSequence;)Lcom/google/common/base/CharMatcher;
      29: putstatic     #48                 // Field DASH_MATCHER:Lcom/google/common/base/CharMatcher;
      32: bipush        48
      34: bipush        57
      36: invokestatic  #83                 // Method com/google/common/base/CharMatcher.inRange:(CC)Lcom/google/common/base/CharMatcher;
      39: putstatic     #51                 // Field DIGIT_MATCHER:Lcom/google/common/base/CharMatcher;
      42: bipush        97
      44: bipush        122
      46: invokestatic  #83                 // Method com/google/common/base/CharMatcher.inRange:(CC)Lcom/google/common/base/CharMatcher;
      49: bipush        65
      51: bipush        90
      53: invokestatic  #83                 // Method com/google/common/base/CharMatcher.inRange:(CC)Lcom/google/common/base/CharMatcher;
      56: invokevirtual #84                 // Method com/google/common/base/CharMatcher.or:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;
      59: putstatic     #85                 // Field LETTER_MATCHER:Lcom/google/common/base/CharMatcher;
      62: getstatic     #51                 // Field DIGIT_MATCHER:Lcom/google/common/base/CharMatcher;
      65: getstatic     #85                 // Field LETTER_MATCHER:Lcom/google/common/base/CharMatcher;
      68: invokevirtual #84                 // Method com/google/common/base/CharMatcher.or:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;
      71: getstatic     #48                 // Field DASH_MATCHER:Lcom/google/common/base/CharMatcher;
      74: invokevirtual #84                 // Method com/google/common/base/CharMatcher.or:(Lcom/google/common/base/CharMatcher;)Lcom/google/common/base/CharMatcher;
      77: putstatic     #46                 // Field PART_CHAR_MATCHER:Lcom/google/common/base/CharMatcher;
      80: return
}
