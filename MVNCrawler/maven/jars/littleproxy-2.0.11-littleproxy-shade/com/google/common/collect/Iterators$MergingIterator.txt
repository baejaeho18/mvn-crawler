Compiled from "Iterators.java"
class com.google.common.collect.Iterators$MergingIterator<T> extends com.google.common.collect.UnmodifiableIterator<T> {
  final java.util.Queue<com.google.common.collect.PeekingIterator<T>> queue;

  public com.google.common.collect.Iterators$MergingIterator(java.lang.Iterable<? extends java.util.Iterator<? extends T>>, java.util.Comparator<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/UnmodifiableIterator."<init>":()V
       4: aload_2
       5: invokedynamic #2,  0              // InvokeDynamic #0:compare:(Ljava/util/Comparator;)Ljava/util/Comparator;
      10: astore_3
      11: aload_0
      12: new           #3                  // class java/util/PriorityQueue
      15: dup
      16: iconst_2
      17: aload_3
      18: invokespecial #4                  // Method java/util/PriorityQueue."<init>":(ILjava/util/Comparator;)V
      21: putfield      #5                  // Field queue:Ljava/util/Queue;
      24: aload_1
      25: invokeinterface #6,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      30: astore        4
      32: aload         4
      34: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          82
      42: aload         4
      44: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #9                  // class java/util/Iterator
      52: astore        5
      54: aload         5
      56: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      61: ifeq          79
      64: aload_0
      65: getfield      #5                  // Field queue:Ljava/util/Queue;
      68: aload         5
      70: invokestatic  #10                 // Method com/google/common/collect/Iterators.peekingIterator:(Ljava/util/Iterator;)Lcom/google/common/collect/PeekingIterator;
      73: invokeinterface #11,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      78: pop
      79: goto          32
      82: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public T next();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
       9: checkcast     #14                 // class com/google/common/collect/PeekingIterator
      12: astore_1
      13: aload_1
      14: invokeinterface #15,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.next:()Ljava/lang/Object;
      19: astore_2
      20: aload_1
      21: invokeinterface #16,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.hasNext:()Z
      26: ifeq          40
      29: aload_0
      30: getfield      #5                  // Field queue:Ljava/util/Queue;
      33: aload_1
      34: invokeinterface #11,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      39: pop
      40: aload_2
      41: areturn

  private static int lambda$new$0(java.util.Comparator, com.google.common.collect.PeekingIterator, com.google.common.collect.PeekingIterator);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #17,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.peek:()Ljava/lang/Object;
       7: aload_2
       8: invokeinterface #17,  1           // InterfaceMethod com/google/common/collect/PeekingIterator.peek:()Ljava/lang/Object;
      13: invokeinterface #18,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      18: ireturn
}
