Compiled from "RangeSet.java"
public interface com.google.common.collect.RangeSet<C extends java.lang.Comparable> {
  public abstract boolean contains(C);

  public abstract com.google.common.collect.Range<C> rangeContaining(C);

  public abstract boolean intersects(com.google.common.collect.Range<C>);

  public abstract boolean encloses(com.google.common.collect.Range<C>);

  public abstract boolean enclosesAll(com.google.common.collect.RangeSet<C>);

  public default boolean enclosesAll(java.lang.Iterable<com.google.common.collect.Range<C>>);
    Code:
       0: aload_1
       1: invokeinterface #1,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #2,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_2
      17: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #4                  // class com/google/common/collect/Range
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokeinterface #5,  2            // InterfaceMethod encloses:(Lcom/google/common/collect/Range;)Z
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: goto          7
      41: iconst_1
      42: ireturn

  public abstract boolean isEmpty();

  public abstract com.google.common.collect.Range<C> span();

  public abstract java.util.Set<com.google.common.collect.Range<C>> asRanges();

  public abstract java.util.Set<com.google.common.collect.Range<C>> asDescendingSetOfRanges();

  public abstract com.google.common.collect.RangeSet<C> complement();

  public abstract com.google.common.collect.RangeSet<C> subRangeSet(com.google.common.collect.Range<C>);

  public abstract void add(com.google.common.collect.Range<C>);

  public abstract void remove(com.google.common.collect.Range<C>);

  public abstract void clear();

  public abstract void addAll(com.google.common.collect.RangeSet<C>);

  public default void addAll(java.lang.Iterable<com.google.common.collect.Range<C>>);
    Code:
       0: aload_1
       1: invokeinterface #1,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #2,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: aload_2
      17: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #4                  // class com/google/common/collect/Range
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokeinterface #6,  2            // InterfaceMethod add:(Lcom/google/common/collect/Range;)V
      33: goto          7
      36: return

  public abstract void removeAll(com.google.common.collect.RangeSet<C>);

  public default void removeAll(java.lang.Iterable<com.google.common.collect.Range<C>>);
    Code:
       0: aload_1
       1: invokeinterface #1,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #2,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: aload_2
      17: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #4                  // class com/google/common/collect/Range
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokeinterface #7,  2            // InterfaceMethod remove:(Lcom/google/common/collect/Range;)V
      33: goto          7
      36: return

  public abstract boolean equals(java.lang.Object);

  public abstract int hashCode();

  public abstract java.lang.String toString();
}
