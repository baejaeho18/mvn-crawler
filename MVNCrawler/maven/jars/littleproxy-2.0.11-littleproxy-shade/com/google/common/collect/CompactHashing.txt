Compiled from "CompactHashing.java"
final class com.google.common.collect.CompactHashing {
  static final byte UNSET;

  private static final int HASH_TABLE_BITS_MAX_BITS;

  static final int MODIFICATION_COUNT_INCREMENT;

  static final int HASH_TABLE_BITS_MASK;

  static final int MAX_SIZE;

  static final int DEFAULT_SIZE;

  private static final int MIN_HASH_TABLE_SIZE;

  private static final int BYTE_MAX_SIZE;

  private static final int BYTE_MASK;

  private static final int SHORT_MAX_SIZE;

  private static final int SHORT_MASK;

  private com.google.common.collect.CompactHashing();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: return

  static int tableSize(int);
    Code:
       0: iconst_4
       1: iload_0
       2: iconst_1
       3: iadd
       4: dconst_1
       5: invokestatic  #6                  // Method com/google/common/collect/Hashing.closedTableSize:(ID)I
       8: invokestatic  #7                  // Method java/lang/Math.max:(II)I
      11: ireturn

  static java.lang.Object createTable(int);
    Code:
       0: iload_0
       1: iconst_2
       2: if_icmplt     19
       5: iload_0
       6: ldc           #8                  // int 1073741824
       8: if_icmpgt     19
      11: iload_0
      12: invokestatic  #9                  // Method java/lang/Integer.highestOneBit:(I)I
      15: iload_0
      16: if_icmpeq     49
      19: new           #10                 // class java/lang/IllegalArgumentException
      22: dup
      23: bipush        52
      25: new           #11                 // class java/lang/StringBuilder
      28: dup_x1
      29: swap
      30: invokespecial #12                 // Method java/lang/StringBuilder."<init>":(I)V
      33: ldc           #13                 // String must be power of 2 between 2^1 and 2^30:
      35: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_0
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: iload_0
      50: sipush        256
      53: if_icmpgt     60
      56: iload_0
      57: newarray       byte
      59: areturn
      60: iload_0
      61: ldc           #18                 // int 65536
      63: if_icmpgt     70
      66: iload_0
      67: newarray       short
      69: areturn
      70: iload_0
      71: newarray       int
      73: areturn

  static void tableClear(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #19                 // class "[B"
       4: ifeq          18
       7: aload_0
       8: checkcast     #19                 // class "[B"
      11: iconst_0
      12: invokestatic  #20                 // Method java/util/Arrays.fill:([BB)V
      15: goto          44
      18: aload_0
      19: instanceof    #21                 // class "[S"
      22: ifeq          36
      25: aload_0
      26: checkcast     #21                 // class "[S"
      29: iconst_0
      30: invokestatic  #22                 // Method java/util/Arrays.fill:([SS)V
      33: goto          44
      36: aload_0
      37: checkcast     #23                 // class "[I"
      40: iconst_0
      41: invokestatic  #24                 // Method java/util/Arrays.fill:([II)V
      44: return

  static int tableGet(java.lang.Object, int);
    Code:
       0: aload_0
       1: instanceof    #19                 // class "[B"
       4: ifeq          18
       7: aload_0
       8: checkcast     #19                 // class "[B"
      11: iload_1
      12: baload
      13: sipush        255
      16: iand
      17: ireturn
      18: aload_0
      19: instanceof    #21                 // class "[S"
      22: ifeq          35
      25: aload_0
      26: checkcast     #21                 // class "[S"
      29: iload_1
      30: saload
      31: ldc           #25                 // int 65535
      33: iand
      34: ireturn
      35: aload_0
      36: checkcast     #23                 // class "[I"
      39: iload_1
      40: iaload
      41: ireturn

  static void tableSet(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: instanceof    #19                 // class "[B"
       4: ifeq          18
       7: aload_0
       8: checkcast     #19                 // class "[B"
      11: iload_1
      12: iload_2
      13: i2b
      14: bastore
      15: goto          43
      18: aload_0
      19: instanceof    #21                 // class "[S"
      22: ifeq          36
      25: aload_0
      26: checkcast     #21                 // class "[S"
      29: iload_1
      30: iload_2
      31: i2s
      32: sastore
      33: goto          43
      36: aload_0
      37: checkcast     #23                 // class "[I"
      40: iload_1
      41: iload_2
      42: iastore
      43: return

  static int newCapacity(int);
    Code:
       0: iload_0
       1: bipush        32
       3: if_icmpge     10
       6: iconst_4
       7: goto          11
      10: iconst_2
      11: iload_0
      12: iconst_1
      13: iadd
      14: imul
      15: ireturn

  static int getHashPrefix(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iconst_m1
       3: ixor
       4: iand
       5: ireturn

  static int getNext(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iand
       3: ireturn

  static int maskCombine(int, int, int);
    Code:
       0: iload_0
       1: iload_2
       2: iconst_m1
       3: ixor
       4: iand
       5: iload_1
       6: iload_2
       7: iand
       8: ior
       9: ireturn

  static int remove(java.lang.Object, java.lang.Object, int, java.lang.Object, int[], java.lang.Object[], java.lang.Object[]);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method com/google/common/collect/Hashing.smearedHash:(Ljava/lang/Object;)I
       4: istore        7
       6: iload         7
       8: iload_2
       9: iand
      10: istore        8
      12: aload_3
      13: iload         8
      15: invokestatic  #27                 // Method tableGet:(Ljava/lang/Object;I)I
      18: istore        9
      20: iload         9
      22: ifne          27
      25: iconst_m1
      26: ireturn
      27: iload         7
      29: iload_2
      30: invokestatic  #28                 // Method getHashPrefix:(II)I
      33: istore        10
      35: iconst_m1
      36: istore        11
      38: iload         9
      40: iconst_1
      41: isub
      42: istore        12
      44: aload         4
      46: iload         12
      48: iaload
      49: istore        13
      51: iload         13
      53: iload_2
      54: invokestatic  #28                 // Method getHashPrefix:(II)I
      57: iload         10
      59: if_icmpne     135
      62: aload_0
      63: aload         5
      65: iload         12
      67: aaload
      68: invokestatic  #29                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      71: ifeq          135
      74: aload         6
      76: ifnull        91
      79: aload_1
      80: aload         6
      82: iload         12
      84: aaload
      85: invokestatic  #29                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      88: ifeq          135
      91: iload         13
      93: iload_2
      94: invokestatic  #30                 // Method getNext:(II)I
      97: istore        14
      99: iload         11
     101: iconst_m1
     102: if_icmpne     116
     105: aload_3
     106: iload         8
     108: iload         14
     110: invokestatic  #31                 // Method tableSet:(Ljava/lang/Object;II)V
     113: goto          132
     116: aload         4
     118: iload         11
     120: aload         4
     122: iload         11
     124: iaload
     125: iload         14
     127: iload_2
     128: invokestatic  #32                 // Method maskCombine:(III)I
     131: iastore
     132: iload         12
     134: ireturn
     135: iload         12
     137: istore        11
     139: iload         13
     141: iload_2
     142: invokestatic  #30                 // Method getNext:(II)I
     145: istore        9
     147: iload         9
     149: ifne          38
     152: iconst_m1
     153: ireturn
}
