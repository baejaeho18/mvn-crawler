Compiled from "Sets.java"
public final class com.google.common.collect.Sets {
  private com.google.common.collect.Sets();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <E extends java.lang.Enum<E>> com.google.common.collect.ImmutableSet<E> immutableEnumSet(E, E...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method java/util/EnumSet.of:(Ljava/lang/Enum;[Ljava/lang/Enum;)Ljava/util/EnumSet;
       5: invokestatic  #3                  // Method com/google/common/collect/ImmutableEnumSet.asImmutable:(Ljava/util/EnumSet;)Lcom/google/common/collect/ImmutableSet;
       8: areturn

  public static <E extends java.lang.Enum<E>> com.google.common.collect.ImmutableSet<E> immutableEnumSet(java.lang.Iterable<E>);
    Code:
       0: aload_0
       1: instanceof    #4                  // class com/google/common/collect/ImmutableEnumSet
       4: ifeq          12
       7: aload_0
       8: checkcast     #4                  // class com/google/common/collect/ImmutableEnumSet
      11: areturn
      12: aload_0
      13: instanceof    #5                  // class java/util/Collection
      16: ifeq          45
      19: aload_0
      20: checkcast     #5                  // class java/util/Collection
      23: astore_1
      24: aload_1
      25: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      30: ifeq          37
      33: invokestatic  #7                  // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      36: areturn
      37: aload_1
      38: invokestatic  #8                  // Method java/util/EnumSet.copyOf:(Ljava/util/Collection;)Ljava/util/EnumSet;
      41: invokestatic  #3                  // Method com/google/common/collect/ImmutableEnumSet.asImmutable:(Ljava/util/EnumSet;)Lcom/google/common/collect/ImmutableSet;
      44: areturn
      45: aload_0
      46: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      51: astore_1
      52: aload_1
      53: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          85
      61: aload_1
      62: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #12                 // class java/lang/Enum
      70: invokestatic  #13                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      73: astore_2
      74: aload_2
      75: aload_1
      76: invokestatic  #14                 // Method com/google/common/collect/Iterators.addAll:(Ljava/util/Collection;Ljava/util/Iterator;)Z
      79: pop
      80: aload_2
      81: invokestatic  #3                  // Method com/google/common/collect/ImmutableEnumSet.asImmutable:(Ljava/util/EnumSet;)Lcom/google/common/collect/ImmutableSet;
      84: areturn
      85: invokestatic  #7                  // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      88: areturn

  public static <E extends java.lang.Enum<E>> java.util.stream.Collector<E, ?, com.google.common.collect.ImmutableSet<E>> toImmutableEnumSet();
    Code:
       0: invokestatic  #15                 // Method com/google/common/collect/CollectCollectors.toImmutableEnumSet:()Ljava/util/stream/Collector;
       3: areturn

  public static <E extends java.lang.Enum<E>> java.util.EnumSet<E> newEnumSet(java.lang.Iterable<E>, java.lang.Class<E>);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokestatic  #17                 // Method com/google/common/collect/Iterables.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
      10: pop
      11: aload_2
      12: areturn

  public static <E> java.util.HashSet<E> newHashSet();
    Code:
       0: new           #18                 // class java/util/HashSet
       3: dup
       4: invokespecial #19                 // Method java/util/HashSet."<init>":()V
       7: areturn

  public static <E> java.util.HashSet<E> newHashSet(E...);
    Code:
       0: aload_0
       1: arraylength
       2: invokestatic  #20                 // Method newHashSetWithExpectedSize:(I)Ljava/util/HashSet;
       5: astore_1
       6: aload_1
       7: aload_0
       8: invokestatic  #21                 // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
      11: pop
      12: aload_1
      13: areturn

  public static <E> java.util.HashSet<E> newHashSet(java.lang.Iterable<? extends E>);
    Code:
       0: aload_0
       1: instanceof    #5                  // class java/util/Collection
       4: ifeq          21
       7: new           #18                 // class java/util/HashSet
      10: dup
      11: aload_0
      12: checkcast     #5                  // class java/util/Collection
      15: invokespecial #22                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      18: goto          30
      21: aload_0
      22: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      27: invokestatic  #23                 // Method newHashSet:(Ljava/util/Iterator;)Ljava/util/HashSet;
      30: areturn

  public static <E> java.util.HashSet<E> newHashSet(java.util.Iterator<? extends E>);
    Code:
       0: invokestatic  #24                 // Method newHashSet:()Ljava/util/HashSet;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokestatic  #14                 // Method com/google/common/collect/Iterators.addAll:(Ljava/util/Collection;Ljava/util/Iterator;)Z
       9: pop
      10: aload_1
      11: areturn

  public static <E> java.util.HashSet<E> newHashSetWithExpectedSize(int);
    Code:
       0: new           #18                 // class java/util/HashSet
       3: dup
       4: iload_0
       5: invokestatic  #25                 // Method com/google/common/collect/Maps.capacity:(I)I
       8: invokespecial #26                 // Method java/util/HashSet."<init>":(I)V
      11: areturn

  public static <E> java.util.Set<E> newConcurrentHashSet();
    Code:
       0: invokestatic  #27                 // Method com/google/common/collect/Platform.newConcurrentHashSet:()Ljava/util/Set;
       3: areturn

  public static <E> java.util.Set<E> newConcurrentHashSet(java.lang.Iterable<? extends E>);
    Code:
       0: invokestatic  #28                 // Method newConcurrentHashSet:()Ljava/util/Set;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokestatic  #17                 // Method com/google/common/collect/Iterables.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
       9: pop
      10: aload_1
      11: areturn

  public static <E> java.util.LinkedHashSet<E> newLinkedHashSet();
    Code:
       0: new           #29                 // class java/util/LinkedHashSet
       3: dup
       4: invokespecial #30                 // Method java/util/LinkedHashSet."<init>":()V
       7: areturn

  public static <E> java.util.LinkedHashSet<E> newLinkedHashSet(java.lang.Iterable<? extends E>);
    Code:
       0: aload_0
       1: instanceof    #5                  // class java/util/Collection
       4: ifeq          19
       7: new           #29                 // class java/util/LinkedHashSet
      10: dup
      11: aload_0
      12: checkcast     #5                  // class java/util/Collection
      15: invokespecial #31                 // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      18: areturn
      19: invokestatic  #32                 // Method newLinkedHashSet:()Ljava/util/LinkedHashSet;
      22: astore_1
      23: aload_1
      24: aload_0
      25: invokestatic  #17                 // Method com/google/common/collect/Iterables.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
      28: pop
      29: aload_1
      30: areturn

  public static <E> java.util.LinkedHashSet<E> newLinkedHashSetWithExpectedSize(int);
    Code:
       0: new           #29                 // class java/util/LinkedHashSet
       3: dup
       4: iload_0
       5: invokestatic  #25                 // Method com/google/common/collect/Maps.capacity:(I)I
       8: invokespecial #33                 // Method java/util/LinkedHashSet."<init>":(I)V
      11: areturn

  public static <E extends java.lang.Comparable> java.util.TreeSet<E> newTreeSet();
    Code:
       0: new           #34                 // class java/util/TreeSet
       3: dup
       4: invokespecial #35                 // Method java/util/TreeSet."<init>":()V
       7: areturn

  public static <E extends java.lang.Comparable> java.util.TreeSet<E> newTreeSet(java.lang.Iterable<? extends E>);
    Code:
       0: invokestatic  #36                 // Method newTreeSet:()Ljava/util/TreeSet;
       3: astore_1
       4: aload_1
       5: aload_0
       6: invokestatic  #17                 // Method com/google/common/collect/Iterables.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z
       9: pop
      10: aload_1
      11: areturn

  public static <E> java.util.TreeSet<E> newTreeSet(java.util.Comparator<? super E>);
    Code:
       0: new           #34                 // class java/util/TreeSet
       3: dup
       4: aload_0
       5: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #38                 // class java/util/Comparator
      11: invokespecial #39                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      14: areturn

  public static <E> java.util.Set<E> newIdentityHashSet();
    Code:
       0: invokestatic  #40                 // Method com/google/common/collect/Maps.newIdentityHashMap:()Ljava/util/IdentityHashMap;
       3: invokestatic  #41                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
       6: areturn

  public static <E> java.util.concurrent.CopyOnWriteArraySet<E> newCopyOnWriteArraySet();
    Code:
       0: new           #42                 // class java/util/concurrent/CopyOnWriteArraySet
       3: dup
       4: invokespecial #43                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":()V
       7: areturn

  public static <E> java.util.concurrent.CopyOnWriteArraySet<E> newCopyOnWriteArraySet(java.lang.Iterable<? extends E>);
    Code:
       0: aload_0
       1: instanceof    #5                  // class java/util/Collection
       4: ifeq          14
       7: aload_0
       8: checkcast     #5                  // class java/util/Collection
      11: goto          18
      14: aload_0
      15: invokestatic  #44                 // Method com/google/common/collect/Lists.newArrayList:(Ljava/lang/Iterable;)Ljava/util/ArrayList;
      18: astore_1
      19: new           #42                 // class java/util/concurrent/CopyOnWriteArraySet
      22: dup
      23: aload_1
      24: invokespecial #45                 // Method java/util/concurrent/CopyOnWriteArraySet."<init>":(Ljava/util/Collection;)V
      27: areturn

  public static <E extends java.lang.Enum<E>> java.util.EnumSet<E> complementOf(java.util.Collection<E>);
    Code:
       0: aload_0
       1: instanceof    #46                 // class java/util/EnumSet
       4: ifeq          15
       7: aload_0
       8: checkcast     #46                 // class java/util/EnumSet
      11: invokestatic  #47                 // Method java/util/EnumSet.complementOf:(Ljava/util/EnumSet;)Ljava/util/EnumSet;
      14: areturn
      15: aload_0
      16: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #48                 // String collection is empty; use the other version of this method
      31: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      34: aload_0
      35: invokeinterface #50,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      40: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #12                 // class java/lang/Enum
      48: invokevirtual #51                 // Method java/lang/Enum.getDeclaringClass:()Ljava/lang/Class;
      51: astore_1
      52: aload_0
      53: aload_1
      54: invokestatic  #52                 // Method makeComplementByHand:(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/EnumSet;
      57: areturn

  public static <E extends java.lang.Enum<E>> java.util.EnumSet<E> complementOf(java.util.Collection<E>, java.lang.Class<E>);
    Code:
       0: aload_0
       1: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: instanceof    #46                 // class java/util/EnumSet
       9: ifeq          22
      12: aload_0
      13: checkcast     #46                 // class java/util/EnumSet
      16: invokestatic  #47                 // Method java/util/EnumSet.complementOf:(Ljava/util/EnumSet;)Ljava/util/EnumSet;
      19: goto          27
      22: aload_0
      23: aload_1
      24: invokestatic  #52                 // Method makeComplementByHand:(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/EnumSet;
      27: areturn

  private static <E extends java.lang.Enum<E>> java.util.EnumSet<E> makeComplementByHand(java.util.Collection<E>, java.lang.Class<E>);
    Code:
       0: aload_1
       1: invokestatic  #53                 // Method java/util/EnumSet.allOf:(Ljava/lang/Class;)Ljava/util/EnumSet;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokevirtual #54                 // Method java/util/EnumSet.removeAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_2
      12: areturn

  public static <E> java.util.Set<E> newSetFromMap(java.util.Map<E, java.lang.Boolean>);
    Code:
       0: aload_0
       1: invokestatic  #41                 // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
       4: areturn

  public static <E> com.google.common.collect.Sets$SetView<E> union(java.util.Set<? extends E>, java.util.Set<? extends E>);
    Code:
       0: aload_0
       1: ldc           #55                 // String set1
       3: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #57                 // String set2
      10: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: new           #58                 // class com/google/common/collect/Sets$1
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #59                 // Method com/google/common/collect/Sets$1."<init>":(Ljava/util/Set;Ljava/util/Set;)V
      23: areturn

  public static <E> com.google.common.collect.Sets$SetView<E> intersection(java.util.Set<E>, java.util.Set<?>);
    Code:
       0: aload_0
       1: ldc           #55                 // String set1
       3: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #57                 // String set2
      10: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: new           #60                 // class com/google/common/collect/Sets$2
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #61                 // Method com/google/common/collect/Sets$2."<init>":(Ljava/util/Set;Ljava/util/Set;)V
      23: areturn

  public static <E> com.google.common.collect.Sets$SetView<E> difference(java.util.Set<E>, java.util.Set<?>);
    Code:
       0: aload_0
       1: ldc           #55                 // String set1
       3: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #57                 // String set2
      10: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: new           #62                 // class com/google/common/collect/Sets$3
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #63                 // Method com/google/common/collect/Sets$3."<init>":(Ljava/util/Set;Ljava/util/Set;)V
      23: areturn

  public static <E> com.google.common.collect.Sets$SetView<E> symmetricDifference(java.util.Set<? extends E>, java.util.Set<? extends E>);
    Code:
       0: aload_0
       1: ldc           #55                 // String set1
       3: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: ldc           #57                 // String set2
      10: invokestatic  #56                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: new           #64                 // class com/google/common/collect/Sets$4
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #65                 // Method com/google/common/collect/Sets$4."<init>":(Ljava/util/Set;Ljava/util/Set;)V
      23: areturn

  public static <E> java.util.Set<E> filter(java.util.Set<E>, com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: instanceof    #66                 // class java/util/SortedSet
       4: ifeq          16
       7: aload_0
       8: checkcast     #66                 // class java/util/SortedSet
      11: aload_1
      12: invokestatic  #67                 // Method filter:(Ljava/util/SortedSet;Lcom/google/common/base/Predicate;)Ljava/util/SortedSet;
      15: areturn
      16: aload_0
      17: instanceof    #68                 // class com/google/common/collect/Sets$FilteredSet
      20: ifeq          53
      23: aload_0
      24: checkcast     #68                 // class com/google/common/collect/Sets$FilteredSet
      27: astore_2
      28: aload_2
      29: getfield      #69                 // Field com/google/common/collect/Sets$FilteredSet.predicate:Lcom/google/common/base/Predicate;
      32: aload_1
      33: invokestatic  #70                 // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      36: astore_3
      37: new           #68                 // class com/google/common/collect/Sets$FilteredSet
      40: dup
      41: aload_2
      42: getfield      #71                 // Field com/google/common/collect/Sets$FilteredSet.unfiltered:Ljava/util/Collection;
      45: checkcast     #72                 // class java/util/Set
      48: aload_3
      49: invokespecial #73                 // Method com/google/common/collect/Sets$FilteredSet."<init>":(Ljava/util/Set;Lcom/google/common/base/Predicate;)V
      52: areturn
      53: new           #68                 // class com/google/common/collect/Sets$FilteredSet
      56: dup
      57: aload_0
      58: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #72                 // class java/util/Set
      64: aload_1
      65: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      68: checkcast     #74                 // class com/google/common/base/Predicate
      71: invokespecial #73                 // Method com/google/common/collect/Sets$FilteredSet."<init>":(Ljava/util/Set;Lcom/google/common/base/Predicate;)V
      74: areturn

  public static <E> java.util.SortedSet<E> filter(java.util.SortedSet<E>, com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: instanceof    #68                 // class com/google/common/collect/Sets$FilteredSet
       4: ifeq          37
       7: aload_0
       8: checkcast     #68                 // class com/google/common/collect/Sets$FilteredSet
      11: astore_2
      12: aload_2
      13: getfield      #69                 // Field com/google/common/collect/Sets$FilteredSet.predicate:Lcom/google/common/base/Predicate;
      16: aload_1
      17: invokestatic  #70                 // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      20: astore_3
      21: new           #75                 // class com/google/common/collect/Sets$FilteredSortedSet
      24: dup
      25: aload_2
      26: getfield      #71                 // Field com/google/common/collect/Sets$FilteredSet.unfiltered:Ljava/util/Collection;
      29: checkcast     #66                 // class java/util/SortedSet
      32: aload_3
      33: invokespecial #76                 // Method com/google/common/collect/Sets$FilteredSortedSet."<init>":(Ljava/util/SortedSet;Lcom/google/common/base/Predicate;)V
      36: areturn
      37: new           #75                 // class com/google/common/collect/Sets$FilteredSortedSet
      40: dup
      41: aload_0
      42: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #66                 // class java/util/SortedSet
      48: aload_1
      49: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #74                 // class com/google/common/base/Predicate
      55: invokespecial #76                 // Method com/google/common/collect/Sets$FilteredSortedSet."<init>":(Ljava/util/SortedSet;Lcom/google/common/base/Predicate;)V
      58: areturn

  public static <E> java.util.NavigableSet<E> filter(java.util.NavigableSet<E>, com.google.common.base.Predicate<? super E>);
    Code:
       0: aload_0
       1: instanceof    #68                 // class com/google/common/collect/Sets$FilteredSet
       4: ifeq          37
       7: aload_0
       8: checkcast     #68                 // class com/google/common/collect/Sets$FilteredSet
      11: astore_2
      12: aload_2
      13: getfield      #69                 // Field com/google/common/collect/Sets$FilteredSet.predicate:Lcom/google/common/base/Predicate;
      16: aload_1
      17: invokestatic  #70                 // Method com/google/common/base/Predicates.and:(Lcom/google/common/base/Predicate;Lcom/google/common/base/Predicate;)Lcom/google/common/base/Predicate;
      20: astore_3
      21: new           #77                 // class com/google/common/collect/Sets$FilteredNavigableSet
      24: dup
      25: aload_2
      26: getfield      #71                 // Field com/google/common/collect/Sets$FilteredSet.unfiltered:Ljava/util/Collection;
      29: checkcast     #78                 // class java/util/NavigableSet
      32: aload_3
      33: invokespecial #79                 // Method com/google/common/collect/Sets$FilteredNavigableSet."<init>":(Ljava/util/NavigableSet;Lcom/google/common/base/Predicate;)V
      36: areturn
      37: new           #77                 // class com/google/common/collect/Sets$FilteredNavigableSet
      40: dup
      41: aload_0
      42: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #78                 // class java/util/NavigableSet
      48: aload_1
      49: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #74                 // class com/google/common/base/Predicate
      55: invokespecial #79                 // Method com/google/common/collect/Sets$FilteredNavigableSet."<init>":(Ljava/util/NavigableSet;Lcom/google/common/base/Predicate;)V
      58: areturn

  public static <B> java.util.Set<java.util.List<B>> cartesianProduct(java.util.List<? extends java.util.Set<? extends B>>);
    Code:
       0: aload_0
       1: invokestatic  #80                 // Method com/google/common/collect/Sets$CartesianSet.create:(Ljava/util/List;)Ljava/util/Set;
       4: areturn

  public static <B> java.util.Set<java.util.List<B>> cartesianProduct(java.util.Set<? extends B>...);
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #82                 // Method cartesianProduct:(Ljava/util/List;)Ljava/util/Set;
       7: areturn

  public static <E> java.util.Set<java.util.Set<E>> powerSet(java.util.Set<E>);
    Code:
       0: new           #83                 // class com/google/common/collect/Sets$PowerSet
       3: dup
       4: aload_0
       5: invokespecial #84                 // Method com/google/common/collect/Sets$PowerSet."<init>":(Ljava/util/Set;)V
       8: areturn

  public static <E> java.util.Set<java.util.Set<E>> combinations(java.util.Set<E>, int);
    Code:
       0: aload_0
       1: invokestatic  #85                 // Method com/google/common/collect/Maps.indexMap:(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableMap;
       4: astore_2
       5: iload_1
       6: ldc           #86                 // String size
       8: invokestatic  #87                 // Method com/google/common/collect/CollectPreconditions.checkNonnegative:(ILjava/lang/String;)I
      11: pop
      12: iload_1
      13: aload_2
      14: invokevirtual #88                 // Method com/google/common/collect/ImmutableMap.size:()I
      17: if_icmpgt     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ldc           #89                 // String size (%s) must be <= set.size() (%s)
      27: iload_1
      28: aload_2
      29: invokevirtual #88                 // Method com/google/common/collect/ImmutableMap.size:()I
      32: invokestatic  #90                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;II)V
      35: iload_1
      36: ifne          46
      39: invokestatic  #7                  // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      42: invokestatic  #91                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      45: areturn
      46: iload_1
      47: aload_2
      48: invokevirtual #88                 // Method com/google/common/collect/ImmutableMap.size:()I
      51: if_icmpne     62
      54: aload_2
      55: invokevirtual #92                 // Method com/google/common/collect/ImmutableMap.keySet:()Lcom/google/common/collect/ImmutableSet;
      58: invokestatic  #91                 // Method com/google/common/collect/ImmutableSet.of:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet;
      61: areturn
      62: new           #93                 // class com/google/common/collect/Sets$5
      65: dup
      66: iload_1
      67: aload_2
      68: invokespecial #94                 // Method com/google/common/collect/Sets$5."<init>":(ILcom/google/common/collect/ImmutableMap;)V
      71: areturn

  static int hashCodeImpl(java.util.Set<?>);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       8: astore_2
       9: aload_2
      10: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          49
      18: aload_2
      19: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: astore_3
      25: iload_1
      26: aload_3
      27: ifnull        37
      30: aload_3
      31: invokevirtual #96                 // Method java/lang/Object.hashCode:()I
      34: goto          38
      37: iconst_0
      38: iadd
      39: istore_1
      40: iload_1
      41: iconst_m1
      42: ixor
      43: iconst_m1
      44: ixor
      45: istore_1
      46: goto          9
      49: iload_1
      50: ireturn

  static boolean equalsImpl(java.util.Set<?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #72                 // class java/util/Set
      11: ifeq          53
      14: aload_1
      15: checkcast     #72                 // class java/util/Set
      18: astore_2
      19: aload_0
      20: invokeinterface #97,  1           // InterfaceMethod java/util/Set.size:()I
      25: aload_2
      26: invokeinterface #97,  1           // InterfaceMethod java/util/Set.size:()I
      31: if_icmpne     48
      34: aload_0
      35: aload_2
      36: invokeinterface #98,  2           // InterfaceMethod java/util/Set.containsAll:(Ljava/util/Collection;)Z
      41: ifeq          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: ireturn
      50: astore_3
      51: iconst_0
      52: ireturn
      53: iconst_0
      54: ireturn
    Exception table:
       from    to  target type
          19    49    50   Class java/lang/NullPointerException
          19    49    50   Class java/lang/ClassCastException

  public static <E> java.util.NavigableSet<E> unmodifiableNavigableSet(java.util.NavigableSet<E>);
    Code:
       0: aload_0
       1: instanceof    #101                // class com/google/common/collect/ImmutableCollection
       4: ifne          14
       7: aload_0
       8: instanceof    #102                // class com/google/common/collect/Sets$UnmodifiableNavigableSet
      11: ifeq          16
      14: aload_0
      15: areturn
      16: new           #102                // class com/google/common/collect/Sets$UnmodifiableNavigableSet
      19: dup
      20: aload_0
      21: invokespecial #103                // Method com/google/common/collect/Sets$UnmodifiableNavigableSet."<init>":(Ljava/util/NavigableSet;)V
      24: areturn

  public static <E> java.util.NavigableSet<E> synchronizedNavigableSet(java.util.NavigableSet<E>);
    Code:
       0: aload_0
       1: invokestatic  #104                // Method com/google/common/collect/Synchronized.navigableSet:(Ljava/util/NavigableSet;)Ljava/util/NavigableSet;
       4: areturn

  static boolean removeAllImpl(java.util.Set<?>, java.util.Iterator<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
       8: ifeq          29
      11: iload_2
      12: aload_0
      13: aload_1
      14: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      19: invokeinterface #105,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      24: ior
      25: istore_2
      26: goto          2
      29: iload_2
      30: ireturn

  static boolean removeAllImpl(java.util.Set<?>, java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: instanceof    #106                // class com/google/common/collect/Multiset
       9: ifeq          22
      12: aload_1
      13: checkcast     #106                // class com/google/common/collect/Multiset
      16: invokeinterface #107,  1          // InterfaceMethod com/google/common/collect/Multiset.elementSet:()Ljava/util/Set;
      21: astore_1
      22: aload_1
      23: instanceof    #72                 // class java/util/Set
      26: ifeq          55
      29: aload_1
      30: invokeinterface #108,  1          // InterfaceMethod java/util/Collection.size:()I
      35: aload_0
      36: invokeinterface #97,  1           // InterfaceMethod java/util/Set.size:()I
      41: if_icmple     55
      44: aload_0
      45: invokeinterface #95,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      50: aload_1
      51: invokestatic  #109                // Method com/google/common/collect/Iterators.removeAll:(Ljava/util/Iterator;Ljava/util/Collection;)Z
      54: ireturn
      55: aload_0
      56: aload_1
      57: invokeinterface #50,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      62: invokestatic  #110                // Method removeAllImpl:(Ljava/util/Set;Ljava/util/Iterator;)Z
      65: ireturn

  public static <K extends java.lang.Comparable<? super K>> java.util.NavigableSet<K> subSet(java.util.NavigableSet<K>, com.google.common.collect.Range<K>);
    Code:
       0: aload_0
       1: invokeinterface #111,  1          // InterfaceMethod java/util/NavigableSet.comparator:()Ljava/util/Comparator;
       6: ifnull        67
       9: aload_0
      10: invokeinterface #111,  1          // InterfaceMethod java/util/NavigableSet.comparator:()Ljava/util/Comparator;
      15: invokestatic  #112                // Method com/google/common/collect/Ordering.natural:()Lcom/google/common/collect/Ordering;
      18: if_acmpeq     67
      21: aload_1
      22: invokevirtual #113                // Method com/google/common/collect/Range.hasLowerBound:()Z
      25: ifeq          67
      28: aload_1
      29: invokevirtual #114                // Method com/google/common/collect/Range.hasUpperBound:()Z
      32: ifeq          67
      35: aload_0
      36: invokeinterface #111,  1          // InterfaceMethod java/util/NavigableSet.comparator:()Ljava/util/Comparator;
      41: aload_1
      42: invokevirtual #115                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      45: aload_1
      46: invokevirtual #116                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
      49: invokeinterface #117,  3          // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      54: ifgt          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ldc           #118                // String set is using a custom comparator which is inconsistent with the natural ordering.
      64: invokestatic  #49                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      67: aload_1
      68: invokevirtual #113                // Method com/google/common/collect/Range.hasLowerBound:()Z
      71: ifeq          126
      74: aload_1
      75: invokevirtual #114                // Method com/google/common/collect/Range.hasUpperBound:()Z
      78: ifeq          126
      81: aload_0
      82: aload_1
      83: invokevirtual #115                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
      86: aload_1
      87: invokevirtual #119                // Method com/google/common/collect/Range.lowerBoundType:()Lcom/google/common/collect/BoundType;
      90: getstatic     #120                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
      93: if_acmpne     100
      96: iconst_1
      97: goto          101
     100: iconst_0
     101: aload_1
     102: invokevirtual #116                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
     105: aload_1
     106: invokevirtual #121                // Method com/google/common/collect/Range.upperBoundType:()Lcom/google/common/collect/BoundType;
     109: getstatic     #120                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     112: if_acmpne     119
     115: iconst_1
     116: goto          120
     119: iconst_0
     120: invokeinterface #122,  5          // InterfaceMethod java/util/NavigableSet.subSet:(Ljava/lang/Object;ZLjava/lang/Object;Z)Ljava/util/NavigableSet;
     125: areturn
     126: aload_1
     127: invokevirtual #113                // Method com/google/common/collect/Range.hasLowerBound:()Z
     130: ifeq          159
     133: aload_0
     134: aload_1
     135: invokevirtual #115                // Method com/google/common/collect/Range.lowerEndpoint:()Ljava/lang/Comparable;
     138: aload_1
     139: invokevirtual #119                // Method com/google/common/collect/Range.lowerBoundType:()Lcom/google/common/collect/BoundType;
     142: getstatic     #120                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     145: if_acmpne     152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: invokeinterface #123,  3          // InterfaceMethod java/util/NavigableSet.tailSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
     158: areturn
     159: aload_1
     160: invokevirtual #114                // Method com/google/common/collect/Range.hasUpperBound:()Z
     163: ifeq          192
     166: aload_0
     167: aload_1
     168: invokevirtual #116                // Method com/google/common/collect/Range.upperEndpoint:()Ljava/lang/Comparable;
     171: aload_1
     172: invokevirtual #121                // Method com/google/common/collect/Range.upperBoundType:()Lcom/google/common/collect/BoundType;
     175: getstatic     #120                // Field com/google/common/collect/BoundType.CLOSED:Lcom/google/common/collect/BoundType;
     178: if_acmpne     185
     181: iconst_1
     182: goto          186
     185: iconst_0
     186: invokeinterface #124,  3          // InterfaceMethod java/util/NavigableSet.headSet:(Ljava/lang/Object;Z)Ljava/util/NavigableSet;
     191: areturn
     192: aload_0
     193: invokestatic  #37                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
     196: checkcast     #78                 // class java/util/NavigableSet
     199: areturn
}
