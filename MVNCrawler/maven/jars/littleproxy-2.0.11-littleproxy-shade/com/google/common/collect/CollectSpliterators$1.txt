Compiled from "CollectSpliterators.java"
class com.google.common.collect.CollectSpliterators$1 implements java.util.Spliterator<OutElementT> {
  final java.util.Spliterator val$fromSpliterator;

  final java.util.function.Function val$function;

  com.google.common.collect.CollectSpliterators$1(java.util.Spliterator, java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$fromSpliterator:Ljava/util/Spliterator;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$function:Ljava/util/function/Function;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public boolean tryAdvance(java.util.function.Consumer<? super OutElementT>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$fromSpliterator:Ljava/util/Spliterator;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field val$function:Ljava/util/function/Function;
       9: invokedynamic #4,  0              // InvokeDynamic #0:accept:(Ljava/util/function/Consumer;Ljava/util/function/Function;)Ljava/util/function/Consumer;
      14: invokeinterface #5,  2            // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z
      19: ireturn

  public void forEachRemaining(java.util.function.Consumer<? super OutElementT>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$fromSpliterator:Ljava/util/Spliterator;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field val$function:Ljava/util/function/Function;
       9: invokedynamic #6,  0              // InvokeDynamic #1:accept:(Ljava/util/function/Consumer;Ljava/util/function/Function;)Ljava/util/function/Consumer;
      14: invokeinterface #7,  2            // InterfaceMethod java/util/Spliterator.forEachRemaining:(Ljava/util/function/Consumer;)V
      19: return

  public java.util.Spliterator<OutElementT> trySplit();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$fromSpliterator:Ljava/util/Spliterator;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Spliterator.trySplit:()Ljava/util/Spliterator;
       9: astore_1
      10: aload_1
      11: ifnull        25
      14: aload_1
      15: aload_0
      16: getfield      #2                  // Field val$function:Ljava/util/function/Function;
      19: invokestatic  #9                  // Method com/google/common/collect/CollectSpliterators.map:(Ljava/util/Spliterator;Ljava/util/function/Function;)Ljava/util/Spliterator;
      22: goto          26
      25: aconst_null
      26: areturn

  public long estimateSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$fromSpliterator:Ljava/util/Spliterator;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Spliterator.estimateSize:()J
       9: lreturn

  public int characteristics();
    Code:
       0: aload_0
       1: getfield      #1                  // Field val$fromSpliterator:Ljava/util/Spliterator;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Spliterator.characteristics:()I
       9: sipush        -262
      12: iand
      13: ireturn

  private static void lambda$forEachRemaining$1(java.util.function.Consumer, java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: return

  private static void lambda$tryAdvance$0(java.util.function.Consumer, java.util.function.Function, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       8: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: return
}
