Compiled from "ImmutableMapKeySet.java"
final class com.google.common.collect.ImmutableMapKeySet<K, V> extends com.google.common.collect.IndexedImmutableSet<K> {
  private final com.google.common.collect.ImmutableMap<K, V> map;

  com.google.common.collect.ImmutableMapKeySet(com.google.common.collect.ImmutableMap<K, V>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/google/common/collect/IndexedImmutableSet."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field map:Lcom/google/common/collect/ImmutableMap;
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: invokevirtual #3                  // Method com/google/common/collect/ImmutableMap.size:()I
       7: ireturn

  public com.google.common.collect.UnmodifiableIterator<K> iterator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: invokevirtual #4                  // Method com/google/common/collect/ImmutableMap.keyIterator:()Lcom/google/common/collect/UnmodifiableIterator;
       7: areturn

  public java.util.Spliterator<K> spliterator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: invokevirtual #5                  // Method com/google/common/collect/ImmutableMap.keySpliterator:()Ljava/util/Spliterator;
       7: areturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: aload_1
       5: invokevirtual #6                  // Method com/google/common/collect/ImmutableMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  K get(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field map:Lcom/google/common/collect/ImmutableMap;
       4: invokevirtual #7                  // Method com/google/common/collect/ImmutableMap.entrySet:()Lcom/google/common/collect/ImmutableSet;
       7: invokevirtual #8                  // Method com/google/common/collect/ImmutableSet.asList:()Lcom/google/common/collect/ImmutableList;
      10: iload_1
      11: invokevirtual #9                  // Method com/google/common/collect/ImmutableList.get:(I)Ljava/lang/Object;
      14: checkcast     #10                 // class java/util/Map$Entry
      17: invokeinterface #11,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      22: areturn

  public void forEach(java.util.function.Consumer<? super K>);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #2                  // Field map:Lcom/google/common/collect/ImmutableMap;
       9: aload_1
      10: invokedynamic #13,  0             // InvokeDynamic #0:accept:(Ljava/util/function/Consumer;)Ljava/util/function/BiConsumer;
      15: invokevirtual #14                 // Method com/google/common/collect/ImmutableMap.forEach:(Ljava/util/function/BiConsumer;)V
      18: return

  boolean isPartialView();
    Code:
       0: iconst_1
       1: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method iterator:()Lcom/google/common/collect/UnmodifiableIterator;
       4: areturn

  private static void lambda$forEach$0(java.util.function.Consumer, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #16,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
       7: return
}
