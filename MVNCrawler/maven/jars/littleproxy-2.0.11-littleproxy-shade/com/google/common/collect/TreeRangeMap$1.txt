Compiled from "TreeRangeMap.java"
class com.google.common.collect.TreeRangeMap$1 implements com.google.common.collect.RangeMap<java.lang.Comparable<?>, java.lang.Object> {
  com.google.common.collect.TreeRangeMap$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Object get(java.lang.Comparable<?>);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Map$Entry<com.google.common.collect.Range<java.lang.Comparable<?>>, java.lang.Object> getEntry(java.lang.Comparable<?>);
    Code:
       0: aconst_null
       1: areturn

  public com.google.common.collect.Range<java.lang.Comparable<?>> span();
    Code:
       0: new           #2                  // class java/util/NoSuchElementException
       3: dup
       4: invokespecial #3                  // Method java/util/NoSuchElementException."<init>":()V
       7: athrow

  public void put(com.google.common.collect.Range<java.lang.Comparable<?>>, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #5                  // class java/lang/IllegalArgumentException
       8: dup
       9: aload_1
      10: invokestatic  #6                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      13: astore_3
      14: bipush        46
      16: aload_3
      17: invokestatic  #6                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      20: invokevirtual #7                  // Method java/lang/String.length:()I
      23: iadd
      24: new           #8                  // class java/lang/StringBuilder
      27: dup_x1
      28: swap
      29: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      32: ldc           #10                 // String Cannot insert range
      34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_3
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #12                 // String  into an empty subRangeMap
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow

  public void putCoalescing(com.google.common.collect.Range<java.lang.Comparable<?>>, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #5                  // class java/lang/IllegalArgumentException
       8: dup
       9: aload_1
      10: invokestatic  #6                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      13: astore_3
      14: bipush        46
      16: aload_3
      17: invokestatic  #6                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      20: invokevirtual #7                  // Method java/lang/String.length:()I
      23: iadd
      24: new           #8                  // class java/lang/StringBuilder
      27: dup_x1
      28: swap
      29: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      32: ldc           #10                 // String Cannot insert range
      34: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_3
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #12                 // String  into an empty subRangeMap
      43: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow

  public void putAll(com.google.common.collect.RangeMap<java.lang.Comparable<?>, java.lang.Object>);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod com/google/common/collect/RangeMap.asMapOfRanges:()Ljava/util/Map;
       6: invokeinterface #16,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      11: ifne          24
      14: new           #5                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #17                 // String Cannot putAll(nonEmptyRangeMap) into an empty subRangeMap
      20: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return

  public void clear();
    Code:
       0: return

  public void remove(com.google.common.collect.Range<java.lang.Comparable<?>>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: return

  public void merge(com.google.common.collect.Range<java.lang.Comparable<?>>, java.lang.Object, java.util.function.BiFunction<? super java.lang.Object, ? super java.lang.Object, ? extends java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: new           #5                  // class java/lang/IllegalArgumentException
       8: dup
       9: aload_1
      10: invokestatic  #6                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      13: astore        4
      15: bipush        45
      17: aload         4
      19: invokestatic  #6                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      22: invokevirtual #7                  // Method java/lang/String.length:()I
      25: iadd
      26: new           #8                  // class java/lang/StringBuilder
      29: dup_x1
      30: swap
      31: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(I)V
      34: ldc           #18                 // String Cannot merge range
      36: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload         4
      41: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #12                 // String  into an empty subRangeMap
      46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow

  public java.util.Map<com.google.common.collect.Range<java.lang.Comparable<?>>, java.lang.Object> asMapOfRanges();
    Code:
       0: invokestatic  #19                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public java.util.Map<com.google.common.collect.Range<java.lang.Comparable<?>>, java.lang.Object> asDescendingMapOfRanges();
    Code:
       0: invokestatic  #19                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public com.google.common.collect.RangeMap<java.lang.Comparable<?>, java.lang.Object> subRangeMap(com.google.common.collect.Range<java.lang.Comparable<?>>);
    Code:
       0: aload_1
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: areturn
}
