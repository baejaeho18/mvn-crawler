Compiled from "RegularImmutableBiMap.java"
class com.google.common.collect.RegularImmutableBiMap<K, V> extends com.google.common.collect.ImmutableBiMap<K, V> {
  static final com.google.common.collect.RegularImmutableBiMap<java.lang.Object, java.lang.Object> EMPTY;

  static final double MAX_LOAD_FACTOR;

  private final transient com.google.common.collect.ImmutableMapEntry<K, V>[] keyTable;

  private final transient com.google.common.collect.ImmutableMapEntry<K, V>[] valueTable;

  final transient java.util.Map$Entry<K, V>[] entries;

  private final transient int mask;

  private final transient int hashCode;

  private transient com.google.common.collect.ImmutableBiMap<V, K> inverse;

  static <K, V> com.google.common.collect.ImmutableBiMap<K, V> fromEntries(java.util.Map$Entry<K, V>...);
    Code:
       0: aload_0
       1: arraylength
       2: aload_0
       3: invokestatic  #5                  // Method fromEntryArray:(I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableBiMap;
       6: areturn

  static <K, V> com.google.common.collect.ImmutableBiMap<K, V> fromEntryArray(int, java.util.Map$Entry<K, V>[]);
    Code:
       0: iload_0
       1: aload_1
       2: arraylength
       3: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkPositionIndex:(II)I
       6: pop
       7: iload_0
       8: ldc2_w        #8                  // double 1.2d
      11: invokestatic  #10                 // Method com/google/common/collect/Hashing.closedTableSize:(ID)I
      14: istore_2
      15: iload_2
      16: iconst_1
      17: isub
      18: istore_3
      19: iload_2
      20: invokestatic  #11                 // Method com/google/common/collect/ImmutableMapEntry.createEntryArray:(I)[Lcom/google/common/collect/ImmutableMapEntry;
      23: astore        4
      25: iload_2
      26: invokestatic  #11                 // Method com/google/common/collect/ImmutableMapEntry.createEntryArray:(I)[Lcom/google/common/collect/ImmutableMapEntry;
      29: astore        5
      31: iload_0
      32: aload_1
      33: arraylength
      34: if_icmpne     41
      37: aload_1
      38: goto          45
      41: iload_0
      42: invokestatic  #11                 // Method com/google/common/collect/ImmutableMapEntry.createEntryArray:(I)[Lcom/google/common/collect/ImmutableMapEntry;
      45: astore        6
      47: iconst_0
      48: istore        7
      50: iconst_0
      51: istore        8
      53: iload         8
      55: iload_0
      56: if_icmpge     249
      59: aload_1
      60: iload         8
      62: aaload
      63: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      66: checkcast     #13                 // class java/util/Map$Entry
      69: astore        9
      71: aload         9
      73: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      78: astore        10
      80: aload         9
      82: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      87: astore        11
      89: aload         10
      91: aload         11
      93: invokestatic  #16                 // Method com/google/common/collect/CollectPreconditions.checkEntryNotNull:(Ljava/lang/Object;Ljava/lang/Object;)V
      96: aload         10
      98: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
     101: istore        12
     103: aload         11
     105: invokevirtual #17                 // Method java/lang/Object.hashCode:()I
     108: istore        13
     110: iload         12
     112: invokestatic  #18                 // Method com/google/common/collect/Hashing.smear:(I)I
     115: iload_3
     116: iand
     117: istore        14
     119: iload         13
     121: invokestatic  #18                 // Method com/google/common/collect/Hashing.smear:(I)I
     124: iload_3
     125: iand
     126: istore        15
     128: aload         4
     130: iload         14
     132: aaload
     133: astore        16
     135: aload         5
     137: iload         15
     139: aaload
     140: astore        17
     142: aload         10
     144: aload         11
     146: aload         16
     148: iconst_1
     149: invokestatic  #19                 // Method com/google/common/collect/RegularImmutableMap.checkNoConflictInKeyBucket:(Ljava/lang/Object;Ljava/lang/Object;Lcom/google/common/collect/ImmutableMapEntry;Z)Lcom/google/common/collect/ImmutableMapEntry;
     152: pop
     153: aload         11
     155: aload         9
     157: aload         17
     159: invokestatic  #20                 // Method checkNoConflictInValueBucket:(Ljava/lang/Object;Ljava/util/Map$Entry;Lcom/google/common/collect/ImmutableMapEntry;)V
     162: goto          173
     165: astore        18
     167: iload_0
     168: aload_1
     169: invokestatic  #22                 // Method com/google/common/collect/JdkBackedImmutableBiMap.create:(I[Ljava/util/Map$Entry;)Lcom/google/common/collect/ImmutableBiMap;
     172: areturn
     173: aload         17
     175: ifnonnull     195
     178: aload         16
     180: ifnonnull     195
     183: aload         9
     185: aload         10
     187: aload         11
     189: invokestatic  #23                 // Method com/google/common/collect/RegularImmutableMap.makeImmutable:(Ljava/util/Map$Entry;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMapEntry;
     192: goto          210
     195: new           #24                 // class com/google/common/collect/ImmutableMapEntry$NonTerminalImmutableBiMapEntry
     198: dup
     199: aload         10
     201: aload         11
     203: aload         16
     205: aload         17
     207: invokespecial #25                 // Method com/google/common/collect/ImmutableMapEntry$NonTerminalImmutableBiMapEntry."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lcom/google/common/collect/ImmutableMapEntry;Lcom/google/common/collect/ImmutableMapEntry;)V
     210: astore        18
     212: aload         4
     214: iload         14
     216: aload         18
     218: aastore
     219: aload         5
     221: iload         15
     223: aload         18
     225: aastore
     226: aload         6
     228: iload         8
     230: aload         18
     232: aastore
     233: iload         7
     235: iload         12
     237: iload         13
     239: ixor
     240: iadd
     241: istore        7
     243: iinc          8, 1
     246: goto          53
     249: new           #7                  // class com/google/common/collect/RegularImmutableBiMap
     252: dup
     253: aload         4
     255: aload         5
     257: aload         6
     259: iload_3
     260: iload         7
     262: invokespecial #26                 // Method "<init>":([Lcom/google/common/collect/ImmutableMapEntry;[Lcom/google/common/collect/ImmutableMapEntry;[Ljava/util/Map$Entry;II)V
     265: areturn
    Exception table:
       from    to  target type
         142   162   165   Class com/google/common/collect/RegularImmutableMap$BucketOverflowException

  private com.google.common.collect.RegularImmutableBiMap(com.google.common.collect.ImmutableMapEntry<K, V>[], com.google.common.collect.ImmutableMapEntry<K, V>[], java.util.Map$Entry<K, V>[], int, int);
    Code:
       0: aload_0
       1: invokespecial #27                 // Method com/google/common/collect/ImmutableBiMap."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #28                 // Field keyTable:[Lcom/google/common/collect/ImmutableMapEntry;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field valueTable:[Lcom/google/common/collect/ImmutableMapEntry;
      14: aload_0
      15: aload_3
      16: putfield      #29                 // Field entries:[Ljava/util/Map$Entry;
      19: aload_0
      20: iload         4
      22: putfield      #3                  // Field mask:I
      25: aload_0
      26: iload         5
      28: putfield      #2                  // Field hashCode:I
      31: return

  private static void checkNoConflictInValueBucket(java.lang.Object, java.util.Map$Entry<?, ?>, com.google.common.collect.ImmutableMapEntry<?, ?>) throws com.google.common.collect.RegularImmutableMap$BucketOverflowException;
    Code:
       0: iconst_0
       1: istore_3
       2: aload_2
       3: ifnull        54
       6: aload_0
       7: aload_2
       8: invokevirtual #30                 // Method com/google/common/collect/ImmutableMapEntry.getValue:()Ljava/lang/Object;
      11: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ldc           #32                 // String value
      24: aload_1
      25: aload_2
      26: invokestatic  #33                 // Method checkNoConflict:(ZLjava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: iinc          3, 1
      32: iload_3
      33: bipush        8
      35: if_icmple     46
      38: new           #21                 // class com/google/common/collect/RegularImmutableMap$BucketOverflowException
      41: dup
      42: invokespecial #34                 // Method com/google/common/collect/RegularImmutableMap$BucketOverflowException."<init>":()V
      45: athrow
      46: aload_2
      47: invokevirtual #35                 // Method com/google/common/collect/ImmutableMapEntry.getNextInValueBucket:()Lcom/google/common/collect/ImmutableMapEntry;
      50: astore_2
      51: goto          2
      54: return

  public V get(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #28                 // Field keyTable:[Lcom/google/common/collect/ImmutableMapEntry;
       5: aload_0
       6: getfield      #3                  // Field mask:I
       9: invokestatic  #36                 // Method com/google/common/collect/RegularImmutableMap.get:(Ljava/lang/Object;[Lcom/google/common/collect/ImmutableMapEntry;I)Ljava/lang/Object;
      12: areturn

  com.google.common.collect.ImmutableSet<java.util.Map$Entry<K, V>> createEntrySet();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isEmpty:()Z
       4: ifeq          13
       7: invokestatic  #38                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      10: goto          25
      13: new           #39                 // class com/google/common/collect/ImmutableMapEntrySet$RegularEntrySet
      16: dup
      17: aload_0
      18: aload_0
      19: getfield      #29                 // Field entries:[Ljava/util/Map$Entry;
      22: invokespecial #40                 // Method com/google/common/collect/ImmutableMapEntrySet$RegularEntrySet."<init>":(Lcom/google/common/collect/ImmutableMap;[Ljava/util/Map$Entry;)V
      25: areturn

  com.google.common.collect.ImmutableSet<K> createKeySet();
    Code:
       0: new           #41                 // class com/google/common/collect/ImmutableMapKeySet
       3: dup
       4: aload_0
       5: invokespecial #42                 // Method com/google/common/collect/ImmutableMapKeySet."<init>":(Lcom/google/common/collect/ImmutableMap;)V
       8: areturn

  public void forEach(java.util.function.BiConsumer<? super K, ? super V>);
    Code:
       0: aload_1
       1: invokestatic  #43                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: getfield      #29                 // Field entries:[Ljava/util/Map$Entry;
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     54
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload_1
      29: aload         5
      31: invokeinterface #14,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      36: aload         5
      38: invokeinterface #15,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      43: invokeinterface #44,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      48: iinc          4, 1
      51: goto          16
      54: return

  boolean isHashCodeFast();
    Code:
       0: iconst_1
       1: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hashCode:I
       4: ireturn

  boolean isPartialView();
    Code:
       0: iconst_0
       1: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #29                 // Field entries:[Ljava/util/Map$Entry;
       4: arraylength
       5: ireturn

  public com.google.common.collect.ImmutableBiMap<V, K> inverse();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method isEmpty:()Z
       4: ifeq          11
       7: invokestatic  #45                 // Method com/google/common/collect/ImmutableBiMap.of:()Lcom/google/common/collect/ImmutableBiMap;
      10: areturn
      11: aload_0
      12: getfield      #46                 // Field inverse:Lcom/google/common/collect/ImmutableBiMap;
      15: astore_1
      16: aload_1
      17: ifnonnull     37
      20: aload_0
      21: new           #47                 // class com/google/common/collect/RegularImmutableBiMap$Inverse
      24: dup
      25: aload_0
      26: aconst_null
      27: invokespecial #48                 // Method com/google/common/collect/RegularImmutableBiMap$Inverse."<init>":(Lcom/google/common/collect/RegularImmutableBiMap;Lcom/google/common/collect/RegularImmutableBiMap$1;)V
      30: dup_x1
      31: putfield      #46                 // Field inverse:Lcom/google/common/collect/ImmutableBiMap;
      34: goto          38
      37: aload_1
      38: areturn

  public com.google.common.collect.BiMap inverse();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method inverse:()Lcom/google/common/collect/ImmutableBiMap;
       4: areturn

  static com.google.common.collect.ImmutableMapEntry[] access$100(com.google.common.collect.RegularImmutableBiMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field valueTable:[Lcom/google/common/collect/ImmutableMapEntry;
       4: areturn

  static int access$200(com.google.common.collect.RegularImmutableBiMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field mask:I
       4: ireturn

  static int access$300(com.google.common.collect.RegularImmutableBiMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field hashCode:I
       4: ireturn

  static {};
    Code:
       0: new           #7                  // class com/google/common/collect/RegularImmutableBiMap
       3: dup
       4: aconst_null
       5: aconst_null
       6: getstatic     #50                 // Field com/google/common/collect/ImmutableMap.EMPTY_ENTRY_ARRAY:[Ljava/util/Map$Entry;
       9: iconst_0
      10: iconst_0
      11: invokespecial #26                 // Method "<init>":([Lcom/google/common/collect/ImmutableMapEntry;[Lcom/google/common/collect/ImmutableMapEntry;[Ljava/util/Map$Entry;II)V
      14: putstatic     #51                 // Field EMPTY:Lcom/google/common/collect/RegularImmutableBiMap;
      17: return
}
