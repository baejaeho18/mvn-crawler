Compiled from "StandardTable.java"
class com.google.common.collect.StandardTable$Row extends com.google.common.collect.Maps$IteratorBasedAbstractMap<C, V> {
  final R rowKey;

  java.util.Map<C, V> backingRowMap;

  final com.google.common.collect.StandardTable this$0;

  com.google.common.collect.StandardTable$Row(R);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
       5: aload_0
       6: invokespecial #2                  // Method com/google/common/collect/Maps$IteratorBasedAbstractMap."<init>":()V
       9: aload_0
      10: aload_2
      11: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      14: putfield      #4                  // Field rowKey:Ljava/lang/Object;
      17: return

  final void updateBackingRowMapField();
    Code:
       0: aload_0
       1: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       4: ifnull        38
       7: aload_0
       8: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          46
      19: aload_0
      20: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
      23: getfield      #7                  // Field com/google/common/collect/StandardTable.backingMap:Ljava/util/Map;
      26: aload_0
      27: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      30: invokeinterface #8,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      35: ifeq          46
      38: aload_0
      39: aload_0
      40: invokevirtual #9                  // Method computeBackingRowMap:()Ljava/util/Map;
      43: putfield      #5                  // Field backingRowMap:Ljava/util/Map;
      46: return

  java.util.Map<C, V> computeBackingRowMap();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
       4: getfield      #7                  // Field com/google/common/collect/StandardTable.backingMap:Ljava/util/Map;
       7: aload_0
       8: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      11: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #11                 // class java/util/Map
      19: areturn

  void maintainEmptyInvariant();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_0
       5: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       8: ifnull        45
      11: aload_0
      12: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      15: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      20: ifeq          45
      23: aload_0
      24: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
      27: getfield      #7                  // Field com/google/common/collect/StandardTable.backingMap:Ljava/util/Map;
      30: aload_0
      31: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      34: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_0
      41: aconst_null
      42: putfield      #5                  // Field backingRowMap:Ljava/util/Map;
      45: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_1
       5: ifnull        30
       8: aload_0
       9: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      12: ifnull        30
      15: aload_0
      16: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      19: aload_1
      20: invokestatic  #14                 // Method com/google/common/collect/Maps.safeContainsKey:(Ljava/util/Map;Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_1
       5: ifnull        26
       8: aload_0
       9: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      12: ifnull        26
      15: aload_0
      16: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      19: aload_1
      20: invokestatic  #15                 // Method com/google/common/collect/Maps.safeGet:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      23: goto          27
      26: aconst_null
      27: areturn

  public V put(C, V);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      14: ifnull        41
      17: aload_0
      18: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      21: invokeinterface #6,  1            // InterfaceMethod java/util/Map.isEmpty:()Z
      26: ifne          41
      29: aload_0
      30: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      33: aload_1
      34: aload_2
      35: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: areturn
      41: aload_0
      42: getfield      #1                  // Field this$0:Lcom/google/common/collect/StandardTable;
      45: aload_0
      46: getfield      #4                  // Field rowKey:Ljava/lang/Object;
      49: aload_1
      50: aload_2
      51: invokevirtual #17                 // Method com/google/common/collect/StandardTable.put:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_0
       5: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      17: aload_1
      18: invokestatic  #18                 // Method com/google/common/collect/Maps.safeRemove:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;
      21: astore_2
      22: aload_0
      23: invokevirtual #19                 // Method maintainEmptyInvariant:()V
      26: aload_2
      27: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_0
       5: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       8: ifnull        20
      11: aload_0
      12: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      15: invokeinterface #20,  1           // InterfaceMethod java/util/Map.clear:()V
      20: aload_0
      21: invokevirtual #19                 // Method maintainEmptyInvariant:()V
      24: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_0
       5: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       8: ifnonnull     15
      11: iconst_0
      12: goto          24
      15: aload_0
      16: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Map.size:()I
      24: ireturn

  java.util.Iterator<java.util.Map$Entry<C, V>> entryIterator();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_0
       5: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       8: ifnonnull     15
      11: invokestatic  #22                 // Method com/google/common/collect/Iterators.emptyModifiableIterator:()Ljava/util/Iterator;
      14: areturn
      15: aload_0
      16: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      19: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #24,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: new           #25                 // class com/google/common/collect/StandardTable$Row$1
      33: dup
      34: aload_0
      35: aload_1
      36: invokespecial #26                 // Method com/google/common/collect/StandardTable$Row$1."<init>":(Lcom/google/common/collect/StandardTable$Row;Ljava/util/Iterator;)V
      39: areturn

  java.util.Spliterator<java.util.Map$Entry<C, V>> entrySpliterator();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method updateBackingRowMapField:()V
       4: aload_0
       5: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
       8: ifnonnull     15
      11: invokestatic  #27                 // Method java/util/Spliterators.emptySpliterator:()Ljava/util/Spliterator;
      14: areturn
      15: aload_0
      16: getfield      #5                  // Field backingRowMap:Ljava/util/Map;
      19: invokeinterface #23,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: invokeinterface #28,  1           // InterfaceMethod java/util/Set.spliterator:()Ljava/util/Spliterator;
      29: aload_0
      30: invokedynamic #29,  0             // InvokeDynamic #0:apply:(Lcom/google/common/collect/StandardTable$Row;)Ljava/util/function/Function;
      35: invokestatic  #30                 // Method com/google/common/collect/CollectSpliterators.map:(Ljava/util/Spliterator;Ljava/util/function/Function;)Ljava/util/Spliterator;
      38: areturn

  java.util.Map$Entry<C, V> wrapEntry(java.util.Map$Entry<C, V>);
    Code:
       0: new           #31                 // class com/google/common/collect/StandardTable$Row$2
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #32                 // Method com/google/common/collect/StandardTable$Row$2."<init>":(Lcom/google/common/collect/StandardTable$Row;Ljava/util/Map$Entry;)V
       9: areturn
}
