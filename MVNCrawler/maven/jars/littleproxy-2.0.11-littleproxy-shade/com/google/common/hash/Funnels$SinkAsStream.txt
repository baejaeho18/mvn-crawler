Compiled from "Funnels.java"
class com.google.common.hash.Funnels$SinkAsStream extends java.io.OutputStream {
  final com.google.common.hash.PrimitiveSink sink;

  com.google.common.hash.Funnels$SinkAsStream(com.google.common.hash.PrimitiveSink);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class com/google/common/hash/PrimitiveSink
      12: putfield      #4                  // Field sink:Lcom/google/common/hash/PrimitiveSink;
      15: return

  public void write(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sink:Lcom/google/common/hash/PrimitiveSink;
       4: iload_1
       5: i2b
       6: invokeinterface #5,  2            // InterfaceMethod com/google/common/hash/PrimitiveSink.putByte:(B)Lcom/google/common/hash/PrimitiveSink;
      11: pop
      12: return

  public void write(byte[]);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sink:Lcom/google/common/hash/PrimitiveSink;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod com/google/common/hash/PrimitiveSink.putBytes:([B)Lcom/google/common/hash/PrimitiveSink;
      10: pop
      11: return

  public void write(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sink:Lcom/google/common/hash/PrimitiveSink;
       4: aload_1
       5: iload_2
       6: iload_3
       7: invokeinterface #7,  4            // InterfaceMethod com/google/common/hash/PrimitiveSink.putBytes:([BII)Lcom/google/common/hash/PrimitiveSink;
      12: pop
      13: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sink:Lcom/google/common/hash/PrimitiveSink;
       4: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
       7: astore_1
       8: bipush        24
      10: aload_1
      11: invokestatic  #8                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      14: invokevirtual #9                  // Method java/lang/String.length:()I
      17: iadd
      18: new           #10                 // class java/lang/StringBuilder
      21: dup_x1
      22: swap
      23: invokespecial #11                 // Method java/lang/StringBuilder."<init>":(I)V
      26: ldc           #12                 // String Funnels.asOutputStream(
      28: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_1
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #14                 // String )
      37: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn
}
