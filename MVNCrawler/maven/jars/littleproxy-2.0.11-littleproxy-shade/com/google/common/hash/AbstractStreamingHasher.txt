Compiled from "AbstractStreamingHasher.java"
abstract class com.google.common.hash.AbstractStreamingHasher extends com.google.common.hash.AbstractHasher {
  private final java.nio.ByteBuffer buffer;

  private final int bufferSize;

  private final int chunkSize;

  protected com.google.common.hash.AbstractStreamingHasher(int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: invokespecial #1                  // Method "<init>":(II)V
       6: return

  protected com.google.common.hash.AbstractStreamingHasher(int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/hash/AbstractHasher."<init>":()V
       4: iload_2
       5: iload_1
       6: irem
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkArgument:(Z)V
      18: aload_0
      19: iload_2
      20: bipush        7
      22: iadd
      23: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      26: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      29: invokevirtual #6                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      32: putfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      35: aload_0
      36: iload_2
      37: putfield      #8                  // Field bufferSize:I
      40: aload_0
      41: iload_1
      42: putfield      #9                  // Field chunkSize:I
      45: return

  protected abstract void process(java.nio.ByteBuffer);

  protected void processRemaining(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:()I
       5: invokestatic  #11                 // Method com/google/common/hash/Java8Compatibility.position:(Ljava/nio/Buffer;I)V
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field chunkSize:I
      13: bipush        7
      15: iadd
      16: invokestatic  #12                 // Method com/google/common/hash/Java8Compatibility.limit:(Ljava/nio/Buffer;I)V
      19: aload_1
      20: invokevirtual #13                 // Method java/nio/ByteBuffer.position:()I
      23: aload_0
      24: getfield      #9                  // Field chunkSize:I
      27: if_icmpge     39
      30: aload_1
      31: lconst_0
      32: invokevirtual #14                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
      35: pop
      36: goto          19
      39: aload_1
      40: aload_0
      41: getfield      #9                  // Field chunkSize:I
      44: invokestatic  #12                 // Method com/google/common/hash/Java8Compatibility.limit:(Ljava/nio/Buffer;I)V
      47: aload_1
      48: invokestatic  #15                 // Method com/google/common/hash/Java8Compatibility.flip:(Ljava/nio/Buffer;)V
      51: aload_0
      52: aload_1
      53: invokevirtual #16                 // Method process:(Ljava/nio/ByteBuffer;)V
      56: return

  public final com.google.common.hash.Hasher putBytes(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokestatic  #17                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
       7: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      10: invokevirtual #6                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      13: invokespecial #18                 // Method putBytesInternal:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/Hasher;
      16: areturn

  public final com.google.common.hash.Hasher putBytes(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
       4: astore_2
       5: aload_1
       6: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
       9: invokevirtual #6                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      12: pop
      13: aload_0
      14: aload_1
      15: invokespecial #18                 // Method putBytesInternal:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/Hasher;
      18: astore_3
      19: aload_1
      20: aload_2
      21: invokevirtual #6                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      24: pop
      25: aload_3
      26: areturn
      27: astore        4
      29: aload_1
      30: aload_2
      31: invokevirtual #6                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      34: pop
      35: aload         4
      37: athrow
    Exception table:
       from    to  target type
           5    19    27   any
          27    29    27   any

  private com.google.common.hash.Hasher putBytesInternal(java.nio.ByteBuffer);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
       4: aload_0
       5: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       8: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      11: if_icmpgt     29
      14: aload_0
      15: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      18: aload_1
      19: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      22: pop
      23: aload_0
      24: invokespecial #22                 // Method munchIfFull:()V
      27: aload_0
      28: areturn
      29: aload_0
      30: getfield      #8                  // Field bufferSize:I
      33: aload_0
      34: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      37: invokevirtual #13                 // Method java/nio/ByteBuffer.position:()I
      40: isub
      41: istore_2
      42: iconst_0
      43: istore_3
      44: iload_3
      45: iload_2
      46: if_icmpge     67
      49: aload_0
      50: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      53: aload_1
      54: invokevirtual #23                 // Method java/nio/ByteBuffer.get:()B
      57: invokevirtual #24                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      60: pop
      61: iinc          3, 1
      64: goto          44
      67: aload_0
      68: invokespecial #25                 // Method munch:()V
      71: aload_1
      72: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      75: aload_0
      76: getfield      #9                  // Field chunkSize:I
      79: if_icmplt     90
      82: aload_0
      83: aload_1
      84: invokevirtual #16                 // Method process:(Ljava/nio/ByteBuffer;)V
      87: goto          71
      90: aload_0
      91: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      94: aload_1
      95: invokevirtual #21                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      98: pop
      99: aload_0
     100: areturn

  public final com.google.common.hash.Hasher putByte(byte);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #24                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
       8: pop
       9: aload_0
      10: invokespecial #22                 // Method munchIfFull:()V
      13: aload_0
      14: areturn

  public final com.google.common.hash.Hasher putShort(short);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #26                 // Method java/nio/ByteBuffer.putShort:(S)Ljava/nio/ByteBuffer;
       8: pop
       9: aload_0
      10: invokespecial #22                 // Method munchIfFull:()V
      13: aload_0
      14: areturn

  public final com.google.common.hash.Hasher putChar(char);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #27                 // Method java/nio/ByteBuffer.putChar:(C)Ljava/nio/ByteBuffer;
       8: pop
       9: aload_0
      10: invokespecial #22                 // Method munchIfFull:()V
      13: aload_0
      14: areturn

  public final com.google.common.hash.Hasher putInt(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #28                 // Method java/nio/ByteBuffer.putInt:(I)Ljava/nio/ByteBuffer;
       8: pop
       9: aload_0
      10: invokespecial #22                 // Method munchIfFull:()V
      13: aload_0
      14: areturn

  public final com.google.common.hash.Hasher putLong(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: lload_1
       5: invokevirtual #14                 // Method java/nio/ByteBuffer.putLong:(J)Ljava/nio/ByteBuffer;
       8: pop
       9: aload_0
      10: invokespecial #22                 // Method munchIfFull:()V
      13: aload_0
      14: areturn

  public final com.google.common.hash.HashCode hash();
    Code:
       0: aload_0
       1: invokespecial #25                 // Method munch:()V
       4: aload_0
       5: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       8: invokestatic  #15                 // Method com/google/common/hash/Java8Compatibility.flip:(Ljava/nio/Buffer;)V
      11: aload_0
      12: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      15: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      18: ifle          43
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      26: invokevirtual #29                 // Method processRemaining:(Ljava/nio/ByteBuffer;)V
      29: aload_0
      30: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      33: aload_0
      34: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      37: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:()I
      40: invokestatic  #11                 // Method com/google/common/hash/Java8Compatibility.position:(Ljava/nio/Buffer;I)V
      43: aload_0
      44: invokevirtual #30                 // Method makeHash:()Lcom/google/common/hash/HashCode;
      47: areturn

  protected abstract com.google.common.hash.HashCode makeHash();

  private void munchIfFull();
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
       7: bipush        8
       9: if_icmpge     16
      12: aload_0
      13: invokespecial #25                 // Method munch:()V
      16: return

  private void munch();
    Code:
       0: aload_0
       1: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokestatic  #15                 // Method com/google/common/hash/Java8Compatibility.flip:(Ljava/nio/Buffer;)V
       7: aload_0
       8: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #20                 // Method java/nio/ByteBuffer.remaining:()I
      14: aload_0
      15: getfield      #9                  // Field chunkSize:I
      18: if_icmplt     32
      21: aload_0
      22: aload_0
      23: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      26: invokevirtual #16                 // Method process:(Ljava/nio/ByteBuffer;)V
      29: goto          7
      32: aload_0
      33: getfield      #7                  // Field buffer:Ljava/nio/ByteBuffer;
      36: invokevirtual #31                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      39: pop
      40: return

  public com.google.common.hash.PrimitiveSink putChar(char);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #32                 // Method putChar:(C)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putLong(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #33                 // Method putLong:(J)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #34                 // Method putInt:(I)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putShort(short);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #35                 // Method putShort:(S)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putBytes(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method putBytes:(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/Hasher;
       5: areturn

  public com.google.common.hash.PrimitiveSink putBytes(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #37                 // Method putBytes:([BII)Lcom/google/common/hash/Hasher;
       7: areturn

  public com.google.common.hash.PrimitiveSink putByte(byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #38                 // Method putByte:(B)Lcom/google/common/hash/Hasher;
       5: areturn
}
