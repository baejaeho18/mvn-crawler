Compiled from "AbstractScheduledService.java"
final class com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$SupplantableFuture implements com.google.common.util.concurrent.AbstractScheduledService$Cancellable {
  private final java.util.concurrent.locks.ReentrantLock lock;

  private java.util.concurrent.Future<java.lang.Void> currentFuture;

  com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$SupplantableFuture(java.util.concurrent.locks.ReentrantLock, java.util.concurrent.Future<java.lang.Void>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field currentFuture:Ljava/util/concurrent/Future;
      14: return

  public void cancel(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #4                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #1                  // Field currentFuture:Ljava/util/concurrent/Future;
      11: iload_1
      12: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: aload_0
      19: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      22: invokevirtual #6                  // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      25: goto          38
      28: astore_2
      29: aload_0
      30: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      33: invokevirtual #6                  // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      36: aload_2
      37: athrow
      38: return
    Exception table:
       from    to  target type
           7    18    28   any

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #4                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #1                  // Field currentFuture:Ljava/util/concurrent/Future;
      11: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      16: istore_1
      17: aload_0
      18: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      21: invokevirtual #6                  // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      24: iload_1
      25: ireturn
      26: astore_2
      27: aload_0
      28: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      31: invokevirtual #6                  // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      34: aload_2
      35: athrow
    Exception table:
       from    to  target type
           7    17    26   any

  static java.util.concurrent.Future access$800(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$SupplantableFuture);
    Code:
       0: aload_0
       1: getfield      #1                  // Field currentFuture:Ljava/util/concurrent/Future;
       4: areturn

  static java.util.concurrent.Future access$802(com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$SupplantableFuture, java.util.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field currentFuture:Ljava/util/concurrent/Future;
       6: areturn
}
