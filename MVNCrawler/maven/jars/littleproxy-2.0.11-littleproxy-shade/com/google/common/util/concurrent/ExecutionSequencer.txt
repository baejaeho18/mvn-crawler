Compiled from "ExecutionSequencer.java"
public final class com.google.common.util.concurrent.ExecutionSequencer {
  private final java.util.concurrent.atomic.AtomicReference<com.google.common.util.concurrent.ListenableFuture<java.lang.Void>> ref;

  private com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue latestTaskQueue;

  private com.google.common.util.concurrent.ExecutionSequencer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: invokestatic  #4                  // Method com/google/common/util/concurrent/Futures.immediateVoidFuture:()Lcom/google/common/util/concurrent/ListenableFuture;
      12: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      15: putfield      #6                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
      18: aload_0
      19: new           #7                  // class com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue
      22: dup
      23: aconst_null
      24: invokespecial #8                  // Method com/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue."<init>":(Lcom/google/common/util/concurrent/ExecutionSequencer$1;)V
      27: putfield      #1                  // Field latestTaskQueue:Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;
      30: return

  public static com.google.common.util.concurrent.ExecutionSequencer create();
    Code:
       0: new           #9                  // class com/google/common/util/concurrent/ExecutionSequencer
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: areturn

  public <T> com.google.common.util.concurrent.ListenableFuture<T> submit(java.util.concurrent.Callable<T>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: new           #12                 // class com/google/common/util/concurrent/ExecutionSequencer$1
      14: dup
      15: aload_0
      16: aload_1
      17: invokespecial #13                 // Method com/google/common/util/concurrent/ExecutionSequencer$1."<init>":(Lcom/google/common/util/concurrent/ExecutionSequencer;Ljava/util/concurrent/Callable;)V
      20: aload_2
      21: invokevirtual #14                 // Method submitAsync:(Lcom/google/common/util/concurrent/AsyncCallable;Ljava/util/concurrent/Executor;)Lcom/google/common/util/concurrent/ListenableFuture;
      24: areturn

  public <T> com.google.common.util.concurrent.ListenableFuture<T> submitAsync(com.google.common.util.concurrent.AsyncCallable<T>, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: new           #15                 // class com/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor
      13: dup
      14: aload_2
      15: aload_0
      16: aconst_null
      17: invokespecial #16                 // Method com/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor."<init>":(Ljava/util/concurrent/Executor;Lcom/google/common/util/concurrent/ExecutionSequencer;Lcom/google/common/util/concurrent/ExecutionSequencer$1;)V
      20: astore_3
      21: new           #17                 // class com/google/common/util/concurrent/ExecutionSequencer$2
      24: dup
      25: aload_0
      26: aload_3
      27: aload_1
      28: invokespecial #18                 // Method com/google/common/util/concurrent/ExecutionSequencer$2."<init>":(Lcom/google/common/util/concurrent/ExecutionSequencer;Lcom/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor;Lcom/google/common/util/concurrent/AsyncCallable;)V
      31: astore        4
      33: invokestatic  #19                 // Method com/google/common/util/concurrent/SettableFuture.create:()Lcom/google/common/util/concurrent/SettableFuture;
      36: astore        5
      38: aload_0
      39: getfield      #6                  // Field ref:Ljava/util/concurrent/atomic/AtomicReference;
      42: aload         5
      44: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #21                 // class com/google/common/util/concurrent/ListenableFuture
      50: astore        6
      52: aload         4
      54: invokestatic  #22                 // Method com/google/common/util/concurrent/TrustedListenableFutureTask.create:(Lcom/google/common/util/concurrent/AsyncCallable;)Lcom/google/common/util/concurrent/TrustedListenableFutureTask;
      57: astore        7
      59: aload         6
      61: aload         7
      63: aload_3
      64: invokeinterface #23,  3           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      69: aload         7
      71: invokestatic  #24                 // Method com/google/common/util/concurrent/Futures.nonCancellationPropagating:(Lcom/google/common/util/concurrent/ListenableFuture;)Lcom/google/common/util/concurrent/ListenableFuture;
      74: astore        8
      76: aload         7
      78: aload         5
      80: aload         6
      82: aload         8
      84: aload_3
      85: invokedynamic #25,  0             // InvokeDynamic #0:run:(Lcom/google/common/util/concurrent/TrustedListenableFutureTask;Lcom/google/common/util/concurrent/SettableFuture;Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/ListenableFuture;Lcom/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor;)Ljava/lang/Runnable;
      90: astore        9
      92: aload         8
      94: aload         9
      96: invokestatic  #26                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
      99: invokeinterface #23,  3           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
     104: aload         7
     106: aload         9
     108: invokestatic  #26                 // Method com/google/common/util/concurrent/MoreExecutors.directExecutor:()Ljava/util/concurrent/Executor;
     111: invokevirtual #27                 // Method com/google/common/util/concurrent/TrustedListenableFutureTask.addListener:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
     114: aload         8
     116: areturn

  private static void lambda$submitAsync$0(com.google.common.util.concurrent.TrustedListenableFutureTask, com.google.common.util.concurrent.SettableFuture, com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.ExecutionSequencer$TaskNonReentrantExecutor);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method com/google/common/util/concurrent/TrustedListenableFutureTask.isDone:()Z
       4: ifeq          16
       7: aload_1
       8: aload_2
       9: invokevirtual #29                 // Method com/google/common/util/concurrent/SettableFuture.setFuture:(Lcom/google/common/util/concurrent/ListenableFuture;)Z
      12: pop
      13: goto          39
      16: aload_3
      17: invokeinterface #30,  1           // InterfaceMethod com/google/common/util/concurrent/ListenableFuture.isCancelled:()Z
      22: ifeq          39
      25: aload         4
      27: invokestatic  #31                 // Method com/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor.access$400:(Lcom/google/common/util/concurrent/ExecutionSequencer$TaskNonReentrantExecutor;)Z
      30: ifeq          39
      33: aload_0
      34: iconst_0
      35: invokevirtual #32                 // Method com/google/common/util/concurrent/TrustedListenableFutureTask.cancel:(Z)Z
      38: pop
      39: return

  static com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue access$300(com.google.common.util.concurrent.ExecutionSequencer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field latestTaskQueue:Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;
       4: areturn

  static com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue access$302(com.google.common.util.concurrent.ExecutionSequencer, com.google.common.util.concurrent.ExecutionSequencer$ThreadConfinedTaskQueue);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #1                  // Field latestTaskQueue:Lcom/google/common/util/concurrent/ExecutionSequencer$ThreadConfinedTaskQueue;
       6: areturn
}
