Compiled from "InterruptibleTask.java"
final class com.google.common.util.concurrent.InterruptibleTask$Blocker extends java.util.concurrent.locks.AbstractOwnableSynchronizer implements java.lang.Runnable {
  private final com.google.common.util.concurrent.InterruptibleTask<?> task;

  private com.google.common.util.concurrent.InterruptibleTask$Blocker(com.google.common.util.concurrent.InterruptibleTask<?>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/util/concurrent/locks/AbstractOwnableSynchronizer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field task:Lcom/google/common/util/concurrent/InterruptibleTask;
       9: return

  public void run();
    Code:
       0: return

  private void setOwner(java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread:(Ljava/lang/Thread;)V
       5: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field task:Lcom/google/common/util/concurrent/InterruptibleTask;
       4: invokevirtual #6                  // Method com/google/common/util/concurrent/InterruptibleTask.toString:()Ljava/lang/String;
       7: areturn

  com.google.common.util.concurrent.InterruptibleTask$Blocker(com.google.common.util.concurrent.InterruptibleTask, com.google.common.util.concurrent.InterruptibleTask$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lcom/google/common/util/concurrent/InterruptibleTask;)V
       5: return

  static void access$200(com.google.common.util.concurrent.InterruptibleTask$Blocker, java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method setOwner:(Ljava/lang/Thread;)V
       5: return
}
