Compiled from "AbstractFuture.java"
final class com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper extends com.google.common.util.concurrent.AbstractFuture$AtomicHelper {
  final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread> waiterThreadUpdater;

  final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter> waiterNextUpdater;

  final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter> waitersUpdater;

  final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener> listenersUpdater;

  final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture, java.lang.Object> valueUpdater;

  com.google.common.util.concurrent.AbstractFuture$SafeAtomicHelper(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread>, java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter>, java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Waiter>, java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture, com.google.common.util.concurrent.AbstractFuture$Listener>, java.util.concurrent.atomic.AtomicReferenceFieldUpdater<com.google.common.util.concurrent.AbstractFuture, java.lang.Object>);
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method com/google/common/util/concurrent/AbstractFuture$AtomicHelper."<init>":(Lcom/google/common/util/concurrent/AbstractFuture$1;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field waiterThreadUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: aload_2
      12: putfield      #3                  // Field waiterNextUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: aload_3
      17: putfield      #4                  // Field waitersUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      20: aload_0
      21: aload         4
      23: putfield      #5                  // Field listenersUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      26: aload_0
      27: aload         5
      29: putfield      #6                  // Field valueUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: return

  void putThread(com.google.common.util.concurrent.AbstractFuture$Waiter, java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #2                  // Field waiterThreadUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  void putNext(com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field waiterNextUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
       9: return

  boolean casWaiters(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Waiter, com.google.common.util.concurrent.AbstractFuture$Waiter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field waitersUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  boolean casListeners(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Listener, com.google.common.util.concurrent.AbstractFuture$Listener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listenersUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn

  com.google.common.util.concurrent.AbstractFuture$Listener gasListeners(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Listener);
    Code:
       0: aload_0
       1: getfield      #5                  // Field listenersUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #10                 // class com/google/common/util/concurrent/AbstractFuture$Listener
      12: areturn

  com.google.common.util.concurrent.AbstractFuture$Waiter gasWaiters(com.google.common.util.concurrent.AbstractFuture<?>, com.google.common.util.concurrent.AbstractFuture$Waiter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field waitersUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #11                 // class com/google/common/util/concurrent/AbstractFuture$Waiter
      12: areturn

  boolean casValue(com.google.common.util.concurrent.AbstractFuture<?>, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field valueUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      10: ireturn
}
