Compiled from "SelectionKeyUDT.java"
public class com.barchart.udt.nio.SelectionKeyUDT extends java.nio.channels.SelectionKey implements java.lang.Comparable<com.barchart.udt.nio.SelectionKeyUDT> {
  protected static final int HAS_READ;

  protected static final int HAS_WRITE;

  protected static final org.slf4j.Logger log;

  private final com.barchart.udt.nio.ChannelUDT channelUDT;

  private volatile com.barchart.udt.EpollUDT$Opt epollOpt;

  private volatile int interestOps;

  private volatile boolean isValid;

  private volatile int readyOps;

  private volatile int resultIndex;

  private final com.barchart.udt.nio.SelectorUDT selectorUDT;

  protected static com.barchart.udt.EpollUDT$Opt from(int);
    Code:
       0: iload_0
       1: bipush        17
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_1
      13: iload_0
      14: bipush        12
      16: iand
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore_2
      26: iload_1
      27: ifeq          38
      30: iload_2
      31: ifeq          38
      34: getstatic     #1                  // Field com/barchart/udt/EpollUDT$Opt.ALL:Lcom/barchart/udt/EpollUDT$Opt;
      37: areturn
      38: iload_1
      39: ifeq          46
      42: getstatic     #2                  // Field com/barchart/udt/EpollUDT$Opt.ERROR_READ:Lcom/barchart/udt/EpollUDT$Opt;
      45: areturn
      46: iload_2
      47: ifeq          54
      50: getstatic     #3                  // Field com/barchart/udt/EpollUDT$Opt.ERROR_WRITE:Lcom/barchart/udt/EpollUDT$Opt;
      53: areturn
      54: getstatic     #4                  // Field com/barchart/udt/EpollUDT$Opt.ERROR:Lcom/barchart/udt/EpollUDT$Opt;
      57: areturn

  public static final java.lang.String toStringOps(int);
    Code:
       0: bipush        16
       2: iload_0
       3: iand
       4: ifeq          12
       7: bipush        65
       9: goto          14
      12: bipush        45
      14: istore_1
      15: bipush        8
      17: iload_0
      18: iand
      19: ifeq          27
      22: bipush        67
      24: goto          29
      27: bipush        45
      29: istore_2
      30: iconst_1
      31: iload_0
      32: iand
      33: ifeq          41
      36: bipush        82
      38: goto          43
      41: bipush        45
      43: istore_3
      44: iconst_4
      45: iload_0
      46: iand
      47: ifeq          55
      50: bipush        87
      52: goto          57
      55: bipush        45
      57: istore        4
      59: ldc           #5                  // String %c%c%c%c
      61: iconst_4
      62: anewarray     #6                  // class java/lang/Object
      65: dup
      66: iconst_0
      67: iload_1
      68: invokestatic  #7                  // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      71: aastore
      72: dup
      73: iconst_1
      74: iload_2
      75: invokestatic  #7                  // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      78: aastore
      79: dup
      80: iconst_2
      81: iload_3
      82: invokestatic  #7                  // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      85: aastore
      86: dup
      87: iconst_3
      88: iload         4
      90: invokestatic  #7                  // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      93: aastore
      94: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      97: areturn

  protected com.barchart.udt.nio.SelectionKeyUDT(com.barchart.udt.nio.SelectorUDT, com.barchart.udt.nio.ChannelUDT, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/nio/channels/SelectionKey."<init>":()V
       4: aload_0
       5: aload_3
       6: invokespecial #10                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_0
      11: aload_1
      12: putfield      #11                 // Field selectorUDT:Lcom/barchart/udt/nio/SelectorUDT;
      15: aload_0
      16: aload_2
      17: putfield      #12                 // Field channelUDT:Lcom/barchart/udt/nio/ChannelUDT;
      20: aload_0
      21: iconst_1
      22: invokevirtual #13                 // Method makeValid:(Z)V
      25: return

  protected void assertValidKey() throws java.nio.channels.CancelledKeyException;
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isValid:()Z
       4: ifeq          8
       7: return
       8: new           #15                 // class java/nio/channels/CancelledKeyException
      11: dup
      12: invokespecial #16                 // Method java/nio/channels/CancelledKeyException."<init>":()V
      15: athrow

  protected void assertValidOps(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #17                 // Method channel:()Ljava/nio/channels/SelectableChannel;
       5: invokevirtual #18                 // Method java/nio/channels/SelectableChannel.validOps:()I
       8: iconst_m1
       9: ixor
      10: iand
      11: ifeq          41
      14: new           #19                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #20                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #22                 // String invalid interestOps=
      27: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #26                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method isValid:()Z
       4: ifeq          15
       7: aload_0
       8: invokevirtual #27                 // Method selector:()Lcom/barchart/udt/nio/SelectorUDT;
      11: aload_0
      12: invokevirtual #28                 // Method com/barchart/udt/nio/SelectorUDT.cancel:(Lcom/barchart/udt/nio/SelectionKeyUDT;)V
      15: return

  public java.nio.channels.SelectableChannel channel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channelUDT:Lcom/barchart/udt/nio/ChannelUDT;
       4: checkcast     #29                 // class java/nio/channels/SelectableChannel
       7: areturn

  protected com.barchart.udt.nio.ChannelUDT channelUDT();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channelUDT:Lcom/barchart/udt/nio/ChannelUDT;
       4: areturn

  public int compareTo(com.barchart.udt.nio.SelectionKeyUDT);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method socketId:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #30                 // Method socketId:()I
       9: istore_3
      10: iload_2
      11: iload_3
      12: if_icmple     17
      15: iconst_1
      16: ireturn
      17: iload_2
      18: iload_3
      19: if_icmpge     24
      22: iconst_m1
      23: ireturn
      24: iconst_0
      25: ireturn

  protected boolean doRead(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #31                 // Field interestOps:I
       6: istore_3
       7: aload_0
       8: iload_1
       9: putfield      #32                 // Field resultIndex:I
      12: aload_0
      13: getfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
      16: invokevirtual #34                 // Method com/barchart/udt/EpollUDT$Opt.hasRead:()Z
      19: ifne          65
      22: aload_0
      23: invokevirtual #35                 // Method isSocketBroken:()Z
      26: ifeq          48
      29: aload_0
      30: invokevirtual #17                 // Method channel:()Ljava/nio/channels/SelectableChannel;
      33: invokevirtual #18                 // Method java/nio/channels/SelectableChannel.validOps:()I
      36: istore_2
      37: iconst_1
      38: istore        4
      40: aload_0
      41: iload_2
      42: putfield      #36                 // Field readyOps:I
      45: iload         4
      47: ireturn
      48: aload_0
      49: ldc           #37                 // String Unexpected error report.
      51: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
      54: iconst_0
      55: istore        4
      57: aload_0
      58: iload_2
      59: putfield      #36                 // Field readyOps:I
      62: iload         4
      64: ireturn
      65: getstatic     #39                 // Field com/barchart/udt/nio/SelectionKeyUDT$1.$SwitchMap$com$barchart$udt$nio$KindUDT:[I
      68: aload_0
      69: invokevirtual #40                 // Method kindUDT:()Lcom/barchart/udt/nio/KindUDT;
      72: invokevirtual #41                 // Method com/barchart/udt/nio/KindUDT.ordinal:()I
      75: iaload
      76: tableswitch   { // 1 to 3
                     1: 104
                     2: 142
                     3: 142
               default: 178
          }
     104: iload_3
     105: bipush        16
     107: iand
     108: ifeq          125
     111: bipush        16
     113: istore_2
     114: iconst_1
     115: istore        4
     117: aload_0
     118: iload_2
     119: putfield      #36                 // Field readyOps:I
     122: iload         4
     124: ireturn
     125: aload_0
     126: ldc           #42                 // String Ready to ACCEPT while not interested.
     128: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
     131: iconst_0
     132: istore        4
     134: aload_0
     135: iload_2
     136: putfield      #36                 // Field readyOps:I
     139: iload         4
     141: ireturn
     142: iload_3
     143: iconst_1
     144: iand
     145: ifeq          161
     148: iconst_1
     149: istore_2
     150: iconst_1
     151: istore        4
     153: aload_0
     154: iload_2
     155: putfield      #36                 // Field readyOps:I
     158: iload         4
     160: ireturn
     161: aload_0
     162: ldc           #43                 // String Ready to READ while not interested.
     164: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
     167: iconst_0
     168: istore        4
     170: aload_0
     171: iload_2
     172: putfield      #36                 // Field readyOps:I
     175: iload         4
     177: ireturn
     178: aload_0
     179: ldc           #44                 // String Wrong kind.
     181: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
     184: iconst_0
     185: istore        4
     187: aload_0
     188: iload_2
     189: putfield      #36                 // Field readyOps:I
     192: iload         4
     194: ireturn
     195: astore        5
     197: aload_0
     198: iload_2
     199: putfield      #36                 // Field readyOps:I
     202: aload         5
     204: athrow
    Exception table:
       from    to  target type
          12    40   195   any
          48    57   195   any
          65   117   195   any
         125   134   195   any
         142   153   195   any
         161   170   195   any
         178   187   195   any
         195   197   195   any

  protected boolean doWrite(int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #31                 // Field interestOps:I
       6: istore_3
       7: aload_0
       8: getfield      #32                 // Field resultIndex:I
      11: iload_1
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: istore        4
      22: aload_0
      23: getfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
      26: invokevirtual #45                 // Method com/barchart/udt/EpollUDT$Opt.hasWrite:()Z
      29: ifne          111
      32: aload_0
      33: invokevirtual #35                 // Method isSocketBroken:()Z
      36: ifeq          76
      39: aload_0
      40: invokevirtual #17                 // Method channel:()Ljava/nio/channels/SelectableChannel;
      43: invokevirtual #18                 // Method java/nio/channels/SelectableChannel.validOps:()I
      46: istore_2
      47: iconst_1
      48: istore        5
      50: iload         4
      52: ifeq          68
      55: aload_0
      56: dup
      57: getfield      #36                 // Field readyOps:I
      60: iload_2
      61: ior
      62: putfield      #36                 // Field readyOps:I
      65: goto          73
      68: aload_0
      69: iload_2
      70: putfield      #36                 // Field readyOps:I
      73: iload         5
      75: ireturn
      76: aload_0
      77: ldc           #37                 // String Unexpected error report.
      79: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
      82: iconst_0
      83: istore        5
      85: iload         4
      87: ifeq          103
      90: aload_0
      91: dup
      92: getfield      #36                 // Field readyOps:I
      95: iload_2
      96: ior
      97: putfield      #36                 // Field readyOps:I
     100: goto          108
     103: aload_0
     104: iload_2
     105: putfield      #36                 // Field readyOps:I
     108: iload         5
     110: ireturn
     111: getstatic     #39                 // Field com/barchart/udt/nio/SelectionKeyUDT$1.$SwitchMap$com$barchart$udt$nio$KindUDT:[I
     114: aload_0
     115: invokevirtual #40                 // Method kindUDT:()Lcom/barchart/udt/nio/KindUDT;
     118: invokevirtual #41                 // Method com/barchart/udt/nio/KindUDT.ordinal:()I
     121: iaload
     122: tableswitch   { // 1 to 3
                     1: 148
                     2: 183
                     3: 183
               default: 341
          }
     148: aload_0
     149: ldc           #46                 // String Ready to WRITE for acceptor.
     151: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
     154: iconst_0
     155: istore        5
     157: iload         4
     159: ifeq          175
     162: aload_0
     163: dup
     164: getfield      #36                 // Field readyOps:I
     167: iload_2
     168: ior
     169: putfield      #36                 // Field readyOps:I
     172: goto          180
     175: aload_0
     176: iload_2
     177: putfield      #36                 // Field readyOps:I
     180: iload         5
     182: ireturn
     183: aload_0
     184: invokevirtual #47                 // Method channelUDT:()Lcom/barchart/udt/nio/ChannelUDT;
     187: invokeinterface #48,  1           // InterfaceMethod com/barchart/udt/nio/ChannelUDT.isConnectFinished:()Z
     192: ifeq          267
     195: iload_3
     196: iconst_4
     197: iand
     198: ifeq          232
     201: iconst_4
     202: istore_2
     203: iconst_1
     204: istore        5
     206: iload         4
     208: ifeq          224
     211: aload_0
     212: dup
     213: getfield      #36                 // Field readyOps:I
     216: iload_2
     217: ior
     218: putfield      #36                 // Field readyOps:I
     221: goto          229
     224: aload_0
     225: iload_2
     226: putfield      #36                 // Field readyOps:I
     229: iload         5
     231: ireturn
     232: aload_0
     233: ldc           #49                 // String Ready to WRITE when not insterested.
     235: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
     238: iconst_0
     239: istore        5
     241: iload         4
     243: ifeq          259
     246: aload_0
     247: dup
     248: getfield      #36                 // Field readyOps:I
     251: iload_2
     252: ior
     253: putfield      #36                 // Field readyOps:I
     256: goto          264
     259: aload_0
     260: iload_2
     261: putfield      #36                 // Field readyOps:I
     264: iload         5
     266: ireturn
     267: iload_3
     268: bipush        8
     270: iand
     271: ifeq          306
     274: bipush        8
     276: istore_2
     277: iconst_1
     278: istore        5
     280: iload         4
     282: ifeq          298
     285: aload_0
     286: dup
     287: getfield      #36                 // Field readyOps:I
     290: iload_2
     291: ior
     292: putfield      #36                 // Field readyOps:I
     295: goto          303
     298: aload_0
     299: iload_2
     300: putfield      #36                 // Field readyOps:I
     303: iload         5
     305: ireturn
     306: aload_0
     307: ldc           #50                 // String Ready to CONNECT when not interested.
     309: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
     312: iconst_0
     313: istore        5
     315: iload         4
     317: ifeq          333
     320: aload_0
     321: dup
     322: getfield      #36                 // Field readyOps:I
     325: iload_2
     326: ior
     327: putfield      #36                 // Field readyOps:I
     330: goto          338
     333: aload_0
     334: iload_2
     335: putfield      #36                 // Field readyOps:I
     338: iload         5
     340: ireturn
     341: aload_0
     342: ldc           #44                 // String Wrong kind.
     344: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
     347: iconst_0
     348: istore        5
     350: iload         4
     352: ifeq          368
     355: aload_0
     356: dup
     357: getfield      #36                 // Field readyOps:I
     360: iload_2
     361: ior
     362: putfield      #36                 // Field readyOps:I
     365: goto          373
     368: aload_0
     369: iload_2
     370: putfield      #36                 // Field readyOps:I
     373: iload         5
     375: ireturn
     376: astore        6
     378: iload         4
     380: ifeq          396
     383: aload_0
     384: dup
     385: getfield      #36                 // Field readyOps:I
     388: iload_2
     389: ior
     390: putfield      #36                 // Field readyOps:I
     393: goto          401
     396: aload_0
     397: iload_2
     398: putfield      #36                 // Field readyOps:I
     401: aload         6
     403: athrow
    Exception table:
       from    to  target type
          22    50   376   any
          76    85   376   any
         111   157   376   any
         183   206   376   any
         232   241   376   any
         267   280   376   any
         306   315   376   any
         341   350   376   any
         376   378   376   any

  protected com.barchart.udt.EpollUDT$Opt epollOpt();
    Code:
       0: aload_0
       1: getfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
       4: areturn

  protected com.barchart.udt.EpollUDT epollUDT();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method selector:()Lcom/barchart/udt/nio/SelectorUDT;
       4: invokevirtual #51                 // Method com/barchart/udt/nio/SelectorUDT.epollUDT:()Lcom/barchart/udt/EpollUDT;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #52                 // class com/barchart/udt/nio/SelectionKeyUDT
       4: ifeq          29
       7: aload_1
       8: checkcast     #52                 // class com/barchart/udt/nio/SelectionKeyUDT
      11: astore_2
      12: aload_2
      13: invokevirtual #30                 // Method socketId:()I
      16: aload_0
      17: invokevirtual #30                 // Method socketId:()I
      20: if_icmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
      29: iconst_0
      30: ireturn

  boolean hasError() throws com.barchart.udt.ExceptionUDT;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
       4: getstatic     #54                 // Field com/barchart/udt/OptionUDT.Epoll_Event_Mask:Lcom/barchart/udt/OptionUDT;
       7: invokevirtual #55                 // Method com/barchart/udt/SocketUDT.getOption:(Lcom/barchart/udt/OptionUDT;)Ljava/lang/Object;
      10: checkcast     #56                 // class java/lang/Integer
      13: invokevirtual #57                 // Method java/lang/Integer.intValue:()I
      16: istore_1
      17: iload_1
      18: invokestatic  #58                 // Method com/barchart/udt/EpollUDT$Opt.from:(I)Lcom/barchart/udt/EpollUDT$Opt;
      21: invokevirtual #59                 // Method com/barchart/udt/EpollUDT$Opt.hasError:()Z
      24: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method socketId:()I
       4: ireturn

  public int interestOps();
    Code:
       0: aload_0
       1: getfield      #31                 // Field interestOps:I
       4: ireturn

  public java.nio.channels.SelectionKey interestOps(int);
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method assertValidKey:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #61                 // Method assertValidOps:(I)V
       9: iload_1
      10: invokestatic  #62                 // Method from:(I)Lcom/barchart/udt/EpollUDT$Opt;
      13: astore_2
      14: aload_2
      15: aload_0
      16: getfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
      19: if_acmpeq     71
      22: getstatic     #4                  // Field com/barchart/udt/EpollUDT$Opt.ERROR:Lcom/barchart/udt/EpollUDT$Opt;
      25: aload_2
      26: if_acmpne     43
      29: aload_0
      30: invokevirtual #63                 // Method epollUDT:()Lcom/barchart/udt/EpollUDT;
      33: aload_0
      34: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      37: invokevirtual #64                 // Method com/barchart/udt/EpollUDT.remove:(Lcom/barchart/udt/SocketUDT;)V
      40: goto          66
      43: aload_0
      44: invokevirtual #63                 // Method epollUDT:()Lcom/barchart/udt/EpollUDT;
      47: aload_0
      48: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      51: invokevirtual #64                 // Method com/barchart/udt/EpollUDT.remove:(Lcom/barchart/udt/SocketUDT;)V
      54: aload_0
      55: invokevirtual #63                 // Method epollUDT:()Lcom/barchart/udt/EpollUDT;
      58: aload_0
      59: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      62: aload_2
      63: invokevirtual #65                 // Method com/barchart/udt/EpollUDT.add:(Lcom/barchart/udt/SocketUDT;Lcom/barchart/udt/EpollUDT$Opt;)V
      66: aload_0
      67: aload_2
      68: putfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
      71: aload_0
      72: iload_1
      73: putfield      #31                 // Field interestOps:I
      76: goto          107
      79: astore_2
      80: getstatic     #67                 // Field log:Lorg/slf4j/Logger;
      83: ldc           #68                 // String epoll udpate failure
      85: aload_2
      86: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      91: aload_0
      92: iload_1
      93: putfield      #31                 // Field interestOps:I
      96: goto          107
      99: astore_3
     100: aload_0
     101: iload_1
     102: putfield      #31                 // Field interestOps:I
     105: aload_3
     106: athrow
     107: aload_0
     108: areturn
    Exception table:
       from    to  target type
           9    71    79   Class java/lang/Exception
           9    71    99   any
          79    91    99   any
          99   100    99   any

  protected boolean isSocketBroken();
    Code:
       0: getstatic     #70                 // Field com/barchart/udt/nio/SelectionKeyUDT$1.$SwitchMap$com$barchart$udt$StatusUDT:[I
       3: aload_0
       4: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
       7: invokevirtual #71                 // Method com/barchart/udt/SocketUDT.status:()Lcom/barchart/udt/StatusUDT;
      10: invokevirtual #72                 // Method com/barchart/udt/StatusUDT.ordinal:()I
      13: iaload
      14: tableswitch   { // 1 to 9
                     1: 64
                     2: 64
                     3: 64
                     4: 64
                     5: 64
                     6: 66
                     7: 66
                     8: 66
                     9: 66
               default: 68
          }
      64: iconst_0
      65: ireturn
      66: iconst_1
      67: ireturn
      68: aload_0
      69: ldc           #73                 // String Unknown socket status.
      71: invokevirtual #38                 // Method logError:(Ljava/lang/String;)V
      74: iconst_1
      75: ireturn

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #74                 // Field isValid:Z
       4: ireturn

  protected com.barchart.udt.nio.KindUDT kindUDT();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channelUDT:Lcom/barchart/udt/nio/ChannelUDT;
       4: invokeinterface #75,  1           // InterfaceMethod com/barchart/udt/nio/ChannelUDT.kindUDT:()Lcom/barchart/udt/nio/KindUDT;
       9: areturn

  protected void logError(java.lang.String);
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #76                 // String logic error : \n\t
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: astore_2
      20: getstatic     #67                 // Field log:Lorg/slf4j/Logger;
      23: aload_2
      24: new           #66                 // class java/lang/Exception
      27: dup
      28: new           #20                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #78                 // String
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #79                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      50: invokeinterface #80,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: return

  protected void makeValid(boolean);
    Code:
       0: iload_1
       1: ifeq          29
       4: aload_0
       5: getstatic     #4                  // Field com/barchart/udt/EpollUDT$Opt.ERROR:Lcom/barchart/udt/EpollUDT$Opt;
       8: putfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
      11: aload_0
      12: invokevirtual #63                 // Method epollUDT:()Lcom/barchart/udt/EpollUDT;
      15: aload_0
      16: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      19: aload_0
      20: getfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
      23: invokevirtual #65                 // Method com/barchart/udt/EpollUDT.add:(Lcom/barchart/udt/SocketUDT;Lcom/barchart/udt/EpollUDT$Opt;)V
      26: goto          40
      29: aload_0
      30: invokevirtual #63                 // Method epollUDT:()Lcom/barchart/udt/EpollUDT;
      33: aload_0
      34: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      37: invokevirtual #64                 // Method com/barchart/udt/EpollUDT.remove:(Lcom/barchart/udt/SocketUDT;)V
      40: aload_0
      41: iload_1
      42: putfield      #74                 // Field isValid:Z
      45: goto          76
      48: astore_2
      49: getstatic     #67                 // Field log:Lorg/slf4j/Logger;
      52: ldc           #82                 // String Epoll failure.
      54: aload_2
      55: invokeinterface #69,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      60: aload_0
      61: iload_1
      62: putfield      #74                 // Field isValid:Z
      65: goto          76
      68: astore_3
      69: aload_0
      70: iload_1
      71: putfield      #74                 // Field isValid:Z
      74: aload_3
      75: athrow
      76: return
    Exception table:
       from    to  target type
           0    40    48   Class java/lang/Throwable
           0    40    68   any
          48    60    68   any
          68    69    68   any

  public int readyOps();
    Code:
       0: aload_0
       1: getfield      #36                 // Field readyOps:I
       4: ireturn

  protected void readyOps(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #36                 // Field readyOps:I
       5: return

  public com.barchart.udt.nio.SelectorUDT selector();
    Code:
       0: aload_0
       1: getfield      #11                 // Field selectorUDT:Lcom/barchart/udt/nio/SelectorUDT;
       4: areturn

  protected int socketId();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
       4: invokevirtual #83                 // Method com/barchart/udt/SocketUDT.id:()I
       7: ireturn

  protected com.barchart.udt.SocketUDT socketUDT();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channelUDT:Lcom/barchart/udt/nio/ChannelUDT;
       4: invokeinterface #84,  1           // InterfaceMethod com/barchart/udt/nio/ChannelUDT.socketUDT:()Lcom/barchart/udt/SocketUDT;
       9: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #85                 // String [id: 0x%08x] poll=%s ready=%s inter=%s %s %s %s bind=%s:%s peer=%s:%s
       2: bipush        11
       4: anewarray     #6                  // class java/lang/Object
       7: dup
       8: iconst_0
       9: aload_0
      10: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      13: invokevirtual #83                 // Method com/barchart/udt/SocketUDT.id:()I
      16: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: aastore
      20: dup
      21: iconst_1
      22: aload_0
      23: getfield      #33                 // Field epollOpt:Lcom/barchart/udt/EpollUDT$Opt;
      26: aastore
      27: dup
      28: iconst_2
      29: aload_0
      30: getfield      #36                 // Field readyOps:I
      33: invokestatic  #87                 // Method toStringOps:(I)Ljava/lang/String;
      36: aastore
      37: dup
      38: iconst_3
      39: aload_0
      40: getfield      #31                 // Field interestOps:I
      43: invokestatic  #87                 // Method toStringOps:(I)Ljava/lang/String;
      46: aastore
      47: dup
      48: iconst_4
      49: aload_0
      50: getfield      #12                 // Field channelUDT:Lcom/barchart/udt/nio/ChannelUDT;
      53: invokeinterface #88,  1           // InterfaceMethod com/barchart/udt/nio/ChannelUDT.typeUDT:()Lcom/barchart/udt/TypeUDT;
      58: aastore
      59: dup
      60: iconst_5
      61: aload_0
      62: getfield      #12                 // Field channelUDT:Lcom/barchart/udt/nio/ChannelUDT;
      65: invokeinterface #75,  1           // InterfaceMethod com/barchart/udt/nio/ChannelUDT.kindUDT:()Lcom/barchart/udt/nio/KindUDT;
      70: aastore
      71: dup
      72: bipush        6
      74: aload_0
      75: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      78: invokevirtual #71                 // Method com/barchart/udt/SocketUDT.status:()Lcom/barchart/udt/StatusUDT;
      81: aastore
      82: dup
      83: bipush        7
      85: aload_0
      86: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
      89: invokevirtual #89                 // Method com/barchart/udt/SocketUDT.getLocalInetAddress:()Ljava/net/InetAddress;
      92: aastore
      93: dup
      94: bipush        8
      96: aload_0
      97: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
     100: invokevirtual #90                 // Method com/barchart/udt/SocketUDT.getLocalInetPort:()I
     103: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     106: aastore
     107: dup
     108: bipush        9
     110: aload_0
     111: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
     114: invokevirtual #91                 // Method com/barchart/udt/SocketUDT.getRemoteInetAddress:()Ljava/net/InetAddress;
     117: aastore
     118: dup
     119: bipush        10
     121: aload_0
     122: invokevirtual #53                 // Method socketUDT:()Lcom/barchart/udt/SocketUDT;
     125: invokevirtual #92                 // Method com/barchart/udt/SocketUDT.getRemoteInetPort:()I
     128: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     131: aastore
     132: invokestatic  #8                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     135: areturn

  public java.nio.channels.Selector selector();
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method selector:()Lcom/barchart/udt/nio/SelectorUDT;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #52                 // class com/barchart/udt/nio/SelectionKeyUDT
       5: invokevirtual #93                 // Method compareTo:(Lcom/barchart/udt/nio/SelectionKeyUDT;)I
       8: ireturn

  static {};
    Code:
       0: ldc_w         #52                 // class com/barchart/udt/nio/SelectionKeyUDT
       3: invokestatic  #94                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #67                 // Field log:Lorg/slf4j/Logger;
       9: return
}
