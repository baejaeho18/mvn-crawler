Compiled from "ResolveAddressHandler.java"
public class io.netty.handler.address.ResolveAddressHandler extends io.netty.channel.ChannelOutboundHandlerAdapter {
  private final io.netty.resolver.AddressResolverGroup<? extends java.net.SocketAddress> resolverGroup;

  public io.netty.handler.address.ResolveAddressHandler(io.netty.resolver.AddressResolverGroup<? extends java.net.SocketAddress>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/channel/ChannelOutboundHandlerAdapter."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String resolverGroup
       8: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class io/netty/resolver/AddressResolverGroup
      14: putfield      #5                  // Field resolverGroup:Lio/netty/resolver/AddressResolverGroup;
      17: return

  public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #5                  // Field resolverGroup:Lio/netty/resolver/AddressResolverGroup;
       4: aload_1
       5: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      10: invokevirtual #7                  // Method io/netty/resolver/AddressResolverGroup.getResolver:(Lio/netty/util/concurrent/EventExecutor;)Lio/netty/resolver/AddressResolver;
      13: astore        5
      15: aload         5
      17: aload_2
      18: invokeinterface #8,  2            // InterfaceMethod io/netty/resolver/AddressResolver.isSupported:(Ljava/net/SocketAddress;)Z
      23: ifeq          66
      26: aload         5
      28: aload_2
      29: invokeinterface #9,  2            // InterfaceMethod io/netty/resolver/AddressResolver.isResolved:(Ljava/net/SocketAddress;)Z
      34: ifne          66
      37: aload         5
      39: aload_2
      40: invokeinterface #10,  2           // InterfaceMethod io/netty/resolver/AddressResolver.resolve:(Ljava/net/SocketAddress;)Lio/netty/util/concurrent/Future;
      45: new           #11                 // class io/netty/handler/address/ResolveAddressHandler$1
      48: dup
      49: aload_0
      50: aload         4
      52: aload_1
      53: aload_3
      54: invokespecial #12                 // Method io/netty/handler/address/ResolveAddressHandler$1."<init>":(Lio/netty/handler/address/ResolveAddressHandler;Lio/netty/channel/ChannelPromise;Lio/netty/channel/ChannelHandlerContext;Ljava/net/SocketAddress;)V
      57: invokeinterface #13,  2           // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      62: pop
      63: goto          90
      66: aload_1
      67: aload_2
      68: aload_3
      69: aload         4
      71: invokeinterface #14,  4           // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      76: pop
      77: aload_1
      78: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      83: aload_0
      84: invokeinterface #16,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      89: pop
      90: return
}
