Compiled from "IpSubnetFilter.java"
public class io.netty.handler.ipfilter.IpSubnetFilter extends io.netty.handler.ipfilter.AbstractRemoteAddressFilter<java.net.InetSocketAddress> {
  private final boolean acceptIfNotFound;

  private final java.util.List<io.netty.handler.ipfilter.IpSubnetFilterRule> ipv4Rules;

  private final java.util.List<io.netty.handler.ipfilter.IpSubnetFilterRule> ipv6Rules;

  private final io.netty.handler.ipfilter.IpFilterRuleType ipFilterRuleTypeIPv4;

  private final io.netty.handler.ipfilter.IpFilterRuleType ipFilterRuleTypeIPv6;

  public io.netty.handler.ipfilter.IpSubnetFilter(io.netty.handler.ipfilter.IpSubnetFilterRule...);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: ldc           #1                  // String rules
       5: invokestatic  #2                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       8: checkcast     #3                  // class "[Ljava/lang/Object;"
      11: invokestatic  #4                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokespecial #5                  // Method "<init>":(ZLjava/util/List;)V
      17: return

  public io.netty.handler.ipfilter.IpSubnetFilter(boolean, io.netty.handler.ipfilter.IpSubnetFilterRule...);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: ldc           #1                  // String rules
       5: invokestatic  #2                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       8: checkcast     #3                  // class "[Ljava/lang/Object;"
      11: invokestatic  #4                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokespecial #5                  // Method "<init>":(ZLjava/util/List;)V
      17: return

  public io.netty.handler.ipfilter.IpSubnetFilter(java.util.List<io.netty.handler.ipfilter.IpSubnetFilterRule>);
    Code:
       0: aload_0
       1: iconst_1
       2: aload_1
       3: invokespecial #5                  // Method "<init>":(ZLjava/util/List;)V
       6: return

  public io.netty.handler.ipfilter.IpSubnetFilter(boolean, java.util.List<io.netty.handler.ipfilter.IpSubnetFilterRule>);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method io/netty/handler/ipfilter/AbstractRemoteAddressFilter."<init>":()V
       4: aload_2
       5: ldc           #1                  // String rules
       7: invokestatic  #2                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: iload_1
      13: putfield      #7                  // Field acceptIfNotFound:Z
      16: iconst_0
      17: istore_3
      18: iconst_0
      19: istore        4
      21: iconst_0
      22: istore        5
      24: iconst_0
      25: istore        6
      27: new           #8                  // class java/util/ArrayList
      30: dup
      31: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      34: astore        7
      36: new           #8                  // class java/util/ArrayList
      39: dup
      40: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      43: astore        8
      45: aload_2
      46: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      51: astore        9
      53: aload         9
      55: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          160
      63: aload         9
      65: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #13                 // class io/netty/handler/ipfilter/IpSubnetFilterRule
      73: astore        10
      75: aload         10
      77: ldc           #14                 // String rule
      79: invokestatic  #2                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      82: pop
      83: aload         10
      85: invokevirtual #15                 // Method io/netty/handler/ipfilter/IpSubnetFilterRule.getFilterRule:()Lio/netty/handler/ipfilter/IpFilterRule;
      88: instanceof    #16                 // class io/netty/handler/ipfilter/IpSubnetFilterRule$Ip4SubnetFilterRule
      91: ifeq          127
      94: aload         7
      96: aload         10
      98: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     103: pop
     104: aload         10
     106: invokevirtual #18                 // Method io/netty/handler/ipfilter/IpSubnetFilterRule.ruleType:()Lio/netty/handler/ipfilter/IpFilterRuleType;
     109: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     112: if_acmpne     121
     115: iinc          3, 1
     118: goto          157
     121: iinc          4, 1
     124: goto          157
     127: aload         8
     129: aload         10
     131: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     136: pop
     137: aload         10
     139: invokevirtual #18                 // Method io/netty/handler/ipfilter/IpSubnetFilterRule.ruleType:()Lio/netty/handler/ipfilter/IpFilterRuleType;
     142: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     145: if_acmpne     154
     148: iinc          5, 1
     151: goto          157
     154: iinc          6, 1
     157: goto          53
     160: iload_3
     161: ifne          179
     164: iload         4
     166: ifle          179
     169: aload_0
     170: getstatic     #20                 // Field io/netty/handler/ipfilter/IpFilterRuleType.REJECT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     173: putfield      #21                 // Field ipFilterRuleTypeIPv4:Lio/netty/handler/ipfilter/IpFilterRuleType;
     176: goto          203
     179: iload_3
     180: ifle          198
     183: iload         4
     185: ifne          198
     188: aload_0
     189: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     192: putfield      #21                 // Field ipFilterRuleTypeIPv4:Lio/netty/handler/ipfilter/IpFilterRuleType;
     195: goto          203
     198: aload_0
     199: aconst_null
     200: putfield      #21                 // Field ipFilterRuleTypeIPv4:Lio/netty/handler/ipfilter/IpFilterRuleType;
     203: iload         5
     205: ifne          223
     208: iload         6
     210: ifle          223
     213: aload_0
     214: getstatic     #20                 // Field io/netty/handler/ipfilter/IpFilterRuleType.REJECT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     217: putfield      #22                 // Field ipFilterRuleTypeIPv6:Lio/netty/handler/ipfilter/IpFilterRuleType;
     220: goto          248
     223: iload         5
     225: ifle          243
     228: iload         6
     230: ifne          243
     233: aload_0
     234: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     237: putfield      #22                 // Field ipFilterRuleTypeIPv6:Lio/netty/handler/ipfilter/IpFilterRuleType;
     240: goto          248
     243: aload_0
     244: aconst_null
     245: putfield      #22                 // Field ipFilterRuleTypeIPv6:Lio/netty/handler/ipfilter/IpFilterRuleType;
     248: aload_0
     249: aload         7
     251: invokestatic  #23                 // Method sortAndFilter:(Ljava/util/List;)Ljava/util/List;
     254: putfield      #24                 // Field ipv4Rules:Ljava/util/List;
     257: aload_0
     258: aload         8
     260: invokestatic  #23                 // Method sortAndFilter:(Ljava/util/List;)Ljava/util/List;
     263: putfield      #25                 // Field ipv6Rules:Ljava/util/List;
     266: return

  protected boolean accept(io.netty.channel.ChannelHandlerContext, java.net.InetSocketAddress);
    Code:
       0: aload_2
       1: invokevirtual #26                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
       4: instanceof    #27                 // class java/net/Inet4Address
       7: ifeq          80
      10: aload_0
      11: getfield      #24                 // Field ipv4Rules:Ljava/util/List;
      14: aload_2
      15: getstatic     #28                 // Field io/netty/handler/ipfilter/IpSubnetFilterRuleComparator.INSTANCE:Lio/netty/handler/ipfilter/IpSubnetFilterRuleComparator;
      18: invokestatic  #29                 // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I
      21: istore_3
      22: iload_3
      23: iflt          77
      26: aload_0
      27: getfield      #21                 // Field ipFilterRuleTypeIPv4:Lio/netty/handler/ipfilter/IpFilterRuleType;
      30: ifnonnull     61
      33: aload_0
      34: getfield      #24                 // Field ipv4Rules:Ljava/util/List;
      37: iload_3
      38: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #13                 // class io/netty/handler/ipfilter/IpSubnetFilterRule
      46: invokevirtual #18                 // Method io/netty/handler/ipfilter/IpSubnetFilterRule.ruleType:()Lio/netty/handler/ipfilter/IpFilterRuleType;
      49: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
      52: if_acmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: aload_0
      62: getfield      #21                 // Field ipFilterRuleTypeIPv4:Lio/netty/handler/ipfilter/IpFilterRuleType;
      65: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
      68: if_acmpne     75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: ireturn
      77: goto          147
      80: aload_0
      81: getfield      #25                 // Field ipv6Rules:Ljava/util/List;
      84: aload_2
      85: getstatic     #28                 // Field io/netty/handler/ipfilter/IpSubnetFilterRuleComparator.INSTANCE:Lio/netty/handler/ipfilter/IpSubnetFilterRuleComparator;
      88: invokestatic  #29                 // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;Ljava/util/Comparator;)I
      91: istore_3
      92: iload_3
      93: iflt          147
      96: aload_0
      97: getfield      #22                 // Field ipFilterRuleTypeIPv6:Lio/netty/handler/ipfilter/IpFilterRuleType;
     100: ifnonnull     131
     103: aload_0
     104: getfield      #25                 // Field ipv6Rules:Ljava/util/List;
     107: iload_3
     108: invokeinterface #30,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     113: checkcast     #13                 // class io/netty/handler/ipfilter/IpSubnetFilterRule
     116: invokevirtual #18                 // Method io/netty/handler/ipfilter/IpSubnetFilterRule.ruleType:()Lio/netty/handler/ipfilter/IpFilterRuleType;
     119: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     122: if_acmpne     129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: ireturn
     131: aload_0
     132: getfield      #22                 // Field ipFilterRuleTypeIPv6:Lio/netty/handler/ipfilter/IpFilterRuleType;
     135: getstatic     #19                 // Field io/netty/handler/ipfilter/IpFilterRuleType.ACCEPT:Lio/netty/handler/ipfilter/IpFilterRuleType;
     138: if_acmpne     145
     141: iconst_1
     142: goto          146
     145: iconst_0
     146: ireturn
     147: aload_0
     148: getfield      #7                  // Field acceptIfNotFound:Z
     151: ireturn

  private static java.util.List<io.netty.handler.ipfilter.IpSubnetFilterRule> sortAndFilter(java.util.List<io.netty.handler.ipfilter.IpSubnetFilterRule>);
    Code:
       0: aload_0
       1: invokestatic  #31                 // Method java/util/Collections.sort:(Ljava/util/List;)V
       4: aload_0
       5: invokeinterface #10,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_1
      11: new           #8                  // class java/util/ArrayList
      14: dup
      15: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      18: astore_2
      19: aload_1
      20: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          40
      28: aload_1
      29: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #13                 // class io/netty/handler/ipfilter/IpSubnetFilterRule
      37: goto          41
      40: aconst_null
      41: astore_3
      42: aload_3
      43: ifnull        54
      46: aload_2
      47: aload_3
      48: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_1
      55: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          109
      63: aload_1
      64: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #13                 // class io/netty/handler/ipfilter/IpSubnetFilterRule
      72: astore        4
      74: aload_3
      75: new           #32                 // class java/net/InetSocketAddress
      78: dup
      79: aload         4
      81: invokevirtual #33                 // Method io/netty/handler/ipfilter/IpSubnetFilterRule.getIpAddress:()Ljava/lang/String;
      84: iconst_1
      85: invokespecial #34                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
      88: invokevirtual #35                 // Method io/netty/handler/ipfilter/IpSubnetFilterRule.matches:(Ljava/net/InetSocketAddress;)Z
      91: ifne          106
      94: aload_2
      95: aload         4
      97: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     102: pop
     103: aload         4
     105: astore_3
     106: goto          54
     109: aload_2
     110: areturn

  protected boolean accept(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #32                 // class java/net/InetSocketAddress
       6: invokevirtual #36                 // Method accept:(Lio/netty/channel/ChannelHandlerContext;Ljava/net/InetSocketAddress;)Z
       9: ireturn
}
