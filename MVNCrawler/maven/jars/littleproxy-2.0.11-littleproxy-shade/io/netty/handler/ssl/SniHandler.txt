Compiled from "SniHandler.java"
public class io.netty.handler.ssl.SniHandler extends io.netty.handler.ssl.AbstractSniHandler<io.netty.handler.ssl.SslContext> {
  private static final io.netty.handler.ssl.SniHandler$Selection EMPTY_SELECTION;

  protected final io.netty.util.AsyncMapping<java.lang.String, io.netty.handler.ssl.SslContext> mapping;

  private volatile io.netty.handler.ssl.SniHandler$Selection selection;

  public io.netty.handler.ssl.SniHandler(io.netty.util.Mapping<? super java.lang.String, ? extends io.netty.handler.ssl.SslContext>);
    Code:
       0: aload_0
       1: new           #1                  // class io/netty/handler/ssl/SniHandler$AsyncMappingAdapter
       4: dup
       5: aload_1
       6: aconst_null
       7: invokespecial #2                  // Method io/netty/handler/ssl/SniHandler$AsyncMappingAdapter."<init>":(Lio/netty/util/Mapping;Lio/netty/handler/ssl/SniHandler$1;)V
      10: invokespecial #3                  // Method "<init>":(Lio/netty/util/AsyncMapping;)V
      13: return

  public io.netty.handler.ssl.SniHandler(io.netty.util.DomainNameMapping<? extends io.netty.handler.ssl.SslContext>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method "<init>":(Lio/netty/util/Mapping;)V
       5: return

  public io.netty.handler.ssl.SniHandler(io.netty.util.AsyncMapping<? super java.lang.String, ? extends io.netty.handler.ssl.SslContext>);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method io/netty/handler/ssl/AbstractSniHandler."<init>":()V
       4: aload_0
       5: getstatic     #6                  // Field EMPTY_SELECTION:Lio/netty/handler/ssl/SniHandler$Selection;
       8: putfield      #7                  // Field selection:Lio/netty/handler/ssl/SniHandler$Selection;
      11: aload_0
      12: aload_1
      13: ldc           #8                  // String mapping
      15: invokestatic  #9                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      18: checkcast     #10                 // class io/netty/util/AsyncMapping
      21: putfield      #11                 // Field mapping:Lio/netty/util/AsyncMapping;
      24: return

  public java.lang.String hostname();
    Code:
       0: aload_0
       1: getfield      #7                  // Field selection:Lio/netty/handler/ssl/SniHandler$Selection;
       4: getfield      #12                 // Field io/netty/handler/ssl/SniHandler$Selection.hostname:Ljava/lang/String;
       7: areturn

  public io.netty.handler.ssl.SslContext sslContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field selection:Lio/netty/handler/ssl/SniHandler$Selection;
       4: getfield      #13                 // Field io/netty/handler/ssl/SniHandler$Selection.context:Lio/netty/handler/ssl/SslContext;
       7: areturn

  protected io.netty.util.concurrent.Future<io.netty.handler.ssl.SslContext> lookup(io.netty.channel.ChannelHandlerContext, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field mapping:Lio/netty/util/AsyncMapping;
       4: aload_2
       5: aload_1
       6: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      11: invokeinterface #15,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      16: invokeinterface #16,  3           // InterfaceMethod io/netty/util/AsyncMapping.map:(Ljava/lang/Object;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      21: areturn

  protected final void onLookupComplete(io.netty.channel.ChannelHandlerContext, java.lang.String, io.netty.util.concurrent.Future<io.netty.handler.ssl.SslContext>) throws java.lang.Exception;
    Code:
       0: aload_3
       1: invokeinterface #17,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifne          60
       9: aload_3
      10: invokeinterface #18,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      15: astore        4
      17: aload         4
      19: instanceof    #19                 // class java/lang/Error
      22: ifeq          31
      25: aload         4
      27: checkcast     #19                 // class java/lang/Error
      30: athrow
      31: new           #20                 // class io/netty/handler/codec/DecoderException
      34: dup
      35: new           #21                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #23                 // String failed to get the SslContext for
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_2
      48: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: aload         4
      56: invokespecial #26                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: athrow
      60: aload_3
      61: invokeinterface #27,  1           // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
      66: checkcast     #28                 // class io/netty/handler/ssl/SslContext
      69: astore        4
      71: aload_0
      72: new           #29                 // class io/netty/handler/ssl/SniHandler$Selection
      75: dup
      76: aload         4
      78: aload_2
      79: invokespecial #30                 // Method io/netty/handler/ssl/SniHandler$Selection."<init>":(Lio/netty/handler/ssl/SslContext;Ljava/lang/String;)V
      82: putfield      #7                  // Field selection:Lio/netty/handler/ssl/SniHandler$Selection;
      85: aload_0
      86: aload_1
      87: aload_2
      88: aload         4
      90: invokevirtual #31                 // Method replaceHandler:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/String;Lio/netty/handler/ssl/SslContext;)V
      93: goto          110
      96: astore        5
      98: aload_0
      99: getstatic     #6                  // Field EMPTY_SELECTION:Lio/netty/handler/ssl/SniHandler$Selection;
     102: putfield      #7                  // Field selection:Lio/netty/handler/ssl/SniHandler$Selection;
     105: aload         5
     107: invokestatic  #33                 // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
     110: return
    Exception table:
       from    to  target type
          85    93    96   Class java/lang/Throwable

  protected void replaceHandler(io.netty.channel.ChannelHandlerContext, java.lang.String, io.netty.handler.ssl.SslContext) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: aload_3
       5: aload_1
       6: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      11: invokevirtual #35                 // Method newSslHandler:(Lio/netty/handler/ssl/SslContext;Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
      14: astore        4
      16: aload_1
      17: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      22: aload_0
      23: ldc           #37                 // class io/netty/handler/ssl/SslHandler
      25: invokevirtual #38                 // Method java/lang/Class.getName:()Ljava/lang/String;
      28: aload         4
      30: invokeinterface #39,  4           // InterfaceMethod io/netty/channel/ChannelPipeline.replace:(Lio/netty/channel/ChannelHandler;Ljava/lang/String;Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      35: pop
      36: aconst_null
      37: astore        4
      39: aload         4
      41: ifnull        73
      44: aload         4
      46: invokevirtual #40                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
      49: invokestatic  #41                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      52: goto          73
      55: astore        5
      57: aload         4
      59: ifnull        70
      62: aload         4
      64: invokevirtual #40                 // Method io/netty/handler/ssl/SslHandler.engine:()Ljavax/net/ssl/SSLEngine;
      67: invokestatic  #41                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      70: aload         5
      72: athrow
      73: return
    Exception table:
       from    to  target type
           3    39    55   any
          55    57    55   any

  protected io.netty.handler.ssl.SslHandler newSslHandler(io.netty.handler.ssl.SslContext, io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #42                 // Method io/netty/handler/ssl/SslContext.newHandler:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/handler/ssl/SslHandler;
       5: areturn

  static {};
    Code:
       0: new           #29                 // class io/netty/handler/ssl/SniHandler$Selection
       3: dup
       4: aconst_null
       5: aconst_null
       6: invokespecial #30                 // Method io/netty/handler/ssl/SniHandler$Selection."<init>":(Lio/netty/handler/ssl/SslContext;Ljava/lang/String;)V
       9: putstatic     #6                  // Field EMPTY_SELECTION:Lio/netty/handler/ssl/SniHandler$Selection;
      12: return
}
