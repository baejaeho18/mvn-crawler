Compiled from "SslUtils.java"
final class io.netty.handler.ssl.SslUtils {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  static final java.util.Set<java.lang.String> TLSV13_CIPHERS;

  static final int GMSSL_PROTOCOL_VERSION;

  static final java.lang.String INVALID_CIPHER;

  static final int SSL_CONTENT_TYPE_CHANGE_CIPHER_SPEC;

  static final int SSL_CONTENT_TYPE_ALERT;

  static final int SSL_CONTENT_TYPE_HANDSHAKE;

  static final int SSL_CONTENT_TYPE_APPLICATION_DATA;

  static final int SSL_CONTENT_TYPE_EXTENSION_HEARTBEAT;

  static final int SSL_RECORD_HEADER_LENGTH;

  static final int NOT_ENOUGH_DATA;

  static final int NOT_ENCRYPTED;

  static final java.lang.String[] DEFAULT_CIPHER_SUITES;

  static final java.lang.String[] DEFAULT_TLSV13_CIPHER_SUITES;

  static final java.lang.String[] TLSV13_CIPHER_SUITES;

  private static final boolean TLSV1_3_JDK_SUPPORTED;

  private static final boolean TLSV1_3_JDK_DEFAULT_ENABLED;

  static boolean isTLSv13SupportedByJDK(java.security.Provider);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #1                  // Field TLSV1_3_JDK_SUPPORTED:Z
       7: ireturn
       8: aload_0
       9: invokestatic  #2                  // Method isTLSv13SupportedByJDK0:(Ljava/security/Provider;)Z
      12: ireturn

  private static boolean isTLSv13SupportedByJDK0(java.security.Provider);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method newInitContext:(Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;
       4: invokevirtual #4                  // Method javax/net/ssl/SSLContext.getSupportedSSLParameters:()Ljavax/net/ssl/SSLParameters;
       7: invokevirtual #5                  // Method javax/net/ssl/SSLParameters.getProtocols:()[Ljava/lang/String;
      10: ldc           #7                  // String TLSv1.3
      12: invokestatic  #8                  // Method arrayContains:([Ljava/lang/String;Ljava/lang/String;)Z
      15: ireturn
      16: astore_1
      17: getstatic     #10                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #11                 // String Unable to detect if JDK SSLEngine with provider {} supports TLSv1.3, assuming no
      22: aload_0
      23: aload_1
      24: invokeinterface #12,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: iconst_0
      30: ireturn
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/Throwable

  static boolean isTLSv13EnabledByJDK(java.security.Provider);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #13                 // Field TLSV1_3_JDK_DEFAULT_ENABLED:Z
       7: ireturn
       8: aload_0
       9: invokestatic  #14                 // Method isTLSv13EnabledByJDK0:(Ljava/security/Provider;)Z
      12: ireturn

  private static boolean isTLSv13EnabledByJDK0(java.security.Provider);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method newInitContext:(Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;
       4: invokevirtual #15                 // Method javax/net/ssl/SSLContext.getDefaultSSLParameters:()Ljavax/net/ssl/SSLParameters;
       7: invokevirtual #5                  // Method javax/net/ssl/SSLParameters.getProtocols:()[Ljava/lang/String;
      10: ldc           #7                  // String TLSv1.3
      12: invokestatic  #8                  // Method arrayContains:([Ljava/lang/String;Ljava/lang/String;)Z
      15: ireturn
      16: astore_1
      17: getstatic     #10                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #16                 // String Unable to detect if JDK SSLEngine with provider {} enables TLSv1.3 by default, assuming no
      22: aload_0
      23: aload_1
      24: invokeinterface #12,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      29: iconst_0
      30: ireturn
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/Throwable

  private static javax.net.ssl.SSLContext newInitContext(java.security.Provider) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException;
    Code:
       0: aload_0
       1: ifnonnull     13
       4: ldc           #17                 // String TLS
       6: invokestatic  #18                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
       9: astore_1
      10: goto          20
      13: ldc           #17                 // String TLS
      15: aload_0
      16: invokestatic  #19                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;
      19: astore_1
      20: aload_1
      21: aconst_null
      22: iconst_0
      23: anewarray     #20                 // class javax/net/ssl/TrustManager
      26: aconst_null
      27: invokevirtual #21                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
      30: aload_1
      31: areturn

  static javax.net.ssl.SSLContext getSSLContext(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.NoSuchProviderException;
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method io/netty/util/internal/StringUtil.isNullOrEmpty:(Ljava/lang/String;)Z
       4: ifeq          17
       7: invokestatic  #23                 // Method getTlsVersion:()Ljava/lang/String;
      10: invokestatic  #18                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
      13: astore_1
      14: goto          25
      17: invokestatic  #23                 // Method getTlsVersion:()Ljava/lang/String;
      20: aload_0
      21: invokestatic  #24                 // Method javax/net/ssl/SSLContext.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/net/ssl/SSLContext;
      24: astore_1
      25: aload_1
      26: aconst_null
      27: iconst_0
      28: anewarray     #20                 // class javax/net/ssl/TrustManager
      31: aconst_null
      32: invokevirtual #21                 // Method javax/net/ssl/SSLContext.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V
      35: aload_1
      36: areturn

  private static java.lang.String getTlsVersion();
    Code:
       0: getstatic     #1                  // Field TLSV1_3_JDK_SUPPORTED:Z
       3: ifeq          11
       6: ldc           #7                  // String TLSv1.3
       8: goto          13
      11: ldc           #25                 // String TLSv1.2
      13: areturn

  static boolean arrayContains(java.lang.String[], java.lang.String);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     37
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_1
      21: aload         5
      23: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      26: ifeq          31
      29: iconst_1
      30: ireturn
      31: iinc          4, 1
      34: goto          8
      37: iconst_0
      38: ireturn

  static void addIfSupported(java.util.Set<java.lang.String>, java.util.List<java.lang.String>, java.lang.String...);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     48
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_0
      23: aload         6
      25: invokeinterface #27,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      30: ifeq          42
      33: aload_1
      34: aload         6
      36: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: iinc          5, 1
      45: goto          9
      48: return

  static void useFallbackCiphersIfDefaultIsEmpty(java.util.List<java.lang.String>, java.lang.Iterable<java.lang.String>);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          67
       9: aload_1
      10: invokeinterface #30,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          67
      25: aload_2
      26: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #33                 // class java/lang/String
      34: astore_3
      35: aload_3
      36: ldc           #34                 // String SSL_
      38: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      41: ifne          16
      44: aload_3
      45: ldc           #36                 // String _RC4_
      47: invokevirtual #37                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      50: ifeq          56
      53: goto          16
      56: aload_0
      57: aload_3
      58: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          16
      67: return

  static void useFallbackCiphersIfDefaultIsEmpty(java.util.List<java.lang.String>, java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokestatic  #39                 // Method useFallbackCiphersIfDefaultIsEmpty:(Ljava/util/List;Ljava/lang/Iterable;)V
       8: return

  static javax.net.ssl.SSLHandshakeException toSSLHandshakeException(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #40                 // class javax/net/ssl/SSLHandshakeException
       4: ifeq          12
       7: aload_0
       8: checkcast     #40                 // class javax/net/ssl/SSLHandshakeException
      11: areturn
      12: new           #40                 // class javax/net/ssl/SSLHandshakeException
      15: dup
      16: aload_0
      17: invokevirtual #41                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      20: invokespecial #42                 // Method javax/net/ssl/SSLHandshakeException."<init>":(Ljava/lang/String;)V
      23: aload_0
      24: invokevirtual #43                 // Method javax/net/ssl/SSLHandshakeException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      27: checkcast     #40                 // class javax/net/ssl/SSLHandshakeException
      30: areturn

  static int getEncryptedPacketLength(io.netty.buffer.ByteBuf, int);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: iload_1
       4: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
       7: tableswitch   { // 20 to 24
                    20: 40
                    21: 40
                    22: 40
                    23: 40
                    24: 40
               default: 45
          }
      40: iconst_1
      41: istore_3
      42: goto          47
      45: iconst_0
      46: istore_3
      47: iload_3
      48: ifeq          101
      51: aload_0
      52: iload_1
      53: iconst_1
      54: iadd
      55: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
      58: istore        4
      60: iload         4
      62: iconst_3
      63: if_icmpeq     79
      66: aload_0
      67: iload_1
      68: iconst_1
      69: iadd
      70: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.getShort:(I)S
      73: sipush        257
      76: if_icmpne     99
      79: aload_0
      80: iload_1
      81: iconst_3
      82: iadd
      83: invokestatic  #47                 // Method unsignedShortBE:(Lio/netty/buffer/ByteBuf;I)I
      86: iconst_5
      87: iadd
      88: istore_2
      89: iload_2
      90: iconst_5
      91: if_icmpgt     101
      94: iconst_0
      95: istore_3
      96: goto          101
      99: iconst_0
     100: istore_3
     101: iload_3
     102: ifne          191
     105: aload_0
     106: iload_1
     107: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
     110: sipush        128
     113: iand
     114: ifeq          121
     117: iconst_2
     118: goto          122
     121: iconst_3
     122: istore        4
     124: aload_0
     125: iload_1
     126: iload         4
     128: iadd
     129: iconst_1
     130: iadd
     131: invokevirtual #44                 // Method io/netty/buffer/ByteBuf.getUnsignedByte:(I)S
     134: istore        5
     136: iload         5
     138: iconst_2
     139: if_icmpeq     148
     142: iload         5
     144: iconst_3
     145: if_icmpne     188
     148: iload         4
     150: iconst_2
     151: if_icmpne     168
     154: aload_0
     155: iload_1
     156: invokestatic  #48                 // Method shortBE:(Lio/netty/buffer/ByteBuf;I)S
     159: sipush        32767
     162: iand
     163: iconst_2
     164: iadd
     165: goto          179
     168: aload_0
     169: iload_1
     170: invokestatic  #48                 // Method shortBE:(Lio/netty/buffer/ByteBuf;I)S
     173: sipush        16383
     176: iand
     177: iconst_3
     178: iadd
     179: istore_2
     180: iload_2
     181: iload         4
     183: if_icmpgt     191
     186: iconst_m1
     187: ireturn
     188: bipush        -2
     190: ireturn
     191: iload_2
     192: ireturn

  private static int unsignedShortBE(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #49                 // Method io/netty/buffer/ByteBuf.getUnsignedShort:(I)I
       5: istore_2
       6: aload_0
       7: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.order:()Ljava/nio/ByteOrder;
      10: getstatic     #51                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      13: if_acmpne     24
      16: iload_2
      17: invokestatic  #52                 // Method java/lang/Integer.reverseBytes:(I)I
      20: bipush        16
      22: iushr
      23: istore_2
      24: iload_2
      25: ireturn

  private static short shortBE(io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #45                 // Method io/netty/buffer/ByteBuf.getShort:(I)S
       5: istore_2
       6: aload_0
       7: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.order:()Ljava/nio/ByteOrder;
      10: getstatic     #51                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;
      13: if_acmpne     21
      16: iload_2
      17: invokestatic  #54                 // Method java/lang/Short.reverseBytes:(S)S
      20: istore_2
      21: iload_2
      22: ireturn

  private static short unsignedByte(byte);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: i2s
       6: ireturn

  private static int unsignedShortBE(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #55                 // Method shortBE:(Ljava/nio/ByteBuffer;I)S
       5: ldc           #56                 // int 65535
       7: iand
       8: ireturn

  private static short shortBE(java.nio.ByteBuffer, int);
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
       4: getstatic     #58                 // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;
       7: if_acmpne     18
      10: aload_0
      11: iload_1
      12: invokevirtual #59                 // Method java/nio/ByteBuffer.getShort:(I)S
      15: goto          26
      18: aload_0
      19: iload_1
      20: invokevirtual #59                 // Method java/nio/ByteBuffer.getShort:(I)S
      23: invokestatic  #60                 // Method io/netty/buffer/ByteBufUtil.swapShort:(S)S
      26: ireturn

  static int getEncryptedPacketLength(java.nio.ByteBuffer[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aaload
       3: astore_2
       4: aload_2
       5: invokevirtual #61                 // Method java/nio/ByteBuffer.remaining:()I
       8: iconst_5
       9: if_icmplt     17
      12: aload_2
      13: invokestatic  #62                 // Method getEncryptedPacketLength:(Ljava/nio/ByteBuffer;)I
      16: ireturn
      17: iconst_5
      18: invokestatic  #63                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      21: astore_3
      22: aload_0
      23: iload_1
      24: iinc          1, 1
      27: aaload
      28: invokevirtual #64                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      31: astore_2
      32: aload_2
      33: invokevirtual #61                 // Method java/nio/ByteBuffer.remaining:()I
      36: aload_3
      37: invokevirtual #61                 // Method java/nio/ByteBuffer.remaining:()I
      40: if_icmple     57
      43: aload_2
      44: aload_2
      45: invokevirtual #65                 // Method java/nio/ByteBuffer.position:()I
      48: aload_3
      49: invokevirtual #61                 // Method java/nio/ByteBuffer.remaining:()I
      52: iadd
      53: invokevirtual #66                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      56: pop
      57: aload_3
      58: aload_2
      59: invokevirtual #67                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      62: pop
      63: aload_3
      64: invokevirtual #68                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      67: ifne          22
      70: aload_3
      71: invokevirtual #69                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      74: pop
      75: aload_3
      76: invokestatic  #62                 // Method getEncryptedPacketLength:(Ljava/nio/ByteBuffer;)I
      79: ireturn

  private static int getEncryptedPacketLength(java.nio.ByteBuffer);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #65                 // Method java/nio/ByteBuffer.position:()I
       6: istore_2
       7: aload_0
       8: iload_2
       9: invokevirtual #70                 // Method java/nio/ByteBuffer.get:(I)B
      12: invokestatic  #71                 // Method unsignedByte:(B)S
      15: tableswitch   { // 20 to 24
                    20: 48
                    21: 48
                    22: 48
                    23: 48
                    24: 48
               default: 53
          }
      48: iconst_1
      49: istore_3
      50: goto          55
      53: iconst_0
      54: istore_3
      55: iload_3
      56: ifeq          112
      59: aload_0
      60: iload_2
      61: iconst_1
      62: iadd
      63: invokevirtual #70                 // Method java/nio/ByteBuffer.get:(I)B
      66: invokestatic  #71                 // Method unsignedByte:(B)S
      69: istore        4
      71: iload         4
      73: iconst_3
      74: if_icmpeq     90
      77: aload_0
      78: iload_2
      79: iconst_1
      80: iadd
      81: invokevirtual #59                 // Method java/nio/ByteBuffer.getShort:(I)S
      84: sipush        257
      87: if_icmpne     110
      90: aload_0
      91: iload_2
      92: iconst_3
      93: iadd
      94: invokestatic  #72                 // Method unsignedShortBE:(Ljava/nio/ByteBuffer;I)I
      97: iconst_5
      98: iadd
      99: istore_1
     100: iload_1
     101: iconst_5
     102: if_icmpgt     112
     105: iconst_0
     106: istore_3
     107: goto          112
     110: iconst_0
     111: istore_3
     112: iload_3
     113: ifne          208
     116: aload_0
     117: iload_2
     118: invokevirtual #70                 // Method java/nio/ByteBuffer.get:(I)B
     121: invokestatic  #71                 // Method unsignedByte:(B)S
     124: sipush        128
     127: iand
     128: ifeq          135
     131: iconst_2
     132: goto          136
     135: iconst_3
     136: istore        4
     138: aload_0
     139: iload_2
     140: iload         4
     142: iadd
     143: iconst_1
     144: iadd
     145: invokevirtual #70                 // Method java/nio/ByteBuffer.get:(I)B
     148: invokestatic  #71                 // Method unsignedByte:(B)S
     151: istore        5
     153: iload         5
     155: iconst_2
     156: if_icmpeq     165
     159: iload         5
     161: iconst_3
     162: if_icmpne     205
     165: iload         4
     167: iconst_2
     168: if_icmpne     185
     171: aload_0
     172: iload_2
     173: invokestatic  #55                 // Method shortBE:(Ljava/nio/ByteBuffer;I)S
     176: sipush        32767
     179: iand
     180: iconst_2
     181: iadd
     182: goto          196
     185: aload_0
     186: iload_2
     187: invokestatic  #55                 // Method shortBE:(Ljava/nio/ByteBuffer;I)S
     190: sipush        16383
     193: iand
     194: iconst_3
     195: iadd
     196: istore_1
     197: iload_1
     198: iload         4
     200: if_icmpgt     208
     203: iconst_m1
     204: ireturn
     205: bipush        -2
     207: ireturn
     208: iload_1
     209: ireturn

  static void handleHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: invokeinterface #73,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
       6: pop
       7: iload_2
       8: ifeq          26
      11: aload_0
      12: new           #74                 // class io/netty/handler/ssl/SslHandshakeCompletionEvent
      15: dup
      16: aload_1
      17: invokespecial #75                 // Method io/netty/handler/ssl/SslHandshakeCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      20: invokeinterface #76,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      25: pop
      26: aload_0
      27: invokeinterface #77,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      32: pop
      33: return

  static void zeroout(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #78                 // Method io/netty/buffer/ByteBuf.isReadOnly:()Z
       4: ifne          17
       7: aload_0
       8: iconst_0
       9: aload_0
      10: invokevirtual #79                 // Method io/netty/buffer/ByteBuf.capacity:()I
      13: invokevirtual #80                 // Method io/netty/buffer/ByteBuf.setZero:(II)Lio/netty/buffer/ByteBuf;
      16: pop
      17: return

  static void zerooutAndRelease(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method zeroout:(Lio/netty/buffer/ByteBuf;)V
       4: aload_0
       5: invokevirtual #82                 // Method io/netty/buffer/ByteBuf.release:()Z
       8: pop
       9: return

  static io.netty.buffer.ByteBuf toBase64(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #83                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
       5: aload_1
       6: invokevirtual #84                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       9: iconst_1
      10: getstatic     #85                 // Field io/netty/handler/codec/base64/Base64Dialect.STANDARD:Lio/netty/handler/codec/base64/Base64Dialect;
      13: aload_0
      14: invokestatic  #86                 // Method io/netty/handler/codec/base64/Base64.encode:(Lio/netty/buffer/ByteBuf;IIZLio/netty/handler/codec/base64/Base64Dialect;Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      17: astore_2
      18: aload_1
      19: aload_1
      20: invokevirtual #87                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      23: invokevirtual #88                 // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      26: pop
      27: aload_2
      28: areturn

  static boolean isValidHostNameForSNI(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        49
       4: aload_0
       5: bipush        46
       7: invokevirtual #89                 // Method java/lang/String.indexOf:(I)I
      10: ifle          49
      13: aload_0
      14: ldc           #90                 // String .
      16: invokevirtual #91                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      19: ifne          49
      22: aload_0
      23: ldc           #92                 // String /
      25: invokevirtual #35                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      28: ifne          49
      31: aload_0
      32: invokestatic  #93                 // Method io/netty/util/NetUtil.isValidIpV4Address:(Ljava/lang/String;)Z
      35: ifne          49
      38: aload_0
      39: invokestatic  #94                 // Method io/netty/util/NetUtil.isValidIpV6Address:(Ljava/lang/String;)Z
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  static boolean isTLSv13Cipher(java.lang.String);
    Code:
       0: getstatic     #95                 // Field TLSV13_CIPHERS:Ljava/util/Set;
       3: aload_0
       4: invokeinterface #27,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ireturn

  private io.netty.handler.ssl.SslUtils();
    Code:
       0: aload_0
       1: invokespecial #96                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #46                 // class io/netty/handler/ssl/SslUtils
       2: invokestatic  #97                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #10                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: new           #98                 // class java/util/LinkedHashSet
      11: dup
      12: iconst_5
      13: anewarray     #33                 // class java/lang/String
      16: dup
      17: iconst_0
      18: ldc           #99                 // String TLS_AES_256_GCM_SHA384
      20: aastore
      21: dup
      22: iconst_1
      23: ldc           #100                // String TLS_CHACHA20_POLY1305_SHA256
      25: aastore
      26: dup
      27: iconst_2
      28: ldc           #101                // String TLS_AES_128_GCM_SHA256
      30: aastore
      31: dup
      32: iconst_3
      33: ldc           #102                // String TLS_AES_128_CCM_8_SHA256
      35: aastore
      36: dup
      37: iconst_4
      38: ldc           #103                // String TLS_AES_128_CCM_SHA256
      40: aastore
      41: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      44: invokespecial #104                // Method java/util/LinkedHashSet."<init>":(Ljava/util/Collection;)V
      47: invokestatic  #105                // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      50: putstatic     #95                 // Field TLSV13_CIPHERS:Ljava/util/Set;
      53: iconst_2
      54: anewarray     #33                 // class java/lang/String
      57: dup
      58: iconst_0
      59: ldc           #101                // String TLS_AES_128_GCM_SHA256
      61: aastore
      62: dup
      63: iconst_1
      64: ldc           #99                 // String TLS_AES_256_GCM_SHA384
      66: aastore
      67: putstatic     #106                // Field TLSV13_CIPHER_SUITES:[Ljava/lang/String;
      70: aconst_null
      71: invokestatic  #2                  // Method isTLSv13SupportedByJDK0:(Ljava/security/Provider;)Z
      74: putstatic     #1                  // Field TLSV1_3_JDK_SUPPORTED:Z
      77: aconst_null
      78: invokestatic  #14                 // Method isTLSv13EnabledByJDK0:(Ljava/security/Provider;)Z
      81: putstatic     #13                 // Field TLSV1_3_JDK_DEFAULT_ENABLED:Z
      84: getstatic     #1                  // Field TLSV1_3_JDK_SUPPORTED:Z
      87: ifeq          99
      90: getstatic     #106                // Field TLSV13_CIPHER_SUITES:[Ljava/lang/String;
      93: putstatic     #107                // Field DEFAULT_TLSV13_CIPHER_SUITES:[Ljava/lang/String;
      96: goto          105
      99: getstatic     #108                // Field io/netty/util/internal/EmptyArrays.EMPTY_STRINGS:[Ljava/lang/String;
     102: putstatic     #107                // Field DEFAULT_TLSV13_CIPHER_SUITES:[Ljava/lang/String;
     105: new           #98                 // class java/util/LinkedHashSet
     108: dup
     109: invokespecial #109                // Method java/util/LinkedHashSet."<init>":()V
     112: astore_0
     113: aload_0
     114: ldc           #110                // String TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
     116: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     121: pop
     122: aload_0
     123: ldc           #112                // String TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
     125: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     130: pop
     131: aload_0
     132: ldc           #113                // String TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
     134: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     139: pop
     140: aload_0
     141: ldc           #114                // String TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
     143: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     148: pop
     149: aload_0
     150: ldc           #115                // String TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
     152: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     157: pop
     158: aload_0
     159: ldc           #116                // String TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
     161: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     166: pop
     167: aload_0
     168: ldc           #117                // String TLS_RSA_WITH_AES_128_GCM_SHA256
     170: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     175: pop
     176: aload_0
     177: ldc           #118                // String TLS_RSA_WITH_AES_128_CBC_SHA
     179: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     184: pop
     185: aload_0
     186: ldc           #119                // String TLS_RSA_WITH_AES_256_CBC_SHA
     188: invokeinterface #111,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     193: pop
     194: aload_0
     195: getstatic     #107                // Field DEFAULT_TLSV13_CIPHER_SUITES:[Ljava/lang/String;
     198: invokestatic  #120                // Method java/util/Collections.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z
     201: pop
     202: aload_0
     203: getstatic     #108                // Field io/netty/util/internal/EmptyArrays.EMPTY_STRINGS:[Ljava/lang/String;
     206: invokeinterface #121,  2          // InterfaceMethod java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     211: checkcast     #122                // class "[Ljava/lang/String;"
     214: putstatic     #123                // Field DEFAULT_CIPHER_SUITES:[Ljava/lang/String;
     217: return
}
