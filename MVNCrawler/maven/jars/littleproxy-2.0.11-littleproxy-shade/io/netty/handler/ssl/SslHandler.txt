Compiled from "SslHandler.java"
public class io.netty.handler.ssl.SslHandler extends io.netty.handler.codec.ByteToMessageDecoder implements io.netty.channel.ChannelOutboundHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.regex.Pattern IGNORABLE_CLASS_IN_STACK;

  private static final java.util.regex.Pattern IGNORABLE_ERROR_MESSAGE;

  private static final int STATE_SENT_FIRST_MESSAGE;

  private static final int STATE_FLUSHED_BEFORE_HANDSHAKE;

  private static final int STATE_READ_DURING_HANDSHAKE;

  private static final int STATE_HANDSHAKE_STARTED;

  private static final int STATE_NEEDS_FLUSH;

  private static final int STATE_OUTBOUND_CLOSED;

  private static final int STATE_CLOSE_NOTIFY;

  private static final int STATE_PROCESS_TASK;

  private static final int STATE_FIRE_CHANNEL_READ;

  private static final int STATE_UNWRAP_REENTRY;

  private static final int MAX_PLAINTEXT_LENGTH;

  private volatile io.netty.channel.ChannelHandlerContext ctx;

  private final javax.net.ssl.SSLEngine engine;

  private final io.netty.handler.ssl.SslHandler$SslEngineType engineType;

  private final java.util.concurrent.Executor delegatedTaskExecutor;

  private final boolean jdkCompatibilityMode;

  private final java.nio.ByteBuffer[] singleBuffer;

  private final boolean startTls;

  private final io.netty.handler.ssl.SslHandler$SslTasksRunner sslTaskRunnerForUnwrap;

  private final io.netty.handler.ssl.SslHandler$SslTasksRunner sslTaskRunner;

  private io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue pendingUnencryptedWrites;

  private io.netty.util.concurrent.Promise<io.netty.channel.Channel> handshakePromise;

  private final io.netty.handler.ssl.SslHandler$LazyChannelPromise sslClosePromise;

  private int packetLength;

  private short state;

  private volatile long handshakeTimeoutMillis;

  private volatile long closeNotifyFlushTimeoutMillis;

  private volatile long closeNotifyReadTimeoutMillis;

  volatile int wrapDataSize;

  static final boolean $assertionsDisabled;

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #27                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;Z)V
       6: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #28                 // Field io/netty/util/concurrent/ImmediateExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateExecutor;
       6: invokespecial #29                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
       9: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #29                 // Method "<init>":(Ljavax/net/ssl/SSLEngine;ZLjava/util/concurrent/Executor;)V
       7: return

  public io.netty.handler.ssl.SslHandler(javax.net.ssl.SSLEngine, boolean, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method io/netty/handler/codec/ByteToMessageDecoder."<init>":()V
       4: aload_0
       5: iconst_1
       6: anewarray     #31                 // class java/nio/ByteBuffer
       9: putfield      #25                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      12: aload_0
      13: new           #32                 // class io/netty/handler/ssl/SslHandler$SslTasksRunner
      16: dup
      17: aload_0
      18: iconst_1
      19: invokespecial #33                 // Method io/netty/handler/ssl/SslHandler$SslTasksRunner."<init>":(Lio/netty/handler/ssl/SslHandler;Z)V
      22: putfield      #34                 // Field sslTaskRunnerForUnwrap:Lio/netty/handler/ssl/SslHandler$SslTasksRunner;
      25: aload_0
      26: new           #32                 // class io/netty/handler/ssl/SslHandler$SslTasksRunner
      29: dup
      30: aload_0
      31: iconst_0
      32: invokespecial #33                 // Method io/netty/handler/ssl/SslHandler$SslTasksRunner."<init>":(Lio/netty/handler/ssl/SslHandler;Z)V
      35: putfield      #35                 // Field sslTaskRunner:Lio/netty/handler/ssl/SslHandler$SslTasksRunner;
      38: aload_0
      39: new           #36                 // class io/netty/handler/ssl/SslHandler$LazyChannelPromise
      42: dup
      43: aload_0
      44: aconst_null
      45: invokespecial #37                 // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/handler/ssl/SslHandler$1;)V
      48: putfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      51: aload_0
      52: new           #36                 // class io/netty/handler/ssl/SslHandler$LazyChannelPromise
      55: dup
      56: aload_0
      57: aconst_null
      58: invokespecial #37                 // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/handler/ssl/SslHandler$1;)V
      61: putfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      64: aload_0
      65: ldc2_w        #39                 // long 10000l
      68: putfield      #41                 // Field handshakeTimeoutMillis:J
      71: aload_0
      72: ldc2_w        #42                 // long 3000l
      75: putfield      #44                 // Field closeNotifyFlushTimeoutMillis:J
      78: aload_0
      79: sipush        16384
      82: putfield      #46                 // Field wrapDataSize:I
      85: aload_0
      86: aload_1
      87: ldc           #47                 // String engine
      89: invokestatic  #48                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      92: checkcast     #49                 // class javax/net/ssl/SSLEngine
      95: putfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      98: aload_0
      99: aload_3
     100: ldc           #50                 // String delegatedTaskExecutor
     102: invokestatic  #48                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     105: checkcast     #51                 // class java/util/concurrent/Executor
     108: putfield      #52                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
     111: aload_0
     112: aload_1
     113: invokestatic  #53                 // Method io/netty/handler/ssl/SslHandler$SslEngineType.forEngine:(Ljavax/net/ssl/SSLEngine;)Lio/netty/handler/ssl/SslHandler$SslEngineType;
     116: putfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
     119: aload_0
     120: iload_2
     121: putfield      #54                 // Field startTls:Z
     124: aload_0
     125: aload_0
     126: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
     129: aload_1
     130: invokevirtual #55                 // Method io/netty/handler/ssl/SslHandler$SslEngineType.jdkCompatibilityMode:(Ljavax/net/ssl/SSLEngine;)Z
     133: putfield      #56                 // Field jdkCompatibilityMode:Z
     136: aload_0
     137: aload_0
     138: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
     141: getfield      #57                 // Field io/netty/handler/ssl/SslHandler$SslEngineType.cumulator:Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;
     144: invokevirtual #58                 // Method setCumulator:(Lio/netty/handler/codec/ByteToMessageDecoder$Cumulator;)V
     147: return

  public long getHandshakeTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #41                 // Field handshakeTimeoutMillis:J
       4: lreturn

  public void setHandshakeTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_3
       1: ldc           #59                 // String unit
       3: invokestatic  #48                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_3
       9: lload_1
      10: invokevirtual #60                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      13: invokevirtual #61                 // Method setHandshakeTimeoutMillis:(J)V
      16: return

  public void setHandshakeTimeoutMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc           #62                 // String handshakeTimeoutMillis
       4: invokestatic  #63                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(JLjava/lang/String;)J
       7: putfield      #41                 // Field handshakeTimeoutMillis:J
      10: return

  public final void setWrapDataSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #46                 // Field wrapDataSize:I
       5: return

  public long getCloseNotifyTimeoutMillis();
    Code:
       0: aload_0
       1: invokevirtual #64                 // Method getCloseNotifyFlushTimeoutMillis:()J
       4: lreturn

  public void setCloseNotifyTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #65                 // Method setCloseNotifyFlushTimeout:(JLjava/util/concurrent/TimeUnit;)V
       6: return

  public void setCloseNotifyTimeoutMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #66                 // Method setCloseNotifyFlushTimeoutMillis:(J)V
       5: return

  public final long getCloseNotifyFlushTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #44                 // Field closeNotifyFlushTimeoutMillis:J
       4: lreturn

  public final void setCloseNotifyFlushTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #60                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       6: invokevirtual #66                 // Method setCloseNotifyFlushTimeoutMillis:(J)V
       9: return

  public final void setCloseNotifyFlushTimeoutMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc           #67                 // String closeNotifyFlushTimeoutMillis
       4: invokestatic  #63                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(JLjava/lang/String;)J
       7: putfield      #44                 // Field closeNotifyFlushTimeoutMillis:J
      10: return

  public final long getCloseNotifyReadTimeoutMillis();
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeNotifyReadTimeoutMillis:J
       4: lreturn

  public final void setCloseNotifyReadTimeout(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #60                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
       6: invokevirtual #68                 // Method setCloseNotifyReadTimeoutMillis:(J)V
       9: return

  public final void setCloseNotifyReadTimeoutMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc           #69                 // String closeNotifyReadTimeoutMillis
       4: invokestatic  #63                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(JLjava/lang/String;)J
       7: putfield      #4                  // Field closeNotifyReadTimeoutMillis:J
      10: return

  public javax.net.ssl.SSLEngine engine();
    Code:
       0: aload_0
       1: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  public java.lang.String applicationProtocol();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method engine:()Ljavax/net/ssl/SSLEngine;
       4: astore_1
       5: aload_1
       6: instanceof    #71                 // class io/netty/handler/ssl/ApplicationProtocolAccessor
       9: ifne          14
      12: aconst_null
      13: areturn
      14: aload_1
      15: checkcast     #71                 // class io/netty/handler/ssl/ApplicationProtocolAccessor
      18: invokeinterface #72,  1           // InterfaceMethod io/netty/handler/ssl/ApplicationProtocolAccessor.getNegotiatedApplicationProtocol:()Ljava/lang/String;
      23: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> handshakeFuture();
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: areturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method closeOutbound:()Lio/netty/channel/ChannelFuture;
       4: areturn

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method closeOutbound:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       5: areturn

  public io.netty.channel.ChannelFuture closeOutbound();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      10: invokevirtual #74                 // Method closeOutbound:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      13: areturn

  public io.netty.channel.ChannelFuture closeOutbound(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_2
       5: aload_2
       6: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      11: invokeinterface #77,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      16: ifeq          27
      19: aload_0
      20: aload_1
      21: invokespecial #23                 // Method closeOutbound0:(Lio/netty/channel/ChannelPromise;)V
      24: goto          47
      27: aload_2
      28: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      33: new           #78                 // class io/netty/handler/ssl/SslHandler$1
      36: dup
      37: aload_0
      38: aload_1
      39: invokespecial #79                 // Method io/netty/handler/ssl/SslHandler$1."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelPromise;)V
      42: invokeinterface #80,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      47: aload_1
      48: areturn

  private void closeOutbound0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: bipush        32
       3: invokespecial #81                 // Method setState:(I)V
       6: aload_0
       7: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      10: invokevirtual #82                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      13: aload_0
      14: aload_0
      15: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      18: aload_1
      19: invokespecial #83                 // Method flush:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      22: goto          56
      25: astore_2
      26: aload_1
      27: aload_2
      28: invokeinterface #85,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      33: ifne          56
      36: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      39: ldc           #86                 // String {} flush() raised a masked exception.
      41: aload_0
      42: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      45: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      50: aload_2
      51: invokeinterface #88,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      56: return
    Exception table:
       from    to  target type
          13    22    25   Class java/lang/Exception

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> sslCloseFuture();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
       4: areturn

  public void handlerRemoved0(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
       4: ifnull        34
       7: aload_0
       8: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      11: invokevirtual #90                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.isEmpty:()Z
      14: ifne          34
      17: aload_0
      18: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      21: aload_1
      22: new           #91                 // class io/netty/channel/ChannelException
      25: dup
      26: ldc           #92                 // String Pending write on removal of SslHandler
      28: invokespecial #93                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/String;)V
      31: invokevirtual #94                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.releaseAndFailAll:(Lio/netty/channel/ChannelOutboundInvoker;Ljava/lang/Throwable;)V
      34: aload_0
      35: aconst_null
      36: putfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      39: aconst_null
      40: astore_2
      41: aload_0
      42: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      45: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      50: ifne          91
      53: new           #96                 // class javax/net/ssl/SSLHandshakeException
      56: dup
      57: ldc           #97                 // String SslHandler removed before handshake completed
      59: invokespecial #98                 // Method javax/net/ssl/SSLHandshakeException."<init>":(Ljava/lang/String;)V
      62: astore_2
      63: aload_0
      64: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      67: aload_2
      68: invokeinterface #99,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      73: ifeq          91
      76: aload_1
      77: new           #100                // class io/netty/handler/ssl/SslHandshakeCompletionEvent
      80: dup
      81: aload_2
      82: invokespecial #101                // Method io/netty/handler/ssl/SslHandshakeCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      85: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      90: pop
      91: aload_0
      92: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      95: invokevirtual #103                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.isDone:()Z
      98: ifne          120
     101: aload_2
     102: ifnonnull     115
     105: new           #104                // class javax/net/ssl/SSLException
     108: dup
     109: ldc           #105                // String SslHandler removed before SSLEngine was closed
     111: invokespecial #106                // Method javax/net/ssl/SSLException."<init>":(Ljava/lang/String;)V
     114: astore_2
     115: aload_0
     116: aload_2
     117: invokespecial #21                 // Method notifyClosePromise:(Ljava/lang/Throwable;)V
     120: aload_0
     121: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
     124: invokestatic  #107                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     127: pop
     128: goto          142
     131: astore_3
     132: aload_0
     133: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
     136: invokestatic  #107                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     139: pop
     140: aload_3
     141: athrow
     142: return
    Exception table:
       from    to  target type
           0   120   131   any

  public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #108,  3          // InterfaceMethod io/netty/channel/ChannelHandlerContext.bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: pop
       9: return

  public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: aload         4
       5: invokeinterface #109,  4          // InterfaceMethod io/netty/channel/ChannelHandlerContext.connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: pop
      11: return

  public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #110,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       7: pop
       8: return

  public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #111                // Method closeOutboundAndChannel:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;Z)V
       7: return

  public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #111                // Method closeOutboundAndChannel:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;Z)V
       7: return

  public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
       9: ifne          17
      12: aload_0
      13: iconst_4
      14: invokespecial #81                 // Method setState:(I)V
      17: aload_1
      18: invokeinterface #112,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      23: pop
      24: return

  private static java.lang.IllegalStateException newPendingWritesNullException();
    Code:
       0: new           #113                // class java/lang/IllegalStateException
       3: dup
       4: ldc           #114                // String pendingUnencryptedWrites is null, handlerRemoved0 called?
       6: invokespecial #115                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #116                // class io/netty/buffer/ByteBuf
       4: ifne          42
       7: new           #117                // class io/netty/handler/codec/UnsupportedMessageTypeException
      10: dup
      11: aload_2
      12: iconst_1
      13: anewarray     #118                // class java/lang/Class
      16: dup
      17: iconst_0
      18: ldc           #116                // class io/netty/buffer/ByteBuf
      20: aastore
      21: invokespecial #119                // Method io/netty/handler/codec/UnsupportedMessageTypeException."<init>":(Ljava/lang/Object;[Ljava/lang/Class;)V
      24: astore        4
      26: aload_2
      27: invokestatic  #120                // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      30: aload_3
      31: aload         4
      33: invokeinterface #121,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      38: pop
      39: goto          78
      42: aload_0
      43: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      46: ifnonnull     66
      49: aload_2
      50: invokestatic  #120                // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      53: aload_3
      54: invokestatic  #122                // Method newPendingWritesNullException:()Ljava/lang/IllegalStateException;
      57: invokeinterface #121,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      62: pop
      63: goto          78
      66: aload_0
      67: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      70: aload_2
      71: checkcast     #116                // class io/netty/buffer/ByteBuf
      74: aload_3
      75: invokevirtual #123                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.add:(Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)V
      78: return

  public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #54                 // Field startTls:Z
       4: ifeq          39
       7: aload_0
       8: iconst_1
       9: invokespecial #124                // Method isStateSet:(I)Z
      12: ifne          39
      15: aload_0
      16: iconst_1
      17: invokespecial #81                 // Method setState:(I)V
      20: aload_0
      21: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      24: aload_1
      25: invokevirtual #125                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.writeAndRemoveAll:(Lio/netty/channel/ChannelHandlerContext;)V
      28: aload_0
      29: aload_1
      30: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      33: aload_0
      34: iconst_1
      35: invokespecial #126                // Method startHandshakeProcessing:(Z)V
      38: return
      39: aload_0
      40: sipush        128
      43: invokespecial #124                // Method isStateSet:(I)Z
      46: ifeq          50
      49: return
      50: aload_0
      51: aload_1
      52: invokespecial #127                // Method wrapAndFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      55: goto          69
      58: astore_2
      59: aload_0
      60: aload_1
      61: aload_2
      62: invokespecial #17                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      65: aload_2
      66: invokestatic  #129                // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      69: return
    Exception table:
       from    to  target type
          50    55    58   Class java/lang/Throwable

  private void wrapAndFlush(io.netty.channel.ChannelHandlerContext) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
       4: invokevirtual #90                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.isEmpty:()Z
       7: ifeq          26
      10: aload_0
      11: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      14: getstatic     #130                // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      17: aload_1
      18: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      23: invokevirtual #123                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.add:(Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)V
      26: aload_0
      27: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      30: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      35: ifne          43
      38: aload_0
      39: iconst_2
      40: invokespecial #81                 // Method setState:(I)V
      43: aload_0
      44: aload_1
      45: iconst_0
      46: invokespecial #11                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
      49: aload_0
      50: aload_1
      51: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      54: goto          65
      57: astore_2
      58: aload_0
      59: aload_1
      60: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      63: aload_2
      64: athrow
      65: return
    Exception table:
       from    to  target type
          43    49    57   any

  private void wrap(io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokeinterface #131,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       8: astore        4
      10: aload_0
      11: getfield      #46                 // Field wrapDataSize:I
      14: istore        5
      16: aload_1
      17: invokeinterface #132,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      22: ifne          437
      25: aload_1
      26: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      31: astore        6
      33: iload         5
      35: ifle          54
      38: aload_0
      39: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      42: aload         4
      44: iload         5
      46: aload         6
      48: invokevirtual #133                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.remove:(Lio/netty/buffer/ByteBufAllocator;ILio/netty/channel/ChannelPromise;)Lio/netty/buffer/ByteBuf;
      51: goto          63
      54: aload_0
      55: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      58: aload         6
      60: invokevirtual #134                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.removeFirst:(Lio/netty/channel/ChannelPromise;)Lio/netty/buffer/ByteBuf;
      63: astore        7
      65: aload         7
      67: ifnonnull     73
      70: goto          437
      73: aload_3
      74: ifnonnull     93
      77: aload_0
      78: aload_1
      79: aload         7
      81: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      84: aload         7
      86: invokevirtual #136                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      89: invokespecial #137                // Method allocateOutNetBuf:(Lio/netty/channel/ChannelHandlerContext;II)Lio/netty/buffer/ByteBuf;
      92: astore_3
      93: aload_0
      94: aload         4
      96: aload_0
      97: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
     100: aload         7
     102: aload_3
     103: invokespecial #138                // Method wrap:(Lio/netty/buffer/ByteBufAllocator;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
     106: astore        8
     108: aload         7
     110: invokevirtual #139                // Method io/netty/buffer/ByteBuf.isReadable:()Z
     113: ifeq          133
     116: aload_0
     117: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
     120: aload         7
     122: aload         6
     124: invokevirtual #140                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.addFirst:(Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)V
     127: aconst_null
     128: astore        6
     130: goto          139
     133: aload         7
     135: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     138: pop
     139: aload_3
     140: invokevirtual #139                // Method io/netty/buffer/ByteBuf.isReadable:()Z
     143: ifeq          182
     146: aload_3
     147: astore        9
     149: aconst_null
     150: astore_3
     151: aload         6
     153: ifnull        170
     156: aload_1
     157: aload         9
     159: aload         6
     161: invokeinterface #142,  3          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     166: pop
     167: goto          179
     170: aload_1
     171: aload         9
     173: invokeinterface #143,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     178: pop
     179: goto          199
     182: aload         6
     184: ifnull        199
     187: aload_1
     188: getstatic     #130                // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
     191: aload         6
     193: invokeinterface #142,  3          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     198: pop
     199: aload         8
     201: invokevirtual #144                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     204: getstatic     #145                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
     207: if_acmpne     281
     210: aload_0
     211: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
     214: invokeinterface #146,  1          // InterfaceMethod io/netty/util/concurrent/Promise.cause:()Ljava/lang/Throwable;
     219: astore        9
     221: aload         9
     223: ifnonnull     251
     226: aload_0
     227: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
     230: invokevirtual #147                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.cause:()Ljava/lang/Throwable;
     233: astore        9
     235: aload         9
     237: ifnonnull     251
     240: new           #148                // class io/netty/handler/ssl/SslClosedEngineException
     243: dup
     244: ldc           #149                // String SSLEngine closed already
     246: invokespecial #150                // Method io/netty/handler/ssl/SslClosedEngineException."<init>":(Ljava/lang/String;)V
     249: astore        9
     251: aload_0
     252: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
     255: aload_1
     256: aload         9
     258: invokevirtual #94                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.releaseAndFailAll:(Lio/netty/channel/ChannelOutboundInvoker;Ljava/lang/Throwable;)V
     261: aload_3
     262: ifnull        270
     265: aload_3
     266: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     269: pop
     270: iload_2
     271: ifeq          280
     274: aload_0
     275: bipush        16
     277: invokespecial #81                 // Method setState:(I)V
     280: return
     281: getstatic     #151                // Field io/netty/handler/ssl/SslHandler$11.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
     284: aload         8
     286: invokevirtual #152                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     289: invokevirtual #153                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
     292: iaload
     293: tableswitch   { // 1 to 5
                     1: 328
                     2: 339
                     3: 339
                     4: 347
                     5: 378
               default: 403
          }
     328: aload_0
     329: iload_2
     330: invokespecial #154                // Method runDelegatedTasks:(Z)Z
     333: ifne          434
     336: goto          437
     339: aload_0
     340: invokespecial #12                 // Method setHandshakeSuccess:()Z
     343: pop
     344: goto          434
     347: aload         8
     349: invokevirtual #155                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     352: ifle          434
     355: aload_0
     356: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
     359: invokevirtual #90                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.isEmpty:()Z
     362: ifeq          434
     365: aload_0
     366: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
     369: getstatic     #130                // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
     372: invokevirtual #156                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.add:(Lio/netty/buffer/ByteBuf;)V
     375: goto          434
     378: aload_0
     379: aload_1
     380: invokespecial #157                // Method readIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
     383: aload_3
     384: ifnull        392
     387: aload_3
     388: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     391: pop
     392: iload_2
     393: ifeq          402
     396: aload_0
     397: bipush        16
     399: invokespecial #81                 // Method setState:(I)V
     402: return
     403: new           #113                // class java/lang/IllegalStateException
     406: dup
     407: new           #158                // class java/lang/StringBuilder
     410: dup
     411: invokespecial #159                // Method java/lang/StringBuilder."<init>":()V
     414: ldc           #160                // String Unknown handshake status:
     416: invokevirtual #161                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     419: aload         8
     421: invokevirtual #152                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     424: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     427: invokevirtual #163                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     430: invokespecial #115                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     433: athrow
     434: goto          16
     437: aload_3
     438: ifnull        446
     441: aload_3
     442: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     445: pop
     446: iload_2
     447: ifeq          483
     450: aload_0
     451: bipush        16
     453: invokespecial #81                 // Method setState:(I)V
     456: goto          483
     459: astore        10
     461: aload_3
     462: ifnull        470
     465: aload_3
     466: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     469: pop
     470: iload_2
     471: ifeq          480
     474: aload_0
     475: bipush        16
     477: invokespecial #81                 // Method setState:(I)V
     480: aload         10
     482: athrow
     483: return
    Exception table:
       from    to  target type
          10   261   459   any
         281   383   459   any
         403   437   459   any
         459   461   459   any

  private boolean wrapNonAppData(io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: invokeinterface #131,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       8: astore        4
      10: aload_1
      11: invokeinterface #132,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
      16: ifne          350
      19: aload_3
      20: ifnonnull     33
      23: aload_0
      24: aload_1
      25: sipush        2048
      28: iconst_1
      29: invokespecial #137                // Method allocateOutNetBuf:(Lio/netty/channel/ChannelHandlerContext;II)Lio/netty/buffer/ByteBuf;
      32: astore_3
      33: aload_0
      34: aload         4
      36: aload_0
      37: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      40: getstatic     #130                // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      43: aload_3
      44: invokespecial #138                // Method wrap:(Lio/netty/buffer/ByteBufAllocator;Ljavax/net/ssl/SSLEngine;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      47: astore        5
      49: aload         5
      51: invokevirtual #155                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      54: ifle          91
      57: aload_1
      58: aload_3
      59: invokeinterface #143,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      64: new           #164                // class io/netty/handler/ssl/SslHandler$2
      67: dup
      68: aload_0
      69: aload_1
      70: invokespecial #165                // Method io/netty/handler/ssl/SslHandler$2."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelHandlerContext;)V
      73: invokeinterface #166,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      78: pop
      79: iload_2
      80: ifeq          89
      83: aload_0
      84: bipush        16
      86: invokespecial #81                 // Method setState:(I)V
      89: aconst_null
      90: astore_3
      91: aload         5
      93: invokevirtual #152                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      96: astore        6
      98: getstatic     #151                // Field io/netty/handler/ssl/SslHandler$11.$SwitchMap$javax$net$ssl$SSLEngineResult$HandshakeStatus:[I
     101: aload         6
     103: invokevirtual #153                // Method javax/net/ssl/SSLEngineResult$HandshakeStatus.ordinal:()I
     106: iaload
     107: tableswitch   { // 1 to 5
                     1: 182
                     2: 140
                     3: 223
                     4: 220
                     5: 193
               default: 275
          }
     140: aload_0
     141: invokespecial #12                 // Method setHandshakeSuccess:()Z
     144: ifeq          167
     147: iload_2
     148: ifeq          167
     151: aload_0
     152: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
     155: invokevirtual #90                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.isEmpty:()Z
     158: ifne          167
     161: aload_0
     162: aload_1
     163: iconst_1
     164: invokespecial #11                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
     167: iconst_0
     168: istore        7
     170: aload_3
     171: ifnull        179
     174: aload_3
     175: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     178: pop
     179: iload         7
     181: ireturn
     182: aload_0
     183: iload_2
     184: invokespecial #154                // Method runDelegatedTasks:(Z)Z
     187: ifne          306
     190: goto          350
     193: iload_2
     194: ifne          205
     197: aload_0
     198: aload_1
     199: invokespecial #10                 // Method unwrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;)I
     202: ifgt          306
     205: iconst_0
     206: istore        7
     208: aload_3
     209: ifnull        217
     212: aload_3
     213: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     216: pop
     217: iload         7
     219: ireturn
     220: goto          306
     223: aload_0
     224: invokespecial #12                 // Method setHandshakeSuccess:()Z
     227: ifeq          250
     230: iload_2
     231: ifeq          250
     234: aload_0
     235: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
     238: invokevirtual #90                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.isEmpty:()Z
     241: ifne          250
     244: aload_0
     245: aload_1
     246: iconst_1
     247: invokespecial #11                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
     250: iload_2
     251: ifne          260
     254: aload_0
     255: aload_1
     256: invokespecial #10                 // Method unwrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;)I
     259: pop
     260: iconst_1
     261: istore        7
     263: aload_3
     264: ifnull        272
     267: aload_3
     268: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     271: pop
     272: iload         7
     274: ireturn
     275: new           #113                // class java/lang/IllegalStateException
     278: dup
     279: new           #158                // class java/lang/StringBuilder
     282: dup
     283: invokespecial #159                // Method java/lang/StringBuilder."<init>":()V
     286: ldc           #160                // String Unknown handshake status:
     288: invokevirtual #161                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     291: aload         5
     293: invokevirtual #152                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     296: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     299: invokevirtual #163                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     302: invokespecial #115                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     305: athrow
     306: aload         5
     308: invokevirtual #155                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     311: ifne          325
     314: aload         6
     316: getstatic     #167                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_TASK:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     319: if_acmpeq     325
     322: goto          350
     325: aload         5
     327: invokevirtual #168                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     330: ifne          347
     333: aload         5
     335: invokevirtual #152                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     338: getstatic     #169                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     341: if_acmpne     347
     344: goto          350
     347: goto          10
     350: aload_3
     351: ifnull        376
     354: aload_3
     355: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     358: pop
     359: goto          376
     362: astore        8
     364: aload_3
     365: ifnull        373
     368: aload_3
     369: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     372: pop
     373: aload         8
     375: athrow
     376: iconst_0
     377: ireturn
    Exception table:
       from    to  target type
          10   170   362   any
         182   208   362   any
         220   263   362   any
         275   350   362   any
         362   364   362   any

  private javax.net.ssl.SSLEngineResult wrap(io.netty.buffer.ByteBufAllocator, javax.net.ssl.SSLEngine, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws javax.net.ssl.SSLException;
    Code:
       0: aconst_null
       1: astore        5
       3: aload_3
       4: invokevirtual #170                // Method io/netty/buffer/ByteBuf.readerIndex:()I
       7: istore        6
       9: aload_3
      10: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      13: istore        7
      15: aload_3
      16: invokevirtual #171                // Method io/netty/buffer/ByteBuf.isDirect:()Z
      19: ifne          32
      22: aload_0
      23: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
      26: getfield      #172                // Field io/netty/handler/ssl/SslHandler$SslEngineType.wantsDirectBuffer:Z
      29: ifne          77
      32: aload_3
      33: instanceof    #173                // class io/netty/buffer/CompositeByteBuf
      36: ifne          68
      39: aload_3
      40: invokevirtual #136                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      43: iconst_1
      44: if_icmpne     68
      47: aload_0
      48: getfield      #25                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
      51: astore        8
      53: aload         8
      55: iconst_0
      56: aload_3
      57: iload         6
      59: iload         7
      61: invokevirtual #174                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      64: aastore
      65: goto          120
      68: aload_3
      69: invokevirtual #175                // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      72: astore        8
      74: goto          120
      77: aload_1
      78: iload         7
      80: invokeinterface #176,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      85: astore        5
      87: aload         5
      89: aload_3
      90: iload         6
      92: iload         7
      94: invokevirtual #177                // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      97: pop
      98: aload_0
      99: getfield      #25                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     102: astore        8
     104: aload         8
     106: iconst_0
     107: aload         5
     109: aload         5
     111: invokevirtual #170                // Method io/netty/buffer/ByteBuf.readerIndex:()I
     114: iload         7
     116: invokevirtual #174                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
     119: aastore
     120: aload         4
     122: aload         4
     124: invokevirtual #178                // Method io/netty/buffer/ByteBuf.writerIndex:()I
     127: aload         4
     129: invokevirtual #179                // Method io/netty/buffer/ByteBuf.writableBytes:()I
     132: invokevirtual #180                // Method io/netty/buffer/ByteBuf.nioBuffer:(II)Ljava/nio/ByteBuffer;
     135: astore        9
     137: aload_2
     138: aload         8
     140: aload         9
     142: invokevirtual #181                // Method javax/net/ssl/SSLEngine.wrap:([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljavax/net/ssl/SSLEngineResult;
     145: astore        10
     147: aload_3
     148: aload         10
     150: invokevirtual #168                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
     153: invokevirtual #182                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
     156: pop
     157: aload         4
     159: aload         4
     161: invokevirtual #178                // Method io/netty/buffer/ByteBuf.writerIndex:()I
     164: aload         10
     166: invokevirtual #155                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
     169: iadd
     170: invokevirtual #183                // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
     173: pop
     174: aload         10
     176: invokevirtual #144                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
     179: getstatic     #184                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     182: if_acmpne     203
     185: aload         4
     187: aload_2
     188: invokevirtual #185                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     191: invokeinterface #186,  1          // InterfaceMethod javax/net/ssl/SSLSession.getPacketBufferSize:()I
     196: invokevirtual #187                // Method io/netty/buffer/ByteBuf.ensureWritable:(I)Lio/netty/buffer/ByteBuf;
     199: pop
     200: goto          228
     203: aload         10
     205: astore        11
     207: aload_0
     208: getfield      #25                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     211: iconst_0
     212: aconst_null
     213: aastore
     214: aload         5
     216: ifnull        225
     219: aload         5
     221: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     224: pop
     225: aload         11
     227: areturn
     228: goto          120
     231: astore        12
     233: aload_0
     234: getfield      #25                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
     237: iconst_0
     238: aconst_null
     239: aastore
     240: aload         5
     242: ifnull        251
     245: aload         5
     247: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     250: pop
     251: aload         12
     253: athrow
    Exception table:
       from    to  target type
           3   207   231   any
         228   233   231   any

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #146,  1          // InterfaceMethod io/netty/util/concurrent/Promise.cause:()Ljava/lang/Throwable;
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: istore_2
      18: new           #188                // class java/nio/channels/ClosedChannelException
      21: dup
      22: invokespecial #189                // Method java/nio/channels/ClosedChannelException."<init>":()V
      25: astore_3
      26: aload_0
      27: aload_1
      28: aload_3
      29: aload_0
      30: bipush        32
      32: invokespecial #124                // Method isStateSet:(I)Z
      35: ifne          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: aload_0
      44: bipush        8
      46: invokespecial #124                // Method isStateSet:(I)Z
      49: iconst_0
      50: invokespecial #190                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;ZZZ)V
      53: aload_0
      54: aload_3
      55: invokespecial #21                 // Method notifyClosePromise:(Ljava/lang/Throwable;)V
      58: aload_0
      59: aload_1
      60: invokespecial #191                // Method io/netty/handler/codec/ByteToMessageDecoder.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
      63: goto          86
      66: astore        4
      68: iload_2
      69: ifeq          83
      72: aload         4
      74: invokevirtual #193                // Method io/netty/handler/codec/DecoderException.getCause:()Ljava/lang/Throwable;
      77: instanceof    #104                // class javax/net/ssl/SSLException
      80: ifne          86
      83: aload         4
      85: athrow
      86: return
    Exception table:
       from    to  target type
          58    63    66   Class io/netty/handler/codec/DecoderException

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #194                // Method ignoreException:(Ljava/lang/Throwable;)Z
       5: ifeq          60
       8: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      11: invokeinterface #195,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      16: ifeq          36
      19: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      22: ldc           #196                // String {} Swallowing a harmless \'connection reset by peer / broken pipe\' error that occurred while writing close_notify in response to the peer\'s close_notify
      24: aload_1
      25: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      30: aload_2
      31: invokeinterface #197,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      36: aload_1
      37: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      42: invokeinterface #198,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      47: ifeq          68
      50: aload_1
      51: invokeinterface #199,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      56: pop
      57: goto          68
      60: aload_1
      61: aload_2
      62: invokeinterface #200,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      67: pop
      68: return

  private boolean ignoreException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #104                // class javax/net/ssl/SSLException
       4: ifne          249
       7: aload_1
       8: instanceof    #201                // class java/io/IOException
      11: ifeq          249
      14: aload_0
      15: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      18: invokevirtual #103                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.isDone:()Z
      21: ifeq          249
      24: aload_1
      25: invokevirtual #202                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      28: astore_2
      29: aload_2
      30: ifnull        48
      33: getstatic     #203                // Field IGNORABLE_ERROR_MESSAGE:Ljava/util/regex/Pattern;
      36: aload_2
      37: invokevirtual #204                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      40: invokevirtual #205                // Method java/util/regex/Matcher.matches:()Z
      43: ifeq          48
      46: iconst_1
      47: ireturn
      48: aload_1
      49: invokevirtual #206                // Method java/lang/Throwable.getStackTrace:()[Ljava/lang/StackTraceElement;
      52: astore_3
      53: aload_3
      54: astore        4
      56: aload         4
      58: arraylength
      59: istore        5
      61: iconst_0
      62: istore        6
      64: iload         6
      66: iload         5
      68: if_icmpge     249
      71: aload         4
      73: iload         6
      75: aaload
      76: astore        7
      78: aload         7
      80: invokevirtual #207                // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      83: astore        8
      85: aload         7
      87: invokevirtual #208                // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      90: astore        9
      92: aload         8
      94: ldc           #209                // String io.netty.
      96: invokevirtual #210                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      99: ifeq          105
     102: goto          243
     105: ldc           #211                // String read
     107: aload         9
     109: invokevirtual #212                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     112: ifne          118
     115: goto          243
     118: getstatic     #213                // Field IGNORABLE_CLASS_IN_STACK:Ljava/util/regex/Pattern;
     121: aload         8
     123: invokevirtual #204                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     126: invokevirtual #205                // Method java/util/regex/Matcher.matches:()Z
     129: ifeq          134
     132: iconst_1
     133: ireturn
     134: aload_0
     135: invokevirtual #214                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     138: invokestatic  #215                // Method io/netty/util/internal/PlatformDependent.getClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
     141: aload         8
     143: invokevirtual #216                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     146: astore        10
     148: ldc           #217                // class java/nio/channels/SocketChannel
     150: aload         10
     152: invokevirtual #218                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     155: ifne          168
     158: ldc           #219                // class java/nio/channels/DatagramChannel
     160: aload         10
     162: invokevirtual #218                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     165: ifeq          170
     168: iconst_1
     169: ireturn
     170: invokestatic  #220                // Method io/netty/util/internal/PlatformDependent.javaVersion:()I
     173: bipush        7
     175: if_icmplt     196
     178: ldc           #221                // String com.sun.nio.sctp.SctpChannel
     180: aload         10
     182: invokevirtual #222                // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     185: invokevirtual #223                // Method java/lang/Class.getName:()Ljava/lang/String;
     188: invokevirtual #212                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     191: ifeq          196
     194: iconst_1
     195: ireturn
     196: goto          243
     199: astore        10
     201: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     204: invokeinterface #195,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     209: ifeq          243
     212: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     215: ldc           #224                // String Unexpected exception while loading class {} classname {}
     217: iconst_3
     218: anewarray     #225                // class java/lang/Object
     221: dup
     222: iconst_0
     223: aload_0
     224: invokevirtual #214                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     227: aastore
     228: dup
     229: iconst_1
     230: aload         8
     232: aastore
     233: dup
     234: iconst_2
     235: aload         10
     237: aastore
     238: invokeinterface #226,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     243: iinc          6, 1
     246: goto          64
     249: iconst_0
     250: ireturn
    Exception table:
       from    to  target type
         134   169   199   Class java/lang/Throwable
         170   195   199   Class java/lang/Throwable

  public static boolean isEncrypted(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: iconst_5
       5: if_icmpge     18
       8: new           #228                // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #229                // String buffer must have at least 5 readable bytes
      14: invokespecial #230                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_0
      20: invokevirtual #170                // Method io/netty/buffer/ByteBuf.readerIndex:()I
      23: invokestatic  #231                // Method io/netty/handler/ssl/SslUtils.getEncryptedPacketLength:(Lio/netty/buffer/ByteBuf;I)I
      26: bipush        -2
      28: if_icmpeq     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  private void decodeJdkCompatible(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf) throws io.netty.handler.ssl.NotSslRecordException;
    Code:
       0: aload_0
       1: getfield      #232                // Field packetLength:I
       4: istore_3
       5: iload_3
       6: ifle          18
       9: aload_2
      10: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      13: iload_3
      14: if_icmpge     126
      17: return
      18: aload_2
      19: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      22: istore        4
      24: iload         4
      26: iconst_5
      27: if_icmpge     31
      30: return
      31: aload_2
      32: aload_2
      33: invokevirtual #170                // Method io/netty/buffer/ByteBuf.readerIndex:()I
      36: invokestatic  #231                // Method io/netty/handler/ssl/SslUtils.getEncryptedPacketLength:(Lio/netty/buffer/ByteBuf;I)I
      39: istore_3
      40: iload_3
      41: bipush        -2
      43: if_icmpne     96
      46: new           #233                // class io/netty/handler/ssl/NotSslRecordException
      49: dup
      50: new           #158                // class java/lang/StringBuilder
      53: dup
      54: invokespecial #159                // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #234                // String not an SSL/TLS record:
      59: invokevirtual #161                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_2
      63: invokestatic  #235                // Method io/netty/buffer/ByteBufUtil.hexDump:(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;
      66: invokevirtual #161                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #163                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #236                // Method io/netty/handler/ssl/NotSslRecordException."<init>":(Ljava/lang/String;)V
      75: astore        5
      77: aload_2
      78: aload_2
      79: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      82: invokevirtual #182                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      85: pop
      86: aload_0
      87: aload_1
      88: aload         5
      90: invokespecial #17                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      93: aload         5
      95: athrow
      96: getstatic     #237                // Field $assertionsDisabled:Z
      99: ifne          114
     102: iload_3
     103: ifgt          114
     106: new           #238                // class java/lang/AssertionError
     109: dup
     110: invokespecial #239                // Method java/lang/AssertionError."<init>":()V
     113: athrow
     114: iload_3
     115: iload         4
     117: if_icmple     126
     120: aload_0
     121: iload_3
     122: putfield      #232                // Field packetLength:I
     125: return
     126: aload_0
     127: iconst_0
     128: putfield      #232                // Field packetLength:I
     131: aload_0
     132: aload_1
     133: aload_2
     134: iload_3
     135: invokespecial #240                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;I)I
     138: istore        4
     140: getstatic     #237                // Field $assertionsDisabled:Z
     143: ifne          199
     146: iload         4
     148: iload_3
     149: if_icmpeq     199
     152: aload_0
     153: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
     156: invokevirtual #241                // Method javax/net/ssl/SSLEngine.isInboundDone:()Z
     159: ifne          199
     162: new           #238                // class java/lang/AssertionError
     165: dup
     166: new           #158                // class java/lang/StringBuilder
     169: dup
     170: invokespecial #159                // Method java/lang/StringBuilder."<init>":()V
     173: ldc           #242                // String we feed the SSLEngine a packets worth of data:
     175: invokevirtual #161                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: iload_3
     179: invokevirtual #243                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     182: ldc           #244                // String  but it only consumed:
     184: invokevirtual #161                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: iload         4
     189: invokevirtual #243                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     192: invokevirtual #163                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokespecial #245                // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     198: athrow
     199: goto          211
     202: astore        4
     204: aload_0
     205: aload_1
     206: aload         4
     208: invokespecial #18                 // Method handleUnwrapThrowable:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     211: return
    Exception table:
       from    to  target type
         131   199   202   Class java/lang/Throwable

  private void decodeNonJdkCompatible(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
       7: invokespecial #240                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;I)I
      10: pop
      11: goto          21
      14: astore_3
      15: aload_0
      16: aload_1
      17: aload_3
      18: invokespecial #18                 // Method handleUnwrapThrowable:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      21: return
    Exception table:
       from    to  target type
           0    11    14   Class java/lang/Throwable

  private void handleUnwrapThrowable(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: aload_2
       5: invokeinterface #99,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      10: ifeq          28
      13: aload_1
      14: new           #100                // class io/netty/handler/ssl/SslHandshakeCompletionEvent
      17: dup
      18: aload_2
      19: invokespecial #101                // Method io/netty/handler/ssl/SslHandshakeCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      22: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      27: pop
      28: aload_0
      29: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      32: ifnull        40
      35: aload_0
      36: aload_1
      37: invokespecial #127                // Method wrapAndFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      40: aload_0
      41: aload_1
      42: aload_2
      43: iconst_1
      44: iconst_0
      45: iconst_1
      46: invokespecial #190                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;ZZZ)V
      49: goto          90
      52: astore_3
      53: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      56: ldc           #246                // String SSLException during trying to call SSLEngine.wrap(...) because of an previous SSLException, ignoring...
      58: aload_3
      59: invokeinterface #247,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: aload_0
      65: aload_1
      66: aload_2
      67: iconst_1
      68: iconst_0
      69: iconst_1
      70: invokespecial #190                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;ZZZ)V
      73: goto          90
      76: astore        4
      78: aload_0
      79: aload_1
      80: aload_2
      81: iconst_1
      82: iconst_0
      83: iconst_1
      84: invokespecial #190                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;ZZZ)V
      87: aload         4
      89: athrow
      90: aload_2
      91: invokestatic  #129                // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      94: return
    Exception table:
       from    to  target type
           0    40    52   Class javax/net/ssl/SSLException
           0    40    76   any
          52    64    76   any
          76    78    76   any

  protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List<java.lang.Object>) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: sipush        128
       4: invokespecial #124                // Method isStateSet:(I)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #56                 // Field jdkCompatibilityMode:Z
      15: ifeq          27
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokespecial #248                // Method decodeJdkCompatible:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V
      24: goto          33
      27: aload_0
      28: aload_1
      29: aload_2
      30: invokespecial #249                // Method decodeNonJdkCompatible:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V
      33: return

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method channelReadComplete0:(Lio/netty/channel/ChannelHandlerContext;)V
       5: return

  private void channelReadComplete0(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #250                // Method discardSomeReadBytes:()V
       4: aload_0
       5: aload_1
       6: invokespecial #251                // Method flushIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
       9: aload_0
      10: aload_1
      11: invokespecial #157                // Method readIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
      14: aload_0
      15: sipush        256
      18: invokespecial #14                 // Method clearState:(I)V
      21: aload_1
      22: invokeinterface #252,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      27: pop
      28: return

  private void readIfNeeded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #253,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      11: invokeinterface #254,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      16: ifne          48
      19: aload_0
      20: sipush        256
      23: invokespecial #124                // Method isStateSet:(I)Z
      26: ifeq          41
      29: aload_0
      30: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      33: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      38: ifne          48
      41: aload_1
      42: invokeinterface #112,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
      47: pop
      48: return

  private void flushIfNeeded(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #124                // Method isStateSet:(I)Z
       6: ifeq          14
       9: aload_0
      10: aload_1
      11: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      14: return

  private int unwrapNonAppData(io.netty.channel.ChannelHandlerContext) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #130                // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
       5: iconst_0
       6: invokespecial #240                // Method unwrap:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;I)I
       9: ireturn

  private int unwrap(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, int) throws javax.net.ssl.SSLException;
    Code:
       0: iload_3
       1: istore        4
       3: iconst_0
       4: istore        5
       6: iconst_0
       7: istore        6
       9: iconst_0
      10: istore        7
      12: aload_0
      13: aload_1
      14: iload_3
      15: invokespecial #255                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
      18: astore        8
      20: aload_0
      21: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
      24: aload_0
      25: aload_2
      26: iload_3
      27: aload         8
      29: invokevirtual #256                // Method io/netty/handler/ssl/SslHandler$SslEngineType.unwrap:(Lio/netty/handler/ssl/SslHandler;Lio/netty/buffer/ByteBuf;ILio/netty/buffer/ByteBuf;)Ljavax/net/ssl/SSLEngineResult;
      32: astore        9
      34: aload         9
      36: invokevirtual #144                // Method javax/net/ssl/SSLEngineResult.getStatus:()Ljavax/net/ssl/SSLEngineResult$Status;
      39: astore        10
      41: aload         9
      43: invokevirtual #152                // Method javax/net/ssl/SSLEngineResult.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      46: astore        11
      48: aload         9
      50: invokevirtual #155                // Method javax/net/ssl/SSLEngineResult.bytesProduced:()I
      53: istore        12
      55: aload         9
      57: invokevirtual #168                // Method javax/net/ssl/SSLEngineResult.bytesConsumed:()I
      60: istore        13
      62: aload_2
      63: iload         13
      65: invokevirtual #182                // Method io/netty/buffer/ByteBuf.skipBytes:(I)Lio/netty/buffer/ByteBuf;
      68: pop
      69: iload_3
      70: iload         13
      72: isub
      73: istore_3
      74: aload         11
      76: getstatic     #257                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      79: if_acmpeq     90
      82: aload         11
      84: getstatic     #169                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      87: if_acmpne     133
      90: iload         5
      92: aload         8
      94: invokevirtual #139                // Method io/netty/buffer/ByteBuf.isReadable:()Z
      97: ifeq          110
     100: aload_0
     101: invokespecial #258                // Method setHandshakeSuccessUnwrapMarkReentry:()Z
     104: ifeq          117
     107: goto          125
     110: aload_0
     111: invokespecial #12                 // Method setHandshakeSuccess:()Z
     114: ifne          125
     117: aload         11
     119: getstatic     #257                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.FINISHED:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     122: if_acmpne     129
     125: iconst_1
     126: goto          130
     129: iconst_0
     130: ior
     131: istore        5
     133: aload         8
     135: invokevirtual #139                // Method io/netty/buffer/ByteBuf.isReadable:()Z
     138: ifeq          183
     141: aload_0
     142: sipush        256
     145: invokespecial #81                 // Method setState:(I)V
     148: aload_0
     149: sipush        512
     152: invokespecial #124                // Method isStateSet:(I)Z
     155: ifeq          171
     158: iconst_1
     159: istore        7
     161: aload_0
     162: aload_1
     163: aload         8
     165: invokespecial #259                // Method executeChannelRead:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V
     168: goto          180
     171: aload_1
     172: aload         8
     174: invokeinterface #260,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     179: pop
     180: aconst_null
     181: astore        8
     183: aload         10
     185: getstatic     #145                // Field javax/net/ssl/SSLEngineResult$Status.CLOSED:Ljavax/net/ssl/SSLEngineResult$Status;
     188: if_acmpne     197
     191: iconst_1
     192: istore        6
     194: goto          265
     197: aload         10
     199: getstatic     #184                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_OVERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     202: if_acmpne     265
     205: aload         8
     207: ifnull        216
     210: aload         8
     212: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     215: pop
     216: aload_0
     217: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
     220: invokevirtual #185                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
     223: invokeinterface #261,  1          // InterfaceMethod javax/net/ssl/SSLSession.getApplicationBufferSize:()I
     228: istore        14
     230: aload_0
     231: aload_1
     232: aload_0
     233: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
     236: aload_0
     237: iload         14
     239: iload         12
     241: if_icmpge     249
     244: iload         14
     246: goto          254
     249: iload         14
     251: iload         12
     253: isub
     254: invokevirtual #262                // Method io/netty/handler/ssl/SslHandler$SslEngineType.calculatePendingData:(Lio/netty/handler/ssl/SslHandler;I)I
     257: invokespecial #255                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
     260: astore        8
     262: goto          385
     265: aload         11
     267: getstatic     #167                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_TASK:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     270: if_acmpne     294
     273: aload_0
     274: iconst_1
     275: invokespecial #154                // Method runDelegatedTasks:(Z)Z
     278: istore        14
     280: iload         14
     282: ifne          291
     285: iconst_0
     286: istore        5
     288: goto          394
     291: goto          318
     294: aload         11
     296: getstatic     #263                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_WRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     299: if_acmpne     318
     302: aload_0
     303: aload_1
     304: iconst_1
     305: invokespecial #9                  // Method wrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;Z)Z
     308: ifeq          318
     311: iload_3
     312: ifne          318
     315: goto          394
     318: aload         10
     320: getstatic     #264                // Field javax/net/ssl/SSLEngineResult$Status.BUFFER_UNDERFLOW:Ljavax/net/ssl/SSLEngineResult$Status;
     323: if_acmpeq     356
     326: aload         11
     328: getstatic     #167                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_TASK:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     331: if_acmpeq     372
     334: iload         13
     336: ifne          344
     339: iload         12
     341: ifeq          356
     344: iload_3
     345: ifne          372
     348: aload         11
     350: getstatic     #169                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     353: if_acmpne     372
     356: aload         11
     358: getstatic     #265                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NEED_UNWRAP:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
     361: if_acmpne     394
     364: aload_0
     365: aload_1
     366: invokespecial #157                // Method readIfNeeded:(Lio/netty/channel/ChannelHandlerContext;)V
     369: goto          394
     372: aload         8
     374: ifnonnull     385
     377: aload_0
     378: aload_1
     379: iload_3
     380: invokespecial #255                // Method allocate:(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;
     383: astore        8
     385: aload_1
     386: invokeinterface #132,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.isRemoved:()Z
     391: ifeq          20
     394: aload_0
     395: iconst_2
     396: invokespecial #124                // Method isStateSet:(I)Z
     399: ifeq          422
     402: aload_0
     403: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
     406: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
     411: ifeq          422
     414: aload_0
     415: iconst_2
     416: invokespecial #14                 // Method clearState:(I)V
     419: iconst_1
     420: istore        5
     422: iload         5
     424: ifeq          433
     427: aload_0
     428: aload_1
     429: iconst_1
     430: invokespecial #11                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
     433: aload         8
     435: ifnull        444
     438: aload         8
     440: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     443: pop
     444: iload         6
     446: ifeq          509
     449: iload         7
     451: ifeq          462
     454: aload_0
     455: aload_1
     456: invokespecial #266                // Method executeNotifyClosePromise:(Lio/netty/channel/ChannelHandlerContext;)V
     459: goto          509
     462: aload_0
     463: aconst_null
     464: invokespecial #21                 // Method notifyClosePromise:(Ljava/lang/Throwable;)V
     467: goto          509
     470: astore        15
     472: aload         8
     474: ifnull        483
     477: aload         8
     479: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
     482: pop
     483: iload         6
     485: ifeq          506
     488: iload         7
     490: ifeq          501
     493: aload_0
     494: aload_1
     495: invokespecial #266                // Method executeNotifyClosePromise:(Lio/netty/channel/ChannelHandlerContext;)V
     498: goto          506
     501: aload_0
     502: aconst_null
     503: invokespecial #21                 // Method notifyClosePromise:(Ljava/lang/Throwable;)V
     506: aload         15
     508: athrow
     509: iload         4
     511: iload_3
     512: isub
     513: ireturn
    Exception table:
       from    to  target type
          20   433   470   any
         470   472   470   any

  private boolean setHandshakeSuccessUnwrapMarkReentry();
    Code:
       0: aload_0
       1: sipush        512
       4: invokespecial #124                // Method isStateSet:(I)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: istore_1
      16: iload_1
      17: ifeq          27
      20: aload_0
      21: sipush        512
      24: invokespecial #81                 // Method setState:(I)V
      27: aload_0
      28: invokespecial #12                 // Method setHandshakeSuccess:()Z
      31: istore_2
      32: iload_1
      33: ifeq          43
      36: aload_0
      37: sipush        512
      40: invokespecial #14                 // Method clearState:(I)V
      43: iload_2
      44: ireturn
      45: astore_3
      46: iload_1
      47: ifeq          57
      50: aload_0
      51: sipush        512
      54: invokespecial #14                 // Method clearState:(I)V
      57: aload_3
      58: athrow
    Exception table:
       from    to  target type
          27    32    45   any

  private void executeNotifyClosePromise(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
       6: new           #267                // class io/netty/handler/ssl/SslHandler$3
       9: dup
      10: aload_0
      11: invokespecial #268                // Method io/netty/handler/ssl/SslHandler$3."<init>":(Lio/netty/handler/ssl/SslHandler;)V
      14: invokeinterface #80,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      19: goto          28
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokespecial #21                 // Method notifyClosePromise:(Ljava/lang/Throwable;)V
      28: return
    Exception table:
       from    to  target type
           0    19    22   Class java/util/concurrent/RejectedExecutionException

  private void executeChannelRead(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
       6: new           #270                // class io/netty/handler/ssl/SslHandler$4
       9: dup
      10: aload_0
      11: aload_1
      12: aload_2
      13: invokespecial #271                // Method io/netty/handler/ssl/SslHandler$4."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V
      16: invokeinterface #80,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      21: goto          32
      24: astore_3
      25: aload_2
      26: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
      29: pop
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    21    24   Class java/util/concurrent/RejectedExecutionException

  private static java.nio.ByteBuffer toByteBuffer(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: invokevirtual #136                // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
       4: iconst_1
       5: if_icmpne     17
       8: aload_0
       9: iload_1
      10: iload_2
      11: invokevirtual #174                // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      14: goto          23
      17: aload_0
      18: iload_1
      19: iload_2
      20: invokevirtual #180                // Method io/netty/buffer/ByteBuf.nioBuffer:(II)Ljava/nio/ByteBuffer;
      23: areturn

  private static boolean inEventLoop(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: instanceof    #272                // class io/netty/util/concurrent/EventExecutor
       4: ifeq          23
       7: aload_0
       8: checkcast     #272                // class io/netty/util/concurrent/EventExecutor
      11: invokeinterface #77,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private boolean runDelegatedTasks(boolean);
    Code:
       0: aload_0
       1: getfield      #52                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
       4: getstatic     #28                 // Field io/netty/util/concurrent/ImmediateExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateExecutor;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #52                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      14: invokestatic  #273                // Method inEventLoop:(Ljava/util/concurrent/Executor;)Z
      17: ifeq          167
      20: aload_0
      21: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      24: invokevirtual #274                // Method javax/net/ssl/SSLEngine.getDelegatedTask:()Ljava/lang/Runnable;
      27: astore_2
      28: aload_2
      29: ifnonnull     34
      32: iconst_1
      33: ireturn
      34: aload_0
      35: sipush        128
      38: invokespecial #81                 // Method setState:(I)V
      41: aload_2
      42: instanceof    #275                // class io/netty/handler/ssl/AsyncRunnable
      45: ifeq          136
      48: iconst_0
      49: istore_3
      50: aload_2
      51: checkcast     #275                // class io/netty/handler/ssl/AsyncRunnable
      54: astore        4
      56: new           #276                // class io/netty/handler/ssl/SslHandler$AsyncTaskCompletionHandler
      59: dup
      60: aload_0
      61: iload_1
      62: invokespecial #277                // Method io/netty/handler/ssl/SslHandler$AsyncTaskCompletionHandler."<init>":(Lio/netty/handler/ssl/SslHandler;Z)V
      65: astore        5
      67: aload         4
      69: aload         5
      71: invokeinterface #278,  2          // InterfaceMethod io/netty/handler/ssl/AsyncRunnable.run:(Ljava/lang/Runnable;)V
      76: aload         5
      78: invokevirtual #279                // Method io/netty/handler/ssl/SslHandler$AsyncTaskCompletionHandler.resumeLater:()Z
      81: istore_3
      82: iload_3
      83: ifeq          103
      86: iconst_0
      87: istore        6
      89: iload_3
      90: ifne          100
      93: aload_0
      94: sipush        128
      97: invokespecial #14                 // Method clearState:(I)V
     100: iload         6
     102: ireturn
     103: iload_3
     104: ifne          133
     107: aload_0
     108: sipush        128
     111: invokespecial #14                 // Method clearState:(I)V
     114: goto          133
     117: astore        7
     119: iload_3
     120: ifne          130
     123: aload_0
     124: sipush        128
     127: invokespecial #14                 // Method clearState:(I)V
     130: aload         7
     132: athrow
     133: goto          164
     136: aload_2
     137: invokeinterface #280,  1          // InterfaceMethod java/lang/Runnable.run:()V
     142: aload_0
     143: sipush        128
     146: invokespecial #14                 // Method clearState:(I)V
     149: goto          164
     152: astore        8
     154: aload_0
     155: sipush        128
     158: invokespecial #14                 // Method clearState:(I)V
     161: aload         8
     163: athrow
     164: goto          20
     167: aload_0
     168: iload_1
     169: invokespecial #281                // Method executeDelegatedTask:(Z)V
     172: iconst_0
     173: ireturn
    Exception table:
       from    to  target type
          50    89   117   any
         117   119   117   any
         136   142   152   any
         152   154   152   any

  private io.netty.handler.ssl.SslHandler$SslTasksRunner getTaskRunner(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: getfield      #34                 // Field sslTaskRunnerForUnwrap:Lio/netty/handler/ssl/SslHandler$SslTasksRunner;
       8: goto          15
      11: aload_0
      12: getfield      #35                 // Field sslTaskRunner:Lio/netty/handler/ssl/SslHandler$SslTasksRunner;
      15: areturn

  private void executeDelegatedTask(boolean);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokespecial #20                 // Method getTaskRunner:(Z)Lio/netty/handler/ssl/SslHandler$SslTasksRunner;
       6: invokespecial #13                 // Method executeDelegatedTask:(Lio/netty/handler/ssl/SslHandler$SslTasksRunner;)V
       9: return

  private void executeDelegatedTask(io.netty.handler.ssl.SslHandler$SslTasksRunner);
    Code:
       0: aload_0
       1: sipush        128
       4: invokespecial #81                 // Method setState:(I)V
       7: aload_0
       8: getfield      #52                 // Field delegatedTaskExecutor:Ljava/util/concurrent/Executor;
      11: aload_1
      12: invokeinterface #282,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      17: goto          30
      20: astore_2
      21: aload_0
      22: sipush        128
      25: invokespecial #14                 // Method clearState:(I)V
      28: aload_2
      29: athrow
      30: return
    Exception table:
       from    to  target type
           7    17    20   Class java/util/concurrent/RejectedExecutionException

  private boolean setHandshakeSuccess();
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
       9: ifne          37
      12: aload_0
      13: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      16: aload_0
      17: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      20: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      25: invokeinterface #283,  2          // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: dup
      39: istore_1
      40: ifeq          120
      43: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      46: invokeinterface #195,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      51: ifeq          107
      54: aload_0
      55: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      58: invokevirtual #185                // Method javax/net/ssl/SSLEngine.getSession:()Ljavax/net/ssl/SSLSession;
      61: astore_2
      62: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      65: ldc_w         #284                // String {} HANDSHAKEN: protocol:{} cipher suite:{}
      68: iconst_3
      69: anewarray     #225                // class java/lang/Object
      72: dup
      73: iconst_0
      74: aload_0
      75: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      78: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      83: aastore
      84: dup
      85: iconst_1
      86: aload_2
      87: invokeinterface #285,  1          // InterfaceMethod javax/net/ssl/SSLSession.getProtocol:()Ljava/lang/String;
      92: aastore
      93: dup
      94: iconst_2
      95: aload_2
      96: invokeinterface #286,  1          // InterfaceMethod javax/net/ssl/SSLSession.getCipherSuite:()Ljava/lang/String;
     101: aastore
     102: invokeinterface #226,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     107: aload_0
     108: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     111: getstatic     #287                // Field io/netty/handler/ssl/SslHandshakeCompletionEvent.SUCCESS:Lio/netty/handler/ssl/SslHandshakeCompletionEvent;
     114: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     119: pop
     120: aload_0
     121: iconst_4
     122: invokespecial #124                // Method isStateSet:(I)Z
     125: ifeq          165
     128: aload_0
     129: iconst_4
     130: invokespecial #14                 // Method clearState:(I)V
     133: aload_0
     134: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     137: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     142: invokeinterface #253,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
     147: invokeinterface #254,  1          // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
     152: ifne          165
     155: aload_0
     156: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
     159: invokeinterface #112,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.read:()Lio/netty/channel/ChannelHandlerContext;
     164: pop
     165: iload_1
     166: ireturn

  private void setHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_1
       5: iconst_0
       6: invokespecial #190                // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;ZZZ)V
       9: return

  private void setHandshakeFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: bipush        32
       3: invokespecial #81                 // Method setState:(I)V
       6: aload_0
       7: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      10: invokevirtual #82                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      13: iload_3
      14: ifeq          93
      17: aload_0
      18: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      21: invokevirtual #288                // Method javax/net/ssl/SSLEngine.closeInbound:()V
      24: goto          93
      27: astore        6
      29: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      32: invokeinterface #195,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      37: ifeq          93
      40: aload         6
      42: invokevirtual #289                // Method javax/net/ssl/SSLException.getMessage:()Ljava/lang/String;
      45: astore        7
      47: aload         7
      49: ifnull        74
      52: aload         7
      54: ldc_w         #290                // String possible truncation attack
      57: invokevirtual #291                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      60: ifne          93
      63: aload         7
      65: ldc_w         #292                // String closing inbound before receiving peer\'s close_notify
      68: invokevirtual #291                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      71: ifne          93
      74: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      77: ldc_w         #293                // String {} SSLEngine.closeInbound() raised an exception.
      80: aload_1
      81: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      86: aload         6
      88: invokeinterface #197,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      93: aload_0
      94: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      97: aload_2
      98: invokeinterface #99,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
     103: ifne          111
     106: iload         5
     108: ifeq          118
     111: aload_1
     112: aload_2
     113: iload         4
     115: invokestatic  #294                // Method io/netty/handler/ssl/SslUtils.handleHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;Z)V
     118: aload_0
     119: aload_1
     120: aload_2
     121: invokespecial #7                  // Method releaseAndFailAll:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     124: goto          138
     127: astore        8
     129: aload_0
     130: aload_1
     131: aload_2
     132: invokespecial #7                  // Method releaseAndFailAll:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
     135: aload         8
     137: athrow
     138: return
    Exception table:
       from    to  target type
          17    24    27   Class javax/net/ssl/SSLException
           0   118   127   any
         127   129   127   any

  private void setHandshakeFailureTransportFailure(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: new           #104                // class javax/net/ssl/SSLException
       3: dup
       4: ldc_w         #295                // String failure when writing TLS control frames
       7: aload_2
       8: invokespecial #296                // Method javax/net/ssl/SSLException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: astore_3
      12: aload_0
      13: aload_1
      14: aload_3
      15: invokespecial #7                  // Method releaseAndFailAll:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      18: aload_0
      19: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      22: aload_3
      23: invokeinterface #99,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      28: ifeq          46
      31: aload_1
      32: new           #100                // class io/netty/handler/ssl/SslHandshakeCompletionEvent
      35: dup
      36: aload_3
      37: invokespecial #101                // Method io/netty/handler/ssl/SslHandshakeCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      40: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      45: pop
      46: aload_1
      47: invokeinterface #199,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      52: pop
      53: goto          68
      56: astore        4
      58: aload_1
      59: invokeinterface #199,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      64: pop
      65: aload         4
      67: athrow
      68: return
    Exception table:
       from    to  target type
           0    46    56   any
          56    58    56   any

  private void releaseAndFailAll(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
       4: ifnull        16
       7: aload_0
       8: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      11: aload_1
      12: aload_2
      13: invokevirtual #94                 // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.releaseAndFailAll:(Lio/netty/channel/ChannelOutboundInvoker;Ljava/lang/Throwable;)V
      16: return

  private void notifyClosePromise(java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     39
       4: aload_0
       5: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
       8: aload_0
       9: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      12: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      17: invokevirtual #297                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.trySuccess:(Ljava/lang/Object;)Z
      20: ifeq          68
      23: aload_0
      24: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      27: getstatic     #298                // Field io/netty/handler/ssl/SslCloseCompletionEvent.SUCCESS:Lio/netty/handler/ssl/SslCloseCompletionEvent;
      30: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      35: pop
      36: goto          68
      39: aload_0
      40: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
      43: aload_1
      44: invokevirtual #299                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      47: ifeq          68
      50: aload_0
      51: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      54: new           #300                // class io/netty/handler/ssl/SslCloseCompletionEvent
      57: dup
      58: aload_1
      59: invokespecial #301                // Method io/netty/handler/ssl/SslCloseCompletionEvent."<init>":(Ljava/lang/Throwable;)V
      62: invokeinterface #102,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      67: pop
      68: return

  private void closeOutboundAndChannel(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise, boolean) throws java.lang.Exception;
    Code:
       0: aload_0
       1: bipush        32
       3: invokespecial #81                 // Method setState:(I)V
       6: aload_0
       7: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      10: invokevirtual #82                 // Method javax/net/ssl/SSLEngine.closeOutbound:()V
      13: aload_1
      14: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      19: invokeinterface #198,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      24: ifne          51
      27: iload_3
      28: ifeq          42
      31: aload_1
      32: aload_2
      33: invokeinterface #302,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      38: pop
      39: goto          50
      42: aload_1
      43: aload_2
      44: invokeinterface #303,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      49: pop
      50: return
      51: aload_1
      52: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      57: astore        4
      59: aload_0
      60: aload_1
      61: aload         4
      63: invokespecial #83                 // Method flush:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      66: aload_0
      67: bipush        64
      69: invokespecial #124                // Method isStateSet:(I)Z
      72: ifne          105
      75: aload_0
      76: bipush        64
      78: invokespecial #81                 // Method setState:(I)V
      81: aload_0
      82: aload_1
      83: aload         4
      85: iconst_0
      86: aload_1
      87: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
      92: aload_2
      93: invokestatic  #304                // Method io/netty/util/concurrent/PromiseNotifier.cascade:(ZLio/netty/util/concurrent/Future;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      96: checkcast     #305                // class io/netty/channel/ChannelPromise
      99: invokespecial #306                // Method safeClose:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
     102: goto          186
     105: aload_0
     106: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
     109: new           #307                // class io/netty/handler/ssl/SslHandler$5
     112: dup
     113: aload_0
     114: aload_2
     115: invokespecial #308                // Method io/netty/handler/ssl/SslHandler$5."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelPromise;)V
     118: invokevirtual #309                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     121: pop
     122: goto          186
     125: astore        5
     127: aload_0
     128: bipush        64
     130: invokespecial #124                // Method isStateSet:(I)Z
     133: ifne          166
     136: aload_0
     137: bipush        64
     139: invokespecial #81                 // Method setState:(I)V
     142: aload_0
     143: aload_1
     144: aload         4
     146: iconst_0
     147: aload_1
     148: invokeinterface #75,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.newPromise:()Lio/netty/channel/ChannelPromise;
     153: aload_2
     154: invokestatic  #304                // Method io/netty/util/concurrent/PromiseNotifier.cascade:(ZLio/netty/util/concurrent/Future;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
     157: checkcast     #305                // class io/netty/channel/ChannelPromise
     160: invokespecial #306                // Method safeClose:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
     163: goto          183
     166: aload_0
     167: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
     170: new           #307                // class io/netty/handler/ssl/SslHandler$5
     173: dup
     174: aload_0
     175: aload_2
     176: invokespecial #308                // Method io/netty/handler/ssl/SslHandler$5."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelPromise;)V
     179: invokevirtual #309                // Method io/netty/handler/ssl/SslHandler$LazyChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     182: pop
     183: aload         5
     185: athrow
     186: return
    Exception table:
       from    to  target type
          59    66   125   any
         125   127   125   any

  private void flush(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
       4: ifnull        21
       7: aload_0
       8: getfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      11: getstatic     #130                // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      14: aload_2
      15: invokevirtual #123                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue.add:(Lio/netty/buffer/ByteBuf;Lio/netty/channel/ChannelPromise;)V
      18: goto          31
      21: aload_2
      22: invokestatic  #122                // Method newPendingWritesNullException:()Ljava/lang/IllegalStateException;
      25: invokeinterface #121,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      30: pop
      31: aload_0
      32: aload_1
      33: invokevirtual #310                // Method flush:(Lio/netty/channel/ChannelHandlerContext;)V
      36: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: aload_1
       6: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      11: astore_2
      12: aload_0
      13: new           #311                // class io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue
      16: dup
      17: aload_0
      18: aload_2
      19: bipush        16
      21: invokespecial #312                // Method io/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/Channel;I)V
      24: putfield      #89                 // Field pendingUnencryptedWrites:Lio/netty/handler/ssl/SslHandler$SslHandlerCoalescingBufferQueue;
      27: aload_0
      28: aload_2
      29: invokespecial #313                // Method setOpensslEngineSocketFd:(Lio/netty/channel/Channel;)V
      32: getstatic     #314                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      35: aload_2
      36: invokeinterface #253,  1          // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
      41: getstatic     #315                // Field io/netty/channel/ChannelOption.TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
      44: invokeinterface #316,  2          // InterfaceMethod io/netty/channel/ChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      49: invokevirtual #317                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      52: istore_3
      53: aload_2
      54: invokeinterface #198,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      59: istore        4
      61: iload         4
      63: ifne          70
      66: iload_3
      67: ifeq          113
      70: aload_0
      71: iload         4
      73: invokespecial #126                // Method startHandshakeProcessing:(Z)V
      76: iload_3
      77: ifeq          113
      80: aload_2
      81: invokeinterface #318,  1          // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      86: invokeinterface #319,  1          // InterfaceMethod io/netty/channel/Channel$Unsafe.outboundBuffer:()Lio/netty/channel/ChannelOutboundBuffer;
      91: dup
      92: astore        5
      94: ifnull        107
      97: aload         5
      99: invokevirtual #320                // Method io/netty/channel/ChannelOutboundBuffer.totalPendingWriteBytes:()J
     102: lconst_0
     103: lcmp
     104: ifle          113
     107: aload_0
     108: bipush        16
     110: invokespecial #81                 // Method setState:(I)V
     113: return

  private void startHandshakeProcessing(boolean);
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #124                // Method isStateSet:(I)Z
       6: ifne          37
       9: aload_0
      10: bipush        8
      12: invokespecial #81                 // Method setState:(I)V
      15: aload_0
      16: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      19: invokevirtual #321                // Method javax/net/ssl/SSLEngine.getUseClientMode:()Z
      22: ifeq          30
      25: aload_0
      26: iload_1
      27: invokespecial #322                // Method handshake:(Z)V
      30: aload_0
      31: invokespecial #323                // Method applyHandshakeTimeout:()V
      34: goto          54
      37: aload_0
      38: bipush        16
      40: invokespecial #124                // Method isStateSet:(I)Z
      43: ifeq          54
      46: aload_0
      47: aload_0
      48: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      51: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      54: return

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> renegotiate();
    Code:
       0: aload_0
       1: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: new           #113                // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #324                // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      24: invokeinterface #325,  1          // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      29: invokevirtual #326                // Method renegotiate:(Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      32: areturn

  public io.netty.util.concurrent.Future<io.netty.channel.Channel> renegotiate(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_1
       1: ldc_w         #327                // String promise
       4: invokestatic  #48                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      12: astore_2
      13: aload_2
      14: ifnonnull     25
      17: new           #113                // class java/lang/IllegalStateException
      20: dup
      21: invokespecial #324                // Method java/lang/IllegalStateException."<init>":()V
      24: athrow
      25: aload_2
      26: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      31: astore_3
      32: aload_3
      33: invokeinterface #77,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      38: ifne          58
      41: aload_3
      42: new           #328                // class io/netty/handler/ssl/SslHandler$6
      45: dup
      46: aload_0
      47: aload_1
      48: invokespecial #329                // Method io/netty/handler/ssl/SslHandler$6."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;)V
      51: invokeinterface #80,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      56: aload_1
      57: areturn
      58: aload_0
      59: aload_1
      60: invokespecial #8                  // Method renegotiateOnEventLoop:(Lio/netty/util/concurrent/Promise;)V
      63: aload_1
      64: areturn

  private void renegotiateOnEventLoop(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: astore_2
       5: aload_2
       6: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      11: ifne          23
      14: aload_2
      15: aload_1
      16: invokestatic  #330                // Method io/netty/util/concurrent/PromiseNotifier.cascade:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      19: pop
      20: goto          37
      23: aload_0
      24: aload_1
      25: putfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      28: aload_0
      29: iconst_1
      30: invokespecial #322                // Method handshake:(Z)V
      33: aload_0
      34: invokespecial #323                // Method applyHandshakeTimeout:()V
      37: return

  private void handshake(boolean);
    Code:
       0: aload_0
       1: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: invokevirtual #331                // Method javax/net/ssl/SSLEngine.getHandshakeStatus:()Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
       7: getstatic     #169                // Field javax/net/ssl/SSLEngineResult$HandshakeStatus.NOT_HANDSHAKING:Ljavax/net/ssl/SSLEngineResult$HandshakeStatus;
      10: if_acmpeq     14
      13: return
      14: aload_0
      15: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
      18: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      23: ifeq          27
      26: return
      27: aload_0
      28: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      31: astore_2
      32: aload_0
      33: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      36: invokevirtual #332                // Method javax/net/ssl/SSLEngine.beginHandshake:()V
      39: aload_0
      40: aload_2
      41: iconst_0
      42: invokespecial #9                  // Method wrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;Z)Z
      45: pop
      46: iload_1
      47: ifeq          91
      50: aload_0
      51: aload_2
      52: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      55: goto          91
      58: astore_3
      59: aload_0
      60: aload_2
      61: aload_3
      62: invokespecial #17                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      65: iload_1
      66: ifeq          91
      69: aload_0
      70: aload_2
      71: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      74: goto          91
      77: astore        4
      79: iload_1
      80: ifeq          88
      83: aload_0
      84: aload_2
      85: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      88: aload         4
      90: athrow
      91: return
    Exception table:
       from    to  target type
          32    46    58   Class java/lang/Throwable
          32    46    77   any
          58    65    77   any
          77    79    77   any

  private void applyHandshakeTimeout();
    Code:
       0: aload_0
       1: getfield      #38                 // Field handshakePromise:Lio/netty/util/concurrent/Promise;
       4: astore_1
       5: aload_0
       6: getfield      #41                 // Field handshakeTimeoutMillis:J
       9: lstore_2
      10: lload_2
      11: lconst_0
      12: lcmp
      13: ifle          25
      16: aload_1
      17: invokeinterface #95,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      22: ifeq          26
      25: return
      26: aload_0
      27: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      30: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      35: new           #333                // class io/netty/handler/ssl/SslHandler$7
      38: dup
      39: aload_0
      40: aload_1
      41: lload_2
      42: invokespecial #334                // Method io/netty/handler/ssl/SslHandler$7."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Promise;J)V
      45: lload_2
      46: getstatic     #335                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      49: invokeinterface #336,  5          // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      54: astore        4
      56: aload_1
      57: new           #337                // class io/netty/handler/ssl/SslHandler$8
      60: dup
      61: aload_0
      62: aload         4
      64: invokespecial #338                // Method io/netty/handler/ssl/SslHandler$8."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Future;)V
      67: invokeinterface #339,  2          // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
      72: pop
      73: return

  private void forceFlush(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #14                 // Method clearState:(I)V
       6: aload_1
       7: invokeinterface #340,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      12: pop
      13: return

  private void setOpensslEngineSocketFd(io.netty.channel.Channel);
    Code:
       0: aload_1
       1: instanceof    #341                // class io/netty/channel/unix/UnixChannel
       4: ifeq          39
       7: aload_0
       8: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      11: instanceof    #342                // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
      14: ifeq          39
      17: aload_0
      18: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
      21: checkcast     #342                // class io/netty/handler/ssl/ReferenceCountedOpenSslEngine
      24: aload_1
      25: checkcast     #341                // class io/netty/channel/unix/UnixChannel
      28: invokeinterface #343,  1          // InterfaceMethod io/netty/channel/unix/UnixChannel.fd:()Lio/netty/channel/unix/FileDescriptor;
      33: invokevirtual #344                // Method io/netty/channel/unix/FileDescriptor.intValue:()I
      36: invokevirtual #345                // Method io/netty/handler/ssl/ReferenceCountedOpenSslEngine.bioSetFd:(I)V
      39: return

  public void channelActive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       7: invokespecial #313                // Method setOpensslEngineSocketFd:(Lio/netty/channel/Channel;)V
      10: aload_0
      11: getfield      #54                 // Field startTls:Z
      14: ifne          22
      17: aload_0
      18: iconst_1
      19: invokespecial #126                // Method startHandshakeProcessing:(Z)V
      22: aload_1
      23: invokeinterface #346,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
      28: pop
      29: return

  private void safeClose(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #87,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #198,  1          // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      11: ifne          23
      14: aload_1
      15: aload_3
      16: invokeinterface #303,  2          // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      21: pop
      22: return
      23: aload_2
      24: invokeinterface #347,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      29: ifne          83
      32: aload_0
      33: getfield      #44                 // Field closeNotifyFlushTimeoutMillis:J
      36: lstore        5
      38: lload         5
      40: lconst_0
      41: lcmp
      42: ifle          77
      45: aload_1
      46: invokeinterface #76,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      51: new           #348                // class io/netty/handler/ssl/SslHandler$9
      54: dup
      55: aload_0
      56: aload_2
      57: aload_1
      58: aload_3
      59: invokespecial #349                // Method io/netty/handler/ssl/SslHandler$9."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      62: lload         5
      64: getstatic     #335                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      67: invokeinterface #336,  5          // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      72: astore        4
      74: goto          80
      77: aconst_null
      78: astore        4
      80: goto          86
      83: aconst_null
      84: astore        4
      86: aload_2
      87: new           #350                // class io/netty/handler/ssl/SslHandler$10
      90: dup
      91: aload_0
      92: aload         4
      94: aload_1
      95: aload_3
      96: invokespecial #351                // Method io/netty/handler/ssl/SslHandler$10."<init>":(Lio/netty/handler/ssl/SslHandler;Lio/netty/util/concurrent/Future;Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      99: invokeinterface #166,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     104: pop
     105: return

  private static void addCloseListener(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: iconst_0
       1: aload_0
       2: aload_1
       3: invokestatic  #304                // Method io/netty/util/concurrent/PromiseNotifier.cascade:(ZLio/netty/util/concurrent/Future;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
       6: pop
       7: return

  private io.netty.buffer.ByteBuf allocate(io.netty.channel.ChannelHandlerContext, int);
    Code:
       0: aload_1
       1: invokeinterface #131,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       6: astore_3
       7: aload_0
       8: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
      11: getfield      #172                // Field io/netty/handler/ssl/SslHandler$SslEngineType.wantsDirectBuffer:Z
      14: ifeq          25
      17: aload_3
      18: iload_2
      19: invokeinterface #176,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
      24: areturn
      25: aload_3
      26: iload_2
      27: invokeinterface #352,  2          // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      32: areturn

  private io.netty.buffer.ByteBuf allocateOutNetBuf(io.netty.channel.ChannelHandlerContext, int, int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
       4: aload_0
       5: aload_1
       6: invokeinterface #131,  1          // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      11: iload_2
      12: iload_3
      13: invokevirtual #353                // Method io/netty/handler/ssl/SslHandler$SslEngineType.allocateWrapBuffer:(Lio/netty/handler/ssl/SslHandler;Lio/netty/buffer/ByteBufAllocator;II)Lio/netty/buffer/ByteBuf;
      16: areturn

  private boolean isStateSet(int);
    Code:
       0: aload_0
       1: getfield      #354                // Field state:S
       4: iload_1
       5: iand
       6: iload_1
       7: if_icmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private void setState(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #354                // Field state:S
       5: iload_1
       6: ior
       7: i2s
       8: putfield      #354                // Field state:S
      11: return

  private void clearState(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #354                // Field state:S
       5: iload_1
       6: iconst_m1
       7: ixor
       8: iand
       9: i2s
      10: putfield      #354                // Field state:S
      13: return

  private static boolean attemptCopyToCumulation(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_1
       1: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_3
       5: aload_0
       6: invokevirtual #355                // Method io/netty/buffer/ByteBuf.capacity:()I
       9: istore        4
      11: iload_2
      12: aload_0
      13: invokevirtual #135                // Method io/netty/buffer/ByteBuf.readableBytes:()I
      16: isub
      17: iload_3
      18: if_icmplt     66
      21: aload_0
      22: iload_3
      23: invokevirtual #356                // Method io/netty/buffer/ByteBuf.isWritable:(I)Z
      26: ifeq          35
      29: iload         4
      31: iload_2
      32: if_icmpge     53
      35: iload         4
      37: iload_2
      38: if_icmpge     66
      41: aload_0
      42: iload_3
      43: iconst_0
      44: invokevirtual #357                // Method io/netty/buffer/ByteBuf.ensureWritable:(IZ)I
      47: invokestatic  #358                // Method io/netty/buffer/ByteBufUtil.ensureWritableSuccess:(I)Z
      50: ifeq          66
      53: aload_0
      54: aload_1
      55: invokevirtual #359                // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      58: pop
      59: aload_1
      60: invokevirtual #141                // Method io/netty/buffer/ByteBuf.release:()Z
      63: pop
      64: iconst_1
      65: ireturn
      66: iconst_0
      67: ireturn

  static javax.net.ssl.SSLEngine access$100(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #26                 // Field engine:Ljavax/net/ssl/SSLEngine;
       4: areturn

  static java.nio.ByteBuffer[] access$200(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #25                 // Field singleBuffer:[Ljava/nio/ByteBuffer;
       4: areturn

  static java.nio.ByteBuffer access$300(io.netty.buffer.ByteBuf, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #24                 // Method toByteBuffer:(Lio/netty/buffer/ByteBuf;II)Ljava/nio/ByteBuffer;
       6: areturn

  static void access$500(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method closeOutbound0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$600(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #22                 // Method setHandshakeFailureTransportFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
       6: return

  static void access$700(io.netty.handler.ssl.SslHandler, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #21                 // Method notifyClosePromise:(Ljava/lang/Throwable;)V
       5: return

  static io.netty.handler.ssl.SslHandler$SslTasksRunner access$800(io.netty.handler.ssl.SslHandler, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #20                 // Method getTaskRunner:(Z)Lio/netty/handler/ssl/SslHandler$SslTasksRunner;
       5: areturn

  static io.netty.channel.ChannelHandlerContext access$900(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #19                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static void access$1000(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #18                 // Method handleUnwrapThrowable:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
       6: return

  static void access$1100(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #17                 // Method setHandshakeFailure:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
       6: return

  static void access$1200(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method forceFlush:(Lio/netty/channel/ChannelHandlerContext;)V
       5: return

  static void access$1300(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method channelReadComplete0:(Lio/netty/channel/ChannelHandlerContext;)V
       5: return

  static void access$1400(io.netty.handler.ssl.SslHandler, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #14                 // Method clearState:(I)V
       5: return

  static void access$1500(io.netty.handler.ssl.SslHandler, io.netty.handler.ssl.SslHandler$SslTasksRunner);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method executeDelegatedTask:(Lio/netty/handler/ssl/SslHandler$SslTasksRunner;)V
       5: return

  static boolean access$1600(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method setHandshakeSuccess:()Z
       4: ireturn

  static void access$1700(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #11                 // Method wrap:(Lio/netty/channel/ChannelHandlerContext;Z)V
       6: return

  static int access$1800(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method unwrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;)I
       5: ireturn

  static boolean access$1900(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, boolean) throws javax.net.ssl.SSLException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #9                  // Method wrapNonAppData:(Lio/netty/channel/ChannelHandlerContext;Z)Z
       6: ireturn

  static void access$2200(io.netty.handler.ssl.SslHandler, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method renegotiateOnEventLoop:(Lio/netty/util/concurrent/Promise;)V
       5: return

  static void access$2300(io.netty.handler.ssl.SslHandler, io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method releaseAndFailAll:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
       6: return

  static io.netty.util.internal.logging.InternalLogger access$2400();
    Code:
       0: getstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static void access$2500(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method addCloseListener:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       5: return

  static long access$2600(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field closeNotifyReadTimeoutMillis:J
       4: lreturn

  static io.netty.handler.ssl.SslHandler$LazyChannelPromise access$2700(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sslClosePromise:Lio/netty/handler/ssl/SslHandler$LazyChannelPromise;
       4: areturn

  static boolean access$2800(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #2                  // Method attemptCopyToCumulation:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;I)Z
       6: ireturn

  static io.netty.handler.ssl.SslHandler$SslEngineType access$2900(io.netty.handler.ssl.SslHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field engineType:Lio/netty/handler/ssl/SslHandler$SslEngineType;
       4: areturn

  static {};
    Code:
       0: ldc           #45                 // class io/netty/handler/ssl/SslHandler
       2: invokevirtual #360                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #237                // Field $assertionsDisabled:Z
      16: ldc           #45                 // class io/netty/handler/ssl/SslHandler
      18: invokestatic  #361                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #6                  // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc_w         #362                // String ^.*(?:Socket|Datagram|Sctp|Udt)Channel.*$
      27: invokestatic  #363                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      30: putstatic     #213                // Field IGNORABLE_CLASS_IN_STACK:Ljava/util/regex/Pattern;
      33: ldc_w         #364                // String ^.*(?:connection.*(?:reset|closed|abort|broken)|broken.*pipe).*$
      36: iconst_2
      37: invokestatic  #366                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;
      40: putstatic     #203                // Field IGNORABLE_ERROR_MESSAGE:Ljava/util/regex/Pattern;
      43: return
}
