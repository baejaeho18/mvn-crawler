Compiled from "Http2MultiplexHandler.java"
public final class io.netty.handler.codec.http2.Http2MultiplexHandler extends io.netty.handler.codec.http2.Http2ChannelDuplexHandler {
  static final io.netty.channel.ChannelFutureListener CHILD_CHANNEL_REGISTRATION_LISTENER;

  private final io.netty.channel.ChannelHandler inboundStreamHandler;

  private final io.netty.channel.ChannelHandler upgradeStreamHandler;

  private final java.util.Queue<io.netty.handler.codec.http2.AbstractHttp2StreamChannel> readCompletePendingQueue;

  private boolean parentReadInProgress;

  private int idCount;

  private volatile io.netty.channel.ChannelHandlerContext ctx;

  public io.netty.handler.codec.http2.Http2MultiplexHandler(io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #6                  // Method "<init>":(Lio/netty/channel/ChannelHandler;Lio/netty/channel/ChannelHandler;)V
       6: return

  public io.netty.handler.codec.http2.Http2MultiplexHandler(io.netty.channel.ChannelHandler, io.netty.channel.ChannelHandler);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method io/netty/handler/codec/http2/Http2ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: new           #8                  // class io/netty/handler/codec/http2/MaxCapacityQueue
       8: dup
       9: new           #9                  // class java/util/ArrayDeque
      12: dup
      13: bipush        8
      15: invokespecial #10                 // Method java/util/ArrayDeque."<init>":(I)V
      18: bipush        100
      20: invokespecial #12                 // Method io/netty/handler/codec/http2/MaxCapacityQueue."<init>":(Ljava/util/Queue;I)V
      23: putfield      #3                  // Field readCompletePendingQueue:Ljava/util/Queue;
      26: aload_0
      27: aload_1
      28: ldc           #13                 // String inboundStreamHandler
      30: invokestatic  #14                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #15                 // class io/netty/channel/ChannelHandler
      36: putfield      #16                 // Field inboundStreamHandler:Lio/netty/channel/ChannelHandler;
      39: aload_0
      40: aload_2
      41: putfield      #17                 // Field upgradeStreamHandler:Lio/netty/channel/ChannelHandler;
      44: return

  static void registerDone(io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifne          46
       9: aload_0
      10: invokeinterface #19,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      15: astore_1
      16: aload_1
      17: invokeinterface #20,  1           // InterfaceMethod io/netty/channel/Channel.isRegistered:()Z
      22: ifeq          35
      25: aload_1
      26: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      31: pop
      32: goto          46
      35: aload_1
      36: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      41: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.closeForcibly:()V
      46: return

  protected void handlerAdded0(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
       6: aload_1
       7: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      12: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      17: if_acmpeq     30
      20: new           #27                 // class java/lang/IllegalStateException
      23: dup
      24: ldc           #28                 // String EventExecutor must be EventLoop of Channel
      26: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_0
      31: aload_1
      32: putfield      #1                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      35: return

  protected void handlerRemoved0(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #3                  // Field readCompletePendingQueue:Ljava/util/Queue;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/Queue.clear:()V
       9: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field parentReadInProgress:Z
       5: aload_2
       6: instanceof    #31                 // class io/netty/handler/codec/http2/Http2StreamFrame
       9: ifeq          75
      12: aload_2
      13: instanceof    #32                 // class io/netty/handler/codec/http2/Http2WindowUpdateFrame
      16: ifeq          20
      19: return
      20: aload_2
      21: checkcast     #31                 // class io/netty/handler/codec/http2/Http2StreamFrame
      24: astore_3
      25: aload_3
      26: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
      31: checkcast     #34                 // class io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream
      34: astore        4
      36: aload         4
      38: getfield      #35                 // Field io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.attachment:Lio/netty/channel/Channel;
      41: checkcast     #36                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
      44: astore        5
      46: aload_2
      47: instanceof    #37                 // class io/netty/handler/codec/http2/Http2ResetFrame
      50: ifeq          68
      53: aload         5
      55: invokevirtual #38                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      58: aload_2
      59: invokeinterface #39,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      64: pop
      65: goto          74
      68: aload         5
      70: aload_3
      71: invokevirtual #40                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.fireChildRead:(Lio/netty/handler/codec/http2/Http2Frame;)V
      74: return
      75: aload_2
      76: instanceof    #41                 // class io/netty/handler/codec/http2/Http2GoAwayFrame
      79: ifeq          91
      82: aload_0
      83: aload_1
      84: aload_2
      85: checkcast     #41                 // class io/netty/handler/codec/http2/Http2GoAwayFrame
      88: invokespecial #42                 // Method onHttp2GoAwayFrame:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http2/Http2GoAwayFrame;)V
      91: aload_1
      92: aload_2
      93: invokeinterface #43,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      98: pop
      99: return

  public void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #44,  1           // InterfaceMethod io/netty/channel/Channel.isWritable:()Z
      11: ifeq          21
      14: aload_0
      15: getstatic     #45                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel.WRITABLE_VISITOR:Lio/netty/handler/codec/http2/Http2FrameStreamVisitor;
      18: invokevirtual #46                 // Method forEachActiveStream:(Lio/netty/handler/codec/http2/Http2FrameStreamVisitor;)V
      21: aload_1
      22: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
      27: pop
      28: return

  public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #48                 // class io/netty/handler/codec/http2/Http2FrameStreamEvent
       4: ifeq          247
       7: aload_2
       8: checkcast     #48                 // class io/netty/handler/codec/http2/Http2FrameStreamEvent
      11: astore_3
      12: aload_3
      13: invokevirtual #49                 // Method io/netty/handler/codec/http2/Http2FrameStreamEvent.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
      16: checkcast     #34                 // class io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream
      19: astore        4
      21: aload_3
      22: invokevirtual #50                 // Method io/netty/handler/codec/http2/Http2FrameStreamEvent.type:()Lio/netty/handler/codec/http2/Http2FrameStreamEvent$Type;
      25: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2FrameStreamEvent$Type.State:Lio/netty/handler/codec/http2/Http2FrameStreamEvent$Type;
      28: if_acmpne     246
      31: getstatic     #52                 // Field io/netty/handler/codec/http2/Http2MultiplexHandler$4.$SwitchMap$io$netty$handler$codec$http2$Http2Stream$State:[I
      34: aload         4
      36: invokevirtual #53                 // Method io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.state:()Lio/netty/handler/codec/http2/Http2Stream$State;
      39: invokevirtual #54                 // Method io/netty/handler/codec/http2/Http2Stream$State.ordinal:()I
      42: iaload
      43: tableswitch   { // 1 to 4
                     1: 72
                     2: 84
                     3: 84
                     4: 223
               default: 246
          }
      72: aload         4
      74: invokevirtual #55                 // Method io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.id:()I
      77: iconst_1
      78: if_icmpeq     84
      81: goto          246
      84: aload         4
      86: getfield      #35                 // Field io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.attachment:Lio/netty/channel/Channel;
      89: ifnull        95
      92: goto          246
      95: aload         4
      97: invokevirtual #55                 // Method io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.id:()I
     100: iconst_1
     101: if_icmpne     155
     104: aload_1
     105: invokestatic  #56                 // Method isServer:(Lio/netty/channel/ChannelHandlerContext;)Z
     108: ifne          155
     111: aload_0
     112: getfield      #17                 // Field upgradeStreamHandler:Lio/netty/channel/ChannelHandler;
     115: ifnonnull     131
     118: getstatic     #57                 // Field io/netty/handler/codec/http2/Http2Error.INTERNAL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     121: ldc           #58                 // String Client is misconfigured for upgrade requests
     123: iconst_0
     124: anewarray     #59                 // class java/lang/Object
     127: invokestatic  #60                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     130: athrow
     131: new           #61                 // class io/netty/handler/codec/http2/Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel
     134: dup
     135: aload_0
     136: aload         4
     138: aload_0
     139: getfield      #17                 // Field upgradeStreamHandler:Lio/netty/channel/ChannelHandler;
     142: invokespecial #62                 // Method io/netty/handler/codec/http2/Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexHandler;Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;Lio/netty/channel/ChannelHandler;)V
     145: astore        5
     147: aload         5
     149: invokevirtual #63                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.closeOutbound:()V
     152: goto          171
     155: new           #61                 // class io/netty/handler/codec/http2/Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel
     158: dup
     159: aload_0
     160: aload         4
     162: aload_0
     163: getfield      #16                 // Field inboundStreamHandler:Lio/netty/channel/ChannelHandler;
     166: invokespecial #62                 // Method io/netty/handler/codec/http2/Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexHandler;Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;Lio/netty/channel/ChannelHandler;)V
     169: astore        5
     171: aload_1
     172: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     177: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
     182: aload         5
     184: invokeinterface #64,  2           // InterfaceMethod io/netty/channel/EventLoop.register:(Lio/netty/channel/Channel;)Lio/netty/channel/ChannelFuture;
     189: astore        6
     191: aload         6
     193: invokeinterface #65,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     198: ifeq          209
     201: aload         6
     203: invokestatic  #66                 // Method registerDone:(Lio/netty/channel/ChannelFuture;)V
     206: goto          246
     209: aload         6
     211: getstatic     #67                 // Field CHILD_CHANNEL_REGISTRATION_LISTENER:Lio/netty/channel/ChannelFutureListener;
     214: invokeinterface #68,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     219: pop
     220: goto          246
     223: aload         4
     225: getfield      #35                 // Field io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.attachment:Lio/netty/channel/Channel;
     228: checkcast     #36                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
     231: astore        7
     233: aload         7
     235: ifnull        246
     238: aload         7
     240: invokevirtual #69                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.streamClosed:()V
     243: goto          246
     246: return
     247: aload_1
     248: aload_2
     249: invokeinterface #70,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
     254: pop
     255: return

  io.netty.handler.codec.http2.Http2StreamChannel newOutboundStream();
    Code:
       0: new           #61                 // class io/netty/handler/codec/http2/Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel
       3: dup
       4: aload_0
       5: aload_0
       6: invokevirtual #71                 // Method newStream:()Lio/netty/handler/codec/http2/Http2FrameStream;
       9: checkcast     #34                 // class io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream
      12: aconst_null
      13: invokespecial #62                 // Method io/netty/handler/codec/http2/Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexHandler;Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;Lio/netty/channel/ChannelHandler;)V
      16: areturn

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #72                 // class io/netty/handler/codec/http2/Http2FrameStreamException
       4: ifeq          75
       7: aload_2
       8: checkcast     #72                 // class io/netty/handler/codec/http2/Http2FrameStreamException
      11: astore_3
      12: aload_3
      13: invokevirtual #73                 // Method io/netty/handler/codec/http2/Http2FrameStreamException.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
      16: astore        4
      18: aload         4
      20: checkcast     #34                 // class io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream
      23: getfield      #35                 // Field io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.attachment:Lio/netty/channel/Channel;
      26: checkcast     #36                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
      29: astore        5
      31: aload         5
      33: invokevirtual #38                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      36: aload_2
      37: invokevirtual #74                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      40: invokeinterface #75,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      45: pop
      46: aload         5
      48: invokevirtual #76                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      51: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.closeForcibly:()V
      56: goto          74
      59: astore        6
      61: aload         5
      63: invokevirtual #76                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      66: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.closeForcibly:()V
      71: aload         6
      73: athrow
      74: return
      75: aload_2
      76: invokevirtual #74                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      79: instanceof    #77                 // class javax/net/ssl/SSLException
      82: ifeq          98
      85: aload_0
      86: new           #78                 // class io/netty/handler/codec/http2/Http2MultiplexHandler$2
      89: dup
      90: aload_0
      91: aload_2
      92: invokespecial #79                 // Method io/netty/handler/codec/http2/Http2MultiplexHandler$2."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexHandler;Ljava/lang/Throwable;)V
      95: invokevirtual #46                 // Method forEachActiveStream:(Lio/netty/handler/codec/http2/Http2FrameStreamVisitor;)V
      98: aload_1
      99: aload_2
     100: invokeinterface #80,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
     105: pop
     106: return
    Exception table:
       from    to  target type
          31    46    59   any
          59    61    59   any

  private static boolean isServer(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #81,  1           // InterfaceMethod io/netty/channel/Channel.parent:()Lio/netty/channel/Channel;
      11: instanceof    #82                 // class io/netty/channel/ServerChannel
      14: ireturn

  private void onHttp2GoAwayFrame(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2GoAwayFrame);
    Code:
       0: aload_2
       1: invokeinterface #83,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2GoAwayFrame.lastStreamId:()I
       6: ldc           #85                 // int 2147483647
       8: if_icmpne     12
      11: return
      12: aload_1
      13: invokestatic  #56                 // Method isServer:(Lio/netty/channel/ChannelHandlerContext;)Z
      16: istore_3
      17: aload_0
      18: new           #86                 // class io/netty/handler/codec/http2/Http2MultiplexHandler$3
      21: dup
      22: aload_0
      23: aload_2
      24: iload_3
      25: invokespecial #87                 // Method io/netty/handler/codec/http2/Http2MultiplexHandler$3."<init>":(Lio/netty/handler/codec/http2/Http2MultiplexHandler;Lio/netty/handler/codec/http2/Http2GoAwayFrame;Z)V
      28: invokevirtual #46                 // Method forEachActiveStream:(Lio/netty/handler/codec/http2/Http2FrameStreamVisitor;)V
      31: goto          50
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokeinterface #80,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      42: pop
      43: aload_1
      44: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      49: pop
      50: return
    Exception table:
       from    to  target type
          12    31    34   Class io/netty/handler/codec/http2/Http2Exception

  public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method processPendingReadCompleteQueue:()V
       4: aload_1
       5: invokeinterface #90,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      10: pop
      11: return

  private void processPendingReadCompleteQueue();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field parentReadInProgress:Z
       5: aload_0
       6: getfield      #3                  // Field readCompletePendingQueue:Ljava/util/Queue;
       9: invokeinterface #91,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      14: checkcast     #36                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
      17: astore_1
      18: aload_1
      19: ifnull        100
      22: aload_1
      23: invokevirtual #92                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.fireChildReadComplete:()V
      26: aload_0
      27: getfield      #3                  // Field readCompletePendingQueue:Ljava/util/Queue;
      30: invokeinterface #91,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      35: checkcast     #36                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel
      38: astore_1
      39: aload_1
      40: ifnonnull     22
      43: aload_0
      44: iconst_0
      45: putfield      #4                  // Field parentReadInProgress:Z
      48: aload_0
      49: getfield      #3                  // Field readCompletePendingQueue:Ljava/util/Queue;
      52: invokeinterface #30,  1           // InterfaceMethod java/util/Queue.clear:()V
      57: aload_0
      58: getfield      #1                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      61: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      66: pop
      67: goto          97
      70: astore_2
      71: aload_0
      72: iconst_0
      73: putfield      #4                  // Field parentReadInProgress:Z
      76: aload_0
      77: getfield      #3                  // Field readCompletePendingQueue:Ljava/util/Queue;
      80: invokeinterface #30,  1           // InterfaceMethod java/util/Queue.clear:()V
      85: aload_0
      86: getfield      #1                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      89: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
      94: pop
      95: aload_2
      96: athrow
      97: goto          105
     100: aload_0
     101: iconst_0
     102: putfield      #4                  // Field parentReadInProgress:Z
     105: return
    Exception table:
       from    to  target type
          22    43    70   any

  static int access$004(io.netty.handler.codec.http2.Http2MultiplexHandler);
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field idCount:I
       5: iconst_1
       6: iadd
       7: dup_x1
       8: putfield      #5                  // Field idCount:I
      11: ireturn

  static boolean access$100(io.netty.handler.codec.http2.Http2MultiplexHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parentReadInProgress:Z
       4: ireturn

  static java.util.Queue access$200(io.netty.handler.codec.http2.Http2MultiplexHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field readCompletePendingQueue:Ljava/util/Queue;
       4: areturn

  static void access$300(io.netty.handler.codec.http2.Http2MultiplexHandler);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method processPendingReadCompleteQueue:()V
       4: return

  static io.netty.channel.ChannelHandlerContext access$400(io.netty.handler.codec.http2.Http2MultiplexHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static {};
    Code:
       0: new           #94                 // class io/netty/handler/codec/http2/Http2MultiplexHandler$1
       3: dup
       4: invokespecial #95                 // Method io/netty/handler/codec/http2/Http2MultiplexHandler$1."<init>":()V
       7: putstatic     #67                 // Field CHILD_CHANNEL_REGISTRATION_LISTENER:Lio/netty/channel/ChannelFutureListener;
      10: return
}
