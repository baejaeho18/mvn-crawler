Compiled from "AbstractHttp2StreamChannel.java"
final class io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe implements io.netty.channel.Channel$Unsafe {
  private final io.netty.channel.VoidChannelPromise unsafeVoidPromise;

  private io.netty.channel.RecvByteBufAllocator$Handle recvHandle;

  private boolean writeDoneAndNoFlush;

  private boolean closeInitiated;

  private boolean readEOS;

  final io.netty.handler.codec.http2.AbstractHttp2StreamChannel this$0;

  private io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe(io.netty.handler.codec.http2.AbstractHttp2StreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       5: aload_0
       6: invokespecial #7                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #8                  // class io/netty/channel/VoidChannelPromise
      13: dup
      14: aload_0
      15: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      18: iconst_0
      19: invokespecial #9                  // Method io/netty/channel/VoidChannelPromise."<init>":(Lio/netty/channel/Channel;Z)V
      22: putfield      #10                 // Field unsafeVoidPromise:Lio/netty/channel/VoidChannelPromise;
      25: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_3
      11: new           #12                 // class java/lang/UnsupportedOperationException
      14: dup
      15: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
      18: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      23: pop
      24: return

  public io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle();
    Code:
       0: aload_0
       1: getfield      #15                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
       4: ifnonnull     44
       7: aload_0
       8: aload_0
       9: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      12: invokevirtual #16                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.config:()Lio/netty/channel/ChannelConfig;
      15: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getRecvByteBufAllocator:()Lio/netty/channel/RecvByteBufAllocator;
      20: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator.newHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      25: putfield      #15                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      28: aload_0
      29: getfield      #15                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      32: aload_0
      33: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      36: invokevirtual #16                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.config:()Lio/netty/channel/ChannelConfig;
      39: invokeinterface #19,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.reset:(Lio/netty/channel/ChannelConfig;)V
      44: aload_0
      45: getfield      #15                 // Field recvHandle:Lio/netty/channel/RecvByteBufAllocator$Handle;
      48: areturn

  public java.net.SocketAddress localAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokevirtual #20                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.parent:()Lio/netty/channel/Channel;
       7: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      12: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.localAddress:()Ljava/net/SocketAddress;
      17: areturn

  public java.net.SocketAddress remoteAddress();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokevirtual #20                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.parent:()Lio/netty/channel/Channel;
       7: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      12: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.remoteAddress:()Ljava/net/SocketAddress;
      17: areturn

  public void register(io.netty.channel.EventLoop, io.netty.channel.ChannelPromise);
    Code:
       0: aload_2
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      14: invokestatic  #24                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$400:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Z
      17: ifeq          37
      20: aload_2
      21: new           #12                 // class java/lang/UnsupportedOperationException
      24: dup
      25: ldc           #25                 // String Re-register is not supported
      27: invokespecial #26                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      30: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      35: pop
      36: return
      37: aload_0
      38: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      41: iconst_1
      42: invokestatic  #27                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$402:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Z)Z
      45: pop
      46: aload_2
      47: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      52: pop
      53: aload_0
      54: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      57: invokevirtual #29                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      60: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRegistered:()Lio/netty/channel/ChannelPipeline;
      65: pop
      66: aload_0
      67: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      70: invokevirtual #31                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.isActive:()Z
      73: ifeq          89
      76: aload_0
      77: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      80: invokevirtual #29                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      83: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      88: pop
      89: return

  public void bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_2
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_2
      11: new           #12                 // class java/lang/UnsupportedOperationException
      14: dup
      15: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":()V
      18: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      23: pop
      24: return

  public void disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method close:(Lio/netty/channel/ChannelPromise;)V
       5: return

  public void close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #34                 // Field closeInitiated:Z
      14: ifeq          72
      17: aload_0
      18: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      21: invokestatic  #35                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$500:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/channel/ChannelPromise;
      24: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelPromise.isDone:()Z
      29: ifeq          42
      32: aload_1
      33: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      38: pop
      39: goto          71
      42: aload_1
      43: instanceof    #8                  // class io/netty/channel/VoidChannelPromise
      46: ifne          71
      49: aload_0
      50: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      53: invokestatic  #35                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$500:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/channel/ChannelPromise;
      56: new           #37                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe$1
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #38                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe$1."<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #39,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
      70: pop
      71: return
      72: aload_0
      73: iconst_1
      74: putfield      #34                 // Field closeInitiated:Z
      77: aload_0
      78: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      81: iconst_0
      82: invokestatic  #40                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$602:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Z)Z
      85: pop
      86: aload_0
      87: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      90: invokevirtual #31                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.isActive:()Z
      93: istore_2
      94: aload_0
      95: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      98: invokevirtual #20                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.parent:()Lio/netty/channel/Channel;
     101: invokeinterface #41,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
     106: ifeq          174
     109: aload_0
     110: getfield      #42                 // Field readEOS:Z
     113: ifne          174
     116: aload_0
     117: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     120: invokestatic  #43                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$700:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;
     123: invokevirtual #44                 // Method io/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream.id:()I
     126: invokestatic  #45                 // Method io/netty/handler/codec/http2/Http2CodecUtil.isStreamIdValid:(I)Z
     129: ifeq          174
     132: new           #46                 // class io/netty/handler/codec/http2/DefaultHttp2ResetFrame
     135: dup
     136: getstatic     #47                 // Field io/netty/handler/codec/http2/Http2Error.CANCEL:Lio/netty/handler/codec/http2/Http2Error;
     139: invokespecial #48                 // Method io/netty/handler/codec/http2/DefaultHttp2ResetFrame."<init>":(Lio/netty/handler/codec/http2/Http2Error;)V
     142: aload_0
     143: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     146: invokevirtual #49                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
     149: invokevirtual #50                 // Method io/netty/handler/codec/http2/DefaultHttp2ResetFrame.stream:(Lio/netty/handler/codec/http2/Http2FrameStream;)Lio/netty/handler/codec/http2/DefaultHttp2ResetFrame;
     152: astore_3
     153: aload_0
     154: aload_3
     155: aload_0
     156: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     159: invokevirtual #51                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
     162: invokeinterface #52,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
     167: invokevirtual #53                 // Method write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
     170: aload_0
     171: invokevirtual #54                 // Method flush:()V
     174: aload_0
     175: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     178: invokestatic  #55                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$800:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Ljava/util/Queue;
     181: ifnull        221
     184: aload_0
     185: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     188: invokestatic  #55                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$800:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Ljava/util/Queue;
     191: invokeinterface #56,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     196: astore_3
     197: aload_3
     198: ifnonnull     204
     201: goto          212
     204: aload_3
     205: invokestatic  #57                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     208: pop
     209: goto          184
     212: aload_0
     213: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     216: aconst_null
     217: invokestatic  #58                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$802:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Ljava/util/Queue;)Ljava/util/Queue;
     220: pop
     221: aload_0
     222: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     225: iconst_1
     226: invokestatic  #59                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$902:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Z)Z
     229: pop
     230: aload_0
     231: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     234: invokestatic  #35                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$500:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/channel/ChannelPromise;
     237: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
     242: pop
     243: aload_1
     244: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
     249: pop
     250: aload_0
     251: aload_0
     252: invokevirtual #60                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
     255: iload_2
     256: invokespecial #61                 // Method fireChannelInactiveAndDeregister:(Lio/netty/channel/ChannelPromise;Z)V
     259: return

  public void closeForcibly();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       5: invokevirtual #51                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
       8: invokeinterface #52,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      13: invokevirtual #33                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      16: return

  public void deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #61                 // Method fireChannelInactiveAndDeregister:(Lio/netty/channel/ChannelPromise;Z)V
       6: return

  private void fireChannelInactiveAndDeregister(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          10
       9: return
      10: aload_0
      11: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      14: invokestatic  #24                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$400:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Z
      17: ifne          28
      20: aload_1
      21: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      26: pop
      27: return
      28: aload_0
      29: new           #62                 // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe$2
      32: dup
      33: aload_0
      34: iload_2
      35: aload_1
      36: invokespecial #63                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe$2."<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;ZLio/netty/channel/ChannelPromise;)V
      39: invokespecial #64                 // Method invokeLater:(Ljava/lang/Runnable;)V
      42: return

  private void safeSetSuccess(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: instanceof    #8                  // class io/netty/channel/VoidChannelPromise
       4: ifne          27
       7: aload_1
       8: invokeinterface #65,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      13: ifne          27
      16: invokestatic  #66                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1200:()Lio/netty/util/internal/logging/InternalLogger;
      19: ldc           #67                 // String Failed to mark a promise as success because it is done already: {}
      21: aload_1
      22: invokeinterface #68,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
      27: return

  private void invokeLater(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokevirtual #69                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.eventLoop:()Lio/netty/channel/EventLoop;
       7: aload_1
       8: invokeinterface #70,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      13: goto          28
      16: astore_2
      17: invokestatic  #66                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1200:()Lio/netty/util/internal/logging/InternalLogger;
      20: ldc           #72                 // String Can\'t invoke task later as EventLoop rejected it
      22: aload_2
      23: invokeinterface #73,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      28: return
    Exception table:
       from    to  target type
           0    13    16   Class java/util/concurrent/RejectedExecutionException

  public void beginRead();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokevirtual #31                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.isActive:()Z
       7: ifne          11
      10: return
      11: aload_0
      12: invokespecial #74                 // Method updateLocalWindowIfNeeded:()V
      15: getstatic     #75                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$5.$SwitchMap$io$netty$handler$codec$http2$AbstractHttp2StreamChannel$ReadStatus:[I
      18: aload_0
      19: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      22: invokestatic  #76                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1300:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      25: invokevirtual #77                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.ordinal:()I
      28: iaload
      29: lookupswitch  { // 2
                     1: 56
                     2: 74
               default: 88
          }
      56: aload_0
      57: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      60: getstatic     #78                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.IN_PROGRESS:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      63: invokestatic  #79                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1302:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      66: pop
      67: aload_0
      68: invokevirtual #80                 // Method doBeginRead:()V
      71: goto          88
      74: aload_0
      75: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      78: getstatic     #81                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.REQUESTED:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      81: invokestatic  #79                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1302:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      84: pop
      85: goto          88
      88: return

  private java.lang.Object pollQueuedMessage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokestatic  #55                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$800:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Ljava/util/Queue;
       7: ifnonnull     14
      10: aconst_null
      11: goto          26
      14: aload_0
      15: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      18: invokestatic  #55                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$800:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Ljava/util/Queue;
      21: invokeinterface #56,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      26: areturn

  void doBeginRead();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokestatic  #76                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1300:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
       7: getstatic     #82                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.IDLE:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      10: if_acmpeq     142
      13: aload_0
      14: invokespecial #83                 // Method pollQueuedMessage:()Ljava/lang/Object;
      17: astore_1
      18: aload_1
      19: ifnonnull     46
      22: aload_0
      23: getfield      #42                 // Field readEOS:Z
      26: ifeq          39
      29: aload_0
      30: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      33: invokestatic  #84                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1400:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      36: invokevirtual #85                 // Method closeForcibly:()V
      39: aload_0
      40: invokevirtual #54                 // Method flush:()V
      43: goto          142
      46: aload_0
      47: invokevirtual #86                 // Method recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      50: astore_2
      51: aload_2
      52: aload_0
      53: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      56: invokevirtual #16                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.config:()Lio/netty/channel/ChannelConfig;
      59: invokeinterface #19,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.reset:(Lio/netty/channel/ChannelConfig;)V
      64: iconst_0
      65: istore_3
      66: aload_0
      67: aload_1
      68: checkcast     #87                 // class io/netty/handler/codec/http2/Http2Frame
      71: aload_2
      72: invokevirtual #88                 // Method doRead0:(Lio/netty/handler/codec/http2/Http2Frame;Lio/netty/channel/RecvByteBufAllocator$Handle;)V
      75: aload_0
      76: getfield      #42                 // Field readEOS:Z
      79: ifne          93
      82: aload_2
      83: invokeinterface #89,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.continueReading:()Z
      88: dup
      89: istore_3
      90: ifeq          102
      93: aload_0
      94: invokespecial #83                 // Method pollQueuedMessage:()Ljava/lang/Object;
      97: dup
      98: astore_1
      99: ifnonnull     66
     102: iload_3
     103: ifeq          133
     106: aload_0
     107: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     110: invokevirtual #90                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.isParentReadInProgress:()Z
     113: ifeq          133
     116: aload_0
     117: getfield      #42                 // Field readEOS:Z
     120: ifne          133
     123: aload_0
     124: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     127: invokestatic  #91                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1500:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)V
     130: goto          139
     133: aload_0
     134: aload_2
     135: iconst_1
     136: invokevirtual #92                 // Method notifyReadComplete:(Lio/netty/channel/RecvByteBufAllocator$Handle;Z)V
     139: goto          0
     142: return

  void readEOS();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #42                 // Field readEOS:Z
       5: return

  private void updateLocalWindowIfNeeded();
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokestatic  #93                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1600:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)I
       7: ifeq          99
      10: aload_0
      11: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      14: invokestatic  #93                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1600:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)I
      17: istore_1
      18: aload_0
      19: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      22: iconst_0
      23: invokestatic  #94                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1602:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;I)I
      26: pop
      27: aload_0
      28: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      31: aload_0
      32: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      35: invokevirtual #95                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.parentContext:()Lio/netty/channel/ChannelHandlerContext;
      38: new           #96                 // class io/netty/handler/codec/http2/DefaultHttp2WindowUpdateFrame
      41: dup
      42: iload_1
      43: invokespecial #97                 // Method io/netty/handler/codec/http2/DefaultHttp2WindowUpdateFrame."<init>":(I)V
      46: aload_0
      47: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      50: invokestatic  #43                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$700:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;
      53: invokevirtual #98                 // Method io/netty/handler/codec/http2/DefaultHttp2WindowUpdateFrame.stream:(Lio/netty/handler/codec/http2/Http2FrameStream;)Lio/netty/handler/codec/http2/DefaultHttp2WindowUpdateFrame;
      56: invokevirtual #99                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.write0:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
      59: astore_2
      60: aload_0
      61: iconst_1
      62: putfield      #100                // Field writeDoneAndNoFlush:Z
      65: aload_2
      66: invokeinterface #101,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      71: ifeq          85
      74: aload_2
      75: aload_0
      76: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      79: invokestatic  #102                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$000:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/Channel;)V
      82: goto          99
      85: aload_2
      86: aload_0
      87: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      90: invokestatic  #103                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1700:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/channel/ChannelFutureListener;
      93: invokeinterface #104,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      98: pop
      99: return

  void notifyReadComplete(io.netty.channel.RecvByteBufAllocator$Handle, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokestatic  #105                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$600:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Z
       7: ifne          15
      10: iload_2
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      19: iconst_0
      20: invokestatic  #40                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$602:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Z)Z
      23: pop
      24: aload_0
      25: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      28: invokestatic  #76                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1300:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      31: getstatic     #81                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.REQUESTED:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      34: if_acmpne     51
      37: aload_0
      38: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      41: getstatic     #78                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.IN_PROGRESS:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      44: invokestatic  #79                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1302:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      47: pop
      48: goto          62
      51: aload_0
      52: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      55: getstatic     #82                 // Field io/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus.IDLE:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      58: invokestatic  #79                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1302:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$ReadStatus;
      61: pop
      62: aload_1
      63: invokeinterface #106,  1          // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.readComplete:()V
      68: aload_0
      69: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      72: invokevirtual #29                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      75: invokeinterface #107,  1          // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      80: pop
      81: aload_0
      82: invokevirtual #54                 // Method flush:()V
      85: aload_0
      86: getfield      #42                 // Field readEOS:Z
      89: ifeq          102
      92: aload_0
      93: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      96: invokestatic  #84                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1400:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;
      99: invokevirtual #85                 // Method closeForcibly:()V
     102: return

  void doRead0(io.netty.handler.codec.http2.Http2Frame, io.netty.channel.RecvByteBufAllocator$Handle);
    Code:
       0: aload_1
       1: instanceof    #108                // class io/netty/handler/codec/http2/Http2DataFrame
       4: ifeq          37
       7: aload_1
       8: checkcast     #108                // class io/netty/handler/codec/http2/Http2DataFrame
      11: invokeinterface #109,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2DataFrame.initialFlowControlledBytes:()I
      16: istore_3
      17: aload_0
      18: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      21: aload_0
      22: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      25: invokestatic  #93                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1600:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)I
      28: iload_3
      29: iadd
      30: invokestatic  #94                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1602:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;I)I
      33: pop
      34: goto          40
      37: bipush        9
      39: istore_3
      40: aload_2
      41: iload_3
      42: invokeinterface #110,  2          // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.attemptedBytesRead:(I)V
      47: aload_2
      48: iload_3
      49: invokeinterface #111,  2          // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.lastBytesRead:(I)V
      54: aload_2
      55: iconst_1
      56: invokeinterface #112,  2          // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.incMessagesRead:(I)V
      61: aload_0
      62: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      65: invokevirtual #29                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      68: aload_1
      69: invokeinterface #113,  2          // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      74: pop
      75: return

  public void write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_2
       1: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifne          15
       9: aload_1
      10: invokestatic  #57                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      13: pop
      14: return
      15: aload_0
      16: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      19: invokevirtual #31                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.isActive:()Z
      22: ifeq          49
      25: aload_0
      26: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      29: invokestatic  #114                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$900:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Z
      32: ifeq          69
      35: aload_1
      36: instanceof    #115                // class io/netty/handler/codec/http2/Http2HeadersFrame
      39: ifne          49
      42: aload_1
      43: instanceof    #108                // class io/netty/handler/codec/http2/Http2DataFrame
      46: ifeq          69
      49: aload_1
      50: invokestatic  #57                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      53: pop
      54: aload_2
      55: new           #116                // class java/nio/channels/ClosedChannelException
      58: dup
      59: invokespecial #117                // Method java/nio/channels/ClosedChannelException."<init>":()V
      62: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      67: pop
      68: return
      69: aload_1
      70: instanceof    #118                // class io/netty/handler/codec/http2/Http2StreamFrame
      73: ifeq          106
      76: aload_0
      77: aload_1
      78: checkcast     #118                // class io/netty/handler/codec/http2/Http2StreamFrame
      81: invokespecial #119                // Method validateStreamFrame:(Lio/netty/handler/codec/http2/Http2StreamFrame;)Lio/netty/handler/codec/http2/Http2StreamFrame;
      84: aload_0
      85: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      88: invokevirtual #49                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
      91: invokeinterface #120,  2          // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.stream:(Lio/netty/handler/codec/http2/Http2FrameStream;)Lio/netty/handler/codec/http2/Http2StreamFrame;
      96: astore_3
      97: aload_0
      98: aload_3
      99: aload_2
     100: invokespecial #121                // Method writeHttp2StreamFrame:(Lio/netty/handler/codec/http2/Http2StreamFrame;Lio/netty/channel/ChannelPromise;)V
     103: goto          162
     106: aload_1
     107: invokevirtual #122                // Method java/lang/Object.toString:()Ljava/lang/String;
     110: astore_3
     111: aload_1
     112: invokestatic  #57                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     115: pop
     116: aload_2
     117: new           #123                // class java/lang/IllegalArgumentException
     120: dup
     121: new           #124                // class java/lang/StringBuilder
     124: dup
     125: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #126                // String Message must be an
     130: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #118                // class io/netty/handler/codec/http2/Http2StreamFrame
     135: invokestatic  #128                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
     138: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #129                // String :
     143: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: aload_3
     147: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #130                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: invokespecial #131                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     156: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
     161: pop
     162: goto          174
     165: astore_3
     166: aload_2
     167: aload_3
     168: invokeinterface #133,  2          // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     173: pop
     174: return
    Exception table:
       from    to  target type
          69   162   165   Class java/lang/Throwable

  private void writeHttp2StreamFrame(io.netty.handler.codec.http2.Http2StreamFrame, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
       4: invokestatic  #134                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1800:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Z
       7: ifne          79
      10: aload_0
      11: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      14: invokevirtual #49                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
      17: invokeinterface #135,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2FrameStream.id:()I
      22: invokestatic  #45                 // Method io/netty/handler/codec/http2/Http2CodecUtil.isStreamIdValid:(I)Z
      25: ifne          79
      28: aload_1
      29: instanceof    #115                // class io/netty/handler/codec/http2/Http2HeadersFrame
      32: ifne          79
      35: aload_1
      36: invokestatic  #57                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      39: pop
      40: aload_2
      41: new           #123                // class java/lang/IllegalArgumentException
      44: dup
      45: new           #124                // class java/lang/StringBuilder
      48: dup
      49: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #136                // String The first frame must be a headers frame. Was:
      54: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_1
      58: invokeinterface #137,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.name:()Ljava/lang/String;
      63: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: invokevirtual #130                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #131                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      77: pop
      78: return
      79: aload_0
      80: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      83: invokestatic  #134                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1800:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Z
      86: ifeq          94
      89: iconst_0
      90: istore_3
      91: goto          103
      94: aload_0
      95: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      98: iconst_1
      99: invokestatic  #138                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$1802:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Z)Z
     102: istore_3
     103: aload_0
     104: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     107: aload_0
     108: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     111: invokevirtual #95                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.parentContext:()Lio/netty/channel/ChannelHandlerContext;
     114: aload_1
     115: invokevirtual #99                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.write0:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     118: astore        4
     120: aload         4
     122: invokeinterface #101,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     127: ifeq          154
     130: iload_3
     131: ifeq          144
     134: aload_0
     135: aload         4
     137: aload_2
     138: invokespecial #3                  // Method firstWriteComplete:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
     141: goto          201
     144: aload_0
     145: aload         4
     147: aload_2
     148: invokespecial #2                  // Method writeComplete:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
     151: goto          201
     154: invokestatic  #139                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$FlowControlledFrameSizeEstimator.access$1900:()Lio/netty/channel/MessageSizeEstimator$Handle;
     157: aload_1
     158: invokeinterface #140,  2          // InterfaceMethod io/netty/channel/MessageSizeEstimator$Handle.size:(Ljava/lang/Object;)I
     163: i2l
     164: lstore        5
     166: aload_0
     167: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
     170: lload         5
     172: iconst_0
     173: invokestatic  #141                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$200:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;JZ)V
     176: aload         4
     178: new           #142                // class io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe$3
     181: dup
     182: aload_0
     183: iload_3
     184: aload_2
     185: lload         5
     187: invokespecial #143                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe$3."<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2ChannelUnsafe;ZLio/netty/channel/ChannelPromise;J)V
     190: invokeinterface #104,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     195: pop
     196: aload_0
     197: iconst_1
     198: putfield      #100                // Field writeDoneAndNoFlush:Z
     201: return

  private void firstWriteComplete(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: astore_3
       7: aload_3
       8: ifnonnull     21
      11: aload_2
      12: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      17: pop
      18: goto          37
      21: aload_0
      22: invokevirtual #85                 // Method closeForcibly:()V
      25: aload_2
      26: aload_0
      27: aload_3
      28: invokespecial #145                // Method wrapStreamClosedError:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      31: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      36: pop
      37: return

  private void writeComplete(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #144,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: astore_3
       7: aload_3
       8: ifnonnull     21
      11: aload_2
      12: invokeinterface #28,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      17: pop
      18: goto          74
      21: aload_0
      22: aload_3
      23: invokespecial #145                // Method wrapStreamClosedError:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      26: astore        4
      28: aload         4
      30: instanceof    #146                // class java/io/IOException
      33: ifeq          65
      36: aload_0
      37: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      40: invokestatic  #147                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$2200:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2StreamChannelConfig;
      43: invokevirtual #148                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel$Http2StreamChannelConfig.isAutoClose:()Z
      46: ifeq          56
      49: aload_0
      50: invokevirtual #85                 // Method closeForcibly:()V
      53: goto          65
      56: aload_0
      57: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      60: iconst_1
      61: invokestatic  #59                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$902:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;Z)Z
      64: pop
      65: aload_2
      66: aload         4
      68: invokeinterface #14,  2           // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      73: pop
      74: return

  private java.lang.Throwable wrapStreamClosedError(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #149                // class io/netty/handler/codec/http2/Http2Exception
       4: ifeq          32
       7: aload_1
       8: checkcast     #149                // class io/netty/handler/codec/http2/Http2Exception
      11: invokevirtual #150                // Method io/netty/handler/codec/http2/Http2Exception.error:()Lio/netty/handler/codec/http2/Http2Error;
      14: getstatic     #151                // Field io/netty/handler/codec/http2/Http2Error.STREAM_CLOSED:Lio/netty/handler/codec/http2/Http2Error;
      17: if_acmpne     32
      20: new           #116                // class java/nio/channels/ClosedChannelException
      23: dup
      24: invokespecial #117                // Method java/nio/channels/ClosedChannelException."<init>":()V
      27: aload_1
      28: invokevirtual #152                // Method java/nio/channels/ClosedChannelException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      31: areturn
      32: aload_1
      33: areturn

  private io.netty.handler.codec.http2.Http2StreamFrame validateStreamFrame(io.netty.handler.codec.http2.Http2StreamFrame);
    Code:
       0: aload_1
       1: invokeinterface #153,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
       6: ifnull        76
       9: aload_1
      10: invokeinterface #153,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
      15: aload_0
      16: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      19: invokestatic  #43                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.access$700:(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)Lio/netty/handler/codec/http2/Http2FrameCodec$DefaultHttp2FrameStream;
      22: if_acmpeq     76
      25: aload_1
      26: invokevirtual #122                // Method java/lang/Object.toString:()Ljava/lang/String;
      29: astore_2
      30: aload_1
      31: invokestatic  #57                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      34: pop
      35: new           #123                // class java/lang/IllegalArgumentException
      38: dup
      39: new           #124                // class java/lang/StringBuilder
      42: dup
      43: invokespecial #125                // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #154                // String Stream
      48: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokeinterface #153,  1          // InterfaceMethod io/netty/handler/codec/http2/Http2StreamFrame.stream:()Lio/netty/handler/codec/http2/Http2FrameStream;
      57: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      60: ldc           #156                // String  must not be set on the frame:
      62: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #130                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #131                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_1
      77: areturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #100                // Field writeDoneAndNoFlush:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      11: invokevirtual #90                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.isParentReadInProgress:()Z
      14: ifeq          18
      17: return
      18: aload_0
      19: iconst_0
      20: putfield      #100                // Field writeDoneAndNoFlush:Z
      23: aload_0
      24: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      27: aload_0
      28: getfield      #6                  // Field this$0:Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;
      31: invokevirtual #95                 // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.parentContext:()Lio/netty/channel/ChannelHandlerContext;
      34: invokevirtual #157                // Method io/netty/handler/codec/http2/AbstractHttp2StreamChannel.flush0:(Lio/netty/channel/ChannelHandlerContext;)V
      37: return

  public io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: getfield      #10                 // Field unsafeVoidPromise:Lio/netty/channel/VoidChannelPromise;
       4: areturn

  public io.netty.channel.ChannelOutboundBuffer outboundBuffer();
    Code:
       0: aconst_null
       1: areturn

  io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe(io.netty.handler.codec.http2.AbstractHttp2StreamChannel, io.netty.handler.codec.http2.AbstractHttp2StreamChannel$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method "<init>":(Lio/netty/handler/codec/http2/AbstractHttp2StreamChannel;)V
       5: return

  static void access$1100(io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method safeSetSuccess:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$2000(io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #3                  // Method firstWriteComplete:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       6: return

  static void access$2100(io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method writeComplete:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       6: return
}
