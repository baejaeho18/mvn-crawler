Compiled from "WebSocketServerHandshaker.java"
class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2 extends io.netty.channel.ChannelInboundHandlerAdapter {
  private io.netty.handler.codec.http.FullHttpRequest fullHttpRequest;

  static final boolean $assertionsDisabled;

  final io.netty.channel.ChannelPromise val$promise;

  final io.netty.channel.Channel val$channel;

  final io.netty.handler.codec.http.HttpHeaders val$responseHeaders;

  final io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker this$0;

  io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker$2(io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker, io.netty.channel.ChannelPromise, io.netty.channel.Channel, io.netty.handler.codec.http.HttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$promise:Lio/netty/channel/ChannelPromise;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$channel:Lio/netty/channel/Channel;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$responseHeaders:Lio/netty/handler/codec/http/HttpHeaders;
      21: aload_0
      22: invokespecial #5                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
      25: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #6                  // class io/netty/handler/codec/http/HttpObject
       4: ifeq          35
       7: aload_0
       8: aload_1
       9: aload_2
      10: checkcast     #6                  // class io/netty/handler/codec/http/HttpObject
      13: invokespecial #7                  // Method handleHandshakeRequest:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/handler/codec/http/HttpObject;)V
      16: aload_2
      17: invokestatic  #8                  // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      20: pop
      21: goto          32
      24: astore_3
      25: aload_2
      26: invokestatic  #8                  // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      29: pop
      30: aload_3
      31: athrow
      32: goto          41
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokespecial #9                  // Method io/netty/channel/ChannelInboundHandlerAdapter.channelRead:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
      41: return
    Exception table:
       from    to  target type
           7    16    24   any

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
       6: aload_0
       7: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      12: pop
      13: aload_0
      14: getfield      #2                  // Field val$promise:Lio/netty/channel/ChannelPromise;
      17: aload_2
      18: invokeinterface #12,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      23: pop
      24: aload_1
      25: aload_2
      26: invokeinterface #13,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      31: pop
      32: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$promise:Lio/netty/channel/ChannelPromise;
       4: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/ChannelPromise.isDone:()Z
       9: ifne          29
      12: aload_0
      13: getfield      #2                  // Field val$promise:Lio/netty/channel/ChannelPromise;
      16: new           #15                 // class java/nio/channels/ClosedChannelException
      19: dup
      20: invokespecial #16                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      23: invokeinterface #12,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      28: pop
      29: aload_1
      30: invokeinterface #17,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      35: pop
      36: aload_0
      37: invokespecial #18                 // Method releaseFullHttpRequest:()V
      40: goto          50
      43: astore_2
      44: aload_0
      45: invokespecial #18                 // Method releaseFullHttpRequest:()V
      48: aload_2
      49: athrow
      50: return
    Exception table:
       from    to  target type
           0    36    43   any

  public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #18                 // Method releaseFullHttpRequest:()V
       4: return

  private void handleHandshakeRequest(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpObject);
    Code:
       0: aload_2
       1: instanceof    #19                 // class io/netty/handler/codec/http/FullHttpRequest
       4: ifeq          45
       7: aload_1
       8: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      13: aload_0
      14: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      19: pop
      20: aload_0
      21: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
      24: aload_0
      25: getfield      #3                  // Field val$channel:Lio/netty/channel/Channel;
      28: aload_2
      29: checkcast     #19                 // class io/netty/handler/codec/http/FullHttpRequest
      32: aload_0
      33: getfield      #4                  // Field val$responseHeaders:Lio/netty/handler/codec/http/HttpHeaders;
      36: aload_0
      37: getfield      #2                  // Field val$promise:Lio/netty/channel/ChannelPromise;
      40: invokevirtual #20                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.handshake:(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/FullHttpRequest;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      43: pop
      44: return
      45: aload_2
      46: instanceof    #21                 // class io/netty/handler/codec/http/LastHttpContent
      49: ifeq          140
      52: getstatic     #22                 // Field $assertionsDisabled:Z
      55: ifne          73
      58: aload_0
      59: getfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      62: ifnonnull     73
      65: new           #24                 // class java/lang/AssertionError
      68: dup
      69: invokespecial #25                 // Method java/lang/AssertionError."<init>":()V
      72: athrow
      73: aload_0
      74: getfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      77: astore_3
      78: aload_0
      79: aconst_null
      80: putfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      83: aload_1
      84: invokeinterface #10,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.pipeline:()Lio/netty/channel/ChannelPipeline;
      89: aload_0
      90: invokeinterface #11,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.remove:(Lio/netty/channel/ChannelHandler;)Lio/netty/channel/ChannelPipeline;
      95: pop
      96: aload_0
      97: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http/websocketx/WebSocketServerHandshaker;
     100: aload_0
     101: getfield      #3                  // Field val$channel:Lio/netty/channel/Channel;
     104: aload_3
     105: aload_0
     106: getfield      #4                  // Field val$responseHeaders:Lio/netty/handler/codec/http/HttpHeaders;
     109: aload_0
     110: getfield      #2                  // Field val$promise:Lio/netty/channel/ChannelPromise;
     113: invokevirtual #20                 // Method io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.handshake:(Lio/netty/channel/Channel;Lio/netty/handler/codec/http/FullHttpRequest;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     116: pop
     117: aload_3
     118: invokeinterface #26,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.release:()Z
     123: pop
     124: goto          139
     127: astore        4
     129: aload_3
     130: invokeinterface #26,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.release:()Z
     135: pop
     136: aload         4
     138: athrow
     139: return
     140: aload_2
     141: instanceof    #27                 // class io/netty/handler/codec/http/HttpRequest
     144: ifeq          220
     147: aload_2
     148: checkcast     #27                 // class io/netty/handler/codec/http/HttpRequest
     151: astore_3
     152: aload_0
     153: new           #28                 // class io/netty/handler/codec/http/DefaultFullHttpRequest
     156: dup
     157: aload_3
     158: invokeinterface #29,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.protocolVersion:()Lio/netty/handler/codec/http/HttpVersion;
     163: aload_3
     164: invokeinterface #30,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.method:()Lio/netty/handler/codec/http/HttpMethod;
     169: aload_3
     170: invokeinterface #31,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.uri:()Ljava/lang/String;
     175: getstatic     #32                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
     178: aload_3
     179: invokeinterface #33,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.headers:()Lio/netty/handler/codec/http/HttpHeaders;
     184: getstatic     #34                 // Field io/netty/handler/codec/http/EmptyHttpHeaders.INSTANCE:Lio/netty/handler/codec/http/EmptyHttpHeaders;
     187: invokespecial #35                 // Method io/netty/handler/codec/http/DefaultFullHttpRequest."<init>":(Lio/netty/handler/codec/http/HttpVersion;Lio/netty/handler/codec/http/HttpMethod;Ljava/lang/String;Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http/HttpHeaders;Lio/netty/handler/codec/http/HttpHeaders;)V
     190: putfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
     193: aload_3
     194: invokeinterface #36,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.decoderResult:()Lio/netty/handler/codec/DecoderResult;
     199: invokevirtual #37                 // Method io/netty/handler/codec/DecoderResult.isFailure:()Z
     202: ifeq          220
     205: aload_0
     206: getfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
     209: aload_3
     210: invokeinterface #36,  1           // InterfaceMethod io/netty/handler/codec/http/HttpRequest.decoderResult:()Lio/netty/handler/codec/DecoderResult;
     215: invokeinterface #38,  2           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.setDecoderResult:(Lio/netty/handler/codec/DecoderResult;)V
     220: return
    Exception table:
       from    to  target type
          83   117   127   any
         127   129   127   any

  private void releaseFullHttpRequest();
    Code:
       0: aload_0
       1: getfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
       4: ifnull        22
       7: aload_0
       8: getfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      11: invokeinterface #26,  1           // InterfaceMethod io/netty/handler/codec/http/FullHttpRequest.release:()Z
      16: pop
      17: aload_0
      18: aconst_null
      19: putfield      #23                 // Field fullHttpRequest:Lio/netty/handler/codec/http/FullHttpRequest;
      22: return

  static {};
    Code:
       0: ldc           #39                 // class io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker
       2: invokevirtual #40                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #22                 // Field $assertionsDisabled:Z
      16: return
}
