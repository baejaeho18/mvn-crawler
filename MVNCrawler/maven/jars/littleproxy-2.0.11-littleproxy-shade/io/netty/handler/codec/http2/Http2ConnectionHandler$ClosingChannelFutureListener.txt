Compiled from "Http2ConnectionHandler.java"
final class io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener implements io.netty.channel.ChannelFutureListener {
  private final io.netty.channel.ChannelHandlerContext ctx;

  private final io.netty.channel.ChannelPromise promise;

  private final io.netty.util.concurrent.Future<?> timeoutTask;

  private boolean closed;

  static final boolean $assertionsDisabled;

  io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field promise:Lio/netty/channel/ChannelPromise;
      14: aload_0
      15: aconst_null
      16: putfield      #5                  // Field timeoutTask:Lio/netty/util/concurrent/Future;
      19: return

  io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field promise:Lio/netty/channel/ChannelPromise;
      14: aload_0
      15: aload_1
      16: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      21: new           #7                  // class io/netty/handler/codec/http2/Http2ConnectionHandler$ClosingChannelFutureListener$1
      24: dup
      25: aload_0
      26: invokespecial #8                  // Method io/netty/handler/codec/http2/Http2ConnectionHandler$ClosingChannelFutureListener$1."<init>":(Lio/netty/handler/codec/http2/Http2ConnectionHandler$ClosingChannelFutureListener;)V
      29: lload_3
      30: aload         5
      32: invokeinterface #9,  5            // InterfaceMethod io/netty/util/concurrent/EventExecutor.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
      37: putfield      #5                  // Field timeoutTask:Lio/netty/util/concurrent/Future;
      40: return

  public void operationComplete(io.netty.channel.ChannelFuture);
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeoutTask:Lio/netty/util/concurrent/Future;
       4: ifnull        18
       7: aload_0
       8: getfield      #5                  // Field timeoutTask:Lio/netty/util/concurrent/Future;
      11: iconst_0
      12: invokeinterface #10,  2           // InterfaceMethod io/netty/util/concurrent/Future.cancel:(Z)Z
      17: pop
      18: aload_0
      19: invokespecial #1                  // Method doClose:()V
      22: return

  private void doClose();
    Code:
       0: aload_0
       1: getfield      #11                 // Field closed:Z
       4: ifeq          29
       7: getstatic     #12                 // Field $assertionsDisabled:Z
      10: ifne          28
      13: aload_0
      14: getfield      #5                  // Field timeoutTask:Lio/netty/util/concurrent/Future;
      17: ifnonnull     28
      20: new           #13                 // class java/lang/AssertionError
      23: dup
      24: invokespecial #14                 // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: return
      29: aload_0
      30: iconst_1
      31: putfield      #11                 // Field closed:Z
      34: aload_0
      35: getfield      #4                  // Field promise:Lio/netty/channel/ChannelPromise;
      38: ifnonnull     54
      41: aload_0
      42: getfield      #3                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      45: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:()Lio/netty/channel/ChannelFuture;
      50: pop
      51: goto          68
      54: aload_0
      55: getfield      #3                  // Field ctx:Lio/netty/channel/ChannelHandlerContext;
      58: aload_0
      59: getfield      #4                  // Field promise:Lio/netty/channel/ChannelPromise;
      62: invokeinterface #16,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      67: pop
      68: return

  public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #17                 // class io/netty/channel/ChannelFuture
       5: invokevirtual #18                 // Method operationComplete:(Lio/netty/channel/ChannelFuture;)V
       8: return

  static void access$1300(io.netty.handler.codec.http2.Http2ConnectionHandler$ClosingChannelFutureListener);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method doClose:()V
       4: return

  static {};
    Code:
       0: ldc           #19                 // class io/netty/handler/codec/http2/Http2ConnectionHandler
       2: invokevirtual #20                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #12                 // Field $assertionsDisabled:Z
      16: return
}
