Compiled from "MqttMessageBuilders.java"
public final class io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder {
  private io.netty.handler.codec.mqtt.MqttVersion version;

  private java.lang.String clientId;

  private boolean cleanSession;

  private boolean hasUser;

  private boolean hasPassword;

  private int keepAliveSecs;

  private io.netty.handler.codec.mqtt.MqttProperties willProperties;

  private boolean willFlag;

  private boolean willRetain;

  private io.netty.handler.codec.mqtt.MqttQoS willQos;

  private java.lang.String willTopic;

  private byte[] willMessage;

  private java.lang.String username;

  private byte[] password;

  private io.netty.handler.codec.mqtt.MqttProperties properties;

  io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_3_1_1:Lio/netty/handler/codec/mqtt/MqttVersion;
       8: putfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
      11: aload_0
      12: getstatic     #4                  // Field io/netty/handler/codec/mqtt/MqttProperties.NO_PROPERTIES:Lio/netty/handler/codec/mqtt/MqttProperties;
      15: putfield      #5                  // Field willProperties:Lio/netty/handler/codec/mqtt/MqttProperties;
      18: aload_0
      19: getstatic     #6                  // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      22: putfield      #7                  // Field willQos:Lio/netty/handler/codec/mqtt/MqttQoS;
      25: aload_0
      26: getstatic     #4                  // Field io/netty/handler/codec/mqtt/MqttProperties.NO_PROPERTIES:Lio/netty/handler/codec/mqtt/MqttProperties;
      29: putfield      #8                  // Field properties:Lio/netty/handler/codec/mqtt/MqttProperties;
      32: return

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder protocolVersion(io.netty.handler.codec.mqtt.MqttVersion);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder clientId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field clientId:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder cleanSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field cleanSession:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder keepAlive(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field keepAliveSecs:I
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willFlag(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field willFlag:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willQoS(io.netty.handler.codec.mqtt.MqttQoS);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field willQos:Lio/netty/handler/codec/mqtt/MqttQoS;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willTopic(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field willTopic:Ljava/lang/String;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willMessage(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          16
       9: aload_1
      10: getstatic     #14                 // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
      13: invokevirtual #15                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      16: invokevirtual #16                 // Method willMessage:([B)Lio/netty/handler/codec/mqtt/MqttMessageBuilders$ConnectBuilder;
      19: pop
      20: aload_0
      21: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willMessage(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field willMessage:[B
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willRetain(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field willRetain:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder willProperties(io.netty.handler.codec.mqtt.MqttProperties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field willProperties:Lio/netty/handler/codec/mqtt/MqttProperties;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder hasUser(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field hasUser:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder hasPassword(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field hasPassword:Z
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder username(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #19                 // Field hasUser:Z
      13: aload_0
      14: aload_1
      15: putfield      #21                 // Field username:Ljava/lang/String;
      18: aload_0
      19: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder password(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          16
       9: aload_1
      10: getstatic     #14                 // Field io/netty/util/CharsetUtil.UTF_8:Ljava/nio/charset/Charset;
      13: invokevirtual #15                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      16: invokevirtual #22                 // Method password:([B)Lio/netty/handler/codec/mqtt/MqttMessageBuilders$ConnectBuilder;
      19: pop
      20: aload_0
      21: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder password(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: putfield      #20                 // Field hasPassword:Z
      13: aload_0
      14: aload_1
      15: putfield      #23                 // Field password:[B
      18: aload_0
      19: areturn

  public io.netty.handler.codec.mqtt.MqttMessageBuilders$ConnectBuilder properties(io.netty.handler.codec.mqtt.MqttProperties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field properties:Lio/netty/handler/codec/mqtt/MqttProperties;
       5: aload_0
       6: areturn

  public io.netty.handler.codec.mqtt.MqttConnectMessage build();
    Code:
       0: new           #24                 // class io/netty/handler/codec/mqtt/MqttFixedHeader
       3: dup
       4: getstatic     #25                 // Field io/netty/handler/codec/mqtt/MqttMessageType.CONNECT:Lio/netty/handler/codec/mqtt/MqttMessageType;
       7: iconst_0
       8: getstatic     #6                  // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      11: iconst_0
      12: iconst_0
      13: invokespecial #26                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader."<init>":(Lio/netty/handler/codec/mqtt/MqttMessageType;ZLio/netty/handler/codec/mqtt/MqttQoS;ZI)V
      16: astore_1
      17: new           #27                 // class io/netty/handler/codec/mqtt/MqttConnectVariableHeader
      20: dup
      21: aload_0
      22: getfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
      25: invokevirtual #28                 // Method io/netty/handler/codec/mqtt/MqttVersion.protocolName:()Ljava/lang/String;
      28: aload_0
      29: getfield      #3                  // Field version:Lio/netty/handler/codec/mqtt/MqttVersion;
      32: invokevirtual #29                 // Method io/netty/handler/codec/mqtt/MqttVersion.protocolLevel:()B
      35: aload_0
      36: getfield      #19                 // Field hasUser:Z
      39: aload_0
      40: getfield      #20                 // Field hasPassword:Z
      43: aload_0
      44: getfield      #18                 // Field willRetain:Z
      47: aload_0
      48: getfield      #7                  // Field willQos:Lio/netty/handler/codec/mqtt/MqttQoS;
      51: invokevirtual #30                 // Method io/netty/handler/codec/mqtt/MqttQoS.value:()I
      54: aload_0
      55: getfield      #12                 // Field willFlag:Z
      58: aload_0
      59: getfield      #10                 // Field cleanSession:Z
      62: aload_0
      63: getfield      #11                 // Field keepAliveSecs:I
      66: aload_0
      67: getfield      #8                  // Field properties:Lio/netty/handler/codec/mqtt/MqttProperties;
      70: invokespecial #31                 // Method io/netty/handler/codec/mqtt/MqttConnectVariableHeader."<init>":(Ljava/lang/String;IZZZIZZILio/netty/handler/codec/mqtt/MqttProperties;)V
      73: astore_2
      74: new           #32                 // class io/netty/handler/codec/mqtt/MqttConnectPayload
      77: dup
      78: aload_0
      79: getfield      #9                  // Field clientId:Ljava/lang/String;
      82: aload_0
      83: getfield      #5                  // Field willProperties:Lio/netty/handler/codec/mqtt/MqttProperties;
      86: aload_0
      87: getfield      #13                 // Field willTopic:Ljava/lang/String;
      90: aload_0
      91: getfield      #17                 // Field willMessage:[B
      94: aload_0
      95: getfield      #21                 // Field username:Ljava/lang/String;
      98: aload_0
      99: getfield      #23                 // Field password:[B
     102: invokespecial #33                 // Method io/netty/handler/codec/mqtt/MqttConnectPayload."<init>":(Ljava/lang/String;Lio/netty/handler/codec/mqtt/MqttProperties;Ljava/lang/String;[BLjava/lang/String;[B)V
     105: astore_3
     106: new           #34                 // class io/netty/handler/codec/mqtt/MqttConnectMessage
     109: dup
     110: aload_1
     111: aload_2
     112: aload_3
     113: invokespecial #35                 // Method io/netty/handler/codec/mqtt/MqttConnectMessage."<init>":(Lio/netty/handler/codec/mqtt/MqttFixedHeader;Lio/netty/handler/codec/mqtt/MqttConnectVariableHeader;Lio/netty/handler/codec/mqtt/MqttConnectPayload;)V
     116: areturn
}
