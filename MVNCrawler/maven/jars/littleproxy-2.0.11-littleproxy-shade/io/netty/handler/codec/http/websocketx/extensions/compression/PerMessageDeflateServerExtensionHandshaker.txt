Compiled from "PerMessageDeflateServerExtensionHandshaker.java"
public final class io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker implements io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandshaker {
  public static final int MIN_WINDOW_SIZE;

  public static final int MAX_WINDOW_SIZE;

  static final java.lang.String PERMESSAGE_DEFLATE_EXTENSION;

  static final java.lang.String CLIENT_MAX_WINDOW;

  static final java.lang.String SERVER_MAX_WINDOW;

  static final java.lang.String CLIENT_NO_CONTEXT;

  static final java.lang.String SERVER_NO_CONTEXT;

  private final int compressionLevel;

  private final boolean allowServerWindowSize;

  private final int preferredClientWindowSize;

  private final boolean allowServerNoContext;

  private final boolean preferredClientNoContext;

  private final io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider extensionFilterProvider;

  public io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker();
    Code:
       0: aload_0
       1: bipush        6
       3: invokestatic  #1                  // Method io/netty/handler/codec/compression/ZlibCodecFactory.isSupportingWindowSizeAndMemLevel:()Z
       6: bipush        15
       8: iconst_0
       9: iconst_0
      10: invokespecial #3                  // Method "<init>":(IZIZZ)V
      13: return

  public io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker(int, boolean, int, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: iload         5
       8: getstatic     #4                  // Field io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionFilterProvider.DEFAULT:Lio/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionFilterProvider;
      11: invokespecial #5                  // Method "<init>":(IZIZZLio/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionFilterProvider;)V
      14: return

  public io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateServerExtensionHandshaker(int, boolean, int, boolean, boolean, io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilterProvider);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: iload_3
       5: bipush        15
       7: if_icmpgt     16
      10: iload_3
      11: bipush        8
      13: if_icmpge     48
      16: new           #7                  // class java/lang/IllegalArgumentException
      19: dup
      20: new           #8                  // class java/lang/StringBuilder
      23: dup
      24: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #10                 // String preferredServerWindowSize:
      29: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_3
      33: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #13                 // String  (expected: 8-15)
      38: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: iload_1
      49: iflt          58
      52: iload_1
      53: bipush        9
      55: if_icmple     90
      58: new           #7                  // class java/lang/IllegalArgumentException
      61: dup
      62: new           #8                  // class java/lang/StringBuilder
      65: dup
      66: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #16                 // String compressionLevel:
      71: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: iload_1
      75: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: ldc           #17                 // String  (expected: 0-9)
      80: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      89: athrow
      90: aload_0
      91: iload_1
      92: putfield      #18                 // Field compressionLevel:I
      95: aload_0
      96: iload_2
      97: putfield      #19                 // Field allowServerWindowSize:Z
     100: aload_0
     101: iload_3
     102: putfield      #20                 // Field preferredClientWindowSize:I
     105: aload_0
     106: iload         4
     108: putfield      #21                 // Field allowServerNoContext:Z
     111: aload_0
     112: iload         5
     114: putfield      #22                 // Field preferredClientNoContext:Z
     117: aload_0
     118: aload         6
     120: ldc           #23                 // String extensionFilterProvider
     122: invokestatic  #24                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     125: checkcast     #25                 // class io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionFilterProvider
     128: putfield      #26                 // Field extensionFilterProvider:Lio/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionFilterProvider;
     131: return

  public io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtension handshakeExtension(io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData);
    Code:
       0: ldc           #27                 // String permessage-deflate
       2: aload_1
       3: invokevirtual #28                 // Method io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData.name:()Ljava/lang/String;
       6: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifne          14
      12: aconst_null
      13: areturn
      14: iconst_1
      15: istore_2
      16: bipush        15
      18: istore_3
      19: bipush        15
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iconst_0
      27: istore        6
      29: aload_1
      30: invokevirtual #30                 // Method io/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionData.parameters:()Ljava/util/Map;
      33: invokeinterface #31,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      38: invokeinterface #32,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      43: astore        7
      45: iload_2
      46: ifeq          229
      49: aload         7
      51: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          229
      59: aload         7
      61: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #35                 // class java/util/Map$Entry
      69: astore        8
      71: ldc           #36                 // String client_max_window_bits
      73: aload         8
      75: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      80: checkcast     #38                 // class java/lang/String
      83: invokevirtual #39                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      86: ifeq          97
      89: aload_0
      90: getfield      #20                 // Field preferredClientWindowSize:I
      93: istore_3
      94: goto          226
      97: ldc           #40                 // String server_max_window_bits
      99: aload         8
     101: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     106: checkcast     #38                 // class java/lang/String
     109: invokevirtual #39                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     112: ifeq          161
     115: aload_0
     116: getfield      #19                 // Field allowServerWindowSize:Z
     119: ifeq          156
     122: aload         8
     124: invokeinterface #41,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     129: checkcast     #38                 // class java/lang/String
     132: invokestatic  #42                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     135: istore        4
     137: iload         4
     139: bipush        15
     141: if_icmpgt     151
     144: iload         4
     146: bipush        8
     148: if_icmpge     226
     151: iconst_0
     152: istore_2
     153: goto          226
     156: iconst_0
     157: istore_2
     158: goto          226
     161: ldc           #43                 // String client_no_context_takeover
     163: aload         8
     165: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     170: checkcast     #38                 // class java/lang/String
     173: invokevirtual #39                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     176: ifeq          188
     179: aload_0
     180: getfield      #22                 // Field preferredClientNoContext:Z
     183: istore        6
     185: goto          226
     188: ldc           #44                 // String server_no_context_takeover
     190: aload         8
     192: invokeinterface #37,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     197: checkcast     #38                 // class java/lang/String
     200: invokevirtual #39                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     203: ifeq          224
     206: aload_0
     207: getfield      #21                 // Field allowServerNoContext:Z
     210: ifeq          219
     213: iconst_1
     214: istore        5
     216: goto          226
     219: iconst_0
     220: istore_2
     221: goto          226
     224: iconst_0
     225: istore_2
     226: goto          45
     229: iload_2
     230: ifeq          256
     233: new           #45                 // class io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateServerExtensionHandshaker$PermessageDeflateExtension
     236: dup
     237: aload_0
     238: getfield      #18                 // Field compressionLevel:I
     241: iload         5
     243: iload         4
     245: iload         6
     247: iload_3
     248: aload_0
     249: getfield      #26                 // Field extensionFilterProvider:Lio/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionFilterProvider;
     252: invokespecial #46                 // Method io/netty/handler/codec/http/websocketx/extensions/compression/PerMessageDeflateServerExtensionHandshaker$PermessageDeflateExtension."<init>":(IZIZILio/netty/handler/codec/http/websocketx/extensions/WebSocketExtensionFilterProvider;)V
     255: areturn
     256: aconst_null
     257: areturn
}
