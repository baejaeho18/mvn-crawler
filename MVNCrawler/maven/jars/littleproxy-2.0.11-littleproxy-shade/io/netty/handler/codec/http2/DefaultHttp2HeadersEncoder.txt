Compiled from "DefaultHttp2HeadersEncoder.java"
public class io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder implements io.netty.handler.codec.http2.Http2HeadersEncoder,io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration {
  private final io.netty.handler.codec.http2.HpackEncoder hpackEncoder;

  private final io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector sensitivityDetector;

  private final io.netty.buffer.ByteBuf tableSizeChangeOutput;

  public io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field NEVER_SENSITIVE:Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;
       4: invokespecial #2                  // Method "<init>":(Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;)V
       7: return

  public io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class io/netty/handler/codec/http2/HpackEncoder
       5: dup
       6: invokespecial #4                  // Method io/netty/handler/codec/http2/HpackEncoder."<init>":()V
       9: invokespecial #5                  // Method "<init>":(Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;Lio/netty/handler/codec/http2/HpackEncoder;)V
      12: return

  public io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class io/netty/handler/codec/http2/HpackEncoder
       5: dup
       6: iload_2
       7: invokespecial #6                  // Method io/netty/handler/codec/http2/HpackEncoder."<init>":(Z)V
      10: invokespecial #5                  // Method "<init>":(Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;Lio/netty/handler/codec/http2/HpackEncoder;)V
      13: return

  public io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector, boolean, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: sipush        512
       7: invokespecial #7                  // Method "<init>":(Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;ZII)V
      10: return

  public io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector, boolean, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class io/netty/handler/codec/http2/HpackEncoder
       5: dup
       6: iload_2
       7: iload_3
       8: iload         4
      10: invokespecial #8                  // Method io/netty/handler/codec/http2/HpackEncoder."<init>":(ZII)V
      13: invokespecial #5                  // Method "<init>":(Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;Lio/netty/handler/codec/http2/HpackEncoder;)V
      16: return

  io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector, io.netty.handler.codec.http2.HpackEncoder);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #10                 // Method io/netty/buffer/Unpooled.buffer:()Lio/netty/buffer/ByteBuf;
       8: putfield      #11                 // Field tableSizeChangeOutput:Lio/netty/buffer/ByteBuf;
      11: aload_0
      12: aload_1
      13: ldc           #12                 // String sensitiveDetector
      15: invokestatic  #13                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      18: checkcast     #14                 // class io/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector
      21: putfield      #15                 // Field sensitivityDetector:Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;
      24: aload_0
      25: aload_2
      26: ldc           #16                 // String hpackEncoder
      28: invokestatic  #13                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #3                  // class io/netty/handler/codec/http2/HpackEncoder
      34: putfield      #17                 // Field hpackEncoder:Lio/netty/handler/codec/http2/HpackEncoder;
      37: return

  public void encodeHeaders(int, io.netty.handler.codec.http2.Http2Headers, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #11                 // Field tableSizeChangeOutput:Lio/netty/buffer/ByteBuf;
       4: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       7: ifeq          27
      10: aload_3
      11: aload_0
      12: getfield      #11                 // Field tableSizeChangeOutput:Lio/netty/buffer/ByteBuf;
      15: invokevirtual #19                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      18: pop
      19: aload_0
      20: getfield      #11                 // Field tableSizeChangeOutput:Lio/netty/buffer/ByteBuf;
      23: invokevirtual #20                 // Method io/netty/buffer/ByteBuf.clear:()Lio/netty/buffer/ByteBuf;
      26: pop
      27: aload_0
      28: getfield      #17                 // Field hpackEncoder:Lio/netty/handler/codec/http2/HpackEncoder;
      31: iload_1
      32: aload_3
      33: aload_2
      34: aload_0
      35: getfield      #15                 // Field sensitivityDetector:Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;
      38: invokevirtual #21                 // Method io/netty/handler/codec/http2/HpackEncoder.encodeHeaders:(ILio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/Http2Headers;Lio/netty/handler/codec/http2/Http2HeadersEncoder$SensitivityDetector;)V
      41: goto          74
      44: astore        4
      46: aload         4
      48: athrow
      49: astore        4
      51: getstatic     #24                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      54: aload         4
      56: ldc           #25                 // String Failed encoding headers block: %s
      58: iconst_1
      59: anewarray     #26                 // class java/lang/Object
      62: dup
      63: iconst_0
      64: aload         4
      66: invokevirtual #27                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      69: aastore
      70: invokestatic  #28                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      73: athrow
      74: return
    Exception table:
       from    to  target type
           0    41    44   Class io/netty/handler/codec/http2/Http2Exception
           0    41    49   Class java/lang/Throwable

  public void maxHeaderTableSize(long) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #17                 // Field hpackEncoder:Lio/netty/handler/codec/http2/HpackEncoder;
       4: aload_0
       5: getfield      #11                 // Field tableSizeChangeOutput:Lio/netty/buffer/ByteBuf;
       8: lload_1
       9: invokevirtual #29                 // Method io/netty/handler/codec/http2/HpackEncoder.setMaxHeaderTableSize:(Lio/netty/buffer/ByteBuf;J)V
      12: return

  public long maxHeaderTableSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field hpackEncoder:Lio/netty/handler/codec/http2/HpackEncoder;
       4: invokevirtual #30                 // Method io/netty/handler/codec/http2/HpackEncoder.getMaxHeaderTableSize:()J
       7: lreturn

  public void maxHeaderListSize(long) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #17                 // Field hpackEncoder:Lio/netty/handler/codec/http2/HpackEncoder;
       4: lload_1
       5: invokevirtual #31                 // Method io/netty/handler/codec/http2/HpackEncoder.setMaxHeaderListSize:(J)V
       8: return

  public long maxHeaderListSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field hpackEncoder:Lio/netty/handler/codec/http2/HpackEncoder;
       4: invokevirtual #32                 // Method io/netty/handler/codec/http2/HpackEncoder.getMaxHeaderListSize:()J
       7: lreturn

  public io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration configuration();
    Code:
       0: aload_0
       1: areturn
}
