Compiled from "ReadOnlyHttpHeaders.java"
final class io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringIterator implements java.util.Map$Entry<java.lang.String, java.lang.String>, java.util.Iterator<java.util.Map$Entry<java.lang.String, java.lang.String>> {
  private java.lang.String key;

  private java.lang.String value;

  private int nextNameIndex;

  final io.netty.handler.codec.http.ReadOnlyHttpHeaders this$0;

  private io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringIterator(io.netty.handler.codec.http.ReadOnlyHttpHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nextNameIndex:I
       4: aload_0
       5: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;
       8: invokestatic  #5                  // Method io/netty/handler/codec/http/ReadOnlyHttpHeaders.access$200:(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;)[Ljava/lang/CharSequence;
      11: arraylength
      12: if_icmpeq     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public java.util.Map$Entry<java.lang.String, java.lang.String> next();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method hasNext:()Z
       4: ifne          15
       7: new           #7                  // class java/util/NoSuchElementException
      10: dup
      11: invokespecial #8                  // Method java/util/NoSuchElementException."<init>":()V
      14: athrow
      15: aload_0
      16: aload_0
      17: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;
      20: invokestatic  #5                  // Method io/netty/handler/codec/http/ReadOnlyHttpHeaders.access$200:(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;)[Ljava/lang/CharSequence;
      23: aload_0
      24: getfield      #4                  // Field nextNameIndex:I
      27: aaload
      28: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      33: putfield      #10                 // Field key:Ljava/lang/String;
      36: aload_0
      37: aload_0
      38: getfield      #2                  // Field this$0:Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;
      41: invokestatic  #5                  // Method io/netty/handler/codec/http/ReadOnlyHttpHeaders.access$200:(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;)[Ljava/lang/CharSequence;
      44: aload_0
      45: getfield      #4                  // Field nextNameIndex:I
      48: iconst_1
      49: iadd
      50: aaload
      51: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;
      56: putfield      #11                 // Field value:Ljava/lang/String;
      59: aload_0
      60: dup
      61: getfield      #4                  // Field nextNameIndex:I
      64: iconst_2
      65: iadd
      66: putfield      #4                  // Field nextNameIndex:I
      69: aload_0
      70: areturn

  public void remove();
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #13                 // String read only
       6: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String getKey();
    Code:
       0: aload_0
       1: getfield      #10                 // Field key:Ljava/lang/String;
       4: areturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #11                 // Field value:Ljava/lang/String;
       4: areturn

  public java.lang.String setValue(java.lang.String);
    Code:
       0: new           #12                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #13                 // String read only
       6: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: getfield      #10                 // Field key:Ljava/lang/String;
      11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: bipush        61
      16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #11                 // Field value:Ljava/lang/String;
      23: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.Object setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #20                 // class java/lang/String
       5: invokevirtual #21                 // Method setValue:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: invokevirtual #22                 // Method getValue:()Ljava/lang/String;
       4: areturn

  public java.lang.Object getKey();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method getKey:()Ljava/lang/String;
       4: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method next:()Ljava/util/Map$Entry;
       4: areturn

  io.netty.handler.codec.http.ReadOnlyHttpHeaders$ReadOnlyStringIterator(io.netty.handler.codec.http.ReadOnlyHttpHeaders, io.netty.handler.codec.http.ReadOnlyHttpHeaders$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lio/netty/handler/codec/http/ReadOnlyHttpHeaders;)V
       5: return
}
