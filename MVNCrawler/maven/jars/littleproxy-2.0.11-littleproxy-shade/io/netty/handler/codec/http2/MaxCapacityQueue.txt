Compiled from "MaxCapacityQueue.java"
final class io.netty.handler.codec.http2.MaxCapacityQueue<E> implements java.util.Queue<E> {
  private final java.util.Queue<E> queue;

  private final int maxCapacity;

  io.netty.handler.codec.http2.MaxCapacityQueue(java.util.Queue<E>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field queue:Ljava/util/Queue;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field maxCapacity:I
      14: return

  public boolean add(E);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #4                  // Method offer:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: iconst_1
       9: ireturn
      10: new           #5                  // class java/lang/IllegalStateException
      13: dup
      14: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":()V
      17: athrow

  public boolean offer(E);
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxCapacity:I
       4: aload_0
       5: getfield      #2                  // Field queue:Ljava/util/Queue;
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Queue.size:()I
      13: if_icmpgt     18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: getfield      #2                  // Field queue:Ljava/util/Queue;
      22: aload_1
      23: invokeinterface #8,  2            // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      28: ireturn

  public E remove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
       9: areturn

  public E poll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: areturn

  public E element();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #11,  1           // InterfaceMethod java/util/Queue.element:()Ljava/lang/Object;
       9: areturn

  public E peek();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
       9: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Queue.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
       9: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #16,  1           // InterfaceMethod java/util/Queue.toArray:()[Ljava/lang/Object;
       9: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Queue.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      10: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Queue.containsAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxCapacity:I
       4: aload_0
       5: invokevirtual #20                 // Method size:()I
       8: aload_1
       9: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.size:()I
      14: iadd
      15: if_icmplt     29
      18: aload_0
      19: getfield      #2                  // Field queue:Ljava/util/Queue;
      22: aload_1
      23: invokeinterface #22,  2           // InterfaceMethod java/util/Queue.addAll:(Ljava/util/Collection;)Z
      28: ireturn
      29: new           #5                  // class java/lang/IllegalStateException
      32: dup
      33: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":()V
      36: athrow

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod java/util/Queue.removeAll:(Ljava/util/Collection;)Z
      10: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #24,  2           // InterfaceMethod java/util/Queue.retainAll:(Ljava/util/Collection;)Z
      10: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Queue.clear:()V
       9: return
}
