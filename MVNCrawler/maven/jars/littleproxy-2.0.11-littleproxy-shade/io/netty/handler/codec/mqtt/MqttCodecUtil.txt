Compiled from "MqttCodecUtil.java"
final class io.netty.handler.codec.mqtt.MqttCodecUtil {
  private static final char[] TOPIC_WILDCARDS;

  static final io.netty.util.AttributeKey<io.netty.handler.codec.mqtt.MqttVersion> MQTT_VERSION_KEY;

  static io.netty.handler.codec.mqtt.MqttVersion getMqttVersion(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: getstatic     #3                  // Field MQTT_VERSION_KEY:Lio/netty/util/AttributeKey;
       9: invokeinterface #4,  2            // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      14: astore_1
      15: aload_1
      16: invokeinterface #5,  1            // InterfaceMethod io/netty/util/Attribute.get:()Ljava/lang/Object;
      21: checkcast     #6                  // class io/netty/handler/codec/mqtt/MqttVersion
      24: astore_2
      25: aload_2
      26: ifnonnull     33
      29: getstatic     #7                  // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_3_1_1:Lio/netty/handler/codec/mqtt/MqttVersion;
      32: areturn
      33: aload_2
      34: areturn

  static void setMqttVersion(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.mqtt.MqttVersion);
    Code:
       0: aload_0
       1: invokeinterface #2,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: getstatic     #3                  // Field MQTT_VERSION_KEY:Lio/netty/util/AttributeKey;
       9: invokeinterface #4,  2            // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      14: astore_2
      15: aload_2
      16: aload_1
      17: invokeinterface #8,  2            // InterfaceMethod io/netty/util/Attribute.set:(Ljava/lang/Object;)V
      22: return

  static boolean isValidPublishTopicName(java.lang.String);
    Code:
       0: getstatic     #9                  // Field TOPIC_WILDCARDS:[C
       3: astore_1
       4: aload_1
       5: arraylength
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     36
      14: aload_1
      15: iload_3
      16: caload
      17: istore        4
      19: aload_0
      20: iload         4
      22: invokevirtual #10                 // Method java/lang/String.indexOf:(I)I
      25: iflt          30
      28: iconst_0
      29: ireturn
      30: iinc          3, 1
      33: goto          9
      36: iconst_1
      37: ireturn

  static boolean isValidMessageId(int);
    Code:
       0: iload_0
       1: ifeq          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ireturn

  static boolean isValidClientId(io.netty.handler.codec.mqtt.MqttVersion, int, java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #11                 // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_3_1:Lio/netty/handler/codec/mqtt/MqttVersion;
       4: if_acmpne     33
       7: aload_2
       8: ifnull        31
      11: aload_2
      12: invokevirtual #12                 // Method java/lang/String.length:()I
      15: iconst_1
      16: if_icmplt     31
      19: aload_2
      20: invokevirtual #12                 // Method java/lang/String.length:()I
      23: iload_1
      24: if_icmpgt     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn
      33: aload_0
      34: getstatic     #7                  // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_3_1_1:Lio/netty/handler/codec/mqtt/MqttVersion;
      37: if_acmpeq     47
      40: aload_0
      41: getstatic     #13                 // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_5:Lio/netty/handler/codec/mqtt/MqttVersion;
      44: if_acmpne     57
      47: aload_2
      48: ifnull        55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn
      57: new           #14                 // class java/lang/IllegalArgumentException
      60: dup
      61: new           #15                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      68: aload_0
      69: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #18                 // String  is unknown mqtt version
      74: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      83: athrow

  static io.netty.handler.codec.mqtt.MqttFixedHeader validateFixedHeader(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.mqtt.MqttFixedHeader);
    Code:
       0: getstatic     #22                 // Field io/netty/handler/codec/mqtt/MqttCodecUtil$1.$SwitchMap$io$netty$handler$codec$mqtt$MqttMessageType:[I
       3: aload_1
       4: invokevirtual #23                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
       7: invokevirtual #24                 // Method io/netty/handler/codec/mqtt/MqttMessageType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 4
                     1: 40
                     2: 40
                     3: 40
                     4: 85
               default: 107
          }
      40: aload_1
      41: invokevirtual #25                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.qosLevel:()Lio/netty/handler/codec/mqtt/MqttQoS;
      44: getstatic     #26                 // Field io/netty/handler/codec/mqtt/MqttQoS.AT_LEAST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      47: if_acmpeq     83
      50: new           #27                 // class io/netty/handler/codec/DecoderException
      53: dup
      54: new           #15                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      61: aload_1
      62: invokevirtual #23                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
      65: invokevirtual #28                 // Method io/netty/handler/codec/mqtt/MqttMessageType.name:()Ljava/lang/String;
      68: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #29                 // String  message must have QoS 1
      73: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #30                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_1
      84: areturn
      85: aload_0
      86: invokestatic  #31                 // Method getMqttVersion:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/handler/codec/mqtt/MqttVersion;
      89: getstatic     #13                 // Field io/netty/handler/codec/mqtt/MqttVersion.MQTT_5:Lio/netty/handler/codec/mqtt/MqttVersion;
      92: if_acmpeq     105
      95: new           #27                 // class io/netty/handler/codec/DecoderException
      98: dup
      99: ldc           #32                 // String AUTH message requires at least MQTT 5
     101: invokespecial #30                 // Method io/netty/handler/codec/DecoderException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_1
     106: areturn
     107: aload_1
     108: areturn

  static io.netty.handler.codec.mqtt.MqttFixedHeader resetUnusedFields(io.netty.handler.codec.mqtt.MqttFixedHeader);
    Code:
       0: getstatic     #22                 // Field io/netty/handler/codec/mqtt/MqttCodecUtil$1.$SwitchMap$io$netty$handler$codec$mqtt$MqttMessageType:[I
       3: aload_0
       4: invokevirtual #23                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
       7: invokevirtual #24                 // Method io/netty/handler/codec/mqtt/MqttMessageType.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 14
                     1: 127
                     2: 127
                     3: 127
                     4: 161
                     5: 80
                     6: 80
                     7: 80
                     8: 80
                     9: 80
                    10: 80
                    11: 80
                    12: 80
                    13: 80
                    14: 80
               default: 161
          }
      80: aload_0
      81: invokevirtual #33                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isDup:()Z
      84: ifne          104
      87: aload_0
      88: invokevirtual #25                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.qosLevel:()Lio/netty/handler/codec/mqtt/MqttQoS;
      91: getstatic     #34                 // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
      94: if_acmpne     104
      97: aload_0
      98: invokevirtual #35                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isRetain:()Z
     101: ifeq          125
     104: new           #36                 // class io/netty/handler/codec/mqtt/MqttFixedHeader
     107: dup
     108: aload_0
     109: invokevirtual #23                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
     112: iconst_0
     113: getstatic     #34                 // Field io/netty/handler/codec/mqtt/MqttQoS.AT_MOST_ONCE:Lio/netty/handler/codec/mqtt/MqttQoS;
     116: iconst_0
     117: aload_0
     118: invokevirtual #37                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.remainingLength:()I
     121: invokespecial #38                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader."<init>":(Lio/netty/handler/codec/mqtt/MqttMessageType;ZLio/netty/handler/codec/mqtt/MqttQoS;ZI)V
     124: areturn
     125: aload_0
     126: areturn
     127: aload_0
     128: invokevirtual #35                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isRetain:()Z
     131: ifeq          159
     134: new           #36                 // class io/netty/handler/codec/mqtt/MqttFixedHeader
     137: dup
     138: aload_0
     139: invokevirtual #23                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.messageType:()Lio/netty/handler/codec/mqtt/MqttMessageType;
     142: aload_0
     143: invokevirtual #33                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.isDup:()Z
     146: aload_0
     147: invokevirtual #25                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.qosLevel:()Lio/netty/handler/codec/mqtt/MqttQoS;
     150: iconst_0
     151: aload_0
     152: invokevirtual #37                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader.remainingLength:()I
     155: invokespecial #38                 // Method io/netty/handler/codec/mqtt/MqttFixedHeader."<init>":(Lio/netty/handler/codec/mqtt/MqttMessageType;ZLio/netty/handler/codec/mqtt/MqttQoS;ZI)V
     158: areturn
     159: aload_0
     160: areturn
     161: aload_0
     162: areturn

  private io.netty.handler.codec.mqtt.MqttCodecUtil();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: iconst_2
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        35
       7: castore
       8: dup
       9: iconst_1
      10: bipush        43
      12: castore
      13: putstatic     #9                  // Field TOPIC_WILDCARDS:[C
      16: ldc           #40                 // String NETTY_CODEC_MQTT_VERSION
      18: invokestatic  #41                 // Method io/netty/util/AttributeKey.valueOf:(Ljava/lang/String;)Lio/netty/util/AttributeKey;
      21: putstatic     #3                  // Field MQTT_VERSION_KEY:Lio/netty/util/AttributeKey;
      24: return
}
