Compiled from "HpackDecoder.java"
final class io.netty.handler.codec.http2.HpackDecoder {
  private static final io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_DECOMPRESSION_EXCEPTION;

  private static final io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_TO_LONG_DECOMPRESSION_EXCEPTION;

  private static final io.netty.handler.codec.http2.Http2Exception DECODE_ULE_128_TO_INT_DECOMPRESSION_EXCEPTION;

  private static final io.netty.handler.codec.http2.Http2Exception DECODE_ILLEGAL_INDEX_VALUE;

  private static final io.netty.handler.codec.http2.Http2Exception INDEX_HEADER_ILLEGAL_INDEX_VALUE;

  private static final io.netty.handler.codec.http2.Http2Exception READ_NAME_ILLEGAL_INDEX_VALUE;

  private static final io.netty.handler.codec.http2.Http2Exception INVALID_MAX_DYNAMIC_TABLE_SIZE;

  private static final io.netty.handler.codec.http2.Http2Exception MAX_DYNAMIC_TABLE_SIZE_CHANGE_REQUIRED;

  private static final byte READ_HEADER_REPRESENTATION;

  private static final byte READ_MAX_DYNAMIC_TABLE_SIZE;

  private static final byte READ_INDEXED_HEADER;

  private static final byte READ_INDEXED_HEADER_NAME;

  private static final byte READ_LITERAL_HEADER_NAME_LENGTH_PREFIX;

  private static final byte READ_LITERAL_HEADER_NAME_LENGTH;

  private static final byte READ_LITERAL_HEADER_NAME;

  private static final byte READ_LITERAL_HEADER_VALUE_LENGTH_PREFIX;

  private static final byte READ_LITERAL_HEADER_VALUE_LENGTH;

  private static final byte READ_LITERAL_HEADER_VALUE;

  private final io.netty.handler.codec.http2.HpackHuffmanDecoder huffmanDecoder;

  private final io.netty.handler.codec.http2.HpackDynamicTable hpackDynamicTable;

  private long maxHeaderListSize;

  private long maxDynamicTableSize;

  private long encoderMaxDynamicTableSize;

  private boolean maxDynamicTableSizeChangeRequired;

  static final boolean $assertionsDisabled;

  io.netty.handler.codec.http2.HpackDecoder(long);
    Code:
       0: aload_0
       1: lload_1
       2: sipush        4096
       5: invokespecial #3                  // Method "<init>":(JI)V
       8: return

  io.netty.handler.codec.http2.HpackDecoder(long, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #5                  // class io/netty/handler/codec/http2/HpackHuffmanDecoder
       8: dup
       9: invokespecial #6                  // Method io/netty/handler/codec/http2/HpackHuffmanDecoder."<init>":()V
      12: putfield      #7                  // Field huffmanDecoder:Lio/netty/handler/codec/http2/HpackHuffmanDecoder;
      15: aload_0
      16: lload_1
      17: ldc           #8                  // String maxHeaderListSize
      19: invokestatic  #9                  // Method io/netty/util/internal/ObjectUtil.checkPositive:(JLjava/lang/String;)J
      22: putfield      #10                 // Field maxHeaderListSize:J
      25: aload_0
      26: aload_0
      27: iload_3
      28: i2l
      29: dup2_x1
      30: putfield      #11                 // Field encoderMaxDynamicTableSize:J
      33: putfield      #12                 // Field maxDynamicTableSize:J
      36: aload_0
      37: iconst_0
      38: putfield      #13                 // Field maxDynamicTableSizeChangeRequired:Z
      41: aload_0
      42: new           #14                 // class io/netty/handler/codec/http2/HpackDynamicTable
      45: dup
      46: iload_3
      47: i2l
      48: invokespecial #15                 // Method io/netty/handler/codec/http2/HpackDynamicTable."<init>":(J)V
      51: putfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      54: return

  public void decode(int, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2Headers, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: new           #17                 // class io/netty/handler/codec/http2/HpackDecoder$Http2HeadersSink
       3: dup
       4: iload_1
       5: aload_3
       6: aload_0
       7: getfield      #10                 // Field maxHeaderListSize:J
      10: iload         4
      12: invokespecial #18                 // Method io/netty/handler/codec/http2/HpackDecoder$Http2HeadersSink."<init>":(ILio/netty/handler/codec/http2/Http2Headers;JZ)V
      15: astore        5
      17: aload_0
      18: aload_2
      19: aload         5
      21: invokespecial #19                 // Method decode:(Lio/netty/buffer/ByteBuf;Lio/netty/handler/codec/http2/HpackDecoder$Sink;)V
      24: aload         5
      26: invokevirtual #20                 // Method io/netty/handler/codec/http2/HpackDecoder$Http2HeadersSink.finish:()V
      29: return

  private void decode(io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.HpackDecoder$Sink) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iconst_0
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iconst_0
      12: istore        7
      14: aconst_null
      15: astore        8
      17: getstatic     #22                 // Field io/netty/handler/codec/http2/HpackUtil$IndexType.NONE:Lio/netty/handler/codec/http2/HpackUtil$IndexType;
      20: astore        9
      22: aload_1
      23: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      26: ifeq          751
      29: iload         6
      31: tableswitch   { // 0 to 9
                     0: 84
                     1: 399
                     2: 415
                     3: 448
                     4: 475
                     5: 528
                     6: 542
                     7: 574
                     8: 667
                     9: 681
               default: 723
          }
      84: aload_1
      85: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readByte:()B
      88: istore        10
      90: aload_0
      91: getfield      #13                 // Field maxDynamicTableSizeChangeRequired:Z
      94: ifeq          112
      97: iload         10
      99: sipush        224
     102: iand
     103: bipush        32
     105: if_icmpeq     112
     108: getstatic     #25                 // Field MAX_DYNAMIC_TABLE_SIZE_CHANGE_REQUIRED:Lio/netty/handler/codec/http2/Http2Exception;
     111: athrow
     112: iload         10
     114: ifge          188
     117: iload         10
     119: bipush        127
     121: iand
     122: istore_3
     123: iload_3
     124: lookupswitch  { // 2
                     0: 152
                   127: 156
               default: 162
          }
     152: getstatic     #26                 // Field DECODE_ILLEGAL_INDEX_VALUE:Lio/netty/handler/codec/http2/Http2Exception;
     155: athrow
     156: iconst_2
     157: istore        6
     159: goto          185
     162: aload_0
     163: iload_3
     164: invokespecial #27                 // Method getIndexedHeader:(I)Lio/netty/handler/codec/http2/HpackHeaderField;
     167: astore        11
     169: aload_2
     170: aload         11
     172: getfield      #28                 // Field io/netty/handler/codec/http2/HpackHeaderField.name:Ljava/lang/CharSequence;
     175: aload         11
     177: getfield      #29                 // Field io/netty/handler/codec/http2/HpackHeaderField.value:Ljava/lang/CharSequence;
     180: invokeinterface #30,  3           // InterfaceMethod io/netty/handler/codec/http2/HpackDecoder$Sink.appendToHeaderList:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
     185: goto          22
     188: iload         10
     190: bipush        64
     192: iand
     193: bipush        64
     195: if_icmpne     271
     198: getstatic     #31                 // Field io/netty/handler/codec/http2/HpackUtil$IndexType.INCREMENTAL:Lio/netty/handler/codec/http2/HpackUtil$IndexType;
     201: astore        9
     203: iload         10
     205: bipush        63
     207: iand
     208: istore_3
     209: iload_3
     210: lookupswitch  { // 2
                     0: 236
                    63: 242
               default: 248
          }
     236: iconst_4
     237: istore        6
     239: goto          22
     242: iconst_3
     243: istore        6
     245: goto          22
     248: aload_0
     249: iload_3
     250: invokespecial #32                 // Method readName:(I)Ljava/lang/CharSequence;
     253: astore        8
     255: aload         8
     257: invokeinterface #33,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     262: istore        4
     264: bipush        7
     266: istore        6
     268: goto          22
     271: iload         10
     273: bipush        32
     275: iand
     276: bipush        32
     278: if_icmpne     311
     281: iload         10
     283: bipush        31
     285: iand
     286: istore_3
     287: iload_3
     288: bipush        31
     290: if_icmpne     299
     293: iconst_1
     294: istore        6
     296: goto          22
     299: aload_0
     300: iload_3
     301: i2l
     302: invokespecial #34                 // Method setDynamicTableSize:(J)V
     305: iconst_0
     306: istore        6
     308: goto          22
     311: iload         10
     313: bipush        16
     315: iand
     316: bipush        16
     318: if_icmpne     327
     321: getstatic     #35                 // Field io/netty/handler/codec/http2/HpackUtil$IndexType.NEVER:Lio/netty/handler/codec/http2/HpackUtil$IndexType;
     324: goto          330
     327: getstatic     #22                 // Field io/netty/handler/codec/http2/HpackUtil$IndexType.NONE:Lio/netty/handler/codec/http2/HpackUtil$IndexType;
     330: astore        9
     332: iload         10
     334: bipush        15
     336: iand
     337: istore_3
     338: iload_3
     339: lookupswitch  { // 2
                     0: 364
                    15: 370
               default: 376
          }
     364: iconst_4
     365: istore        6
     367: goto          22
     370: iconst_3
     371: istore        6
     373: goto          22
     376: aload_0
     377: iload_3
     378: invokespecial #32                 // Method readName:(I)Ljava/lang/CharSequence;
     381: astore        8
     383: aload         8
     385: invokeinterface #33,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     390: istore        4
     392: bipush        7
     394: istore        6
     396: goto          22
     399: aload_0
     400: aload_1
     401: iload_3
     402: i2l
     403: invokestatic  #36                 // Method decodeULE128:(Lio/netty/buffer/ByteBuf;J)J
     406: invokespecial #34                 // Method setDynamicTableSize:(J)V
     409: iconst_0
     410: istore        6
     412: goto          22
     415: aload_0
     416: aload_1
     417: iload_3
     418: invokestatic  #37                 // Method decodeULE128:(Lio/netty/buffer/ByteBuf;I)I
     421: invokespecial #27                 // Method getIndexedHeader:(I)Lio/netty/handler/codec/http2/HpackHeaderField;
     424: astore        11
     426: aload_2
     427: aload         11
     429: getfield      #28                 // Field io/netty/handler/codec/http2/HpackHeaderField.name:Ljava/lang/CharSequence;
     432: aload         11
     434: getfield      #29                 // Field io/netty/handler/codec/http2/HpackHeaderField.value:Ljava/lang/CharSequence;
     437: invokeinterface #30,  3           // InterfaceMethod io/netty/handler/codec/http2/HpackDecoder$Sink.appendToHeaderList:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
     442: iconst_0
     443: istore        6
     445: goto          22
     448: aload_0
     449: aload_1
     450: iload_3
     451: invokestatic  #37                 // Method decodeULE128:(Lio/netty/buffer/ByteBuf;I)I
     454: invokespecial #32                 // Method readName:(I)Ljava/lang/CharSequence;
     457: astore        8
     459: aload         8
     461: invokeinterface #33,  1           // InterfaceMethod java/lang/CharSequence.length:()I
     466: istore        4
     468: bipush        7
     470: istore        6
     472: goto          22
     475: aload_1
     476: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readByte:()B
     479: istore        10
     481: iload         10
     483: sipush        128
     486: iand
     487: sipush        128
     490: if_icmpne     497
     493: iconst_1
     494: goto          498
     497: iconst_0
     498: istore        7
     500: iload         10
     502: bipush        127
     504: iand
     505: istore_3
     506: iload_3
     507: bipush        127
     509: if_icmpne     518
     512: iconst_5
     513: istore        6
     515: goto          22
     518: iload_3
     519: istore        4
     521: bipush        6
     523: istore        6
     525: goto          22
     528: aload_1
     529: iload_3
     530: invokestatic  #37                 // Method decodeULE128:(Lio/netty/buffer/ByteBuf;I)I
     533: istore        4
     535: bipush        6
     537: istore        6
     539: goto          22
     542: aload_1
     543: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     546: iload         4
     548: if_icmpge     556
     551: aload_1
     552: invokestatic  #39                 // Method notEnoughDataException:(Lio/netty/buffer/ByteBuf;)Ljava/lang/IllegalArgumentException;
     555: athrow
     556: aload_0
     557: aload_1
     558: iload         4
     560: iload         7
     562: invokespecial #40                 // Method readStringLiteral:(Lio/netty/buffer/ByteBuf;IZ)Ljava/lang/CharSequence;
     565: astore        8
     567: bipush        7
     569: istore        6
     571: goto          22
     574: aload_1
     575: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.readByte:()B
     578: istore        10
     580: iload         10
     582: sipush        128
     585: iand
     586: sipush        128
     589: if_icmpne     596
     592: iconst_1
     593: goto          597
     596: iconst_0
     597: istore        7
     599: iload         10
     601: bipush        127
     603: iand
     604: istore_3
     605: iload_3
     606: lookupswitch  { // 2
                     0: 639
                   127: 632
               default: 657
          }
     632: bipush        8
     634: istore        6
     636: goto          22
     639: aload_0
     640: aload_2
     641: aload         8
     643: getstatic     #41                 // Field io/netty/util/AsciiString.EMPTY_STRING:Lio/netty/util/AsciiString;
     646: aload         9
     648: invokespecial #42                 // Method insertHeader:(Lio/netty/handler/codec/http2/HpackDecoder$Sink;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lio/netty/handler/codec/http2/HpackUtil$IndexType;)V
     651: iconst_0
     652: istore        6
     654: goto          22
     657: iload_3
     658: istore        5
     660: bipush        9
     662: istore        6
     664: goto          22
     667: aload_1
     668: iload_3
     669: invokestatic  #37                 // Method decodeULE128:(Lio/netty/buffer/ByteBuf;I)I
     672: istore        5
     674: bipush        9
     676: istore        6
     678: goto          22
     681: aload_1
     682: invokevirtual #38                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
     685: iload         5
     687: if_icmpge     695
     690: aload_1
     691: invokestatic  #39                 // Method notEnoughDataException:(Lio/netty/buffer/ByteBuf;)Ljava/lang/IllegalArgumentException;
     694: athrow
     695: aload_0
     696: aload_1
     697: iload         5
     699: iload         7
     701: invokespecial #40                 // Method readStringLiteral:(Lio/netty/buffer/ByteBuf;IZ)Ljava/lang/CharSequence;
     704: astore        12
     706: aload_0
     707: aload_2
     708: aload         8
     710: aload         12
     712: aload         9
     714: invokespecial #42                 // Method insertHeader:(Lio/netty/handler/codec/http2/HpackDecoder$Sink;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Lio/netty/handler/codec/http2/HpackUtil$IndexType;)V
     717: iconst_0
     718: istore        6
     720: goto          22
     723: new           #43                 // class java/lang/Error
     726: dup
     727: new           #44                 // class java/lang/StringBuilder
     730: dup
     731: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     734: ldc           #46                 // String should not reach here state:
     736: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     739: iload         6
     741: invokevirtual #48                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     744: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     747: invokespecial #50                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
     750: athrow
     751: iload         6
     753: ifeq          769
     756: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     759: ldc           #52                 // String Incomplete header block fragment.
     761: iconst_0
     762: anewarray     #53                 // class java/lang/Object
     765: invokestatic  #54                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     768: athrow
     769: return

  public void setMaxHeaderTableSize(long) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          14
       6: lload_1
       7: ldc2_w        #55                 // long 4294967295l
      10: lcmp
      11: ifle          50
      14: getstatic     #57                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      17: ldc           #58                 // String Header Table Size must be >= %d and <= %d but was %d
      19: iconst_3
      20: anewarray     #53                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: lconst_0
      26: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: aastore
      30: dup
      31: iconst_1
      32: ldc2_w        #55                 // long 4294967295l
      35: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: aastore
      39: dup
      40: iconst_2
      41: lload_1
      42: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: aastore
      46: invokestatic  #54                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      49: athrow
      50: aload_0
      51: lload_1
      52: putfield      #12                 // Field maxDynamicTableSize:J
      55: aload_0
      56: getfield      #12                 // Field maxDynamicTableSize:J
      59: aload_0
      60: getfield      #11                 // Field encoderMaxDynamicTableSize:J
      63: lcmp
      64: ifge          83
      67: aload_0
      68: iconst_1
      69: putfield      #13                 // Field maxDynamicTableSizeChangeRequired:Z
      72: aload_0
      73: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      76: aload_0
      77: getfield      #12                 // Field maxDynamicTableSize:J
      80: invokevirtual #60                 // Method io/netty/handler/codec/http2/HpackDynamicTable.setCapacity:(J)V
      83: return

  public void setMaxHeaderListSize(long, long) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #61                 // Method setMaxHeaderListSize:(J)V
       5: return

  public void setMaxHeaderListSize(long) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          14
       6: lload_1
       7: ldc2_w        #55                 // long 4294967295l
      10: lcmp
      11: ifle          50
      14: getstatic     #57                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      17: ldc           #62                 // String Header List Size must be >= %d and <= %d but was %d
      19: iconst_3
      20: anewarray     #53                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: lconst_0
      26: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: aastore
      30: dup
      31: iconst_1
      32: ldc2_w        #55                 // long 4294967295l
      35: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      38: aastore
      39: dup
      40: iconst_2
      41: lload_1
      42: invokestatic  #59                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: aastore
      46: invokestatic  #54                 // Method io/netty/handler/codec/http2/Http2Exception.connectionError:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      49: athrow
      50: aload_0
      51: lload_1
      52: putfield      #10                 // Field maxHeaderListSize:J
      55: return

  public long getMaxHeaderListSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxHeaderListSize:J
       4: lreturn

  public long getMaxHeaderTableSize();
    Code:
       0: aload_0
       1: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
       4: invokevirtual #63                 // Method io/netty/handler/codec/http2/HpackDynamicTable.capacity:()J
       7: lreturn

  int length();
    Code:
       0: aload_0
       1: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
       4: invokevirtual #64                 // Method io/netty/handler/codec/http2/HpackDynamicTable.length:()I
       7: ireturn

  long size();
    Code:
       0: aload_0
       1: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
       4: invokevirtual #65                 // Method io/netty/handler/codec/http2/HpackDynamicTable.size:()J
       7: lreturn

  io.netty.handler.codec.http2.HpackHeaderField getHeaderField(int);
    Code:
       0: aload_0
       1: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
       4: iload_1
       5: iconst_1
       6: iadd
       7: invokevirtual #66                 // Method io/netty/handler/codec/http2/HpackDynamicTable.getEntry:(I)Lio/netty/handler/codec/http2/HpackHeaderField;
      10: areturn

  private void setDynamicTableSize(long) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #12                 // Field maxDynamicTableSize:J
       5: lcmp
       6: ifle          13
       9: getstatic     #67                 // Field INVALID_MAX_DYNAMIC_TABLE_SIZE:Lio/netty/handler/codec/http2/Http2Exception;
      12: athrow
      13: aload_0
      14: lload_1
      15: putfield      #11                 // Field encoderMaxDynamicTableSize:J
      18: aload_0
      19: iconst_0
      20: putfield      #13                 // Field maxDynamicTableSizeChangeRequired:Z
      23: aload_0
      24: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      27: lload_1
      28: invokevirtual #60                 // Method io/netty/handler/codec/http2/HpackDynamicTable.setCapacity:(J)V
      31: return

  private static io.netty.handler.codec.http2.HpackDecoder$HeaderType validate(int, java.lang.CharSequence, io.netty.handler.codec.http2.HpackDecoder$HeaderType, io.netty.handler.codec.http2.Http2Headers) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_1
       1: invokestatic  #68                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.hasPseudoHeaderFormat:(Ljava/lang/CharSequence;)Z
       4: ifeq          133
       7: aload_2
       8: getstatic     #69                 // Field io/netty/handler/codec/http2/HpackDecoder$HeaderType.REGULAR_HEADER:Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
      11: if_acmpne     32
      14: iload_0
      15: getstatic     #57                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      18: ldc           #70                 // String Pseudo-header field \'%s\' found after regular header.
      20: iconst_1
      21: anewarray     #53                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_1
      27: aastore
      28: invokestatic  #71                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      31: athrow
      32: aload_1
      33: invokestatic  #72                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.getPseudoHeader:(Ljava/lang/CharSequence;)Lio/netty/handler/codec/http2/Http2Headers$PseudoHeaderName;
      36: astore        4
      38: aload         4
      40: ifnonnull     61
      43: iload_0
      44: getstatic     #57                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      47: ldc           #73                 // String Invalid HTTP/2 pseudo-header \'%s\' encountered.
      49: iconst_1
      50: anewarray     #53                 // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_1
      56: aastore
      57: invokestatic  #71                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
      60: athrow
      61: aload         4
      63: invokevirtual #74                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.isRequestOnly:()Z
      66: ifeq          75
      69: getstatic     #75                 // Field io/netty/handler/codec/http2/HpackDecoder$HeaderType.REQUEST_PSEUDO_HEADER:Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
      72: goto          78
      75: getstatic     #76                 // Field io/netty/handler/codec/http2/HpackDecoder$HeaderType.RESPONSE_PSEUDO_HEADER:Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
      78: astore        5
      80: aload_2
      81: ifnull        104
      84: aload         5
      86: aload_2
      87: if_acmpeq     104
      90: iload_0
      91: getstatic     #57                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      94: ldc           #77                 // String Mix of request and response pseudo-headers.
      96: iconst_0
      97: anewarray     #53                 // class java/lang/Object
     100: invokestatic  #71                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     103: athrow
     104: aload_3
     105: aload_1
     106: invokestatic  #78                 // Method contains:(Lio/netty/handler/codec/http2/Http2Headers;Ljava/lang/CharSequence;)Z
     109: ifeq          130
     112: iload_0
     113: getstatic     #57                 // Field io/netty/handler/codec/http2/Http2Error.PROTOCOL_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     116: ldc           #79                 // String Duplicate HTTP/2 pseudo-header \'%s\' encountered.
     118: iconst_1
     119: anewarray     #53                 // class java/lang/Object
     122: dup
     123: iconst_0
     124: aload_1
     125: aastore
     126: invokestatic  #71                 // Method io/netty/handler/codec/http2/Http2Exception.streamError:(ILio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;[Ljava/lang/Object;)Lio/netty/handler/codec/http2/Http2Exception;
     129: athrow
     130: aload         5
     132: areturn
     133: getstatic     #69                 // Field io/netty/handler/codec/http2/HpackDecoder$HeaderType.REGULAR_HEADER:Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
     136: areturn

  private static boolean contains(io.netty.handler.codec.http2.Http2Headers, java.lang.CharSequence);
    Code:
       0: aload_0
       1: getstatic     #80                 // Field io/netty/handler/codec/http2/EmptyHttp2Headers.INSTANCE:Lio/netty/handler/codec/http2/EmptyHttp2Headers;
       4: if_acmpne     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: instanceof    #81                 // class io/netty/handler/codec/http2/DefaultHttp2Headers
      13: ifne          23
      16: aload_0
      17: instanceof    #82                 // class io/netty/handler/codec/http2/ReadOnlyHttp2Headers
      20: ifeq          31
      23: aload_0
      24: aload_1
      25: invokeinterface #83,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.contains:(Ljava/lang/Object;)Z
      30: ireturn
      31: getstatic     #84                 // Field io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.METHOD:Lio/netty/handler/codec/http2/Http2Headers$PseudoHeaderName;
      34: invokevirtual #85                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.value:()Lio/netty/util/AsciiString;
      37: aload_1
      38: invokevirtual #86                 // Method io/netty/util/AsciiString.equals:(Ljava/lang/Object;)Z
      41: ifeq          59
      44: aload_0
      45: invokeinterface #87,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.method:()Ljava/lang/CharSequence;
      50: ifnull        57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn
      59: getstatic     #88                 // Field io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.SCHEME:Lio/netty/handler/codec/http2/Http2Headers$PseudoHeaderName;
      62: invokevirtual #85                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.value:()Lio/netty/util/AsciiString;
      65: aload_1
      66: invokevirtual #86                 // Method io/netty/util/AsciiString.equals:(Ljava/lang/Object;)Z
      69: ifeq          87
      72: aload_0
      73: invokeinterface #89,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.scheme:()Ljava/lang/CharSequence;
      78: ifnull        85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ireturn
      87: getstatic     #90                 // Field io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.AUTHORITY:Lio/netty/handler/codec/http2/Http2Headers$PseudoHeaderName;
      90: invokevirtual #85                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.value:()Lio/netty/util/AsciiString;
      93: aload_1
      94: invokevirtual #86                 // Method io/netty/util/AsciiString.equals:(Ljava/lang/Object;)Z
      97: ifeq          115
     100: aload_0
     101: invokeinterface #91,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.authority:()Ljava/lang/CharSequence;
     106: ifnull        113
     109: iconst_1
     110: goto          114
     113: iconst_0
     114: ireturn
     115: getstatic     #92                 // Field io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.PATH:Lio/netty/handler/codec/http2/Http2Headers$PseudoHeaderName;
     118: invokevirtual #85                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.value:()Lio/netty/util/AsciiString;
     121: aload_1
     122: invokevirtual #86                 // Method io/netty/util/AsciiString.equals:(Ljava/lang/Object;)Z
     125: ifeq          143
     128: aload_0
     129: invokeinterface #93,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.path:()Ljava/lang/CharSequence;
     134: ifnull        141
     137: iconst_1
     138: goto          142
     141: iconst_0
     142: ireturn
     143: getstatic     #94                 // Field io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.STATUS:Lio/netty/handler/codec/http2/Http2Headers$PseudoHeaderName;
     146: invokevirtual #85                 // Method io/netty/handler/codec/http2/Http2Headers$PseudoHeaderName.value:()Lio/netty/util/AsciiString;
     149: aload_1
     150: invokevirtual #86                 // Method io/netty/util/AsciiString.equals:(Ljava/lang/Object;)Z
     153: ifeq          171
     156: aload_0
     157: invokeinterface #95,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2Headers.status:()Ljava/lang/CharSequence;
     162: ifnull        169
     165: iconst_1
     166: goto          170
     169: iconst_0
     170: ireturn
     171: iconst_0
     172: ireturn

  private java.lang.CharSequence readName(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: getstatic     #96                 // Field io/netty/handler/codec/http2/HpackStaticTable.length:I
       4: if_icmpgt     17
       7: iload_1
       8: invokestatic  #97                 // Method io/netty/handler/codec/http2/HpackStaticTable.getEntry:(I)Lio/netty/handler/codec/http2/HpackHeaderField;
      11: astore_2
      12: aload_2
      13: getfield      #28                 // Field io/netty/handler/codec/http2/HpackHeaderField.name:Ljava/lang/CharSequence;
      16: areturn
      17: iload_1
      18: getstatic     #96                 // Field io/netty/handler/codec/http2/HpackStaticTable.length:I
      21: isub
      22: aload_0
      23: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      26: invokevirtual #64                 // Method io/netty/handler/codec/http2/HpackDynamicTable.length:()I
      29: if_icmpgt     50
      32: aload_0
      33: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      36: iload_1
      37: getstatic     #96                 // Field io/netty/handler/codec/http2/HpackStaticTable.length:I
      40: isub
      41: invokevirtual #66                 // Method io/netty/handler/codec/http2/HpackDynamicTable.getEntry:(I)Lio/netty/handler/codec/http2/HpackHeaderField;
      44: astore_2
      45: aload_2
      46: getfield      #28                 // Field io/netty/handler/codec/http2/HpackHeaderField.name:Ljava/lang/CharSequence;
      49: areturn
      50: getstatic     #98                 // Field READ_NAME_ILLEGAL_INDEX_VALUE:Lio/netty/handler/codec/http2/Http2Exception;
      53: athrow

  private io.netty.handler.codec.http2.HpackHeaderField getIndexedHeader(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_1
       1: getstatic     #96                 // Field io/netty/handler/codec/http2/HpackStaticTable.length:I
       4: if_icmpgt     12
       7: iload_1
       8: invokestatic  #97                 // Method io/netty/handler/codec/http2/HpackStaticTable.getEntry:(I)Lio/netty/handler/codec/http2/HpackHeaderField;
      11: areturn
      12: iload_1
      13: getstatic     #96                 // Field io/netty/handler/codec/http2/HpackStaticTable.length:I
      16: isub
      17: aload_0
      18: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      21: invokevirtual #64                 // Method io/netty/handler/codec/http2/HpackDynamicTable.length:()I
      24: if_icmpgt     40
      27: aload_0
      28: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      31: iload_1
      32: getstatic     #96                 // Field io/netty/handler/codec/http2/HpackStaticTable.length:I
      35: isub
      36: invokevirtual #66                 // Method io/netty/handler/codec/http2/HpackDynamicTable.getEntry:(I)Lio/netty/handler/codec/http2/HpackHeaderField;
      39: areturn
      40: getstatic     #99                 // Field INDEX_HEADER_ILLEGAL_INDEX_VALUE:Lio/netty/handler/codec/http2/Http2Exception;
      43: athrow

  private void insertHeader(io.netty.handler.codec.http2.HpackDecoder$Sink, java.lang.CharSequence, java.lang.CharSequence, io.netty.handler.codec.http2.HpackUtil$IndexType);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #30,  3           // InterfaceMethod io/netty/handler/codec/http2/HpackDecoder$Sink.appendToHeaderList:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
       8: getstatic     #100                // Field io/netty/handler/codec/http2/HpackDecoder$1.$SwitchMap$io$netty$handler$codec$http2$HpackUtil$IndexType:[I
      11: aload         4
      13: invokevirtual #101                // Method io/netty/handler/codec/http2/HpackUtil$IndexType.ordinal:()I
      16: iaload
      17: tableswitch   { // 1 to 3
                     1: 44
                     2: 44
                     3: 47
               default: 66
          }
      44: goto          76
      47: aload_0
      48: getfield      #16                 // Field hpackDynamicTable:Lio/netty/handler/codec/http2/HpackDynamicTable;
      51: new           #102                // class io/netty/handler/codec/http2/HpackHeaderField
      54: dup
      55: aload_2
      56: aload_3
      57: invokespecial #103                // Method io/netty/handler/codec/http2/HpackHeaderField."<init>":(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)V
      60: invokevirtual #104                // Method io/netty/handler/codec/http2/HpackDynamicTable.add:(Lio/netty/handler/codec/http2/HpackHeaderField;)V
      63: goto          76
      66: new           #43                 // class java/lang/Error
      69: dup
      70: ldc           #105                // String should not reach here
      72: invokespecial #50                 // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      75: athrow
      76: return

  private java.lang.CharSequence readStringLiteral(io.netty.buffer.ByteBuf, int, boolean) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_3
       1: ifeq          14
       4: aload_0
       5: getfield      #7                  // Field huffmanDecoder:Lio/netty/handler/codec/http2/HpackHuffmanDecoder;
       8: aload_1
       9: iload_2
      10: invokevirtual #106                // Method io/netty/handler/codec/http2/HpackHuffmanDecoder.decode:(Lio/netty/buffer/ByteBuf;I)Lio/netty/util/AsciiString;
      13: areturn
      14: iload_2
      15: newarray       byte
      17: astore        4
      19: aload_1
      20: aload         4
      22: invokevirtual #107                // Method io/netty/buffer/ByteBuf.readBytes:([B)Lio/netty/buffer/ByteBuf;
      25: pop
      26: new           #108                // class io/netty/util/AsciiString
      29: dup
      30: aload         4
      32: iconst_0
      33: invokespecial #109                // Method io/netty/util/AsciiString."<init>":([BZ)V
      36: areturn

  private static java.lang.IllegalArgumentException notEnoughDataException(io.netty.buffer.ByteBuf);
    Code:
       0: new           #110                // class java/lang/IllegalArgumentException
       3: dup
       4: new           #44                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #111                // String decode only works with an entire header block!
      13: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #113                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: areturn

  static int decodeULE128(io.netty.buffer.ByteBuf, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokevirtual #114                // Method io/netty/buffer/ByteBuf.readerIndex:()I
       4: istore_2
       5: aload_0
       6: iload_1
       7: i2l
       8: invokestatic  #36                 // Method decodeULE128:(Lio/netty/buffer/ByteBuf;J)J
      11: lstore_3
      12: lload_3
      13: ldc2_w        #116                // long 2147483647l
      16: lcmp
      17: ifle          30
      20: aload_0
      21: iload_2
      22: invokevirtual #118                // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
      25: pop
      26: getstatic     #119                // Field DECODE_ULE_128_TO_INT_DECOMPRESSION_EXCEPTION:Lio/netty/handler/codec/http2/Http2Exception;
      29: athrow
      30: lload_3
      31: l2i
      32: ireturn

  static long decodeULE128(io.netty.buffer.ByteBuf, long) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: getstatic     #120                // Field $assertionsDisabled:Z
       3: ifne          28
       6: lload_1
       7: ldc2_w        #121                // long 127l
      10: lcmp
      11: ifgt          20
      14: lload_1
      15: lconst_0
      16: lcmp
      17: ifge          28
      20: new           #123                // class java/lang/AssertionError
      23: dup
      24: invokespecial #124                // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: lload_1
      29: lconst_0
      30: lcmp
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore_3
      40: aload_0
      41: invokevirtual #125                // Method io/netty/buffer/ByteBuf.writerIndex:()I
      44: istore        4
      46: aload_0
      47: invokevirtual #114                // Method io/netty/buffer/ByteBuf.readerIndex:()I
      50: istore        5
      52: iconst_0
      53: istore        6
      55: iload         5
      57: iload         4
      59: if_icmpge     154
      62: aload_0
      63: iload         5
      65: invokevirtual #126                // Method io/netty/buffer/ByteBuf.getByte:(I)B
      68: istore        7
      70: iload         6
      72: bipush        56
      74: if_icmpne     101
      77: iload         7
      79: sipush        128
      82: iand
      83: ifne          97
      86: iload         7
      88: bipush        127
      90: if_icmpne     101
      93: iload_3
      94: ifne          101
      97: getstatic     #127                // Field DECODE_ULE_128_TO_LONG_DECOMPRESSION_EXCEPTION:Lio/netty/handler/codec/http2/Http2Exception;
     100: athrow
     101: iload         7
     103: sipush        128
     106: iand
     107: ifne          132
     110: aload_0
     111: iload         5
     113: iconst_1
     114: iadd
     115: invokevirtual #118                // Method io/netty/buffer/ByteBuf.readerIndex:(I)Lio/netty/buffer/ByteBuf;
     118: pop
     119: lload_1
     120: iload         7
     122: i2l
     123: ldc2_w        #121                // long 127l
     126: land
     127: iload         6
     129: lshl
     130: ladd
     131: lreturn
     132: lload_1
     133: iload         7
     135: i2l
     136: ldc2_w        #121                // long 127l
     139: land
     140: iload         6
     142: lshl
     143: ladd
     144: lstore_1
     145: iinc          5, 1
     148: iinc          6, 7
     151: goto          55
     154: getstatic     #128                // Field DECODE_ULE_128_DECOMPRESSION_EXCEPTION:Lio/netty/handler/codec/http2/Http2Exception;
     157: athrow

  static io.netty.handler.codec.http2.HpackDecoder$HeaderType access$000(int, java.lang.CharSequence, io.netty.handler.codec.http2.HpackDecoder$HeaderType, io.netty.handler.codec.http2.Http2Headers) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: iload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2                  // Method validate:(ILjava/lang/CharSequence;Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;Lio/netty/handler/codec/http2/Http2Headers;)Lio/netty/handler/codec/http2/HpackDecoder$HeaderType;
       7: areturn

  static {};
    Code:
       0: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
       2: invokevirtual #129                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #120                // Field $assertionsDisabled:Z
      16: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      19: ldc           #130                // String HPACK - decompression failure
      21: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      24: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
      26: ldc           #132                // String decodeULE128(..)
      28: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
      31: putstatic     #128                // Field DECODE_ULE_128_DECOMPRESSION_EXCEPTION:Lio/netty/handler/codec/http2/Http2Exception;
      34: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      37: ldc           #134                // String HPACK - long overflow
      39: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      42: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
      44: ldc           #132                // String decodeULE128(..)
      46: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
      49: putstatic     #127                // Field DECODE_ULE_128_TO_LONG_DECOMPRESSION_EXCEPTION:Lio/netty/handler/codec/http2/Http2Exception;
      52: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      55: ldc           #135                // String HPACK - int overflow
      57: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      60: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
      62: ldc           #136                // String decodeULE128ToInt(..)
      64: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
      67: putstatic     #119                // Field DECODE_ULE_128_TO_INT_DECOMPRESSION_EXCEPTION:Lio/netty/handler/codec/http2/Http2Exception;
      70: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      73: ldc           #137                // String HPACK - illegal index value
      75: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      78: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
      80: ldc           #138                // String decode(..)
      82: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
      85: putstatic     #26                 // Field DECODE_ILLEGAL_INDEX_VALUE:Lio/netty/handler/codec/http2/Http2Exception;
      88: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
      91: ldc           #137                // String HPACK - illegal index value
      93: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
      96: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
      98: ldc           #139                // String indexHeader(..)
     100: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
     103: putstatic     #99                 // Field INDEX_HEADER_ILLEGAL_INDEX_VALUE:Lio/netty/handler/codec/http2/Http2Exception;
     106: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     109: ldc           #137                // String HPACK - illegal index value
     111: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
     114: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
     116: ldc           #140                // String readName(..)
     118: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
     121: putstatic     #98                 // Field READ_NAME_ILLEGAL_INDEX_VALUE:Lio/netty/handler/codec/http2/Http2Exception;
     124: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     127: ldc           #141                // String HPACK - invalid max dynamic table size
     129: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
     132: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
     134: ldc           #142                // String setDynamicTableSize(..)
     136: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
     139: putstatic     #67                 // Field INVALID_MAX_DYNAMIC_TABLE_SIZE:Lio/netty/handler/codec/http2/Http2Exception;
     142: getstatic     #51                 // Field io/netty/handler/codec/http2/Http2Error.COMPRESSION_ERROR:Lio/netty/handler/codec/http2/Http2Error;
     145: ldc           #143                // String HPACK - max dynamic table size change required
     147: getstatic     #131                // Field io/netty/handler/codec/http2/Http2Exception$ShutdownHint.HARD_SHUTDOWN:Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;
     150: ldc           #21                 // class io/netty/handler/codec/http2/HpackDecoder
     152: ldc           #138                // String decode(..)
     154: invokestatic  #133                // Method io/netty/handler/codec/http2/Http2Exception.newStatic:(Lio/netty/handler/codec/http2/Http2Error;Ljava/lang/String;Lio/netty/handler/codec/http2/Http2Exception$ShutdownHint;Ljava/lang/Class;Ljava/lang/String;)Lio/netty/handler/codec/http2/Http2Exception;
     157: putstatic     #25                 // Field MAX_DYNAMIC_TABLE_SIZE_CHANGE_REQUIRED:Lio/netty/handler/codec/http2/Http2Exception;
     160: return
}
