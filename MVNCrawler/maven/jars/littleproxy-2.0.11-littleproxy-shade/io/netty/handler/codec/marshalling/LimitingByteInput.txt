Compiled from "LimitingByteInput.java"
class io.netty.handler.codec.marshalling.LimitingByteInput implements org.jboss.marshalling.ByteInput {
  private static final io.netty.handler.codec.marshalling.LimitingByteInput$TooBigObjectException EXCEPTION;

  private final org.jboss.marshalling.ByteInput input;

  private final long limit;

  private long read;

  io.netty.handler.codec.marshalling.LimitingByteInput(org.jboss.marshalling.ByteInput, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field input:Lorg/jboss/marshalling/ByteInput;
       9: aload_0
      10: lload_2
      11: ldc           #3                  // String limit
      13: invokestatic  #4                  // Method io/netty/util/internal/ObjectUtil.checkPositive:(JLjava/lang/String;)J
      16: putfield      #5                  // Field limit:J
      19: return

  public void close() throws java.io.IOException;
    Code:
       0: return

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field input:Lorg/jboss/marshalling/ByteInput;
       5: invokeinterface #6,  1            // InterfaceMethod org/jboss/marshalling/ByteInput.available:()I
      10: invokespecial #7                  // Method readable:(I)I
      13: ireturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #7                  // Method readable:(I)I
       5: istore_1
       6: iload_1
       7: ifle          32
      10: aload_0
      11: getfield      #2                  // Field input:Lorg/jboss/marshalling/ByteInput;
      14: invokeinterface #8,  1            // InterfaceMethod org/jboss/marshalling/ByteInput.read:()I
      19: istore_2
      20: aload_0
      21: dup
      22: getfield      #9                  // Field read:J
      25: lconst_1
      26: ladd
      27: putfield      #9                  // Field read:J
      30: iload_2
      31: ireturn
      32: getstatic     #10                 // Field EXCEPTION:Lio/netty/handler/codec/marshalling/LimitingByteInput$TooBigObjectException;
      35: athrow

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #11                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #7                  // Method readable:(I)I
       5: istore        4
       7: iload         4
       9: ifle          42
      12: aload_0
      13: getfield      #2                  // Field input:Lorg/jboss/marshalling/ByteInput;
      16: aload_1
      17: iload_2
      18: iload         4
      20: invokeinterface #12,  4           // InterfaceMethod org/jboss/marshalling/ByteInput.read:([BII)I
      25: istore        5
      27: aload_0
      28: dup
      29: getfield      #9                  // Field read:J
      32: iload         5
      34: i2l
      35: ladd
      36: putfield      #9                  // Field read:J
      39: iload         5
      41: ireturn
      42: getstatic     #10                 // Field EXCEPTION:Lio/netty/handler/codec/marshalling/LimitingByteInput$TooBigObjectException;
      45: athrow

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload_1
       2: l2i
       3: invokespecial #7                  // Method readable:(I)I
       6: istore_3
       7: iload_3
       8: ifle          38
      11: aload_0
      12: getfield      #2                  // Field input:Lorg/jboss/marshalling/ByteInput;
      15: iload_3
      16: i2l
      17: invokeinterface #13,  3           // InterfaceMethod org/jboss/marshalling/ByteInput.skip:(J)J
      22: lstore        4
      24: aload_0
      25: dup
      26: getfield      #9                  // Field read:J
      29: lload         4
      31: ladd
      32: putfield      #9                  // Field read:J
      35: lload         4
      37: lreturn
      38: getstatic     #10                 // Field EXCEPTION:Lio/netty/handler/codec/marshalling/LimitingByteInput$TooBigObjectException;
      41: athrow

  private int readable(int);
    Code:
       0: iload_1
       1: i2l
       2: aload_0
       3: getfield      #5                  // Field limit:J
       6: aload_0
       7: getfield      #9                  // Field read:J
      10: lsub
      11: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J
      14: l2i
      15: ireturn

  static {};
    Code:
       0: new           #15                 // class io/netty/handler/codec/marshalling/LimitingByteInput$TooBigObjectException
       3: dup
       4: invokespecial #16                 // Method io/netty/handler/codec/marshalling/LimitingByteInput$TooBigObjectException."<init>":()V
       7: putstatic     #10                 // Field EXCEPTION:Lio/netty/handler/codec/marshalling/LimitingByteInput$TooBigObjectException;
      10: return
}
