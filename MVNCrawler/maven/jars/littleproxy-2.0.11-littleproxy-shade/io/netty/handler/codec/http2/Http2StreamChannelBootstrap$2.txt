Compiled from "Http2StreamChannelBootstrap.java"
class io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2 implements io.netty.channel.ChannelFutureListener {
  final io.netty.util.concurrent.Promise val$promise;

  final io.netty.handler.codec.http2.Http2StreamChannel val$streamChannel;

  final io.netty.handler.codec.http2.Http2StreamChannelBootstrap this$0;

  io.netty.handler.codec.http2.Http2StreamChannelBootstrap$2(io.netty.handler.codec.http2.Http2StreamChannelBootstrap, io.netty.util.concurrent.Promise, io.netty.handler.codec.http2.Http2StreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/Http2StreamChannelBootstrap;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$streamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void operationComplete(io.netty.channel.ChannelFuture);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
       6: ifeq          26
       9: aload_0
      10: getfield      #2                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      13: aload_0
      14: getfield      #3                  // Field val$streamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      17: invokeinterface #6,  2            // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      22: pop
      23: goto          104
      26: aload_1
      27: invokeinterface #7,  1            // InterfaceMethod io/netty/channel/ChannelFuture.isCancelled:()Z
      32: ifeq          49
      35: aload_0
      36: getfield      #2                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      39: iconst_0
      40: invokeinterface #8,  2            // InterfaceMethod io/netty/util/concurrent/Promise.cancel:(Z)Z
      45: pop
      46: goto          104
      49: aload_0
      50: getfield      #3                  // Field val$streamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      53: invokeinterface #9,  1            // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.isRegistered:()Z
      58: ifeq          74
      61: aload_0
      62: getfield      #3                  // Field val$streamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      65: invokeinterface #10,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.close:()Lio/netty/channel/ChannelFuture;
      70: pop
      71: goto          88
      74: aload_0
      75: getfield      #3                  // Field val$streamChannel:Lio/netty/handler/codec/http2/Http2StreamChannel;
      78: invokeinterface #11,  1           // InterfaceMethod io/netty/handler/codec/http2/Http2StreamChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      83: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.closeForcibly:()V
      88: aload_0
      89: getfield      #2                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      92: aload_1
      93: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      98: invokeinterface #14,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     103: pop
     104: return

  public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #15                 // class io/netty/channel/ChannelFuture
       5: invokevirtual #16                 // Method operationComplete:(Lio/netty/channel/ChannelFuture;)V
       8: return
}
