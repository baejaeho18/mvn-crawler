Compiled from "DefaultHttp2RemoteFlowController.java"
final class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor extends io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor implements io.netty.handler.codec.http2.Http2StreamVisitor {
  private final io.netty.handler.codec.http2.Http2RemoteFlowController$Listener listener;

  final io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0;

  io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$ListenerWritabilityMonitor(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController, io.netty.handler.codec.http2.Http2RemoteFlowController$Listener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       5: aload_0
       6: aload_1
       7: aconst_null
       8: invokespecial #2                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor."<init>":(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$1;)V
      11: aload_0
      12: aload_2
      13: putfield      #3                  // Field listener:Lio/netty/handler/codec/http2/Http2RemoteFlowController$Listener;
      16: return

  public boolean visit(io.netty.handler.codec.http2.Http2Stream) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       4: aload_1
       5: invokestatic  #4                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$100:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;Lio/netty/handler/codec/http2/Http2Stream;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #5                  // Method isWritable:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)Z
      14: aload_2
      15: invokevirtual #6                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:()Z
      18: if_icmpeq     26
      21: aload_0
      22: aload_2
      23: invokespecial #7                  // Method notifyWritabilityChanged:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
      26: iconst_1
      27: ireturn

  void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #8                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor.windowSize:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;I)V
       6: aload_0
       7: aload_1
       8: invokespecial #9                  // Method checkStateWritability:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
      11: goto          26
      14: astore_3
      15: new           #11                 // class java/lang/RuntimeException
      18: dup
      19: ldc           #12                 // String Caught unexpected exception from window
      21: aload_3
      22: invokespecial #13                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      25: athrow
      26: return
    Exception table:
       from    to  target type
           6    11    14   Class io/netty/handler/codec/http2/Http2Exception

  void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #14                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor.incrementWindowSize:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;I)V
       6: aload_0
       7: aload_1
       8: invokespecial #9                  // Method checkStateWritability:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
      11: return

  void initialWindowSize(int) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor.initialWindowSize:(I)V
       5: aload_0
       6: invokevirtual #16                 // Method isWritableConnection:()Z
       9: ifeq          16
      12: aload_0
      13: invokespecial #17                 // Method checkAllWritabilityChanged:()V
      16: return

  void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #18                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$WritabilityMonitor.enqueueFrame:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;Lio/netty/handler/codec/http2/Http2RemoteFlowController$FlowControlled;)V
       6: aload_0
       7: aload_1
       8: invokespecial #19                 // Method checkConnectionThenStreamWritabilityChanged:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
      11: return

  void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method checkConnectionThenStreamWritabilityChanged:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
       5: goto          20
       8: astore_2
       9: new           #11                 // class java/lang/RuntimeException
      12: dup
      13: ldc           #20                 // String Caught unexpected exception from checkAllWritabilityChanged
      15: aload_2
      16: invokespecial #13                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
      20: return
    Exception table:
       from    to  target type
           0     5     8   Class io/netty/handler/codec/http2/Http2Exception

  void channelWritabilityChange() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       4: invokestatic  #21                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
       7: invokevirtual #6                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:()Z
      10: aload_0
      11: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      14: invokestatic  #22                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1200:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Z
      17: if_icmpeq     24
      20: aload_0
      21: invokespecial #17                 // Method checkAllWritabilityChanged:()V
      24: return

  private void checkStateWritability(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method isWritable:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)Z
       5: aload_1
       6: invokevirtual #6                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:()Z
       9: if_icmpeq     35
      12: aload_1
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      17: invokestatic  #21                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
      20: if_acmpne     30
      23: aload_0
      24: invokespecial #17                 // Method checkAllWritabilityChanged:()V
      27: goto          35
      30: aload_0
      31: aload_1
      32: invokespecial #7                  // Method notifyWritabilityChanged:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
      35: return

  private void notifyWritabilityChanged(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState);
    Code:
       0: aload_1
       1: aload_1
       2: invokevirtual #6                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokevirtual #23                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:(Z)V
      16: aload_0
      17: getfield      #3                  // Field listener:Lio/netty/handler/codec/http2/Http2RemoteFlowController$Listener;
      20: aload_1
      21: invokestatic  #24                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.access$1300:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)Lio/netty/handler/codec/http2/Http2Stream;
      24: invokeinterface #25,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2RemoteFlowController$Listener.writabilityChanged:(Lio/netty/handler/codec/http2/Http2Stream;)V
      29: goto          44
      32: astore_2
      33: invokestatic  #27                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1400:()Lio/netty/util/internal/logging/InternalLogger;
      36: ldc           #28                 // String Caught Throwable from listener.writabilityChanged
      38: aload_2
      39: invokeinterface #29,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: return
    Exception table:
       from    to  target type
          16    29    32   Class java/lang/Throwable

  private void checkConnectionThenStreamWritabilityChanged(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState) throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method isWritableConnection:()Z
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       8: invokestatic  #21                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
      11: invokevirtual #6                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:()Z
      14: if_icmpeq     24
      17: aload_0
      18: invokespecial #17                 // Method checkAllWritabilityChanged:()V
      21: goto          41
      24: aload_0
      25: aload_1
      26: invokevirtual #5                  // Method isWritable:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)Z
      29: aload_1
      30: invokevirtual #6                  // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:()Z
      33: if_icmpeq     41
      36: aload_0
      37: aload_1
      38: invokespecial #7                  // Method notifyWritabilityChanged:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;)V
      41: return

  private void checkAllWritabilityChanged() throws io.netty.handler.codec.http2.Http2Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
       4: invokestatic  #21                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$800:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState;
       7: aload_0
       8: invokevirtual #16                 // Method isWritableConnection:()Z
      11: invokevirtual #23                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController$FlowState.markedWritability:(Z)V
      14: aload_0
      15: getfield      #1                  // Field this$0:Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;
      18: invokestatic  #30                 // Method io/netty/handler/codec/http2/DefaultHttp2RemoteFlowController.access$1100:(Lio/netty/handler/codec/http2/DefaultHttp2RemoteFlowController;)Lio/netty/handler/codec/http2/Http2Connection;
      21: aload_0
      22: invokeinterface #31,  2           // InterfaceMethod io/netty/handler/codec/http2/Http2Connection.forEachActiveStream:(Lio/netty/handler/codec/http2/Http2StreamVisitor;)Lio/netty/handler/codec/http2/Http2Stream;
      27: pop
      28: return
}
