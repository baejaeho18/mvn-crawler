Compiled from "ChunkedNioFile.java"
public class io.netty.handler.stream.ChunkedNioFile implements io.netty.handler.stream.ChunkedInput<io.netty.buffer.ByteBuf> {
  private final java.nio.channels.FileChannel in;

  private final long startOffset;

  private final long endOffset;

  private final int chunkSize;

  private long offset;

  public io.netty.handler.stream.ChunkedNioFile(java.io.File) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #1                  // class java/io/RandomAccessFile
       4: dup
       5: aload_1
       6: ldc           #2                  // String r
       8: invokespecial #3                  // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      11: invokevirtual #4                  // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      14: invokespecial #5                  // Method "<init>":(Ljava/nio/channels/FileChannel;)V
      17: return

  public io.netty.handler.stream.ChunkedNioFile(java.io.File, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #1                  // class java/io/RandomAccessFile
       4: dup
       5: aload_1
       6: ldc           #2                  // String r
       8: invokespecial #3                  // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      11: invokevirtual #4                  // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      14: iload_2
      15: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/FileChannel;I)V
      18: return

  public io.netty.handler.stream.ChunkedNioFile(java.nio.channels.FileChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokespecial #6                  // Method "<init>":(Ljava/nio/channels/FileChannel;I)V
       8: return

  public io.netty.handler.stream.ChunkedNioFile(java.nio.channels.FileChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: lconst_0
       3: aload_1
       4: invokevirtual #8                  // Method java/nio/channels/FileChannel.size:()J
       7: iload_2
       8: invokespecial #9                  // Method "<init>":(Ljava/nio/channels/FileChannel;JJI)V
      11: return

  public io.netty.handler.stream.ChunkedNioFile(java.nio.channels.FileChannel, long, long, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #11                 // String in
       7: invokestatic  #12                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: lload_2
      12: ldc           #13                 // String offset
      14: invokestatic  #14                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(JLjava/lang/String;)J
      17: pop2
      18: lload         4
      20: ldc           #15                 // String length
      22: invokestatic  #14                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(JLjava/lang/String;)J
      25: pop2
      26: iload         6
      28: ldc           #16                 // String chunkSize
      30: invokestatic  #17                 // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      33: pop
      34: aload_1
      35: invokevirtual #18                 // Method java/nio/channels/FileChannel.isOpen:()Z
      38: ifne          49
      41: new           #19                 // class java/nio/channels/ClosedChannelException
      44: dup
      45: invokespecial #20                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      48: athrow
      49: aload_0
      50: aload_1
      51: putfield      #21                 // Field in:Ljava/nio/channels/FileChannel;
      54: aload_0
      55: iload         6
      57: putfield      #22                 // Field chunkSize:I
      60: aload_0
      61: aload_0
      62: lload_2
      63: dup2_x1
      64: putfield      #23                 // Field startOffset:J
      67: putfield      #24                 // Field offset:J
      70: aload_0
      71: lload_2
      72: lload         4
      74: ladd
      75: putfield      #25                 // Field endOffset:J
      78: return

  public long startOffset();
    Code:
       0: aload_0
       1: getfield      #23                 // Field startOffset:J
       4: lreturn

  public long endOffset();
    Code:
       0: aload_0
       1: getfield      #25                 // Field endOffset:J
       4: lreturn

  public long currentOffset();
    Code:
       0: aload_0
       1: getfield      #24                 // Field offset:J
       4: lreturn

  public boolean isEndOfInput() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #24                 // Field offset:J
       4: aload_0
       5: getfield      #25                 // Field endOffset:J
       8: lcmp
       9: ifge          22
      12: aload_0
      13: getfield      #21                 // Field in:Ljava/nio/channels/FileChannel;
      16: invokevirtual #18                 // Method java/nio/channels/FileChannel.isOpen:()Z
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field in:Ljava/nio/channels/FileChannel;
       4: invokevirtual #26                 // Method java/nio/channels/FileChannel.close:()V
       7: return

  public io.netty.buffer.ByteBuf readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       7: invokevirtual #28                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      10: areturn

  public io.netty.buffer.ByteBuf readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #24                 // Field offset:J
       4: lstore_2
       5: lload_2
       6: aload_0
       7: getfield      #25                 // Field endOffset:J
      10: lcmp
      11: iflt          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #22                 // Field chunkSize:I
      20: i2l
      21: aload_0
      22: getfield      #25                 // Field endOffset:J
      25: lload_2
      26: lsub
      27: invokestatic  #29                 // Method java/lang/Math.min:(JJ)J
      30: l2i
      31: istore        4
      33: aload_1
      34: iload         4
      36: invokeinterface #30,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      41: astore        5
      43: iconst_1
      44: istore        6
      46: iconst_0
      47: istore        7
      49: aload         5
      51: aload_0
      52: getfield      #21                 // Field in:Ljava/nio/channels/FileChannel;
      55: lload_2
      56: iload         7
      58: i2l
      59: ladd
      60: iload         4
      62: iload         7
      64: isub
      65: invokevirtual #31                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/nio/channels/FileChannel;JI)I
      68: istore        8
      70: iload         8
      72: ifge          78
      75: goto          98
      78: iload         7
      80: iload         8
      82: iadd
      83: istore        7
      85: iload         7
      87: iload         4
      89: if_icmpne     95
      92: goto          98
      95: goto          49
      98: aload_0
      99: dup
     100: getfield      #24                 // Field offset:J
     103: iload         7
     105: i2l
     106: ladd
     107: putfield      #24                 // Field offset:J
     110: iconst_0
     111: istore        6
     113: aload         5
     115: astore        8
     117: iload         6
     119: ifeq          128
     122: aload         5
     124: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.release:()Z
     127: pop
     128: aload         8
     130: areturn
     131: astore        9
     133: iload         6
     135: ifeq          144
     138: aload         5
     140: invokevirtual #32                 // Method io/netty/buffer/ByteBuf.release:()Z
     143: pop
     144: aload         9
     146: athrow
    Exception table:
       from    to  target type
          46   117   131   any
         131   133   131   any

  public long length();
    Code:
       0: aload_0
       1: getfield      #25                 // Field endOffset:J
       4: aload_0
       5: getfield      #23                 // Field startOffset:J
       8: lsub
       9: lreturn

  public long progress();
    Code:
       0: aload_0
       1: getfield      #24                 // Field offset:J
       4: aload_0
       5: getfield      #23                 // Field startOffset:J
       8: lsub
       9: lreturn

  public java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
       5: areturn

  public java.lang.Object readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method readChunk:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/buffer/ByteBuf;
       5: areturn
}
