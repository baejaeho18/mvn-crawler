Compiled from "ChunkedStream.java"
public class io.netty.handler.stream.ChunkedStream implements io.netty.handler.stream.ChunkedInput<io.netty.buffer.ByteBuf> {
  static final int DEFAULT_CHUNK_SIZE;

  private final java.io.PushbackInputStream in;

  private final int chunkSize;

  private long offset;

  private boolean closed;

  public io.netty.handler.stream.ChunkedStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: invokespecial #2                  // Method "<init>":(Ljava/io/InputStream;I)V
       8: return

  public io.netty.handler.stream.ChunkedStream(java.io.InputStream, int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String in
       7: invokestatic  #5                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: iload_2
      12: ldc           #6                  // String chunkSize
      14: invokestatic  #7                  // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      17: pop
      18: aload_1
      19: instanceof    #8                  // class java/io/PushbackInputStream
      22: ifeq          36
      25: aload_0
      26: aload_1
      27: checkcast     #8                  // class java/io/PushbackInputStream
      30: putfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      33: goto          48
      36: aload_0
      37: new           #8                  // class java/io/PushbackInputStream
      40: dup
      41: aload_1
      42: invokespecial #10                 // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;)V
      45: putfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      48: aload_0
      49: iload_2
      50: putfield      #11                 // Field chunkSize:I
      53: return

  public long transferredBytes();
    Code:
       0: aload_0
       1: getfield      #12                 // Field offset:J
       4: lreturn

  public boolean isEndOfInput() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #13                 // Field closed:Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      13: invokevirtual #14                 // Method java/io/PushbackInputStream.available:()I
      16: ifle          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: getfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      25: invokevirtual #15                 // Method java/io/PushbackInputStream.read:()I
      28: istore_1
      29: iload_1
      30: ifge          35
      33: iconst_1
      34: ireturn
      35: aload_0
      36: getfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      39: iload_1
      40: invokevirtual #16                 // Method java/io/PushbackInputStream.unread:(I)V
      43: iconst_0
      44: ireturn

  public void close() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #13                 // Field closed:Z
       5: aload_0
       6: getfield      #9                  // Field in:Ljava/io/PushbackInputStream;
       9: invokevirtual #17                 // Method java/io/PushbackInputStream.close:()V
      12: return

  public io.netty.buffer.ByteBuf readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #18,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
       7: invokevirtual #19                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      10: areturn

  public io.netty.buffer.ByteBuf readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method isEndOfInput:()Z
       4: ifeq          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      13: invokevirtual #14                 // Method java/io/PushbackInputStream.available:()I
      16: istore_2
      17: iload_2
      18: ifgt          29
      21: aload_0
      22: getfield      #11                 // Field chunkSize:I
      25: istore_3
      26: goto          44
      29: aload_0
      30: getfield      #11                 // Field chunkSize:I
      33: aload_0
      34: getfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      37: invokevirtual #14                 // Method java/io/PushbackInputStream.available:()I
      40: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      43: istore_3
      44: iconst_1
      45: istore        4
      47: aload_1
      48: iload_3
      49: invokeinterface #22,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.buffer:(I)Lio/netty/buffer/ByteBuf;
      54: astore        5
      56: aload         5
      58: aload_0
      59: getfield      #9                  // Field in:Ljava/io/PushbackInputStream;
      62: iload_3
      63: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.writeBytes:(Ljava/io/InputStream;I)I
      66: istore        6
      68: iload         6
      70: ifge          90
      73: aconst_null
      74: astore        7
      76: iload         4
      78: ifeq          87
      81: aload         5
      83: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.release:()Z
      86: pop
      87: aload         7
      89: areturn
      90: aload_0
      91: dup
      92: getfield      #12                 // Field offset:J
      95: iload         6
      97: i2l
      98: ladd
      99: putfield      #12                 // Field offset:J
     102: iconst_0
     103: istore        4
     105: aload         5
     107: astore        7
     109: iload         4
     111: ifeq          120
     114: aload         5
     116: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.release:()Z
     119: pop
     120: aload         7
     122: areturn
     123: astore        8
     125: iload         4
     127: ifeq          136
     130: aload         5
     132: invokevirtual #24                 // Method io/netty/buffer/ByteBuf.release:()Z
     135: pop
     136: aload         8
     138: athrow
    Exception table:
       from    to  target type
          56    76   123   any
          90   109   123   any
         123   125   123   any

  public long length();
    Code:
       0: ldc2_w        #25                 // long -1l
       3: lreturn

  public long progress();
    Code:
       0: aload_0
       1: getfield      #12                 // Field offset:J
       4: lreturn

  public java.lang.Object readChunk(io.netty.buffer.ByteBufAllocator) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method readChunk:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
       5: areturn

  public java.lang.Object readChunk(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #27                 // Method readChunk:(Lio/netty/channel/ChannelHandlerContext;)Lio/netty/buffer/ByteBuf;
       5: areturn
}
