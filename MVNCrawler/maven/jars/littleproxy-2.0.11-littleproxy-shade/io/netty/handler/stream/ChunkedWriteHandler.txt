Compiled from "ChunkedWriteHandler.java"
public class io.netty.handler.stream.ChunkedWriteHandler extends io.netty.channel.ChannelDuplexHandler {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final java.util.Queue<io.netty.handler.stream.ChunkedWriteHandler$PendingWrite> queue;

  private volatile io.netty.channel.ChannelHandlerContext ctx;

  public io.netty.handler.stream.ChunkedWriteHandler();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #6                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #7                  // Field queue:Ljava/util/Queue;
      15: return

  public io.netty.handler.stream.ChunkedWriteHandler(int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method io/netty/channel/ChannelDuplexHandler."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #6                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #7                  // Field queue:Ljava/util/Queue;
      15: iload_1
      16: ldc           #8                  // String maxPendingWrites
      18: invokestatic  #9                  // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      21: pop
      22: return

  public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       5: return

  public void resumeTransfer();
    Code:
       0: aload_0
       1: getfield      #10                 // Field ctx:Lio/netty/channel/ChannelHandlerContext;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aload_1
      11: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      16: invokeinterface #12,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      21: ifeq          32
      24: aload_0
      25: aload_1
      26: invokespecial #3                  // Method resumeTransfer0:(Lio/netty/channel/ChannelHandlerContext;)V
      29: goto          52
      32: aload_1
      33: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.executor:()Lio/netty/util/concurrent/EventExecutor;
      38: new           #13                 // class io/netty/handler/stream/ChunkedWriteHandler$1
      41: dup
      42: aload_0
      43: aload_1
      44: invokespecial #14                 // Method io/netty/handler/stream/ChunkedWriteHandler$1."<init>":(Lio/netty/handler/stream/ChunkedWriteHandler;Lio/netty/channel/ChannelHandlerContext;)V
      47: invokeinterface #15,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      52: return

  private void resumeTransfer0(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method doFlush:(Lio/netty/channel/ChannelHandlerContext;)V
       5: goto          20
       8: astore_2
       9: getstatic     #18                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      12: ldc           #19                 // String Unexpected exception while sending chunks.
      14: aload_2
      15: invokeinterface #20,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      20: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Exception

  public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field queue:Ljava/util/Queue;
       4: new           #21                 // class io/netty/handler/stream/ChunkedWriteHandler$PendingWrite
       7: dup
       8: aload_2
       9: aload_3
      10: invokespecial #22                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite."<init>":(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      13: invokeinterface #23,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      18: pop
      19: return

  public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method doFlush:(Lio/netty/channel/ChannelHandlerContext;)V
       5: return

  public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method doFlush:(Lio/netty/channel/ChannelHandlerContext;)V
       5: aload_1
       6: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      11: pop
      12: return

  public void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.isWritable:()Z
      11: ifeq          19
      14: aload_0
      15: aload_1
      16: invokespecial #16                 // Method doFlush:(Lio/netty/channel/ChannelHandlerContext;)V
      19: aload_1
      20: invokeinterface #27,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
      25: pop
      26: return

  private void discard(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field queue:Ljava/util/Queue;
       4: invokeinterface #28,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #21                 // class io/netty/handler/stream/ChunkedWriteHandler$PendingWrite
      12: astore_2
      13: aload_2
      14: ifnonnull     20
      17: goto          178
      20: aload_2
      21: getfield      #29                 // Field io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.msg:Ljava/lang/Object;
      24: astore_3
      25: aload_3
      26: instanceof    #30                 // class io/netty/handler/stream/ChunkedInput
      29: ifeq          158
      32: aload_3
      33: checkcast     #30                 // class io/netty/handler/stream/ChunkedInput
      36: astore        4
      38: aload         4
      40: invokeinterface #31,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.isEndOfInput:()Z
      45: istore        5
      47: aload         4
      49: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.length:()J
      54: lstore        6
      56: aload         4
      58: invokestatic  #33                 // Method closeInput:(Lio/netty/handler/stream/ChunkedInput;)V
      61: goto          124
      64: astore        8
      66: aload         4
      68: invokestatic  #33                 // Method closeInput:(Lio/netty/handler/stream/ChunkedInput;)V
      71: aload_2
      72: aload         8
      74: invokevirtual #34                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.fail:(Ljava/lang/Throwable;)V
      77: getstatic     #18                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      80: invokeinterface #35,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      85: ifeq          121
      88: getstatic     #18                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      91: new           #36                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #30                 // class io/netty/handler/stream/ChunkedInput
     100: invokevirtual #38                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     103: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: ldc           #40                 // String  failed
     108: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: aload         8
     116: invokeinterface #20,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     121: goto          0
     124: iload         5
     126: ifne          149
     129: aload_1
     130: ifnonnull     141
     133: new           #42                 // class java/nio/channels/ClosedChannelException
     136: dup
     137: invokespecial #43                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     140: astore_1
     141: aload_2
     142: aload_1
     143: invokevirtual #34                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.fail:(Ljava/lang/Throwable;)V
     146: goto          155
     149: aload_2
     150: lload         6
     152: invokevirtual #44                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.success:(J)V
     155: goto          175
     158: aload_1
     159: ifnonnull     170
     162: new           #42                 // class java/nio/channels/ClosedChannelException
     165: dup
     166: invokespecial #43                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     169: astore_1
     170: aload_2
     171: aload_1
     172: invokevirtual #34                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.fail:(Ljava/lang/Throwable;)V
     175: goto          0
     178: return
    Exception table:
       from    to  target type
          38    61    64   Class java/lang/Exception

  private void doFlush(io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: astore_2
       7: aload_2
       8: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
      13: ifne          22
      16: aload_0
      17: aconst_null
      18: invokespecial #46                 // Method discard:(Ljava/lang/Throwable;)V
      21: return
      22: iconst_1
      23: istore_3
      24: aload_1
      25: invokeinterface #47,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.alloc:()Lio/netty/buffer/ByteBufAllocator;
      30: astore        4
      32: aload_2
      33: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.isWritable:()Z
      38: ifeq          403
      41: aload_0
      42: getfield      #7                  // Field queue:Ljava/util/Queue;
      45: invokeinterface #48,  1           // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      50: checkcast     #21                 // class io/netty/handler/stream/ChunkedWriteHandler$PendingWrite
      53: astore        5
      55: aload         5
      57: ifnonnull     63
      60: goto          403
      63: aload         5
      65: getfield      #49                 // Field io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.promise:Lio/netty/channel/ChannelPromise;
      68: invokeinterface #50,  1           // InterfaceMethod io/netty/channel/ChannelPromise.isDone:()Z
      73: ifeq          89
      76: aload_0
      77: getfield      #7                  // Field queue:Ljava/util/Queue;
      80: invokeinterface #51,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
      85: pop
      86: goto          32
      89: aload         5
      91: getfield      #29                 // Field io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.msg:Ljava/lang/Object;
      94: astore        6
      96: aload         6
      98: instanceof    #30                 // class io/netty/handler/stream/ChunkedInput
     101: ifeq          351
     104: aload         6
     106: checkcast     #30                 // class io/netty/handler/stream/ChunkedInput
     109: astore        7
     111: aconst_null
     112: astore        10
     114: aload         7
     116: aload         4
     118: invokeinterface #52,  2           // InterfaceMethod io/netty/handler/stream/ChunkedInput.readChunk:(Lio/netty/buffer/ByteBufAllocator;)Ljava/lang/Object;
     123: astore        10
     125: aload         7
     127: invokeinterface #31,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.isEndOfInput:()Z
     132: istore        8
     134: aload         10
     136: ifnonnull     154
     139: iload         8
     141: ifne          148
     144: iconst_1
     145: goto          149
     148: iconst_0
     149: istore        9
     151: goto          157
     154: iconst_0
     155: istore        9
     157: goto          198
     160: astore        11
     162: aload_0
     163: getfield      #7                  // Field queue:Ljava/util/Queue;
     166: invokeinterface #51,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
     171: pop
     172: aload         10
     174: ifnull        183
     177: aload         10
     179: invokestatic  #54                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
     182: pop
     183: aload         7
     185: invokestatic  #33                 // Method closeInput:(Lio/netty/handler/stream/ChunkedInput;)V
     188: aload         5
     190: aload         11
     192: invokevirtual #34                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.fail:(Ljava/lang/Throwable;)V
     195: goto          403
     198: iload         9
     200: ifeq          206
     203: goto          403
     206: aload         10
     208: ifnonnull     216
     211: getstatic     #55                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
     214: astore        10
     216: iload         8
     218: ifeq          231
     221: aload_0
     222: getfield      #7                  // Field queue:Ljava/util/Queue;
     225: invokeinterface #51,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
     230: pop
     231: aload_1
     232: aload         10
     234: invokeinterface #56,  2           // InterfaceMethod io/netty/channel/ChannelHandlerContext.writeAndFlush:(Ljava/lang/Object;)Lio/netty/channel/ChannelFuture;
     239: astore        11
     241: iload         8
     243: ifeq          287
     246: aload         11
     248: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     253: ifeq          266
     256: aload         11
     258: aload         5
     260: invokestatic  #2                  // Method handleEndOfInputFuture:(Lio/netty/channel/ChannelFuture;Lio/netty/handler/stream/ChunkedWriteHandler$PendingWrite;)V
     263: goto          346
     266: aload         11
     268: new           #58                 // class io/netty/handler/stream/ChunkedWriteHandler$2
     271: dup
     272: aload_0
     273: aload         5
     275: invokespecial #59                 // Method io/netty/handler/stream/ChunkedWriteHandler$2."<init>":(Lio/netty/handler/stream/ChunkedWriteHandler;Lio/netty/handler/stream/ChunkedWriteHandler$PendingWrite;)V
     278: invokeinterface #60,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     283: pop
     284: goto          346
     287: aload_2
     288: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.isWritable:()Z
     293: ifne          300
     296: iconst_1
     297: goto          301
     300: iconst_0
     301: istore        12
     303: aload         11
     305: invokeinterface #57,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
     310: ifeq          326
     313: aload_0
     314: aload         11
     316: aload         5
     318: iload         12
     320: invokespecial #1                  // Method handleFuture:(Lio/netty/channel/ChannelFuture;Lio/netty/handler/stream/ChunkedWriteHandler$PendingWrite;Z)V
     323: goto          346
     326: aload         11
     328: new           #61                 // class io/netty/handler/stream/ChunkedWriteHandler$3
     331: dup
     332: aload_0
     333: aload         5
     335: iload         12
     337: invokespecial #62                 // Method io/netty/handler/stream/ChunkedWriteHandler$3."<init>":(Lio/netty/handler/stream/ChunkedWriteHandler;Lio/netty/handler/stream/ChunkedWriteHandler$PendingWrite;Z)V
     340: invokeinterface #60,  2           // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
     345: pop
     346: iconst_0
     347: istore_3
     348: goto          377
     351: aload_0
     352: getfield      #7                  // Field queue:Ljava/util/Queue;
     355: invokeinterface #51,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
     360: pop
     361: aload_1
     362: aload         6
     364: aload         5
     366: getfield      #49                 // Field io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.promise:Lio/netty/channel/ChannelPromise;
     369: invokeinterface #63,  3           // InterfaceMethod io/netty/channel/ChannelHandlerContext.write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
     374: pop
     375: iconst_1
     376: istore_3
     377: aload_2
     378: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/Channel.isActive:()Z
     383: ifne          400
     386: aload_0
     387: new           #42                 // class java/nio/channels/ClosedChannelException
     390: dup
     391: invokespecial #43                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     394: invokespecial #46                 // Method discard:(Ljava/lang/Throwable;)V
     397: goto          403
     400: goto          32
     403: iload_3
     404: ifeq          414
     407: aload_1
     408: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelHandlerContext.flush:()Lio/netty/channel/ChannelHandlerContext;
     413: pop
     414: return
    Exception table:
       from    to  target type
         114   157   160   Class java/lang/Throwable

  private static void handleEndOfInputFuture(io.netty.channel.ChannelFuture, io.netty.handler.stream.ChunkedWriteHandler$PendingWrite);
    Code:
       0: aload_1
       1: getfield      #29                 // Field io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.msg:Ljava/lang/Object;
       4: checkcast     #30                 // class io/netty/handler/stream/ChunkedInput
       7: astore_2
       8: aload_0
       9: invokeinterface #65,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      14: ifne          34
      17: aload_2
      18: invokestatic  #33                 // Method closeInput:(Lio/netty/handler/stream/ChunkedInput;)V
      21: aload_1
      22: aload_0
      23: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      28: invokevirtual #34                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.fail:(Ljava/lang/Throwable;)V
      31: goto          66
      34: aload_2
      35: invokeinterface #67,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.progress:()J
      40: lstore_3
      41: aload_2
      42: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.length:()J
      47: lstore        5
      49: aload_2
      50: invokestatic  #33                 // Method closeInput:(Lio/netty/handler/stream/ChunkedInput;)V
      53: aload_1
      54: lload_3
      55: lload         5
      57: invokevirtual #68                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.progress:(JJ)V
      60: aload_1
      61: lload         5
      63: invokevirtual #44                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.success:(J)V
      66: return

  private void handleFuture(io.netty.channel.ChannelFuture, io.netty.handler.stream.ChunkedWriteHandler$PendingWrite, boolean);
    Code:
       0: aload_2
       1: getfield      #29                 // Field io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.msg:Ljava/lang/Object;
       4: checkcast     #30                 // class io/netty/handler/stream/ChunkedInput
       7: astore        4
       9: aload_1
      10: invokeinterface #65,  1           // InterfaceMethod io/netty/channel/ChannelFuture.isSuccess:()Z
      15: ifne          36
      18: aload         4
      20: invokestatic  #33                 // Method closeInput:(Lio/netty/handler/stream/ChunkedInput;)V
      23: aload_2
      24: aload_1
      25: invokeinterface #66,  1           // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      30: invokevirtual #34                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.fail:(Ljava/lang/Throwable;)V
      33: goto          76
      36: aload_2
      37: aload         4
      39: invokeinterface #67,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.progress:()J
      44: aload         4
      46: invokeinterface #32,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.length:()J
      51: invokevirtual #68                 // Method io/netty/handler/stream/ChunkedWriteHandler$PendingWrite.progress:(JJ)V
      54: iload_3
      55: ifeq          76
      58: aload_1
      59: invokeinterface #69,  1           // InterfaceMethod io/netty/channel/ChannelFuture.channel:()Lio/netty/channel/Channel;
      64: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/Channel.isWritable:()Z
      69: ifeq          76
      72: aload_0
      73: invokevirtual #70                 // Method resumeTransfer:()V
      76: return

  private static void closeInput(io.netty.handler.stream.ChunkedInput<?>);
    Code:
       0: aload_0
       1: invokeinterface #71,  1           // InterfaceMethod io/netty/handler/stream/ChunkedInput.close:()V
       6: goto          32
       9: astore_1
      10: getstatic     #18                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      13: invokeinterface #35,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      18: ifeq          32
      21: getstatic     #18                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc           #72                 // String Failed to close a chunked input.
      26: aload_1
      27: invokeinterface #20,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  static void access$000(io.netty.handler.stream.ChunkedWriteHandler, io.netty.channel.ChannelHandlerContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method resumeTransfer0:(Lio/netty/channel/ChannelHandlerContext;)V
       5: return

  static void access$100(io.netty.channel.ChannelFuture, io.netty.handler.stream.ChunkedWriteHandler$PendingWrite);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2                  // Method handleEndOfInputFuture:(Lio/netty/channel/ChannelFuture;Lio/netty/handler/stream/ChunkedWriteHandler$PendingWrite;)V
       5: return

  static void access$200(io.netty.handler.stream.ChunkedWriteHandler, io.netty.channel.ChannelFuture, io.netty.handler.stream.ChunkedWriteHandler$PendingWrite, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method handleFuture:(Lio/netty/channel/ChannelFuture;Lio/netty/handler/stream/ChunkedWriteHandler$PendingWrite;Z)V
       7: return

  static {};
    Code:
       0: ldc           #73                 // class io/netty/handler/stream/ChunkedWriteHandler
       2: invokestatic  #74                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #18                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
