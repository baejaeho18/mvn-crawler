Compiled from "DnsNameResolver.java"
class io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$1 extends io.netty.channel.ChannelInboundHandlerAdapter {
  final io.netty.resolver.dns.TcpDnsQueryContext val$tcpCtx;

  final io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2;

  io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$1(io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1, io.netty.resolver.dns.TcpDnsQueryContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$tcpCtx:Lio/netty/resolver/dns/TcpDnsQueryContext;
      10: aload_0
      11: invokespecial #3                  // Method io/netty/channel/ChannelInboundHandlerAdapter."<init>":()V
      14: return

  public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
       6: astore_3
       7: aload_2
       8: checkcast     #5                  // class io/netty/handler/codec/dns/DnsResponse
      11: astore        4
      13: aload         4
      15: invokeinterface #6,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsResponse.id:()I
      20: istore        5
      22: invokestatic  #7                  // Method io/netty/resolver/dns/DnsNameResolver.access$000:()Lio/netty/util/internal/logging/InternalLogger;
      25: invokeinterface #8,  1            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      30: ifeq          73
      33: invokestatic  #7                  // Method io/netty/resolver/dns/DnsNameResolver.access$000:()Lio/netty/util/internal/logging/InternalLogger;
      36: ldc           #9                  // String {} RECEIVED: TCP [{}: {}], {}
      38: iconst_4
      39: anewarray     #10                 // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_3
      45: aastore
      46: dup
      47: iconst_1
      48: iload         5
      50: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: dup
      55: iconst_2
      56: aload_3
      57: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      62: aastore
      63: dup
      64: iconst_3
      65: aload         4
      67: aastore
      68: invokeinterface #13,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      73: aload_0
      74: getfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
      77: getfield      #14                 // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1.this$1:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler;
      80: getfield      #15                 // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler.this$0:Lio/netty/resolver/dns/DnsNameResolver;
      83: getfield      #16                 // Field io/netty/resolver/dns/DnsNameResolver.queryContextManager:Lio/netty/resolver/dns/DnsQueryContextManager;
      86: aload_0
      87: getfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
      90: getfield      #17                 // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1.val$res:Lio/netty/handler/codec/dns/DatagramDnsResponse;
      93: invokevirtual #18                 // Method io/netty/handler/codec/dns/DatagramDnsResponse.sender:()Ljava/net/InetSocketAddress;
      96: iload         5
      98: invokevirtual #19                 // Method io/netty/resolver/dns/DnsQueryContextManager.get:(Ljava/net/InetSocketAddress;I)Lio/netty/resolver/dns/DnsQueryContext;
     101: astore        6
     103: aload         6
     105: aload_0
     106: getfield      #2                  // Field val$tcpCtx:Lio/netty/resolver/dns/TcpDnsQueryContext;
     109: if_acmpne     159
     112: aload_0
     113: getfield      #2                  // Field val$tcpCtx:Lio/netty/resolver/dns/TcpDnsQueryContext;
     116: new           #20                 // class io/netty/resolver/dns/DnsNameResolver$AddressedEnvelopeAdapter
     119: dup
     120: aload_1
     121: invokeinterface #4,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     126: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
     131: checkcast     #21                 // class java/net/InetSocketAddress
     134: aload_1
     135: invokeinterface #4,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
     140: invokeinterface #22,  1           // InterfaceMethod io/netty/channel/Channel.localAddress:()Ljava/net/SocketAddress;
     145: checkcast     #21                 // class java/net/InetSocketAddress
     148: aload         4
     150: invokespecial #23                 // Method io/netty/resolver/dns/DnsNameResolver$AddressedEnvelopeAdapter."<init>":(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Lio/netty/handler/codec/dns/DnsResponse;)V
     153: invokevirtual #24                 // Method io/netty/resolver/dns/TcpDnsQueryContext.finish:(Lio/netty/channel/AddressedEnvelope;)V
     156: goto          195
     159: aload         4
     161: invokeinterface #25,  1           // InterfaceMethod io/netty/handler/codec/dns/DnsResponse.release:()Z
     166: pop
     167: aload_0
     168: getfield      #2                  // Field val$tcpCtx:Lio/netty/resolver/dns/TcpDnsQueryContext;
     171: ldc           #26                 // String Received TCP DNS response with unexpected ID
     173: aconst_null
     174: iconst_0
     175: invokevirtual #27                 // Method io/netty/resolver/dns/TcpDnsQueryContext.tryFailure:(Ljava/lang/String;Ljava/lang/Throwable;Z)Z
     178: pop
     179: invokestatic  #7                  // Method io/netty/resolver/dns/DnsNameResolver.access$000:()Lio/netty/util/internal/logging/InternalLogger;
     182: ldc           #28                 // String Received a DNS response with an unexpected ID: TCP [{}: {}]
     184: aload_3
     185: iload         5
     187: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     190: invokeinterface #29,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     195: return

  public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$tcpCtx:Lio/netty/resolver/dns/TcpDnsQueryContext;
       4: ldc           #30                 // String TCP fallback error
       6: aload_2
       7: iconst_0
       8: invokevirtual #27                 // Method io/netty/resolver/dns/TcpDnsQueryContext.tryFailure:(Ljava/lang/String;Ljava/lang/Throwable;Z)Z
      11: ifeq          79
      14: invokestatic  #7                  // Method io/netty/resolver/dns/DnsNameResolver.access$000:()Lio/netty/util/internal/logging/InternalLogger;
      17: invokeinterface #8,  1            // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      22: ifeq          79
      25: invokestatic  #7                  // Method io/netty/resolver/dns/DnsNameResolver.access$000:()Lio/netty/util/internal/logging/InternalLogger;
      28: ldc           #31                 // String {} Error during processing response: TCP [{}: {}]
      30: iconst_4
      31: anewarray     #10                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_1
      37: invokeinterface #4,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      42: aastore
      43: dup
      44: iconst_1
      45: aload_0
      46: getfield      #1                  // Field this$2:Lio/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1;
      49: getfield      #32                 // Field io/netty/resolver/dns/DnsNameResolver$DnsResponseHandler$1.val$queryId:I
      52: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: aastore
      56: dup
      57: iconst_2
      58: aload_1
      59: invokeinterface #4,  1            // InterfaceMethod io/netty/channel/ChannelHandlerContext.channel:()Lio/netty/channel/Channel;
      64: invokeinterface #12,  1           // InterfaceMethod io/netty/channel/Channel.remoteAddress:()Ljava/net/SocketAddress;
      69: aastore
      70: dup
      71: iconst_3
      72: aload_2
      73: aastore
      74: invokeinterface #13,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      79: return
}
