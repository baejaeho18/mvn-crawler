Compiled from "InflightNameResolver.java"
final class io.netty.resolver.dns.InflightNameResolver<T> implements io.netty.resolver.NameResolver<T> {
  private final io.netty.util.concurrent.EventExecutor executor;

  private final io.netty.resolver.NameResolver<T> delegate;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.netty.util.concurrent.Promise<T>> resolvesInProgress;

  private final java.util.concurrent.ConcurrentMap<java.lang.String, io.netty.util.concurrent.Promise<java.util.List<T>>> resolveAllsInProgress;

  io.netty.resolver.dns.InflightNameResolver(io.netty.util.concurrent.EventExecutor, io.netty.resolver.NameResolver<T>, java.util.concurrent.ConcurrentMap<java.lang.String, io.netty.util.concurrent.Promise<T>>, java.util.concurrent.ConcurrentMap<java.lang.String, io.netty.util.concurrent.Promise<java.util.List<T>>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #3                  // String executor
       8: invokestatic  #4                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #5                  // class io/netty/util/concurrent/EventExecutor
      14: putfield      #6                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
      17: aload_0
      18: aload_2
      19: ldc           #7                  // String delegate
      21: invokestatic  #4                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #8                  // class io/netty/resolver/NameResolver
      27: putfield      #9                  // Field delegate:Lio/netty/resolver/NameResolver;
      30: aload_0
      31: aload_3
      32: ldc           #10                 // String resolvesInProgress
      34: invokestatic  #4                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #11                 // class java/util/concurrent/ConcurrentMap
      40: putfield      #12                 // Field resolvesInProgress:Ljava/util/concurrent/ConcurrentMap;
      43: aload_0
      44: aload         4
      46: ldc           #13                 // String resolveAllsInProgress
      48: invokestatic  #4                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      51: checkcast     #11                 // class java/util/concurrent/ConcurrentMap
      54: putfield      #14                 // Field resolveAllsInProgress:Ljava/util/concurrent/ConcurrentMap;
      57: return

  public io.netty.util.concurrent.Future<T> resolve(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #6                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
       6: invokeinterface #15,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      11: invokevirtual #16                 // Method resolve:(Ljava/lang/String;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Promise;
      14: areturn

  public io.netty.util.concurrent.Future<java.util.List<T>> resolveAll(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #6                  // Field executor:Lio/netty/util/concurrent/EventExecutor;
       6: invokeinterface #15,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.newPromise:()Lio/netty/util/concurrent/Promise;
      11: invokevirtual #17                 // Method resolveAll:(Ljava/lang/String;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Promise;
      14: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #9                  // Field delegate:Lio/netty/resolver/NameResolver;
       4: invokeinterface #18,  1           // InterfaceMethod io/netty/resolver/NameResolver.close:()V
       9: return

  public io.netty.util.concurrent.Promise<T> resolve(java.lang.String, io.netty.util.concurrent.Promise<T>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #12                 // Field resolvesInProgress:Ljava/util/concurrent/ConcurrentMap;
       5: aload_1
       6: aload_2
       7: iconst_0
       8: invokespecial #19                 // Method resolve:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/String;Lio/netty/util/concurrent/Promise;Z)Lio/netty/util/concurrent/Promise;
      11: areturn

  public io.netty.util.concurrent.Promise<java.util.List<T>> resolveAll(java.lang.String, io.netty.util.concurrent.Promise<java.util.List<T>>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #14                 // Field resolveAllsInProgress:Ljava/util/concurrent/ConcurrentMap;
       5: aload_1
       6: aload_2
       7: iconst_1
       8: invokespecial #19                 // Method resolve:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/String;Lio/netty/util/concurrent/Promise;Z)Lio/netty/util/concurrent/Promise;
      11: areturn

  private <U> io.netty.util.concurrent.Promise<U> resolve(java.util.concurrent.ConcurrentMap<java.lang.String, io.netty.util.concurrent.Promise<U>>, java.lang.String, io.netty.util.concurrent.Promise<U>, boolean);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #20,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #21                 // class io/netty/util/concurrent/Promise
      11: astore        5
      13: aload         5
      15: ifnull        57
      18: aload         5
      20: invokeinterface #22,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
      25: ifeq          37
      28: aload         5
      30: aload_3
      31: invokestatic  #1                  // Method transferResult:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/Promise;)V
      34: goto          179
      37: aload         5
      39: new           #23                 // class io/netty/resolver/dns/InflightNameResolver$1
      42: dup
      43: aload_0
      44: aload_3
      45: invokespecial #24                 // Method io/netty/resolver/dns/InflightNameResolver$1."<init>":(Lio/netty/resolver/dns/InflightNameResolver;Lio/netty/util/concurrent/Promise;)V
      48: invokeinterface #25,  2           // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
      53: pop
      54: goto          179
      57: iload         4
      59: ifeq          81
      62: aload_3
      63: astore        6
      65: aload_0
      66: getfield      #9                  // Field delegate:Lio/netty/resolver/NameResolver;
      69: aload_2
      70: aload         6
      72: invokeinterface #26,  3           // InterfaceMethod io/netty/resolver/NameResolver.resolveAll:(Ljava/lang/String;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      77: pop
      78: goto          97
      81: aload_3
      82: astore        6
      84: aload_0
      85: getfield      #9                  // Field delegate:Lio/netty/resolver/NameResolver;
      88: aload_2
      89: aload         6
      91: invokeinterface #27,  3           // InterfaceMethod io/netty/resolver/NameResolver.resolve:(Ljava/lang/String;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Future;
      96: pop
      97: aload_3
      98: invokeinterface #22,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
     103: ifeq          117
     106: aload_1
     107: aload_2
     108: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: goto          179
     117: aload_3
     118: new           #29                 // class io/netty/resolver/dns/InflightNameResolver$2
     121: dup
     122: aload_0
     123: aload_1
     124: aload_2
     125: invokespecial #30                 // Method io/netty/resolver/dns/InflightNameResolver$2."<init>":(Lio/netty/resolver/dns/InflightNameResolver;Ljava/util/concurrent/ConcurrentMap;Ljava/lang/String;)V
     128: invokeinterface #25,  2           // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     133: pop
     134: goto          179
     137: astore        7
     139: aload_3
     140: invokeinterface #22,  1           // InterfaceMethod io/netty/util/concurrent/Promise.isDone:()Z
     145: ifeq          159
     148: aload_1
     149: aload_2
     150: invokeinterface #28,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     155: pop
     156: goto          176
     159: aload_3
     160: new           #29                 // class io/netty/resolver/dns/InflightNameResolver$2
     163: dup
     164: aload_0
     165: aload_1
     166: aload_2
     167: invokespecial #30                 // Method io/netty/resolver/dns/InflightNameResolver$2."<init>":(Lio/netty/resolver/dns/InflightNameResolver;Ljava/util/concurrent/ConcurrentMap;Ljava/lang/String;)V
     170: invokeinterface #25,  2           // InterfaceMethod io/netty/util/concurrent/Promise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Promise;
     175: pop
     176: aload         7
     178: athrow
     179: aload_3
     180: areturn
    Exception table:
       from    to  target type
          57    97   137   any
         137   139   137   any

  private static <T> void transferResult(io.netty.util.concurrent.Future<T>, io.netty.util.concurrent.Promise<T>);
    Code:
       0: aload_0
       1: invokeinterface #31,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
       6: ifeq          25
       9: aload_1
      10: aload_0
      11: invokeinterface #32,  1           // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
      16: invokeinterface #33,  2           // InterfaceMethod io/netty/util/concurrent/Promise.trySuccess:(Ljava/lang/Object;)Z
      21: pop
      22: goto          38
      25: aload_1
      26: aload_0
      27: invokeinterface #34,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
      32: invokeinterface #35,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      37: pop
      38: return

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokestatic  #38                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      11: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: bipush        40
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #9                  // Field delegate:Lio/netty/resolver/NameResolver;
      23: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: bipush        41
      28: invokevirtual #40                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  public io.netty.util.concurrent.Future resolveAll(java.lang.String, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #17                 // Method resolveAll:(Ljava/lang/String;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Promise;
       6: areturn

  public io.netty.util.concurrent.Future resolve(java.lang.String, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #16                 // Method resolve:(Ljava/lang/String;Lio/netty/util/concurrent/Promise;)Lio/netty/util/concurrent/Promise;
       6: areturn

  static void access$000(io.netty.util.concurrent.Future, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method transferResult:(Lio/netty/util/concurrent/Future;Lio/netty/util/concurrent/Promise;)V
       5: return
}
