Compiled from "ShuffledDnsServerAddressStream.java"
final class io.netty.resolver.dns.ShuffledDnsServerAddressStream implements io.netty.resolver.dns.DnsServerAddressStream {
  private final java.util.List<java.net.InetSocketAddress> addresses;

  private int i;

  io.netty.resolver.dns.ShuffledDnsServerAddressStream(java.util.List<java.net.InetSocketAddress>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field addresses:Ljava/util/List;
       9: aload_0
      10: invokespecial #3                  // Method shuffle:()V
      13: return

  private io.netty.resolver.dns.ShuffledDnsServerAddressStream(java.util.List<java.net.InetSocketAddress>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field addresses:Ljava/util/List;
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field i:I
      14: return

  private void shuffle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field addresses:Ljava/util/List;
       4: invokestatic  #5                  // Method io/netty/util/internal/PlatformDependent.threadLocalRandom:()Ljava/util/Random;
       7: invokestatic  #6                  // Method java/util/Collections.shuffle:(Ljava/util/List;Ljava/util/Random;)V
      10: return

  public java.net.InetSocketAddress next();
    Code:
       0: aload_0
       1: getfield      #4                  // Field i:I
       4: istore_1
       5: aload_0
       6: getfield      #2                  // Field addresses:Ljava/util/List;
       9: iload_1
      10: invokeinterface #7,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      15: checkcast     #8                  // class java/net/InetSocketAddress
      18: astore_2
      19: iinc          1, 1
      22: iload_1
      23: aload_0
      24: getfield      #2                  // Field addresses:Ljava/util/List;
      27: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
      32: if_icmpge     43
      35: aload_0
      36: iload_1
      37: putfield      #4                  // Field i:I
      40: goto          52
      43: aload_0
      44: iconst_0
      45: putfield      #4                  // Field i:I
      48: aload_0
      49: invokespecial #3                  // Method shuffle:()V
      52: aload_2
      53: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field addresses:Ljava/util/List;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public io.netty.resolver.dns.ShuffledDnsServerAddressStream duplicate();
    Code:
       0: new           #10                 // class io/netty/resolver/dns/ShuffledDnsServerAddressStream
       3: dup
       4: aload_0
       5: getfield      #2                  // Field addresses:Ljava/util/List;
       8: aload_0
       9: getfield      #4                  // Field i:I
      12: invokespecial #11                 // Method "<init>":(Ljava/util/List;I)V
      15: areturn

  public java.lang.String toString();
    Code:
       0: ldc           #12                 // String shuffled
       2: aload_0
       3: getfield      #4                  // Field i:I
       6: aload_0
       7: getfield      #2                  // Field addresses:Ljava/util/List;
      10: invokestatic  #13                 // Method io/netty/resolver/dns/SequentialDnsServerAddressStream.toString:(Ljava/lang/String;ILjava/util/Collection;)Ljava/lang/String;
      13: areturn

  public io.netty.resolver.dns.DnsServerAddressStream duplicate();
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method duplicate:()Lio/netty/resolver/dns/ShuffledDnsServerAddressStream;
       4: areturn
}
