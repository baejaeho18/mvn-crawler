Compiled from "DnsRecordResolveContext.java"
final class io.netty.resolver.dns.DnsRecordResolveContext extends io.netty.resolver.dns.DnsResolveContext<io.netty.handler.codec.dns.DnsRecord> {
  io.netty.resolver.dns.DnsRecordResolveContext(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise<?>, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokeinterface #1,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsQuestion.name:()Ljava/lang/String;
       9: aload_3
      10: invokeinterface #2,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsQuestion.dnsClass:()I
      15: iconst_1
      16: anewarray     #3                  // class io/netty/handler/codec/dns/DnsRecordType
      19: dup
      20: iconst_0
      21: aload_3
      22: invokeinterface #4,  1            // InterfaceMethod io/netty/handler/codec/dns/DnsQuestion.type:()Lio/netty/handler/codec/dns/DnsRecordType;
      27: aastore
      28: aload         4
      30: aload         5
      32: iload         6
      34: invokespecial #5                  // Method "<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/util/concurrent/Promise;Ljava/lang/String;I[Lio/netty/handler/codec/dns/DnsRecordType;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/resolver/dns/DnsServerAddressStream;I)V
      37: return

  private io.netty.resolver.dns.DnsRecordResolveContext(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise<?>, java.lang.String, int, io.netty.handler.codec.dns.DnsRecordType[], io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: aload         7
      12: iload         8
      14: invokespecial #6                  // Method io/netty/resolver/dns/DnsResolveContext."<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/util/concurrent/Promise;Ljava/lang/String;I[Lio/netty/handler/codec/dns/DnsRecordType;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/resolver/dns/DnsServerAddressStream;I)V
      17: return

  io.netty.resolver.dns.DnsResolveContext<io.netty.handler.codec.dns.DnsRecord> newResolverContext(io.netty.resolver.dns.DnsNameResolver, io.netty.util.concurrent.Promise<?>, java.lang.String, int, io.netty.handler.codec.dns.DnsRecordType[], io.netty.handler.codec.dns.DnsRecord[], io.netty.resolver.dns.DnsServerAddressStream, int);
    Code:
       0: new           #7                  // class io/netty/resolver/dns/DnsRecordResolveContext
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: iload         8
      17: invokespecial #5                  // Method "<init>":(Lio/netty/resolver/dns/DnsNameResolver;Lio/netty/util/concurrent/Promise;Ljava/lang/String;I[Lio/netty/handler/codec/dns/DnsRecordType;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/resolver/dns/DnsServerAddressStream;I)V
      20: areturn

  io.netty.handler.codec.dns.DnsRecord convertRecord(io.netty.handler.codec.dns.DnsRecord, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: invokestatic  #8                  // Method io/netty/util/ReferenceCountUtil.retain:(Ljava/lang/Object;)Ljava/lang/Object;
       4: checkcast     #9                  // class io/netty/handler/codec/dns/DnsRecord
       7: areturn

  java.util.List<io.netty.handler.codec.dns.DnsRecord> filterResults(java.util.List<io.netty.handler.codec.dns.DnsRecord>);
    Code:
       0: aload_1
       1: areturn

  boolean isCompleteEarly(io.netty.handler.codec.dns.DnsRecord);
    Code:
       0: iconst_0
       1: ireturn

  boolean isDuplicateAllowed();
    Code:
       0: iconst_1
       1: ireturn

  void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.handler.codec.dns.DnsRecord, io.netty.handler.codec.dns.DnsRecord);
    Code:
       0: return

  void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.net.UnknownHostException);
    Code:
       0: return

  io.netty.resolver.dns.DnsCnameCache cnameCache();
    Code:
       0: getstatic     #10                 // Field io/netty/resolver/dns/NoopDnsCnameCache.INSTANCE:Lio/netty/resolver/dns/NoopDnsCnameCache;
       3: areturn

  void cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.handler.codec.dns.DnsRecord, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: checkcast     #9                  // class io/netty/handler/codec/dns/DnsRecord
       9: invokevirtual #11                 // Method cache:(Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/handler/codec/dns/DnsRecord;)V
      12: return

  boolean isCompleteEarly(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class io/netty/handler/codec/dns/DnsRecord
       5: invokevirtual #12                 // Method isCompleteEarly:(Lio/netty/handler/codec/dns/DnsRecord;)Z
       8: ireturn

  java.lang.Object convertRecord(io.netty.handler.codec.dns.DnsRecord, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.channel.EventLoop);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #13                 // Method convertRecord:(Lio/netty/handler/codec/dns/DnsRecord;Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/channel/EventLoop;)Lio/netty/handler/codec/dns/DnsRecord;
       9: areturn
}
