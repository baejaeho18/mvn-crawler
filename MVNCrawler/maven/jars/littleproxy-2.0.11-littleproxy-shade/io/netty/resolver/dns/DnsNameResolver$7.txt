Compiled from "DnsNameResolver.java"
class io.netty.resolver.dns.DnsNameResolver$7 implements java.lang.Runnable {
  final java.lang.String val$hostname;

  final io.netty.handler.codec.dns.DnsRecord[] val$additionals;

  final io.netty.util.concurrent.Promise val$originalPromise;

  final io.netty.util.concurrent.Promise val$promise;

  final io.netty.resolver.dns.DnsCache val$resolveCache;

  final boolean val$completeEarlyIfPossible;

  final io.netty.resolver.dns.DnsNameResolver this$0;

  io.netty.resolver.dns.DnsNameResolver$7(io.netty.resolver.dns.DnsNameResolver, java.lang.String, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise, io.netty.util.concurrent.Promise, io.netty.resolver.dns.DnsCache, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/resolver/dns/DnsNameResolver;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$hostname:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$additionals:[Lio/netty/handler/codec/dns/DnsRecord;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$originalPromise:Lio/netty/util/concurrent/Promise;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field val$resolveCache:Lio/netty/resolver/dns/DnsCache;
      33: aload_0
      34: iload         7
      36: putfield      #7                  // Field val$completeEarlyIfPossible:Z
      39: aload_0
      40: invokespecial #8                  // Method java/lang/Object."<init>":()V
      43: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/resolver/dns/DnsNameResolver;
       4: aload_0
       5: getfield      #2                  // Field val$hostname:Ljava/lang/String;
       8: aload_0
       9: getfield      #3                  // Field val$additionals:[Lio/netty/handler/codec/dns/DnsRecord;
      12: aload_0
      13: getfield      #4                  // Field val$originalPromise:Lio/netty/util/concurrent/Promise;
      16: aload_0
      17: getfield      #5                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      20: aload_0
      21: getfield      #6                  // Field val$resolveCache:Lio/netty/resolver/dns/DnsCache;
      24: aload_0
      25: getfield      #7                  // Field val$completeEarlyIfPossible:Z
      28: invokestatic  #9                  // Method io/netty/resolver/dns/DnsNameResolver.access$500:(Lio/netty/resolver/dns/DnsNameResolver;Ljava/lang/String;[Lio/netty/handler/codec/dns/DnsRecord;Lio/netty/util/concurrent/Promise;Lio/netty/util/concurrent/Promise;Lio/netty/resolver/dns/DnsCache;Z)V
      31: return
}
