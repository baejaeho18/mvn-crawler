Compiled from "SizeClasses.java"
abstract class io.netty.buffer.SizeClasses implements io.netty.buffer.SizeClassesMetric {
  static final int LOG2_QUANTUM;

  private static final int LOG2_SIZE_CLASS_GROUP;

  private static final int LOG2_MAX_LOOKUP_SIZE;

  private static final int INDEX_IDX;

  private static final int LOG2GROUP_IDX;

  private static final int LOG2DELTA_IDX;

  private static final int NDELTA_IDX;

  private static final int PAGESIZE_IDX;

  private static final int SUBPAGE_IDX;

  private static final int LOG2_DELTA_LOOKUP_IDX;

  private static final byte no;

  private static final byte yes;

  protected final int pageSize;

  protected final int pageShifts;

  protected final int chunkSize;

  protected final int directMemoryCacheAlignment;

  final int nSizes;

  final int nSubpages;

  final int nPSizes;

  final int lookupMaxSize;

  final int smallMaxSizeIdx;

  private final int[] pageIdx2sizeTab;

  private final int[] sizeIdx2sizeTab;

  private final int[] size2idxTab;

  static final boolean $assertionsDisabled;

  protected io.netty.buffer.SizeClasses(int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_3
       5: invokestatic  #2                  // Method io/netty/buffer/PoolThreadCache.log2:(I)I
       8: iconst_1
       9: iadd
      10: iconst_4
      11: isub
      12: istore        5
      14: iload         5
      16: iconst_2
      17: ishl
      18: bipush        7
      20: multianewarray #4,  2             // class "[[S"
      24: astore        6
      26: iconst_m1
      27: istore        7
      29: iconst_0
      30: istore        8
      32: iconst_0
      33: istore        9
      35: iconst_4
      36: istore        10
      38: iconst_4
      39: istore        11
      41: iconst_4
      42: istore        12
      44: iconst_0
      45: istore        13
      47: iload         13
      49: iload         12
      51: if_icmpge     93
      54: iload         8
      56: iload         10
      58: iload         11
      60: iload         13
      62: iload_2
      63: invokestatic  #5                  // Method newSizeClass:(IIIII)[S
      66: astore        14
      68: aload         6
      70: iload         8
      72: aload         14
      74: aastore
      75: aload         14
      77: iload         4
      79: invokestatic  #6                  // Method sizeOf:([SI)I
      82: istore        9
      84: iinc          13, 1
      87: iinc          8, 1
      90: goto          47
      93: iinc          10, 2
      96: iload         9
      98: iload_3
      99: if_icmpge     169
     102: iconst_1
     103: istore        13
     105: iload         13
     107: iload         12
     109: if_icmpgt     160
     112: iload         9
     114: iload_3
     115: if_icmpge     160
     118: iload         8
     120: iload         10
     122: iload         11
     124: iload         13
     126: iload_2
     127: invokestatic  #5                  // Method newSizeClass:(IIIII)[S
     130: astore        14
     132: aload         6
     134: iload         8
     136: aload         14
     138: aastore
     139: aload         14
     141: iload         4
     143: invokestatic  #6                  // Method sizeOf:([SI)I
     146: dup
     147: istore        7
     149: istore        9
     151: iinc          13, 1
     154: iinc          8, 1
     157: goto          105
     160: iinc          10, 1
     163: iinc          11, 1
     166: goto          96
     169: getstatic     #7                  // Field $assertionsDisabled:Z
     172: ifne          189
     175: iload_3
     176: iload         7
     178: if_icmpeq     189
     181: new           #8                  // class java/lang/AssertionError
     184: dup
     185: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
     188: athrow
     189: iconst_0
     190: istore        13
     192: iconst_0
     193: istore        14
     195: iconst_0
     196: istore        15
     198: iconst_0
     199: istore        16
     201: iconst_0
     202: istore        17
     204: iload         17
     206: iload         8
     208: if_icmpge     267
     211: aload         6
     213: iload         17
     215: aaload
     216: astore        18
     218: aload         18
     220: iconst_4
     221: saload
     222: iconst_1
     223: if_icmpne     229
     226: iinc          15, 1
     229: aload         18
     231: iconst_5
     232: saload
     233: iconst_1
     234: if_icmpne     244
     237: iinc          16, 1
     240: iload         17
     242: istore        13
     244: aload         18
     246: bipush        6
     248: saload
     249: ifeq          261
     252: aload         18
     254: iload         4
     256: invokestatic  #6                  // Method sizeOf:([SI)I
     259: istore        14
     261: iinc          17, 1
     264: goto          204
     267: aload_0
     268: iload         13
     270: putfield      #10                 // Field smallMaxSizeIdx:I
     273: aload_0
     274: iload         14
     276: putfield      #11                 // Field lookupMaxSize:I
     279: aload_0
     280: iload         15
     282: putfield      #12                 // Field nPSizes:I
     285: aload_0
     286: iload         16
     288: putfield      #13                 // Field nSubpages:I
     291: aload_0
     292: iload         8
     294: putfield      #14                 // Field nSizes:I
     297: aload_0
     298: iload_1
     299: putfield      #15                 // Field pageSize:I
     302: aload_0
     303: iload_2
     304: putfield      #16                 // Field pageShifts:I
     307: aload_0
     308: iload_3
     309: putfield      #17                 // Field chunkSize:I
     312: aload_0
     313: iload         4
     315: putfield      #18                 // Field directMemoryCacheAlignment:I
     318: aload_0
     319: aload         6
     321: iload         8
     323: iload         4
     325: invokestatic  #19                 // Method newIdx2SizeTab:([[SII)[I
     328: putfield      #20                 // Field sizeIdx2sizeTab:[I
     331: aload_0
     332: aload         6
     334: iload         8
     336: iload         15
     338: iload         4
     340: invokestatic  #21                 // Method newPageIdx2sizeTab:([[SIII)[I
     343: putfield      #22                 // Field pageIdx2sizeTab:[I
     346: aload_0
     347: iload         14
     349: aload         6
     351: invokestatic  #23                 // Method newSize2idxTab:(I[[S)[I
     354: putfield      #24                 // Field size2idxTab:[I
     357: return

  private static short[] newSizeClass(int, int, int, int, int);
    Code:
       0: iload_2
       1: iload         4
       3: if_icmplt     12
       6: iconst_1
       7: istore        5
       9: goto          46
      12: iconst_1
      13: iload         4
      15: ishl
      16: istore        6
      18: iload_1
      19: iload_3
      20: iload_2
      21: invokestatic  #25                 // Method calculateSize:(III)I
      24: istore        7
      26: iload         7
      28: iload         7
      30: iload         6
      32: idiv
      33: iload         6
      35: imul
      36: if_icmpne     43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: istore        5
      46: iload_3
      47: ifne          54
      50: iconst_0
      51: goto          58
      54: iload_3
      55: invokestatic  #2                  // Method io/netty/buffer/PoolThreadCache.log2:(I)I
      58: istore        6
      60: iconst_1
      61: iload         6
      63: ishl
      64: iload_3
      65: if_icmpge     72
      68: iconst_1
      69: goto          73
      72: iconst_0
      73: istore        7
      75: iload_2
      76: iload         6
      78: iadd
      79: iload_1
      80: if_icmpne     89
      83: iload_1
      84: iconst_1
      85: iadd
      86: goto          90
      89: iload_1
      90: istore        8
      92: iload         8
      94: iload_1
      95: if_icmpne     101
      98: iconst_1
      99: istore        7
     101: iload         8
     103: iload         4
     105: iconst_2
     106: iadd
     107: if_icmpge     114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: istore        9
     117: iload         8
     119: bipush        12
     121: if_icmplt     136
     124: iload         8
     126: bipush        12
     128: if_icmpne     140
     131: iload         7
     133: ifne          140
     136: iload_2
     137: goto          141
     140: iconst_0
     141: istore        10
     143: bipush        7
     145: newarray       short
     147: dup
     148: iconst_0
     149: iload_0
     150: i2s
     151: sastore
     152: dup
     153: iconst_1
     154: iload_1
     155: i2s
     156: sastore
     157: dup
     158: iconst_2
     159: iload_2
     160: i2s
     161: sastore
     162: dup
     163: iconst_3
     164: iload_3
     165: i2s
     166: sastore
     167: dup
     168: iconst_4
     169: iload         5
     171: sastore
     172: dup
     173: iconst_5
     174: iload         9
     176: sastore
     177: dup
     178: bipush        6
     180: iload         10
     182: i2s
     183: sastore
     184: areturn

  private static int[] newIdx2SizeTab(short[][], int, int);
    Code:
       0: iload_1
       1: newarray       int
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: iload_1
      10: if_icmpge     35
      13: aload_0
      14: iload         4
      16: aaload
      17: astore        5
      19: aload_3
      20: iload         4
      22: aload         5
      24: iload_2
      25: invokestatic  #6                  // Method sizeOf:([SI)I
      28: iastore
      29: iinc          4, 1
      32: goto          7
      35: aload_3
      36: areturn

  private static int calculateSize(int, int, int);
    Code:
       0: iconst_1
       1: iload_0
       2: ishl
       3: iload_1
       4: iload_2
       5: ishl
       6: iadd
       7: ireturn

  private static int sizeOf(short[], int);
    Code:
       0: aload_0
       1: iconst_1
       2: saload
       3: istore_2
       4: aload_0
       5: iconst_2
       6: saload
       7: istore_3
       8: aload_0
       9: iconst_3
      10: saload
      11: istore        4
      13: iload_2
      14: iload         4
      16: iload_3
      17: invokestatic  #25                 // Method calculateSize:(III)I
      20: istore        5
      22: iload         5
      24: iload_1
      25: invokestatic  #26                 // Method alignSizeIfNeeded:(II)I
      28: ireturn

  private static int[] newPageIdx2sizeTab(short[][], int, int, int);
    Code:
       0: iload_2
       1: newarray       int
       3: astore        4
       5: iconst_0
       6: istore        5
       8: iconst_0
       9: istore        6
      11: iload         6
      13: iload_1
      14: if_icmpge     51
      17: aload_0
      18: iload         6
      20: aaload
      21: astore        7
      23: aload         7
      25: iconst_4
      26: saload
      27: iconst_1
      28: if_icmpne     45
      31: aload         4
      33: iload         5
      35: iinc          5, 1
      38: aload         7
      40: iload_3
      41: invokestatic  #6                  // Method sizeOf:([SI)I
      44: iastore
      45: iinc          6, 1
      48: goto          11
      51: aload         4
      53: areturn

  private static int[] newSize2idxTab(int, short[][]);
    Code:
       0: iload_0
       1: iconst_4
       2: ishr
       3: newarray       int
       5: astore_2
       6: iconst_0
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iconst_0
      12: istore        5
      14: iload         4
      16: iload_0
      17: if_icmpgt     74
      20: aload_1
      21: iload         5
      23: aaload
      24: iconst_2
      25: saload
      26: istore        6
      28: iconst_1
      29: iload         6
      31: iconst_4
      32: isub
      33: ishl
      34: istore        7
      36: iload         4
      38: iload_0
      39: if_icmpgt     68
      42: iload         7
      44: iinc          7, -1
      47: ifle          68
      50: aload_2
      51: iload_3
      52: iinc          3, 1
      55: iload         5
      57: iastore
      58: iload_3
      59: iconst_1
      60: iadd
      61: iconst_4
      62: ishl
      63: istore        4
      65: goto          36
      68: iinc          5, 1
      71: goto          14
      74: aload_2
      75: areturn

  public int sizeIdx2size(int);
    Code:
       0: aload_0
       1: getfield      #20                 // Field sizeIdx2sizeTab:[I
       4: iload_1
       5: iaload
       6: ireturn

  public int sizeIdx2sizeCompute(int);
    Code:
       0: iload_1
       1: iconst_2
       2: ishr
       3: istore_2
       4: iload_1
       5: iconst_3
       6: iand
       7: istore_3
       8: iload_2
       9: ifne          16
      12: iconst_0
      13: goto          20
      16: bipush        32
      18: iload_2
      19: ishl
      20: istore        4
      22: iload_2
      23: ifne          30
      26: iconst_1
      27: goto          31
      30: iload_2
      31: istore        5
      33: iload         5
      35: iconst_4
      36: iadd
      37: iconst_1
      38: isub
      39: istore        6
      41: iload_3
      42: iconst_1
      43: iadd
      44: iload         6
      46: ishl
      47: istore        7
      49: iload         4
      51: iload         7
      53: iadd
      54: ireturn

  public long pageIdx2size(int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field pageIdx2sizeTab:[I
       4: iload_1
       5: iaload
       6: i2l
       7: lreturn

  public long pageIdx2sizeCompute(int);
    Code:
       0: iload_1
       1: iconst_2
       2: ishr
       3: istore_2
       4: iload_1
       5: iconst_3
       6: iand
       7: istore_3
       8: iload_2
       9: ifne          16
      12: lconst_0
      13: goto          28
      16: lconst_1
      17: aload_0
      18: getfield      #16                 // Field pageShifts:I
      21: iconst_2
      22: iadd
      23: iconst_1
      24: isub
      25: lshl
      26: iload_2
      27: lshl
      28: lstore        4
      30: iload_2
      31: ifne          38
      34: iconst_1
      35: goto          39
      38: iload_2
      39: istore        6
      41: iload         6
      43: aload_0
      44: getfield      #16                 // Field pageShifts:I
      47: iadd
      48: iconst_1
      49: isub
      50: istore        7
      52: iload_3
      53: iconst_1
      54: iadd
      55: iload         7
      57: ishl
      58: istore        8
      60: lload         4
      62: iload         8
      64: i2l
      65: ladd
      66: lreturn

  public int size2SizeIdx(int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iload_1
       7: aload_0
       8: getfield      #17                 // Field chunkSize:I
      11: if_icmple     19
      14: aload_0
      15: getfield      #14                 // Field nSizes:I
      18: ireturn
      19: iload_1
      20: aload_0
      21: getfield      #18                 // Field directMemoryCacheAlignment:I
      24: invokestatic  #26                 // Method alignSizeIfNeeded:(II)I
      27: istore_1
      28: iload_1
      29: aload_0
      30: getfield      #11                 // Field lookupMaxSize:I
      33: if_icmpgt     47
      36: aload_0
      37: getfield      #24                 // Field size2idxTab:[I
      40: iload_1
      41: iconst_1
      42: isub
      43: iconst_4
      44: ishr
      45: iaload
      46: ireturn
      47: iload_1
      48: iconst_1
      49: ishl
      50: iconst_1
      51: isub
      52: invokestatic  #2                  // Method io/netty/buffer/PoolThreadCache.log2:(I)I
      55: istore_2
      56: iload_2
      57: bipush        7
      59: if_icmpge     66
      62: iconst_0
      63: goto          70
      66: iload_2
      67: bipush        6
      69: isub
      70: istore_3
      71: iload_3
      72: iconst_2
      73: ishl
      74: istore        4
      76: iload_2
      77: bipush        7
      79: if_icmpge     86
      82: iconst_4
      83: goto          91
      86: iload_2
      87: iconst_2
      88: isub
      89: iconst_1
      90: isub
      91: istore        5
      93: iconst_m1
      94: iload         5
      96: ishl
      97: istore        6
      99: iload_1
     100: iconst_1
     101: isub
     102: iload         6
     104: iand
     105: iload         5
     107: ishr
     108: iconst_3
     109: iand
     110: istore        7
     112: iload         4
     114: iload         7
     116: iadd
     117: ireturn

  public int pages2pageIdx(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #27                 // Method pages2pageIdxCompute:(IZ)I
       6: ireturn

  public int pages2pageIdxFloor(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokespecial #27                 // Method pages2pageIdxCompute:(IZ)I
       6: ireturn

  private int pages2pageIdxCompute(int, boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #16                 // Field pageShifts:I
       5: ishl
       6: istore_3
       7: iload_3
       8: aload_0
       9: getfield      #17                 // Field chunkSize:I
      12: if_icmple     20
      15: aload_0
      16: getfield      #12                 // Field nPSizes:I
      19: ireturn
      20: iload_3
      21: iconst_1
      22: ishl
      23: iconst_1
      24: isub
      25: invokestatic  #2                  // Method io/netty/buffer/PoolThreadCache.log2:(I)I
      28: istore        4
      30: iload         4
      32: iconst_2
      33: aload_0
      34: getfield      #16                 // Field pageShifts:I
      37: iadd
      38: if_icmpge     45
      41: iconst_0
      42: goto          54
      45: iload         4
      47: iconst_2
      48: aload_0
      49: getfield      #16                 // Field pageShifts:I
      52: iadd
      53: isub
      54: istore        5
      56: iload         5
      58: iconst_2
      59: ishl
      60: istore        6
      62: iload         4
      64: iconst_2
      65: aload_0
      66: getfield      #16                 // Field pageShifts:I
      69: iadd
      70: iconst_1
      71: iadd
      72: if_icmpge     82
      75: aload_0
      76: getfield      #16                 // Field pageShifts:I
      79: goto          88
      82: iload         4
      84: iconst_2
      85: isub
      86: iconst_1
      87: isub
      88: istore        7
      90: iconst_m1
      91: iload         7
      93: ishl
      94: istore        8
      96: iload_3
      97: iconst_1
      98: isub
      99: iload         8
     101: iand
     102: iload         7
     104: ishr
     105: iconst_3
     106: iand
     107: istore        9
     109: iload         6
     111: iload         9
     113: iadd
     114: istore        10
     116: iload_2
     117: ifeq          139
     120: aload_0
     121: getfield      #22                 // Field pageIdx2sizeTab:[I
     124: iload         10
     126: iaload
     127: iload_1
     128: aload_0
     129: getfield      #16                 // Field pageShifts:I
     132: ishl
     133: if_icmple     139
     136: iinc          10, -1
     139: iload         10
     141: ireturn

  private static int alignSizeIfNeeded(int, int);
    Code:
       0: iload_1
       1: ifgt          6
       4: iload_0
       5: ireturn
       6: iload_0
       7: iload_1
       8: iconst_1
       9: isub
      10: iand
      11: istore_2
      12: iload_2
      13: ifne          20
      16: iload_0
      17: goto          25
      20: iload_0
      21: iload_1
      22: iadd
      23: iload_2
      24: isub
      25: ireturn

  public int normalizeSize(int);
    Code:
       0: iload_1
       1: ifne          11
       4: aload_0
       5: getfield      #20                 // Field sizeIdx2sizeTab:[I
       8: iconst_0
       9: iaload
      10: ireturn
      11: iload_1
      12: aload_0
      13: getfield      #18                 // Field directMemoryCacheAlignment:I
      16: invokestatic  #26                 // Method alignSizeIfNeeded:(II)I
      19: istore_1
      20: iload_1
      21: aload_0
      22: getfield      #11                 // Field lookupMaxSize:I
      25: if_icmpgt     68
      28: aload_0
      29: getfield      #20                 // Field sizeIdx2sizeTab:[I
      32: aload_0
      33: getfield      #24                 // Field size2idxTab:[I
      36: iload_1
      37: iconst_1
      38: isub
      39: iconst_4
      40: ishr
      41: iaload
      42: iaload
      43: istore_2
      44: getstatic     #7                  // Field $assertionsDisabled:Z
      47: ifne          66
      50: iload_2
      51: iload_1
      52: invokestatic  #28                 // Method normalizeSizeCompute:(I)I
      55: if_icmpeq     66
      58: new           #8                  // class java/lang/AssertionError
      61: dup
      62: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      65: athrow
      66: iload_2
      67: ireturn
      68: iload_1
      69: invokestatic  #28                 // Method normalizeSizeCompute:(I)I
      72: ireturn

  private static int normalizeSizeCompute(int);
    Code:
       0: iload_0
       1: iconst_1
       2: ishl
       3: iconst_1
       4: isub
       5: invokestatic  #2                  // Method io/netty/buffer/PoolThreadCache.log2:(I)I
       8: istore_1
       9: iload_1
      10: bipush        7
      12: if_icmpge     19
      15: iconst_4
      16: goto          24
      19: iload_1
      20: iconst_2
      21: isub
      22: iconst_1
      23: isub
      24: istore_2
      25: iconst_1
      26: iload_2
      27: ishl
      28: istore_3
      29: iload_3
      30: iconst_1
      31: isub
      32: istore        4
      34: iload_0
      35: iload         4
      37: iadd
      38: iload         4
      40: iconst_m1
      41: ixor
      42: iand
      43: ireturn

  static {};
    Code:
       0: ldc           #3                  // class io/netty/buffer/SizeClasses
       2: invokevirtual #29                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #7                  // Field $assertionsDisabled:Z
      16: return
}
