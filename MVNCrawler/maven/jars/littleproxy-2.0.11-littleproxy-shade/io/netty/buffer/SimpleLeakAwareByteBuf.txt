Compiled from "SimpleLeakAwareByteBuf.java"
class io.netty.buffer.SimpleLeakAwareByteBuf extends io.netty.buffer.WrappedByteBuf {
  private final io.netty.buffer.ByteBuf trackedByteBuf;

  final io.netty.util.ResourceLeakTracker<io.netty.buffer.ByteBuf> leak;

  static final boolean $assertionsDisabled;

  io.netty.buffer.SimpleLeakAwareByteBuf(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/buffer/WrappedByteBuf."<init>":(Lio/netty/buffer/ByteBuf;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String trackedByteBuf
       9: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class io/netty/buffer/ByteBuf
      15: putfield      #5                  // Field trackedByteBuf:Lio/netty/buffer/ByteBuf;
      18: aload_0
      19: aload_3
      20: ldc           #6                  // String leak
      22: invokestatic  #3                  // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      25: checkcast     #7                  // class io/netty/util/ResourceLeakTracker
      28: putfield      #8                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      31: return

  io.netty.buffer.SimpleLeakAwareByteBuf(io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: aload_2
       4: invokespecial #9                  // Method "<init>":(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lio/netty/util/ResourceLeakTracker;)V
       7: return

  public io.netty.buffer.ByteBuf slice();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #10                 // Method io/netty/buffer/WrappedByteBuf.slice:()Lio/netty/buffer/ByteBuf;
       5: invokespecial #11                 // Method newSharedLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
       8: areturn

  public io.netty.buffer.ByteBuf retainedSlice();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #12                 // Method io/netty/buffer/WrappedByteBuf.retainedSlice:()Lio/netty/buffer/ByteBuf;
       5: invokespecial #13                 // Method unwrappedDerived:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
       8: areturn

  public io.netty.buffer.ByteBuf retainedSlice(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: iload_2
       4: invokespecial #14                 // Method io/netty/buffer/WrappedByteBuf.retainedSlice:(II)Lio/netty/buffer/ByteBuf;
       7: invokespecial #13                 // Method unwrappedDerived:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      10: areturn

  public io.netty.buffer.ByteBuf retainedDuplicate();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #15                 // Method io/netty/buffer/WrappedByteBuf.retainedDuplicate:()Lio/netty/buffer/ByteBuf;
       5: invokespecial #13                 // Method unwrappedDerived:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
       8: areturn

  public io.netty.buffer.ByteBuf readRetainedSlice(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokespecial #16                 // Method io/netty/buffer/WrappedByteBuf.readRetainedSlice:(I)Lio/netty/buffer/ByteBuf;
       6: invokespecial #13                 // Method unwrappedDerived:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
       9: areturn

  public io.netty.buffer.ByteBuf slice(int, int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: iload_2
       4: invokespecial #17                 // Method io/netty/buffer/WrappedByteBuf.slice:(II)Lio/netty/buffer/ByteBuf;
       7: invokespecial #11                 // Method newSharedLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
      10: areturn

  public io.netty.buffer.ByteBuf duplicate();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #18                 // Method io/netty/buffer/WrappedByteBuf.duplicate:()Lio/netty/buffer/ByteBuf;
       5: invokespecial #11                 // Method newSharedLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
       8: areturn

  public io.netty.buffer.ByteBuf readSlice(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokespecial #19                 // Method io/netty/buffer/WrappedByteBuf.readSlice:(I)Lio/netty/buffer/ByteBuf;
       6: invokespecial #11                 // Method newSharedLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
       9: areturn

  public io.netty.buffer.ByteBuf asReadOnly();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #20                 // Method io/netty/buffer/WrappedByteBuf.asReadOnly:()Lio/netty/buffer/ByteBuf;
       5: invokespecial #11                 // Method newSharedLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
       8: areturn

  public io.netty.buffer.ByteBuf touch();
    Code:
       0: aload_0
       1: areturn

  public io.netty.buffer.ByteBuf touch(java.lang.Object);
    Code:
       0: aload_0
       1: areturn

  public boolean release();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method io/netty/buffer/WrappedByteBuf.release:()Z
       4: ifeq          13
       7: aload_0
       8: invokespecial #22                 // Method closeLeak:()V
      11: iconst_1
      12: ireturn
      13: iconst_0
      14: ireturn

  public boolean release(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #23                 // Method io/netty/buffer/WrappedByteBuf.release:(I)Z
       5: ifeq          14
       8: aload_0
       9: invokespecial #22                 // Method closeLeak:()V
      12: iconst_1
      13: ireturn
      14: iconst_0
      15: ireturn

  private void closeLeak();
    Code:
       0: aload_0
       1: getfield      #8                  // Field leak:Lio/netty/util/ResourceLeakTracker;
       4: aload_0
       5: getfield      #5                  // Field trackedByteBuf:Lio/netty/buffer/ByteBuf;
       8: invokeinterface #24,  2           // InterfaceMethod io/netty/util/ResourceLeakTracker.close:(Ljava/lang/Object;)Z
      13: istore_1
      14: getstatic     #25                 // Field $assertionsDisabled:Z
      17: ifne          32
      20: iload_1
      21: ifne          32
      24: new           #26                 // class java/lang/AssertionError
      27: dup
      28: invokespecial #27                 // Method java/lang/AssertionError."<init>":()V
      31: athrow
      32: return

  public io.netty.buffer.ByteBuf order(java.nio.ByteOrder);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method order:()Ljava/nio/ByteOrder;
       4: aload_1
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: aload_0
      11: aload_0
      12: aload_1
      13: invokespecial #29                 // Method io/netty/buffer/WrappedByteBuf.order:(Ljava/nio/ByteOrder;)Lio/netty/buffer/ByteBuf;
      16: invokespecial #11                 // Method newSharedLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
      19: areturn

  private io.netty.buffer.ByteBuf unwrappedDerived(io.netty.buffer.ByteBuf);
    Code:
       0: aload_1
       1: invokestatic  #30                 // Method unwrapSwapped:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
       4: astore_2
       5: aload_2
       6: instanceof    #31                 // class io/netty/buffer/AbstractPooledDerivedByteBuf
       9: ifeq          41
      12: aload_2
      13: checkcast     #31                 // class io/netty/buffer/AbstractPooledDerivedByteBuf
      16: aload_0
      17: invokevirtual #32                 // Method io/netty/buffer/AbstractPooledDerivedByteBuf.parent:(Lio/netty/buffer/ByteBuf;)V
      20: getstatic     #33                 // Field io/netty/buffer/AbstractByteBuf.leakDetector:Lio/netty/util/ResourceLeakDetector;
      23: aload_1
      24: invokevirtual #34                 // Method io/netty/util/ResourceLeakDetector.track:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakTracker;
      27: astore_3
      28: aload_3
      29: ifnonnull     34
      32: aload_1
      33: areturn
      34: aload_0
      35: aload_1
      36: aload_3
      37: invokespecial #35                 // Method newLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;Lio/netty/util/ResourceLeakTracker;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
      40: areturn
      41: aload_0
      42: aload_1
      43: invokespecial #11                 // Method newSharedLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
      46: areturn

  private static io.netty.buffer.ByteBuf unwrapSwapped(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: instanceof    #36                 // class io/netty/buffer/SwappedByteBuf
       4: ifeq          21
       7: aload_0
       8: invokevirtual #37                 // Method io/netty/buffer/ByteBuf.unwrap:()Lio/netty/buffer/ByteBuf;
      11: astore_0
      12: aload_0
      13: instanceof    #36                 // class io/netty/buffer/SwappedByteBuf
      16: ifne          7
      19: aload_0
      20: areturn
      21: aload_0
      22: areturn

  private io.netty.buffer.SimpleLeakAwareByteBuf newSharedLeakAwareByteBuf(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #5                  // Field trackedByteBuf:Lio/netty/buffer/ByteBuf;
       6: aload_0
       7: getfield      #8                  // Field leak:Lio/netty/util/ResourceLeakTracker;
      10: invokevirtual #38                 // Method newLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lio/netty/util/ResourceLeakTracker;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
      13: areturn

  private io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker<io.netty.buffer.ByteBuf>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: aload_2
       4: invokevirtual #38                 // Method newLeakAwareByteBuf:(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lio/netty/util/ResourceLeakTracker;)Lio/netty/buffer/SimpleLeakAwareByteBuf;
       7: areturn

  protected io.netty.buffer.SimpleLeakAwareByteBuf newLeakAwareByteBuf(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, io.netty.util.ResourceLeakTracker<io.netty.buffer.ByteBuf>);
    Code:
       0: new           #39                 // class io/netty/buffer/SimpleLeakAwareByteBuf
       3: dup
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokespecial #9                  // Method "<init>":(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;Lio/netty/util/ResourceLeakTracker;)V
      10: areturn

  public io.netty.util.ReferenceCounted touch(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method touch:(Ljava/lang/Object;)Lio/netty/buffer/ByteBuf;
       5: areturn

  public io.netty.util.ReferenceCounted touch();
    Code:
       0: aload_0
       1: invokevirtual #41                 // Method touch:()Lio/netty/buffer/ByteBuf;
       4: areturn

  static {};
    Code:
       0: ldc           #39                 // class io/netty/buffer/SimpleLeakAwareByteBuf
       2: invokevirtual #42                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #25                 // Field $assertionsDisabled:Z
      16: return
}
