Compiled from "PoolArena.java"
abstract class io.netty.buffer.PoolArena<T> extends io.netty.buffer.SizeClasses implements io.netty.buffer.PoolArenaMetric {
  static final boolean HAS_UNSAFE;

  final io.netty.buffer.PooledByteBufAllocator parent;

  final int numSmallSubpagePools;

  final int directMemoryCacheAlignment;

  private final io.netty.buffer.PoolSubpage<T>[] smallSubpagePools;

  private final io.netty.buffer.PoolChunkList<T> q050;

  private final io.netty.buffer.PoolChunkList<T> q025;

  private final io.netty.buffer.PoolChunkList<T> q000;

  private final io.netty.buffer.PoolChunkList<T> qInit;

  private final io.netty.buffer.PoolChunkList<T> q075;

  private final io.netty.buffer.PoolChunkList<T> q100;

  private final java.util.List<io.netty.buffer.PoolChunkListMetric> chunkListMetrics;

  private long allocationsNormal;

  private final io.netty.util.internal.LongCounter allocationsSmall;

  private final io.netty.util.internal.LongCounter allocationsHuge;

  private final io.netty.util.internal.LongCounter activeBytesHuge;

  private long deallocationsSmall;

  private long deallocationsNormal;

  private final io.netty.util.internal.LongCounter deallocationsHuge;

  final java.util.concurrent.atomic.AtomicInteger numThreadCaches;

  static final boolean $assertionsDisabled;

  protected io.netty.buffer.PoolArena(io.netty.buffer.PooledByteBufAllocator, int, int, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokespecial #1                  // Method io/netty/buffer/SizeClasses."<init>":(IIII)V
      10: aload_0
      11: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      14: putfield      #3                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
      17: aload_0
      18: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      21: putfield      #4                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      24: aload_0
      25: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      28: putfield      #5                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
      31: aload_0
      32: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
      35: putfield      #6                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      38: aload_0
      39: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
      42: dup
      43: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      46: putfield      #9                  // Field numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
      49: aload_0
      50: aload_1
      51: putfield      #10                 // Field parent:Lio/netty/buffer/PooledByteBufAllocator;
      54: aload_0
      55: iload         5
      57: putfield      #11                 // Field directMemoryCacheAlignment:I
      60: aload_0
      61: aload_0
      62: getfield      #12                 // Field nSubpages:I
      65: putfield      #13                 // Field numSmallSubpagePools:I
      68: aload_0
      69: aload_0
      70: aload_0
      71: getfield      #13                 // Field numSmallSubpagePools:I
      74: invokespecial #14                 // Method newSubpagePoolArray:(I)[Lio/netty/buffer/PoolSubpage;
      77: putfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      80: iconst_0
      81: istore        6
      83: iload         6
      85: aload_0
      86: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      89: arraylength
      90: if_icmpge     110
      93: aload_0
      94: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      97: iload         6
      99: aload_0
     100: invokespecial #16                 // Method newSubpagePoolHead:()Lio/netty/buffer/PoolSubpage;
     103: aastore
     104: iinc          6, 1
     107: goto          83
     110: aload_0
     111: new           #17                 // class io/netty/buffer/PoolChunkList
     114: dup
     115: aload_0
     116: aconst_null
     117: bipush        100
     119: ldc           #19                 // int 2147483647
     121: iload         4
     123: invokespecial #20                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     126: putfield      #21                 // Field q100:Lio/netty/buffer/PoolChunkList;
     129: aload_0
     130: new           #17                 // class io/netty/buffer/PoolChunkList
     133: dup
     134: aload_0
     135: aload_0
     136: getfield      #21                 // Field q100:Lio/netty/buffer/PoolChunkList;
     139: bipush        75
     141: bipush        100
     143: iload         4
     145: invokespecial #20                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     148: putfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
     151: aload_0
     152: new           #17                 // class io/netty/buffer/PoolChunkList
     155: dup
     156: aload_0
     157: aload_0
     158: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
     161: bipush        50
     163: bipush        100
     165: iload         4
     167: invokespecial #20                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     170: putfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
     173: aload_0
     174: new           #17                 // class io/netty/buffer/PoolChunkList
     177: dup
     178: aload_0
     179: aload_0
     180: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
     183: bipush        25
     185: bipush        75
     187: iload         4
     189: invokespecial #20                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     192: putfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
     195: aload_0
     196: new           #17                 // class io/netty/buffer/PoolChunkList
     199: dup
     200: aload_0
     201: aload_0
     202: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
     205: iconst_1
     206: bipush        50
     208: iload         4
     210: invokespecial #20                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     213: putfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
     216: aload_0
     217: new           #17                 // class io/netty/buffer/PoolChunkList
     220: dup
     221: aload_0
     222: aload_0
     223: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
     226: ldc           #26                 // int -2147483648
     228: bipush        25
     230: iload         4
     232: invokespecial #20                 // Method io/netty/buffer/PoolChunkList."<init>":(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunkList;III)V
     235: putfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     238: aload_0
     239: getfield      #21                 // Field q100:Lio/netty/buffer/PoolChunkList;
     242: aload_0
     243: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
     246: invokevirtual #28                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     249: aload_0
     250: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
     253: aload_0
     254: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
     257: invokevirtual #28                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     260: aload_0
     261: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
     264: aload_0
     265: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
     268: invokevirtual #28                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     271: aload_0
     272: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
     275: aload_0
     276: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
     279: invokevirtual #28                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     282: aload_0
     283: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
     286: aconst_null
     287: invokevirtual #28                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     290: aload_0
     291: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     294: aload_0
     295: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     298: invokevirtual #28                 // Method io/netty/buffer/PoolChunkList.prevList:(Lio/netty/buffer/PoolChunkList;)V
     301: new           #29                 // class java/util/ArrayList
     304: dup
     305: bipush        6
     307: invokespecial #30                 // Method java/util/ArrayList."<init>":(I)V
     310: astore        6
     312: aload         6
     314: aload_0
     315: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     318: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     323: pop
     324: aload         6
     326: aload_0
     327: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
     330: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     335: pop
     336: aload         6
     338: aload_0
     339: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
     342: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     347: pop
     348: aload         6
     350: aload_0
     351: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
     354: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     359: pop
     360: aload         6
     362: aload_0
     363: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
     366: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     371: pop
     372: aload         6
     374: aload_0
     375: getfield      #21                 // Field q100:Lio/netty/buffer/PoolChunkList;
     378: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     383: pop
     384: aload_0
     385: aload         6
     387: invokestatic  #32                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
     390: putfield      #33                 // Field chunkListMetrics:Ljava/util/List;
     393: return

  private io.netty.buffer.PoolSubpage<T> newSubpagePoolHead();
    Code:
       0: new           #34                 // class io/netty/buffer/PoolSubpage
       3: dup
       4: invokespecial #35                 // Method io/netty/buffer/PoolSubpage."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_1
      10: putfield      #36                 // Field io/netty/buffer/PoolSubpage.prev:Lio/netty/buffer/PoolSubpage;
      13: aload_1
      14: aload_1
      15: putfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      18: aload_1
      19: areturn

  private io.netty.buffer.PoolSubpage<T>[] newSubpagePoolArray(int);
    Code:
       0: iload_1
       1: anewarray     #34                 // class io/netty/buffer/PoolSubpage
       4: areturn

  abstract boolean isDirect();

  io.netty.buffer.PooledByteBuf<T> allocate(io.netty.buffer.PoolThreadCache, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #38                 // Method newByteBuf:(I)Lio/netty/buffer/PooledByteBuf;
       5: astore        4
       7: aload_0
       8: aload_1
       9: aload         4
      11: iload_2
      12: invokespecial #39                 // Method allocate:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;I)V
      15: aload         4
      17: areturn

  private void allocate(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf<T>, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #40                 // Method size2SizeIdx:(I)I
       5: istore        4
       7: iload         4
       9: aload_0
      10: getfield      #41                 // Field smallMaxSizeIdx:I
      13: if_icmpgt     28
      16: aload_0
      17: aload_1
      18: aload_2
      19: iload_3
      20: iload         4
      22: invokespecial #42                 // Method tcacheAllocateSmall:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;II)V
      25: goto          74
      28: iload         4
      30: aload_0
      31: getfield      #43                 // Field nSizes:I
      34: if_icmpge     49
      37: aload_0
      38: aload_1
      39: aload_2
      40: iload_3
      41: iload         4
      43: invokespecial #44                 // Method tcacheAllocateNormal:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;II)V
      46: goto          74
      49: aload_0
      50: getfield      #11                 // Field directMemoryCacheAlignment:I
      53: ifle          64
      56: aload_0
      57: iload_3
      58: invokevirtual #45                 // Method normalizeSize:(I)I
      61: goto          65
      64: iload_3
      65: istore        5
      67: aload_0
      68: aload_2
      69: iload         5
      71: invokespecial #46                 // Method allocateHuge:(Lio/netty/buffer/PooledByteBuf;I)V
      74: return

  private void tcacheAllocateSmall(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf<T>, int, int);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #47                 // Method io/netty/buffer/PoolThreadCache.allocateSmall:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      17: iload         4
      19: aaload
      20: astore        5
      22: aload         5
      24: dup
      25: astore        7
      27: monitorenter
      28: aload         5
      30: getfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      33: astore        8
      35: aload         8
      37: aload         5
      39: if_acmpne     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: istore        6
      49: iload         6
      51: ifne          178
      54: getstatic     #48                 // Field $assertionsDisabled:Z
      57: ifne          136
      60: aload         8
      62: getfield      #49                 // Field io/netty/buffer/PoolSubpage.doNotDestroy:Z
      65: ifeq          82
      68: aload         8
      70: getfield      #50                 // Field io/netty/buffer/PoolSubpage.elemSize:I
      73: aload_0
      74: iload         4
      76: invokevirtual #51                 // Method sizeIdx2size:(I)I
      79: if_icmpeq     136
      82: new           #52                 // class java/lang/AssertionError
      85: dup
      86: new           #53                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #55                 // String doNotDestroy=
      95: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload         8
     100: getfield      #49                 // Field io/netty/buffer/PoolSubpage.doNotDestroy:Z
     103: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     106: ldc           #58                 // String , elemSize=
     108: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload         8
     113: getfield      #50                 // Field io/netty/buffer/PoolSubpage.elemSize:I
     116: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     119: ldc           #60                 // String , sizeIdx=
     121: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: iload         4
     126: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #62                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     135: athrow
     136: aload         8
     138: invokevirtual #63                 // Method io/netty/buffer/PoolSubpage.allocate:()J
     141: lstore        9
     143: getstatic     #48                 // Field $assertionsDisabled:Z
     146: ifne          164
     149: lload         9
     151: lconst_0
     152: lcmp
     153: ifge          164
     156: new           #52                 // class java/lang/AssertionError
     159: dup
     160: invokespecial #64                 // Method java/lang/AssertionError."<init>":()V
     163: athrow
     164: aload         8
     166: getfield      #65                 // Field io/netty/buffer/PoolSubpage.chunk:Lio/netty/buffer/PoolChunk;
     169: aload_2
     170: aconst_null
     171: lload         9
     173: iload_3
     174: aload_1
     175: invokevirtual #66                 // Method io/netty/buffer/PoolChunk.initBufWithSubpage:(Lio/netty/buffer/PooledByteBuf;Ljava/nio/ByteBuffer;JILio/netty/buffer/PoolThreadCache;)V
     178: aload         7
     180: monitorexit
     181: goto          192
     184: astore        11
     186: aload         7
     188: monitorexit
     189: aload         11
     191: athrow
     192: iload         6
     194: ifeq          225
     197: aload_0
     198: dup
     199: astore        7
     201: monitorenter
     202: aload_0
     203: aload_2
     204: iload_3
     205: iload         4
     207: aload_1
     208: invokespecial #67                 // Method allocateNormal:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)V
     211: aload         7
     213: monitorexit
     214: goto          225
     217: astore        12
     219: aload         7
     221: monitorexit
     222: aload         12
     224: athrow
     225: aload_0
     226: invokespecial #68                 // Method incSmallAllocation:()V
     229: return
    Exception table:
       from    to  target type
          28   181   184   any
         184   189   184   any
         202   214   217   any
         217   222   217   any

  private void tcacheAllocateNormal(io.netty.buffer.PoolThreadCache, io.netty.buffer.PooledByteBuf<T>, int, int);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: iload_3
       4: iload         4
       6: invokevirtual #69                 // Method io/netty/buffer/PoolThreadCache.allocateNormal:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PooledByteBuf;II)Z
       9: ifeq          13
      12: return
      13: aload_0
      14: dup
      15: astore        5
      17: monitorenter
      18: aload_0
      19: aload_2
      20: iload_3
      21: iload         4
      23: aload_1
      24: invokespecial #67                 // Method allocateNormal:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)V
      27: aload_0
      28: dup
      29: getfield      #70                 // Field allocationsNormal:J
      32: lconst_1
      33: ladd
      34: putfield      #70                 // Field allocationsNormal:J
      37: aload         5
      39: monitorexit
      40: goto          51
      43: astore        6
      45: aload         5
      47: monitorexit
      48: aload         6
      50: athrow
      51: return
    Exception table:
       from    to  target type
          18    40    43   any
          43    48    43   any

  private void allocateNormal(io.netty.buffer.PooledByteBuf<T>, int, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: aload_0
       1: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokevirtual #71                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)Z
      12: ifne          75
      15: aload_0
      16: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
      19: aload_1
      20: iload_2
      21: iload_3
      22: aload         4
      24: invokevirtual #71                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)Z
      27: ifne          75
      30: aload_0
      31: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
      34: aload_1
      35: iload_2
      36: iload_3
      37: aload         4
      39: invokevirtual #71                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)Z
      42: ifne          75
      45: aload_0
      46: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      49: aload_1
      50: iload_2
      51: iload_3
      52: aload         4
      54: invokevirtual #71                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)Z
      57: ifne          75
      60: aload_0
      61: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
      64: aload_1
      65: iload_2
      66: iload_3
      67: aload         4
      69: invokevirtual #71                 // Method io/netty/buffer/PoolChunkList.allocate:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)Z
      72: ifeq          76
      75: return
      76: aload_0
      77: aload_0
      78: getfield      #72                 // Field pageSize:I
      81: aload_0
      82: getfield      #73                 // Field nPSizes:I
      85: aload_0
      86: getfield      #74                 // Field pageShifts:I
      89: aload_0
      90: getfield      #75                 // Field chunkSize:I
      93: invokevirtual #76                 // Method newChunk:(IIII)Lio/netty/buffer/PoolChunk;
      96: astore        5
      98: aload         5
     100: aload_1
     101: iload_2
     102: iload_3
     103: aload         4
     105: invokevirtual #77                 // Method io/netty/buffer/PoolChunk.allocate:(Lio/netty/buffer/PooledByteBuf;IILio/netty/buffer/PoolThreadCache;)Z
     108: istore        6
     110: getstatic     #48                 // Field $assertionsDisabled:Z
     113: ifne          129
     116: iload         6
     118: ifne          129
     121: new           #52                 // class java/lang/AssertionError
     124: dup
     125: invokespecial #64                 // Method java/lang/AssertionError."<init>":()V
     128: athrow
     129: aload_0
     130: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
     133: aload         5
     135: invokevirtual #78                 // Method io/netty/buffer/PoolChunkList.add:(Lio/netty/buffer/PoolChunk;)V
     138: return

  private void incSmallAllocation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #79,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
       9: return

  private void allocateHuge(io.netty.buffer.PooledByteBuf<T>, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #80                 // Method newUnpooledChunk:(I)Lio/netty/buffer/PoolChunk;
       5: astore_3
       6: aload_0
       7: getfield      #5                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
      10: aload_3
      11: invokevirtual #81                 // Method io/netty/buffer/PoolChunk.chunkSize:()I
      14: i2l
      15: invokeinterface #82,  3           // InterfaceMethod io/netty/util/internal/LongCounter.add:(J)V
      20: aload_1
      21: aload_3
      22: iload_2
      23: invokevirtual #83                 // Method io/netty/buffer/PooledByteBuf.initUnpooled:(Lio/netty/buffer/PoolChunk;I)V
      26: aload_0
      27: getfield      #4                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      30: invokeinterface #79,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
      35: return

  void free(io.netty.buffer.PoolChunk<T>, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: aload_1
       1: getfield      #84                 // Field io/netty/buffer/PoolChunk.unpooled:Z
       4: ifeq          43
       7: aload_1
       8: invokevirtual #81                 // Method io/netty/buffer/PoolChunk.chunkSize:()I
      11: istore        7
      13: aload_0
      14: aload_1
      15: invokevirtual #85                 // Method destroyChunk:(Lio/netty/buffer/PoolChunk;)V
      18: aload_0
      19: getfield      #5                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
      22: iload         7
      24: ineg
      25: i2l
      26: invokeinterface #82,  3           // InterfaceMethod io/netty/util/internal/LongCounter.add:(J)V
      31: aload_0
      32: getfield      #6                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      35: invokeinterface #79,  1           // InterfaceMethod io/netty/util/internal/LongCounter.increment:()V
      40: goto          83
      43: lload_3
      44: invokestatic  #86                 // Method sizeClass:(J)Lio/netty/buffer/PoolArena$SizeClass;
      47: astore        7
      49: aload         6
      51: ifnull        71
      54: aload         6
      56: aload_0
      57: aload_1
      58: aload_2
      59: lload_3
      60: iload         5
      62: aload         7
      64: invokevirtual #87                 // Method io/netty/buffer/PoolThreadCache.add:(Lio/netty/buffer/PoolArena;Lio/netty/buffer/PoolChunk;Ljava/nio/ByteBuffer;JILio/netty/buffer/PoolArena$SizeClass;)Z
      67: ifeq          71
      70: return
      71: aload_0
      72: aload_1
      73: lload_3
      74: iload         5
      76: aload         7
      78: aload_2
      79: iconst_0
      80: invokevirtual #88                 // Method freeChunk:(Lio/netty/buffer/PoolChunk;JILio/netty/buffer/PoolArena$SizeClass;Ljava/nio/ByteBuffer;Z)V
      83: return

  private static io.netty.buffer.PoolArena$SizeClass sizeClass(long);
    Code:
       0: lload_0
       1: invokestatic  #89                 // Method io/netty/buffer/PoolChunk.isSubpage:(J)Z
       4: ifeq          13
       7: getstatic     #90                 // Field io/netty/buffer/PoolArena$SizeClass.Small:Lio/netty/buffer/PoolArena$SizeClass;
      10: goto          16
      13: getstatic     #91                 // Field io/netty/buffer/PoolArena$SizeClass.Normal:Lio/netty/buffer/PoolArena$SizeClass;
      16: areturn

  void freeChunk(io.netty.buffer.PoolChunk<T>, long, int, io.netty.buffer.PoolArena$SizeClass, java.nio.ByteBuffer, boolean);
    Code:
       0: aload_0
       1: dup
       2: astore        9
       4: monitorenter
       5: iload         7
       7: ifne          78
      10: getstatic     #92                 // Field io/netty/buffer/PoolArena$1.$SwitchMap$io$netty$buffer$PoolArena$SizeClass:[I
      13: aload         5
      15: invokevirtual #93                 // Method io/netty/buffer/PoolArena$SizeClass.ordinal:()I
      18: iaload
      19: lookupswitch  { // 2
                     1: 44
                     2: 57
               default: 70
          }
      44: aload_0
      45: dup
      46: getfield      #94                 // Field deallocationsNormal:J
      49: lconst_1
      50: ladd
      51: putfield      #94                 // Field deallocationsNormal:J
      54: goto          78
      57: aload_0
      58: dup
      59: getfield      #95                 // Field deallocationsSmall:J
      62: lconst_1
      63: ladd
      64: putfield      #95                 // Field deallocationsSmall:J
      67: goto          78
      70: new           #96                 // class java/lang/Error
      73: dup
      74: invokespecial #97                 // Method java/lang/Error."<init>":()V
      77: athrow
      78: aload_1
      79: getfield      #98                 // Field io/netty/buffer/PoolChunk.parent:Lio/netty/buffer/PoolChunkList;
      82: aload_1
      83: lload_2
      84: iload         4
      86: aload         6
      88: invokevirtual #99                 // Method io/netty/buffer/PoolChunkList.free:(Lio/netty/buffer/PoolChunk;JILjava/nio/ByteBuffer;)Z
      91: ifne          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: istore        8
     101: aload         9
     103: monitorexit
     104: goto          115
     107: astore        10
     109: aload         9
     111: monitorexit
     112: aload         10
     114: athrow
     115: iload         8
     117: ifeq          125
     120: aload_0
     121: aload_1
     122: invokevirtual #85                 // Method destroyChunk:(Lio/netty/buffer/PoolChunk;)V
     125: return
    Exception table:
       from    to  target type
           5   104   107   any
         107   112   107   any

  io.netty.buffer.PoolSubpage<T> findSubpagePoolHead(int);
    Code:
       0: aload_0
       1: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: iload_1
       5: aaload
       6: areturn

  void reallocate(io.netty.buffer.PooledByteBuf<T>, int, boolean);
    Code:
       0: getstatic     #48                 // Field $assertionsDisabled:Z
       3: ifne          26
       6: iload_2
       7: iflt          18
      10: iload_2
      11: aload_1
      12: invokevirtual #100                // Method io/netty/buffer/PooledByteBuf.maxCapacity:()I
      15: if_icmple     26
      18: new           #52                 // class java/lang/AssertionError
      21: dup
      22: invokespecial #64                 // Method java/lang/AssertionError."<init>":()V
      25: athrow
      26: aload_1
      27: getfield      #101                // Field io/netty/buffer/PooledByteBuf.length:I
      30: istore        4
      32: iload         4
      34: iload_2
      35: if_icmpne     39
      38: return
      39: aload_1
      40: getfield      #102                // Field io/netty/buffer/PooledByteBuf.chunk:Lio/netty/buffer/PoolChunk;
      43: astore        5
      45: aload_1
      46: getfield      #103                // Field io/netty/buffer/PooledByteBuf.tmpNioBuf:Ljava/nio/ByteBuffer;
      49: astore        6
      51: aload_1
      52: getfield      #104                // Field io/netty/buffer/PooledByteBuf.handle:J
      55: lstore        7
      57: aload_1
      58: getfield      #105                // Field io/netty/buffer/PooledByteBuf.memory:Ljava/lang/Object;
      61: astore        9
      63: aload_1
      64: getfield      #106                // Field io/netty/buffer/PooledByteBuf.offset:I
      67: istore        10
      69: aload_1
      70: getfield      #107                // Field io/netty/buffer/PooledByteBuf.maxLength:I
      73: istore        11
      75: aload_0
      76: aload_0
      77: getfield      #10                 // Field parent:Lio/netty/buffer/PooledByteBufAllocator;
      80: invokevirtual #108                // Method io/netty/buffer/PooledByteBufAllocator.threadCache:()Lio/netty/buffer/PoolThreadCache;
      83: aload_1
      84: iload_2
      85: invokespecial #39                 // Method allocate:(Lio/netty/buffer/PoolThreadCache;Lio/netty/buffer/PooledByteBuf;I)V
      88: iload_2
      89: iload         4
      91: if_icmple     101
      94: iload         4
      96: istore        12
      98: goto          109
     101: aload_1
     102: iload_2
     103: invokevirtual #109                // Method io/netty/buffer/PooledByteBuf.trimIndicesToCapacity:(I)V
     106: iload_2
     107: istore        12
     109: aload_0
     110: aload         9
     112: iload         10
     114: aload_1
     115: iload         12
     117: invokevirtual #110                // Method memoryCopy:(Ljava/lang/Object;ILio/netty/buffer/PooledByteBuf;I)V
     120: iload_3
     121: ifeq          140
     124: aload_0
     125: aload         5
     127: aload         6
     129: lload         7
     131: iload         11
     133: aload_1
     134: getfield      #111                // Field io/netty/buffer/PooledByteBuf.cache:Lio/netty/buffer/PoolThreadCache;
     137: invokevirtual #112                // Method free:(Lio/netty/buffer/PoolChunk;Ljava/nio/ByteBuffer;JILio/netty/buffer/PoolThreadCache;)V
     140: return

  public int numThreadCaches();
    Code:
       0: aload_0
       1: getfield      #9                  // Field numThreadCaches:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #113                // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int numTinySubpages();
    Code:
       0: iconst_0
       1: ireturn

  public int numSmallSubpages();
    Code:
       0: aload_0
       1: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: arraylength
       5: ireturn

  public int numChunkLists();
    Code:
       0: aload_0
       1: getfield      #33                 // Field chunkListMetrics:Ljava/util/List;
       4: invokeinterface #114,  1          // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public java.util.List<io.netty.buffer.PoolSubpageMetric> tinySubpages();
    Code:
       0: invokestatic  #115                // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public java.util.List<io.netty.buffer.PoolSubpageMetric> smallSubpages();
    Code:
       0: aload_0
       1: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       4: invokestatic  #116                // Method subPageMetricList:([Lio/netty/buffer/PoolSubpage;)Ljava/util/List;
       7: areturn

  public java.util.List<io.netty.buffer.PoolChunkListMetric> chunkLists();
    Code:
       0: aload_0
       1: getfield      #33                 // Field chunkListMetrics:Ljava/util/List;
       4: areturn

  private static java.util.List<io.netty.buffer.PoolSubpageMetric> subPageMetricList(io.netty.buffer.PoolSubpage<?>[]);
    Code:
       0: new           #29                 // class java/util/ArrayList
       3: dup
       4: invokespecial #117                // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: iconst_0
      14: istore        4
      16: iload         4
      18: iload_3
      19: if_icmpge     80
      22: aload_2
      23: iload         4
      25: aaload
      26: astore        5
      28: aload         5
      30: getfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      33: aload         5
      35: if_acmpne     41
      38: goto          74
      41: aload         5
      43: getfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      46: astore        6
      48: aload_1
      49: aload         6
      51: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload         6
      59: getfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      62: astore        6
      64: aload         6
      66: aload         5
      68: if_acmpne     48
      71: goto          74
      74: iinc          4, 1
      77: goto          16
      80: aload_1
      81: areturn

  public long numAllocations();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #70                 // Field allocationsNormal:J
       8: lstore_1
       9: aload_3
      10: monitorexit
      11: goto          21
      14: astore        4
      16: aload_3
      17: monitorexit
      18: aload         4
      20: athrow
      21: aload_0
      22: getfield      #3                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
      25: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      30: lload_1
      31: ladd
      32: aload_0
      33: getfield      #4                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      36: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      41: ladd
      42: lreturn
    Exception table:
       from    to  target type
           4    11    14   any
          14    18    14   any

  public long numTinyAllocations();
    Code:
       0: lconst_0
       1: lreturn

  public long numSmallAllocations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public synchronized long numNormalAllocations();
    Code:
       0: aload_0
       1: getfield      #70                 // Field allocationsNormal:J
       4: lreturn

  public long numDeallocations();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #95                 // Field deallocationsSmall:J
       8: aload_0
       9: getfield      #94                 // Field deallocationsNormal:J
      12: ladd
      13: lstore_1
      14: aload_3
      15: monitorexit
      16: goto          26
      19: astore        4
      21: aload_3
      22: monitorexit
      23: aload         4
      25: athrow
      26: lload_1
      27: aload_0
      28: getfield      #6                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      31: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      36: ladd
      37: lreturn
    Exception table:
       from    to  target type
           4    16    19   any
          19    23    19   any

  public long numTinyDeallocations();
    Code:
       0: lconst_0
       1: lreturn

  public synchronized long numSmallDeallocations();
    Code:
       0: aload_0
       1: getfield      #95                 // Field deallocationsSmall:J
       4: lreturn

  public synchronized long numNormalDeallocations();
    Code:
       0: aload_0
       1: getfield      #94                 // Field deallocationsNormal:J
       4: lreturn

  public long numHugeAllocations();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public long numHugeDeallocations();
    Code:
       0: aload_0
       1: getfield      #6                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lreturn

  public long numActiveAllocations();
    Code:
       0: aload_0
       1: getfield      #3                  // Field allocationsSmall:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: aload_0
      10: getfield      #4                  // Field allocationsHuge:Lio/netty/util/internal/LongCounter;
      13: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      18: ladd
      19: aload_0
      20: getfield      #6                  // Field deallocationsHuge:Lio/netty/util/internal/LongCounter;
      23: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
      28: lsub
      29: lstore_1
      30: aload_0
      31: dup
      32: astore_3
      33: monitorenter
      34: lload_1
      35: aload_0
      36: getfield      #70                 // Field allocationsNormal:J
      39: aload_0
      40: getfield      #95                 // Field deallocationsSmall:J
      43: aload_0
      44: getfield      #94                 // Field deallocationsNormal:J
      47: ladd
      48: lsub
      49: ladd
      50: lstore_1
      51: aload_3
      52: monitorexit
      53: goto          63
      56: astore        4
      58: aload_3
      59: monitorexit
      60: aload         4
      62: athrow
      63: lload_1
      64: lconst_0
      65: invokestatic  #119                // Method java/lang/Math.max:(JJ)J
      68: lreturn
    Exception table:
       from    to  target type
          34    53    56   any
          56    60    56   any

  public long numActiveTinyAllocations();
    Code:
       0: lconst_0
       1: lreturn

  public long numActiveSmallAllocations();
    Code:
       0: aload_0
       1: invokevirtual #120                // Method numSmallAllocations:()J
       4: aload_0
       5: invokevirtual #121                // Method numSmallDeallocations:()J
       8: lsub
       9: lconst_0
      10: invokestatic  #119                // Method java/lang/Math.max:(JJ)J
      13: lreturn

  public long numActiveNormalAllocations();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: aload_0
       5: getfield      #70                 // Field allocationsNormal:J
       8: aload_0
       9: getfield      #94                 // Field deallocationsNormal:J
      12: lsub
      13: lstore_1
      14: aload_3
      15: monitorexit
      16: goto          26
      19: astore        4
      21: aload_3
      22: monitorexit
      23: aload         4
      25: athrow
      26: lload_1
      27: lconst_0
      28: invokestatic  #119                // Method java/lang/Math.max:(JJ)J
      31: lreturn
    Exception table:
       from    to  target type
           4    16    19   any
          19    23    19   any

  public long numActiveHugeAllocations();
    Code:
       0: aload_0
       1: invokevirtual #122                // Method numHugeAllocations:()J
       4: aload_0
       5: invokevirtual #123                // Method numHugeDeallocations:()J
       8: lsub
       9: lconst_0
      10: invokestatic  #119                // Method java/lang/Math.max:(JJ)J
      13: lreturn

  public long numActiveBytes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lstore_1
      10: aload_0
      11: dup
      12: astore_3
      13: monitorenter
      14: iconst_0
      15: istore        4
      17: iload         4
      19: aload_0
      20: getfield      #33                 // Field chunkListMetrics:Ljava/util/List;
      23: invokeinterface #114,  1          // InterfaceMethod java/util/List.size:()I
      28: if_icmpge     94
      31: aload_0
      32: getfield      #33                 // Field chunkListMetrics:Ljava/util/List;
      35: iload         4
      37: invokeinterface #124,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: checkcast     #125                // class io/netty/buffer/PoolChunkListMetric
      45: invokeinterface #126,  1          // InterfaceMethod io/netty/buffer/PoolChunkListMetric.iterator:()Ljava/util/Iterator;
      50: astore        5
      52: aload         5
      54: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          88
      62: aload         5
      64: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #129                // class io/netty/buffer/PoolChunkMetric
      72: astore        6
      74: lload_1
      75: aload         6
      77: invokeinterface #130,  1          // InterfaceMethod io/netty/buffer/PoolChunkMetric.chunkSize:()I
      82: i2l
      83: ladd
      84: lstore_1
      85: goto          52
      88: iinc          4, 1
      91: goto          17
      94: aload_3
      95: monitorexit
      96: goto          106
      99: astore        7
     101: aload_3
     102: monitorexit
     103: aload         7
     105: athrow
     106: lconst_0
     107: lload_1
     108: invokestatic  #119                // Method java/lang/Math.max:(JJ)J
     111: lreturn
    Exception table:
       from    to  target type
          14    96    99   any
          99   103    99   any

  public long numPinnedBytes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field activeBytesHuge:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #118,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: lstore_1
      10: aload_0
      11: dup
      12: astore_3
      13: monitorenter
      14: iconst_0
      15: istore        4
      17: iload         4
      19: aload_0
      20: getfield      #33                 // Field chunkListMetrics:Ljava/util/List;
      23: invokeinterface #114,  1          // InterfaceMethod java/util/List.size:()I
      28: if_icmpge     95
      31: aload_0
      32: getfield      #33                 // Field chunkListMetrics:Ljava/util/List;
      35: iload         4
      37: invokeinterface #124,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: checkcast     #125                // class io/netty/buffer/PoolChunkListMetric
      45: invokeinterface #126,  1          // InterfaceMethod io/netty/buffer/PoolChunkListMetric.iterator:()Ljava/util/Iterator;
      50: astore        5
      52: aload         5
      54: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          89
      62: aload         5
      64: invokeinterface #128,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #129                // class io/netty/buffer/PoolChunkMetric
      72: astore        6
      74: lload_1
      75: aload         6
      77: checkcast     #131                // class io/netty/buffer/PoolChunk
      80: invokevirtual #132                // Method io/netty/buffer/PoolChunk.pinnedBytes:()I
      83: i2l
      84: ladd
      85: lstore_1
      86: goto          52
      89: iinc          4, 1
      92: goto          17
      95: aload_3
      96: monitorexit
      97: goto          107
     100: astore        7
     102: aload_3
     103: monitorexit
     104: aload         7
     106: athrow
     107: lconst_0
     108: lload_1
     109: invokestatic  #119                // Method java/lang/Math.max:(JJ)J
     112: lreturn
    Exception table:
       from    to  target type
          14    97   100   any
         100   104   100   any

  protected abstract io.netty.buffer.PoolChunk<T> newChunk(int, int, int, int);

  protected abstract io.netty.buffer.PoolChunk<T> newUnpooledChunk(int);

  protected abstract io.netty.buffer.PooledByteBuf<T> newByteBuf(int);

  protected abstract void memoryCopy(T, int, io.netty.buffer.PooledByteBuf<T>, int);

  protected abstract void destroyChunk(io.netty.buffer.PoolChunk<T>);

  public synchronized java.lang.String toString();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #133                // String Chunk(s) at 0~25%:
       9: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      15: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      22: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      28: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #136                // String Chunk(s) at 0~50%:
      33: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      39: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
      46: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      52: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #137                // String Chunk(s) at 25~75%:
      57: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      63: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
      70: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      73: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      76: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #138                // String Chunk(s) at 50~100%:
      81: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      87: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
      94: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     100: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: ldc           #139                // String Chunk(s) at 75~100%:
     105: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     111: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
     118: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     121: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     124: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: ldc           #140                // String Chunk(s) at 100%:
     129: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     135: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_0
     139: getfield      #21                 // Field q100:Lio/netty/buffer/PoolChunkList;
     142: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     148: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: ldc           #141                // String small subpages:
     153: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: astore_1
     157: aload_1
     158: aload_0
     159: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
     162: invokestatic  #142                // Method appendPoolSubPages:(Ljava/lang/StringBuilder;[Lio/netty/buffer/PoolSubpage;)V
     165: aload_1
     166: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
     169: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: pop
     173: aload_1
     174: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: areturn

  private static void appendPoolSubPages(java.lang.StringBuilder, io.netty.buffer.PoolSubpage<?>[]);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     75
       8: aload_1
       9: iload_2
      10: aaload
      11: astore_3
      12: aload_3
      13: getfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      16: aload_3
      17: if_acmpne     23
      20: goto          69
      23: aload_0
      24: getstatic     #134                // Field io/netty/util/internal/StringUtil.NEWLINE:Ljava/lang/String;
      27: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_2
      31: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #143                // String :
      36: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_3
      41: getfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      44: astore        4
      46: aload_0
      47: aload         4
      49: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: pop
      53: aload         4
      55: getfield      #37                 // Field io/netty/buffer/PoolSubpage.next:Lio/netty/buffer/PoolSubpage;
      58: astore        4
      60: aload         4
      62: aload_3
      63: if_acmpne     46
      66: goto          69
      69: iinc          2, 1
      72: goto          2
      75: return

  protected final void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #144                // Method java/lang/Object.finalize:()V
       4: aload_0
       5: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
       8: invokestatic  #145                // Method destroyPoolSubPages:([Lio/netty/buffer/PoolSubpage;)V
      11: aload_0
      12: bipush        6
      14: anewarray     #17                 // class io/netty/buffer/PoolChunkList
      17: dup
      18: iconst_0
      19: aload_0
      20: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      23: aastore
      24: dup
      25: iconst_1
      26: aload_0
      27: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
      30: aastore
      31: dup
      32: iconst_2
      33: aload_0
      34: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
      37: aastore
      38: dup
      39: iconst_3
      40: aload_0
      41: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
      44: aastore
      45: dup
      46: iconst_4
      47: aload_0
      48: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
      51: aastore
      52: dup
      53: iconst_5
      54: aload_0
      55: getfield      #21                 // Field q100:Lio/netty/buffer/PoolChunkList;
      58: aastore
      59: invokespecial #146                // Method destroyPoolChunkLists:([Lio/netty/buffer/PoolChunkList;)V
      62: goto          126
      65: astore_1
      66: aload_0
      67: getfield      #15                 // Field smallSubpagePools:[Lio/netty/buffer/PoolSubpage;
      70: invokestatic  #145                // Method destroyPoolSubPages:([Lio/netty/buffer/PoolSubpage;)V
      73: aload_0
      74: bipush        6
      76: anewarray     #17                 // class io/netty/buffer/PoolChunkList
      79: dup
      80: iconst_0
      81: aload_0
      82: getfield      #27                 // Field qInit:Lio/netty/buffer/PoolChunkList;
      85: aastore
      86: dup
      87: iconst_1
      88: aload_0
      89: getfield      #25                 // Field q000:Lio/netty/buffer/PoolChunkList;
      92: aastore
      93: dup
      94: iconst_2
      95: aload_0
      96: getfield      #24                 // Field q025:Lio/netty/buffer/PoolChunkList;
      99: aastore
     100: dup
     101: iconst_3
     102: aload_0
     103: getfield      #23                 // Field q050:Lio/netty/buffer/PoolChunkList;
     106: aastore
     107: dup
     108: iconst_4
     109: aload_0
     110: getfield      #22                 // Field q075:Lio/netty/buffer/PoolChunkList;
     113: aastore
     114: dup
     115: iconst_5
     116: aload_0
     117: getfield      #21                 // Field q100:Lio/netty/buffer/PoolChunkList;
     120: aastore
     121: invokespecial #146                // Method destroyPoolChunkLists:([Lio/netty/buffer/PoolChunkList;)V
     124: aload_1
     125: athrow
     126: return
    Exception table:
       from    to  target type
           0     4    65   any

  private static void destroyPoolSubPages(io.netty.buffer.PoolSubpage<?>[]);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: arraylength
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     28
      12: aload_1
      13: iload_3
      14: aaload
      15: astore        4
      17: aload         4
      19: invokevirtual #147                // Method io/netty/buffer/PoolSubpage.destroy:()V
      22: iinc          3, 1
      25: goto          7
      28: return

  private void destroyPoolChunkLists(io.netty.buffer.PoolChunkList<T>...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload         5
      22: aload_0
      23: invokevirtual #148                // Method io/netty/buffer/PoolChunkList.destroy:(Lio/netty/buffer/PoolArena;)V
      26: iinc          4, 1
      29: goto          8
      32: return

  static {};
    Code:
       0: ldc           #149                // class io/netty/buffer/PoolArena
       2: invokevirtual #150                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #48                 // Field $assertionsDisabled:Z
      16: invokestatic  #151                // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
      19: putstatic     #152                // Field HAS_UNSAFE:Z
      22: return
}
