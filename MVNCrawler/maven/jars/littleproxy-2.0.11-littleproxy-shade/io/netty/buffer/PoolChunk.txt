Compiled from "PoolChunk.java"
final class io.netty.buffer.PoolChunk<T> implements io.netty.buffer.PoolChunkMetric {
  private static final int SIZE_BIT_LENGTH;

  private static final int INUSED_BIT_LENGTH;

  private static final int SUBPAGE_BIT_LENGTH;

  private static final int BITMAP_IDX_BIT_LENGTH;

  static final int IS_SUBPAGE_SHIFT;

  static final int IS_USED_SHIFT;

  static final int SIZE_SHIFT;

  static final int RUN_OFFSET_SHIFT;

  final io.netty.buffer.PoolArena<T> arena;

  final java.lang.Object base;

  final T memory;

  final boolean unpooled;

  private final io.netty.buffer.LongLongHashMap runsAvailMap;

  private final io.netty.buffer.LongPriorityQueue[] runsAvail;

  private final io.netty.buffer.PoolSubpage<T>[] subpages;

  private final io.netty.util.internal.LongCounter pinnedBytes;

  private final int pageSize;

  private final int pageShifts;

  private final int chunkSize;

  private final java.util.Deque<java.nio.ByteBuffer> cachedNioBuffers;

  int freeBytes;

  io.netty.buffer.PoolChunkList<T> parent;

  io.netty.buffer.PoolChunk<T> prev;

  io.netty.buffer.PoolChunk<T> next;

  static final boolean $assertionsDisabled;

  io.netty.buffer.PoolChunk(io.netty.buffer.PoolArena<T>, java.lang.Object, T, int, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
       8: putfield      #4                  // Field pinnedBytes:Lio/netty/util/internal/LongCounter;
      11: aload_0
      12: iconst_0
      13: putfield      #5                  // Field unpooled:Z
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      21: aload_0
      22: aload_2
      23: putfield      #7                  // Field base:Ljava/lang/Object;
      26: aload_0
      27: aload_3
      28: putfield      #8                  // Field memory:Ljava/lang/Object;
      31: aload_0
      32: iload         4
      34: putfield      #9                  // Field pageSize:I
      37: aload_0
      38: iload         5
      40: putfield      #10                 // Field pageShifts:I
      43: aload_0
      44: iload         6
      46: putfield      #11                 // Field chunkSize:I
      49: aload_0
      50: iload         6
      52: putfield      #12                 // Field freeBytes:I
      55: aload_0
      56: iload         7
      58: invokestatic  #13                 // Method newRunsAvailqueueArray:(I)[Lio/netty/buffer/LongPriorityQueue;
      61: putfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
      64: aload_0
      65: new           #15                 // class io/netty/buffer/LongLongHashMap
      68: dup
      69: ldc2_w        #16                 // long -1l
      72: invokespecial #18                 // Method io/netty/buffer/LongLongHashMap."<init>":(J)V
      75: putfield      #19                 // Field runsAvailMap:Lio/netty/buffer/LongLongHashMap;
      78: aload_0
      79: iload         6
      81: iload         5
      83: ishr
      84: anewarray     #20                 // class io/netty/buffer/PoolSubpage
      87: putfield      #21                 // Field subpages:[Lio/netty/buffer/PoolSubpage;
      90: iload         6
      92: iload         5
      94: ishr
      95: istore        8
      97: iload         8
      99: i2l
     100: bipush        34
     102: lshl
     103: lstore        9
     105: aload_0
     106: iconst_0
     107: iload         8
     109: lload         9
     111: invokespecial #22                 // Method insertAvailRun:(IIJ)V
     114: aload_0
     115: new           #23                 // class java/util/ArrayDeque
     118: dup
     119: bipush        8
     121: invokespecial #24                 // Method java/util/ArrayDeque."<init>":(I)V
     124: putfield      #25                 // Field cachedNioBuffers:Ljava/util/Deque;
     127: return

  io.netty.buffer.PoolChunk(io.netty.buffer.PoolArena<T>, java.lang.Object, T, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #3                  // Method io/netty/util/internal/PlatformDependent.newLongCounter:()Lio/netty/util/internal/LongCounter;
       8: putfield      #4                  // Field pinnedBytes:Lio/netty/util/internal/LongCounter;
      11: aload_0
      12: iconst_1
      13: putfield      #5                  // Field unpooled:Z
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      21: aload_0
      22: aload_2
      23: putfield      #7                  // Field base:Ljava/lang/Object;
      26: aload_0
      27: aload_3
      28: putfield      #8                  // Field memory:Ljava/lang/Object;
      31: aload_0
      32: iconst_0
      33: putfield      #9                  // Field pageSize:I
      36: aload_0
      37: iconst_0
      38: putfield      #10                 // Field pageShifts:I
      41: aload_0
      42: aconst_null
      43: putfield      #19                 // Field runsAvailMap:Lio/netty/buffer/LongLongHashMap;
      46: aload_0
      47: aconst_null
      48: putfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
      51: aload_0
      52: aconst_null
      53: putfield      #21                 // Field subpages:[Lio/netty/buffer/PoolSubpage;
      56: aload_0
      57: iload         4
      59: putfield      #11                 // Field chunkSize:I
      62: aload_0
      63: aconst_null
      64: putfield      #25                 // Field cachedNioBuffers:Ljava/util/Deque;
      67: return

  private static io.netty.buffer.LongPriorityQueue[] newRunsAvailqueueArray(int);
    Code:
       0: iload_0
       1: anewarray     #26                 // class io/netty/buffer/LongPriorityQueue
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpge     29
      13: aload_1
      14: iload_2
      15: new           #26                 // class io/netty/buffer/LongPriorityQueue
      18: dup
      19: invokespecial #27                 // Method io/netty/buffer/LongPriorityQueue."<init>":()V
      22: aastore
      23: iinc          2, 1
      26: goto          7
      29: aload_1
      30: areturn

  private void insertAvailRun(int, int, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       4: iload_2
       5: invokevirtual #28                 // Method io/netty/buffer/PoolArena.pages2pageIdxFloor:(I)I
       8: istore        5
      10: aload_0
      11: getfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
      14: iload         5
      16: aaload
      17: astore        6
      19: aload         6
      21: lload_3
      22: invokevirtual #29                 // Method io/netty/buffer/LongPriorityQueue.offer:(J)V
      25: aload_0
      26: iload_1
      27: lload_3
      28: invokespecial #30                 // Method insertAvailRun0:(IJ)V
      31: iload_2
      32: iconst_1
      33: if_icmple     46
      36: aload_0
      37: iload_1
      38: iload_2
      39: invokestatic  #31                 // Method lastPage:(II)I
      42: lload_3
      43: invokespecial #30                 // Method insertAvailRun0:(IJ)V
      46: return

  private void insertAvailRun0(int, long);
    Code:
       0: aload_0
       1: getfield      #19                 // Field runsAvailMap:Lio/netty/buffer/LongLongHashMap;
       4: iload_1
       5: i2l
       6: lload_2
       7: invokevirtual #32                 // Method io/netty/buffer/LongLongHashMap.put:(JJ)J
      10: lstore        4
      12: getstatic     #33                 // Field $assertionsDisabled:Z
      15: ifne          35
      18: lload         4
      20: ldc2_w        #16                 // long -1l
      23: lcmp
      24: ifeq          35
      27: new           #34                 // class java/lang/AssertionError
      30: dup
      31: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      34: athrow
      35: return

  private void removeAvailRun(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       4: lload_1
       5: invokestatic  #36                 // Method runPages:(J)I
       8: invokevirtual #28                 // Method io/netty/buffer/PoolArena.pages2pageIdxFloor:(I)I
      11: istore_3
      12: aload_0
      13: getfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
      16: iload_3
      17: aaload
      18: astore        4
      20: aload_0
      21: aload         4
      23: lload_1
      24: invokespecial #37                 // Method removeAvailRun:(Lio/netty/buffer/LongPriorityQueue;J)V
      27: return

  private void removeAvailRun(io.netty.buffer.LongPriorityQueue, long);
    Code:
       0: aload_1
       1: lload_2
       2: invokevirtual #38                 // Method io/netty/buffer/LongPriorityQueue.remove:(J)V
       5: lload_2
       6: invokestatic  #39                 // Method runOffset:(J)I
       9: istore        4
      11: lload_2
      12: invokestatic  #36                 // Method runPages:(J)I
      15: istore        5
      17: aload_0
      18: getfield      #19                 // Field runsAvailMap:Lio/netty/buffer/LongLongHashMap;
      21: iload         4
      23: i2l
      24: invokevirtual #40                 // Method io/netty/buffer/LongLongHashMap.remove:(J)V
      27: iload         5
      29: iconst_1
      30: if_icmple     48
      33: aload_0
      34: getfield      #19                 // Field runsAvailMap:Lio/netty/buffer/LongLongHashMap;
      37: iload         4
      39: iload         5
      41: invokestatic  #31                 // Method lastPage:(II)I
      44: i2l
      45: invokevirtual #40                 // Method io/netty/buffer/LongLongHashMap.remove:(J)V
      48: return

  private static int lastPage(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iadd
       3: iconst_1
       4: isub
       5: ireturn

  private long getAvailRunByOffset(int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field runsAvailMap:Lio/netty/buffer/LongLongHashMap;
       4: iload_1
       5: i2l
       6: invokevirtual #41                 // Method io/netty/buffer/LongLongHashMap.get:(J)J
       9: lreturn

  public int usage();
    Code:
       0: aload_0
       1: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field freeBytes:I
      11: istore_1
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: aload_0
      23: iload_1
      24: invokespecial #42                 // Method usage:(I)I
      27: ireturn
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  private int usage(int);
    Code:
       0: iload_1
       1: ifne          7
       4: bipush        100
       6: ireturn
       7: iload_1
       8: i2l
       9: ldc2_w        #43                 // long 100l
      12: lmul
      13: aload_0
      14: getfield      #11                 // Field chunkSize:I
      17: i2l
      18: ldiv
      19: l2i
      20: istore_2
      21: iload_2
      22: ifne          28
      25: bipush        99
      27: ireturn
      28: bipush        100
      30: iload_2
      31: isub
      32: ireturn

  boolean allocate(io.netty.buffer.PooledByteBuf<T>, int, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       5: getfield      #45                 // Field io/netty/buffer/PoolArena.smallMaxSizeIdx:I
       8: if_icmpgt     49
      11: aload_0
      12: iload_3
      13: invokespecial #46                 // Method allocateSubpage:(I)J
      16: lstore        5
      18: lload         5
      20: lconst_0
      21: lcmp
      22: ifge          27
      25: iconst_0
      26: ireturn
      27: getstatic     #33                 // Field $assertionsDisabled:Z
      30: ifne          98
      33: lload         5
      35: invokestatic  #47                 // Method isSubpage:(J)Z
      38: ifne          98
      41: new           #34                 // class java/lang/AssertionError
      44: dup
      45: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      48: athrow
      49: aload_0
      50: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      53: iload_3
      54: invokevirtual #48                 // Method io/netty/buffer/PoolArena.sizeIdx2size:(I)I
      57: istore        7
      59: aload_0
      60: iload         7
      62: invokespecial #49                 // Method allocateRun:(I)J
      65: lstore        5
      67: lload         5
      69: lconst_0
      70: lcmp
      71: ifge          76
      74: iconst_0
      75: ireturn
      76: getstatic     #33                 // Field $assertionsDisabled:Z
      79: ifne          98
      82: lload         5
      84: invokestatic  #47                 // Method isSubpage:(J)Z
      87: ifeq          98
      90: new           #34                 // class java/lang/AssertionError
      93: dup
      94: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      97: athrow
      98: aload_0
      99: getfield      #25                 // Field cachedNioBuffers:Ljava/util/Deque;
     102: ifnull        120
     105: aload_0
     106: getfield      #25                 // Field cachedNioBuffers:Ljava/util/Deque;
     109: invokeinterface #50,  1           // InterfaceMethod java/util/Deque.pollLast:()Ljava/lang/Object;
     114: checkcast     #51                 // class java/nio/ByteBuffer
     117: goto          121
     120: aconst_null
     121: astore        7
     123: aload_0
     124: aload_1
     125: aload         7
     127: lload         5
     129: iload_2
     130: aload         4
     132: invokevirtual #52                 // Method initBuf:(Lio/netty/buffer/PooledByteBuf;Ljava/nio/ByteBuffer;JILio/netty/buffer/PoolThreadCache;)V
     135: iconst_1
     136: ireturn

  private long allocateRun(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #10                 // Field pageShifts:I
       5: ishr
       6: istore_2
       7: aload_0
       8: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      11: iload_2
      12: invokevirtual #53                 // Method io/netty/buffer/PoolArena.pages2pageIdx:(I)I
      15: istore_3
      16: aload_0
      17: getfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
      20: dup
      21: astore        4
      23: monitorenter
      24: aload_0
      25: iload_3
      26: invokespecial #54                 // Method runFirstBestFit:(I)I
      29: istore        5
      31: iload         5
      33: iconst_m1
      34: if_icmpne     44
      37: ldc2_w        #16                 // long -1l
      40: aload         4
      42: monitorexit
      43: lreturn
      44: aload_0
      45: getfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
      48: iload         5
      50: aaload
      51: astore        6
      53: aload         6
      55: invokevirtual #55                 // Method io/netty/buffer/LongPriorityQueue.poll:()J
      58: lstore        7
      60: getstatic     #33                 // Field $assertionsDisabled:Z
      63: ifne          111
      66: lload         7
      68: ldc2_w        #16                 // long -1l
      71: lcmp
      72: ifeq          83
      75: lload         7
      77: invokestatic  #56                 // Method isUsed:(J)Z
      80: ifeq          111
      83: new           #34                 // class java/lang/AssertionError
      86: dup
      87: new           #57                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #59                 // String invalid handle:
      96: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: lload         7
     101: invokevirtual #61                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     104: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokespecial #63                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     110: athrow
     111: aload_0
     112: aload         6
     114: lload         7
     116: invokespecial #37                 // Method removeAvailRun:(Lio/netty/buffer/LongPriorityQueue;J)V
     119: lload         7
     121: ldc2_w        #16                 // long -1l
     124: lcmp
     125: ifeq          137
     128: aload_0
     129: lload         7
     131: iload_2
     132: invokespecial #64                 // Method splitLargeRun:(JI)J
     135: lstore        7
     137: aload_0
     138: getfield      #10                 // Field pageShifts:I
     141: lload         7
     143: invokestatic  #65                 // Method runSize:(IJ)I
     146: istore        9
     148: aload_0
     149: dup
     150: getfield      #12                 // Field freeBytes:I
     153: iload         9
     155: isub
     156: putfield      #12                 // Field freeBytes:I
     159: lload         7
     161: aload         4
     163: monitorexit
     164: lreturn
     165: astore        10
     167: aload         4
     169: monitorexit
     170: aload         10
     172: athrow
    Exception table:
       from    to  target type
          24    43   165   any
          44   164   165   any
         165   170   165   any

  private int calculateRunSize(int);
    Code:
       0: iconst_1
       1: aload_0
       2: getfield      #10                 // Field pageShifts:I
       5: iconst_4
       6: isub
       7: ishl
       8: istore_2
       9: iconst_0
      10: istore_3
      11: aload_0
      12: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      15: iload_1
      16: invokevirtual #48                 // Method io/netty/buffer/PoolArena.sizeIdx2size:(I)I
      19: istore        5
      21: iload_3
      22: aload_0
      23: getfield      #9                  // Field pageSize:I
      26: iadd
      27: istore_3
      28: iload_3
      29: iload         5
      31: idiv
      32: istore        4
      34: iload         4
      36: iload_2
      37: if_icmpge     49
      40: iload_3
      41: iload         4
      43: iload         5
      45: imul
      46: if_icmpne     21
      49: iload         4
      51: iload_2
      52: if_icmple     71
      55: iload_3
      56: aload_0
      57: getfield      #9                  // Field pageSize:I
      60: isub
      61: istore_3
      62: iload_3
      63: iload         5
      65: idiv
      66: istore        4
      68: goto          49
      71: getstatic     #33                 // Field $assertionsDisabled:Z
      74: ifne          90
      77: iload         4
      79: ifgt          90
      82: new           #34                 // class java/lang/AssertionError
      85: dup
      86: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      89: athrow
      90: getstatic     #33                 // Field $assertionsDisabled:Z
      93: ifne          112
      96: iload_3
      97: aload_0
      98: getfield      #11                 // Field chunkSize:I
     101: if_icmple     112
     104: new           #34                 // class java/lang/AssertionError
     107: dup
     108: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
     111: athrow
     112: getstatic     #33                 // Field $assertionsDisabled:Z
     115: ifne          132
     118: iload_3
     119: iload         5
     121: if_icmpge     132
     124: new           #34                 // class java/lang/AssertionError
     127: dup
     128: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
     131: athrow
     132: iload_3
     133: ireturn

  private int runFirstBestFit(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field freeBytes:I
       4: aload_0
       5: getfield      #11                 // Field chunkSize:I
       8: if_icmpne     21
      11: aload_0
      12: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      15: getfield      #67                 // Field io/netty/buffer/PoolArena.nPSizes:I
      18: iconst_1
      19: isub
      20: ireturn
      21: iload_1
      22: istore_2
      23: iload_2
      24: aload_0
      25: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      28: getfield      #67                 // Field io/netty/buffer/PoolArena.nPSizes:I
      31: if_icmpge     60
      34: aload_0
      35: getfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
      38: iload_2
      39: aaload
      40: astore_3
      41: aload_3
      42: ifnull        54
      45: aload_3
      46: invokevirtual #68                 // Method io/netty/buffer/LongPriorityQueue.isEmpty:()Z
      49: ifne          54
      52: iload_2
      53: ireturn
      54: iinc          2, 1
      57: goto          23
      60: iconst_m1
      61: ireturn

  private long splitLargeRun(long, int);
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_3
       7: ifgt          18
      10: new           #34                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: lload_1
      19: invokestatic  #36                 // Method runPages:(J)I
      22: istore        4
      24: getstatic     #33                 // Field $assertionsDisabled:Z
      27: ifne          44
      30: iload_3
      31: iload         4
      33: if_icmple     44
      36: new           #34                 // class java/lang/AssertionError
      39: dup
      40: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      43: athrow
      44: iload         4
      46: iload_3
      47: isub
      48: istore        5
      50: iload         5
      52: ifle          95
      55: lload_1
      56: invokestatic  #39                 // Method runOffset:(J)I
      59: istore        6
      61: iload         6
      63: iload_3
      64: iadd
      65: istore        7
      67: iload         7
      69: iload         5
      71: iconst_0
      72: invokestatic  #69                 // Method toRunHandle:(III)J
      75: lstore        8
      77: aload_0
      78: iload         7
      80: iload         5
      82: lload         8
      84: invokespecial #22                 // Method insertAvailRun:(IIJ)V
      87: iload         6
      89: iload_3
      90: iconst_1
      91: invokestatic  #69                 // Method toRunHandle:(III)J
      94: lreturn
      95: lload_1
      96: ldc2_w        #70                 // long 8589934592l
      99: lor
     100: lstore_1
     101: lload_1
     102: lreturn

  private long allocateSubpage(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       4: iload_1
       5: invokevirtual #72                 // Method io/netty/buffer/PoolArena.findSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
       8: astore_2
       9: aload_2
      10: dup
      11: astore_3
      12: monitorenter
      13: aload_0
      14: iload_1
      15: invokespecial #73                 // Method calculateRunSize:(I)I
      18: istore        4
      20: aload_0
      21: iload         4
      23: invokespecial #49                 // Method allocateRun:(I)J
      26: lstore        5
      28: lload         5
      30: lconst_0
      31: lcmp
      32: ifge          41
      35: ldc2_w        #16                 // long -1l
      38: aload_3
      39: monitorexit
      40: lreturn
      41: lload         5
      43: invokestatic  #39                 // Method runOffset:(J)I
      46: istore        7
      48: getstatic     #33                 // Field $assertionsDisabled:Z
      51: ifne          72
      54: aload_0
      55: getfield      #21                 // Field subpages:[Lio/netty/buffer/PoolSubpage;
      58: iload         7
      60: aaload
      61: ifnull        72
      64: new           #34                 // class java/lang/AssertionError
      67: dup
      68: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      71: athrow
      72: aload_0
      73: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      76: iload_1
      77: invokevirtual #48                 // Method io/netty/buffer/PoolArena.sizeIdx2size:(I)I
      80: istore        8
      82: new           #20                 // class io/netty/buffer/PoolSubpage
      85: dup
      86: aload_2
      87: aload_0
      88: aload_0
      89: getfield      #10                 // Field pageShifts:I
      92: iload         7
      94: aload_0
      95: getfield      #10                 // Field pageShifts:I
      98: lload         5
     100: invokestatic  #65                 // Method runSize:(IJ)I
     103: iload         8
     105: invokespecial #74                 // Method io/netty/buffer/PoolSubpage."<init>":(Lio/netty/buffer/PoolSubpage;Lio/netty/buffer/PoolChunk;IIII)V
     108: astore        9
     110: aload_0
     111: getfield      #21                 // Field subpages:[Lio/netty/buffer/PoolSubpage;
     114: iload         7
     116: aload         9
     118: aastore
     119: aload         9
     121: invokevirtual #75                 // Method io/netty/buffer/PoolSubpage.allocate:()J
     124: aload_3
     125: monitorexit
     126: lreturn
     127: astore        10
     129: aload_3
     130: monitorexit
     131: aload         10
     133: athrow
    Exception table:
       from    to  target type
          13    40   127   any
          41   126   127   any
         127   131   127   any

  void free(long, int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #10                 // Field pageShifts:I
       4: lload_1
       5: invokestatic  #65                 // Method runSize:(IJ)I
       8: istore        5
      10: lload_1
      11: invokestatic  #47                 // Method isSubpage:(J)Z
      14: ifeq          148
      17: aload_0
      18: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      21: iload_3
      22: invokevirtual #76                 // Method io/netty/buffer/PoolArena.size2SizeIdx:(I)I
      25: istore        6
      27: aload_0
      28: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      31: iload         6
      33: invokevirtual #72                 // Method io/netty/buffer/PoolArena.findSubpagePoolHead:(I)Lio/netty/buffer/PoolSubpage;
      36: astore        7
      38: lload_1
      39: invokestatic  #39                 // Method runOffset:(J)I
      42: istore        8
      44: aload_0
      45: getfield      #21                 // Field subpages:[Lio/netty/buffer/PoolSubpage;
      48: iload         8
      50: aaload
      51: astore        9
      53: getstatic     #33                 // Field $assertionsDisabled:Z
      56: ifne          80
      59: aload         9
      61: ifnull        72
      64: aload         9
      66: getfield      #77                 // Field io/netty/buffer/PoolSubpage.doNotDestroy:Z
      69: ifne          80
      72: new           #34                 // class java/lang/AssertionError
      75: dup
      76: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      79: athrow
      80: aload         7
      82: dup
      83: astore        10
      85: monitorenter
      86: aload         9
      88: aload         7
      90: lload_1
      91: invokestatic  #78                 // Method bitmapIdx:(J)I
      94: invokevirtual #79                 // Method io/netty/buffer/PoolSubpage.free:(Lio/netty/buffer/PoolSubpage;I)Z
      97: ifeq          104
     100: aload         10
     102: monitorexit
     103: return
     104: getstatic     #33                 // Field $assertionsDisabled:Z
     107: ifne          126
     110: aload         9
     112: getfield      #77                 // Field io/netty/buffer/PoolSubpage.doNotDestroy:Z
     115: ifeq          126
     118: new           #34                 // class java/lang/AssertionError
     121: dup
     122: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
     125: athrow
     126: aload_0
     127: getfield      #21                 // Field subpages:[Lio/netty/buffer/PoolSubpage;
     130: iload         8
     132: aconst_null
     133: aastore
     134: aload         10
     136: monitorexit
     137: goto          148
     140: astore        11
     142: aload         10
     144: monitorexit
     145: aload         11
     147: athrow
     148: aload_0
     149: getfield      #14                 // Field runsAvail:[Lio/netty/buffer/LongPriorityQueue;
     152: dup
     153: astore        6
     155: monitorenter
     156: aload_0
     157: lload_1
     158: invokespecial #80                 // Method collapseRuns:(J)J
     161: lstore        7
     163: lload         7
     165: ldc2_w        #81                 // long -8589934593l
     168: land
     169: lstore        7
     171: lload         7
     173: ldc2_w        #83                 // long -4294967297l
     176: land
     177: lstore        7
     179: aload_0
     180: lload         7
     182: invokestatic  #39                 // Method runOffset:(J)I
     185: lload         7
     187: invokestatic  #36                 // Method runPages:(J)I
     190: lload         7
     192: invokespecial #22                 // Method insertAvailRun:(IIJ)V
     195: aload_0
     196: dup
     197: getfield      #12                 // Field freeBytes:I
     200: iload         5
     202: iadd
     203: putfield      #12                 // Field freeBytes:I
     206: aload         6
     208: monitorexit
     209: goto          220
     212: astore        12
     214: aload         6
     216: monitorexit
     217: aload         12
     219: athrow
     220: aload         4
     222: ifnull        259
     225: aload_0
     226: getfield      #25                 // Field cachedNioBuffers:Ljava/util/Deque;
     229: ifnull        259
     232: aload_0
     233: getfield      #25                 // Field cachedNioBuffers:Ljava/util/Deque;
     236: invokeinterface #85,  1           // InterfaceMethod java/util/Deque.size:()I
     241: getstatic     #86                 // Field io/netty/buffer/PooledByteBufAllocator.DEFAULT_MAX_CACHED_BYTEBUFFERS_PER_CHUNK:I
     244: if_icmpge     259
     247: aload_0
     248: getfield      #25                 // Field cachedNioBuffers:Ljava/util/Deque;
     251: aload         4
     253: invokeinterface #87,  2           // InterfaceMethod java/util/Deque.offer:(Ljava/lang/Object;)Z
     258: pop
     259: return
    Exception table:
       from    to  target type
          86   103   140   any
         104   137   140   any
         140   145   140   any
         156   209   212   any
         212   217   212   any

  private long collapseRuns(long);
    Code:
       0: aload_0
       1: aload_0
       2: lload_1
       3: invokespecial #88                 // Method collapsePast:(J)J
       6: invokespecial #89                 // Method collapseNext:(J)J
       9: lreturn

  private long collapsePast(long);
    Code:
       0: lload_1
       1: invokestatic  #39                 // Method runOffset:(J)I
       4: istore_3
       5: lload_1
       6: invokestatic  #36                 // Method runPages:(J)I
       9: istore        4
      11: aload_0
      12: iload_3
      13: iconst_1
      14: isub
      15: invokespecial #90                 // Method getAvailRunByOffset:(I)J
      18: lstore        5
      20: lload         5
      22: ldc2_w        #16                 // long -1l
      25: lcmp
      26: ifne          31
      29: lload_1
      30: lreturn
      31: lload         5
      33: invokestatic  #39                 // Method runOffset:(J)I
      36: istore        7
      38: lload         5
      40: invokestatic  #36                 // Method runPages:(J)I
      43: istore        8
      45: lload         5
      47: lload_1
      48: lcmp
      49: ifeq          82
      52: iload         7
      54: iload         8
      56: iadd
      57: iload_3
      58: if_icmpne     82
      61: aload_0
      62: lload         5
      64: invokespecial #91                 // Method removeAvailRun:(J)V
      67: iload         7
      69: iload         8
      71: iload         4
      73: iadd
      74: iconst_0
      75: invokestatic  #69                 // Method toRunHandle:(III)J
      78: lstore_1
      79: goto          84
      82: lload_1
      83: lreturn
      84: goto          0

  private long collapseNext(long);
    Code:
       0: lload_1
       1: invokestatic  #39                 // Method runOffset:(J)I
       4: istore_3
       5: lload_1
       6: invokestatic  #36                 // Method runPages:(J)I
       9: istore        4
      11: aload_0
      12: iload_3
      13: iload         4
      15: iadd
      16: invokespecial #90                 // Method getAvailRunByOffset:(I)J
      19: lstore        5
      21: lload         5
      23: ldc2_w        #16                 // long -1l
      26: lcmp
      27: ifne          32
      30: lload_1
      31: lreturn
      32: lload         5
      34: invokestatic  #39                 // Method runOffset:(J)I
      37: istore        7
      39: lload         5
      41: invokestatic  #36                 // Method runPages:(J)I
      44: istore        8
      46: lload         5
      48: lload_1
      49: lcmp
      50: ifeq          82
      53: iload_3
      54: iload         4
      56: iadd
      57: iload         7
      59: if_icmpne     82
      62: aload_0
      63: lload         5
      65: invokespecial #91                 // Method removeAvailRun:(J)V
      68: iload_3
      69: iload         4
      71: iload         8
      73: iadd
      74: iconst_0
      75: invokestatic  #69                 // Method toRunHandle:(III)J
      78: lstore_1
      79: goto          84
      82: lload_1
      83: lreturn
      84: goto          0

  private static long toRunHandle(int, int, int);
    Code:
       0: iload_0
       1: i2l
       2: bipush        49
       4: lshl
       5: iload_1
       6: i2l
       7: bipush        34
       9: lshl
      10: lor
      11: iload_2
      12: i2l
      13: bipush        33
      15: lshl
      16: lor
      17: lreturn

  void initBuf(io.netty.buffer.PooledByteBuf<T>, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: lload_3
       1: invokestatic  #47                 // Method isSubpage:(J)Z
       4: ifeq          21
       7: aload_0
       8: aload_1
       9: aload_2
      10: lload_3
      11: iload         5
      13: aload         6
      15: invokevirtual #92                 // Method initBufWithSubpage:(Lio/netty/buffer/PooledByteBuf;Ljava/nio/ByteBuffer;JILio/netty/buffer/PoolThreadCache;)V
      18: goto          61
      21: aload_0
      22: getfield      #10                 // Field pageShifts:I
      25: lload_3
      26: invokestatic  #65                 // Method runSize:(IJ)I
      29: istore        7
      31: aload_1
      32: aload_0
      33: aload_2
      34: lload_3
      35: lload_3
      36: invokestatic  #39                 // Method runOffset:(J)I
      39: aload_0
      40: getfield      #10                 // Field pageShifts:I
      43: ishl
      44: iload         5
      46: iload         7
      48: aload_0
      49: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
      52: getfield      #93                 // Field io/netty/buffer/PoolArena.parent:Lio/netty/buffer/PooledByteBufAllocator;
      55: invokevirtual #94                 // Method io/netty/buffer/PooledByteBufAllocator.threadCache:()Lio/netty/buffer/PoolThreadCache;
      58: invokevirtual #95                 // Method io/netty/buffer/PooledByteBuf.init:(Lio/netty/buffer/PoolChunk;Ljava/nio/ByteBuffer;JIIILio/netty/buffer/PoolThreadCache;)V
      61: return

  void initBufWithSubpage(io.netty.buffer.PooledByteBuf<T>, java.nio.ByteBuffer, long, int, io.netty.buffer.PoolThreadCache);
    Code:
       0: lload_3
       1: invokestatic  #39                 // Method runOffset:(J)I
       4: istore        7
       6: lload_3
       7: invokestatic  #78                 // Method bitmapIdx:(J)I
      10: istore        8
      12: aload_0
      13: getfield      #21                 // Field subpages:[Lio/netty/buffer/PoolSubpage;
      16: iload         7
      18: aaload
      19: astore        9
      21: getstatic     #33                 // Field $assertionsDisabled:Z
      24: ifne          43
      27: aload         9
      29: getfield      #77                 // Field io/netty/buffer/PoolSubpage.doNotDestroy:Z
      32: ifne          43
      35: new           #34                 // class java/lang/AssertionError
      38: dup
      39: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      42: athrow
      43: getstatic     #33                 // Field $assertionsDisabled:Z
      46: ifne          95
      49: iload         5
      51: aload         9
      53: getfield      #96                 // Field io/netty/buffer/PoolSubpage.elemSize:I
      56: if_icmple     95
      59: new           #34                 // class java/lang/AssertionError
      62: dup
      63: new           #57                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      70: iload         5
      72: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      75: ldc           #98                 // String <=
      77: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload         9
      82: getfield      #96                 // Field io/netty/buffer/PoolSubpage.elemSize:I
      85: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #63                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      94: athrow
      95: iload         7
      97: aload_0
      98: getfield      #10                 // Field pageShifts:I
     101: ishl
     102: iload         8
     104: aload         9
     106: getfield      #96                 // Field io/netty/buffer/PoolSubpage.elemSize:I
     109: imul
     110: iadd
     111: istore        10
     113: aload_1
     114: aload_0
     115: aload_2
     116: lload_3
     117: iload         10
     119: iload         5
     121: aload         9
     123: getfield      #96                 // Field io/netty/buffer/PoolSubpage.elemSize:I
     126: aload         6
     128: invokevirtual #95                 // Method io/netty/buffer/PooledByteBuf.init:(Lio/netty/buffer/PoolChunk;Ljava/nio/ByteBuffer;JIIILio/netty/buffer/PoolThreadCache;)V
     131: return

  void incrementPinnedMemory(int);
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifgt          18
      10: new           #34                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field pinnedBytes:Lio/netty/util/internal/LongCounter;
      22: iload_1
      23: i2l
      24: invokeinterface #99,  3           // InterfaceMethod io/netty/util/internal/LongCounter.add:(J)V
      29: return

  void decrementPinnedMemory(int);
    Code:
       0: getstatic     #33                 // Field $assertionsDisabled:Z
       3: ifne          18
       6: iload_1
       7: ifgt          18
      10: new           #34                 // class java/lang/AssertionError
      13: dup
      14: invokespecial #35                 // Method java/lang/AssertionError."<init>":()V
      17: athrow
      18: aload_0
      19: getfield      #4                  // Field pinnedBytes:Lio/netty/util/internal/LongCounter;
      22: iload_1
      23: ineg
      24: i2l
      25: invokeinterface #99,  3           // InterfaceMethod io/netty/util/internal/LongCounter.add:(J)V
      30: return

  public int chunkSize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field chunkSize:I
       4: ireturn

  public int freeBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field freeBytes:I
      11: aload_1
      12: monitorexit
      13: ireturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public int pinnedBytes();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pinnedBytes:Lio/netty/util/internal/LongCounter;
       4: invokeinterface #100,  1          // InterfaceMethod io/netty/util/internal/LongCounter.value:()J
       9: l2i
      10: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #12                 // Field freeBytes:I
      11: istore_1
      12: aload_2
      13: monitorexit
      14: goto          22
      17: astore_3
      18: aload_2
      19: monitorexit
      20: aload_3
      21: athrow
      22: new           #57                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #58                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #101                // String Chunk(
      31: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_0
      35: invokestatic  #102                // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      38: invokestatic  #103                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      41: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #104                // String :
      46: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_0
      50: iload_1
      51: invokespecial #42                 // Method usage:(I)I
      54: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: ldc           #105                // String %,
      59: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #11                 // Field chunkSize:I
      66: iload_1
      67: isub
      68: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      71: bipush        47
      73: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: aload_0
      77: getfield      #11                 // Field chunkSize:I
      80: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: bipush        41
      85: invokevirtual #106                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      88: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: areturn
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  void destroy();
    Code:
       0: aload_0
       1: getfield      #6                  // Field arena:Lio/netty/buffer/PoolArena;
       4: aload_0
       5: invokevirtual #107                // Method io/netty/buffer/PoolArena.destroyChunk:(Lio/netty/buffer/PoolChunk;)V
       8: return

  static int runOffset(long);
    Code:
       0: lload_0
       1: bipush        49
       3: lshr
       4: l2i
       5: ireturn

  static int runSize(int, long);
    Code:
       0: lload_1
       1: invokestatic  #36                 // Method runPages:(J)I
       4: iload_0
       5: ishl
       6: ireturn

  static int runPages(long);
    Code:
       0: lload_0
       1: bipush        34
       3: lshr
       4: ldc2_w        #108                // long 32767l
       7: land
       8: l2i
       9: ireturn

  static boolean isUsed(long);
    Code:
       0: lload_0
       1: bipush        33
       3: lshr
       4: lconst_1
       5: land
       6: lconst_1
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  static boolean isRun(long);
    Code:
       0: lload_0
       1: invokestatic  #47                 // Method isSubpage:(J)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static boolean isSubpage(long);
    Code:
       0: lload_0
       1: bipush        32
       3: lshr
       4: lconst_1
       5: land
       6: lconst_1
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  static int bitmapIdx(long);
    Code:
       0: lload_0
       1: l2i
       2: ireturn

  static {};
    Code:
       0: ldc           #1                  // class io/netty/buffer/PoolChunk
       2: invokevirtual #110                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #33                 // Field $assertionsDisabled:Z
      16: return
}
