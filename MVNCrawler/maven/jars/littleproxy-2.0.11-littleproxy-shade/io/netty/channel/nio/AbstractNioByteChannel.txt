Compiled from "AbstractNioByteChannel.java"
public abstract class io.netty.channel.nio.AbstractNioByteChannel extends io.netty.channel.nio.AbstractNioChannel {
  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final java.lang.String EXPECTED_TYPES;

  private final java.lang.Runnable flushTask;

  private boolean inputClosedSeenErrorOnRead;

  protected io.netty.channel.nio.AbstractNioByteChannel(io.netty.channel.Channel, java.nio.channels.SelectableChannel);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #5                  // Method io/netty/channel/nio/AbstractNioChannel."<init>":(Lio/netty/channel/Channel;Ljava/nio/channels/SelectableChannel;I)V
       7: aload_0
       8: new           #6                  // class io/netty/channel/nio/AbstractNioByteChannel$1
      11: dup
      12: aload_0
      13: invokespecial #7                  // Method io/netty/channel/nio/AbstractNioByteChannel$1."<init>":(Lio/netty/channel/nio/AbstractNioByteChannel;)V
      16: putfield      #8                  // Field flushTask:Ljava/lang/Runnable;
      19: return

  protected abstract io.netty.channel.ChannelFuture shutdownInput();

  protected boolean isInputShutdown0();
    Code:
       0: iconst_0
       1: ireturn

  protected io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe();
    Code:
       0: new           #9                  // class io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe
       3: dup
       4: aload_0
       5: invokespecial #10                 // Method io/netty/channel/nio/AbstractNioByteChannel$NioByteUnsafe."<init>":(Lio/netty/channel/nio/AbstractNioByteChannel;)V
       8: areturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #11                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  final boolean shouldBreakReadReady(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method isInputShutdown0:()Z
       4: ifeq          25
       7: aload_0
       8: getfield      #2                  // Field inputClosedSeenErrorOnRead:Z
      11: ifne          21
      14: aload_1
      15: invokestatic  #3                  // Method isAllowHalfClosure:(Lio/netty/channel/ChannelConfig;)Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private static boolean isAllowHalfClosure(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: instanceof    #13                 // class io/netty/channel/socket/SocketChannelConfig
       4: ifeq          23
       7: aload_0
       8: checkcast     #13                 // class io/netty/channel/socket/SocketChannelConfig
      11: invokeinterface #14,  1           // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.isAllowHalfClosure:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  protected final int doWrite0(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: aload_1
      13: aload_1
      14: invokevirtual #15                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      17: invokespecial #16                 // Method doWriteInternal:(Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Object;)I
      20: ireturn

  private int doWriteInternal(io.netty.channel.ChannelOutboundBuffer, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #17                 // class io/netty/buffer/ByteBuf
       4: ifeq          62
       7: aload_2
       8: checkcast     #17                 // class io/netty/buffer/ByteBuf
      11: astore_3
      12: aload_3
      13: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      16: ifne          26
      19: aload_1
      20: invokevirtual #19                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      23: pop
      24: iconst_0
      25: ireturn
      26: aload_0
      27: aload_3
      28: invokevirtual #20                 // Method doWriteBytes:(Lio/netty/buffer/ByteBuf;)I
      31: istore        4
      33: iload         4
      35: ifle          59
      38: aload_1
      39: iload         4
      41: i2l
      42: invokevirtual #21                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
      45: aload_3
      46: invokevirtual #18                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
      49: ifne          57
      52: aload_1
      53: invokevirtual #19                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      56: pop
      57: iconst_1
      58: ireturn
      59: goto          151
      62: aload_2
      63: instanceof    #22                 // class io/netty/channel/FileRegion
      66: ifeq          143
      69: aload_2
      70: checkcast     #22                 // class io/netty/channel/FileRegion
      73: astore_3
      74: aload_3
      75: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
      80: aload_3
      81: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
      86: lcmp
      87: iflt          97
      90: aload_1
      91: invokevirtual #19                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      94: pop
      95: iconst_0
      96: ireturn
      97: aload_0
      98: aload_3
      99: invokevirtual #25                 // Method doWriteFileRegion:(Lio/netty/channel/FileRegion;)J
     102: lstore        4
     104: lload         4
     106: lconst_0
     107: lcmp
     108: ifle          140
     111: aload_1
     112: lload         4
     114: invokevirtual #21                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
     117: aload_3
     118: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
     123: aload_3
     124: invokeinterface #24,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
     129: lcmp
     130: iflt          138
     133: aload_1
     134: invokevirtual #19                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
     137: pop
     138: iconst_1
     139: ireturn
     140: goto          151
     143: new           #26                 // class java/lang/Error
     146: dup
     147: invokespecial #27                 // Method java/lang/Error."<init>":()V
     150: athrow
     151: ldc           #28                 // int 2147483647
     153: ireturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method config:()Lio/netty/channel/ChannelConfig;
       4: invokeinterface #30,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getWriteSpinCount:()I
       9: istore_2
      10: aload_1
      11: invokevirtual #15                 // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      14: astore_3
      15: aload_3
      16: ifnonnull     24
      19: aload_0
      20: invokevirtual #31                 // Method clearOpWrite:()V
      23: return
      24: iload_2
      25: aload_0
      26: aload_1
      27: aload_3
      28: invokespecial #16                 // Method doWriteInternal:(Lio/netty/channel/ChannelOutboundBuffer;Ljava/lang/Object;)I
      31: isub
      32: istore_2
      33: iload_2
      34: ifgt          10
      37: aload_0
      38: iload_2
      39: ifge          46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: invokevirtual #32                 // Method incompleteWrite:(Z)V
      50: return

  protected final java.lang.Object filterOutboundMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #17                 // class io/netty/buffer/ByteBuf
       4: ifeq          27
       7: aload_1
       8: checkcast     #17                 // class io/netty/buffer/ByteBuf
      11: astore_2
      12: aload_2
      13: invokevirtual #33                 // Method io/netty/buffer/ByteBuf.isDirect:()Z
      16: ifeq          21
      19: aload_1
      20: areturn
      21: aload_0
      22: aload_2
      23: invokevirtual #34                 // Method newDirectBuffer:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      26: areturn
      27: aload_1
      28: instanceof    #22                 // class io/netty/channel/FileRegion
      31: ifeq          36
      34: aload_1
      35: areturn
      36: new           #35                 // class java/lang/UnsupportedOperationException
      39: dup
      40: new           #36                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #38                 // String unsupported message type:
      49: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokestatic  #40                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      56: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: getstatic     #41                 // Field EXPECTED_TYPES:Ljava/lang/String;
      62: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #43                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      71: athrow

  protected final void incompleteWrite(boolean);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_0
       5: invokevirtual #44                 // Method setOpWrite:()V
       8: goto          26
      11: aload_0
      12: invokevirtual #31                 // Method clearOpWrite:()V
      15: aload_0
      16: invokevirtual #45                 // Method eventLoop:()Lio/netty/channel/nio/NioEventLoop;
      19: aload_0
      20: getfield      #8                  // Field flushTask:Ljava/lang/Runnable;
      23: invokevirtual #46                 // Method io/netty/channel/nio/NioEventLoop.execute:(Ljava/lang/Runnable;)V
      26: return

  protected abstract long doWriteFileRegion(io.netty.channel.FileRegion) throws java.lang.Exception;

  protected abstract int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;

  protected abstract int doWriteBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;

  protected final void setOpWrite();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method selectionKey:()Ljava/nio/channels/SelectionKey;
       4: astore_1
       5: aload_1
       6: invokevirtual #48                 // Method java/nio/channels/SelectionKey.isValid:()Z
       9: ifne          13
      12: return
      13: aload_1
      14: invokevirtual #49                 // Method java/nio/channels/SelectionKey.interestOps:()I
      17: istore_2
      18: iload_2
      19: iconst_4
      20: iand
      21: ifne          32
      24: aload_1
      25: iload_2
      26: iconst_4
      27: ior
      28: invokevirtual #50                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      31: pop
      32: return

  protected final void clearOpWrite();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method selectionKey:()Ljava/nio/channels/SelectionKey;
       4: astore_1
       5: aload_1
       6: invokevirtual #48                 // Method java/nio/channels/SelectionKey.isValid:()Z
       9: ifne          13
      12: return
      13: aload_1
      14: invokevirtual #49                 // Method java/nio/channels/SelectionKey.interestOps:()I
      17: istore_2
      18: iload_2
      19: iconst_4
      20: iand
      21: ifeq          33
      24: aload_1
      25: iload_2
      26: bipush        -5
      28: iand
      29: invokevirtual #50                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      32: pop
      33: return

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method newUnsafe:()Lio/netty/channel/nio/AbstractNioChannel$AbstractNioUnsafe;
       4: areturn

  static boolean access$000(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method isAllowHalfClosure:(Lio/netty/channel/ChannelConfig;)Z
       4: ireturn

  static boolean access$102(io.netty.channel.nio.AbstractNioByteChannel, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #2                  // Field inputClosedSeenErrorOnRead:Z
       6: ireturn

  static {};
    Code:
       0: new           #52                 // class io/netty/channel/ChannelMetadata
       3: dup
       4: iconst_0
       5: bipush        16
       7: invokespecial #53                 // Method io/netty/channel/ChannelMetadata."<init>":(ZI)V
      10: putstatic     #11                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      13: new           #36                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #54                 // String  (expected:
      22: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #17                 // class io/netty/buffer/ByteBuf
      27: invokestatic  #55                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      30: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #56                 // String ,
      35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #22                 // class io/netty/channel/FileRegion
      40: invokestatic  #55                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      43: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: bipush        41
      48: invokevirtual #57                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      51: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: putstatic     #41                 // Field EXPECTED_TYPES:Ljava/lang/String;
      57: return
}
