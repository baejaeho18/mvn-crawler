Compiled from "AbstractChannelHandlerContext.java"
abstract class io.netty.channel.AbstractChannelHandlerContext implements io.netty.channel.ChannelHandlerContext,io.netty.util.ResourceLeakHint {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  volatile io.netty.channel.AbstractChannelHandlerContext next;

  volatile io.netty.channel.AbstractChannelHandlerContext prev;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.channel.AbstractChannelHandlerContext> HANDLER_STATE_UPDATER;

  private static final int ADD_PENDING;

  private static final int ADD_COMPLETE;

  private static final int REMOVE_COMPLETE;

  private static final int INIT;

  private final io.netty.channel.DefaultChannelPipeline pipeline;

  private final java.lang.String name;

  private final boolean ordered;

  private final int executionMask;

  final io.netty.util.concurrent.EventExecutor executor;

  private io.netty.channel.ChannelFuture succeededFuture;

  private io.netty.channel.AbstractChannelHandlerContext$Tasks invokeTasks;

  private volatile int handlerState;

  static final boolean $assertionsDisabled;

  io.netty.channel.AbstractChannelHandlerContext(io.netty.channel.DefaultChannelPipeline, io.netty.util.concurrent.EventExecutor, java.lang.String, java.lang.Class<? extends io.netty.channel.ChannelHandler>);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #21                 // Field handlerState:I
       9: aload_0
      10: aload_3
      11: ldc           #22                 // String name
      13: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #24                 // class java/lang/String
      19: putfield      #25                 // Field name:Ljava/lang/String;
      22: aload_0
      23: aload_1
      24: putfield      #6                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
      27: aload_0
      28: aload_2
      29: putfield      #26                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
      32: aload_0
      33: aload         4
      35: invokestatic  #27                 // Method io/netty/channel/ChannelHandlerMask.mask:(Ljava/lang/Class;)I
      38: putfield      #28                 // Field executionMask:I
      41: aload_0
      42: aload_2
      43: ifnull        53
      46: aload_2
      47: instanceof    #29                 // class io/netty/util/concurrent/OrderedEventExecutor
      50: ifeq          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: putfield      #30                 // Field ordered:Z
      61: return

  public io.netty.channel.Channel channel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: invokevirtual #31                 // Method io/netty/channel/DefaultChannelPipeline.channel:()Lio/netty/channel/Channel;
       7: areturn

  public io.netty.channel.ChannelPipeline pipeline();
    Code:
       0: aload_0
       1: getfield      #6                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: areturn

  public io.netty.buffer.ByteBufAllocator alloc();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       4: invokeinterface #33,  1           // InterfaceMethod io/netty/channel/Channel.config:()Lio/netty/channel/ChannelConfig;
       9: invokeinterface #34,  1           // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      14: areturn

  public io.netty.util.concurrent.EventExecutor executor();
    Code:
       0: aload_0
       1: getfield      #26                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
       4: ifnonnull     17
       7: aload_0
       8: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
      11: invokeinterface #35,  1           // InterfaceMethod io/netty/channel/Channel.eventLoop:()Lio/netty/channel/EventLoop;
      16: areturn
      17: aload_0
      18: getfield      #26                 // Field executor:Lio/netty/util/concurrent/EventExecutor;
      21: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #25                 // Field name:Ljava/lang/String;
       4: areturn

  public io.netty.channel.ChannelHandlerContext fireChannelRegistered();
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       5: invokestatic  #37                 // Method invokeChannelRegistered:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       8: aload_0
       9: areturn

  static void invokeChannelRegistered(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #18                 // Method invokeChannelRegistered:()V
      18: goto          35
      21: aload_1
      22: new           #40                 // class io/netty/channel/AbstractChannelHandlerContext$1
      25: dup
      26: aload_0
      27: invokespecial #41                 // Method io/netty/channel/AbstractChannelHandlerContext$1."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      30: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      35: return

  private void invokeChannelRegistered();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          32
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: invokeinterface #46,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelRegistered:(Lio/netty/channel/ChannelHandlerContext;)V
      20: goto          37
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      29: goto          37
      32: aload_0
      33: invokevirtual #48                 // Method fireChannelRegistered:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireChannelUnregistered();
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       5: invokestatic  #49                 // Method invokeChannelUnregistered:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       8: aload_0
       9: areturn

  static void invokeChannelUnregistered(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #17                 // Method invokeChannelUnregistered:()V
      18: goto          35
      21: aload_1
      22: new           #50                 // class io/netty/channel/AbstractChannelHandlerContext$2
      25: dup
      26: aload_0
      27: invokespecial #51                 // Method io/netty/channel/AbstractChannelHandlerContext$2."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      30: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      35: return

  private void invokeChannelUnregistered();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          32
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: invokeinterface #52,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelUnregistered:(Lio/netty/channel/ChannelHandlerContext;)V
      20: goto          37
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      29: goto          37
      32: aload_0
      33: invokevirtual #53                 // Method fireChannelUnregistered:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireChannelActive();
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       6: invokestatic  #54                 // Method invokeChannelActive:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       9: aload_0
      10: areturn

  static void invokeChannelActive(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #16                 // Method invokeChannelActive:()V
      18: goto          35
      21: aload_1
      22: new           #55                 // class io/netty/channel/AbstractChannelHandlerContext$3
      25: dup
      26: aload_0
      27: invokespecial #56                 // Method io/netty/channel/AbstractChannelHandlerContext$3."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      30: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      35: return

  private void invokeChannelActive();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          32
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: invokeinterface #57,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelActive:(Lio/netty/channel/ChannelHandlerContext;)V
      20: goto          37
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      29: goto          37
      32: aload_0
      33: invokevirtual #58                 // Method fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireChannelInactive();
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       6: invokestatic  #59                 // Method invokeChannelInactive:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       9: aload_0
      10: areturn

  static void invokeChannelInactive(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #15                 // Method invokeChannelInactive:()V
      18: goto          35
      21: aload_1
      22: new           #60                 // class io/netty/channel/AbstractChannelHandlerContext$4
      25: dup
      26: aload_0
      27: invokespecial #61                 // Method io/netty/channel/AbstractChannelHandlerContext$4."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      30: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      35: return

  private void invokeChannelInactive();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          32
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: invokeinterface #62,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelInactive:(Lio/netty/channel/ChannelHandlerContext;)V
      20: goto          37
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      29: goto          37
      32: aload_0
      33: invokevirtual #63                 // Method fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable);
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       5: aload_1
       6: invokestatic  #64                 // Method invokeExceptionCaught:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Throwable;)V
       9: aload_0
      10: areturn

  static void invokeExceptionCaught(io.netty.channel.AbstractChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #65                 // String cause
       3: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      11: astore_2
      12: aload_2
      13: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifeq          29
      21: aload_0
      22: aload_1
      23: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      26: goto          81
      29: aload_2
      30: new           #66                 // class io/netty/channel/AbstractChannelHandlerContext$5
      33: dup
      34: aload_0
      35: aload_1
      36: invokespecial #67                 // Method io/netty/channel/AbstractChannelHandlerContext$5."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Throwable;)V
      39: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      44: goto          81
      47: astore_3
      48: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      51: invokeinterface #69,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      56: ifeq          81
      59: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      62: ldc           #70                 // String Failed to submit an exceptionCaught() event.
      64: aload_3
      65: invokeinterface #71,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      73: ldc           #72                 // String The exceptionCaught() event that was failed to submit was:
      75: aload_1
      76: invokeinterface #71,  3           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      81: return
    Exception table:
       from    to  target type
          29    44    47   Class java/lang/Throwable

  private void invokeExceptionCaught(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          77
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: aload_0
      12: aload_1
      13: invokeinterface #73,  3           // InterfaceMethod io/netty/channel/ChannelHandler.exceptionCaught:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V
      18: goto          83
      21: astore_2
      22: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      25: invokeinterface #74,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
      30: ifeq          51
      33: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      36: ldc           #75                 // String An exception {}was thrown by a user handler\'s exceptionCaught() method while handling the following exception:
      38: aload_2
      39: invokestatic  #76                 // Method io/netty/util/internal/ThrowableUtil.stackTraceToString:(Ljava/lang/Throwable;)Ljava/lang/String;
      42: aload_1
      43: invokeinterface #77,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      48: goto          74
      51: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      54: invokeinterface #69,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      59: ifeq          74
      62: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      65: ldc           #78                 // String An exception \'{}\' [enable DEBUG level for full stacktrace] was thrown by a user handler\'s exceptionCaught() method while handling the following exception:
      67: aload_2
      68: aload_1
      69: invokeinterface #79,  4           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      74: goto          83
      77: aload_0
      78: aload_1
      79: invokevirtual #80                 // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
      82: pop
      83: return
    Exception table:
       from    to  target type
           7    18    21   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object);
    Code:
       0: aload_0
       1: sipush        128
       4: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       7: aload_1
       8: invokestatic  #81                 // Method invokeUserEventTriggered:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Object;)V
      11: aload_0
      12: areturn

  static void invokeUserEventTriggered(io.netty.channel.AbstractChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #82                 // String event
       3: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      11: astore_2
      12: aload_2
      13: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifeq          29
      21: aload_0
      22: aload_1
      23: invokespecial #13                 // Method invokeUserEventTriggered:(Ljava/lang/Object;)V
      26: goto          44
      29: aload_2
      30: new           #83                 // class io/netty/channel/AbstractChannelHandlerContext$6
      33: dup
      34: aload_0
      35: aload_1
      36: invokespecial #84                 // Method io/netty/channel/AbstractChannelHandlerContext$6."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Object;)V
      39: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      44: return

  private void invokeUserEventTriggered(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          33
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: aload_1
      16: invokeinterface #85,  3           // InterfaceMethod io/netty/channel/ChannelInboundHandler.userEventTriggered:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
      21: goto          39
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      30: goto          39
      33: aload_0
      34: aload_1
      35: invokevirtual #86                 // Method fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      38: pop
      39: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object);
    Code:
       0: aload_0
       1: bipush        32
       3: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       6: aload_1
       7: invokestatic  #87                 // Method invokeChannelRead:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Object;)V
      10: aload_0
      11: areturn

  static void invokeChannelRead(io.netty.channel.AbstractChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: aload_1
       5: ldc           #88                 // String msg
       7: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: aload_0
      11: invokevirtual #89                 // Method io/netty/channel/DefaultChannelPipeline.touch:(Ljava/lang/Object;Lio/netty/channel/AbstractChannelHandlerContext;)Ljava/lang/Object;
      14: astore_2
      15: aload_0
      16: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      19: astore_3
      20: aload_3
      21: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      26: ifeq          37
      29: aload_0
      30: aload_2
      31: invokespecial #12                 // Method invokeChannelRead:(Ljava/lang/Object;)V
      34: goto          52
      37: aload_3
      38: new           #90                 // class io/netty/channel/AbstractChannelHandlerContext$7
      41: dup
      42: aload_0
      43: aload_2
      44: invokespecial #91                 // Method io/netty/channel/AbstractChannelHandlerContext$7."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Object;)V
      47: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      52: return

  private void invokeChannelRead(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          33
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: aload_1
      16: invokeinterface #92,  3           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelRead:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V
      21: goto          39
      24: astore_2
      25: aload_0
      26: aload_2
      27: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      30: goto          39
      33: aload_0
      34: aload_1
      35: invokevirtual #93                 // Method fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
      38: pop
      39: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireChannelReadComplete();
    Code:
       0: aload_0
       1: bipush        64
       3: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       6: invokestatic  #94                 // Method invokeChannelReadComplete:(Lio/netty/channel/AbstractChannelHandlerContext;)V
       9: aload_0
      10: areturn

  static void invokeChannelReadComplete(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #5                  // Method invokeChannelReadComplete:()V
      18: goto          54
      21: aload_0
      22: getfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      25: astore_2
      26: aload_2
      27: ifnonnull     44
      30: aload_0
      31: new           #96                 // class io/netty/channel/AbstractChannelHandlerContext$Tasks
      34: dup
      35: aload_0
      36: invokespecial #97                 // Method io/netty/channel/AbstractChannelHandlerContext$Tasks."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      39: dup
      40: astore_2
      41: putfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      44: aload_1
      45: aload_2
      46: invokestatic  #98                 // Method io/netty/channel/AbstractChannelHandlerContext$Tasks.access$700:(Lio/netty/channel/AbstractChannelHandlerContext$Tasks;)Ljava/lang/Runnable;
      49: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      54: return

  private void invokeChannelReadComplete();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          32
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: invokeinterface #99,  2           // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelReadComplete:(Lio/netty/channel/ChannelHandlerContext;)V
      20: goto          37
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      29: goto          37
      32: aload_0
      33: invokevirtual #100                // Method fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged();
    Code:
       0: aload_0
       1: sipush        256
       4: invokespecial #36                 // Method findContextInbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       7: invokestatic  #101                // Method invokeChannelWritabilityChanged:(Lio/netty/channel/AbstractChannelHandlerContext;)V
      10: aload_0
      11: areturn

  static void invokeChannelWritabilityChanged(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       4: astore_1
       5: aload_1
       6: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      11: ifeq          21
      14: aload_0
      15: invokespecial #3                  // Method invokeChannelWritabilityChanged:()V
      18: goto          54
      21: aload_0
      22: getfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      25: astore_2
      26: aload_2
      27: ifnonnull     44
      30: aload_0
      31: new           #96                 // class io/netty/channel/AbstractChannelHandlerContext$Tasks
      34: dup
      35: aload_0
      36: invokespecial #97                 // Method io/netty/channel/AbstractChannelHandlerContext$Tasks."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      39: dup
      40: astore_2
      41: putfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      44: aload_1
      45: aload_2
      46: invokestatic  #102                // Method io/netty/channel/AbstractChannelHandlerContext$Tasks.access$800:(Lio/netty/channel/AbstractChannelHandlerContext$Tasks;)Ljava/lang/Runnable;
      49: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      54: return

  private void invokeChannelWritabilityChanged();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          32
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #45                 // class io/netty/channel/ChannelInboundHandler
      14: aload_0
      15: invokeinterface #103,  2          // InterfaceMethod io/netty/channel/ChannelInboundHandler.channelWritabilityChanged:(Lio/netty/channel/ChannelHandlerContext;)V
      20: goto          37
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      29: goto          37
      32: aload_0
      33: invokevirtual #104                // Method fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Throwable

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       6: invokevirtual #106                // Method bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       6: invokevirtual #107                // Method connect:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       7: invokevirtual #108                // Method connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public io.netty.channel.ChannelFuture disconnect();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #109                // Method disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture close();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #110                // Method close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture deregister();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #111                // Method deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture bind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ldc           #112                // String localAddress
       3: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_2
       9: iconst_0
      10: invokespecial #113                // Method isNotValidPromise:(Lio/netty/channel/ChannelPromise;Z)Z
      13: ifeq          18
      16: aload_2
      17: areturn
      18: aload_0
      19: sipush        512
      22: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
      25: astore_3
      26: aload_3
      27: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      30: astore        4
      32: aload         4
      34: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      39: ifeq          51
      42: aload_3
      43: aload_1
      44: aload_2
      45: invokespecial #11                 // Method invokeBind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      48: goto          71
      51: aload         4
      53: new           #115                // class io/netty/channel/AbstractChannelHandlerContext$8
      56: dup
      57: aload_0
      58: aload_3
      59: aload_1
      60: aload_2
      61: invokespecial #116                // Method io/netty/channel/AbstractChannelHandlerContext$8."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      64: aload_2
      65: aconst_null
      66: iconst_0
      67: invokestatic  #117                // Method safeExecute:(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Runnable;Lio/netty/channel/ChannelPromise;Ljava/lang/Object;Z)Z
      70: pop
      71: aload_2
      72: areturn

  private void invokeBind(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          34
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokeinterface #119,  4          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.bind:(Lio/netty/channel/ChannelHandlerContext;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      22: goto          41
      25: astore_3
      26: aload_3
      27: aload_2
      28: invokestatic  #120                // Method notifyOutboundHandlerException:(Ljava/lang/Throwable;Lio/netty/channel/ChannelPromise;)V
      31: goto          41
      34: aload_0
      35: aload_1
      36: aload_2
      37: invokevirtual #106                // Method bind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      40: pop
      41: return
    Exception table:
       from    to  target type
           7    22    25   Class java/lang/Throwable

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #108                // Method connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       7: areturn

  public io.netty.channel.ChannelFuture connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ldc           #121                // String remoteAddress
       3: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_3
       9: iconst_0
      10: invokespecial #113                // Method isNotValidPromise:(Lio/netty/channel/ChannelPromise;Z)Z
      13: ifeq          18
      16: aload_3
      17: areturn
      18: aload_0
      19: sipush        1024
      22: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
      25: astore        4
      27: aload         4
      29: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      32: astore        5
      34: aload         5
      36: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      41: ifeq          55
      44: aload         4
      46: aload_1
      47: aload_2
      48: aload_3
      49: invokespecial #10                 // Method invokeConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      52: goto          77
      55: aload         5
      57: new           #122                // class io/netty/channel/AbstractChannelHandlerContext$9
      60: dup
      61: aload_0
      62: aload         4
      64: aload_1
      65: aload_2
      66: aload_3
      67: invokespecial #123                // Method io/netty/channel/AbstractChannelHandlerContext$9."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      70: aload_3
      71: aconst_null
      72: iconst_0
      73: invokestatic  #117                // Method safeExecute:(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Runnable;Lio/netty/channel/ChannelPromise;Ljava/lang/Object;Z)Z
      76: pop
      77: aload_3
      78: areturn

  private void invokeConnect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          37
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
      14: aload_0
      15: aload_1
      16: aload_2
      17: aload_3
      18: invokeinterface #124,  5          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.connect:(Lio/netty/channel/ChannelHandlerContext;Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
      23: goto          45
      26: astore        4
      28: aload         4
      30: aload_3
      31: invokestatic  #120                // Method notifyOutboundHandlerException:(Ljava/lang/Throwable;Lio/netty/channel/ChannelPromise;)V
      34: goto          45
      37: aload_0
      38: aload_1
      39: aload_2
      40: aload_3
      41: invokevirtual #108                // Method connect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      44: pop
      45: return
    Exception table:
       from    to  target type
           7    23    26   Class java/lang/Throwable

  public io.netty.channel.ChannelFuture disconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       4: invokeinterface #125,  1          // InterfaceMethod io/netty/channel/Channel.metadata:()Lio/netty/channel/ChannelMetadata;
       9: invokevirtual #126                // Method io/netty/channel/ChannelMetadata.hasDisconnect:()Z
      12: ifne          21
      15: aload_0
      16: aload_1
      17: invokevirtual #110                // Method close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      20: areturn
      21: aload_0
      22: aload_1
      23: iconst_0
      24: invokespecial #113                // Method isNotValidPromise:(Lio/netty/channel/ChannelPromise;Z)Z
      27: ifeq          32
      30: aload_1
      31: areturn
      32: aload_0
      33: sipush        2048
      36: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
      39: astore_2
      40: aload_2
      41: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      44: astore_3
      45: aload_3
      46: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      51: ifeq          62
      54: aload_2
      55: aload_1
      56: invokespecial #9                  // Method invokeDisconnect:(Lio/netty/channel/ChannelPromise;)V
      59: goto          80
      62: aload_3
      63: new           #127                // class io/netty/channel/AbstractChannelHandlerContext$10
      66: dup
      67: aload_0
      68: aload_2
      69: aload_1
      70: invokespecial #128                // Method io/netty/channel/AbstractChannelHandlerContext$10."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      73: aload_1
      74: aconst_null
      75: iconst_0
      76: invokestatic  #117                // Method safeExecute:(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Runnable;Lio/netty/channel/ChannelPromise;Ljava/lang/Object;Z)Z
      79: pop
      80: aload_1
      81: areturn

  private void invokeDisconnect(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          33
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
      14: aload_0
      15: aload_1
      16: invokeinterface #129,  3          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.disconnect:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      21: goto          39
      24: astore_2
      25: aload_2
      26: aload_1
      27: invokestatic  #120                // Method notifyOutboundHandlerException:(Ljava/lang/Throwable;Lio/netty/channel/ChannelPromise;)V
      30: goto          39
      33: aload_0
      34: aload_1
      35: invokevirtual #109                // Method disconnect:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      38: pop
      39: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Throwable

  public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #113                // Method isNotValidPromise:(Lio/netty/channel/ChannelPromise;Z)Z
       6: ifeq          11
       9: aload_1
      10: areturn
      11: aload_0
      12: sipush        4096
      15: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
      18: astore_2
      19: aload_2
      20: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      23: astore_3
      24: aload_3
      25: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      30: ifeq          41
      33: aload_2
      34: aload_1
      35: invokespecial #8                  // Method invokeClose:(Lio/netty/channel/ChannelPromise;)V
      38: goto          59
      41: aload_3
      42: new           #130                // class io/netty/channel/AbstractChannelHandlerContext$11
      45: dup
      46: aload_0
      47: aload_2
      48: aload_1
      49: invokespecial #131                // Method io/netty/channel/AbstractChannelHandlerContext$11."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      52: aload_1
      53: aconst_null
      54: iconst_0
      55: invokestatic  #117                // Method safeExecute:(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Runnable;Lio/netty/channel/ChannelPromise;Ljava/lang/Object;Z)Z
      58: pop
      59: aload_1
      60: areturn

  private void invokeClose(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          33
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
      14: aload_0
      15: aload_1
      16: invokeinterface #132,  3          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.close:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      21: goto          39
      24: astore_2
      25: aload_2
      26: aload_1
      27: invokestatic  #120                // Method notifyOutboundHandlerException:(Ljava/lang/Throwable;Lio/netty/channel/ChannelPromise;)V
      30: goto          39
      33: aload_0
      34: aload_1
      35: invokevirtual #110                // Method close:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      38: pop
      39: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Throwable

  public io.netty.channel.ChannelFuture deregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #113                // Method isNotValidPromise:(Lio/netty/channel/ChannelPromise;Z)Z
       6: ifeq          11
       9: aload_1
      10: areturn
      11: aload_0
      12: sipush        8192
      15: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
      18: astore_2
      19: aload_2
      20: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      23: astore_3
      24: aload_3
      25: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      30: ifeq          41
      33: aload_2
      34: aload_1
      35: invokespecial #7                  // Method invokeDeregister:(Lio/netty/channel/ChannelPromise;)V
      38: goto          59
      41: aload_3
      42: new           #133                // class io/netty/channel/AbstractChannelHandlerContext$12
      45: dup
      46: aload_0
      47: aload_2
      48: aload_1
      49: invokespecial #134                // Method io/netty/channel/AbstractChannelHandlerContext$12."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      52: aload_1
      53: aconst_null
      54: iconst_0
      55: invokestatic  #117                // Method safeExecute:(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Runnable;Lio/netty/channel/ChannelPromise;Ljava/lang/Object;Z)Z
      58: pop
      59: aload_1
      60: areturn

  private void invokeDeregister(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          33
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
      14: aload_0
      15: aload_1
      16: invokeinterface #135,  3          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.deregister:(Lio/netty/channel/ChannelHandlerContext;Lio/netty/channel/ChannelPromise;)V
      21: goto          39
      24: astore_2
      25: aload_2
      26: aload_1
      27: invokestatic  #120                // Method notifyOutboundHandlerException:(Ljava/lang/Throwable;Lio/netty/channel/ChannelPromise;)V
      30: goto          39
      33: aload_0
      34: aload_1
      35: invokevirtual #111                // Method deregister:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      38: pop
      39: return
    Exception table:
       from    to  target type
           7    21    24   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext read();
    Code:
       0: aload_0
       1: sipush        16384
       4: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       7: astore_1
       8: aload_1
       9: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      12: astore_2
      13: aload_2
      14: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      19: ifeq          29
      22: aload_1
      23: invokespecial #4                  // Method invokeRead:()V
      26: goto          62
      29: aload_1
      30: getfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      33: astore_3
      34: aload_3
      35: ifnonnull     52
      38: aload_1
      39: new           #96                 // class io/netty/channel/AbstractChannelHandlerContext$Tasks
      42: dup
      43: aload_1
      44: invokespecial #97                 // Method io/netty/channel/AbstractChannelHandlerContext$Tasks."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      47: dup
      48: astore_3
      49: putfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      52: aload_2
      53: aload_3
      54: invokestatic  #136                // Method io/netty/channel/AbstractChannelHandlerContext$Tasks.access$1400:(Lio/netty/channel/AbstractChannelHandlerContext$Tasks;)Ljava/lang/Runnable;
      57: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      62: aload_0
      63: areturn

  private void invokeRead();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          32
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
      14: aload_0
      15: invokeinterface #137,  2          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.read:(Lio/netty/channel/ChannelHandlerContext;)V
      20: goto          37
      23: astore_1
      24: aload_0
      25: aload_1
      26: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      29: goto          37
      32: aload_0
      33: invokevirtual #138                // Method read:()Lio/netty/channel/ChannelHandlerContext;
      36: pop
      37: return
    Exception table:
       from    to  target type
           7    20    23   Class java/lang/Throwable

  public io.netty.channel.ChannelFuture write(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       6: invokevirtual #139                // Method write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  public io.netty.channel.ChannelFuture write(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_2
       4: invokespecial #140                // Method write:(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V
       7: aload_2
       8: areturn

  void invokeWrite(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #141                // Method invokeWrite0:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      13: goto          23
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #139                // Method write:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      22: pop
      23: return

  private void invokeWrite0(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
       4: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokeinterface #142,  4          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.write:(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      15: goto          24
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokestatic  #120                // Method notifyOutboundHandlerException:(Ljava/lang/Throwable;Lio/netty/channel/ChannelPromise;)V
      24: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/Throwable

  public io.netty.channel.ChannelHandlerContext flush();
    Code:
       0: aload_0
       1: ldc           #143                // int 65536
       3: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
       6: astore_1
       7: aload_1
       8: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      11: astore_2
      12: aload_2
      13: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifeq          28
      21: aload_1
      22: invokespecial #2                  // Method invokeFlush:()V
      25: goto          71
      28: aload_1
      29: getfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      32: astore_3
      33: aload_3
      34: ifnonnull     51
      37: aload_1
      38: new           #96                 // class io/netty/channel/AbstractChannelHandlerContext$Tasks
      41: dup
      42: aload_1
      43: invokespecial #97                 // Method io/netty/channel/AbstractChannelHandlerContext$Tasks."<init>":(Lio/netty/channel/AbstractChannelHandlerContext;)V
      46: dup
      47: astore_3
      48: putfield      #95                 // Field invokeTasks:Lio/netty/channel/AbstractChannelHandlerContext$Tasks;
      51: aload_2
      52: aload_3
      53: invokestatic  #144                // Method io/netty/channel/AbstractChannelHandlerContext$Tasks.access$1500:(Lio/netty/channel/AbstractChannelHandlerContext$Tasks;)Ljava/lang/Runnable;
      56: aload_0
      57: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
      60: invokeinterface #145,  1          // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
      65: aconst_null
      66: iconst_0
      67: invokestatic  #117                // Method safeExecute:(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Runnable;Lio/netty/channel/ChannelPromise;Ljava/lang/Object;Z)Z
      70: pop
      71: aload_0
      72: areturn

  private void invokeFlush();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          14
       7: aload_0
       8: invokespecial #146                // Method invokeFlush0:()V
      11: goto          19
      14: aload_0
      15: invokevirtual #147                // Method flush:()Lio/netty/channel/ChannelHandlerContext;
      18: pop
      19: return

  private void invokeFlush0();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
       4: checkcast     #118                // class io/netty/channel/ChannelOutboundHandler
       7: aload_0
       8: invokeinterface #148,  2          // InterfaceMethod io/netty/channel/ChannelOutboundHandler.flush:(Lio/netty/channel/ChannelHandlerContext;)V
      13: goto          22
      16: astore_1
      17: aload_0
      18: aload_1
      19: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
      22: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/Throwable

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: aload_2
       4: invokespecial #140                // Method write:(Ljava/lang/Object;ZLio/netty/channel/ChannelPromise;)V
       7: aload_2
       8: areturn

  void invokeWriteAndFlush(java.lang.Object, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokespecial #43                 // Method invokeHandler:()Z
       4: ifeq          20
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokespecial #141                // Method invokeWrite0:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      13: aload_0
      14: invokespecial #146                // Method invokeFlush0:()V
      17: goto          27
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokevirtual #149                // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      26: pop
      27: return

  private void write(java.lang.Object, boolean, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ldc           #88                 // String msg
       3: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_3
       9: iconst_1
      10: invokespecial #113                // Method isNotValidPromise:(Lio/netty/channel/ChannelPromise;Z)Z
      13: ifeq          22
      16: aload_1
      17: invokestatic  #150                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      20: pop
      21: return
      22: goto          35
      25: astore        4
      27: aload_1
      28: invokestatic  #150                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      31: pop
      32: aload         4
      34: athrow
      35: aload_0
      36: iload_2
      37: ifeq          45
      40: ldc           #152                // int 98304
      42: goto          47
      45: ldc           #153                // int 32768
      47: invokespecial #114                // Method findContextOutbound:(I)Lio/netty/channel/AbstractChannelHandlerContext;
      50: astore        4
      52: aload_0
      53: getfield      #6                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
      56: aload_1
      57: aload         4
      59: invokevirtual #89                 // Method io/netty/channel/DefaultChannelPipeline.touch:(Ljava/lang/Object;Lio/netty/channel/AbstractChannelHandlerContext;)Ljava/lang/Object;
      62: astore        5
      64: aload         4
      66: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      69: astore        6
      71: aload         6
      73: invokeinterface #39,  1           // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      78: ifeq          107
      81: iload_2
      82: ifeq          96
      85: aload         4
      87: aload         5
      89: aload_3
      90: invokevirtual #154                // Method invokeWriteAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
      93: goto          145
      96: aload         4
      98: aload         5
     100: aload_3
     101: invokevirtual #155                // Method invokeWrite:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V
     104: goto          145
     107: aload         4
     109: aload         5
     111: aload_3
     112: iload_2
     113: invokestatic  #156                // Method io/netty/channel/AbstractChannelHandlerContext$WriteTask.newInstance:(Lio/netty/channel/AbstractChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;Z)Lio/netty/channel/AbstractChannelHandlerContext$WriteTask;
     116: astore        7
     118: aload         6
     120: aload         7
     122: aload_3
     123: aload         5
     125: iload_2
     126: ifne          133
     129: iconst_1
     130: goto          134
     133: iconst_0
     134: invokestatic  #117                // Method safeExecute:(Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Runnable;Lio/netty/channel/ChannelPromise;Ljava/lang/Object;Z)Z
     137: ifne          145
     140: aload         7
     142: invokevirtual #157                // Method io/netty/channel/AbstractChannelHandlerContext$WriteTask.cancel:()V
     145: return
    Exception table:
       from    to  target type
           7    21    25   Class java/lang/RuntimeException

  public io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #105                // Method newPromise:()Lio/netty/channel/ChannelPromise;
       6: invokevirtual #149                // Method writeAndFlush:(Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       9: areturn

  private static void notifyOutboundHandlerException(java.lang.Throwable, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: instanceof    #158                // class io/netty/channel/VoidChannelPromise
       6: ifeq          13
       9: aconst_null
      10: goto          16
      13: getstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      16: invokestatic  #159                // Method io/netty/util/internal/PromiseNotificationUtil.tryFailure:(Lio/netty/util/concurrent/Promise;Ljava/lang/Throwable;Lio/netty/util/internal/logging/InternalLogger;)V
      19: return

  public io.netty.channel.ChannelPromise newPromise();
    Code:
       0: new           #160                // class io/netty/channel/DefaultChannelPromise
       3: dup
       4: aload_0
       5: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       8: aload_0
       9: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      12: invokespecial #161                // Method io/netty/channel/DefaultChannelPromise."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;)V
      15: areturn

  public io.netty.channel.ChannelProgressivePromise newProgressivePromise();
    Code:
       0: new           #162                // class io/netty/channel/DefaultChannelProgressivePromise
       3: dup
       4: aload_0
       5: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       8: aload_0
       9: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      12: invokespecial #163                // Method io/netty/channel/DefaultChannelProgressivePromise."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;)V
      15: areturn

  public io.netty.channel.ChannelFuture newSucceededFuture();
    Code:
       0: aload_0
       1: getfield      #164                // Field succeededFuture:Lio/netty/channel/ChannelFuture;
       4: astore_1
       5: aload_1
       6: ifnonnull     30
       9: aload_0
      10: new           #165                // class io/netty/channel/SucceededChannelFuture
      13: dup
      14: aload_0
      15: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
      18: aload_0
      19: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      22: invokespecial #166                // Method io/netty/channel/SucceededChannelFuture."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;)V
      25: dup
      26: astore_1
      27: putfield      #164                // Field succeededFuture:Lio/netty/channel/ChannelFuture;
      30: aload_1
      31: areturn

  public io.netty.channel.ChannelFuture newFailedFuture(java.lang.Throwable);
    Code:
       0: new           #167                // class io/netty/channel/FailedChannelFuture
       3: dup
       4: aload_0
       5: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       8: aload_0
       9: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      12: aload_1
      13: invokespecial #168                // Method io/netty/channel/FailedChannelFuture."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;Ljava/lang/Throwable;)V
      16: areturn

  private boolean isNotValidPromise(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: ldc           #169                // String promise
       3: invokestatic  #23                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokeinterface #170,  1          // InterfaceMethod io/netty/channel/ChannelPromise.isDone:()Z
      13: ifeq          54
      16: aload_1
      17: invokeinterface #171,  1          // InterfaceMethod io/netty/channel/ChannelPromise.isCancelled:()Z
      22: ifeq          27
      25: iconst_1
      26: ireturn
      27: new           #172                // class java/lang/IllegalArgumentException
      30: dup
      31: new           #173                // class java/lang/StringBuilder
      34: dup
      35: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #175                // String promise already done:
      40: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: invokespecial #179                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_1
      55: invokeinterface #180,  1          // InterfaceMethod io/netty/channel/ChannelPromise.channel:()Lio/netty/channel/Channel;
      60: aload_0
      61: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
      64: if_acmpeq     100
      67: new           #172                // class java/lang/IllegalArgumentException
      70: dup
      71: ldc           #181                // String promise.channel does not match: %s (expected: %s)
      73: iconst_2
      74: anewarray     #182                // class java/lang/Object
      77: dup
      78: iconst_0
      79: aload_1
      80: invokeinterface #180,  1          // InterfaceMethod io/netty/channel/ChannelPromise.channel:()Lio/netty/channel/Channel;
      85: aastore
      86: dup
      87: iconst_1
      88: aload_0
      89: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
      92: aastore
      93: invokestatic  #183                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      96: invokespecial #179                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_1
     101: invokevirtual #184                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     104: ldc           #160                // class io/netty/channel/DefaultChannelPromise
     106: if_acmpne     111
     109: iconst_0
     110: ireturn
     111: iload_2
     112: ifne          153
     115: aload_1
     116: instanceof    #158                // class io/netty/channel/VoidChannelPromise
     119: ifeq          153
     122: new           #172                // class java/lang/IllegalArgumentException
     125: dup
     126: new           #173                // class java/lang/StringBuilder
     129: dup
     130: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
     133: ldc           #158                // class io/netty/channel/VoidChannelPromise
     135: invokestatic  #185                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
     138: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #186                // String  not allowed for this operation
     143: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokespecial #179                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: aload_1
     154: instanceof    #187                // class io/netty/channel/AbstractChannel$CloseFuture
     157: ifeq          191
     160: new           #172                // class java/lang/IllegalArgumentException
     163: dup
     164: new           #173                // class java/lang/StringBuilder
     167: dup
     168: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #187                // class io/netty/channel/AbstractChannel$CloseFuture
     173: invokestatic  #185                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
     176: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: ldc           #188                // String  not allowed in a pipeline
     181: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     187: invokespecial #179                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     190: athrow
     191: iconst_0
     192: ireturn

  private io.netty.channel.AbstractChannelHandlerContext findContextInbound(int);
    Code:
       0: aload_0
       1: astore_2
       2: aload_0
       3: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       6: astore_3
       7: aload_2
       8: getfield      #189                // Field next:Lio/netty/channel/AbstractChannelHandlerContext;
      11: astore_2
      12: aload_2
      13: aload_3
      14: iload_1
      15: sipush        510
      18: invokestatic  #190                // Method skipContext:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/util/concurrent/EventExecutor;II)Z
      21: ifne          7
      24: aload_2
      25: areturn

  private io.netty.channel.AbstractChannelHandlerContext findContextOutbound(int);
    Code:
       0: aload_0
       1: astore_2
       2: aload_0
       3: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
       6: astore_3
       7: aload_2
       8: getfield      #191                // Field prev:Lio/netty/channel/AbstractChannelHandlerContext;
      11: astore_2
      12: aload_2
      13: aload_3
      14: iload_1
      15: ldc           #192                // int 130560
      17: invokestatic  #190                // Method skipContext:(Lio/netty/channel/AbstractChannelHandlerContext;Lio/netty/util/concurrent/EventExecutor;II)Z
      20: ifne          7
      23: aload_2
      24: areturn

  private static boolean skipContext(io.netty.channel.AbstractChannelHandlerContext, io.netty.util.concurrent.EventExecutor, int, int);
    Code:
       0: aload_0
       1: getfield      #28                 // Field executionMask:I
       4: iload_3
       5: iload_2
       6: ior
       7: iand
       8: ifeq          28
      11: aload_0
      12: invokevirtual #38                 // Method executor:()Lio/netty/util/concurrent/EventExecutor;
      15: aload_1
      16: if_acmpne     32
      19: aload_0
      20: getfield      #28                 // Field executionMask:I
      23: iload_2
      24: iand
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public io.netty.channel.ChannelPromise voidPromise();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       4: invokeinterface #145,  1          // InterfaceMethod io/netty/channel/Channel.voidPromise:()Lio/netty/channel/ChannelPromise;
       9: areturn

  final void setRemoved();
    Code:
       0: aload_0
       1: iconst_3
       2: putfield      #21                 // Field handlerState:I
       5: return

  final boolean setAddComplete();
    Code:
       0: aload_0
       1: getfield      #21                 // Field handlerState:I
       4: istore_1
       5: iload_1
       6: iconst_3
       7: if_icmpne     12
      10: iconst_0
      11: ireturn
      12: getstatic     #193                // Field HANDLER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      15: aload_0
      16: iload_1
      17: iconst_2
      18: invokevirtual #194                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: goto          0

  final void setAddPending();
    Code:
       0: getstatic     #193                // Field HANDLER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #194                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: istore_1
      10: getstatic     #195                // Field $assertionsDisabled:Z
      13: ifne          28
      16: iload_1
      17: ifne          28
      20: new           #196                // class java/lang/AssertionError
      23: dup
      24: invokespecial #197                // Method java/lang/AssertionError."<init>":()V
      27: athrow
      28: return

  final void callHandlerAdded() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #198                // Method setAddComplete:()Z
       4: ifeq          17
       7: aload_0
       8: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      11: aload_0
      12: invokeinterface #199,  2          // InterfaceMethod io/netty/channel/ChannelHandler.handlerAdded:(Lio/netty/channel/ChannelHandlerContext;)V
      17: return

  final void callHandlerRemoved() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #21                 // Field handlerState:I
       4: iconst_2
       5: if_icmpne     18
       8: aload_0
       9: invokevirtual #44                 // Method handler:()Lio/netty/channel/ChannelHandler;
      12: aload_0
      13: invokeinterface #200,  2          // InterfaceMethod io/netty/channel/ChannelHandler.handlerRemoved:(Lio/netty/channel/ChannelHandlerContext;)V
      18: aload_0
      19: invokevirtual #201                // Method setRemoved:()V
      22: goto          32
      25: astore_1
      26: aload_0
      27: invokevirtual #201                // Method setRemoved:()V
      30: aload_1
      31: athrow
      32: return
    Exception table:
       from    to  target type
           0    18    25   any

  private boolean invokeHandler();
    Code:
       0: aload_0
       1: getfield      #21                 // Field handlerState:I
       4: istore_1
       5: iload_1
       6: iconst_2
       7: if_icmpeq     22
      10: aload_0
      11: getfield      #30                 // Field ordered:Z
      14: ifne          26
      17: iload_1
      18: iconst_1
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isRemoved();
    Code:
       0: aload_0
       1: getfield      #21                 // Field handlerState:I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public <T> io.netty.util.Attribute<T> attr(io.netty.util.AttributeKey<T>);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       4: aload_1
       5: invokeinterface #202,  2          // InterfaceMethod io/netty/channel/Channel.attr:(Lio/netty/util/AttributeKey;)Lio/netty/util/Attribute;
      10: areturn

  public <T> boolean hasAttr(io.netty.util.AttributeKey<T>);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
       4: aload_1
       5: invokeinterface #203,  2          // InterfaceMethod io/netty/channel/Channel.hasAttr:(Lio/netty/util/AttributeKey;)Z
      10: ireturn

  private static boolean safeExecute(io.netty.util.concurrent.EventExecutor, java.lang.Runnable, io.netty.channel.ChannelPromise, java.lang.Object, boolean);
    Code:
       0: iload         4
       2: ifeq          23
       5: aload_0
       6: instanceof    #204                // class io/netty/util/concurrent/AbstractEventExecutor
       9: ifeq          23
      12: aload_0
      13: checkcast     #204                // class io/netty/util/concurrent/AbstractEventExecutor
      16: aload_1
      17: invokevirtual #205                // Method io/netty/util/concurrent/AbstractEventExecutor.lazyExecute:(Ljava/lang/Runnable;)V
      20: goto          30
      23: aload_0
      24: aload_1
      25: invokeinterface #42,  2           // InterfaceMethod io/netty/util/concurrent/EventExecutor.execute:(Ljava/lang/Runnable;)V
      30: iconst_1
      31: ireturn
      32: astore        5
      34: aload_3
      35: ifnull        43
      38: aload_3
      39: invokestatic  #150                // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      42: pop
      43: aload_2
      44: aload         5
      46: invokeinterface #206,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      51: pop
      52: goto          69
      55: astore        6
      57: aload_2
      58: aload         5
      60: invokeinterface #206,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      65: pop
      66: aload         6
      68: athrow
      69: iconst_0
      70: ireturn
    Exception table:
       from    to  target type
           0    31    32   Class java/lang/Throwable
          34    43    55   any
          55    57    55   any

  public java.lang.String toHintString();
    Code:
       0: new           #173                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
       7: bipush        39
       9: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #25                 // Field name:Ljava/lang/String;
      16: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #208                // String \' will handle the message from this point.
      21: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public java.lang.String toString();
    Code:
       0: new           #173                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #174                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #209                // class io/netty/channel/ChannelHandlerContext
       9: invokestatic  #185                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      12: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: bipush        40
      17: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      20: aload_0
      21: getfield      #25                 // Field name:Ljava/lang/String;
      24: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #210                // String ,
      29: invokevirtual #176                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #32                 // Method channel:()Lio/netty/channel/Channel;
      36: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: bipush        41
      41: invokevirtual #207                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      44: invokevirtual #178                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelWritabilityChanged();
    Code:
       0: aload_0
       1: invokevirtual #104                // Method fireChannelWritabilityChanged:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelReadComplete();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method fireChannelReadComplete:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelRead(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireUserEventTriggered(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #86                 // Method fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelHandlerContext;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireExceptionCaught(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #80                 // Method fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelHandlerContext;
       5: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelInactive();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method fireChannelInactive:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelActive();
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method fireChannelActive:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelUnregistered();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method fireChannelUnregistered:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelInboundInvoker fireChannelRegistered();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method fireChannelRegistered:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker flush();
    Code:
       0: aload_0
       1: invokevirtual #147                // Method flush:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  public io.netty.channel.ChannelOutboundInvoker read();
    Code:
       0: aload_0
       1: invokevirtual #138                // Method read:()Lio/netty/channel/ChannelHandlerContext;
       4: areturn

  static void access$000(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method invokeChannelRegistered:()V
       4: return

  static void access$100(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method invokeChannelUnregistered:()V
       4: return

  static void access$200(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method invokeChannelActive:()V
       4: return

  static void access$300(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method invokeChannelInactive:()V
       4: return

  static void access$400(io.netty.channel.AbstractChannelHandlerContext, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method invokeExceptionCaught:(Ljava/lang/Throwable;)V
       5: return

  static void access$500(io.netty.channel.AbstractChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method invokeUserEventTriggered:(Ljava/lang/Object;)V
       5: return

  static void access$600(io.netty.channel.AbstractChannelHandlerContext, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method invokeChannelRead:(Ljava/lang/Object;)V
       5: return

  static void access$900(io.netty.channel.AbstractChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #11                 // Method invokeBind:(Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
       6: return

  static void access$1000(io.netty.channel.AbstractChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #10                 // Method invokeConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;Lio/netty/channel/ChannelPromise;)V
       7: return

  static void access$1100(io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method invokeDisconnect:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$1200(io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method invokeClose:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$1300(io.netty.channel.AbstractChannelHandlerContext, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method invokeDeregister:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static io.netty.channel.DefaultChannelPipeline access$1700(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: getfield      #6                  // Field pipeline:Lio/netty/channel/DefaultChannelPipeline;
       4: areturn

  static void access$1900(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method invokeChannelReadComplete:()V
       4: return

  static void access$2000(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method invokeRead:()V
       4: return

  static void access$2100(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method invokeChannelWritabilityChanged:()V
       4: return

  static void access$2200(io.netty.channel.AbstractChannelHandlerContext);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method invokeFlush:()V
       4: return

  static {};
    Code:
       0: ldc           #20                 // class io/netty/channel/AbstractChannelHandlerContext
       2: invokevirtual #211                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #195                // Field $assertionsDisabled:Z
      16: ldc           #20                 // class io/netty/channel/AbstractChannelHandlerContext
      18: invokestatic  #212                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #68                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: ldc           #20                 // class io/netty/channel/AbstractChannelHandlerContext
      26: ldc           #213                // String handlerState
      28: invokestatic  #214                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      31: putstatic     #193                // Field HANDLER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      34: return
}
