Compiled from "EpollDomainSocketChannelConfig.java"
public final class io.netty.channel.epoll.EpollDomainSocketChannelConfig extends io.netty.channel.epoll.EpollChannelConfig implements io.netty.channel.unix.DomainSocketChannelConfig,io.netty.channel.socket.DuplexChannelConfig {
  private volatile io.netty.channel.unix.DomainSocketReadMode mode;

  private volatile boolean allowHalfClosure;

  io.netty.channel.epoll.EpollDomainSocketChannelConfig(io.netty.channel.epoll.AbstractEpollChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/epoll/EpollChannelConfig."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
       5: aload_0
       6: getstatic     #2                  // Field io/netty/channel/unix/DomainSocketReadMode.BYTES:Lio/netty/channel/unix/DomainSocketReadMode;
       9: putfield      #3                  // Field mode:Lio/netty/channel/unix/DomainSocketReadMode;
      12: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #4                  // Method io/netty/channel/epoll/EpollChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_4
       6: anewarray     #5                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #6                  // Field io/netty/channel/unix/UnixChannelOption.DOMAIN_SOCKET_READ_MODE:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #7                  // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      20: aastore
      21: dup
      22: iconst_2
      23: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      26: aastore
      27: dup
      28: iconst_3
      29: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      32: aastore
      33: invokevirtual #10                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      36: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field io/netty/channel/unix/UnixChannelOption.DOMAIN_SOCKET_READ_MODE:Lio/netty/channel/ChannelOption;
       4: if_acmpne     12
       7: aload_0
       8: invokevirtual #11                 // Method getReadMode:()Lio/netty/channel/unix/DomainSocketReadMode;
      11: areturn
      12: aload_1
      13: getstatic     #7                  // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      16: if_acmpne     27
      19: aload_0
      20: invokevirtual #12                 // Method isAllowHalfClosure:()Z
      23: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      31: if_acmpne     42
      34: aload_0
      35: invokevirtual #14                 // Method getSendBufferSize:()I
      38: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: areturn
      42: aload_1
      43: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      46: if_acmpne     57
      49: aload_0
      50: invokevirtual #16                 // Method getReceiveBufferSize:()I
      53: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: areturn
      57: aload_0
      58: aload_1
      59: invokespecial #17                 // Method io/netty/channel/epoll/EpollChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      62: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #18                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #6                  // Field io/netty/channel/unix/UnixChannelOption.DOMAIN_SOCKET_READ_MODE:Lio/netty/channel/ChannelOption;
      10: if_acmpne     25
      13: aload_0
      14: aload_2
      15: checkcast     #19                 // class io/netty/channel/unix/DomainSocketReadMode
      18: invokevirtual #20                 // Method setReadMode:(Lio/netty/channel/unix/DomainSocketReadMode;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
      21: pop
      22: goto          98
      25: aload_1
      26: getstatic     #7                  // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      29: if_acmpne     47
      32: aload_0
      33: aload_2
      34: checkcast     #21                 // class java/lang/Boolean
      37: invokevirtual #22                 // Method java/lang/Boolean.booleanValue:()Z
      40: invokevirtual #23                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
      43: pop
      44: goto          98
      47: aload_1
      48: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      51: if_acmpne     69
      54: aload_0
      55: aload_2
      56: checkcast     #24                 // class java/lang/Integer
      59: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      62: invokevirtual #26                 // Method setSendBufferSize:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
      65: pop
      66: goto          98
      69: aload_1
      70: getstatic     #9                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      73: if_acmpne     91
      76: aload_0
      77: aload_2
      78: checkcast     #24                 // class java/lang/Integer
      81: invokevirtual #25                 // Method java/lang/Integer.intValue:()I
      84: invokevirtual #27                 // Method setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
      87: pop
      88: goto          98
      91: aload_0
      92: aload_1
      93: aload_2
      94: invokespecial #28                 // Method io/netty/channel/epoll/EpollChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      97: ireturn
      98: iconst_1
      99: ireturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #29                 // Method io/netty/channel/epoll/EpollChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #30                 // Method io/netty/channel/epoll/EpollChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #31                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #32                 // Method io/netty/channel/epoll/EpollChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #33                 // Method io/netty/channel/epoll/EpollChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #34                 // Method io/netty/channel/epoll/EpollChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method io/netty/channel/epoll/EpollChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #36                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #37                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #39                 // Method io/netty/channel/epoll/EpollChannelConfig.setAutoRead:(Z)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #40                 // Method io/netty/channel/epoll/EpollChannelConfig.setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setReadMode(io.netty.channel.unix.DomainSocketReadMode);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #41                 // String mode
       4: invokestatic  #42                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #19                 // class io/netty/channel/unix/DomainSocketReadMode
      10: putfield      #3                  // Field mode:Lio/netty/channel/unix/DomainSocketReadMode;
      13: aload_0
      14: areturn

  public io.netty.channel.unix.DomainSocketReadMode getReadMode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mode:Lio/netty/channel/unix/DomainSocketReadMode;
       4: areturn

  public boolean isAllowHalfClosure();
    Code:
       0: aload_0
       1: getfield      #43                 // Field allowHalfClosure:Z
       4: ireturn

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #43                 // Field allowHalfClosure:Z
       5: aload_0
       6: areturn

  public int getSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #44                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #45                 // class io/netty/channel/epoll/EpollDomainSocketChannel
       7: getfield      #46                 // Field io/netty/channel/epoll/EpollDomainSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #47                 // Method io/netty/channel/epoll/LinuxSocket.getSendBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #49                 // class java/lang/RuntimeException
      18: dup
      19: aload_1
      20: invokespecial #50                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #44                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #45                 // class io/netty/channel/epoll/EpollDomainSocketChannel
       7: getfield      #46                 // Field io/netty/channel/epoll/EpollDomainSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #51                 // Method io/netty/channel/epoll/LinuxSocket.setSendBufferSize:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #49                 // class java/lang/RuntimeException
      20: dup
      21: aload_2
      22: invokespecial #50                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #44                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #45                 // class io/netty/channel/epoll/EpollDomainSocketChannel
       7: getfield      #46                 // Field io/netty/channel/epoll/EpollDomainSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #52                 // Method io/netty/channel/epoll/LinuxSocket.getReceiveBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #49                 // class java/lang/RuntimeException
      18: dup
      19: aload_1
      20: invokespecial #50                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollDomainSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #44                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #45                 // class io/netty/channel/epoll/EpollDomainSocketChannel
       7: getfield      #46                 // Field io/netty/channel/epoll/EpollDomainSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #53                 // Method io/netty/channel/epoll/LinuxSocket.setReceiveBufferSize:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #49                 // class java/lang/RuntimeException
      20: dup
      21: aload_2
      22: invokespecial #50                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #54                 // Method setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setReadMode(io.netty.channel.unix.DomainSocketReadMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method setReadMode:(Lio/netty/channel/unix/DomainSocketReadMode;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #64                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #56                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #62                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #23                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/epoll/EpollDomainSocketChannelConfig;
       5: areturn
}
