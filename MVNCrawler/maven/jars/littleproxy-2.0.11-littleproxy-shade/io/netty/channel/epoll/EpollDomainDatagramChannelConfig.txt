Compiled from "EpollDomainDatagramChannelConfig.java"
public final class io.netty.channel.epoll.EpollDomainDatagramChannelConfig extends io.netty.channel.epoll.EpollChannelConfig implements io.netty.channel.unix.DomainDatagramChannelConfig {
  private static final io.netty.channel.RecvByteBufAllocator DEFAULT_RCVBUF_ALLOCATOR;

  private boolean activeOnOpen;

  io.netty.channel.epoll.EpollDomainDatagramChannelConfig(io.netty.channel.epoll.EpollDomainDatagramChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/epoll/EpollChannelConfig."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
       5: aload_0
       6: getstatic     #2                  // Field DEFAULT_RCVBUF_ALLOCATOR:Lio/netty/channel/RecvByteBufAllocator;
       9: invokevirtual #3                  // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
      12: pop
      13: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #4                  // Method io/netty/channel/epoll/EpollChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_2
       6: anewarray     #5                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #6                  // Field io/netty/channel/ChannelOption.DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      20: aastore
      21: invokevirtual #8                  // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      24: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field io/netty/channel/ChannelOption.DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #9                  // Field activeOnOpen:Z
      11: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #11                 // Method getSendBufferSize:()I
      26: invokestatic  #12                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: areturn
      30: aload_0
      31: aload_1
      32: invokespecial #13                 // Method io/netty/channel/epoll/EpollChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      35: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #14                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #6                  // Field io/netty/channel/ChannelOption.DATAGRAM_CHANNEL_ACTIVE_ON_REGISTRATION:Lio/netty/channel/ChannelOption;
      10: if_acmpne     27
      13: aload_0
      14: aload_2
      15: checkcast     #15                 // class java/lang/Boolean
      18: invokevirtual #16                 // Method java/lang/Boolean.booleanValue:()Z
      21: invokespecial #17                 // Method setActiveOnOpen:(Z)V
      24: goto          56
      27: aload_1
      28: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      31: if_acmpne     49
      34: aload_0
      35: aload_2
      36: checkcast     #18                 // class java/lang/Integer
      39: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      42: invokevirtual #20                 // Method setSendBufferSize:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
      45: pop
      46: goto          56
      49: aload_0
      50: aload_1
      51: aload_2
      52: invokespecial #21                 // Method io/netty/channel/epoll/EpollChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      55: ireturn
      56: iconst_1
      57: ireturn

  private void setActiveOnOpen(boolean);
    Code:
       0: aload_0
       1: getfield      #22                 // Field channel:Lio/netty/channel/Channel;
       4: invokeinterface #23,  1           // InterfaceMethod io/netty/channel/Channel.isRegistered:()Z
       9: ifeq          22
      12: new           #24                 // class java/lang/IllegalStateException
      15: dup
      16: ldc           #25                 // String Can only changed before channel was registered
      18: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: iload_1
      24: putfield      #9                  // Field activeOnOpen:Z
      27: return

  boolean getActiveOnOpen();
    Code:
       0: aload_0
       1: getfield      #9                  // Field activeOnOpen:Z
       4: ireturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method io/netty/channel/epoll/EpollChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #28                 // Method io/netty/channel/epoll/EpollChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #29                 // Method io/netty/channel/epoll/EpollChannelConfig.setAutoRead:(Z)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #30                 // Method io/netty/channel/epoll/EpollChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #31                 // Method io/netty/channel/epoll/EpollChannelConfig.setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #32                 // Method io/netty/channel/epoll/EpollChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setMaxMessagesPerWrite(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #33                 // Method io/netty/channel/epoll/EpollChannelConfig.setMaxMessagesPerWrite:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method io/netty/channel/epoll/EpollChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #35                 // Method io/netty/channel/epoll/EpollChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #22                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #36                 // class io/netty/channel/epoll/EpollDomainDatagramChannel
       7: getfield      #37                 // Field io/netty/channel/epoll/EpollDomainDatagramChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #38                 // Method io/netty/channel/epoll/LinuxSocket.setSendBufferSize:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #40                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #41                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public int getSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #36                 // class io/netty/channel/epoll/EpollDomainDatagramChannel
       7: getfield      #37                 // Field io/netty/channel/epoll/EpollDomainDatagramChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #42                 // Method io/netty/channel/epoll/LinuxSocket.getSendBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #40                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #41                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollDomainDatagramChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #44                 // Method io/netty/channel/epoll/EpollChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #50                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #50                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerWrite(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #54                 // Method setMaxMessagesPerWrite:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #50                 // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #20                 // Method setSendBufferSize:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #46                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  public io.netty.channel.unix.DomainDatagramChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollDomainDatagramChannelConfig;
       5: areturn

  static {};
    Code:
       0: new           #55                 // class io/netty/channel/FixedRecvByteBufAllocator
       3: dup
       4: sipush        2048
       7: invokespecial #56                 // Method io/netty/channel/FixedRecvByteBufAllocator."<init>":(I)V
      10: putstatic     #2                  // Field DEFAULT_RCVBUF_ALLOCATOR:Lio/netty/channel/RecvByteBufAllocator;
      13: return
}
