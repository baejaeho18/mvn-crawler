Compiled from "EpollDatagramChannel.java"
final class io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe extends io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe {
  static final boolean $assertionsDisabled;

  final io.netty.channel.epoll.EpollDatagramChannel this$0;

  io.netty.channel.epoll.EpollDatagramChannel$EpollDatagramChannelUnsafe(io.netty.channel.epoll.EpollDatagramChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
      10: return

  void epollInReady();
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      10: invokevirtual #4                  // Method io/netty/channel/epoll/EpollDatagramChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #6                  // class java/lang/AssertionError
      24: dup
      25: invokespecial #7                  // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      33: invokevirtual #8                  // Method io/netty/channel/epoll/EpollDatagramChannel.config:()Lio/netty/channel/epoll/EpollDatagramChannelConfig;
      36: astore_1
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      41: aload_1
      42: invokevirtual #9                  // Method io/netty/channel/epoll/EpollDatagramChannel.shouldBreakEpollInReady:(Lio/netty/channel/ChannelConfig;)Z
      45: ifeq          53
      48: aload_0
      49: invokevirtual #10                 // Method clearEpollIn0:()V
      52: return
      53: aload_0
      54: invokevirtual #11                 // Method recvBufAllocHandle:()Lio/netty/channel/epoll/EpollRecvByteAllocatorHandle;
      57: astore_2
      58: aload_2
      59: aload_0
      60: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      63: getstatic     #12                 // Field io/netty/channel/epoll/Native.EPOLLET:I
      66: invokevirtual #13                 // Method io/netty/channel/epoll/EpollDatagramChannel.isFlagSet:(I)Z
      69: invokevirtual #14                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.edgeTriggered:(Z)V
      72: aload_0
      73: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
      76: invokevirtual #15                 // Method io/netty/channel/epoll/EpollDatagramChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      79: astore_3
      80: aload_1
      81: invokevirtual #16                 // Method io/netty/channel/epoll/EpollDatagramChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      84: astore        4
      86: aload_2
      87: aload_1
      88: invokevirtual #17                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      91: aload_0
      92: invokevirtual #18                 // Method epollInBefore:()V
      95: aconst_null
      96: astore        5
      98: aload_0
      99: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     102: invokevirtual #19                 // Method io/netty/channel/epoll/EpollDatagramChannel.isConnected:()Z
     105: istore        6
     107: aload_0
     108: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     111: invokevirtual #8                  // Method io/netty/channel/epoll/EpollDatagramChannel.config:()Lio/netty/channel/epoll/EpollDatagramChannelConfig;
     114: invokevirtual #20                 // Method io/netty/channel/epoll/EpollDatagramChannelConfig.getMaxDatagramPayloadSize:()I
     117: istore        8
     119: aload_2
     120: aload         4
     122: invokevirtual #21                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
     125: astore        9
     127: getstatic     #22                 // Field io/netty/channel/epoll/Native.IS_SUPPORTING_RECVMMSG:Z
     130: ifeq          153
     133: iload         8
     135: ifne          142
     138: iconst_1
     139: goto          154
     142: aload         9
     144: invokevirtual #23                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
     147: iload         8
     149: idiv
     150: goto          154
     153: iconst_0
     154: istore        10
     156: iload         10
     158: iconst_1
     159: if_icmpgt     213
     162: iload         6
     164: ifeq          174
     167: aload_1
     168: invokevirtual #24                 // Method io/netty/channel/epoll/EpollDatagramChannelConfig.isUdpGro:()Z
     171: ifeq          196
     174: aload_0
     175: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     178: aload_2
     179: aload_0
     180: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     183: invokestatic  #25                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$200:(Lio/netty/channel/epoll/EpollDatagramChannel;)Lio/netty/channel/epoll/NativeDatagramPacketArray;
     186: aload         9
     188: invokestatic  #26                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$300:(Lio/netty/channel/epoll/EpollDatagramChannel;Lio/netty/channel/epoll/EpollRecvByteAllocatorHandle;Lio/netty/channel/epoll/NativeDatagramPacketArray;Lio/netty/buffer/ByteBuf;)Z
     191: istore        7
     193: goto          236
     196: aload_0
     197: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     200: aload_2
     201: aload         9
     203: iload         8
     205: invokestatic  #27                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$400:(Lio/netty/channel/epoll/EpollDatagramChannel;Lio/netty/channel/epoll/EpollRecvByteAllocatorHandle;Lio/netty/buffer/ByteBuf;I)Z
     208: istore        7
     210: goto          236
     213: aload_0
     214: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     217: aload_2
     218: aload_0
     219: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     222: invokestatic  #25                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$200:(Lio/netty/channel/epoll/EpollDatagramChannel;)Lio/netty/channel/epoll/NativeDatagramPacketArray;
     225: aload         9
     227: iload         8
     229: iload         10
     231: invokestatic  #28                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$500:(Lio/netty/channel/epoll/EpollDatagramChannel;Lio/netty/channel/epoll/EpollRecvByteAllocatorHandle;Lio/netty/channel/epoll/NativeDatagramPacketArray;Lio/netty/buffer/ByteBuf;II)Z
     234: istore        7
     236: goto          259
     239: astore        11
     241: iload         6
     243: ifeq          256
     246: aload_0
     247: getfield      #1                  // Field this$0:Lio/netty/channel/epoll/EpollDatagramChannel;
     250: aload         11
     252: invokestatic  #30                 // Method io/netty/channel/epoll/EpollDatagramChannel.access$600:(Lio/netty/channel/epoll/EpollDatagramChannel;Lio/netty/channel/unix/Errors$NativeIoException;)Ljava/io/IOException;
     255: athrow
     256: aload         11
     258: athrow
     259: iload         7
     261: ifeq          279
     264: aload_0
     265: iconst_0
     266: putfield      #31                 // Field readPending:Z
     269: aload_2
     270: getstatic     #32                 // Field io/netty/util/UncheckedBooleanSupplier.TRUE_SUPPLIER:Lio/netty/util/UncheckedBooleanSupplier;
     273: invokevirtual #33                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.continueReading:(Lio/netty/util/UncheckedBooleanSupplier;)Z
     276: ifne          107
     279: goto          288
     282: astore        6
     284: aload         6
     286: astore        5
     288: aload_2
     289: invokevirtual #35                 // Method io/netty/channel/epoll/EpollRecvByteAllocatorHandle.readComplete:()V
     292: aload_3
     293: invokeinterface #36,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     298: pop
     299: aload         5
     301: ifnull        313
     304: aload_3
     305: aload         5
     307: invokeinterface #37,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     312: pop
     313: aload_0
     314: aload_1
     315: invokevirtual #38                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     318: goto          331
     321: astore        12
     323: aload_0
     324: aload_1
     325: invokevirtual #38                 // Method epollInFinally:(Lio/netty/channel/ChannelConfig;)V
     328: aload         12
     330: athrow
     331: return
    Exception table:
       from    to  target type
         156   236   239   Class io/netty/channel/unix/Errors$NativeIoException
          98   279   282   Class java/lang/Throwable
          98   313   321   any
         321   323   321   any

  static {};
    Code:
       0: ldc           #39                 // class io/netty/channel/epoll/EpollDatagramChannel
       2: invokevirtual #40                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field $assertionsDisabled:Z
      16: return
}
