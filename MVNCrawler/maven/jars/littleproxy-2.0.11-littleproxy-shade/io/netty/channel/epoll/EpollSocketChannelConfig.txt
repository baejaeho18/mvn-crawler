Compiled from "EpollSocketChannelConfig.java"
public final class io.netty.channel.epoll.EpollSocketChannelConfig extends io.netty.channel.epoll.EpollChannelConfig implements io.netty.channel.socket.SocketChannelConfig {
  private volatile boolean allowHalfClosure;

  private volatile boolean tcpFastopen;

  io.netty.channel.epoll.EpollSocketChannelConfig(io.netty.channel.epoll.EpollSocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/epoll/EpollChannelConfig."<init>":(Lio/netty/channel/epoll/AbstractEpollChannel;)V
       5: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.canEnableTcpNoDelayByDefault:()Z
       8: ifeq          17
      11: aload_0
      12: iconst_1
      13: invokevirtual #3                  // Method setTcpNoDelay:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
      16: pop
      17: aload_0
      18: invokespecial #4                  // Method calculateMaxBytesPerGatheringWrite:()V
      21: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #5                  // Method io/netty/channel/epoll/EpollChannelConfig.getOptions:()Ljava/util/Map;
       5: bipush        18
       7: anewarray     #6                  // class io/netty/channel/ChannelOption
      10: dup
      11: iconst_0
      12: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      21: aastore
      22: dup
      23: iconst_2
      24: getstatic     #9                  // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      27: aastore
      28: dup
      29: iconst_3
      30: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      33: aastore
      34: dup
      35: iconst_4
      36: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      39: aastore
      40: dup
      41: iconst_5
      42: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
      45: aastore
      46: dup
      47: bipush        6
      49: getstatic     #13                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
      52: aastore
      53: dup
      54: bipush        7
      56: getstatic     #14                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      59: aastore
      60: dup
      61: bipush        8
      63: getstatic     #15                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_CORK:Lio/netty/channel/ChannelOption;
      66: aastore
      67: dup
      68: bipush        9
      70: getstatic     #16                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_NOTSENT_LOWAT:Lio/netty/channel/ChannelOption;
      73: aastore
      74: dup
      75: bipush        10
      77: getstatic     #17                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPCNT:Lio/netty/channel/ChannelOption;
      80: aastore
      81: dup
      82: bipush        11
      84: getstatic     #18                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPIDLE:Lio/netty/channel/ChannelOption;
      87: aastore
      88: dup
      89: bipush        12
      91: getstatic     #19                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPINTVL:Lio/netty/channel/ChannelOption;
      94: aastore
      95: dup
      96: bipush        13
      98: getstatic     #20                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_MD5SIG:Lio/netty/channel/ChannelOption;
     101: aastore
     102: dup
     103: bipush        14
     105: getstatic     #21                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_QUICKACK:Lio/netty/channel/ChannelOption;
     108: aastore
     109: dup
     110: bipush        15
     112: getstatic     #22                 // Field io/netty/channel/epoll/EpollChannelOption.IP_TRANSPARENT:Lio/netty/channel/ChannelOption;
     115: aastore
     116: dup
     117: bipush        16
     119: getstatic     #23                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
     122: aastore
     123: dup
     124: bipush        17
     126: getstatic     #24                 // Field io/netty/channel/epoll/EpollChannelOption.SO_BUSY_POLL:Lio/netty/channel/ChannelOption;
     129: aastore
     130: invokevirtual #25                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
     133: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #26                 // Method getReceiveBufferSize:()I
      11: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #28                 // Method getSendBufferSize:()I
      26: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: areturn
      30: aload_1
      31: getstatic     #9                  // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #29                 // Method isTcpNoDelay:()Z
      41: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_1
      46: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      49: if_acmpne     60
      52: aload_0
      53: invokevirtual #31                 // Method isKeepAlive:()Z
      56: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: areturn
      60: aload_1
      61: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      64: if_acmpne     75
      67: aload_0
      68: invokevirtual #32                 // Method isReuseAddress:()Z
      71: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      74: areturn
      75: aload_1
      76: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
      79: if_acmpne     90
      82: aload_0
      83: invokevirtual #33                 // Method getSoLinger:()I
      86: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: areturn
      90: aload_1
      91: getstatic     #13                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
      94: if_acmpne     105
      97: aload_0
      98: invokevirtual #34                 // Method getTrafficClass:()I
     101: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: areturn
     105: aload_1
     106: getstatic     #14                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
     109: if_acmpne     120
     112: aload_0
     113: invokevirtual #35                 // Method isAllowHalfClosure:()Z
     116: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     119: areturn
     120: aload_1
     121: getstatic     #15                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_CORK:Lio/netty/channel/ChannelOption;
     124: if_acmpne     135
     127: aload_0
     128: invokevirtual #36                 // Method isTcpCork:()Z
     131: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     134: areturn
     135: aload_1
     136: getstatic     #16                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_NOTSENT_LOWAT:Lio/netty/channel/ChannelOption;
     139: if_acmpne     150
     142: aload_0
     143: invokevirtual #37                 // Method getTcpNotSentLowAt:()J
     146: invokestatic  #38                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     149: areturn
     150: aload_1
     151: getstatic     #18                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPIDLE:Lio/netty/channel/ChannelOption;
     154: if_acmpne     165
     157: aload_0
     158: invokevirtual #39                 // Method getTcpKeepIdle:()I
     161: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     164: areturn
     165: aload_1
     166: getstatic     #19                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPINTVL:Lio/netty/channel/ChannelOption;
     169: if_acmpne     180
     172: aload_0
     173: invokevirtual #40                 // Method getTcpKeepIntvl:()I
     176: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     179: areturn
     180: aload_1
     181: getstatic     #17                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPCNT:Lio/netty/channel/ChannelOption;
     184: if_acmpne     195
     187: aload_0
     188: invokevirtual #41                 // Method getTcpKeepCnt:()I
     191: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     194: areturn
     195: aload_1
     196: getstatic     #42                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_USER_TIMEOUT:Lio/netty/channel/ChannelOption;
     199: if_acmpne     210
     202: aload_0
     203: invokevirtual #43                 // Method getTcpUserTimeout:()I
     206: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     209: areturn
     210: aload_1
     211: getstatic     #21                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_QUICKACK:Lio/netty/channel/ChannelOption;
     214: if_acmpne     225
     217: aload_0
     218: invokevirtual #44                 // Method isTcpQuickAck:()Z
     221: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     224: areturn
     225: aload_1
     226: getstatic     #22                 // Field io/netty/channel/epoll/EpollChannelOption.IP_TRANSPARENT:Lio/netty/channel/ChannelOption;
     229: if_acmpne     240
     232: aload_0
     233: invokevirtual #45                 // Method isIpTransparent:()Z
     236: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     239: areturn
     240: aload_1
     241: getstatic     #23                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
     244: if_acmpne     255
     247: aload_0
     248: invokevirtual #46                 // Method isTcpFastOpenConnect:()Z
     251: invokestatic  #30                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     254: areturn
     255: aload_1
     256: getstatic     #24                 // Field io/netty/channel/epoll/EpollChannelOption.SO_BUSY_POLL:Lio/netty/channel/ChannelOption;
     259: if_acmpne     270
     262: aload_0
     263: invokevirtual #47                 // Method getSoBusyPoll:()I
     266: invokestatic  #27                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     269: areturn
     270: aload_0
     271: aload_1
     272: invokespecial #48                 // Method io/netty/channel/epoll/EpollChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
     275: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #49                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #50                 // class java/lang/Integer
      18: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #52                 // Method setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
      24: pop
      25: goto          430
      28: aload_1
      29: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #50                 // class java/lang/Integer
      40: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
      43: invokevirtual #53                 // Method setSendBufferSize:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
      46: pop
      47: goto          430
      50: aload_1
      51: getstatic     #9                  // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #54                 // class java/lang/Boolean
      62: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
      65: invokevirtual #3                  // Method setTcpNoDelay:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
      68: pop
      69: goto          430
      72: aload_1
      73: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      76: if_acmpne     94
      79: aload_0
      80: aload_2
      81: checkcast     #54                 // class java/lang/Boolean
      84: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
      87: invokevirtual #56                 // Method setKeepAlive:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
      90: pop
      91: goto          430
      94: aload_1
      95: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      98: if_acmpne     116
     101: aload_0
     102: aload_2
     103: checkcast     #54                 // class java/lang/Boolean
     106: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     109: invokevirtual #57                 // Method setReuseAddress:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     112: pop
     113: goto          430
     116: aload_1
     117: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
     120: if_acmpne     138
     123: aload_0
     124: aload_2
     125: checkcast     #50                 // class java/lang/Integer
     128: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
     131: invokevirtual #58                 // Method setSoLinger:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     134: pop
     135: goto          430
     138: aload_1
     139: getstatic     #13                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
     142: if_acmpne     160
     145: aload_0
     146: aload_2
     147: checkcast     #50                 // class java/lang/Integer
     150: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
     153: invokevirtual #59                 // Method setTrafficClass:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     156: pop
     157: goto          430
     160: aload_1
     161: getstatic     #14                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
     164: if_acmpne     182
     167: aload_0
     168: aload_2
     169: checkcast     #54                 // class java/lang/Boolean
     172: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     175: invokevirtual #60                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     178: pop
     179: goto          430
     182: aload_1
     183: getstatic     #15                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_CORK:Lio/netty/channel/ChannelOption;
     186: if_acmpne     204
     189: aload_0
     190: aload_2
     191: checkcast     #54                 // class java/lang/Boolean
     194: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     197: invokevirtual #61                 // Method setTcpCork:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     200: pop
     201: goto          430
     204: aload_1
     205: getstatic     #16                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_NOTSENT_LOWAT:Lio/netty/channel/ChannelOption;
     208: if_acmpne     226
     211: aload_0
     212: aload_2
     213: checkcast     #62                 // class java/lang/Long
     216: invokevirtual #63                 // Method java/lang/Long.longValue:()J
     219: invokevirtual #64                 // Method setTcpNotSentLowAt:(J)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     222: pop
     223: goto          430
     226: aload_1
     227: getstatic     #18                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPIDLE:Lio/netty/channel/ChannelOption;
     230: if_acmpne     248
     233: aload_0
     234: aload_2
     235: checkcast     #50                 // class java/lang/Integer
     238: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
     241: invokevirtual #65                 // Method setTcpKeepIdle:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     244: pop
     245: goto          430
     248: aload_1
     249: getstatic     #17                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPCNT:Lio/netty/channel/ChannelOption;
     252: if_acmpne     270
     255: aload_0
     256: aload_2
     257: checkcast     #50                 // class java/lang/Integer
     260: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
     263: invokevirtual #66                 // Method setTcpKeepCnt:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     266: pop
     267: goto          430
     270: aload_1
     271: getstatic     #19                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_KEEPINTVL:Lio/netty/channel/ChannelOption;
     274: if_acmpne     292
     277: aload_0
     278: aload_2
     279: checkcast     #50                 // class java/lang/Integer
     282: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
     285: invokevirtual #67                 // Method setTcpKeepIntvl:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     288: pop
     289: goto          430
     292: aload_1
     293: getstatic     #42                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_USER_TIMEOUT:Lio/netty/channel/ChannelOption;
     296: if_acmpne     314
     299: aload_0
     300: aload_2
     301: checkcast     #50                 // class java/lang/Integer
     304: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
     307: invokevirtual #68                 // Method setTcpUserTimeout:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     310: pop
     311: goto          430
     314: aload_1
     315: getstatic     #22                 // Field io/netty/channel/epoll/EpollChannelOption.IP_TRANSPARENT:Lio/netty/channel/ChannelOption;
     318: if_acmpne     336
     321: aload_0
     322: aload_2
     323: checkcast     #54                 // class java/lang/Boolean
     326: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     329: invokevirtual #69                 // Method setIpTransparent:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     332: pop
     333: goto          430
     336: aload_1
     337: getstatic     #20                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_MD5SIG:Lio/netty/channel/ChannelOption;
     340: if_acmpne     357
     343: aload_2
     344: checkcast     #70                 // class java/util/Map
     347: astore_3
     348: aload_0
     349: aload_3
     350: invokevirtual #71                 // Method setTcpMd5Sig:(Ljava/util/Map;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     353: pop
     354: goto          430
     357: aload_1
     358: getstatic     #21                 // Field io/netty/channel/epoll/EpollChannelOption.TCP_QUICKACK:Lio/netty/channel/ChannelOption;
     361: if_acmpne     379
     364: aload_0
     365: aload_2
     366: checkcast     #54                 // class java/lang/Boolean
     369: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     372: invokevirtual #72                 // Method setTcpQuickAck:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     375: pop
     376: goto          430
     379: aload_1
     380: getstatic     #23                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
     383: if_acmpne     401
     386: aload_0
     387: aload_2
     388: checkcast     #54                 // class java/lang/Boolean
     391: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     394: invokevirtual #73                 // Method setTcpFastOpenConnect:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     397: pop
     398: goto          430
     401: aload_1
     402: getstatic     #24                 // Field io/netty/channel/epoll/EpollChannelOption.SO_BUSY_POLL:Lio/netty/channel/ChannelOption;
     405: if_acmpne     423
     408: aload_0
     409: aload_2
     410: checkcast     #50                 // class java/lang/Integer
     413: invokevirtual #51                 // Method java/lang/Integer.intValue:()I
     416: invokevirtual #74                 // Method setSoBusyPoll:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
     419: pop
     420: goto          430
     423: aload_0
     424: aload_1
     425: aload_2
     426: invokespecial #75                 // Method io/netty/channel/epoll/EpollChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     429: ireturn
     430: iconst_1
     431: ireturn

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #79                 // Method io/netty/channel/epoll/LinuxSocket.getReceiveBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #83                 // Method io/netty/channel/epoll/LinuxSocket.getSendBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getSoLinger();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #84                 // Method io/netty/channel/epoll/LinuxSocket.getSoLinger:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getTrafficClass();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #85                 // Method io/netty/channel/epoll/LinuxSocket.getTrafficClass:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #86                 // Method io/netty/channel/epoll/LinuxSocket.isKeepAlive:()Z
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #87                 // Method io/netty/channel/epoll/LinuxSocket.isReuseAddress:()Z
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public boolean isTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #88                 // Method io/netty/channel/epoll/LinuxSocket.isTcpNoDelay:()Z
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public boolean isTcpCork();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #89                 // Method io/netty/channel/epoll/LinuxSocket.isTcpCork:()Z
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getSoBusyPoll();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #90                 // Method io/netty/channel/epoll/LinuxSocket.getSoBusyPoll:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public long getTcpNotSentLowAt();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #91                 // Method io/netty/channel/epoll/LinuxSocket.getTcpNotSentLowAt:()J
      13: lreturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getTcpKeepIdle();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #92                 // Method io/netty/channel/epoll/LinuxSocket.getTcpKeepIdle:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getTcpKeepIntvl();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #93                 // Method io/netty/channel/epoll/LinuxSocket.getTcpKeepIntvl:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getTcpKeepCnt();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #94                 // Method io/netty/channel/epoll/LinuxSocket.getTcpKeepCnt:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getTcpUserTimeout();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #95                 // Method io/netty/channel/epoll/LinuxSocket.getTcpUserTimeout:()I
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setKeepAlive(boolean);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #96                 // Method io/netty/channel/epoll/LinuxSocket.setKeepAlive:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #97                 // Method io/netty/channel/epoll/LinuxSocket.setReceiveBufferSize:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #98                 // Method io/netty/channel/epoll/LinuxSocket.setReuseAddress:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #99                 // Method io/netty/channel/epoll/LinuxSocket.setSendBufferSize:(I)V
      14: aload_0
      15: invokespecial #4                  // Method calculateMaxBytesPerGatheringWrite:()V
      18: aload_0
      19: areturn
      20: astore_2
      21: new           #81                 // class io/netty/channel/ChannelException
      24: dup
      25: aload_2
      26: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      29: athrow
    Exception table:
       from    to  target type
           0    19    20   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setSoLinger(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #100                // Method io/netty/channel/epoll/LinuxSocket.setSoLinger:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #101                // Method io/netty/channel/epoll/LinuxSocket.setTcpNoDelay:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpCork(boolean);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #102                // Method io/netty/channel/epoll/LinuxSocket.setTcpCork:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setSoBusyPoll(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #103                // Method io/netty/channel/epoll/LinuxSocket.setSoBusyPoll:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpNotSentLowAt(long);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: lload_1
      11: invokevirtual #104                // Method io/netty/channel/epoll/LinuxSocket.setTcpNotSentLowAt:(J)V
      14: aload_0
      15: areturn
      16: astore_3
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_3
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTrafficClass(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #105                // Method io/netty/channel/epoll/LinuxSocket.setTrafficClass:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpKeepIdle(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #106                // Method io/netty/channel/epoll/LinuxSocket.setTcpKeepIdle:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpKeepIntvl(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #107                // Method io/netty/channel/epoll/LinuxSocket.setTcpKeepIntvl:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpKeepCntl(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #66                 // Method setTcpKeepCnt:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpKeepCnt(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #108                // Method io/netty/channel/epoll/LinuxSocket.setTcpKeepCnt:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpUserTimeout(int);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #109                // Method io/netty/channel/epoll/LinuxSocket.setTcpUserTimeout:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public boolean isIpTransparent();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #110                // Method io/netty/channel/epoll/LinuxSocket.isIpTransparent:()Z
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setIpTransparent(boolean);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #111                // Method io/netty/channel/epoll/LinuxSocket.setIpTransparent:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpMd5Sig(java.util.Map<java.net.InetAddress, byte[]>);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: aload_1
       8: invokevirtual #112                // Method io/netty/channel/epoll/EpollSocketChannel.setTcpMd5Sig:(Ljava/util/Map;)V
      11: aload_0
      12: areturn
      13: astore_2
      14: new           #81                 // class io/netty/channel/ChannelException
      17: dup
      18: aload_2
      19: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpQuickAck(boolean);
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: iload_1
      11: invokevirtual #113                // Method io/netty/channel/epoll/LinuxSocket.setTcpQuickAck:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #81                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public boolean isTcpQuickAck();
    Code:
       0: aload_0
       1: getfield      #76                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #77                 // class io/netty/channel/epoll/EpollSocketChannel
       7: getfield      #78                 // Field io/netty/channel/epoll/EpollSocketChannel.socket:Lio/netty/channel/epoll/LinuxSocket;
      10: invokevirtual #114                // Method io/netty/channel/epoll/LinuxSocket.isTcpQuickAck:()Z
      13: ireturn
      14: astore_1
      15: new           #81                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #82                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.epoll.EpollSocketChannelConfig setTcpFastOpenConnect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #115                // Field tcpFastopen:Z
       5: aload_0
       6: areturn

  public boolean isTcpFastOpenConnect();
    Code:
       0: aload_0
       1: getfield      #115                // Field tcpFastopen:Z
       4: ireturn

  public boolean isAllowHalfClosure();
    Code:
       0: aload_0
       1: getfield      #116                // Field allowHalfClosure:Z
       4: ireturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #116                // Field allowHalfClosure:Z
       5: aload_0
       6: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #117                // Method io/netty/channel/epoll/EpollChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #118                // Method io/netty/channel/epoll/EpollChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #119                // Method io/netty/channel/epoll/EpollChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #120                // Method io/netty/channel/epoll/EpollChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #121                // Method io/netty/channel/epoll/EpollChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #122                // Method io/netty/channel/epoll/EpollChannelConfig.setAutoRead:(Z)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #123                // Method io/netty/channel/epoll/EpollChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #124                // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #125                // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #126                // Method io/netty/channel/epoll/EpollChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #127                // Method io/netty/channel/epoll/EpollChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.epoll.EpollSocketChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #128                // Method io/netty/channel/epoll/EpollChannelConfig.setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  private void calculateMaxBytesPerGatheringWrite();
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method getSendBufferSize:()I
       4: iconst_1
       5: ishl
       6: istore_1
       7: iload_1
       8: ifle          22
      11: aload_0
      12: aload_0
      13: invokevirtual #28                 // Method getSendBufferSize:()I
      16: iconst_1
      17: ishl
      18: i2l
      19: invokevirtual #129                // Method setMaxBytesPerGatheringWrite:(J)V
      22: return

  public io.netty.channel.epoll.EpollChannelConfig setEpollMode(io.netty.channel.epoll.EpollMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #130                // Method setEpollMode:(Lio/netty/channel/epoll/EpollMode;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #131                // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #133                // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #134                // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #135                // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #136                // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #137                // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #138                // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #139                // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.epoll.EpollChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #140                // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #131                // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #133                // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #134                // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #141                // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #135                // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #136                // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #137                // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #138                // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #139                // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #140                // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #131                // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #141                // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #135                // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #136                // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #137                // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #138                // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #139                // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #140                // Method setConnectTimeoutMillis:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #142                // Method setPerformancePreferences:(III)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setReuseAddress:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setTrafficClass(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setTrafficClass:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method setKeepAlive:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setReceiveBufferSize:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setSendBufferSize:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setSoLinger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setSoLinger:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #3                  // Method setTcpNoDelay:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #132                // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #131                // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #141                // Method setAutoClose:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #135                // Method setAutoRead:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #136                // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #137                // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #138                // Method setWriteSpinCount:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #139                // Method setMaxMessagesPerRead:(I)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/epoll/EpollSocketChannelConfig;
       5: areturn
}
