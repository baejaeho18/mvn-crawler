Compiled from "AbstractEpollStreamChannel.java"
public abstract class io.netty.channel.epoll.AbstractEpollStreamChannel extends io.netty.channel.epoll.AbstractEpollChannel implements io.netty.channel.socket.DuplexChannel {
  private static final io.netty.channel.ChannelMetadata METADATA;

  private static final java.lang.String EXPECTED_TYPES;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final java.lang.Runnable flushTask;

  private volatile java.util.Queue<io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask> spliceQueue;

  private io.netty.channel.unix.FileDescriptor pipeIn;

  private io.netty.channel.unix.FileDescriptor pipeOut;

  private java.nio.channels.WritableByteChannel byteChannel;

  static final boolean $assertionsDisabled;

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.Channel, int);
    Code:
       0: aload_0
       1: aload_1
       2: new           #10                 // class io/netty/channel/epoll/LinuxSocket
       5: dup
       6: iload_2
       7: invokespecial #11                 // Method io/netty/channel/epoll/LinuxSocket."<init>":(I)V
      10: invokespecial #12                 // Method "<init>":(Lio/netty/channel/Channel;Lio/netty/channel/epoll/LinuxSocket;)V
      13: return

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(int);
    Code:
       0: aload_0
       1: new           #10                 // class io/netty/channel/epoll/LinuxSocket
       4: dup
       5: iload_1
       6: invokespecial #11                 // Method io/netty/channel/epoll/LinuxSocket."<init>":(I)V
       9: invokespecial #13                 // Method "<init>":(Lio/netty/channel/epoll/LinuxSocket;)V
      12: return

  io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.epoll.LinuxSocket);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #14                 // Method isSoErrorZero:(Lio/netty/channel/unix/Socket;)Z
       6: invokespecial #15                 // Method "<init>":(Lio/netty/channel/epoll/LinuxSocket;Z)V
       9: return

  io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.Channel, io.netty.channel.epoll.LinuxSocket);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #16                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/epoll/LinuxSocket;Z)V
       7: aload_0
       8: new           #17                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$1
      11: dup
      12: aload_0
      13: invokespecial #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$1."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      16: putfield      #19                 // Field flushTask:Ljava/lang/Runnable;
      19: aload_0
      20: dup
      21: getfield      #20                 // Field flags:I
      24: getstatic     #21                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      27: ior
      28: putfield      #20                 // Field flags:I
      31: return

  io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.Channel, io.netty.channel.epoll.LinuxSocket, java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #22                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/epoll/LinuxSocket;Ljava/net/SocketAddress;)V
       7: aload_0
       8: new           #17                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$1
      11: dup
      12: aload_0
      13: invokespecial #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$1."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      16: putfield      #19                 // Field flushTask:Ljava/lang/Runnable;
      19: aload_0
      20: dup
      21: getfield      #20                 // Field flags:I
      24: getstatic     #21                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      27: ior
      28: putfield      #20                 // Field flags:I
      31: return

  protected io.netty.channel.epoll.AbstractEpollStreamChannel(io.netty.channel.epoll.LinuxSocket, boolean);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: iload_2
       4: invokespecial #16                 // Method io/netty/channel/epoll/AbstractEpollChannel."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/epoll/LinuxSocket;Z)V
       7: aload_0
       8: new           #17                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$1
      11: dup
      12: aload_0
      13: invokespecial #18                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$1."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      16: putfield      #19                 // Field flushTask:Ljava/lang/Runnable;
      19: aload_0
      20: dup
      21: getfield      #20                 // Field flags:I
      24: getstatic     #21                 // Field io/netty/channel/epoll/Native.EPOLLRDHUP:I
      27: ior
      28: putfield      #20                 // Field flags:I
      31: return

  protected io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe newUnsafe();
    Code:
       0: new           #23                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe
       3: dup
       4: aload_0
       5: invokespecial #24                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
       8: areturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #25                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.epoll.AbstractEpollStreamChannel, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       7: invokevirtual #27                 // Method spliceTo:(Lio/netty/channel/epoll/AbstractEpollStreamChannel;ILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      10: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.epoll.AbstractEpollStreamChannel, int, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: aload_0
       5: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       8: if_acmpeq     21
      11: new           #29                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #30                 // String EventLoops are not the same.
      17: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_2
      22: ldc           #32                 // String len
      24: invokestatic  #33                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      27: pop
      28: aload_1
      29: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      32: invokevirtual #35                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      35: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      38: if_acmpne     54
      41: aload_0
      42: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      45: invokevirtual #35                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      48: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      51: if_acmpeq     83
      54: new           #37                 // class java/lang/IllegalStateException
      57: dup
      58: new           #38                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #40                 // String spliceTo() supported only when using
      67: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      73: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #44                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_3
      84: ldc           #45                 // String promise
      86: invokestatic  #46                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      89: pop
      90: aload_0
      91: invokevirtual #47                 // Method isOpen:()Z
      94: ifne          114
      97: aload_3
      98: new           #48                 // class java/nio/channels/ClosedChannelException
     101: dup
     102: invokespecial #49                 // Method java/nio/channels/ClosedChannelException."<init>":()V
     105: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     110: pop
     111: goto          134
     114: aload_0
     115: new           #51                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInChannelTask
     118: dup
     119: aload_0
     120: aload_1
     121: iload_2
     122: aload_3
     123: invokespecial #52                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInChannelTask."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/epoll/AbstractEpollStreamChannel;ILio/netty/channel/ChannelPromise;)V
     126: invokespecial #53                 // Method addToSpliceQueue:(Lio/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask;)V
     129: aload_0
     130: aload_3
     131: invokespecial #54                 // Method failSpliceIfClosed:(Lio/netty/channel/ChannelPromise;)V
     134: aload_3
     135: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.unix.FileDescriptor, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload_0
       5: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       8: invokevirtual #55                 // Method spliceTo:(Lio/netty/channel/unix/FileDescriptor;IILio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      11: areturn

  public final io.netty.channel.ChannelFuture spliceTo(io.netty.channel.unix.FileDescriptor, int, int, io.netty.channel.ChannelPromise);
    Code:
       0: iload_3
       1: ldc           #32                 // String len
       3: invokestatic  #33                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
       6: pop
       7: iload_2
       8: ldc           #56                 // String offset
      10: invokestatic  #33                 // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(ILjava/lang/String;)I
      13: pop
      14: aload_0
      15: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      18: invokevirtual #35                 // Method io/netty/channel/epoll/EpollChannelConfig.getEpollMode:()Lio/netty/channel/epoll/EpollMode;
      21: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      24: if_acmpeq     56
      27: new           #37                 // class java/lang/IllegalStateException
      30: dup
      31: new           #38                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #40                 // String spliceTo() supported only when using
      40: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: getstatic     #36                 // Field io/netty/channel/epoll/EpollMode.LEVEL_TRIGGERED:Lio/netty/channel/epoll/EpollMode;
      46: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      49: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #44                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload         4
      58: ldc           #45                 // String promise
      60: invokestatic  #46                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      63: pop
      64: aload_0
      65: invokevirtual #47                 // Method isOpen:()Z
      68: ifne          89
      71: aload         4
      73: new           #48                 // class java/nio/channels/ClosedChannelException
      76: dup
      77: invokespecial #49                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      80: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      85: pop
      86: goto          112
      89: aload_0
      90: new           #57                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceFdTask
      93: dup
      94: aload_0
      95: aload_1
      96: iload_2
      97: iload_3
      98: aload         4
     100: invokespecial #58                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceFdTask."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/unix/FileDescriptor;IILio/netty/channel/ChannelPromise;)V
     103: invokespecial #53                 // Method addToSpliceQueue:(Lio/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask;)V
     106: aload_0
     107: aload         4
     109: invokespecial #54                 // Method failSpliceIfClosed:(Lio/netty/channel/ChannelPromise;)V
     112: aload         4
     114: areturn

  private void failSpliceIfClosed(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isOpen:()Z
       4: ifne          40
       7: aload_1
       8: new           #48                 // class java/nio/channels/ClosedChannelException
      11: dup
      12: invokespecial #49                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      15: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      20: ifeq          40
      23: aload_0
      24: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      27: new           #59                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$2
      30: dup
      31: aload_0
      32: invokespecial #60                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$2."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      35: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      40: return

  private int writeBytes(io.netty.channel.ChannelOutboundBuffer, io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #62                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_3
       5: iload_3
       6: ifne          16
       9: aload_1
      10: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      13: pop
      14: iconst_0
      15: ireturn
      16: aload_2
      17: invokevirtual #64                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      20: ifne          31
      23: aload_2
      24: invokevirtual #65                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      27: iconst_1
      28: if_icmpne     38
      31: aload_0
      32: aload_1
      33: aload_2
      34: invokevirtual #66                 // Method doWriteBytes:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/buffer/ByteBuf;)I
      37: ireturn
      38: aload_2
      39: invokevirtual #67                 // Method io/netty/buffer/ByteBuf.nioBuffers:()[Ljava/nio/ByteBuffer;
      42: astore        4
      44: aload_0
      45: aload_1
      46: aload         4
      48: aload         4
      50: arraylength
      51: iload_3
      52: i2l
      53: aload_0
      54: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      57: invokevirtual #68                 // Method io/netty/channel/epoll/EpollChannelConfig.getMaxBytesPerGatheringWrite:()J
      60: invokespecial #69                 // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;[Ljava/nio/ByteBuffer;IJJ)I
      63: ireturn

  private void adjustMaxBytesPerGatheringWrite(long, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: lcmp
       3: ifne          28
       6: lload_1
       7: iconst_1
       8: lshl
       9: lload         5
      11: lcmp
      12: ifle          54
      15: aload_0
      16: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      19: lload_1
      20: iconst_1
      21: lshl
      22: invokevirtual #70                 // Method io/netty/channel/epoll/EpollChannelConfig.setMaxBytesPerGatheringWrite:(J)V
      25: goto          54
      28: lload_1
      29: ldc2_w        #71                 // long 4096l
      32: lcmp
      33: ifle          54
      36: lload_3
      37: lload_1
      38: iconst_1
      39: lushr
      40: lcmp
      41: ifge          54
      44: aload_0
      45: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
      48: lload_1
      49: iconst_1
      50: lushr
      51: invokevirtual #70                 // Method io/netty/channel/epoll/EpollChannelConfig.setMaxBytesPerGatheringWrite:(J)V
      54: return

  private int writeBytesMultiple(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.unix.IovArray) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #73                 // Method io/netty/channel/unix/IovArray.size:()J
       4: lstore_3
       5: getstatic     #74                 // Field $assertionsDisabled:Z
       8: ifne          25
      11: lload_3
      12: lconst_0
      13: lcmp
      14: ifne          25
      17: new           #75                 // class java/lang/AssertionError
      20: dup
      21: invokespecial #76                 // Method java/lang/AssertionError."<init>":()V
      24: athrow
      25: aload_2
      26: invokevirtual #77                 // Method io/netty/channel/unix/IovArray.count:()I
      29: istore        5
      31: getstatic     #74                 // Field $assertionsDisabled:Z
      34: ifne          50
      37: iload         5
      39: ifne          50
      42: new           #75                 // class java/lang/AssertionError
      45: dup
      46: invokespecial #76                 // Method java/lang/AssertionError."<init>":()V
      49: athrow
      50: aload_0
      51: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
      54: aload_2
      55: iconst_0
      56: invokevirtual #79                 // Method io/netty/channel/unix/IovArray.memoryAddress:(I)J
      59: iload         5
      61: invokevirtual #80                 // Method io/netty/channel/epoll/LinuxSocket.writevAddresses:(JI)J
      64: lstore        6
      66: lload         6
      68: lconst_0
      69: lcmp
      70: ifle          92
      73: aload_0
      74: lload_3
      75: lload         6
      77: aload_2
      78: invokevirtual #81                 // Method io/netty/channel/unix/IovArray.maxBytes:()J
      81: invokespecial #82                 // Method adjustMaxBytesPerGatheringWrite:(JJJ)V
      84: aload_1
      85: lload         6
      87: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      90: iconst_1
      91: ireturn
      92: ldc           #84                 // int 2147483647
      94: ireturn

  private int writeBytesMultiple(io.netty.channel.ChannelOutboundBuffer, java.nio.ByteBuffer[], int, long, long) throws java.io.IOException;
    Code:
       0: getstatic     #74                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: lload         4
       8: lconst_0
       9: lcmp
      10: ifne          21
      13: new           #75                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #76                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: lload         4
      23: lload         6
      25: lcmp
      26: ifle          33
      29: lload         6
      31: lstore        4
      33: aload_0
      34: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
      37: aload_2
      38: iconst_0
      39: iload_3
      40: lload         4
      42: invokevirtual #85                 // Method io/netty/channel/epoll/LinuxSocket.writev:([Ljava/nio/ByteBuffer;IIJ)J
      45: lstore        8
      47: lload         8
      49: lconst_0
      50: lcmp
      51: ifle          72
      54: aload_0
      55: lload         4
      57: lload         8
      59: lload         6
      61: invokespecial #82                 // Method adjustMaxBytesPerGatheringWrite:(JJJ)V
      64: aload_1
      65: lload         8
      67: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      70: iconst_1
      71: ireturn
      72: ldc           #84                 // int 2147483647
      74: ireturn

  private int writeDefaultFileRegion(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.DefaultFileRegion) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #86                 // Method io/netty/channel/DefaultFileRegion.transferred:()J
       4: lstore_3
       5: aload_2
       6: invokevirtual #87                 // Method io/netty/channel/DefaultFileRegion.count:()J
       9: lstore        5
      11: lload_3
      12: lload         5
      14: lcmp
      15: iflt          25
      18: aload_1
      19: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      22: pop
      23: iconst_0
      24: ireturn
      25: aload_0
      26: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
      29: aload_2
      30: aload_2
      31: invokevirtual #88                 // Method io/netty/channel/DefaultFileRegion.position:()J
      34: lload_3
      35: lload         5
      37: lload_3
      38: lsub
      39: invokevirtual #89                 // Method io/netty/channel/epoll/LinuxSocket.sendFile:(Lio/netty/channel/DefaultFileRegion;JJJ)J
      42: lstore        7
      44: lload         7
      46: lconst_0
      47: lcmp
      48: ifle          74
      51: aload_1
      52: lload         7
      54: invokevirtual #90                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
      57: aload_2
      58: invokevirtual #86                 // Method io/netty/channel/DefaultFileRegion.transferred:()J
      61: lload         5
      63: lcmp
      64: iflt          72
      67: aload_1
      68: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      71: pop
      72: iconst_1
      73: ireturn
      74: lload         7
      76: lconst_0
      77: lcmp
      78: ifne          87
      81: aload_0
      82: aload_2
      83: lload_3
      84: invokevirtual #91                 // Method validateFileRegion:(Lio/netty/channel/DefaultFileRegion;J)V
      87: ldc           #84                 // int 2147483647
      89: ireturn

  private int writeFileRegion(io.netty.channel.ChannelOutboundBuffer, io.netty.channel.FileRegion) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
       6: aload_2
       7: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
      12: lcmp
      13: iflt          23
      16: aload_1
      17: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      20: pop
      21: iconst_0
      22: ireturn
      23: aload_0
      24: getfield      #94                 // Field byteChannel:Ljava/nio/channels/WritableByteChannel;
      27: ifnonnull     42
      30: aload_0
      31: new           #95                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollSocketWritableByteChannel
      34: dup
      35: aload_0
      36: invokespecial #96                 // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollSocketWritableByteChannel."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;)V
      39: putfield      #94                 // Field byteChannel:Ljava/nio/channels/WritableByteChannel;
      42: aload_2
      43: aload_0
      44: getfield      #94                 // Field byteChannel:Ljava/nio/channels/WritableByteChannel;
      47: aload_2
      48: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
      53: invokeinterface #97,  4           // InterfaceMethod io/netty/channel/FileRegion.transferTo:(Ljava/nio/channels/WritableByteChannel;J)J
      58: lstore_3
      59: lload_3
      60: lconst_0
      61: lcmp
      62: ifle          93
      65: aload_1
      66: lload_3
      67: invokevirtual #90                 // Method io/netty/channel/ChannelOutboundBuffer.progress:(J)V
      70: aload_2
      71: invokeinterface #92,  1           // InterfaceMethod io/netty/channel/FileRegion.transferred:()J
      76: aload_2
      77: invokeinterface #93,  1           // InterfaceMethod io/netty/channel/FileRegion.count:()J
      82: lcmp
      83: iflt          91
      86: aload_1
      87: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      90: pop
      91: iconst_1
      92: ireturn
      93: ldc           #84                 // int 2147483647
      95: ireturn

  protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
       4: invokevirtual #98                 // Method io/netty/channel/epoll/EpollChannelConfig.getWriteSpinCount:()I
       7: istore_2
       8: aload_1
       9: invokevirtual #99                 // Method io/netty/channel/ChannelOutboundBuffer.size:()I
      12: istore_3
      13: iload_3
      14: iconst_1
      15: if_icmple     39
      18: aload_1
      19: invokevirtual #100                // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
      22: instanceof    #101                // class io/netty/buffer/ByteBuf
      25: ifeq          39
      28: iload_2
      29: aload_0
      30: aload_1
      31: invokespecial #102                // Method doWriteMultiple:(Lio/netty/channel/ChannelOutboundBuffer;)I
      34: isub
      35: istore_2
      36: goto          59
      39: iload_3
      40: ifne          51
      43: aload_0
      44: getstatic     #103                // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      47: invokevirtual #104                // Method clearFlag:(I)V
      50: return
      51: iload_2
      52: aload_0
      53: aload_1
      54: invokevirtual #105                // Method doWriteSingle:(Lio/netty/channel/ChannelOutboundBuffer;)I
      57: isub
      58: istore_2
      59: iload_2
      60: ifgt          8
      63: iload_2
      64: ifne          90
      67: aload_0
      68: getstatic     #103                // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      71: invokevirtual #104                // Method clearFlag:(I)V
      74: aload_0
      75: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      78: aload_0
      79: getfield      #19                 // Field flushTask:Ljava/lang/Runnable;
      82: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      87: goto          97
      90: aload_0
      91: getstatic     #103                // Field io/netty/channel/epoll/Native.EPOLLOUT:I
      94: invokevirtual #106                // Method setFlag:(I)V
      97: return

  protected int doWriteSingle(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #100                // Method io/netty/channel/ChannelOutboundBuffer.current:()Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: instanceof    #101                // class io/netty/buffer/ByteBuf
       9: ifeq          22
      12: aload_0
      13: aload_1
      14: aload_2
      15: checkcast     #101                // class io/netty/buffer/ByteBuf
      18: invokespecial #107                // Method writeBytes:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/buffer/ByteBuf;)I
      21: ireturn
      22: aload_2
      23: instanceof    #108                // class io/netty/channel/DefaultFileRegion
      26: ifeq          39
      29: aload_0
      30: aload_1
      31: aload_2
      32: checkcast     #108                // class io/netty/channel/DefaultFileRegion
      35: invokespecial #109                // Method writeDefaultFileRegion:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/DefaultFileRegion;)I
      38: ireturn
      39: aload_2
      40: instanceof    #110                // class io/netty/channel/FileRegion
      43: ifeq          56
      46: aload_0
      47: aload_1
      48: aload_2
      49: checkcast     #110                // class io/netty/channel/FileRegion
      52: invokespecial #111                // Method writeFileRegion:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/FileRegion;)I
      55: ireturn
      56: aload_2
      57: instanceof    #112                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      60: ifeq          83
      63: aload_2
      64: checkcast     #112                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      67: invokevirtual #113                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask.spliceOut:()Z
      70: ifne          76
      73: ldc           #84                 // int 2147483647
      75: ireturn
      76: aload_1
      77: invokevirtual #63                 // Method io/netty/channel/ChannelOutboundBuffer.remove:()Z
      80: pop
      81: iconst_1
      82: ireturn
      83: new           #114                // class java/lang/Error
      86: dup
      87: invokespecial #115                // Method java/lang/Error."<init>":()V
      90: athrow

  private int doWriteMultiple(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method config:()Lio/netty/channel/epoll/EpollChannelConfig;
       4: invokevirtual #68                 // Method io/netty/channel/epoll/EpollChannelConfig.getMaxBytesPerGatheringWrite:()J
       7: lstore_2
       8: aload_0
       9: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      12: checkcast     #116                // class io/netty/channel/epoll/EpollEventLoop
      15: invokevirtual #117                // Method io/netty/channel/epoll/EpollEventLoop.cleanIovArray:()Lio/netty/channel/unix/IovArray;
      18: astore        4
      20: aload         4
      22: lload_2
      23: invokevirtual #118                // Method io/netty/channel/unix/IovArray.maxBytes:(J)V
      26: aload_1
      27: aload         4
      29: invokevirtual #119                // Method io/netty/channel/ChannelOutboundBuffer.forEachFlushedMessage:(Lio/netty/channel/ChannelOutboundBuffer$MessageProcessor;)V
      32: aload         4
      34: invokevirtual #77                 // Method io/netty/channel/unix/IovArray.count:()I
      37: iconst_1
      38: if_icmplt     49
      41: aload_0
      42: aload_1
      43: aload         4
      45: invokespecial #120                // Method writeBytesMultiple:(Lio/netty/channel/ChannelOutboundBuffer;Lio/netty/channel/unix/IovArray;)I
      48: ireturn
      49: aload_1
      50: lconst_0
      51: invokevirtual #83                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      54: iconst_0
      55: ireturn

  protected java.lang.Object filterOutboundMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #101                // class io/netty/buffer/ByteBuf
       4: ifeq          29
       7: aload_1
       8: checkcast     #101                // class io/netty/buffer/ByteBuf
      11: astore_2
      12: aload_2
      13: invokestatic  #121                // Method io/netty/channel/unix/UnixChannelUtil.isBufferCopyNeededForWrite:(Lio/netty/buffer/ByteBuf;)Z
      16: ifeq          27
      19: aload_0
      20: aload_2
      21: invokevirtual #122                // Method newDirectBuffer:(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
      24: goto          28
      27: aload_2
      28: areturn
      29: aload_1
      30: instanceof    #110                // class io/netty/channel/FileRegion
      33: ifne          43
      36: aload_1
      37: instanceof    #112                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceOutTask
      40: ifeq          45
      43: aload_1
      44: areturn
      45: new           #123                // class java/lang/UnsupportedOperationException
      48: dup
      49: new           #38                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #124                // String unsupported message type:
      58: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokestatic  #125                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      65: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: getstatic     #126                // Field EXPECTED_TYPES:Ljava/lang/String;
      71: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #127                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      80: athrow

  protected final void doShutdownOutput() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #128                // Method io/netty/channel/epoll/LinuxSocket.shutdown:(ZZ)V
       9: return

  private void shutdownInput0(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: iconst_1
       5: iconst_0
       6: invokevirtual #128                // Method io/netty/channel/epoll/LinuxSocket.shutdown:(ZZ)V
       9: aload_1
      10: invokeinterface #129,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      15: pop
      16: goto          28
      19: astore_2
      20: aload_1
      21: aload_2
      22: invokeinterface #131,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      27: pop
      28: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/Throwable

  public boolean isOutputShutdown();
    Code:
       0: aload_0
       1: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: invokevirtual #132                // Method io/netty/channel/epoll/LinuxSocket.isOutputShutdown:()Z
       7: ireturn

  public boolean isInputShutdown();
    Code:
       0: aload_0
       1: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: invokevirtual #133                // Method io/netty/channel/epoll/LinuxSocket.isInputShutdown:()Z
       7: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #78                 // Field socket:Lio/netty/channel/epoll/LinuxSocket;
       4: invokevirtual #134                // Method io/netty/channel/epoll/LinuxSocket.isShutdown:()Z
       7: ireturn

  public io.netty.channel.ChannelFuture shutdownOutput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #135                // Method shutdownOutput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdownOutput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: astore_2
       5: aload_2
       6: invokeinterface #136,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      11: ifeq          28
      14: aload_0
      15: invokevirtual #137                // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      18: checkcast     #138                // class io/netty/channel/AbstractChannel$AbstractUnsafe
      21: aload_1
      22: invokevirtual #139                // Method io/netty/channel/AbstractChannel$AbstractUnsafe.shutdownOutput:(Lio/netty/channel/ChannelPromise;)V
      25: goto          43
      28: aload_2
      29: new           #140                // class io/netty/channel/epoll/AbstractEpollStreamChannel$3
      32: dup
      33: aload_0
      34: aload_1
      35: invokespecial #141                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$3."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      38: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      43: aload_1
      44: areturn

  public io.netty.channel.ChannelFuture shutdownInput();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #142                // Method shutdownInput:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdownInput(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #137                // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       4: checkcast     #23                 // class io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe
       7: invokevirtual #143                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
      10: astore_2
      11: aload_2
      12: ifnull        33
      15: aload_2
      16: new           #144                // class io/netty/channel/epoll/AbstractEpollStreamChannel$4
      19: dup
      20: aload_0
      21: aload_1
      22: invokespecial #145                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$4."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      25: invokeinterface #146,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      30: goto          70
      33: aload_0
      34: invokevirtual #28                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      37: astore_3
      38: aload_3
      39: invokeinterface #136,  1          // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      44: ifeq          55
      47: aload_0
      48: aload_1
      49: invokespecial #8                  // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
      52: goto          70
      55: aload_3
      56: new           #147                // class io/netty/channel/epoll/AbstractEpollStreamChannel$5
      59: dup
      60: aload_0
      61: aload_1
      62: invokespecial #148                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$5."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      65: invokeinterface #61,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      70: aload_1
      71: areturn

  public io.netty.channel.ChannelFuture shutdown();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #26                 // Method newPromise:()Lio/netty/channel/ChannelPromise;
       5: invokevirtual #149                // Method shutdown:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
       8: areturn

  public io.netty.channel.ChannelFuture shutdown(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #150                // Method shutdownOutput:()Lio/netty/channel/ChannelFuture;
       4: astore_2
       5: aload_2
       6: invokeinterface #151,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      11: ifeq          23
      14: aload_0
      15: aload_2
      16: aload_1
      17: invokespecial #7                  // Method shutdownOutputDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      20: goto          39
      23: aload_2
      24: new           #152                // class io/netty/channel/epoll/AbstractEpollStreamChannel$6
      27: dup
      28: aload_0
      29: aload_1
      30: invokespecial #153                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$6."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelPromise;)V
      33: invokeinterface #154,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      38: pop
      39: aload_1
      40: areturn

  private void shutdownOutputDone(io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokevirtual #155                // Method shutdownInput:()Lio/netty/channel/ChannelFuture;
       4: astore_3
       5: aload_3
       6: invokeinterface #151,  1          // InterfaceMethod io/netty/channel/ChannelFuture.isDone:()Z
      11: ifeq          23
      14: aload_1
      15: aload_3
      16: aload_2
      17: invokestatic  #6                  // Method shutdownDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      20: goto          40
      23: aload_3
      24: new           #156                // class io/netty/channel/epoll/AbstractEpollStreamChannel$7
      27: dup
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokespecial #157                // Method io/netty/channel/epoll/AbstractEpollStreamChannel$7."<init>":(Lio/netty/channel/epoll/AbstractEpollStreamChannel;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
      34: invokeinterface #154,  2          // InterfaceMethod io/netty/channel/ChannelFuture.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelFuture;
      39: pop
      40: return

  private static void shutdownDone(io.netty.channel.ChannelFuture, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: invokeinterface #158,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
       6: astore_3
       7: aload_1
       8: invokeinterface #158,  1          // InterfaceMethod io/netty/channel/ChannelFuture.cause:()Ljava/lang/Throwable;
      13: astore        4
      15: aload_3
      16: ifnull        47
      19: aload         4
      21: ifnull        36
      24: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      27: ldc           #160                // String Exception suppressed because a previous exception occurred.
      29: aload         4
      31: invokeinterface #161,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: aload_2
      37: aload_3
      38: invokeinterface #131,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      43: pop
      44: goto          71
      47: aload         4
      49: ifnull        64
      52: aload_2
      53: aload         4
      55: invokeinterface #131,  2          // InterfaceMethod io/netty/channel/ChannelPromise.setFailure:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPromise;
      60: pop
      61: goto          71
      64: aload_2
      65: invokeinterface #129,  1          // InterfaceMethod io/netty/channel/ChannelPromise.setSuccess:()Lio/netty/channel/ChannelPromise;
      70: pop
      71: return

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #162                // Method io/netty/channel/epoll/AbstractEpollChannel.doClose:()V
       4: aload_0
       5: getfield      #3                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
       8: invokestatic  #2                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      11: aload_0
      12: getfield      #4                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
      15: invokestatic  #2                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      18: aload_0
      19: invokespecial #9                  // Method clearSpliceQueue:()V
      22: goto          46
      25: astore_1
      26: aload_0
      27: getfield      #3                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
      30: invokestatic  #2                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      33: aload_0
      34: getfield      #4                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
      37: invokestatic  #2                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
      40: aload_0
      41: invokespecial #9                  // Method clearSpliceQueue:()V
      44: aload_1
      45: athrow
      46: return
    Exception table:
       from    to  target type
           0     4    25   any

  private void clearSpliceQueue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
       4: astore_1
       5: aload_1
       6: ifnonnull     10
       9: return
      10: aconst_null
      11: astore_2
      12: aload_1
      13: invokeinterface #163,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      18: checkcast     #164                // class io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask
      21: astore_3
      22: aload_3
      23: ifnonnull     29
      26: goto          55
      29: aload_2
      30: ifnonnull     41
      33: new           #48                 // class java/nio/channels/ClosedChannelException
      36: dup
      37: invokespecial #49                 // Method java/nio/channels/ClosedChannelException."<init>":()V
      40: astore_2
      41: aload_3
      42: getfield      #165                // Field io/netty/channel/epoll/AbstractEpollStreamChannel$SpliceInTask.promise:Lio/netty/channel/ChannelPromise;
      45: aload_2
      46: invokeinterface #50,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      51: pop
      52: goto          12
      55: return

  private static void safeClosePipe(io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: ifnull        23
       4: aload_0
       5: invokevirtual #166                // Method io/netty/channel/unix/FileDescriptor.close:()V
       8: goto          23
      11: astore_1
      12: getstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      15: ldc           #168                // String Error while closing a pipe
      17: aload_1
      18: invokeinterface #169,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      23: return
    Exception table:
       from    to  target type
           4     8    11   Class java/io/IOException

  private void addToSpliceQueue(io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInTask);
    Code:
       0: aload_0
       1: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
       4: astore_2
       5: aload_2
       6: ifnonnull     43
       9: aload_0
      10: dup
      11: astore_3
      12: monitorenter
      13: aload_0
      14: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
      17: astore_2
      18: aload_2
      19: ifnonnull     31
      22: aload_0
      23: invokestatic  #170                // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      26: dup
      27: astore_2
      28: putfield      #5                  // Field spliceQueue:Ljava/util/Queue;
      31: aload_3
      32: monitorexit
      33: goto          43
      36: astore        4
      38: aload_3
      39: monitorexit
      40: aload         4
      42: athrow
      43: aload_2
      44: aload_1
      45: invokeinterface #171,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      50: pop
      51: return
    Exception table:
       from    to  target type
          13    33    36   any
          36    40    36   any

  public boolean isOpen();
    Code:
       0: aload_0
       1: invokespecial #172                // Method io/netty/channel/epoll/AbstractEpollChannel.isOpen:()Z
       4: ireturn

  public boolean isActive();
    Code:
       0: aload_0
       1: invokespecial #173                // Method io/netty/channel/epoll/AbstractEpollChannel.isActive:()Z
       4: ireturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #174                // Method newUnsafe:()Lio/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe;
       4: areturn

  static void access$000(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method clearSpliceQueue:()V
       4: return

  static void access$100(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method shutdownInput0:(Lio/netty/channel/ChannelPromise;)V
       5: return

  static void access$200(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method shutdownOutputDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       6: return

  static void access$300(io.netty.channel.ChannelFuture, io.netty.channel.ChannelFuture, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #6                  // Method shutdownDone:(Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelFuture;Lio/netty/channel/ChannelPromise;)V
       6: return

  static java.util.Queue access$400(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field spliceQueue:Ljava/util/Queue;
       4: areturn

  static io.netty.channel.unix.FileDescriptor access$500(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
       4: areturn

  static io.netty.channel.unix.FileDescriptor access$602(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
       6: areturn

  static io.netty.channel.unix.FileDescriptor access$502(io.netty.channel.epoll.AbstractEpollStreamChannel, io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field pipeOut:Lio/netty/channel/unix/FileDescriptor;
       6: areturn

  static io.netty.channel.unix.FileDescriptor access$600(io.netty.channel.epoll.AbstractEpollStreamChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field pipeIn:Lio/netty/channel/unix/FileDescriptor;
       4: areturn

  static void access$700(io.netty.channel.unix.FileDescriptor);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method safeClosePipe:(Lio/netty/channel/unix/FileDescriptor;)V
       4: return

  static {};
    Code:
       0: ldc           #175                // class io/netty/channel/epoll/AbstractEpollStreamChannel
       2: invokevirtual #176                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #74                 // Field $assertionsDisabled:Z
      16: new           #177                // class io/netty/channel/ChannelMetadata
      19: dup
      20: iconst_0
      21: bipush        16
      23: invokespecial #178                // Method io/netty/channel/ChannelMetadata."<init>":(ZI)V
      26: putstatic     #25                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      29: new           #38                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #39                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #179                // String  (expected:
      38: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #101                // class io/netty/buffer/ByteBuf
      43: invokestatic  #180                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      46: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #181                // String ,
      51: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #108                // class io/netty/channel/DefaultFileRegion
      56: invokestatic  #180                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      59: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: bipush        41
      64: invokevirtual #182                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      67: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: putstatic     #126                // Field EXPECTED_TYPES:Ljava/lang/String;
      73: ldc           #175                // class io/netty/channel/epoll/AbstractEpollStreamChannel
      75: invokestatic  #183                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      78: putstatic     #159                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      81: return
}
