Compiled from "EmbeddedEventLoop.java"
final class io.netty.channel.embedded.EmbeddedEventLoop extends io.netty.util.concurrent.AbstractScheduledEventExecutor implements io.netty.channel.EventLoop {
  private long startTime;

  private long frozenTimestamp;

  private boolean timeFrozen;

  private final java.util.Queue<java.lang.Runnable> tasks;

  io.netty.channel.embedded.EmbeddedEventLoop();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method io/netty/util/concurrent/AbstractScheduledEventExecutor."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method initialNanoTime:()J
       8: putfield      #3                  // Field startTime:J
      11: aload_0
      12: new           #4                  // class java/util/ArrayDeque
      15: dup
      16: iconst_2
      17: invokespecial #5                  // Method java/util/ArrayDeque."<init>":(I)V
      20: putfield      #6                  // Field tasks:Ljava/util/Queue;
      23: return

  public io.netty.channel.EventLoopGroup parent();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.parent:()Lio/netty/util/concurrent/EventExecutorGroup;
       4: checkcast     #8                  // class io/netty/channel/EventLoopGroup
       7: areturn

  public io.netty.channel.EventLoop next();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.next:()Lio/netty/util/concurrent/EventExecutor;
       4: checkcast     #10                 // class io/netty/channel/EventLoop
       7: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field tasks:Ljava/util/Queue;
       4: aload_1
       5: ldc           #11                 // String command
       7: invokestatic  #12                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: invokeinterface #13,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      15: pop
      16: return

  void runTasks();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tasks:Ljava/util/Queue;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #15                 // class java/lang/Runnable
      12: astore_1
      13: aload_1
      14: ifnonnull     20
      17: goto          29
      20: aload_1
      21: invokeinterface #16,  1           // InterfaceMethod java/lang/Runnable.run:()V
      26: goto          0
      29: return

  boolean hasPendingNormalTasks();
    Code:
       0: aload_0
       1: getfield      #6                  // Field tasks:Ljava/util/Queue;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  long runScheduledTasks();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method getCurrentTimeNanos:()J
       4: lstore_1
       5: aload_0
       6: lload_1
       7: invokevirtual #19                 // Method pollScheduledTask:(J)Ljava/lang/Runnable;
      10: astore_3
      11: aload_3
      12: ifnonnull     20
      15: aload_0
      16: invokevirtual #20                 // Method nextScheduledTaskNano:()J
      19: lreturn
      20: aload_3
      21: invokeinterface #16,  1           // InterfaceMethod java/lang/Runnable.run:()V
      26: goto          5

  long nextScheduledTask();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method nextScheduledTaskNano:()J
       4: lreturn

  protected long getCurrentTimeNanos();
    Code:
       0: aload_0
       1: getfield      #21                 // Field timeFrozen:Z
       4: ifeq          12
       7: aload_0
       8: getfield      #22                 // Field frozenTimestamp:J
      11: lreturn
      12: invokestatic  #23                 // Method java/lang/System.nanoTime:()J
      15: aload_0
      16: getfield      #3                  // Field startTime:J
      19: lsub
      20: lreturn

  void advanceTimeBy(long);
    Code:
       0: aload_0
       1: getfield      #21                 // Field timeFrozen:Z
       4: ifeq          20
       7: aload_0
       8: dup
       9: getfield      #22                 // Field frozenTimestamp:J
      12: lload_1
      13: ladd
      14: putfield      #22                 // Field frozenTimestamp:J
      17: goto          30
      20: aload_0
      21: dup
      22: getfield      #3                  // Field startTime:J
      25: lload_1
      26: lsub
      27: putfield      #3                  // Field startTime:J
      30: return

  void freezeTime();
    Code:
       0: aload_0
       1: getfield      #21                 // Field timeFrozen:Z
       4: ifne          20
       7: aload_0
       8: aload_0
       9: invokevirtual #18                 // Method getCurrentTimeNanos:()J
      12: putfield      #22                 // Field frozenTimestamp:J
      15: aload_0
      16: iconst_1
      17: putfield      #21                 // Field timeFrozen:Z
      20: return

  void unfreezeTime();
    Code:
       0: aload_0
       1: getfield      #21                 // Field timeFrozen:Z
       4: ifeq          24
       7: aload_0
       8: invokestatic  #23                 // Method java/lang/System.nanoTime:()J
      11: aload_0
      12: getfield      #22                 // Field frozenTimestamp:J
      15: lsub
      16: putfield      #3                  // Field startTime:J
      19: aload_0
      20: iconst_0
      21: putfield      #21                 // Field timeFrozen:Z
      24: return

  protected void cancelScheduledTasks();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.cancelScheduledTasks:()V
       4: return

  public io.netty.util.concurrent.Future<?> shutdownGracefully(long, long, java.util.concurrent.TimeUnit);
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #26                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public io.netty.util.concurrent.Future<?> terminationFuture();
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #26                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void shutdown();
    Code:
       0: new           #25                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #26                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isShuttingDown();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isShutdown();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isTerminated();
    Code:
       0: iconst_0
       1: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit);
    Code:
       0: iconst_0
       1: ireturn

  public io.netty.channel.ChannelFuture register(io.netty.channel.Channel);
    Code:
       0: aload_0
       1: new           #27                 // class io/netty/channel/DefaultChannelPromise
       4: dup
       5: aload_1
       6: aload_0
       7: invokespecial #28                 // Method io/netty/channel/DefaultChannelPromise."<init>":(Lio/netty/channel/Channel;Lio/netty/util/concurrent/EventExecutor;)V
      10: invokevirtual #29                 // Method register:(Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelFuture;
      13: areturn

  public io.netty.channel.ChannelFuture register(io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: ldc           #30                 // String promise
       3: invokestatic  #12                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokeinterface #31,  1           // InterfaceMethod io/netty/channel/ChannelPromise.channel:()Lio/netty/channel/Channel;
      13: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      18: aload_0
      19: aload_1
      20: invokeinterface #33,  3           // InterfaceMethod io/netty/channel/Channel$Unsafe.register:(Lio/netty/channel/EventLoop;Lio/netty/channel/ChannelPromise;)V
      25: aload_1
      26: areturn

  public io.netty.channel.ChannelFuture register(io.netty.channel.Channel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_1
       1: invokeinterface #32,  1           // InterfaceMethod io/netty/channel/Channel.unsafe:()Lio/netty/channel/Channel$Unsafe;
       6: aload_0
       7: aload_2
       8: invokeinterface #33,  3           // InterfaceMethod io/netty/channel/Channel$Unsafe.register:(Lio/netty/channel/EventLoop;Lio/netty/channel/ChannelPromise;)V
      13: aload_2
      14: areturn

  public boolean inEventLoop();
    Code:
       0: iconst_1
       1: ireturn

  public boolean inEventLoop(java.lang.Thread);
    Code:
       0: iconst_1
       1: ireturn

  public io.netty.util.concurrent.EventExecutor next();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method next:()Lio/netty/channel/EventLoop;
       4: areturn

  public io.netty.util.concurrent.EventExecutorGroup parent();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method parent:()Lio/netty/channel/EventLoopGroup;
       4: areturn
}
