Compiled from "FixedChannelPool.java"
class io.netty.channel.pool.FixedChannelPool$AcquireListener implements io.netty.util.concurrent.FutureListener<io.netty.channel.Channel> {
  private final io.netty.util.concurrent.Promise<io.netty.channel.Channel> originalPromise;

  protected boolean acquired;

  static final boolean $assertionsDisabled;

  final io.netty.channel.pool.FixedChannelPool this$0;

  io.netty.channel.pool.FixedChannelPool$AcquireListener(io.netty.util.concurrent.Promise<io.netty.channel.Channel>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
      14: return

  public void operationComplete(io.netty.util.concurrent.Future<io.netty.channel.Channel>) throws java.lang.Exception;
    Code:
       0: getstatic     #4                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      10: invokestatic  #5                  // Method io/netty/channel/pool/FixedChannelPool.access$400:(Lio/netty/channel/pool/FixedChannelPool;)Lio/netty/util/concurrent/EventExecutor;
      13: invokeinterface #6,  1            // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifne          29
      21: new           #7                  // class java/lang/AssertionError
      24: dup
      25: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      33: invokestatic  #9                  // Method io/netty/channel/pool/FixedChannelPool.access$500:(Lio/netty/channel/pool/FixedChannelPool;)Z
      36: ifeq          83
      39: aload_1
      40: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      45: ifeq          63
      48: aload_1
      49: invokeinterface #11,  1           // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
      54: checkcast     #12                 // class io/netty/channel/Channel
      57: invokeinterface #13,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      62: pop
      63: aload_0
      64: getfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
      67: new           #14                 // class java/lang/IllegalStateException
      70: dup
      71: ldc           #15                 // String FixedChannelPool was closed
      73: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      76: invokeinterface #17,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      81: pop
      82: return
      83: aload_1
      84: invokeinterface #10,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      89: ifeq          111
      92: aload_0
      93: getfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
      96: aload_1
      97: invokeinterface #11,  1           // InterfaceMethod io/netty/util/concurrent/Future.getNow:()Ljava/lang/Object;
     102: invokeinterface #18,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
     107: pop
     108: goto          151
     111: aload_0
     112: getfield      #19                 // Field acquired:Z
     115: ifeq          128
     118: aload_0
     119: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
     122: invokestatic  #20                 // Method io/netty/channel/pool/FixedChannelPool.access$600:(Lio/netty/channel/pool/FixedChannelPool;)V
     125: goto          135
     128: aload_0
     129: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
     132: invokestatic  #21                 // Method io/netty/channel/pool/FixedChannelPool.access$1000:(Lio/netty/channel/pool/FixedChannelPool;)V
     135: aload_0
     136: getfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
     139: aload_1
     140: invokeinterface #22,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
     145: invokeinterface #17,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     150: pop
     151: goto          166
     154: astore_2
     155: aload_0
     156: getfield      #3                  // Field originalPromise:Lio/netty/util/concurrent/Promise;
     159: aload_2
     160: invokeinterface #24,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
     165: pop
     166: return
    Exception table:
       from    to  target type
           0    82   154   Class java/lang/Throwable
          83   151   154   Class java/lang/Throwable

  public void acquired();
    Code:
       0: aload_0
       1: getfield      #19                 // Field acquired:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      12: invokestatic  #25                 // Method io/netty/channel/pool/FixedChannelPool.access$1100:(Lio/netty/channel/pool/FixedChannelPool;)Ljava/util/concurrent/atomic/AtomicInteger;
      15: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      18: pop
      19: aload_0
      20: iconst_1
      21: putfield      #19                 // Field acquired:Z
      24: return

  static {};
    Code:
       0: ldc           #27                 // class io/netty/channel/pool/FixedChannelPool
       2: invokevirtual #28                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #4                  // Field $assertionsDisabled:Z
      16: return
}
