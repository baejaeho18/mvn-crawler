Compiled from "FixedChannelPool.java"
class io.netty.channel.pool.FixedChannelPool$4 implements io.netty.util.concurrent.FutureListener<java.lang.Void> {
  static final boolean $assertionsDisabled;

  final io.netty.channel.Channel val$channel;

  final io.netty.util.concurrent.Promise val$promise;

  final io.netty.channel.pool.FixedChannelPool this$0;

  io.netty.channel.pool.FixedChannelPool$4(io.netty.channel.pool.FixedChannelPool, io.netty.channel.Channel, io.netty.util.concurrent.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$channel:Lio/netty/channel/Channel;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void operationComplete(io.netty.util.concurrent.Future<java.lang.Void>);
    Code:
       0: getstatic     #5                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      10: invokestatic  #6                  // Method io/netty/channel/pool/FixedChannelPool.access$400:(Lio/netty/channel/pool/FixedChannelPool;)Lio/netty/util/concurrent/EventExecutor;
      13: invokeinterface #7,  1            // InterfaceMethod io/netty/util/concurrent/EventExecutor.inEventLoop:()Z
      18: ifne          29
      21: new           #8                  // class java/lang/AssertionError
      24: dup
      25: invokespecial #9                  // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      33: invokestatic  #10                 // Method io/netty/channel/pool/FixedChannelPool.access$500:(Lio/netty/channel/pool/FixedChannelPool;)Z
      36: ifeq          69
      39: aload_0
      40: getfield      #2                  // Field val$channel:Lio/netty/channel/Channel;
      43: invokeinterface #11,  1           // InterfaceMethod io/netty/channel/Channel.close:()Lio/netty/channel/ChannelFuture;
      48: pop
      49: aload_0
      50: getfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      53: new           #12                 // class java/lang/IllegalStateException
      56: dup
      57: ldc           #13                 // String FixedChannelPool was closed
      59: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: invokeinterface #15,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
      67: pop
      68: return
      69: aload_1
      70: invokeinterface #16,  1           // InterfaceMethod io/netty/util/concurrent/Future.isSuccess:()Z
      75: ifeq          99
      78: aload_0
      79: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
      82: invokestatic  #17                 // Method io/netty/channel/pool/FixedChannelPool.access$600:(Lio/netty/channel/pool/FixedChannelPool;)V
      85: aload_0
      86: getfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
      89: aconst_null
      90: invokeinterface #18,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setSuccess:(Ljava/lang/Object;)Lio/netty/util/concurrent/Promise;
      95: pop
      96: goto          136
      99: aload_1
     100: invokeinterface #19,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
     105: astore_2
     106: aload_2
     107: instanceof    #20                 // class java/lang/IllegalArgumentException
     110: ifne          120
     113: aload_0
     114: getfield      #1                  // Field this$0:Lio/netty/channel/pool/FixedChannelPool;
     117: invokestatic  #17                 // Method io/netty/channel/pool/FixedChannelPool.access$600:(Lio/netty/channel/pool/FixedChannelPool;)V
     120: aload_0
     121: getfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
     124: aload_1
     125: invokeinterface #19,  1           // InterfaceMethod io/netty/util/concurrent/Future.cause:()Ljava/lang/Throwable;
     130: invokeinterface #15,  2           // InterfaceMethod io/netty/util/concurrent/Promise.setFailure:(Ljava/lang/Throwable;)Lio/netty/util/concurrent/Promise;
     135: pop
     136: goto          151
     139: astore_2
     140: aload_0
     141: getfield      #3                  // Field val$promise:Lio/netty/util/concurrent/Promise;
     144: aload_2
     145: invokeinterface #22,  2           // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
     150: pop
     151: return
    Exception table:
       from    to  target type
           0    68   139   Class java/lang/Throwable
          69   136   139   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #23                 // class io/netty/channel/pool/FixedChannelPool
       2: invokevirtual #24                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #5                  // Field $assertionsDisabled:Z
      16: return
}
