Compiled from "AbstractKQueueChannel.java"
abstract class io.netty.channel.kqueue.AbstractKQueueChannel extends io.netty.channel.AbstractChannel implements io.netty.channel.unix.UnixChannel {
  private static final io.netty.channel.ChannelMetadata METADATA;

  private io.netty.channel.ChannelPromise connectPromise;

  private io.netty.util.concurrent.Future<?> connectTimeoutFuture;

  private java.net.SocketAddress requestedRemoteAddress;

  final io.netty.channel.kqueue.BsdSocket socket;

  private boolean readFilterEnabled;

  private boolean writeFilterEnabled;

  boolean readReadyRunnablePending;

  boolean inputClosedSeenErrorOnRead;

  protected volatile boolean active;

  private volatile java.net.SocketAddress local;

  private volatile java.net.SocketAddress remote;

  io.netty.channel.kqueue.AbstractKQueueChannel(io.netty.channel.Channel, io.netty.channel.kqueue.BsdSocket, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: aload_2
       7: ldc           #9                  // String fd
       9: invokestatic  #10                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #11                 // class io/netty/channel/kqueue/BsdSocket
      15: putfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      18: aload_0
      19: iload_3
      20: putfield      #13                 // Field active:Z
      23: iload_3
      24: ifeq          43
      27: aload_0
      28: aload_2
      29: invokevirtual #14                 // Method io/netty/channel/kqueue/BsdSocket.localAddress:()Ljava/net/InetSocketAddress;
      32: putfield      #15                 // Field local:Ljava/net/SocketAddress;
      35: aload_0
      36: aload_2
      37: invokevirtual #16                 // Method io/netty/channel/kqueue/BsdSocket.remoteAddress:()Ljava/net/InetSocketAddress;
      40: putfield      #2                  // Field remote:Ljava/net/SocketAddress;
      43: return

  io.netty.channel.kqueue.AbstractKQueueChannel(io.netty.channel.Channel, io.netty.channel.kqueue.BsdSocket, java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method io/netty/channel/AbstractChannel."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: aload_2
       7: ldc           #9                  // String fd
       9: invokestatic  #10                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #11                 // class io/netty/channel/kqueue/BsdSocket
      15: putfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      18: aload_0
      19: iconst_1
      20: putfield      #13                 // Field active:Z
      23: aload_0
      24: aload_3
      25: putfield      #2                  // Field remote:Ljava/net/SocketAddress;
      28: aload_0
      29: aload_2
      30: invokevirtual #14                 // Method io/netty/channel/kqueue/BsdSocket.localAddress:()Ljava/net/InetSocketAddress;
      33: putfield      #15                 // Field local:Ljava/net/SocketAddress;
      36: return

  static boolean isSoErrorZero(io.netty.channel.kqueue.BsdSocket);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method io/netty/channel/kqueue/BsdSocket.getSoError:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
      13: astore_1
      14: new           #19                 // class io/netty/channel/ChannelException
      17: dup
      18: aload_1
      19: invokespecial #20                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      22: athrow
    Exception table:
       from    to  target type
           0    12    13   Class java/io/IOException

  public final io.netty.channel.unix.FileDescriptor fd();
    Code:
       0: aload_0
       1: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
       4: areturn

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #13                 // Field active:Z
       4: ireturn

  public io.netty.channel.ChannelMetadata metadata();
    Code:
       0: getstatic     #21                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
       3: areturn

  protected void doClose() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #13                 // Field active:Z
       5: aload_0
       6: iconst_1
       7: putfield      #22                 // Field inputClosedSeenErrorOnRead:Z
      10: aload_0
      11: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      14: invokevirtual #23                 // Method io/netty/channel/kqueue/BsdSocket.close:()V
      17: return

  protected void doDisconnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method doClose:()V
       4: return

  void resetCachedAddresses();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
       5: invokevirtual #14                 // Method io/netty/channel/kqueue/BsdSocket.localAddress:()Ljava/net/InetSocketAddress;
       8: putfield      #15                 // Field local:Ljava/net/SocketAddress;
      11: aload_0
      12: aload_0
      13: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      16: invokevirtual #16                 // Method io/netty/channel/kqueue/BsdSocket.remoteAddress:()Ljava/net/InetSocketAddress;
      19: putfield      #2                  // Field remote:Ljava/net/SocketAddress;
      22: return

  protected boolean isCompatible(io.netty.channel.EventLoop);
    Code:
       0: aload_1
       1: instanceof    #25                 // class io/netty/channel/kqueue/KQueueEventLoop
       4: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
       4: invokevirtual #26                 // Method io/netty/channel/kqueue/BsdSocket.isOpen:()Z
       7: ireturn

  protected void doDeregister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       4: checkcast     #25                 // class io/netty/channel/kqueue/KQueueEventLoop
       7: aload_0
       8: invokevirtual #28                 // Method io/netty/channel/kqueue/KQueueEventLoop.remove:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
      11: aload_0
      12: iconst_0
      13: putfield      #29                 // Field readFilterEnabled:Z
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field writeFilterEnabled:Z
      21: return

  void unregisterFilters() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #30                 // Method readFilter:(Z)V
       5: aload_0
       6: iconst_0
       7: invokevirtual #31                 // Method writeFilter:(Z)V
      10: aload_0
      11: getstatic     #32                 // Field io/netty/channel/kqueue/Native.EVFILT_SOCK:S
      14: getstatic     #33                 // Field io/netty/channel/kqueue/Native.EV_DELETE:S
      17: iconst_0
      18: invokespecial #34                 // Method evSet0:(SSI)V
      21: return

  protected final void doBeginRead() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       4: checkcast     #36                 // class io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe
       7: astore_1
       8: aload_1
       9: iconst_1
      10: putfield      #37                 // Field io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe.readPending:Z
      13: aload_0
      14: iconst_1
      15: invokevirtual #30                 // Method readFilter:(Z)V
      18: aload_1
      19: getfield      #38                 // Field io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe.maybeMoreDataToRead:Z
      22: ifeq          33
      25: aload_1
      26: aload_0
      27: invokevirtual #39                 // Method config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
      30: invokevirtual #40                 // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe.executeReadReadyRunnable:(Lio/netty/channel/ChannelConfig;)V
      33: return

  protected void doRegister() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #41                 // Field readReadyRunnablePending:Z
       5: aload_0
       6: invokevirtual #27                 // Method eventLoop:()Lio/netty/channel/EventLoop;
       9: checkcast     #25                 // class io/netty/channel/kqueue/KQueueEventLoop
      12: aload_0
      13: invokevirtual #42                 // Method io/netty/channel/kqueue/KQueueEventLoop.add:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
      16: aload_0
      17: getfield      #5                  // Field writeFilterEnabled:Z
      20: ifeq          33
      23: aload_0
      24: getstatic     #43                 // Field io/netty/channel/kqueue/Native.EVFILT_WRITE:S
      27: getstatic     #44                 // Field io/netty/channel/kqueue/Native.EV_ADD_CLEAR_ENABLE:S
      30: invokespecial #45                 // Method evSet0:(SS)V
      33: aload_0
      34: getfield      #29                 // Field readFilterEnabled:Z
      37: ifeq          50
      40: aload_0
      41: getstatic     #46                 // Field io/netty/channel/kqueue/Native.EVFILT_READ:S
      44: getstatic     #44                 // Field io/netty/channel/kqueue/Native.EV_ADD_CLEAR_ENABLE:S
      47: invokespecial #45                 // Method evSet0:(SS)V
      50: aload_0
      51: getstatic     #32                 // Field io/netty/channel/kqueue/Native.EVFILT_SOCK:S
      54: getstatic     #47                 // Field io/netty/channel/kqueue/Native.EV_ADD:S
      57: getstatic     #48                 // Field io/netty/channel/kqueue/Native.NOTE_RDHUP:I
      60: invokespecial #34                 // Method evSet0:(SSI)V
      63: return

  protected abstract io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe newUnsafe();

  public abstract io.netty.channel.kqueue.KQueueChannelConfig config();

  protected final io.netty.buffer.ByteBuf newDirectBuffer(io.netty.buffer.ByteBuf);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokevirtual #49                 // Method newDirectBuffer:(Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;
       6: areturn

  protected final io.netty.buffer.ByteBuf newDirectBuffer(java.lang.Object, io.netty.buffer.ByteBuf);
    Code:
       0: aload_2
       1: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
       4: istore_3
       5: iload_3
       6: ifne          18
       9: aload_1
      10: invokestatic  #51                 // Method io/netty/util/ReferenceCountUtil.release:(Ljava/lang/Object;)Z
      13: pop
      14: getstatic     #52                 // Field io/netty/buffer/Unpooled.EMPTY_BUFFER:Lio/netty/buffer/ByteBuf;
      17: areturn
      18: aload_0
      19: invokevirtual #53                 // Method alloc:()Lio/netty/buffer/ByteBufAllocator;
      22: astore        4
      24: aload         4
      26: invokeinterface #54,  1           // InterfaceMethod io/netty/buffer/ByteBufAllocator.isDirectBufferPooled:()Z
      31: ifeq          43
      34: aload_1
      35: aload_2
      36: aload         4
      38: iload_3
      39: invokestatic  #55                 // Method newDirectBuffer0:(Ljava/lang/Object;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBufAllocator;I)Lio/netty/buffer/ByteBuf;
      42: areturn
      43: invokestatic  #56                 // Method io/netty/buffer/ByteBufUtil.threadLocalDirectBuffer:()Lio/netty/buffer/ByteBuf;
      46: astore        5
      48: aload         5
      50: ifnonnull     62
      53: aload_1
      54: aload_2
      55: aload         4
      57: iload_3
      58: invokestatic  #55                 // Method newDirectBuffer0:(Ljava/lang/Object;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBufAllocator;I)Lio/netty/buffer/ByteBuf;
      61: areturn
      62: aload         5
      64: aload_2
      65: aload_2
      66: invokevirtual #57                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      69: iload_3
      70: invokevirtual #58                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      73: pop
      74: aload_1
      75: invokestatic  #59                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      78: aload         5
      80: areturn

  private static io.netty.buffer.ByteBuf newDirectBuffer0(java.lang.Object, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBufAllocator, int);
    Code:
       0: aload_2
       1: iload_3
       2: invokeinterface #60,  2           // InterfaceMethod io/netty/buffer/ByteBufAllocator.directBuffer:(I)Lio/netty/buffer/ByteBuf;
       7: astore        4
       9: aload         4
      11: aload_1
      12: aload_1
      13: invokevirtual #57                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      16: iload_3
      17: invokevirtual #58                 // Method io/netty/buffer/ByteBuf.writeBytes:(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;
      20: pop
      21: aload_0
      22: invokestatic  #59                 // Method io/netty/util/ReferenceCountUtil.safeRelease:(Ljava/lang/Object;)V
      25: aload         4
      27: areturn

  protected static void checkResolvable(java.net.InetSocketAddress);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method java/net/InetSocketAddress.isUnresolved:()Z
       4: ifeq          15
       7: new           #62                 // class java/nio/channels/UnresolvedAddressException
      10: dup
      11: invokespecial #63                 // Method java/nio/channels/UnresolvedAddressException."<init>":()V
      14: athrow
      15: return

  protected final int doReadBytes(io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #64                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
       4: istore_2
       5: aload_0
       6: invokevirtual #35                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
       9: invokeinterface #65,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      14: aload_1
      15: invokevirtual #66                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      18: invokeinterface #67,  2           // InterfaceMethod io/netty/channel/RecvByteBufAllocator$Handle.attemptedBytesRead:(I)V
      23: aload_1
      24: invokevirtual #68                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
      27: ifeq          50
      30: aload_0
      31: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      34: aload_1
      35: invokevirtual #69                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      38: iload_2
      39: aload_1
      40: invokevirtual #70                 // Method io/netty/buffer/ByteBuf.capacity:()I
      43: invokevirtual #71                 // Method io/netty/channel/kqueue/BsdSocket.readAddress:(JII)I
      46: istore_3
      47: goto          81
      50: aload_1
      51: iload_2
      52: aload_1
      53: invokevirtual #66                 // Method io/netty/buffer/ByteBuf.writableBytes:()I
      56: invokevirtual #72                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      59: astore        4
      61: aload_0
      62: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      65: aload         4
      67: aload         4
      69: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
      72: aload         4
      74: invokevirtual #74                 // Method java/nio/ByteBuffer.limit:()I
      77: invokevirtual #75                 // Method io/netty/channel/kqueue/BsdSocket.read:(Ljava/nio/ByteBuffer;II)I
      80: istore_3
      81: iload_3
      82: ifle          93
      85: aload_1
      86: iload_2
      87: iload_3
      88: iadd
      89: invokevirtual #76                 // Method io/netty/buffer/ByteBuf.writerIndex:(I)Lio/netty/buffer/ByteBuf;
      92: pop
      93: iload_3
      94: ireturn

  protected final int doWriteBytes(io.netty.channel.ChannelOutboundBuffer, io.netty.buffer.ByteBuf) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokevirtual #68                 // Method io/netty/buffer/ByteBuf.hasMemoryAddress:()Z
       4: ifeq          42
       7: aload_0
       8: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      11: aload_2
      12: invokevirtual #69                 // Method io/netty/buffer/ByteBuf.memoryAddress:()J
      15: aload_2
      16: invokevirtual #57                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      19: aload_2
      20: invokevirtual #64                 // Method io/netty/buffer/ByteBuf.writerIndex:()I
      23: invokevirtual #77                 // Method io/netty/channel/kqueue/BsdSocket.writeAddress:(JII)I
      26: istore_3
      27: iload_3
      28: ifle          39
      31: aload_1
      32: iload_3
      33: i2l
      34: invokevirtual #78                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
      37: iconst_1
      38: ireturn
      39: goto          114
      42: aload_2
      43: invokevirtual #79                 // Method io/netty/buffer/ByteBuf.nioBufferCount:()I
      46: iconst_1
      47: if_icmpne     65
      50: aload_2
      51: aload_2
      52: invokevirtual #57                 // Method io/netty/buffer/ByteBuf.readerIndex:()I
      55: aload_2
      56: invokevirtual #50                 // Method io/netty/buffer/ByteBuf.readableBytes:()I
      59: invokevirtual #72                 // Method io/netty/buffer/ByteBuf.internalNioBuffer:(II)Ljava/nio/ByteBuffer;
      62: goto          69
      65: aload_2
      66: invokevirtual #80                 // Method io/netty/buffer/ByteBuf.nioBuffer:()Ljava/nio/ByteBuffer;
      69: astore_3
      70: aload_0
      71: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      74: aload_3
      75: aload_3
      76: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
      79: aload_3
      80: invokevirtual #74                 // Method java/nio/ByteBuffer.limit:()I
      83: invokevirtual #81                 // Method io/netty/channel/kqueue/BsdSocket.write:(Ljava/nio/ByteBuffer;II)I
      86: istore        4
      88: iload         4
      90: ifle          114
      93: aload_3
      94: aload_3
      95: invokevirtual #73                 // Method java/nio/ByteBuffer.position:()I
      98: iload         4
     100: iadd
     101: invokevirtual #82                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     104: pop
     105: aload_1
     106: iload         4
     108: i2l
     109: invokevirtual #78                 // Method io/netty/channel/ChannelOutboundBuffer.removeBytes:(J)V
     112: iconst_1
     113: ireturn
     114: ldc           #83                 // int 2147483647
     116: ireturn

  final boolean shouldBreakReadReady(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
       4: invokevirtual #84                 // Method io/netty/channel/kqueue/BsdSocket.isInputShutdown:()Z
       7: ifeq          28
      10: aload_0
      11: getfield      #22                 // Field inputClosedSeenErrorOnRead:Z
      14: ifne          24
      17: aload_1
      18: invokestatic  #6                  // Method isAllowHalfClosure:(Lio/netty/channel/ChannelConfig;)Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private static boolean isAllowHalfClosure(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: instanceof    #85                 // class io/netty/channel/kqueue/KQueueDomainSocketChannelConfig
       4: ifeq          15
       7: aload_0
       8: checkcast     #85                 // class io/netty/channel/kqueue/KQueueDomainSocketChannelConfig
      11: invokevirtual #86                 // Method io/netty/channel/kqueue/KQueueDomainSocketChannelConfig.isAllowHalfClosure:()Z
      14: ireturn
      15: aload_0
      16: instanceof    #87                 // class io/netty/channel/socket/SocketChannelConfig
      19: ifeq          38
      22: aload_0
      23: checkcast     #87                 // class io/netty/channel/socket/SocketChannelConfig
      26: invokeinterface #88,  1           // InterfaceMethod io/netty/channel/socket/SocketChannelConfig.isAllowHalfClosure:()Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: ireturn

  final void clearReadFilter();
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method isRegistered:()Z
       4: ifeq          54
       7: aload_0
       8: invokevirtual #27                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      11: astore_1
      12: aload_0
      13: invokevirtual #35                 // Method unsafe:()Lio/netty/channel/Channel$Unsafe;
      16: checkcast     #36                 // class io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe
      19: astore_2
      20: aload_1
      21: invokeinterface #90,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      26: ifeq          36
      29: aload_2
      30: invokevirtual #91                 // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe.clearReadFilter0:()V
      33: goto          51
      36: aload_1
      37: new           #92                 // class io/netty/channel/kqueue/AbstractKQueueChannel$1
      40: dup
      41: aload_0
      42: aload_2
      43: invokespecial #93                 // Method io/netty/channel/kqueue/AbstractKQueueChannel$1."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe;)V
      46: invokeinterface #94,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      51: goto          59
      54: aload_0
      55: iconst_0
      56: putfield      #29                 // Field readFilterEnabled:Z
      59: return

  void readFilter(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field readFilterEnabled:Z
       4: iload_1
       5: if_icmpeq     33
       8: aload_0
       9: iload_1
      10: putfield      #29                 // Field readFilterEnabled:Z
      13: aload_0
      14: getstatic     #46                 // Field io/netty/channel/kqueue/Native.EVFILT_READ:S
      17: iload_1
      18: ifeq          27
      21: getstatic     #44                 // Field io/netty/channel/kqueue/Native.EV_ADD_CLEAR_ENABLE:S
      24: goto          30
      27: getstatic     #95                 // Field io/netty/channel/kqueue/Native.EV_DELETE_DISABLE:S
      30: invokespecial #96                 // Method evSet:(SS)V
      33: return

  void writeFilter(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeFilterEnabled:Z
       4: iload_1
       5: if_icmpeq     33
       8: aload_0
       9: iload_1
      10: putfield      #5                  // Field writeFilterEnabled:Z
      13: aload_0
      14: getstatic     #43                 // Field io/netty/channel/kqueue/Native.EVFILT_WRITE:S
      17: iload_1
      18: ifeq          27
      21: getstatic     #44                 // Field io/netty/channel/kqueue/Native.EV_ADD_CLEAR_ENABLE:S
      24: goto          30
      27: getstatic     #95                 // Field io/netty/channel/kqueue/Native.EV_DELETE_DISABLE:S
      30: invokespecial #96                 // Method evSet:(SS)V
      33: return

  private void evSet(short, short);
    Code:
       0: aload_0
       1: invokevirtual #89                 // Method isRegistered:()Z
       4: ifeq          13
       7: aload_0
       8: iload_1
       9: iload_2
      10: invokespecial #45                 // Method evSet0:(SS)V
      13: return

  private void evSet0(short, short);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #34                 // Method evSet0:(SSI)V
       7: return

  private void evSet0(short, short, int);
    Code:
       0: aload_0
       1: invokevirtual #97                 // Method isOpen:()Z
       4: ifeq          21
       7: aload_0
       8: invokevirtual #27                 // Method eventLoop:()Lio/netty/channel/EventLoop;
      11: checkcast     #25                 // class io/netty/channel/kqueue/KQueueEventLoop
      14: aload_0
      15: iload_1
      16: iload_2
      17: iload_3
      18: invokevirtual #98                 // Method io/netty/channel/kqueue/KQueueEventLoop.evSet:(Lio/netty/channel/kqueue/AbstractKQueueChannel;SSI)V
      21: return

  protected void doBind(java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_1
       1: instanceof    #99                 // class java/net/InetSocketAddress
       4: ifeq          14
       7: aload_1
       8: checkcast     #99                 // class java/net/InetSocketAddress
      11: invokestatic  #100                // Method checkResolvable:(Ljava/net/InetSocketAddress;)V
      14: aload_0
      15: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      18: aload_1
      19: invokevirtual #101                // Method io/netty/channel/kqueue/BsdSocket.bind:(Ljava/net/SocketAddress;)V
      22: aload_0
      23: aload_0
      24: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      27: invokevirtual #14                 // Method io/netty/channel/kqueue/BsdSocket.localAddress:()Ljava/net/InetSocketAddress;
      30: putfield      #15                 // Field local:Ljava/net/SocketAddress;
      33: return

  protected boolean doConnect(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: aload_2
       1: instanceof    #99                 // class java/net/InetSocketAddress
       4: ifeq          14
       7: aload_2
       8: checkcast     #99                 // class java/net/InetSocketAddress
      11: invokestatic  #100                // Method checkResolvable:(Ljava/net/InetSocketAddress;)V
      14: aload_1
      15: instanceof    #99                 // class java/net/InetSocketAddress
      18: ifeq          28
      21: aload_1
      22: checkcast     #99                 // class java/net/InetSocketAddress
      25: goto          29
      28: aconst_null
      29: astore_3
      30: aload_3
      31: ifnull        38
      34: aload_3
      35: invokestatic  #100                // Method checkResolvable:(Ljava/net/InetSocketAddress;)V
      38: aload_0
      39: getfield      #2                  // Field remote:Ljava/net/SocketAddress;
      42: ifnull        53
      45: new           #102                // class java/nio/channels/AlreadyConnectedException
      48: dup
      49: invokespecial #103                // Method java/nio/channels/AlreadyConnectedException."<init>":()V
      52: athrow
      53: aload_2
      54: ifnull        65
      57: aload_0
      58: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      61: aload_2
      62: invokevirtual #101                // Method io/netty/channel/kqueue/BsdSocket.bind:(Ljava/net/SocketAddress;)V
      65: aload_0
      66: aload_1
      67: aload_2
      68: invokevirtual #104                // Method doConnect0:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Z
      71: istore        4
      73: iload         4
      75: ifeq          101
      78: aload_0
      79: aload_3
      80: ifnonnull     87
      83: aload_1
      84: goto          98
      87: aload_3
      88: aload_0
      89: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
      92: invokevirtual #16                 // Method io/netty/channel/kqueue/BsdSocket.remoteAddress:()Ljava/net/InetSocketAddress;
      95: invokestatic  #105                // Method io/netty/channel/unix/UnixChannelUtil.computeRemoteAddr:(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      98: putfield      #2                  // Field remote:Ljava/net/SocketAddress;
     101: aload_0
     102: aload_0
     103: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
     106: invokevirtual #14                 // Method io/netty/channel/kqueue/BsdSocket.localAddress:()Ljava/net/InetSocketAddress;
     109: putfield      #15                 // Field local:Ljava/net/SocketAddress;
     112: iload         4
     114: ireturn

  protected boolean doConnect0(java.net.SocketAddress, java.net.SocketAddress) throws java.lang.Exception;
    Code:
       0: iconst_0
       1: istore_3
       2: aload_0
       3: getfield      #12                 // Field socket:Lio/netty/channel/kqueue/BsdSocket;
       6: aload_1
       7: invokevirtual #106                // Method io/netty/channel/kqueue/BsdSocket.connect:(Ljava/net/SocketAddress;)Z
      10: istore        4
      12: iload         4
      14: ifne          22
      17: aload_0
      18: iconst_1
      19: invokevirtual #31                 // Method writeFilter:(Z)V
      22: iconst_1
      23: istore_3
      24: iload         4
      26: istore        5
      28: iload_3
      29: ifne          36
      32: aload_0
      33: invokevirtual #24                 // Method doClose:()V
      36: iload         5
      38: ireturn
      39: astore        6
      41: iload_3
      42: ifne          49
      45: aload_0
      46: invokevirtual #24                 // Method doClose:()V
      49: aload         6
      51: athrow
    Exception table:
       from    to  target type
           2    28    39   any
          39    41    39   any

  protected java.net.SocketAddress localAddress0();
    Code:
       0: aload_0
       1: getfield      #15                 // Field local:Ljava/net/SocketAddress;
       4: areturn

  protected java.net.SocketAddress remoteAddress0();
    Code:
       0: aload_0
       1: getfield      #2                  // Field remote:Ljava/net/SocketAddress;
       4: areturn

  protected io.netty.channel.AbstractChannel$AbstractUnsafe newUnsafe();
    Code:
       0: aload_0
       1: invokevirtual #107                // Method newUnsafe:()Lio/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe;
       4: areturn

  public io.netty.channel.ChannelConfig config();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
       4: areturn

  static io.netty.channel.ChannelPromise access$000(io.netty.channel.kqueue.AbstractKQueueChannel);
    Code:
       0: aload_0
       1: getfield      #7                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       4: areturn

  static io.netty.channel.ChannelPromise access$002(io.netty.channel.kqueue.AbstractKQueueChannel, io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #7                  // Field connectPromise:Lio/netty/channel/ChannelPromise;
       6: areturn

  static boolean access$100(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method isAllowHalfClosure:(Lio/netty/channel/ChannelConfig;)Z
       4: ireturn

  static boolean access$200(io.netty.channel.kqueue.AbstractKQueueChannel);
    Code:
       0: aload_0
       1: getfield      #5                  // Field writeFilterEnabled:Z
       4: ireturn

  static java.net.SocketAddress access$302(io.netty.channel.kqueue.AbstractKQueueChannel, java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field requestedRemoteAddress:Ljava/net/SocketAddress;
       6: areturn

  static io.netty.util.concurrent.Future access$402(io.netty.channel.kqueue.AbstractKQueueChannel, io.netty.util.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #3                  // Field connectTimeoutFuture:Lio/netty/util/concurrent/Future;
       6: areturn

  static io.netty.util.concurrent.Future access$400(io.netty.channel.kqueue.AbstractKQueueChannel);
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectTimeoutFuture:Lio/netty/util/concurrent/Future;
       4: areturn

  static java.net.SocketAddress access$300(io.netty.channel.kqueue.AbstractKQueueChannel);
    Code:
       0: aload_0
       1: getfield      #4                  // Field requestedRemoteAddress:Ljava/net/SocketAddress;
       4: areturn

  static java.net.SocketAddress access$502(io.netty.channel.kqueue.AbstractKQueueChannel, java.net.SocketAddress);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field remote:Ljava/net/SocketAddress;
       6: areturn

  static {};
    Code:
       0: new           #108                // class io/netty/channel/ChannelMetadata
       3: dup
       4: iconst_0
       5: invokespecial #109                // Method io/netty/channel/ChannelMetadata."<init>":(Z)V
       8: putstatic     #21                 // Field METADATA:Lio/netty/channel/ChannelMetadata;
      11: return
}
