Compiled from "KQueueChannelConfig.java"
public class io.netty.channel.kqueue.KQueueChannelConfig extends io.netty.channel.DefaultChannelConfig {
  private volatile boolean transportProvidesGuess;

  private volatile long maxBytesPerGatheringWrite;

  io.netty.channel.kqueue.KQueueChannelConfig(io.netty.channel.kqueue.AbstractKQueueChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;)V
       5: aload_0
       6: getstatic     #2                  // Field io/netty/channel/unix/Limits.SSIZE_MAX:J
       9: putfield      #3                  // Field maxBytesPerGatheringWrite:J
      12: return

  io.netty.channel.kqueue.KQueueChannelConfig(io.netty.channel.kqueue.AbstractKQueueChannel, io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method io/netty/channel/DefaultChannelConfig."<init>":(Lio/netty/channel/Channel;Lio/netty/channel/RecvByteBufAllocator;)V
       6: aload_0
       7: getstatic     #2                  // Field io/netty/channel/unix/Limits.SSIZE_MAX:J
      10: putfield      #3                  // Field maxBytesPerGatheringWrite:J
      13: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #5                  // Method io/netty/channel/DefaultChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_1
       6: anewarray     #6                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #7                  // Field io/netty/channel/kqueue/KQueueChannelOption.RCV_ALLOC_TRANSPORT_PROVIDES_GUESS:Lio/netty/channel/ChannelOption;
      14: aastore
      15: invokevirtual #8                  // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      18: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field io/netty/channel/kqueue/KQueueChannelOption.RCV_ALLOC_TRANSPORT_PROVIDES_GUESS:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #9                  // Method getRcvAllocTransportProvidesGuess:()Z
      11: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: instanceof    #11                 // class io/netty/channel/unix/IntegerUnixChannelOption
      19: ifeq          52
      22: aload_1
      23: checkcast     #11                 // class io/netty/channel/unix/IntegerUnixChannelOption
      26: astore_2
      27: aload_0
      28: getfield      #12                 // Field channel:Lio/netty/channel/Channel;
      31: checkcast     #13                 // class io/netty/channel/kqueue/AbstractKQueueChannel
      34: getfield      #14                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      37: aload_2
      38: invokevirtual #15                 // Method io/netty/channel/unix/IntegerUnixChannelOption.level:()I
      41: aload_2
      42: invokevirtual #16                 // Method io/netty/channel/unix/IntegerUnixChannelOption.optname:()I
      45: invokevirtual #17                 // Method io/netty/channel/kqueue/BsdSocket.getIntOpt:(II)I
      48: invokestatic  #18                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: areturn
      52: aload_1
      53: instanceof    #19                 // class io/netty/channel/unix/RawUnixChannelOption
      56: ifeq          99
      59: aload_1
      60: checkcast     #19                 // class io/netty/channel/unix/RawUnixChannelOption
      63: astore_2
      64: aload_2
      65: invokevirtual #20                 // Method io/netty/channel/unix/RawUnixChannelOption.length:()I
      68: invokestatic  #21                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      71: astore_3
      72: aload_0
      73: getfield      #12                 // Field channel:Lio/netty/channel/Channel;
      76: checkcast     #13                 // class io/netty/channel/kqueue/AbstractKQueueChannel
      79: getfield      #14                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      82: aload_2
      83: invokevirtual #22                 // Method io/netty/channel/unix/RawUnixChannelOption.level:()I
      86: aload_2
      87: invokevirtual #23                 // Method io/netty/channel/unix/RawUnixChannelOption.optname:()I
      90: aload_3
      91: invokevirtual #24                 // Method io/netty/channel/kqueue/BsdSocket.getRawOpt:(IILjava/nio/ByteBuffer;)V
      94: aload_3
      95: invokevirtual #25                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      98: areturn
      99: goto          112
     102: astore_2
     103: new           #27                 // class io/netty/channel/ChannelException
     106: dup
     107: aload_2
     108: invokespecial #28                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
     111: athrow
     112: aload_0
     113: aload_1
     114: invokespecial #29                 // Method io/netty/channel/DefaultChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
     117: areturn
    Exception table:
       from    to  target type
          15    51   102   Class java/io/IOException
          52    98   102   Class java/io/IOException

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #30                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #7                  // Field io/netty/channel/kqueue/KQueueChannelOption.RCV_ALLOC_TRANSPORT_PROVIDES_GUESS:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #31                 // class java/lang/Boolean
      18: invokevirtual #32                 // Method java/lang/Boolean.booleanValue:()Z
      21: invokevirtual #33                 // Method setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueChannelConfig;
      24: pop
      25: goto          129
      28: aload_1
      29: instanceof    #11                 // class io/netty/channel/unix/IntegerUnixChannelOption
      32: ifeq          70
      35: aload_1
      36: checkcast     #11                 // class io/netty/channel/unix/IntegerUnixChannelOption
      39: astore_3
      40: aload_0
      41: getfield      #12                 // Field channel:Lio/netty/channel/Channel;
      44: checkcast     #13                 // class io/netty/channel/kqueue/AbstractKQueueChannel
      47: getfield      #14                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      50: aload_3
      51: invokevirtual #15                 // Method io/netty/channel/unix/IntegerUnixChannelOption.level:()I
      54: aload_3
      55: invokevirtual #16                 // Method io/netty/channel/unix/IntegerUnixChannelOption.optname:()I
      58: aload_2
      59: checkcast     #34                 // class java/lang/Integer
      62: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
      65: invokevirtual #36                 // Method io/netty/channel/kqueue/BsdSocket.setIntOpt:(III)V
      68: iconst_1
      69: ireturn
      70: aload_1
      71: instanceof    #19                 // class io/netty/channel/unix/RawUnixChannelOption
      74: ifeq          109
      77: aload_1
      78: checkcast     #19                 // class io/netty/channel/unix/RawUnixChannelOption
      81: astore_3
      82: aload_0
      83: getfield      #12                 // Field channel:Lio/netty/channel/Channel;
      86: checkcast     #13                 // class io/netty/channel/kqueue/AbstractKQueueChannel
      89: getfield      #14                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      92: aload_3
      93: invokevirtual #22                 // Method io/netty/channel/unix/RawUnixChannelOption.level:()I
      96: aload_3
      97: invokevirtual #23                 // Method io/netty/channel/unix/RawUnixChannelOption.optname:()I
     100: aload_2
     101: checkcast     #37                 // class java/nio/ByteBuffer
     104: invokevirtual #38                 // Method io/netty/channel/kqueue/BsdSocket.setRawOpt:(IILjava/nio/ByteBuffer;)V
     107: iconst_1
     108: ireturn
     109: goto          122
     112: astore_3
     113: new           #27                 // class io/netty/channel/ChannelException
     116: dup
     117: aload_3
     118: invokespecial #28                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
     121: athrow
     122: aload_0
     123: aload_1
     124: aload_2
     125: invokespecial #39                 // Method io/netty/channel/DefaultChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     128: ireturn
     129: iconst_1
     130: ireturn
    Exception table:
       from    to  target type
          28    69   112   Class java/io/IOException
          70   108   112   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field transportProvidesGuess:Z
       5: aload_0
       6: areturn

  public boolean getRcvAllocTransportProvidesGuess();
    Code:
       0: aload_0
       1: getfield      #40                 // Field transportProvidesGuess:Z
       4: ireturn

  public io.netty.channel.kqueue.KQueueChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #41                 // Method io/netty/channel/DefaultChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #42                 // Method io/netty/channel/DefaultChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #43                 // Method io/netty/channel/DefaultChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #44                 // Method io/netty/channel/DefaultChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_1
       1: invokeinterface #45,  1           // InterfaceMethod io/netty/channel/RecvByteBufAllocator.newHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
       6: instanceof    #46                 // class io/netty/channel/RecvByteBufAllocator$ExtendedHandle
       9: ifne          40
      12: new           #47                 // class java/lang/IllegalArgumentException
      15: dup
      16: new           #48                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #50                 // String allocator.newHandle() must return an object of type:
      25: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #46                 // class io/netty/channel/RecvByteBufAllocator$ExtendedHandle
      30: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #54                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_1
      42: invokespecial #55                 // Method io/netty/channel/DefaultChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/ChannelConfig;
      45: pop
      46: aload_0
      47: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #56                 // Method io/netty/channel/DefaultChannelConfig.setAutoRead:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #57                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #58                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #59                 // Method io/netty/channel/DefaultChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #60                 // Method io/netty/channel/DefaultChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  protected final void autoReadCleared();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #13                 // class io/netty/channel/kqueue/AbstractKQueueChannel
       7: invokevirtual #61                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.clearReadFilter:()V
      10: return

  final void setMaxBytesPerGatheringWrite(long);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field io/netty/channel/unix/Limits.SSIZE_MAX:J
       4: lload_1
       5: invokestatic  #62                 // Method java/lang/Math.min:(JJ)J
       8: putfield      #3                  // Field maxBytesPerGatheringWrite:J
      11: return

  final long getMaxBytesPerGatheringWrite();
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxBytesPerGatheringWrite:J
       4: lreturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #63                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #65                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #66                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #67                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #70                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #71                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #72                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: areturn
}
