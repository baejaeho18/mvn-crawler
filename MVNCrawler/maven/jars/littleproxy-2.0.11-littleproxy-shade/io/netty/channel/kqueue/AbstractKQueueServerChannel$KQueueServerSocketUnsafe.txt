Compiled from "AbstractKQueueServerChannel.java"
final class io.netty.channel.kqueue.AbstractKQueueServerChannel$KQueueServerSocketUnsafe extends io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe {
  private final byte[] acceptedAddress;

  static final boolean $assertionsDisabled;

  final io.netty.channel.kqueue.AbstractKQueueServerChannel this$0;

  io.netty.channel.kqueue.AbstractKQueueServerChannel$KQueueServerSocketUnsafe(io.netty.channel.kqueue.AbstractKQueueServerChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueServerChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
      10: aload_0
      11: bipush        26
      13: newarray       byte
      15: putfield      #3                  // Field acceptedAddress:[B
      18: return

  void readReady(io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);
    Code:
       0: getstatic     #4                  // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueServerChannel;
      10: invokevirtual #5                  // Method io/netty/channel/kqueue/AbstractKQueueServerChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #6,  1            // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #7                  // class java/lang/AssertionError
      24: dup
      25: invokespecial #8                  // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueServerChannel;
      33: invokevirtual #9                  // Method io/netty/channel/kqueue/AbstractKQueueServerChannel.config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
      36: astore_2
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueServerChannel;
      41: aload_2
      42: invokevirtual #10                 // Method io/netty/channel/kqueue/AbstractKQueueServerChannel.shouldBreakReadReady:(Lio/netty/channel/ChannelConfig;)Z
      45: ifeq          53
      48: aload_0
      49: invokevirtual #11                 // Method clearReadFilter0:()V
      52: return
      53: aload_0
      54: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueServerChannel;
      57: invokevirtual #12                 // Method io/netty/channel/kqueue/AbstractKQueueServerChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      60: astore_3
      61: aload_1
      62: aload_2
      63: invokevirtual #13                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      66: aload_1
      67: iconst_1
      68: invokevirtual #14                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.attemptedBytesRead:(I)V
      71: aload_0
      72: invokevirtual #15                 // Method readReadyBefore:()V
      75: aconst_null
      76: astore        4
      78: aload_0
      79: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueServerChannel;
      82: getfield      #16                 // Field io/netty/channel/kqueue/AbstractKQueueServerChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      85: aload_0
      86: getfield      #3                  // Field acceptedAddress:[B
      89: invokevirtual #17                 // Method io/netty/channel/kqueue/BsdSocket.accept:([B)I
      92: istore        5
      94: iload         5
      96: iconst_m1
      97: if_icmpne     108
     100: aload_1
     101: iconst_m1
     102: invokevirtual #18                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
     105: goto          157
     108: aload_1
     109: iconst_1
     110: invokevirtual #18                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
     113: aload_1
     114: iconst_1
     115: invokevirtual #19                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.incMessagesRead:(I)V
     118: aload_0
     119: iconst_0
     120: putfield      #20                 // Field readPending:Z
     123: aload_3
     124: aload_0
     125: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueServerChannel;
     128: iload         5
     130: aload_0
     131: getfield      #3                  // Field acceptedAddress:[B
     134: iconst_1
     135: aload_0
     136: getfield      #3                  // Field acceptedAddress:[B
     139: iconst_0
     140: baload
     141: invokevirtual #21                 // Method io/netty/channel/kqueue/AbstractKQueueServerChannel.newChildChannel:(I[BII)Lio/netty/channel/Channel;
     144: invokeinterface #22,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     149: pop
     150: aload_1
     151: invokevirtual #23                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.continueReading:()Z
     154: ifne          78
     157: goto          166
     160: astore        5
     162: aload         5
     164: astore        4
     166: aload_1
     167: invokevirtual #25                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
     170: aload_3
     171: invokeinterface #26,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     176: pop
     177: aload         4
     179: ifnull        191
     182: aload_3
     183: aload         4
     185: invokeinterface #27,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
     190: pop
     191: aload_0
     192: aload_2
     193: invokevirtual #28                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     196: goto          209
     199: astore        6
     201: aload_0
     202: aload_2
     203: invokevirtual #28                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     206: aload         6
     208: athrow
     209: return
    Exception table:
       from    to  target type
          78   157   160   Class java/lang/Throwable
          78   191   199   any
         199   201   199   any

  static {};
    Code:
       0: ldc           #29                 // class io/netty/channel/kqueue/AbstractKQueueServerChannel
       2: invokevirtual #30                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #4                  // Field $assertionsDisabled:Z
      16: return
}
