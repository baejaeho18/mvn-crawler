Compiled from "KQueueSocketChannelConfig.java"
public final class io.netty.channel.kqueue.KQueueSocketChannelConfig extends io.netty.channel.kqueue.KQueueChannelConfig implements io.netty.channel.socket.SocketChannelConfig {
  private volatile boolean allowHalfClosure;

  private volatile boolean tcpFastopen;

  io.netty.channel.kqueue.KQueueSocketChannelConfig(io.netty.channel.kqueue.KQueueSocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/kqueue/KQueueChannelConfig."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
       5: invokestatic  #2                  // Method io/netty/util/internal/PlatformDependent.canEnableTcpNoDelayByDefault:()Z
       8: ifeq          17
      11: aload_0
      12: iconst_1
      13: invokevirtual #3                  // Method setTcpNoDelay:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
      16: pop
      17: aload_0
      18: invokespecial #4                  // Method calculateMaxBytesPerGatheringWrite:()V
      21: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #5                  // Method io/netty/channel/kqueue/KQueueChannelConfig.getOptions:()Ljava/util/Map;
       5: bipush        10
       7: anewarray     #6                  // class io/netty/channel/ChannelOption
      10: dup
      11: iconst_0
      12: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      15: aastore
      16: dup
      17: iconst_1
      18: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      21: aastore
      22: dup
      23: iconst_2
      24: getstatic     #9                  // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      27: aastore
      28: dup
      29: iconst_3
      30: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      33: aastore
      34: dup
      35: iconst_4
      36: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      39: aastore
      40: dup
      41: iconst_5
      42: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
      45: aastore
      46: dup
      47: bipush        6
      49: getstatic     #13                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
      52: aastore
      53: dup
      54: bipush        7
      56: getstatic     #14                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
      59: aastore
      60: dup
      61: bipush        8
      63: getstatic     #15                 // Field io/netty/channel/kqueue/KQueueChannelOption.SO_SNDLOWAT:Lio/netty/channel/ChannelOption;
      66: aastore
      67: dup
      68: bipush        9
      70: getstatic     #16                 // Field io/netty/channel/kqueue/KQueueChannelOption.TCP_NOPUSH:Lio/netty/channel/ChannelOption;
      73: aastore
      74: invokevirtual #17                 // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      77: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #18                 // Method getReceiveBufferSize:()I
      11: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn
      15: aload_1
      16: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      19: if_acmpne     30
      22: aload_0
      23: invokevirtual #20                 // Method getSendBufferSize:()I
      26: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: areturn
      30: aload_1
      31: getstatic     #9                  // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #21                 // Method isTcpNoDelay:()Z
      41: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_1
      46: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      49: if_acmpne     60
      52: aload_0
      53: invokevirtual #23                 // Method isKeepAlive:()Z
      56: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: areturn
      60: aload_1
      61: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      64: if_acmpne     75
      67: aload_0
      68: invokevirtual #24                 // Method isReuseAddress:()Z
      71: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      74: areturn
      75: aload_1
      76: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
      79: if_acmpne     90
      82: aload_0
      83: invokevirtual #25                 // Method getSoLinger:()I
      86: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: areturn
      90: aload_1
      91: getstatic     #13                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
      94: if_acmpne     105
      97: aload_0
      98: invokevirtual #26                 // Method getTrafficClass:()I
     101: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: areturn
     105: aload_1
     106: getstatic     #14                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
     109: if_acmpne     120
     112: aload_0
     113: invokevirtual #27                 // Method isAllowHalfClosure:()Z
     116: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     119: areturn
     120: aload_1
     121: getstatic     #15                 // Field io/netty/channel/kqueue/KQueueChannelOption.SO_SNDLOWAT:Lio/netty/channel/ChannelOption;
     124: if_acmpne     135
     127: aload_0
     128: invokevirtual #28                 // Method getSndLowAt:()I
     131: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     134: areturn
     135: aload_1
     136: getstatic     #16                 // Field io/netty/channel/kqueue/KQueueChannelOption.TCP_NOPUSH:Lio/netty/channel/ChannelOption;
     139: if_acmpne     150
     142: aload_0
     143: invokevirtual #29                 // Method isTcpNoPush:()Z
     146: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     149: areturn
     150: aload_1
     151: getstatic     #30                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
     154: if_acmpne     165
     157: aload_0
     158: invokevirtual #31                 // Method isTcpFastOpenConnect:()Z
     161: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     164: areturn
     165: aload_0
     166: aload_1
     167: invokespecial #32                 // Method io/netty/channel/kqueue/KQueueChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
     170: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #33                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #7                  // Field io/netty/channel/ChannelOption.SO_RCVBUF:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #34                 // class java/lang/Integer
      18: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
      21: invokevirtual #36                 // Method setReceiveBufferSize:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
      24: pop
      25: goto          253
      28: aload_1
      29: getstatic     #8                  // Field io/netty/channel/ChannelOption.SO_SNDBUF:Lio/netty/channel/ChannelOption;
      32: if_acmpne     50
      35: aload_0
      36: aload_2
      37: checkcast     #34                 // class java/lang/Integer
      40: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
      43: invokevirtual #37                 // Method setSendBufferSize:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
      46: pop
      47: goto          253
      50: aload_1
      51: getstatic     #9                  // Field io/netty/channel/ChannelOption.TCP_NODELAY:Lio/netty/channel/ChannelOption;
      54: if_acmpne     72
      57: aload_0
      58: aload_2
      59: checkcast     #38                 // class java/lang/Boolean
      62: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
      65: invokevirtual #3                  // Method setTcpNoDelay:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
      68: pop
      69: goto          253
      72: aload_1
      73: getstatic     #10                 // Field io/netty/channel/ChannelOption.SO_KEEPALIVE:Lio/netty/channel/ChannelOption;
      76: if_acmpne     94
      79: aload_0
      80: aload_2
      81: checkcast     #38                 // class java/lang/Boolean
      84: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
      87: invokevirtual #40                 // Method setKeepAlive:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
      90: pop
      91: goto          253
      94: aload_1
      95: getstatic     #11                 // Field io/netty/channel/ChannelOption.SO_REUSEADDR:Lio/netty/channel/ChannelOption;
      98: if_acmpne     116
     101: aload_0
     102: aload_2
     103: checkcast     #38                 // class java/lang/Boolean
     106: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
     109: invokevirtual #41                 // Method setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
     112: pop
     113: goto          253
     116: aload_1
     117: getstatic     #12                 // Field io/netty/channel/ChannelOption.SO_LINGER:Lio/netty/channel/ChannelOption;
     120: if_acmpne     138
     123: aload_0
     124: aload_2
     125: checkcast     #34                 // class java/lang/Integer
     128: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     131: invokevirtual #42                 // Method setSoLinger:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
     134: pop
     135: goto          253
     138: aload_1
     139: getstatic     #13                 // Field io/netty/channel/ChannelOption.IP_TOS:Lio/netty/channel/ChannelOption;
     142: if_acmpne     160
     145: aload_0
     146: aload_2
     147: checkcast     #34                 // class java/lang/Integer
     150: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     153: invokevirtual #43                 // Method setTrafficClass:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
     156: pop
     157: goto          253
     160: aload_1
     161: getstatic     #14                 // Field io/netty/channel/ChannelOption.ALLOW_HALF_CLOSURE:Lio/netty/channel/ChannelOption;
     164: if_acmpne     182
     167: aload_0
     168: aload_2
     169: checkcast     #38                 // class java/lang/Boolean
     172: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
     175: invokevirtual #44                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
     178: pop
     179: goto          253
     182: aload_1
     183: getstatic     #15                 // Field io/netty/channel/kqueue/KQueueChannelOption.SO_SNDLOWAT:Lio/netty/channel/ChannelOption;
     186: if_acmpne     203
     189: aload_0
     190: aload_2
     191: checkcast     #34                 // class java/lang/Integer
     194: invokevirtual #35                 // Method java/lang/Integer.intValue:()I
     197: invokevirtual #45                 // Method setSndLowAt:(I)V
     200: goto          253
     203: aload_1
     204: getstatic     #16                 // Field io/netty/channel/kqueue/KQueueChannelOption.TCP_NOPUSH:Lio/netty/channel/ChannelOption;
     207: if_acmpne     224
     210: aload_0
     211: aload_2
     212: checkcast     #38                 // class java/lang/Boolean
     215: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
     218: invokevirtual #46                 // Method setTcpNoPush:(Z)V
     221: goto          253
     224: aload_1
     225: getstatic     #30                 // Field io/netty/channel/ChannelOption.TCP_FASTOPEN_CONNECT:Lio/netty/channel/ChannelOption;
     228: if_acmpne     246
     231: aload_0
     232: aload_2
     233: checkcast     #38                 // class java/lang/Boolean
     236: invokevirtual #39                 // Method java/lang/Boolean.booleanValue:()Z
     239: invokevirtual #47                 // Method setTcpFastOpenConnect:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
     242: pop
     243: goto          253
     246: aload_0
     247: aload_1
     248: aload_2
     249: invokespecial #48                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
     252: ireturn
     253: iconst_1
     254: ireturn

  public int getReceiveBufferSize();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #52                 // Method io/netty/channel/kqueue/BsdSocket.getReceiveBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getSendBufferSize();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #56                 // Method io/netty/channel/kqueue/BsdSocket.getSendBufferSize:()I
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getSoLinger();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #57                 // Method io/netty/channel/kqueue/BsdSocket.getSoLinger:()I
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getTrafficClass();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #58                 // Method io/netty/channel/kqueue/BsdSocket.getTrafficClass:()I
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public boolean isKeepAlive();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #59                 // Method io/netty/channel/kqueue/BsdSocket.isKeepAlive:()Z
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public boolean isReuseAddress();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #60                 // Method io/netty/channel/kqueue/BsdSocket.isReuseAddress:()Z
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public boolean isTcpNoDelay();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #61                 // Method io/netty/channel/kqueue/BsdSocket.isTcpNoDelay:()Z
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public int getSndLowAt();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #62                 // Method io/netty/channel/kqueue/BsdSocket.getSndLowAt:()I
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public void setSndLowAt(int);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #63                 // Method io/netty/channel/kqueue/BsdSocket.setSndLowAt:(I)V
      14: goto          27
      17: astore_2
      18: new           #54                 // class io/netty/channel/ChannelException
      21: dup
      22: aload_2
      23: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    14    17   Class java/io/IOException

  public boolean isTcpNoPush();
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #64                 // Method io/netty/channel/kqueue/BsdSocket.isTcpNoPush:()Z
      13: ireturn
      14: astore_1
      15: new           #54                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public void setTcpNoPush(boolean);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #65                 // Method io/netty/channel/kqueue/BsdSocket.setTcpNoPush:(Z)V
      14: goto          27
      17: astore_2
      18: new           #54                 // class io/netty/channel/ChannelException
      21: dup
      22: aload_2
      23: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      26: athrow
      27: return
    Exception table:
       from    to  target type
           0    14    17   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setKeepAlive(boolean);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #66                 // Method io/netty/channel/kqueue/BsdSocket.setKeepAlive:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #54                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #67                 // Method io/netty/channel/kqueue/BsdSocket.setReceiveBufferSize:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #54                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #68                 // Method io/netty/channel/kqueue/BsdSocket.setReuseAddress:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #54                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #69                 // Method io/netty/channel/kqueue/BsdSocket.setSendBufferSize:(I)V
      14: aload_0
      15: invokespecial #4                  // Method calculateMaxBytesPerGatheringWrite:()V
      18: aload_0
      19: areturn
      20: astore_2
      21: new           #54                 // class io/netty/channel/ChannelException
      24: dup
      25: aload_2
      26: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      29: athrow
    Exception table:
       from    to  target type
           0    19    20   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setSoLinger(int);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #70                 // Method io/netty/channel/kqueue/BsdSocket.setSoLinger:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #54                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #71                 // Method io/netty/channel/kqueue/BsdSocket.setTcpNoDelay:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #54                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setTrafficClass(int);
    Code:
       0: aload_0
       1: getfield      #49                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #50                 // class io/netty/channel/kqueue/KQueueSocketChannel
       7: getfield      #51                 // Field io/netty/channel/kqueue/KQueueSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #72                 // Method io/netty/channel/kqueue/BsdSocket.setTrafficClass:(I)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #54                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #55                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public boolean isAllowHalfClosure();
    Code:
       0: aload_0
       1: getfield      #73                 // Field allowHalfClosure:Z
       4: ireturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setTcpFastOpenConnect(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #74                 // Field tcpFastopen:Z
       5: aload_0
       6: areturn

  public boolean isTcpFastOpenConnect();
    Code:
       0: aload_0
       1: getfield      #74                 // Field tcpFastopen:Z
       4: ireturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #75                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #73                 // Field allowHalfClosure:Z
       5: aload_0
       6: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #76                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #77                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #78                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #79                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #80                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #81                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #82                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setAutoClose:(Z)Lio/netty/channel/ChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #83                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #84                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #85                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #86                 // Method io/netty/channel/kqueue/KQueueChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  private void calculateMaxBytesPerGatheringWrite();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSendBufferSize:()I
       4: iconst_1
       5: ishl
       6: istore_1
       7: iload_1
       8: ifle          22
      11: aload_0
      12: aload_0
      13: invokevirtual #20                 // Method getSendBufferSize:()I
      16: iconst_1
      17: ishl
      18: i2l
      19: invokevirtual #87                 // Method setMaxBytesPerGatheringWrite:(J)V
      22: return

  public io.netty.channel.kqueue.KQueueChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #90                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #91                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #92                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #95                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #96                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #97                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #98                 // Method setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #90                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #91                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #99                 // Method setAutoClose:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #92                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #95                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #96                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #97                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #99                 // Method setAutoClose:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #92                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #95                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #96                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #97                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #44                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #100                // Method setPerformancePreferences:(III)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       7: areturn

  public io.netty.channel.socket.SocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setTrafficClass(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method setTrafficClass:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setKeepAlive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #40                 // Method setKeepAlive:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #36                 // Method setReceiveBufferSize:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #37                 // Method setSendBufferSize:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setSoLinger(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method setSoLinger:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.SocketChannelConfig setTcpNoDelay(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #3                  // Method setTcpNoDelay:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #89                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #88                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAutoClose(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #99                 // Method setAutoClose:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #92                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #93                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #94                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #95                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #96                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.DuplexChannelConfig setAllowHalfClosure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #44                 // Method setAllowHalfClosure:(Z)Lio/netty/channel/kqueue/KQueueSocketChannelConfig;
       5: areturn
}
