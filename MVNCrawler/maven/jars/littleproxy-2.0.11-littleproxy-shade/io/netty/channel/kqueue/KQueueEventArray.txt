Compiled from "KQueueEventArray.java"
final class io.netty.channel.kqueue.KQueueEventArray {
  private static final int KQUEUE_EVENT_SIZE;

  private static final int KQUEUE_IDENT_OFFSET;

  private static final int KQUEUE_FILTER_OFFSET;

  private static final int KQUEUE_FFLAGS_OFFSET;

  private static final int KQUEUE_FLAGS_OFFSET;

  private static final int KQUEUE_DATA_OFFSET;

  private java.nio.ByteBuffer memory;

  private long memoryAddress;

  private int size;

  private int capacity;

  io.netty.channel.kqueue.KQueueEventArray(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iconst_1
       6: if_icmpge     36
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #3                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #5                  // String capacity must be >= 1 but was
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: invokestatic  #10                 // Method calculateBufferCapacity:(I)I
      41: invokestatic  #11                 // Method io/netty/channel/unix/Buffer.allocateDirectWithNativeOrder:(I)Ljava/nio/ByteBuffer;
      44: putfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      47: aload_0
      48: aload_0
      49: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      52: invokestatic  #13                 // Method io/netty/channel/unix/Buffer.memoryAddress:(Ljava/nio/ByteBuffer;)J
      55: putfield      #14                 // Field memoryAddress:J
      58: aload_0
      59: iload_1
      60: putfield      #15                 // Field capacity:I
      63: return

  long memoryAddress();
    Code:
       0: aload_0
       1: getfield      #14                 // Field memoryAddress:J
       4: lreturn

  int capacity();
    Code:
       0: aload_0
       1: getfield      #15                 // Field capacity:I
       4: ireturn

  int size();
    Code:
       0: aload_0
       1: getfield      #16                 // Field size:I
       4: ireturn

  void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #16                 // Field size:I
       5: return

  void evSet(io.netty.channel.kqueue.AbstractKQueueChannel, short, short, int);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method reallocIfNeeded:()V
       4: aload_0
       5: dup
       6: getfield      #16                 // Field size:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #16                 // Field size:I
      15: invokestatic  #18                 // Method getKEventOffset:(I)I
      18: i2l
      19: aload_0
      20: getfield      #14                 // Field memoryAddress:J
      23: ladd
      24: aload_1
      25: getfield      #19                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      28: invokevirtual #20                 // Method io/netty/channel/kqueue/BsdSocket.intValue:()I
      31: iload_2
      32: iload_3
      33: iload         4
      35: invokestatic  #21                 // Method evSet:(JISSI)V
      38: return

  private void reallocIfNeeded();
    Code:
       0: aload_0
       1: getfield      #16                 // Field size:I
       4: aload_0
       5: getfield      #15                 // Field capacity:I
       8: if_icmpne     16
      11: aload_0
      12: iconst_1
      13: invokevirtual #22                 // Method realloc:(Z)V
      16: return

  void realloc(boolean);
    Code:
       0: aload_0
       1: getfield      #15                 // Field capacity:I
       4: ldc           #23                 // int 65536
       6: if_icmpgt     18
       9: aload_0
      10: getfield      #15                 // Field capacity:I
      13: iconst_1
      14: ishl
      15: goto          29
      18: aload_0
      19: getfield      #15                 // Field capacity:I
      22: aload_0
      23: getfield      #15                 // Field capacity:I
      26: iadd
      27: iconst_1
      28: ishr
      29: istore_2
      30: iload_2
      31: invokestatic  #10                 // Method calculateBufferCapacity:(I)I
      34: invokestatic  #11                 // Method io/netty/channel/unix/Buffer.allocateDirectWithNativeOrder:(I)Ljava/nio/ByteBuffer;
      37: astore_3
      38: aload_0
      39: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      42: iconst_0
      43: invokevirtual #24                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      46: aload_0
      47: getfield      #16                 // Field size:I
      50: invokevirtual #25                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      53: pop
      54: aload_3
      55: aload_0
      56: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      59: invokevirtual #26                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      62: pop
      63: aload_3
      64: iconst_0
      65: invokevirtual #24                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      68: pop
      69: aload_0
      70: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      73: invokestatic  #27                 // Method io/netty/channel/unix/Buffer.free:(Ljava/nio/ByteBuffer;)V
      76: aload_0
      77: aload_3
      78: putfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      81: aload_0
      82: aload_3
      83: invokestatic  #13                 // Method io/netty/channel/unix/Buffer.memoryAddress:(Ljava/nio/ByteBuffer;)J
      86: putfield      #14                 // Field memoryAddress:J
      89: goto          147
      92: astore_3
      93: iload_1
      94: ifeq          147
      97: new           #28                 // class java/lang/OutOfMemoryError
     100: dup
     101: new           #3                  // class java/lang/StringBuilder
     104: dup
     105: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #29                 // String unable to allocate
     110: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: iload_2
     114: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     117: ldc           #30                 // String  new bytes! Existing capacity is:
     119: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: aload_0
     123: getfield      #15                 // Field capacity:I
     126: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     129: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokespecial #31                 // Method java/lang/OutOfMemoryError."<init>":(Ljava/lang/String;)V
     135: astore        4
     137: aload         4
     139: aload_3
     140: invokevirtual #32                 // Method java/lang/OutOfMemoryError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
     143: pop
     144: aload         4
     146: athrow
     147: return
    Exception table:
       from    to  target type
          30    89    92   Class java/lang/OutOfMemoryError

  void free();
    Code:
       0: aload_0
       1: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
       4: invokestatic  #27                 // Method io/netty/channel/unix/Buffer.free:(Ljava/nio/ByteBuffer;)V
       7: aload_0
       8: aload_0
       9: aload_0
      10: iconst_0
      11: dup_x1
      12: putfield      #15                 // Field capacity:I
      15: dup_x1
      16: putfield      #16                 // Field size:I
      19: i2l
      20: putfield      #14                 // Field memoryAddress:J
      23: return

  private static int getKEventOffset(int);
    Code:
       0: iload_0
       1: getstatic     #33                 // Field KQUEUE_EVENT_SIZE:I
       4: imul
       5: ireturn

  private long getKEventOffsetAddress(int);
    Code:
       0: iload_1
       1: invokestatic  #18                 // Method getKEventOffset:(I)I
       4: i2l
       5: aload_0
       6: getfield      #14                 // Field memoryAddress:J
       9: ladd
      10: lreturn

  private short getShort(int, int);
    Code:
       0: invokestatic  #34                 // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
       3: ifeq          18
       6: aload_0
       7: iload_1
       8: invokespecial #35                 // Method getKEventOffsetAddress:(I)J
      11: iload_2
      12: i2l
      13: ladd
      14: invokestatic  #36                 // Method io/netty/util/internal/PlatformDependent.getShort:(J)S
      17: ireturn
      18: aload_0
      19: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      22: iload_1
      23: invokestatic  #18                 // Method getKEventOffset:(I)I
      26: iload_2
      27: iadd
      28: invokevirtual #37                 // Method java/nio/ByteBuffer.getShort:(I)S
      31: ireturn

  short flags(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #38                 // Field KQUEUE_FLAGS_OFFSET:I
       5: invokespecial #39                 // Method getShort:(II)S
       8: ireturn

  short filter(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #40                 // Field KQUEUE_FILTER_OFFSET:I
       5: invokespecial #39                 // Method getShort:(II)S
       8: ireturn

  short fflags(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #41                 // Field KQUEUE_FFLAGS_OFFSET:I
       5: invokespecial #39                 // Method getShort:(II)S
       8: ireturn

  int fd(int);
    Code:
       0: invokestatic  #34                 // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
       3: ifeq          20
       6: aload_0
       7: iload_1
       8: invokespecial #35                 // Method getKEventOffsetAddress:(I)J
      11: getstatic     #42                 // Field KQUEUE_IDENT_OFFSET:I
      14: i2l
      15: ladd
      16: invokestatic  #43                 // Method io/netty/util/internal/PlatformDependent.getInt:(J)I
      19: ireturn
      20: aload_0
      21: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      24: iload_1
      25: invokestatic  #18                 // Method getKEventOffset:(I)I
      28: getstatic     #42                 // Field KQUEUE_IDENT_OFFSET:I
      31: iadd
      32: invokevirtual #44                 // Method java/nio/ByteBuffer.getInt:(I)I
      35: ireturn

  long data(int);
    Code:
       0: invokestatic  #34                 // Method io/netty/util/internal/PlatformDependent.hasUnsafe:()Z
       3: ifeq          20
       6: aload_0
       7: iload_1
       8: invokespecial #35                 // Method getKEventOffsetAddress:(I)J
      11: getstatic     #45                 // Field KQUEUE_DATA_OFFSET:I
      14: i2l
      15: ladd
      16: invokestatic  #46                 // Method io/netty/util/internal/PlatformDependent.getLong:(J)J
      19: lreturn
      20: aload_0
      21: getfield      #12                 // Field memory:Ljava/nio/ByteBuffer;
      24: iload_1
      25: invokestatic  #18                 // Method getKEventOffset:(I)I
      28: getstatic     #45                 // Field KQUEUE_DATA_OFFSET:I
      31: iadd
      32: invokevirtual #47                 // Method java/nio/ByteBuffer.getLong:(I)J
      35: lreturn

  private static int calculateBufferCapacity(int);
    Code:
       0: iload_0
       1: getstatic     #33                 // Field KQUEUE_EVENT_SIZE:I
       4: imul
       5: ireturn

  private static native void evSet(long, int, short, short, int);

  static {};
    Code:
       0: invokestatic  #48                 // Method io/netty/channel/kqueue/Native.sizeofKEvent:()I
       3: putstatic     #33                 // Field KQUEUE_EVENT_SIZE:I
       6: invokestatic  #49                 // Method io/netty/channel/kqueue/Native.offsetofKEventIdent:()I
       9: putstatic     #42                 // Field KQUEUE_IDENT_OFFSET:I
      12: invokestatic  #50                 // Method io/netty/channel/kqueue/Native.offsetofKEventFilter:()I
      15: putstatic     #40                 // Field KQUEUE_FILTER_OFFSET:I
      18: invokestatic  #51                 // Method io/netty/channel/kqueue/Native.offsetofKEventFFlags:()I
      21: putstatic     #41                 // Field KQUEUE_FFLAGS_OFFSET:I
      24: invokestatic  #52                 // Method io/netty/channel/kqueue/Native.offsetofKEventFlags:()I
      27: putstatic     #38                 // Field KQUEUE_FLAGS_OFFSET:I
      30: invokestatic  #53                 // Method io/netty/channel/kqueue/Native.offsetofKeventData:()I
      33: putstatic     #45                 // Field KQUEUE_DATA_OFFSET:I
      36: return
}
