Compiled from "AbstractKQueueChannel.java"
public abstract class io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe extends io.netty.channel.AbstractChannel$AbstractUnsafe {
  boolean readPending;

  boolean maybeMoreDataToRead;

  private io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle allocHandle;

  private final java.lang.Runnable readReadyRunnable;

  static final boolean $assertionsDisabled;

  final io.netty.channel.kqueue.AbstractKQueueChannel this$0;

  public io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe(io.netty.channel.kqueue.AbstractKQueueChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/AbstractChannel$AbstractUnsafe."<init>":(Lio/netty/channel/AbstractChannel;)V
      10: aload_0
      11: new           #3                  // class io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe$1
      14: dup
      15: aload_0
      16: invokespecial #4                  // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe$1."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe;)V
      19: putfield      #5                  // Field readReadyRunnable:Ljava/lang/Runnable;
      22: return

  final void readReady(long);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method recvBufAllocHandle:()Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
       4: astore_3
       5: aload_3
       6: lload_1
       7: invokevirtual #7                  // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.numberBytesPending:(J)V
      10: aload_0
      11: aload_3
      12: invokevirtual #8                  // Method readReady:(Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;)V
      15: return

  abstract void readReady(io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);

  final void readReadyBefore();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #9                  // Field maybeMoreDataToRead:Z
       5: return

  final void readReadyFinally(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field allocHandle:Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
       5: invokevirtual #11                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.maybeMoreDataToRead:()Z
       8: putfield      #9                  // Field maybeMoreDataToRead:Z
      11: aload_0
      12: getfield      #10                 // Field allocHandle:Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
      15: invokevirtual #12                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.isReadEOF:()Z
      18: ifne          35
      21: aload_0
      22: getfield      #13                 // Field readPending:Z
      25: ifeq          43
      28: aload_0
      29: getfield      #9                  // Field maybeMoreDataToRead:Z
      32: ifeq          43
      35: aload_0
      36: aload_1
      37: invokevirtual #14                 // Method executeReadReadyRunnable:(Lio/netty/channel/ChannelConfig;)V
      40: goto          63
      43: aload_0
      44: getfield      #13                 // Field readPending:Z
      47: ifne          63
      50: aload_1
      51: invokeinterface #15,  1           // InterfaceMethod io/netty/channel/ChannelConfig.isAutoRead:()Z
      56: ifne          63
      59: aload_0
      60: invokevirtual #16                 // Method clearReadFilter0:()V
      63: return

  final boolean failConnectPromise(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: invokestatic  #17                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$000:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/channel/ChannelPromise;
       7: ifnull        66
      10: aload_0
      11: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      14: invokestatic  #17                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$000:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/channel/ChannelPromise;
      17: astore_2
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      22: aconst_null
      23: invokestatic  #18                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$002:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      26: pop
      27: aload_2
      28: aload_1
      29: instanceof    #19                 // class java/net/ConnectException
      32: ifeq          39
      35: aload_1
      36: goto          52
      39: new           #19                 // class java/net/ConnectException
      42: dup
      43: ldc           #20                 // String failed to connect
      45: invokespecial #21                 // Method java/net/ConnectException."<init>":(Ljava/lang/String;)V
      48: aload_1
      49: invokevirtual #22                 // Method java/net/ConnectException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      52: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      57: ifeq          66
      60: aload_0
      61: invokevirtual #24                 // Method closeIfClosed:()V
      64: iconst_1
      65: ireturn
      66: iconst_0
      67: ireturn

  final void writeReady();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: invokestatic  #17                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$000:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/channel/ChannelPromise;
       7: ifnull        17
      10: aload_0
      11: invokespecial #25                 // Method finishConnect:()V
      14: goto          34
      17: aload_0
      18: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      21: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      24: invokevirtual #27                 // Method io/netty/channel/kqueue/BsdSocket.isOutputShutdown:()Z
      27: ifne          34
      30: aload_0
      31: invokespecial #28                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.flush0:()V
      34: return

  void shutdownInput(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: aload_0
       5: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       8: invokestatic  #17                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$000:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/channel/ChannelPromise;
      11: ifnull        18
      14: aload_0
      15: invokespecial #25                 // Method finishConnect:()V
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      22: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      25: invokevirtual #29                 // Method io/netty/channel/kqueue/BsdSocket.isInputShutdown:()Z
      28: ifne          99
      31: aload_0
      32: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      35: invokevirtual #30                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
      38: invokestatic  #31                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$100:(Lio/netty/channel/ChannelConfig;)Z
      41: ifeq          88
      44: aload_0
      45: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      48: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      51: iconst_1
      52: iconst_0
      53: invokevirtual #32                 // Method io/netty/channel/kqueue/BsdSocket.shutdown:(ZZ)V
      56: goto          69
      59: astore_2
      60: aload_0
      61: getstatic     #34                 // Field io/netty/channel/socket/ChannelInputShutdownEvent.INSTANCE:Lio/netty/channel/socket/ChannelInputShutdownEvent;
      64: invokespecial #35                 // Method fireEventAndClose:(Ljava/lang/Object;)V
      67: return
      68: astore_2
      69: aload_0
      70: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      73: invokevirtual #37                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      76: getstatic     #34                 // Field io/netty/channel/socket/ChannelInputShutdownEvent.INSTANCE:Lio/netty/channel/socket/ChannelInputShutdownEvent;
      79: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      84: pop
      85: goto          127
      88: aload_0
      89: aload_0
      90: invokevirtual #39                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      93: invokevirtual #40                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      96: goto          127
      99: iload_1
     100: ifne          127
     103: aload_0
     104: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     107: iconst_1
     108: putfield      #41                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.inputClosedSeenErrorOnRead:Z
     111: aload_0
     112: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     115: invokevirtual #37                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
     118: getstatic     #42                 // Field io/netty/channel/socket/ChannelInputShutdownReadComplete.INSTANCE:Lio/netty/channel/socket/ChannelInputShutdownReadComplete;
     121: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     126: pop
     127: return
    Exception table:
       from    to  target type
          44    56    59   Class java/io/IOException
          44    56    68   Class java/nio/channels/NotYetConnectedException

  final void readEOF();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method recvBufAllocHandle:()Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
       4: astore_1
       5: aload_1
       6: invokevirtual #43                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readEOF:()V
       9: aload_0
      10: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      13: invokevirtual #44                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.isActive:()Z
      16: ifeq          27
      19: aload_0
      20: aload_1
      21: invokevirtual #8                  // Method readReady:(Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;)V
      24: goto          32
      27: aload_0
      28: iconst_1
      29: invokevirtual #45                 // Method shutdownInput:(Z)V
      32: return

  public io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle recvBufAllocHandle();
    Code:
       0: aload_0
       1: getfield      #10                 // Field allocHandle:Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
       4: ifnonnull     25
       7: aload_0
       8: new           #46                 // class io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle
      11: dup
      12: aload_0
      13: invokespecial #47                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.recvBufAllocHandle:()Lio/netty/channel/RecvByteBufAllocator$Handle;
      16: checkcast     #48                 // class io/netty/channel/RecvByteBufAllocator$ExtendedHandle
      19: invokespecial #49                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle."<init>":(Lio/netty/channel/RecvByteBufAllocator$ExtendedHandle;)V
      22: putfield      #10                 // Field allocHandle:Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
      25: aload_0
      26: getfield      #10                 // Field allocHandle:Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
      29: areturn

  protected final void flush0();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: invokestatic  #50                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$200:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Z
       7: ifne          14
      10: aload_0
      11: invokespecial #28                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.flush0:()V
      14: return

  final void executeReadReadyRunnable(io.netty.channel.ChannelConfig);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: getfield      #51                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.readReadyRunnablePending:Z
       7: ifne          31
      10: aload_0
      11: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      14: invokevirtual #44                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.isActive:()Z
      17: ifeq          31
      20: aload_0
      21: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      24: aload_1
      25: invokevirtual #52                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.shouldBreakReadReady:(Lio/netty/channel/ChannelConfig;)Z
      28: ifeq          32
      31: return
      32: aload_0
      33: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      36: iconst_1
      37: putfield      #51                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.readReadyRunnablePending:Z
      40: aload_0
      41: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      44: invokevirtual #53                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.eventLoop:()Lio/netty/channel/EventLoop;
      47: aload_0
      48: getfield      #5                  // Field readReadyRunnable:Ljava/lang/Runnable;
      51: invokeinterface #54,  2           // InterfaceMethod io/netty/channel/EventLoop.execute:(Ljava/lang/Runnable;)V
      56: return

  protected final void clearReadFilter0();
    Code:
       0: getstatic     #55                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      10: invokevirtual #53                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #57                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #58                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: aload_0
      30: iconst_0
      31: putfield      #13                 // Field readPending:Z
      34: aload_0
      35: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      38: iconst_0
      39: invokevirtual #59                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.readFilter:(Z)V
      42: goto          84
      45: astore_1
      46: aload_0
      47: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      50: invokevirtual #37                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      53: aload_1
      54: invokeinterface #60,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      59: pop
      60: aload_0
      61: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      64: invokevirtual #61                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      67: aload_0
      68: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      71: invokevirtual #61                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.unsafe:()Lio/netty/channel/Channel$Unsafe;
      74: invokeinterface #62,  1           // InterfaceMethod io/netty/channel/Channel$Unsafe.voidPromise:()Lio/netty/channel/ChannelPromise;
      79: invokeinterface #63,  2           // InterfaceMethod io/netty/channel/Channel$Unsafe.close:(Lio/netty/channel/ChannelPromise;)V
      84: return
    Exception table:
       from    to  target type
          29    42    45   Class java/io/IOException

  private void fireEventAndClose(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: invokevirtual #37                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
       7: aload_1
       8: invokeinterface #38,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireUserEventTriggered:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      13: pop
      14: aload_0
      15: aload_0
      16: invokevirtual #39                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      19: invokevirtual #40                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      22: return

  public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise);
    Code:
       0: aload_3
       1: invokeinterface #64,  1           // InterfaceMethod io/netty/channel/ChannelPromise.setUncancellable:()Z
       6: ifeq          17
       9: aload_0
      10: aload_3
      11: invokevirtual #65                 // Method ensureOpen:(Lio/netty/channel/ChannelPromise;)Z
      14: ifne          18
      17: return
      18: aload_0
      19: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      22: invokestatic  #17                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$000:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/channel/ChannelPromise;
      25: ifnull        36
      28: new           #66                 // class java/nio/channels/ConnectionPendingException
      31: dup
      32: invokespecial #67                 // Method java/nio/channels/ConnectionPendingException."<init>":()V
      35: athrow
      36: aload_0
      37: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      40: invokevirtual #44                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.isActive:()Z
      43: istore        4
      45: aload_0
      46: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      49: aload_1
      50: aload_2
      51: invokevirtual #68                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.doConnect:(Ljava/net/SocketAddress;Ljava/net/SocketAddress;)Z
      54: ifeq          67
      57: aload_0
      58: aload_3
      59: iload         4
      61: invokespecial #69                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      64: goto          152
      67: aload_0
      68: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      71: aload_3
      72: invokestatic  #18                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$002:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      75: pop
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      80: aload_1
      81: invokestatic  #70                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$302:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      84: pop
      85: aload_0
      86: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      89: invokevirtual #30                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
      92: invokevirtual #71                 // Method io/netty/channel/kqueue/KQueueChannelConfig.getConnectTimeoutMillis:()I
      95: istore        5
      97: iload         5
      99: ifle          137
     102: aload_0
     103: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     106: aload_0
     107: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     110: invokevirtual #53                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.eventLoop:()Lio/netty/channel/EventLoop;
     113: new           #72                 // class io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe$2
     116: dup
     117: aload_0
     118: aload_1
     119: invokespecial #73                 // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe$2."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe;Ljava/net/SocketAddress;)V
     122: iload         5
     124: i2l
     125: getstatic     #74                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     128: invokeinterface #75,  5           // InterfaceMethod io/netty/channel/EventLoop.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/netty/util/concurrent/ScheduledFuture;
     133: invokestatic  #76                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$402:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/util/concurrent/Future;)Lio/netty/util/concurrent/Future;
     136: pop
     137: aload_3
     138: new           #77                 // class io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe$3
     141: dup
     142: aload_0
     143: invokespecial #78                 // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe$3."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe;)V
     146: invokeinterface #79,  2           // InterfaceMethod io/netty/channel/ChannelPromise.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/channel/ChannelPromise;
     151: pop
     152: goto          175
     155: astore        4
     157: aload_0
     158: invokevirtual #24                 // Method closeIfClosed:()V
     161: aload_3
     162: aload_0
     163: aload         4
     165: aload_1
     166: invokevirtual #81                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     169: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
     174: pop
     175: return
    Exception table:
       from    to  target type
          18   152   155   Class java/lang/Throwable

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       9: iconst_1
      10: putfield      #82                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.active:Z
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      17: invokevirtual #44                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.isActive:()Z
      20: istore_3
      21: aload_1
      22: invokeinterface #83,  1           // InterfaceMethod io/netty/channel/ChannelPromise.trySuccess:()Z
      27: istore        4
      29: iload_2
      30: ifne          50
      33: iload_3
      34: ifeq          50
      37: aload_0
      38: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      41: invokevirtual #37                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      44: invokeinterface #84,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelActive:()Lio/netty/channel/ChannelPipeline;
      49: pop
      50: iload         4
      52: ifne          63
      55: aload_0
      56: aload_0
      57: invokevirtual #39                 // Method voidPromise:()Lio/netty/channel/ChannelPromise;
      60: invokevirtual #40                 // Method close:(Lio/netty/channel/ChannelPromise;)V
      63: return

  private void fulfillConnectPromise(io.netty.channel.ChannelPromise, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: aload_2
       7: invokeinterface #23,  2           // InterfaceMethod io/netty/channel/ChannelPromise.tryFailure:(Ljava/lang/Throwable;)Z
      12: pop
      13: aload_0
      14: invokevirtual #24                 // Method closeIfClosed:()V
      17: return

  private void finishConnect();
    Code:
       0: getstatic     #55                 // Field $assertionsDisabled:Z
       3: ifne          29
       6: aload_0
       7: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      10: invokevirtual #53                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.eventLoop:()Lio/netty/channel/EventLoop;
      13: invokeinterface #56,  1           // InterfaceMethod io/netty/channel/EventLoop.inEventLoop:()Z
      18: ifne          29
      21: new           #57                 // class java/lang/AssertionError
      24: dup
      25: invokespecial #58                 // Method java/lang/AssertionError."<init>":()V
      28: athrow
      29: iconst_0
      30: istore_1
      31: aload_0
      32: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      35: invokevirtual #44                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.isActive:()Z
      38: istore_2
      39: aload_0
      40: invokespecial #85                 // Method doFinishConnect:()Z
      43: ifne          86
      46: iconst_1
      47: istore_1
      48: iload_1
      49: ifne          85
      52: aload_0
      53: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      56: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
      59: ifnull        76
      62: aload_0
      63: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      66: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
      69: iconst_0
      70: invokeinterface #87,  2           // InterfaceMethod io/netty/util/concurrent/Future.cancel:(Z)Z
      75: pop
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      80: aconst_null
      81: invokestatic  #18                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$002:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
      84: pop
      85: return
      86: aload_0
      87: aload_0
      88: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      91: invokestatic  #17                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$000:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/channel/ChannelPromise;
      94: iload_2
      95: invokespecial #69                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Z)V
      98: iload_1
      99: ifne          242
     102: aload_0
     103: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     106: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
     109: ifnull        126
     112: aload_0
     113: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     116: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
     119: iconst_0
     120: invokeinterface #87,  2           // InterfaceMethod io/netty/util/concurrent/Future.cancel:(Z)Z
     125: pop
     126: aload_0
     127: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     130: aconst_null
     131: invokestatic  #18                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$002:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     134: pop
     135: goto          242
     138: astore_2
     139: aload_0
     140: aload_0
     141: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     144: invokestatic  #17                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$000:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/channel/ChannelPromise;
     147: aload_0
     148: aload_2
     149: aload_0
     150: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     153: invokestatic  #88                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$300:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Ljava/net/SocketAddress;
     156: invokevirtual #81                 // Method annotateConnectException:(Ljava/lang/Throwable;Ljava/net/SocketAddress;)Ljava/lang/Throwable;
     159: invokespecial #89                 // Method fulfillConnectPromise:(Lio/netty/channel/ChannelPromise;Ljava/lang/Throwable;)V
     162: iload_1
     163: ifne          242
     166: aload_0
     167: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     170: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
     173: ifnull        190
     176: aload_0
     177: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     180: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
     183: iconst_0
     184: invokeinterface #87,  2           // InterfaceMethod io/netty/util/concurrent/Future.cancel:(Z)Z
     189: pop
     190: aload_0
     191: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     194: aconst_null
     195: invokestatic  #18                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$002:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     198: pop
     199: goto          242
     202: astore_3
     203: iload_1
     204: ifne          240
     207: aload_0
     208: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     211: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
     214: ifnull        231
     217: aload_0
     218: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     221: invokestatic  #86                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$400:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Lio/netty/util/concurrent/Future;
     224: iconst_0
     225: invokeinterface #87,  2           // InterfaceMethod io/netty/util/concurrent/Future.cancel:(Z)Z
     230: pop
     231: aload_0
     232: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
     235: aconst_null
     236: invokestatic  #18                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$002:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Lio/netty/channel/ChannelPromise;)Lio/netty/channel/ChannelPromise;
     239: pop
     240: aload_3
     241: athrow
     242: return
    Exception table:
       from    to  target type
          31    48   138   Class java/lang/Throwable
          86    98   138   Class java/lang/Throwable
          31    48   202   any
          86    98   202   any
         138   162   202   any

  private boolean doFinishConnect() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
       4: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
       7: invokevirtual #90                 // Method io/netty/channel/kqueue/BsdSocket.finishConnect:()Z
      10: ifeq          76
      13: aload_0
      14: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      17: iconst_0
      18: invokevirtual #91                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.writeFilter:(Z)V
      21: aload_0
      22: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      25: invokestatic  #88                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$300:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Ljava/net/SocketAddress;
      28: instanceof    #92                 // class java/net/InetSocketAddress
      31: ifeq          65
      34: aload_0
      35: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      38: aload_0
      39: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      42: invokestatic  #88                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$300:(Lio/netty/channel/kqueue/AbstractKQueueChannel;)Ljava/net/SocketAddress;
      45: checkcast     #92                 // class java/net/InetSocketAddress
      48: aload_0
      49: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      52: getfield      #26                 // Field io/netty/channel/kqueue/AbstractKQueueChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      55: invokevirtual #93                 // Method io/netty/channel/kqueue/BsdSocket.remoteAddress:()Ljava/net/InetSocketAddress;
      58: invokestatic  #94                 // Method io/netty/channel/unix/UnixChannelUtil.computeRemoteAddr:(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)Ljava/net/InetSocketAddress;
      61: invokestatic  #95                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$502:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      64: pop
      65: aload_0
      66: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      69: aconst_null
      70: invokestatic  #70                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.access$302:(Lio/netty/channel/kqueue/AbstractKQueueChannel;Ljava/net/SocketAddress;)Ljava/net/SocketAddress;
      73: pop
      74: iconst_1
      75: ireturn
      76: aload_0
      77: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueChannel;
      80: iconst_1
      81: invokevirtual #91                 // Method io/netty/channel/kqueue/AbstractKQueueChannel.writeFilter:(Z)V
      84: iconst_0
      85: ireturn

  public void close(io.netty.channel.ChannelPromise);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #96                 // Method io/netty/channel/AbstractChannel$AbstractUnsafe.close:(Lio/netty/channel/ChannelPromise;)V
       5: return

  public io.netty.channel.RecvByteBufAllocator$Handle recvBufAllocHandle();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method recvBufAllocHandle:()Lio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;
       4: areturn

  static {};
    Code:
       0: ldc           #97                 // class io/netty/channel/kqueue/AbstractKQueueChannel
       2: invokevirtual #98                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #55                 // Field $assertionsDisabled:Z
      16: return
}
