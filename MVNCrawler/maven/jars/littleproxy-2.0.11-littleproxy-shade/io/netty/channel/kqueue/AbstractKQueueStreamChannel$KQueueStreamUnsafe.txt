Compiled from "AbstractKQueueStreamChannel.java"
class io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe extends io.netty.channel.kqueue.AbstractKQueueChannel$AbstractKQueueUnsafe {
  final io.netty.channel.kqueue.AbstractKQueueStreamChannel this$0;

  io.netty.channel.kqueue.AbstractKQueueStreamChannel$KQueueStreamUnsafe(io.netty.channel.kqueue.AbstractKQueueStreamChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
       5: aload_0
       6: aload_1
       7: invokespecial #2                  // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
      10: return

  protected java.util.concurrent.Executor prepareToClose();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method io/netty/channel/kqueue/AbstractKQueueChannel$AbstractKQueueUnsafe.prepareToClose:()Ljava/util/concurrent/Executor;
       4: areturn

  void readReady(io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
       4: invokevirtual #4                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.config:()Lio/netty/channel/kqueue/KQueueChannelConfig;
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      12: aload_2
      13: invokevirtual #5                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.shouldBreakReadReady:(Lio/netty/channel/ChannelConfig;)Z
      16: ifeq          24
      19: aload_0
      20: invokevirtual #6                  // Method clearReadFilter0:()V
      23: return
      24: aload_0
      25: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      28: invokevirtual #7                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.pipeline:()Lio/netty/channel/ChannelPipeline;
      31: astore_3
      32: aload_2
      33: invokeinterface #8,  1            // InterfaceMethod io/netty/channel/ChannelConfig.getAllocator:()Lio/netty/buffer/ByteBufAllocator;
      38: astore        4
      40: aload_1
      41: aload_2
      42: invokevirtual #9                  // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.reset:(Lio/netty/channel/ChannelConfig;)V
      45: aload_0
      46: invokevirtual #10                 // Method readReadyBefore:()V
      49: aconst_null
      50: astore        5
      52: iconst_0
      53: istore        6
      55: aload_1
      56: aload         4
      58: invokevirtual #11                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.allocate:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/buffer/ByteBuf;
      61: astore        5
      63: aload_1
      64: aload_0
      65: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
      68: aload         5
      70: invokevirtual #12                 // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.doReadBytes:(Lio/netty/buffer/ByteBuf;)I
      73: invokevirtual #13                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:(I)V
      76: aload_1
      77: invokevirtual #14                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:()I
      80: ifgt          119
      83: aload         5
      85: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.release:()Z
      88: pop
      89: aconst_null
      90: astore        5
      92: aload_1
      93: invokevirtual #14                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.lastBytesRead:()I
      96: ifge          103
      99: iconst_1
     100: goto          104
     103: iconst_0
     104: istore        6
     106: iload         6
     108: ifeq          162
     111: aload_0
     112: iconst_0
     113: putfield      #16                 // Field readPending:Z
     116: goto          162
     119: aload_1
     120: iconst_1
     121: invokevirtual #17                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.incMessagesRead:(I)V
     124: aload_0
     125: iconst_0
     126: putfield      #16                 // Field readPending:Z
     129: aload_3
     130: aload         5
     132: invokeinterface #18,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
     137: pop
     138: aconst_null
     139: astore        5
     141: aload_0
     142: getfield      #1                  // Field this$0:Lio/netty/channel/kqueue/AbstractKQueueStreamChannel;
     145: aload_2
     146: invokevirtual #5                  // Method io/netty/channel/kqueue/AbstractKQueueStreamChannel.shouldBreakReadReady:(Lio/netty/channel/ChannelConfig;)Z
     149: ifeq          155
     152: goto          162
     155: aload_1
     156: invokevirtual #19                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.continueReading:()Z
     159: ifne          55
     162: aload_1
     163: invokevirtual #20                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
     166: aload_3
     167: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
     172: pop
     173: iload         6
     175: ifeq          183
     178: aload_0
     179: iconst_0
     180: invokevirtual #22                 // Method shutdownInput:(Z)V
     183: aload_0
     184: aload_2
     185: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     188: goto          223
     191: astore        7
     193: aload_0
     194: aload_3
     195: aload         5
     197: aload         7
     199: iload         6
     201: aload_1
     202: invokespecial #25                 // Method handleReadException:(Lio/netty/channel/ChannelPipeline;Lio/netty/buffer/ByteBuf;Ljava/lang/Throwable;ZLio/netty/channel/kqueue/KQueueRecvByteAllocatorHandle;)V
     205: aload_0
     206: aload_2
     207: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     210: goto          223
     213: astore        8
     215: aload_0
     216: aload_2
     217: invokevirtual #23                 // Method readReadyFinally:(Lio/netty/channel/ChannelConfig;)V
     220: aload         8
     222: athrow
     223: return
    Exception table:
       from    to  target type
          55   183   191   Class java/lang/Throwable
          55   183   213   any
         191   205   213   any
         213   215   213   any

  private void handleReadException(io.netty.channel.ChannelPipeline, io.netty.buffer.ByteBuf, java.lang.Throwable, boolean, io.netty.channel.kqueue.KQueueRecvByteAllocatorHandle);
    Code:
       0: aload_2
       1: ifnull        32
       4: aload_2
       5: invokevirtual #26                 // Method io/netty/buffer/ByteBuf.isReadable:()Z
       8: ifeq          27
      11: aload_0
      12: iconst_0
      13: putfield      #16                 // Field readPending:Z
      16: aload_1
      17: aload_2
      18: invokeinterface #18,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelRead:(Ljava/lang/Object;)Lio/netty/channel/ChannelPipeline;
      23: pop
      24: goto          32
      27: aload_2
      28: invokevirtual #15                 // Method io/netty/buffer/ByteBuf.release:()Z
      31: pop
      32: aload_0
      33: aload_3
      34: invokevirtual #27                 // Method failConnectPromise:(Ljava/lang/Throwable;)Z
      37: ifne          84
      40: aload         5
      42: invokevirtual #20                 // Method io/netty/channel/kqueue/KQueueRecvByteAllocatorHandle.readComplete:()V
      45: aload_1
      46: invokeinterface #21,  1           // InterfaceMethod io/netty/channel/ChannelPipeline.fireChannelReadComplete:()Lio/netty/channel/ChannelPipeline;
      51: pop
      52: aload_1
      53: aload_3
      54: invokeinterface #28,  2           // InterfaceMethod io/netty/channel/ChannelPipeline.fireExceptionCaught:(Ljava/lang/Throwable;)Lio/netty/channel/ChannelPipeline;
      59: pop
      60: iload         4
      62: ifne          79
      65: aload_3
      66: instanceof    #29                 // class java/lang/OutOfMemoryError
      69: ifne          79
      72: aload_3
      73: instanceof    #30                 // class java/io/IOException
      76: ifeq          84
      79: aload_0
      80: iconst_0
      81: invokevirtual #22                 // Method shutdownInput:(Z)V
      84: return
}
