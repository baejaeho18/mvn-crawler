Compiled from "KQueueServerSocketChannelConfig.java"
public class io.netty.channel.kqueue.KQueueServerSocketChannelConfig extends io.netty.channel.kqueue.KQueueServerChannelConfig {
  io.netty.channel.kqueue.KQueueServerSocketChannelConfig(io.netty.channel.kqueue.KQueueServerSocketChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/netty/channel/kqueue/KQueueServerChannelConfig."<init>":(Lio/netty/channel/kqueue/AbstractKQueueChannel;)V
       5: aload_0
       6: iconst_1
       7: invokevirtual #2                  // Method setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
      10: pop
      11: return

  public java.util.Map<io.netty.channel.ChannelOption<?>, java.lang.Object> getOptions();
    Code:
       0: aload_0
       1: aload_0
       2: invokespecial #3                  // Method io/netty/channel/kqueue/KQueueServerChannelConfig.getOptions:()Ljava/util/Map;
       5: iconst_2
       6: anewarray     #4                  // class io/netty/channel/ChannelOption
       9: dup
      10: iconst_0
      11: getstatic     #5                  // Field io/netty/channel/unix/UnixChannelOption.SO_REUSEPORT:Lio/netty/channel/ChannelOption;
      14: aastore
      15: dup
      16: iconst_1
      17: getstatic     #6                  // Field io/netty/channel/kqueue/KQueueChannelOption.SO_ACCEPTFILTER:Lio/netty/channel/ChannelOption;
      20: aastore
      21: invokevirtual #7                  // Method getOptions:(Ljava/util/Map;[Lio/netty/channel/ChannelOption;)Ljava/util/Map;
      24: areturn

  public <T> T getOption(io.netty.channel.ChannelOption<T>);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field io/netty/channel/unix/UnixChannelOption.SO_REUSEPORT:Lio/netty/channel/ChannelOption;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #8                  // Method isReusePort:()Z
      11: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #6                  // Field io/netty/channel/kqueue/KQueueChannelOption.SO_ACCEPTFILTER:Lio/netty/channel/ChannelOption;
      19: if_acmpne     27
      22: aload_0
      23: invokevirtual #10                 // Method getAcceptFilter:()Lio/netty/channel/kqueue/AcceptFilter;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #11                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.getOption:(Lio/netty/channel/ChannelOption;)Ljava/lang/Object;
      32: areturn

  public <T> boolean setOption(io.netty.channel.ChannelOption<T>, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #12                 // Method validate:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)V
       6: aload_1
       7: getstatic     #5                  // Field io/netty/channel/unix/UnixChannelOption.SO_REUSEPORT:Lio/netty/channel/ChannelOption;
      10: if_acmpne     28
      13: aload_0
      14: aload_2
      15: checkcast     #13                 // class java/lang/Boolean
      18: invokevirtual #14                 // Method java/lang/Boolean.booleanValue:()Z
      21: invokevirtual #15                 // Method setReusePort:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
      24: pop
      25: goto          54
      28: aload_1
      29: getstatic     #6                  // Field io/netty/channel/kqueue/KQueueChannelOption.SO_ACCEPTFILTER:Lio/netty/channel/ChannelOption;
      32: if_acmpne     47
      35: aload_0
      36: aload_2
      37: checkcast     #16                 // class io/netty/channel/kqueue/AcceptFilter
      40: invokevirtual #17                 // Method setAcceptFilter:(Lio/netty/channel/kqueue/AcceptFilter;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
      43: pop
      44: goto          54
      47: aload_0
      48: aload_1
      49: aload_2
      50: invokespecial #18                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setOption:(Lio/netty/channel/ChannelOption;Ljava/lang/Object;)Z
      53: ireturn
      54: iconst_1
      55: ireturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setReusePort(boolean);
    Code:
       0: aload_0
       1: getfield      #19                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #20                 // class io/netty/channel/kqueue/KQueueServerSocketChannel
       7: getfield      #21                 // Field io/netty/channel/kqueue/KQueueServerSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: iload_1
      11: invokevirtual #22                 // Method io/netty/channel/kqueue/BsdSocket.setReusePort:(Z)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #24                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #25                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public boolean isReusePort();
    Code:
       0: aload_0
       1: getfield      #19                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #20                 // class io/netty/channel/kqueue/KQueueServerSocketChannel
       7: getfield      #21                 // Field io/netty/channel/kqueue/KQueueServerSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #26                 // Method io/netty/channel/kqueue/BsdSocket.isReusePort:()Z
      13: ireturn
      14: astore_1
      15: new           #24                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #25                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setAcceptFilter(io.netty.channel.kqueue.AcceptFilter);
    Code:
       0: aload_0
       1: getfield      #19                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #20                 // class io/netty/channel/kqueue/KQueueServerSocketChannel
       7: getfield      #21                 // Field io/netty/channel/kqueue/KQueueServerSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: aload_1
      11: invokevirtual #27                 // Method io/netty/channel/kqueue/BsdSocket.setAcceptFilter:(Lio/netty/channel/kqueue/AcceptFilter;)V
      14: aload_0
      15: areturn
      16: astore_2
      17: new           #24                 // class io/netty/channel/ChannelException
      20: dup
      21: aload_2
      22: invokespecial #25                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      25: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/io/IOException

  public io.netty.channel.kqueue.AcceptFilter getAcceptFilter();
    Code:
       0: aload_0
       1: getfield      #19                 // Field channel:Lio/netty/channel/Channel;
       4: checkcast     #20                 // class io/netty/channel/kqueue/KQueueServerSocketChannel
       7: getfield      #21                 // Field io/netty/channel/kqueue/KQueueServerSocketChannel.socket:Lio/netty/channel/kqueue/BsdSocket;
      10: invokevirtual #28                 // Method io/netty/channel/kqueue/BsdSocket.getAcceptFilter:()Lio/netty/channel/kqueue/AcceptFilter;
      13: areturn
      14: astore_1
      15: new           #24                 // class io/netty/channel/ChannelException
      18: dup
      19: aload_1
      20: invokespecial #25                 // Method io/netty/channel/ChannelException."<init>":(Ljava/lang/Throwable;)V
      23: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/io/IOException

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #29                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #30                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #31                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setReceiveBufferSize:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #32                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setBacklog:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setTcpFastOpen(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #33                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setTcpFastOpen:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #34                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #35                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #36                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #37                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #39                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #40                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #41                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #42                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method io/netty/channel/kqueue/KQueueServerChannelConfig.setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerChannelConfig;
       5: pop
       6: aload_0
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #47                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #54                 // Method setPerformancePreferences:(III)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       7: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setTcpFastOpen(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #56                 // Method setTcpFastOpen:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setBacklog:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setReceiveBufferSize:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueServerChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #2                  // Method setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #47                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setPerformancePreferences(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #54                 // Method setPerformancePreferences:(III)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       7: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReceiveBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setReceiveBufferSize:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setReuseAddress(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #2                  // Method setReuseAddress:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.socket.ServerSocketChannelConfig setBacklog(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #57                 // Method setBacklog:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #47                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.ChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setMessageSizeEstimator(io.netty.channel.MessageSizeEstimator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method setMessageSizeEstimator:(Lio/netty/channel/MessageSizeEstimator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferWaterMark(io.netty.channel.WriteBufferWaterMark);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method setWriteBufferWaterMark:(Lio/netty/channel/WriteBufferWaterMark;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferLowWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #46                 // Method setWriteBufferLowWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteBufferHighWaterMark(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #47                 // Method setWriteBufferHighWaterMark:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAutoRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #48                 // Method setAutoRead:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setRecvByteBufAllocator(io.netty.channel.RecvByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method setRecvByteBufAllocator:(Lio/netty/channel/RecvByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setAllocator(io.netty.buffer.ByteBufAllocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setAllocator:(Lio/netty/buffer/ByteBufAllocator;)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setWriteSpinCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method setWriteSpinCount:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setMaxMessagesPerRead(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setMaxMessagesPerRead:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setConnectTimeoutMillis(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setConnectTimeoutMillis:(I)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn

  public io.netty.channel.kqueue.KQueueChannelConfig setRcvAllocTransportProvidesGuess(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method setRcvAllocTransportProvidesGuess:(Z)Lio/netty/channel/kqueue/KQueueServerSocketChannelConfig;
       5: areturn
}
