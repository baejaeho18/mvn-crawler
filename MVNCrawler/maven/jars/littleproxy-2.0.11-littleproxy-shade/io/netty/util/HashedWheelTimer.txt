Compiled from "HashedWheelTimer.java"
public class io.netty.util.HashedWheelTimer implements io.netty.util.Timer {
  static final io.netty.util.internal.logging.InternalLogger logger;

  private static final java.util.concurrent.atomic.AtomicInteger INSTANCE_COUNTER;

  private static final java.util.concurrent.atomic.AtomicBoolean WARNED_TOO_MANY_INSTANCES;

  private static final int INSTANCE_COUNT_LIMIT;

  private static final long MILLISECOND_NANOS;

  private static final io.netty.util.ResourceLeakDetector<io.netty.util.HashedWheelTimer> leakDetector;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.HashedWheelTimer> WORKER_STATE_UPDATER;

  private final io.netty.util.ResourceLeakTracker<io.netty.util.HashedWheelTimer> leak;

  private final io.netty.util.HashedWheelTimer$Worker worker;

  private final java.lang.Thread workerThread;

  public static final int WORKER_STATE_INIT;

  public static final int WORKER_STATE_STARTED;

  public static final int WORKER_STATE_SHUTDOWN;

  private volatile int workerState;

  private final long tickDuration;

  private final io.netty.util.HashedWheelTimer$HashedWheelBucket[] wheel;

  private final int mask;

  private final java.util.concurrent.CountDownLatch startTimeInitialized;

  private final java.util.Queue<io.netty.util.HashedWheelTimer$HashedWheelTimeout> timeouts;

  private final java.util.Queue<io.netty.util.HashedWheelTimer$HashedWheelTimeout> cancelledTimeouts;

  private final java.util.concurrent.atomic.AtomicLong pendingTimeouts;

  private final long maxPendingTimeouts;

  private final java.util.concurrent.Executor taskExecutor;

  private volatile long startTime;

  static final boolean $assertionsDisabled;

  public io.netty.util.HashedWheelTimer();
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: invokespecial #78                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;)V
       7: return

  public io.netty.util.HashedWheelTimer(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: lload_1
       5: aload_3
       6: invokespecial #84                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;)V
       9: return

  public io.netty.util.HashedWheelTimer(long, java.util.concurrent.TimeUnit, int);
    Code:
       0: aload_0
       1: invokestatic  #75                 // Method java/util/concurrent/Executors.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;
       4: lload_1
       5: aload_3
       6: iload         4
       8: invokespecial #90                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;I)V
      11: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #92                 // long 100l
       5: getstatic     #98                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
       8: invokespecial #84                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;)V
      11: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: sipush        512
       8: invokespecial #90                 // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;I)V
      11: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory, long, java.util.concurrent.TimeUnit, int);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iload         5
       7: iconst_1
       8: invokespecial #103                // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;IZ)V
      11: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory, long, java.util.concurrent.TimeUnit, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iload         5
       7: iload         6
       9: ldc2_w        #104                // long -1l
      12: invokespecial #108                // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;IZJ)V
      15: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory, long, java.util.concurrent.TimeUnit, int, boolean, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: aload         4
       5: iload         5
       7: iload         6
       9: lload         7
      11: getstatic     #115                // Field io/netty/util/concurrent/ImmediateExecutor.INSTANCE:Lio/netty/util/concurrent/ImmediateExecutor;
      14: invokespecial #118                // Method "<init>":(Ljava/util/concurrent/ThreadFactory;JLjava/util/concurrent/TimeUnit;IZJLjava/util/concurrent/Executor;)V
      17: return

  public io.netty.util.HashedWheelTimer(java.util.concurrent.ThreadFactory, long, java.util.concurrent.TimeUnit, int, boolean, long, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #120                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #17                 // class io/netty/util/HashedWheelTimer$Worker
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #123                // Method io/netty/util/HashedWheelTimer$Worker."<init>":(Lio/netty/util/HashedWheelTimer;Lio/netty/util/HashedWheelTimer$1;)V
      14: putfield      #125                // Field worker:Lio/netty/util/HashedWheelTimer$Worker;
      17: aload_0
      18: new           #127                // class java/util/concurrent/CountDownLatch
      21: dup
      22: iconst_1
      23: invokespecial #130                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      26: putfield      #132                // Field startTimeInitialized:Ljava/util/concurrent/CountDownLatch;
      29: aload_0
      30: invokestatic  #138                // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      33: putfield      #140                // Field timeouts:Ljava/util/Queue;
      36: aload_0
      37: invokestatic  #138                // Method io/netty/util/internal/PlatformDependent.newMpscQueue:()Ljava/util/Queue;
      40: putfield      #142                // Field cancelledTimeouts:Ljava/util/Queue;
      43: aload_0
      44: new           #144                // class java/util/concurrent/atomic/AtomicLong
      47: dup
      48: lconst_0
      49: invokespecial #147                // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      52: putfield      #149                // Field pendingTimeouts:Ljava/util/concurrent/atomic/AtomicLong;
      55: aload_1
      56: ldc           #150                // String threadFactory
      58: invokestatic  #156                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      61: pop
      62: aload         4
      64: ldc           #157                // String unit
      66: invokestatic  #156                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      69: pop
      70: lload_2
      71: ldc           #158                // String tickDuration
      73: invokestatic  #162                // Method io/netty/util/internal/ObjectUtil.checkPositive:(JLjava/lang/String;)J
      76: pop2
      77: iload         5
      79: ldc           #163                // String ticksPerWheel
      81: invokestatic  #166                // Method io/netty/util/internal/ObjectUtil.checkPositive:(ILjava/lang/String;)I
      84: pop
      85: aload_0
      86: aload         9
      88: ldc           #167                // String taskExecutor
      90: invokestatic  #156                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      93: checkcast     #169                // class java/util/concurrent/Executor
      96: putfield      #171                // Field taskExecutor:Ljava/util/concurrent/Executor;
      99: aload_0
     100: iload         5
     102: invokestatic  #175                // Method createWheel:(I)[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     105: putfield      #177                // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     108: aload_0
     109: aload_0
     110: getfield      #177                // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     113: arraylength
     114: iconst_1
     115: isub
     116: putfield      #179                // Field mask:I
     119: aload         4
     121: lload_2
     122: invokevirtual #183                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     125: lstore        10
     127: lload         10
     129: ldc2_w        #184                // long 9223372036854775807l
     132: aload_0
     133: getfield      #177                // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     136: arraylength
     137: i2l
     138: ldiv
     139: lcmp
     140: iflt          183
     143: new           #187                // class java/lang/IllegalArgumentException
     146: dup
     147: ldc           #189                // String tickDuration: %d (expected: 0 < tickDuration in nanos < %d
     149: iconst_2
     150: anewarray     #4                  // class java/lang/Object
     153: dup
     154: iconst_0
     155: lload_2
     156: invokestatic  #195                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     159: aastore
     160: dup
     161: iconst_1
     162: ldc2_w        #184                // long 9223372036854775807l
     165: aload_0
     166: getfield      #177                // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
     169: arraylength
     170: i2l
     171: ldiv
     172: invokestatic  #195                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     175: aastore
     176: invokestatic  #201                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     179: invokespecial #204                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     182: athrow
     183: lload         10
     185: getstatic     #208                // Field MILLISECOND_NANOS:J
     188: lcmp
     189: ifge          222
     192: getstatic     #210                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     195: ldc           #212                // String Configured tickDuration {} smaller than {}, using 1ms.
     197: lload_2
     198: invokestatic  #195                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     201: getstatic     #208                // Field MILLISECOND_NANOS:J
     204: invokestatic  #195                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     207: invokeinterface #218,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     212: aload_0
     213: getstatic     #208                // Field MILLISECOND_NANOS:J
     216: putfield      #220                // Field tickDuration:J
     219: goto          228
     222: aload_0
     223: lload         10
     225: putfield      #220                // Field tickDuration:J
     228: aload_0
     229: aload_1
     230: aload_0
     231: getfield      #125                // Field worker:Lio/netty/util/HashedWheelTimer$Worker;
     234: invokeinterface #224,  2          // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
     239: putfield      #226                // Field workerThread:Ljava/lang/Thread;
     242: aload_0
     243: iload         6
     245: ifne          258
     248: aload_0
     249: getfield      #226                // Field workerThread:Ljava/lang/Thread;
     252: invokevirtual #232                // Method java/lang/Thread.isDaemon:()Z
     255: ifne          268
     258: getstatic     #234                // Field leakDetector:Lio/netty/util/ResourceLeakDetector;
     261: aload_0
     262: invokevirtual #240                // Method io/netty/util/ResourceLeakDetector.track:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakTracker;
     265: goto          269
     268: aconst_null
     269: putfield      #244                // Field leak:Lio/netty/util/ResourceLeakTracker;
     272: aload_0
     273: lload         7
     275: putfield      #246                // Field maxPendingTimeouts:J
     278: getstatic     #248                // Field INSTANCE_COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
     281: invokevirtual #254                // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     284: bipush        64
     286: if_icmple     303
     289: getstatic     #256                // Field WARNED_TOO_MANY_INSTANCES:Ljava/util/concurrent/atomic/AtomicBoolean;
     292: iconst_0
     293: iconst_1
     294: invokevirtual #262                // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
     297: ifeq          303
     300: invokestatic  #265                // Method reportTooManyInstances:()V
     303: return

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokespecial #271                // Method java/lang/Object.finalize:()V
       4: getstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: aload_0
       8: iconst_2
       9: invokevirtual #279                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      12: iconst_2
      13: if_icmpeq     48
      16: getstatic     #248                // Field INSTANCE_COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
      19: invokevirtual #282                // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      22: pop
      23: goto          48
      26: astore_1
      27: getstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      30: aload_0
      31: iconst_2
      32: invokevirtual #279                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      35: iconst_2
      36: if_icmpeq     46
      39: getstatic     #248                // Field INSTANCE_COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
      42: invokevirtual #282                // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      45: pop
      46: aload_1
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0     4    26   any

  private static io.netty.util.HashedWheelTimer$HashedWheelBucket[] createWheel(int);
    Code:
       0: iload_0
       1: iconst_1
       2: ldc_w         #283                // int 1073741824
       5: ldc           #163                // String ticksPerWheel
       7: invokestatic  #287                // Method io/netty/util/internal/ObjectUtil.checkInRange:(IIILjava/lang/String;)I
      10: pop
      11: iload_0
      12: invokestatic  #291                // Method normalizeTicksPerWheel:(I)I
      15: istore_0
      16: iload_0
      17: anewarray     #11                 // class io/netty/util/HashedWheelTimer$HashedWheelBucket
      20: astore_1
      21: iconst_0
      22: istore_2
      23: iload_2
      24: aload_1
      25: arraylength
      26: if_icmpge     46
      29: aload_1
      30: iload_2
      31: new           #11                 // class io/netty/util/HashedWheelTimer$HashedWheelBucket
      34: dup
      35: aconst_null
      36: invokespecial #295                // Method io/netty/util/HashedWheelTimer$HashedWheelBucket."<init>":(Lio/netty/util/HashedWheelTimer$1;)V
      39: aastore
      40: iinc          2, 1
      43: goto          23
      46: aload_1
      47: areturn

  private static int normalizeTicksPerWheel(int);
    Code:
       0: iconst_1
       1: istore_1
       2: iload_1
       3: iload_0
       4: if_icmpge     14
       7: iload_1
       8: iconst_1
       9: ishl
      10: istore_1
      11: goto          2
      14: iload_1
      15: ireturn

  public void start();
    Code:
       0: getstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #304                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.get:(Ljava/lang/Object;)I
       7: tableswitch   { // 0 to 2
                     0: 32
                     1: 54
                     2: 57
               default: 68
          }
      32: getstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      35: aload_0
      36: iconst_0
      37: iconst_1
      38: invokevirtual #307                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      41: ifeq          79
      44: aload_0
      45: getfield      #226                // Field workerThread:Ljava/lang/Thread;
      48: invokevirtual #309                // Method java/lang/Thread.start:()V
      51: goto          79
      54: goto          79
      57: new           #311                // class java/lang/IllegalStateException
      60: dup
      61: ldc_w         #313                // String cannot be started once stopped
      64: invokespecial #314                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: new           #316                // class java/lang/Error
      71: dup
      72: ldc_w         #318                // String Invalid WorkerState
      75: invokespecial #319                // Method java/lang/Error."<init>":(Ljava/lang/String;)V
      78: athrow
      79: aload_0
      80: getfield      #321                // Field startTime:J
      83: lconst_0
      84: lcmp
      85: ifne          102
      88: aload_0
      89: getfield      #132                // Field startTimeInitialized:Ljava/util/concurrent/CountDownLatch;
      92: invokevirtual #324                // Method java/util/concurrent/CountDownLatch.await:()V
      95: goto          79
      98: astore_1
      99: goto          79
     102: return
    Exception table:
       from    to  target type
          88    95    98   Class java/lang/InterruptedException

  public java.util.Set<io.netty.util.Timeout> stop();
    Code:
       0: invokestatic  #331                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: aload_0
       4: getfield      #226                // Field workerThread:Ljava/lang/Thread;
       7: if_acmpne     51
      10: new           #311                // class java/lang/IllegalStateException
      13: dup
      14: new           #333                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #334                // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #2                  // class io/netty/util/HashedWheelTimer
      23: invokevirtual #340                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      26: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc_w         #346                // String .stop() cannot be called from
      32: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc_w         #348                // class io/netty/util/TimerTask
      38: invokevirtual #340                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      41: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #351                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #314                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: getstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      54: aload_0
      55: iconst_1
      56: iconst_2
      57: invokevirtual #307                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      60: ifne          122
      63: getstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      66: aload_0
      67: iconst_2
      68: invokevirtual #279                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      71: iconst_2
      72: if_icmpeq     118
      75: getstatic     #248                // Field INSTANCE_COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
      78: invokevirtual #282                // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      81: pop
      82: aload_0
      83: getfield      #244                // Field leak:Lio/netty/util/ResourceLeakTracker;
      86: ifnull        118
      89: aload_0
      90: getfield      #244                // Field leak:Lio/netty/util/ResourceLeakTracker;
      93: aload_0
      94: invokeinterface #355,  2          // InterfaceMethod io/netty/util/ResourceLeakTracker.close:(Ljava/lang/Object;)Z
      99: istore_1
     100: getstatic     #357                // Field $assertionsDisabled:Z
     103: ifne          118
     106: iload_1
     107: ifne          118
     110: new           #359                // class java/lang/AssertionError
     113: dup
     114: invokespecial #360                // Method java/lang/AssertionError."<init>":()V
     117: athrow
     118: invokestatic  #365                // Method java/util/Collections.emptySet:()Ljava/util/Set;
     121: areturn
     122: iconst_0
     123: istore_1
     124: aload_0
     125: getfield      #226                // Field workerThread:Ljava/lang/Thread;
     128: invokevirtual #368                // Method java/lang/Thread.isAlive:()Z
     131: ifeq          160
     134: aload_0
     135: getfield      #226                // Field workerThread:Ljava/lang/Thread;
     138: invokevirtual #371                // Method java/lang/Thread.interrupt:()V
     141: aload_0
     142: getfield      #226                // Field workerThread:Ljava/lang/Thread;
     145: ldc2_w        #92                 // long 100l
     148: invokevirtual #374                // Method java/lang/Thread.join:(J)V
     151: goto          124
     154: astore_2
     155: iconst_1
     156: istore_1
     157: goto          124
     160: iload_1
     161: ifeq          170
     164: invokestatic  #331                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     167: invokevirtual #371                // Method java/lang/Thread.interrupt:()V
     170: getstatic     #248                // Field INSTANCE_COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
     173: invokevirtual #282                // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     176: pop
     177: aload_0
     178: getfield      #244                // Field leak:Lio/netty/util/ResourceLeakTracker;
     181: ifnull        264
     184: aload_0
     185: getfield      #244                // Field leak:Lio/netty/util/ResourceLeakTracker;
     188: aload_0
     189: invokeinterface #355,  2          // InterfaceMethod io/netty/util/ResourceLeakTracker.close:(Ljava/lang/Object;)Z
     194: istore_1
     195: getstatic     #357                // Field $assertionsDisabled:Z
     198: ifne          213
     201: iload_1
     202: ifne          213
     205: new           #359                // class java/lang/AssertionError
     208: dup
     209: invokespecial #360                // Method java/lang/AssertionError."<init>":()V
     212: athrow
     213: goto          264
     216: astore_3
     217: getstatic     #248                // Field INSTANCE_COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
     220: invokevirtual #282                // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     223: pop
     224: aload_0
     225: getfield      #244                // Field leak:Lio/netty/util/ResourceLeakTracker;
     228: ifnull        262
     231: aload_0
     232: getfield      #244                // Field leak:Lio/netty/util/ResourceLeakTracker;
     235: aload_0
     236: invokeinterface #355,  2          // InterfaceMethod io/netty/util/ResourceLeakTracker.close:(Ljava/lang/Object;)Z
     241: istore        4
     243: getstatic     #357                // Field $assertionsDisabled:Z
     246: ifne          262
     249: iload         4
     251: ifne          262
     254: new           #359                // class java/lang/AssertionError
     257: dup
     258: invokespecial #360                // Method java/lang/AssertionError."<init>":()V
     261: athrow
     262: aload_3
     263: athrow
     264: aload_0
     265: getfield      #125                // Field worker:Lio/netty/util/HashedWheelTimer$Worker;
     268: invokevirtual #377                // Method io/netty/util/HashedWheelTimer$Worker.unprocessedTimeouts:()Ljava/util/Set;
     271: areturn
    Exception table:
       from    to  target type
         141   151   154   Class java/lang/InterruptedException
         122   170   216   any

  public io.netty.util.Timeout newTimeout(io.netty.util.TimerTask, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ldc_w         #385                // String task
       4: invokestatic  #156                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload         4
      10: ldc           #157                // String unit
      12: invokestatic  #156                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: pop
      16: aload_0
      17: getfield      #149                // Field pendingTimeouts:Ljava/util/concurrent/atomic/AtomicLong;
      20: invokevirtual #388                // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      23: lstore        5
      25: aload_0
      26: getfield      #246                // Field maxPendingTimeouts:J
      29: lconst_0
      30: lcmp
      31: ifle          100
      34: lload         5
      36: aload_0
      37: getfield      #246                // Field maxPendingTimeouts:J
      40: lcmp
      41: ifle          100
      44: aload_0
      45: getfield      #149                // Field pendingTimeouts:Ljava/util/concurrent/atomic/AtomicLong;
      48: invokevirtual #390                // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      51: pop2
      52: new           #392                // class java/util/concurrent/RejectedExecutionException
      55: dup
      56: new           #333                // class java/lang/StringBuilder
      59: dup
      60: invokespecial #334                // Method java/lang/StringBuilder."<init>":()V
      63: ldc_w         #394                // String Number of pending timeouts (
      66: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: lload         5
      71: invokevirtual #397                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      74: ldc_w         #399                // String ) is greater than or equal to maximum allowed pending timeouts (
      77: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #246                // Field maxPendingTimeouts:J
      84: invokevirtual #397                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      87: ldc_w         #401                // String )
      90: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #351                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #402                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_0
     101: invokevirtual #403                // Method start:()V
     104: invokestatic  #408                // Method java/lang/System.nanoTime:()J
     107: aload         4
     109: lload_2
     110: invokevirtual #183                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     113: ladd
     114: aload_0
     115: getfield      #321                // Field startTime:J
     118: lsub
     119: lstore        7
     121: lload_2
     122: lconst_0
     123: lcmp
     124: ifle          139
     127: lload         7
     129: lconst_0
     130: lcmp
     131: ifge          139
     134: ldc2_w        #184                // long 9223372036854775807l
     137: lstore        7
     139: new           #14                 // class io/netty/util/HashedWheelTimer$HashedWheelTimeout
     142: dup
     143: aload_0
     144: aload_1
     145: lload         7
     147: invokespecial #411                // Method io/netty/util/HashedWheelTimer$HashedWheelTimeout."<init>":(Lio/netty/util/HashedWheelTimer;Lio/netty/util/TimerTask;J)V
     150: astore        9
     152: aload_0
     153: getfield      #140                // Field timeouts:Ljava/util/Queue;
     156: aload         9
     158: invokeinterface #416,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     163: pop
     164: aload         9
     166: areturn

  public long pendingTimeouts();
    Code:
       0: aload_0
       1: getfield      #149                // Field pendingTimeouts:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #424                // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  private static void reportTooManyInstances();
    Code:
       0: getstatic     #210                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: invokeinterface #427,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isErrorEnabled:()Z
       8: ifeq          61
      11: ldc           #2                  // class io/netty/util/HashedWheelTimer
      13: invokestatic  #433                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
      16: astore_0
      17: getstatic     #210                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      20: new           #333                // class java/lang/StringBuilder
      23: dup
      24: invokespecial #334                // Method java/lang/StringBuilder."<init>":()V
      27: ldc_w         #435                // String You are creating too many
      30: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc_w         #437                // String  instances.
      40: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc_w         #439                // String  is a shared resource that must be reused across the JVM, so that only a few instances are created.
      50: invokevirtual #344                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #351                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #442,  2          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;)V
      61: return

  static long access$202(io.netty.util.HashedWheelTimer, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #321                // Field startTime:J
       6: lreturn

  static long access$200(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #321                // Field startTime:J
       4: lreturn

  static java.util.concurrent.CountDownLatch access$300(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #132                // Field startTimeInitialized:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  static int access$400(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #179                // Field mask:I
       4: ireturn

  static io.netty.util.HashedWheelTimer$HashedWheelBucket[] access$500(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #177                // Field wheel:[Lio/netty/util/HashedWheelTimer$HashedWheelBucket;
       4: areturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$600();
    Code:
       0: getstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: areturn

  static java.util.Queue access$700(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #140                // Field timeouts:Ljava/util/Queue;
       4: areturn

  static long access$900(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #220                // Field tickDuration:J
       4: lreturn

  static java.util.Queue access$1000(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #142                // Field cancelledTimeouts:Ljava/util/Queue;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$1100(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #149                // Field pendingTimeouts:Ljava/util/concurrent/atomic/AtomicLong;
       4: areturn

  static java.util.concurrent.Executor access$1200(io.netty.util.HashedWheelTimer);
    Code:
       0: aload_0
       1: getfield      #171                // Field taskExecutor:Ljava/util/concurrent/Executor;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/HashedWheelTimer
       2: invokevirtual #470                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #357                // Field $assertionsDisabled:Z
      16: ldc           #2                  // class io/netty/util/HashedWheelTimer
      18: invokestatic  #476                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      21: putstatic     #210                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      24: new           #250                // class java/util/concurrent/atomic/AtomicInteger
      27: dup
      28: invokespecial #477                // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      31: putstatic     #248                // Field INSTANCE_COUNTER:Ljava/util/concurrent/atomic/AtomicInteger;
      34: new           #258                // class java/util/concurrent/atomic/AtomicBoolean
      37: dup
      38: invokespecial #478                // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      41: putstatic     #256                // Field WARNED_TOO_MANY_INSTANCES:Ljava/util/concurrent/atomic/AtomicBoolean;
      44: getstatic     #98                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      47: lconst_1
      48: invokevirtual #183                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      51: putstatic     #208                // Field MILLISECOND_NANOS:J
      54: invokestatic  #484                // Method io/netty/util/ResourceLeakDetectorFactory.instance:()Lio/netty/util/ResourceLeakDetectorFactory;
      57: ldc           #2                  // class io/netty/util/HashedWheelTimer
      59: iconst_1
      60: invokevirtual #488                // Method io/netty/util/ResourceLeakDetectorFactory.newResourceLeakDetector:(Ljava/lang/Class;I)Lio/netty/util/ResourceLeakDetector;
      63: putstatic     #234                // Field leakDetector:Lio/netty/util/ResourceLeakDetector;
      66: ldc           #2                  // class io/netty/util/HashedWheelTimer
      68: ldc_w         #489                // String workerState
      71: invokestatic  #493                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      74: putstatic     #273                // Field WORKER_STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      77: return
}
