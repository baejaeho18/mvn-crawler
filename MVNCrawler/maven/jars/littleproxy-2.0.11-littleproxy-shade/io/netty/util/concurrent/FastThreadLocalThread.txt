Compiled from "FastThreadLocalThread.java"
public class io.netty.util.concurrent.FastThreadLocalThread extends java.lang.Thread {
  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final boolean cleanupFastThreadLocals;

  private io.netty.util.internal.InternalThreadLocalMap threadLocalMap;

  public io.netty.util.concurrent.FastThreadLocalThread();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Thread."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #17                 // Field cleanupFastThreadLocals:Z
       9: return

  public io.netty.util.concurrent.FastThreadLocalThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method io/netty/util/concurrent/FastThreadLocalRunnable.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       5: invokespecial #28                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
       8: aload_0
       9: iconst_1
      10: putfield      #17                 // Field cleanupFastThreadLocals:Z
      13: return

  public io.netty.util.concurrent.FastThreadLocalThread(java.lang.ThreadGroup, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #26                 // Method io/netty/util/concurrent/FastThreadLocalRunnable.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       6: invokespecial #33                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V
       9: aload_0
      10: iconst_1
      11: putfield      #17                 // Field cleanupFastThreadLocals:Z
      14: return

  public io.netty.util.concurrent.FastThreadLocalThread(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method java/lang/Thread."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iconst_0
       7: putfield      #17                 // Field cleanupFastThreadLocals:Z
      10: return

  public io.netty.util.concurrent.FastThreadLocalThread(java.lang.ThreadGroup, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #43                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/String;)V
       6: aload_0
       7: iconst_0
       8: putfield      #17                 // Field cleanupFastThreadLocals:Z
      11: return

  public io.netty.util.concurrent.FastThreadLocalThread(java.lang.Runnable, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #26                 // Method io/netty/util/concurrent/FastThreadLocalRunnable.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       5: aload_2
       6: invokespecial #46                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;Ljava/lang/String;)V
       9: aload_0
      10: iconst_1
      11: putfield      #17                 // Field cleanupFastThreadLocals:Z
      14: return

  public io.netty.util.concurrent.FastThreadLocalThread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #26                 // Method io/netty/util/concurrent/FastThreadLocalRunnable.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       6: aload_3
       7: invokespecial #49                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;)V
      10: aload_0
      11: iconst_1
      12: putfield      #17                 // Field cleanupFastThreadLocals:Z
      15: return

  public io.netty.util.concurrent.FastThreadLocalThread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #26                 // Method io/netty/util/concurrent/FastThreadLocalRunnable.wrap:(Ljava/lang/Runnable;)Ljava/lang/Runnable;
       6: aload_3
       7: lload         4
       9: invokespecial #52                 // Method java/lang/Thread."<init>":(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V
      12: aload_0
      13: iconst_1
      14: putfield      #17                 // Field cleanupFastThreadLocals:Z
      17: return

  public final io.netty.util.internal.InternalThreadLocalMap threadLocalMap();
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: if_acmpeq     35
       7: getstatic     #61                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: invokeinterface #67,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      15: ifeq          35
      18: getstatic     #61                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      21: new           #69                 // class java/lang/RuntimeException
      24: dup
      25: ldc           #71                 // String It\'s not thread-safe to get \'threadLocalMap\' which doesn\'t belong to the caller thread
      27: invokespecial #72                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      30: invokeinterface #76,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/Throwable;)V
      35: aload_0
      36: getfield      #78                 // Field threadLocalMap:Lio/netty/util/internal/InternalThreadLocalMap;
      39: areturn

  public final void setThreadLocalMap(io.netty.util.internal.InternalThreadLocalMap);
    Code:
       0: aload_0
       1: invokestatic  #59                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: if_acmpeq     35
       7: getstatic     #61                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      10: invokeinterface #67,  1           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isWarnEnabled:()Z
      15: ifeq          35
      18: getstatic     #61                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      21: new           #69                 // class java/lang/RuntimeException
      24: dup
      25: ldc           #82                 // String It\'s not thread-safe to set \'threadLocalMap\' which doesn\'t belong to the caller thread
      27: invokespecial #72                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      30: invokeinterface #76,  2           // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/Throwable;)V
      35: aload_0
      36: aload_1
      37: putfield      #78                 // Field threadLocalMap:Lio/netty/util/internal/InternalThreadLocalMap;
      40: return

  public boolean willCleanupFastThreadLocals();
    Code:
       0: aload_0
       1: getfield      #17                 // Field cleanupFastThreadLocals:Z
       4: ireturn

  public static boolean willCleanupFastThreadLocals(java.lang.Thread);
    Code:
       0: aload_0
       1: instanceof    #2                  // class io/netty/util/concurrent/FastThreadLocalThread
       4: ifeq          21
       7: aload_0
       8: checkcast     #2                  // class io/netty/util/concurrent/FastThreadLocalThread
      11: invokevirtual #86                 // Method willCleanupFastThreadLocals:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/concurrent/FastThreadLocalThread
       2: invokestatic  #95                 // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
       5: putstatic     #61                 // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       8: return
}
