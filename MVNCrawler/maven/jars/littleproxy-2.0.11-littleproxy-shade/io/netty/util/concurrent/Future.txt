Compiled from "Future.java"
public interface io.netty.util.concurrent.Future<V> extends java.util.concurrent.Future<V> {
  public abstract boolean isSuccess();

  public abstract boolean isCancellable();

  public abstract java.lang.Throwable cause();

  public abstract io.netty.util.concurrent.Future<V> addListener(io.netty.util.concurrent.GenericFutureListener<? extends io.netty.util.concurrent.Future<? super V>>);

  public abstract io.netty.util.concurrent.Future<V> addListeners(io.netty.util.concurrent.GenericFutureListener<? extends io.netty.util.concurrent.Future<? super V>>...);

  public abstract io.netty.util.concurrent.Future<V> removeListener(io.netty.util.concurrent.GenericFutureListener<? extends io.netty.util.concurrent.Future<? super V>>);

  public abstract io.netty.util.concurrent.Future<V> removeListeners(io.netty.util.concurrent.GenericFutureListener<? extends io.netty.util.concurrent.Future<? super V>>...);

  public abstract io.netty.util.concurrent.Future<V> sync() throws java.lang.InterruptedException;

  public abstract io.netty.util.concurrent.Future<V> syncUninterruptibly();

  public abstract io.netty.util.concurrent.Future<V> await() throws java.lang.InterruptedException;

  public abstract io.netty.util.concurrent.Future<V> awaitUninterruptibly();

  public abstract boolean await(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;

  public abstract boolean await(long) throws java.lang.InterruptedException;

  public abstract boolean awaitUninterruptibly(long, java.util.concurrent.TimeUnit);

  public abstract boolean awaitUninterruptibly(long);

  public abstract V getNow();

  public abstract boolean cancel(boolean);
}
