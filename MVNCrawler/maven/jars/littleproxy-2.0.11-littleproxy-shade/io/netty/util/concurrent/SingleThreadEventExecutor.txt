Compiled from "SingleThreadEventExecutor.java"
public abstract class io.netty.util.concurrent.SingleThreadEventExecutor extends io.netty.util.concurrent.AbstractScheduledEventExecutor implements io.netty.util.concurrent.OrderedEventExecutor {
  static final int DEFAULT_MAX_PENDING_EXECUTOR_TASKS;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private static final int ST_NOT_STARTED;

  private static final int ST_STARTED;

  private static final int ST_SHUTTING_DOWN;

  private static final int ST_SHUTDOWN;

  private static final int ST_TERMINATED;

  private static final java.lang.Runnable NOOP_TASK;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.concurrent.SingleThreadEventExecutor> STATE_UPDATER;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<io.netty.util.concurrent.SingleThreadEventExecutor, io.netty.util.concurrent.ThreadProperties> PROPERTIES_UPDATER;

  private final java.util.Queue<java.lang.Runnable> taskQueue;

  private volatile java.lang.Thread thread;

  private volatile io.netty.util.concurrent.ThreadProperties threadProperties;

  private final java.util.concurrent.Executor executor;

  private volatile boolean interrupted;

  private final java.util.concurrent.CountDownLatch threadLock;

  private final java.util.Set<java.lang.Runnable> shutdownHooks;

  private final boolean addTaskWakesUp;

  private final int maxPendingTasks;

  private final io.netty.util.concurrent.RejectedExecutionHandler rejectedExecutionHandler;

  private long lastExecutionTime;

  private volatile int state;

  private volatile long gracefulShutdownQuietPeriod;

  private volatile long gracefulShutdownTimeout;

  private long gracefulShutdownStartTime;

  private final io.netty.util.concurrent.Promise<?> terminationFuture;

  private static final long SCHEDULE_PURGE_INTERVAL;

  static final boolean $assertionsDisabled;

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.ThreadFactory, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #88                 // class io/netty/util/concurrent/ThreadPerTaskExecutor
       5: dup
       6: aload_2
       7: invokespecial #91                 // Method io/netty/util/concurrent/ThreadPerTaskExecutor."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      10: iload_3
      11: invokespecial #94                 // Method "<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/Executor;Z)V
      14: return

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.ThreadFactory, boolean, int, io.netty.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: new           #88                 // class io/netty/util/concurrent/ThreadPerTaskExecutor
       5: dup
       6: aload_2
       7: invokespecial #91                 // Method io/netty/util/concurrent/ThreadPerTaskExecutor."<init>":(Ljava/util/concurrent/ThreadFactory;)V
      10: iload_3
      11: iload         4
      13: aload         5
      15: invokespecial #104                // Method "<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/Executor;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      18: return

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.Executor, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: getstatic     #107                // Field DEFAULT_MAX_PENDING_EXECUTOR_TASKS:I
       7: invokestatic  #113                // Method io/netty/util/concurrent/RejectedExecutionHandlers.reject:()Lio/netty/util/concurrent/RejectedExecutionHandler;
      10: invokespecial #104                // Method "<init>":(Lio/netty/util/concurrent/EventExecutorGroup;Ljava/util/concurrent/Executor;ZILio/netty/util/concurrent/RejectedExecutionHandler;)V
      13: return

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.Executor, boolean, int, io.netty.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #116                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor."<init>":(Lio/netty/util/concurrent/EventExecutorGroup;)V
       5: aload_0
       6: new           #118                // class java/util/concurrent/CountDownLatch
       9: dup
      10: iconst_1
      11: invokespecial #121                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      14: putfield      #123                // Field threadLock:Ljava/util/concurrent/CountDownLatch;
      17: aload_0
      18: new           #125                // class java/util/LinkedHashSet
      21: dup
      22: invokespecial #128                // Method java/util/LinkedHashSet."<init>":()V
      25: putfield      #130                // Field shutdownHooks:Ljava/util/Set;
      28: aload_0
      29: iconst_1
      30: putfield      #132                // Field state:I
      33: aload_0
      34: new           #134                // class io/netty/util/concurrent/DefaultPromise
      37: dup
      38: getstatic     #140                // Field io/netty/util/concurrent/GlobalEventExecutor.INSTANCE:Lio/netty/util/concurrent/GlobalEventExecutor;
      41: invokespecial #143                // Method io/netty/util/concurrent/DefaultPromise."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      44: putfield      #145                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
      47: aload_0
      48: iload_3
      49: putfield      #147                // Field addTaskWakesUp:Z
      52: aload_0
      53: bipush        16
      55: iload         4
      57: invokestatic  #153                // Method java/lang/Math.max:(II)I
      60: putfield      #155                // Field maxPendingTasks:I
      63: aload_0
      64: aload_2
      65: aload_0
      66: invokestatic  #161                // Method io/netty/util/internal/ThreadExecutorMap.apply:(Ljava/util/concurrent/Executor;Lio/netty/util/concurrent/EventExecutor;)Ljava/util/concurrent/Executor;
      69: putfield      #163                // Field executor:Ljava/util/concurrent/Executor;
      72: aload_0
      73: aload_0
      74: aload_0
      75: getfield      #155                // Field maxPendingTasks:I
      78: invokevirtual #167                // Method newTaskQueue:(I)Ljava/util/Queue;
      81: putfield      #169                // Field taskQueue:Ljava/util/Queue;
      84: aload_0
      85: aload         5
      87: ldc           #170                // String rejectedHandler
      89: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      92: checkcast     #178                // class io/netty/util/concurrent/RejectedExecutionHandler
      95: putfield      #180                // Field rejectedExecutionHandler:Lio/netty/util/concurrent/RejectedExecutionHandler;
      98: return

  protected io.netty.util.concurrent.SingleThreadEventExecutor(io.netty.util.concurrent.EventExecutorGroup, java.util.concurrent.Executor, boolean, java.util.Queue<java.lang.Runnable>, io.netty.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #116                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor."<init>":(Lio/netty/util/concurrent/EventExecutorGroup;)V
       5: aload_0
       6: new           #118                // class java/util/concurrent/CountDownLatch
       9: dup
      10: iconst_1
      11: invokespecial #121                // Method java/util/concurrent/CountDownLatch."<init>":(I)V
      14: putfield      #123                // Field threadLock:Ljava/util/concurrent/CountDownLatch;
      17: aload_0
      18: new           #125                // class java/util/LinkedHashSet
      21: dup
      22: invokespecial #128                // Method java/util/LinkedHashSet."<init>":()V
      25: putfield      #130                // Field shutdownHooks:Ljava/util/Set;
      28: aload_0
      29: iconst_1
      30: putfield      #132                // Field state:I
      33: aload_0
      34: new           #134                // class io/netty/util/concurrent/DefaultPromise
      37: dup
      38: getstatic     #140                // Field io/netty/util/concurrent/GlobalEventExecutor.INSTANCE:Lio/netty/util/concurrent/GlobalEventExecutor;
      41: invokespecial #143                // Method io/netty/util/concurrent/DefaultPromise."<init>":(Lio/netty/util/concurrent/EventExecutor;)V
      44: putfield      #145                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
      47: aload_0
      48: iload_3
      49: putfield      #147                // Field addTaskWakesUp:Z
      52: aload_0
      53: getstatic     #107                // Field DEFAULT_MAX_PENDING_EXECUTOR_TASKS:I
      56: putfield      #155                // Field maxPendingTasks:I
      59: aload_0
      60: aload_2
      61: aload_0
      62: invokestatic  #161                // Method io/netty/util/internal/ThreadExecutorMap.apply:(Ljava/util/concurrent/Executor;Lio/netty/util/concurrent/EventExecutor;)Ljava/util/concurrent/Executor;
      65: putfield      #163                // Field executor:Ljava/util/concurrent/Executor;
      68: aload_0
      69: aload         4
      71: ldc           #183                // String taskQueue
      73: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      76: checkcast     #185                // class java/util/Queue
      79: putfield      #169                // Field taskQueue:Ljava/util/Queue;
      82: aload_0
      83: aload         5
      85: ldc           #170                // String rejectedHandler
      87: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      90: checkcast     #178                // class io/netty/util/concurrent/RejectedExecutionHandler
      93: putfield      #180                // Field rejectedExecutionHandler:Lio/netty/util/concurrent/RejectedExecutionHandler;
      96: return

  protected java.util.Queue<java.lang.Runnable> newTaskQueue();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #155                // Field maxPendingTasks:I
       5: invokevirtual #167                // Method newTaskQueue:(I)Ljava/util/Queue;
       8: areturn

  protected java.util.Queue<java.lang.Runnable> newTaskQueue(int);
    Code:
       0: new           #191                // class java/util/concurrent/LinkedBlockingQueue
       3: dup
       4: iload_1
       5: invokespecial #192                // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
       8: areturn

  protected void interruptThread();
    Code:
       0: aload_0
       1: getfield      #195                // Field thread:Ljava/lang/Thread;
       4: astore_1
       5: aload_1
       6: ifnonnull     17
       9: aload_0
      10: iconst_1
      11: putfield      #197                // Field interrupted:Z
      14: goto          21
      17: aload_1
      18: invokevirtual #202                // Method java/lang/Thread.interrupt:()V
      21: return

  protected java.lang.Runnable pollTask();
    Code:
       0: getstatic     #207                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #211                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #213                // class java/lang/AssertionError
      16: dup
      17: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      25: invokestatic  #218                // Method pollTaskFrom:(Ljava/util/Queue;)Ljava/lang/Runnable;
      28: areturn

  protected static java.lang.Runnable pollTaskFrom(java.util.Queue<java.lang.Runnable>);
    Code:
       0: aload_0
       1: invokeinterface #223,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       6: checkcast     #225                // class java/lang/Runnable
       9: astore_1
      10: aload_1
      11: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      14: if_acmpeq     19
      17: aload_1
      18: areturn
      19: goto          0

  protected java.lang.Runnable takeTask();
    Code:
       0: getstatic     #207                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #211                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #213                // class java/lang/AssertionError
      16: dup
      17: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      25: instanceof    #234                // class java/util/concurrent/BlockingQueue
      28: ifne          39
      31: new           #236                // class java/lang/UnsupportedOperationException
      34: dup
      35: invokespecial #237                // Method java/lang/UnsupportedOperationException."<init>":()V
      38: athrow
      39: aload_0
      40: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      43: checkcast     #234                // class java/util/concurrent/BlockingQueue
      46: astore_1
      47: aload_0
      48: invokevirtual #241                // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
      51: astore_2
      52: aload_2
      53: ifnonnull     84
      56: aconst_null
      57: astore_3
      58: aload_1
      59: invokeinterface #244,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.take:()Ljava/lang/Object;
      64: checkcast     #225                // class java/lang/Runnable
      67: astore_3
      68: aload_3
      69: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      72: if_acmpne     77
      75: aconst_null
      76: astore_3
      77: goto          82
      80: astore        4
      82: aload_3
      83: areturn
      84: aload_2
      85: invokevirtual #250                // Method io/netty/util/concurrent/ScheduledFutureTask.delayNanos:()J
      88: lstore_3
      89: aconst_null
      90: astore        5
      92: lload_3
      93: lconst_0
      94: lcmp
      95: ifle          120
      98: aload_1
      99: lload_3
     100: getstatic     #256                // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
     103: invokeinterface #259,  4          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
     108: checkcast     #225                // class java/lang/Runnable
     111: astore        5
     113: goto          120
     116: astore        6
     118: aconst_null
     119: areturn
     120: aload         5
     122: ifnonnull     141
     125: aload_0
     126: invokespecial #262                // Method fetchFromScheduledTaskQueue:()Z
     129: pop
     130: aload_1
     131: invokeinterface #263,  1          // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
     136: checkcast     #225                // class java/lang/Runnable
     139: astore        5
     141: aload         5
     143: ifnull        149
     146: aload         5
     148: areturn
     149: goto          47
    Exception table:
       from    to  target type
          58    77    80   Class java/lang/InterruptedException
          98   113   116   Class java/lang/InterruptedException

  private boolean fetchFromScheduledTaskQueue();
    Code:
       0: aload_0
       1: getfield      #274                // Field scheduledTaskQueue:Lio/netty/util/internal/PriorityQueue;
       4: ifnull        19
       7: aload_0
       8: getfield      #274                // Field scheduledTaskQueue:Lio/netty/util/internal/PriorityQueue;
      11: invokeinterface #279,  1          // InterfaceMethod io/netty/util/internal/PriorityQueue.isEmpty:()Z
      16: ifeq          21
      19: iconst_1
      20: ireturn
      21: aload_0
      22: invokevirtual #282                // Method getCurrentTimeNanos:()J
      25: lstore_1
      26: aload_0
      27: lload_1
      28: invokevirtual #286                // Method pollScheduledTask:(J)Ljava/lang/Runnable;
      31: astore_3
      32: aload_3
      33: ifnonnull     38
      36: iconst_1
      37: ireturn
      38: aload_0
      39: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      42: aload_3
      43: invokeinterface #290,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      48: ifne          67
      51: aload_0
      52: getfield      #274                // Field scheduledTaskQueue:Lio/netty/util/internal/PriorityQueue;
      55: aload_3
      56: checkcast     #246                // class io/netty/util/concurrent/ScheduledFutureTask
      59: invokeinterface #293,  2          // InterfaceMethod io/netty/util/internal/PriorityQueue.add:(Ljava/lang/Object;)Z
      64: pop
      65: iconst_0
      66: ireturn
      67: goto          26

  private boolean executeExpiredScheduledTasks();
    Code:
       0: aload_0
       1: getfield      #274                // Field scheduledTaskQueue:Lio/netty/util/internal/PriorityQueue;
       4: ifnull        19
       7: aload_0
       8: getfield      #274                // Field scheduledTaskQueue:Lio/netty/util/internal/PriorityQueue;
      11: invokeinterface #279,  1          // InterfaceMethod io/netty/util/internal/PriorityQueue.isEmpty:()Z
      16: ifeq          21
      19: iconst_0
      20: ireturn
      21: aload_0
      22: invokevirtual #282                // Method getCurrentTimeNanos:()J
      25: lstore_1
      26: aload_0
      27: lload_1
      28: invokevirtual #286                // Method pollScheduledTask:(J)Ljava/lang/Runnable;
      31: astore_3
      32: aload_3
      33: ifnonnull     38
      36: iconst_0
      37: ireturn
      38: aload_3
      39: invokestatic  #299                // Method safeExecute:(Ljava/lang/Runnable;)V
      42: aload_0
      43: lload_1
      44: invokevirtual #286                // Method pollScheduledTask:(J)Ljava/lang/Runnable;
      47: dup
      48: astore_3
      49: ifnonnull     38
      52: iconst_1
      53: ireturn

  protected java.lang.Runnable peekTask();
    Code:
       0: getstatic     #207                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #211                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #213                // class java/lang/AssertionError
      16: dup
      17: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      25: invokeinterface #303,  1          // InterfaceMethod java/util/Queue.peek:()Ljava/lang/Object;
      30: checkcast     #225                // class java/lang/Runnable
      33: areturn

  protected boolean hasTasks();
    Code:
       0: getstatic     #207                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #211                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #213                // class java/lang/AssertionError
      16: dup
      17: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      25: invokeinterface #305,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z
      30: ifne          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public int pendingTasks();
    Code:
       0: aload_0
       1: getfield      #169                // Field taskQueue:Ljava/util/Queue;
       4: invokeinterface #310,  1          // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  protected void addTask(java.lang.Runnable);
    Code:
       0: aload_1
       1: ldc_w         #312                // String task
       4: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: invokevirtual #316                // Method offerTask:(Ljava/lang/Runnable;)Z
      13: ifne          21
      16: aload_0
      17: aload_1
      18: invokevirtual #318                // Method reject:(Ljava/lang/Runnable;)V
      21: return

  final boolean offerTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #321                // Method isShutdown:()Z
       4: ifeq          10
       7: invokestatic  #323                // Method reject:()V
      10: aload_0
      11: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      14: aload_1
      15: invokeinterface #290,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      20: ireturn

  protected boolean removeTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #169                // Field taskQueue:Ljava/util/Queue;
       4: aload_1
       5: ldc_w         #312                // String task
       8: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: invokeinterface #327,  2          // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      16: ireturn

  protected boolean runAllTasks();
    Code:
       0: getstatic     #207                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #211                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #213                // class java/lang/AssertionError
      16: dup
      17: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iconst_0
      22: istore_2
      23: aload_0
      24: invokespecial #262                // Method fetchFromScheduledTaskQueue:()Z
      27: istore_1
      28: aload_0
      29: aload_0
      30: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      33: invokevirtual #332                // Method runAllTasksFrom:(Ljava/util/Queue;)Z
      36: ifeq          41
      39: iconst_1
      40: istore_2
      41: iload_1
      42: ifeq          23
      45: iload_2
      46: ifeq          57
      49: aload_0
      50: aload_0
      51: invokevirtual #282                // Method getCurrentTimeNanos:()J
      54: putfield      #334                // Field lastExecutionTime:J
      57: aload_0
      58: invokevirtual #337                // Method afterRunningAllTasks:()V
      61: iload_2
      62: ireturn

  protected final boolean runScheduledAndExecutorTasks(int);
    Code:
       0: getstatic     #207                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokevirtual #211                // Method inEventLoop:()Z
      10: ifne          21
      13: new           #213                // class java/lang/AssertionError
      16: dup
      17: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iconst_0
      22: istore_3
      23: aload_0
      24: aload_0
      25: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      28: invokespecial #344                // Method runExistingTasksFrom:(Ljava/util/Queue;)Z
      31: aload_0
      32: invokespecial #346                // Method executeExpiredScheduledTasks:()Z
      35: ior
      36: istore_2
      37: iload_2
      38: ifeq          49
      41: iinc          3, 1
      44: iload_3
      45: iload_1
      46: if_icmplt     23
      49: iload_3
      50: ifle          61
      53: aload_0
      54: aload_0
      55: invokevirtual #282                // Method getCurrentTimeNanos:()J
      58: putfield      #334                // Field lastExecutionTime:J
      61: aload_0
      62: invokevirtual #337                // Method afterRunningAllTasks:()V
      65: iload_3
      66: ifle          73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn

  protected final boolean runAllTasksFrom(java.util.Queue<java.lang.Runnable>);
    Code:
       0: aload_1
       1: invokestatic  #218                // Method pollTaskFrom:(Ljava/util/Queue;)Ljava/lang/Runnable;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_2
      12: invokestatic  #299                // Method safeExecute:(Ljava/lang/Runnable;)V
      15: aload_1
      16: invokestatic  #218                // Method pollTaskFrom:(Ljava/util/Queue;)Ljava/lang/Runnable;
      19: astore_2
      20: aload_2
      21: ifnonnull     11
      24: iconst_1
      25: ireturn

  private boolean runExistingTasksFrom(java.util.Queue<java.lang.Runnable>);
    Code:
       0: aload_1
       1: invokestatic  #218                // Method pollTaskFrom:(Ljava/util/Queue;)Ljava/lang/Runnable;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #155                // Field maxPendingTasks:I
      15: aload_1
      16: invokeinterface #310,  1          // InterfaceMethod java/util/Queue.size:()I
      21: invokestatic  #353                // Method java/lang/Math.min:(II)I
      24: istore_3
      25: aload_2
      26: invokestatic  #299                // Method safeExecute:(Ljava/lang/Runnable;)V
      29: iload_3
      30: iinc          3, -1
      33: ifle          57
      36: aload_1
      37: invokeinterface #223,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      42: checkcast     #225                // class java/lang/Runnable
      45: dup
      46: astore_2
      47: ifnull        57
      50: aload_2
      51: invokestatic  #299                // Method safeExecute:(Ljava/lang/Runnable;)V
      54: goto          29
      57: iconst_1
      58: ireturn

  protected boolean runAllTasks(long);
    Code:
       0: aload_0
       1: invokespecial #262                // Method fetchFromScheduledTaskQueue:()Z
       4: pop
       5: aload_0
       6: invokevirtual #357                // Method pollTask:()Ljava/lang/Runnable;
       9: astore_3
      10: aload_3
      11: ifnonnull     20
      14: aload_0
      15: invokevirtual #337                // Method afterRunningAllTasks:()V
      18: iconst_0
      19: ireturn
      20: lload_1
      21: lconst_0
      22: lcmp
      23: ifle          35
      26: aload_0
      27: invokevirtual #282                // Method getCurrentTimeNanos:()J
      30: lload_1
      31: ladd
      32: goto          36
      35: lconst_0
      36: lstore        4
      38: lconst_0
      39: lstore        6
      41: aload_3
      42: invokestatic  #299                // Method safeExecute:(Ljava/lang/Runnable;)V
      45: lload         6
      47: lconst_1
      48: ladd
      49: lstore        6
      51: lload         6
      53: ldc2_w        #358                // long 63l
      56: land
      57: lconst_0
      58: lcmp
      59: ifne          79
      62: aload_0
      63: invokevirtual #282                // Method getCurrentTimeNanos:()J
      66: lstore        8
      68: lload         8
      70: lload         4
      72: lcmp
      73: iflt          79
      76: goto          97
      79: aload_0
      80: invokevirtual #357                // Method pollTask:()Ljava/lang/Runnable;
      83: astore_3
      84: aload_3
      85: ifnonnull     41
      88: aload_0
      89: invokevirtual #282                // Method getCurrentTimeNanos:()J
      92: lstore        8
      94: goto          97
      97: aload_0
      98: invokevirtual #337                // Method afterRunningAllTasks:()V
     101: aload_0
     102: lload         8
     104: putfield      #334                // Field lastExecutionTime:J
     107: iconst_1
     108: ireturn

  protected void afterRunningAllTasks();
    Code:
       0: return

  protected long delayNanos(long);
    Code:
       0: lload_1
       1: invokestatic  #366                // Method initialNanoTime:()J
       4: lsub
       5: lstore_1
       6: aload_0
       7: invokevirtual #241                // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
      10: astore_3
      11: aload_3
      12: ifnonnull     19
      15: getstatic     #368                // Field SCHEDULE_PURGE_INTERVAL:J
      18: lreturn
      19: aload_3
      20: lload_1
      21: invokevirtual #370                // Method io/netty/util/concurrent/ScheduledFutureTask.delayNanos:(J)J
      24: lreturn

  protected long deadlineNanos();
    Code:
       0: aload_0
       1: invokevirtual #241                // Method peekScheduledTask:()Lio/netty/util/concurrent/ScheduledFutureTask;
       4: astore_1
       5: aload_1
       6: ifnonnull     18
       9: aload_0
      10: invokevirtual #282                // Method getCurrentTimeNanos:()J
      13: getstatic     #368                // Field SCHEDULE_PURGE_INTERVAL:J
      16: ladd
      17: lreturn
      18: aload_1
      19: invokevirtual #374                // Method io/netty/util/concurrent/ScheduledFutureTask.deadlineNanos:()J
      22: lreturn

  protected void updateLastExecutionTime();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #282                // Method getCurrentTimeNanos:()J
       5: putfield      #334                // Field lastExecutionTime:J
       8: return

  protected abstract void run();

  protected void cleanup();
    Code:
       0: return

  protected void wakeup(boolean);
    Code:
       0: iload_1
       1: ifne          17
       4: aload_0
       5: getfield      #169                // Field taskQueue:Ljava/util/Queue;
       8: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      11: invokeinterface #290,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      16: pop
      17: return

  public boolean inEventLoop(java.lang.Thread);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #195                // Field thread:Ljava/lang/Thread;
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void addShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #211                // Method inEventLoop:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #130                // Field shutdownHooks:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #384,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      17: pop
      18: goto          34
      21: aload_0
      22: new           #19                 // class io/netty/util/concurrent/SingleThreadEventExecutor$2
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #387                // Method io/netty/util/concurrent/SingleThreadEventExecutor$2."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;Ljava/lang/Runnable;)V
      31: invokevirtual #390                // Method execute:(Ljava/lang/Runnable;)V
      34: return

  public void removeShutdownHook(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #211                // Method inEventLoop:()Z
       4: ifeq          21
       7: aload_0
       8: getfield      #130                // Field shutdownHooks:Ljava/util/Set;
      11: aload_1
      12: invokeinterface #392,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      17: pop
      18: goto          34
      21: aload_0
      22: new           #17                 // class io/netty/util/concurrent/SingleThreadEventExecutor$3
      25: dup
      26: aload_0
      27: aload_1
      28: invokespecial #393                // Method io/netty/util/concurrent/SingleThreadEventExecutor$3."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;Ljava/lang/Runnable;)V
      31: invokevirtual #390                // Method execute:(Ljava/lang/Runnable;)V
      34: return

  private boolean runShutdownHooks();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #130                // Field shutdownHooks:Ljava/util/Set;
       6: invokeinterface #397,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      11: ifne          105
      14: new           #399                // class java/util/ArrayList
      17: dup
      18: aload_0
      19: getfield      #130                // Field shutdownHooks:Ljava/util/Set;
      22: invokespecial #402                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      25: astore_2
      26: aload_0
      27: getfield      #130                // Field shutdownHooks:Ljava/util/Set;
      30: invokeinterface #405,  1          // InterfaceMethod java/util/Set.clear:()V
      35: aload_2
      36: invokeinterface #411,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore_3
      42: aload_3
      43: invokeinterface #416,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          102
      51: aload_3
      52: invokeinterface #419,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #225                // class java/lang/Runnable
      60: astore        4
      62: aload         4
      64: invokestatic  #422                // Method runTask:(Ljava/lang/Runnable;)V
      67: iconst_1
      68: istore_1
      69: goto          99
      72: astore        5
      74: getstatic     #424                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      77: ldc_w         #426                // String Shutdown hook raised an exception.
      80: aload         5
      82: invokeinterface #432,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      87: iconst_1
      88: istore_1
      89: goto          99
      92: astore        6
      94: iconst_1
      95: istore_1
      96: aload         6
      98: athrow
      99: goto          42
     102: goto          2
     105: iload_1
     106: ifeq          117
     109: aload_0
     110: aload_0
     111: invokevirtual #282                // Method getCurrentTimeNanos:()J
     114: putfield      #334                // Field lastExecutionTime:J
     117: iload_1
     118: ireturn
    Exception table:
       from    to  target type
          62    67    72   Class java/lang/Throwable
          62    67    92   any
          72    87    92   any
          92    94    92   any

  public io.netty.util.concurrent.Future<?> shutdownGracefully(long, long, java.util.concurrent.TimeUnit);
    Code:
       0: lload_1
       1: ldc_w         #443                // String quietPeriod
       4: invokestatic  #447                // Method io/netty/util/internal/ObjectUtil.checkPositiveOrZero:(JLjava/lang/String;)J
       7: pop2
       8: lload_3
       9: lload_1
      10: lcmp
      11: ifge          58
      14: new           #449                // class java/lang/IllegalArgumentException
      17: dup
      18: new           #451                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #452                // Method java/lang/StringBuilder."<init>":()V
      25: ldc_w         #454                // String timeout:
      28: invokevirtual #458                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: lload_3
      32: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      35: ldc_w         #463                // String  (expected >= quietPeriod (
      38: invokevirtual #458                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: lload_1
      42: invokevirtual #461                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      45: ldc_w         #465                // String ))
      48: invokevirtual #458                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #469                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #472                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload         5
      60: ldc_w         #474                // String unit
      63: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      66: pop
      67: aload_0
      68: invokevirtual #477                // Method isShuttingDown:()Z
      71: ifeq          79
      74: aload_0
      75: invokevirtual #480                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
      78: areturn
      79: aload_0
      80: invokevirtual #211                // Method inEventLoop:()Z
      83: istore        6
      85: aload_0
      86: invokevirtual #477                // Method isShuttingDown:()Z
      89: ifeq          97
      92: aload_0
      93: invokevirtual #480                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
      96: areturn
      97: iconst_1
      98: istore        7
     100: aload_0
     101: getfield      #132                // Field state:I
     104: istore        8
     106: iload         6
     108: ifeq          117
     111: iconst_3
     112: istore        9
     114: goto          157
     117: iload         8
     119: lookupswitch  { // 2
                     1: 144
                     2: 144
               default: 150
          }
     144: iconst_3
     145: istore        9
     147: goto          157
     150: iload         8
     152: istore        9
     154: iconst_0
     155: istore        7
     157: getstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     160: aload_0
     161: iload         8
     163: iload         9
     165: invokevirtual #488                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
     168: ifeq          174
     171: goto          177
     174: goto          85
     177: aload_0
     178: aload         5
     180: lload_1
     181: invokevirtual #491                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     184: putfield      #493                // Field gracefulShutdownQuietPeriod:J
     187: aload_0
     188: aload         5
     190: lload_3
     191: invokevirtual #491                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
     194: putfield      #495                // Field gracefulShutdownTimeout:J
     197: aload_0
     198: iload         8
     200: invokespecial #498                // Method ensureThreadStarted:(I)Z
     203: ifeq          211
     206: aload_0
     207: getfield      #145                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
     210: areturn
     211: iload         7
     213: ifeq          242
     216: aload_0
     217: getfield      #169                // Field taskQueue:Ljava/util/Queue;
     220: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
     223: invokeinterface #290,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
     228: pop
     229: aload_0
     230: getfield      #147                // Field addTaskWakesUp:Z
     233: ifne          242
     236: aload_0
     237: iload         6
     239: invokevirtual #500                // Method wakeup:(Z)V
     242: aload_0
     243: invokevirtual #480                // Method terminationFuture:()Lio/netty/util/concurrent/Future;
     246: areturn

  public io.netty.util.concurrent.Future<?> terminationFuture();
    Code:
       0: aload_0
       1: getfield      #145                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
       4: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #321                // Method isShutdown:()Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokevirtual #211                // Method inEventLoop:()Z
      12: istore_1
      13: aload_0
      14: invokevirtual #477                // Method isShuttingDown:()Z
      17: ifeq          21
      20: return
      21: iconst_1
      22: istore_2
      23: aload_0
      24: getfield      #132                // Field state:I
      27: istore_3
      28: iload_1
      29: ifeq          38
      32: iconst_4
      33: istore        4
      35: goto          75
      38: iload_3
      39: tableswitch   { // 1 to 3
                     1: 64
                     2: 64
                     3: 64
               default: 70
          }
      64: iconst_4
      65: istore        4
      67: goto          75
      70: iload_3
      71: istore        4
      73: iconst_0
      74: istore_2
      75: getstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      78: aload_0
      79: iload_3
      80: iload         4
      82: invokevirtual #488                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      85: ifeq          91
      88: goto          94
      91: goto          13
      94: aload_0
      95: iload_3
      96: invokespecial #498                // Method ensureThreadStarted:(I)Z
      99: ifeq          103
     102: return
     103: iload_2
     104: ifeq          132
     107: aload_0
     108: getfield      #169                // Field taskQueue:Ljava/util/Queue;
     111: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
     114: invokeinterface #290,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
     119: pop
     120: aload_0
     121: getfield      #147                // Field addTaskWakesUp:Z
     124: ifne          132
     127: aload_0
     128: iload_1
     129: invokevirtual #500                // Method wakeup:(Z)V
     132: return

  public boolean isShuttingDown();
    Code:
       0: aload_0
       1: getfield      #132                // Field state:I
       4: iconst_3
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #132                // Field state:I
       4: iconst_4
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #132                // Field state:I
       4: iconst_5
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected boolean confirmShutdown();
    Code:
       0: aload_0
       1: invokevirtual #477                // Method isShuttingDown:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokevirtual #211                // Method inEventLoop:()Z
      13: ifne          27
      16: new           #509                // class java/lang/IllegalStateException
      19: dup
      20: ldc_w         #511                // String must be invoked from an event loop
      23: invokespecial #512                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      26: athrow
      27: aload_0
      28: invokevirtual #515                // Method cancelScheduledTasks:()V
      31: aload_0
      32: getfield      #517                // Field gracefulShutdownStartTime:J
      35: lconst_0
      36: lcmp
      37: ifne          48
      40: aload_0
      41: aload_0
      42: invokevirtual #282                // Method getCurrentTimeNanos:()J
      45: putfield      #517                // Field gracefulShutdownStartTime:J
      48: aload_0
      49: invokevirtual #519                // Method runAllTasks:()Z
      52: ifne          62
      55: aload_0
      56: invokespecial #521                // Method runShutdownHooks:()Z
      59: ifeq          97
      62: aload_0
      63: invokevirtual #321                // Method isShutdown:()Z
      66: ifeq          71
      69: iconst_1
      70: ireturn
      71: aload_0
      72: getfield      #493                // Field gracefulShutdownQuietPeriod:J
      75: lconst_0
      76: lcmp
      77: ifne          82
      80: iconst_1
      81: ireturn
      82: aload_0
      83: getfield      #169                // Field taskQueue:Ljava/util/Queue;
      86: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      89: invokeinterface #290,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      94: pop
      95: iconst_0
      96: ireturn
      97: aload_0
      98: invokevirtual #282                // Method getCurrentTimeNanos:()J
     101: lstore_1
     102: aload_0
     103: invokevirtual #321                // Method isShutdown:()Z
     106: ifne          123
     109: lload_1
     110: aload_0
     111: getfield      #517                // Field gracefulShutdownStartTime:J
     114: lsub
     115: aload_0
     116: getfield      #495                // Field gracefulShutdownTimeout:J
     119: lcmp
     120: ifle          125
     123: iconst_1
     124: ireturn
     125: lload_1
     126: aload_0
     127: getfield      #334                // Field lastExecutionTime:J
     130: lsub
     131: aload_0
     132: getfield      #493                // Field gracefulShutdownQuietPeriod:J
     135: lcmp
     136: ifgt          164
     139: aload_0
     140: getfield      #169                // Field taskQueue:Ljava/util/Queue;
     143: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
     146: invokeinterface #290,  2          // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
     151: pop
     152: ldc2_w        #522                // long 100l
     155: invokestatic  #527                // Method java/lang/Thread.sleep:(J)V
     158: goto          162
     161: astore_3
     162: iconst_0
     163: ireturn
     164: iconst_1
     165: ireturn
    Exception table:
       from    to  target type
         152   158   161   Class java/lang/InterruptedException

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: ldc_w         #474                // String unit
       4: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: invokevirtual #211                // Method inEventLoop:()Z
      12: ifeq          26
      15: new           #509                // class java/lang/IllegalStateException
      18: dup
      19: ldc_w         #531                // String cannot await termination of the current thread
      22: invokespecial #512                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: getfield      #123                // Field threadLock:Ljava/util/concurrent/CountDownLatch;
      30: lload_1
      31: aload_3
      32: invokevirtual #534                // Method java/util/concurrent/CountDownLatch.await:(JLjava/util/concurrent/TimeUnit;)Z
      35: pop
      36: aload_0
      37: invokevirtual #536                // Method isTerminated:()Z
      40: ireturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #539                // Method execute0:(Ljava/lang/Runnable;)V
       5: return

  public void lazyExecute(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #543                // Method lazyExecute0:(Ljava/lang/Runnable;)V
       5: return

  private void execute0(java.lang.Runnable);
    Code:
       0: aload_1
       1: ldc_w         #312                // String task
       4: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       7: pop
       8: aload_0
       9: aload_1
      10: aload_1
      11: instanceof    #28                 // class io/netty/util/concurrent/AbstractEventExecutor$LazyRunnable
      14: ifne          29
      17: aload_0
      18: aload_1
      19: invokevirtual #547                // Method wakesUpForTask:(Ljava/lang/Runnable;)Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: invokespecial #550                // Method execute:(Ljava/lang/Runnable;Z)V
      33: return

  private void lazyExecute0(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: ldc_w         #312                // String task
       5: invokestatic  #176                // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       8: checkcast     #225                // class java/lang/Runnable
      11: iconst_0
      12: invokespecial #550                // Method execute:(Ljava/lang/Runnable;Z)V
      15: return

  private void execute(java.lang.Runnable, boolean);
    Code:
       0: aload_0
       1: invokevirtual #211                // Method inEventLoop:()Z
       4: istore_3
       5: aload_0
       6: aload_1
       7: invokevirtual #552                // Method addTask:(Ljava/lang/Runnable;)V
      10: iload_3
      11: ifne          52
      14: aload_0
      15: invokespecial #555                // Method startThread:()V
      18: aload_0
      19: invokevirtual #321                // Method isShutdown:()Z
      22: ifeq          52
      25: iconst_0
      26: istore        4
      28: aload_0
      29: aload_1
      30: invokevirtual #557                // Method removeTask:(Ljava/lang/Runnable;)Z
      33: ifeq          39
      36: iconst_1
      37: istore        4
      39: goto          44
      42: astore        5
      44: iload         4
      46: ifeq          52
      49: invokestatic  #323                // Method reject:()V
      52: aload_0
      53: getfield      #147                // Field addTaskWakesUp:Z
      56: ifne          68
      59: iload_2
      60: ifeq          68
      63: aload_0
      64: iload_3
      65: invokevirtual #500                // Method wakeup:(Z)V
      68: return
    Exception table:
       from    to  target type
          28    39    42   Class java/lang/UnsupportedOperationException

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: ldc_w         #564                // String invokeAny
       4: invokespecial #567                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: invokespecial #569                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      12: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: ldc_w         #564                // String invokeAny
       4: invokespecial #567                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: lload_2
      10: aload         4
      12: invokespecial #578                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      15: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: ldc_w         #582                // String invokeAll
       4: invokespecial #567                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: invokespecial #584                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      12: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: ldc_w         #582                // String invokeAll
       4: invokespecial #567                // Method throwIfInEventLoop:(Ljava/lang/String;)V
       7: aload_0
       8: aload_1
       9: lload_2
      10: aload         4
      12: invokespecial #588                // Method io/netty/util/concurrent/AbstractScheduledEventExecutor.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      15: areturn

  private void throwIfInEventLoop(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #211                // Method inEventLoop:()Z
       4: ifeq          41
       7: new           #590                // class java/util/concurrent/RejectedExecutionException
      10: dup
      11: new           #451                // class java/lang/StringBuilder
      14: dup
      15: invokespecial #452                // Method java/lang/StringBuilder."<init>":()V
      18: ldc_w         #592                // String Calling
      21: invokevirtual #458                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #458                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc_w         #594                // String  from within the EventLoop is not allowed
      31: invokevirtual #458                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #469                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #595                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  public final io.netty.util.concurrent.ThreadProperties threadProperties();
    Code:
       0: aload_0
       1: getfield      #600                // Field threadProperties:Lio/netty/util/concurrent/ThreadProperties;
       4: astore_1
       5: aload_1
       6: ifnonnull     101
       9: aload_0
      10: getfield      #195                // Field thread:Ljava/lang/Thread;
      13: astore_2
      14: aload_2
      15: ifnonnull     75
      18: getstatic     #207                // Field $assertionsDisabled:Z
      21: ifne          39
      24: aload_0
      25: invokevirtual #211                // Method inEventLoop:()Z
      28: ifeq          39
      31: new           #213                // class java/lang/AssertionError
      34: dup
      35: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      38: athrow
      39: aload_0
      40: getstatic     #604                // Field NOOP_TASK:Ljava/lang/Runnable;
      43: invokevirtual #608                // Method submit:(Ljava/lang/Runnable;)Lio/netty/util/concurrent/Future;
      46: invokeinterface #613,  1          // InterfaceMethod io/netty/util/concurrent/Future.syncUninterruptibly:()Lio/netty/util/concurrent/Future;
      51: pop
      52: aload_0
      53: getfield      #195                // Field thread:Ljava/lang/Thread;
      56: astore_2
      57: getstatic     #207                // Field $assertionsDisabled:Z
      60: ifne          75
      63: aload_2
      64: ifnonnull     75
      67: new           #213                // class java/lang/AssertionError
      70: dup
      71: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      74: athrow
      75: new           #9                  // class io/netty/util/concurrent/SingleThreadEventExecutor$DefaultThreadProperties
      78: dup
      79: aload_2
      80: invokespecial #616                // Method io/netty/util/concurrent/SingleThreadEventExecutor$DefaultThreadProperties."<init>":(Ljava/lang/Thread;)V
      83: astore_1
      84: getstatic     #618                // Field PROPERTIES_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      87: aload_0
      88: aconst_null
      89: aload_1
      90: invokevirtual #623                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      93: ifne          101
      96: aload_0
      97: getfield      #600                // Field threadProperties:Lio/netty/util/concurrent/ThreadProperties;
     100: astore_1
     101: aload_1
     102: areturn

  protected boolean wakesUpForTask(java.lang.Runnable);
    Code:
       0: iconst_1
       1: ireturn

  protected static void reject();
    Code:
       0: new           #590                // class java/util/concurrent/RejectedExecutionException
       3: dup
       4: ldc_w         #625                // String event executor terminated
       7: invokespecial #595                // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      10: athrow

  protected final void reject(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #180                // Field rejectedExecutionHandler:Lio/netty/util/concurrent/RejectedExecutionHandler;
       4: aload_1
       5: aload_0
       6: invokeinterface #629,  3          // InterfaceMethod io/netty/util/concurrent/RejectedExecutionHandler.rejected:(Ljava/lang/Runnable;Lio/netty/util/concurrent/SingleThreadEventExecutor;)V
      11: return

  private void startThread();
    Code:
       0: aload_0
       1: getfield      #132                // Field state:I
       4: iconst_1
       5: if_icmpne     62
       8: getstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: iconst_1
      13: iconst_2
      14: invokevirtual #488                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      17: ifeq          62
      20: iconst_0
      21: istore_1
      22: aload_0
      23: invokespecial #632                // Method doStartThread:()V
      26: iconst_1
      27: istore_1
      28: iload_1
      29: ifne          62
      32: getstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      35: aload_0
      36: iconst_2
      37: iconst_1
      38: invokevirtual #488                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      41: pop
      42: goto          62
      45: astore_2
      46: iload_1
      47: ifne          60
      50: getstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      53: aload_0
      54: iconst_2
      55: iconst_1
      56: invokevirtual #488                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      59: pop
      60: aload_2
      61: athrow
      62: return
    Exception table:
       from    to  target type
          22    28    45   any

  private boolean ensureThreadStarted(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     45
       5: aload_0
       6: invokespecial #632                // Method doStartThread:()V
       9: goto          45
      12: astore_2
      13: getstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      16: aload_0
      17: iconst_5
      18: invokevirtual #637                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.set:(Ljava/lang/Object;I)V
      21: aload_0
      22: getfield      #145                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
      25: aload_2
      26: invokeinterface #643,  2          // InterfaceMethod io/netty/util/concurrent/Promise.tryFailure:(Ljava/lang/Throwable;)Z
      31: pop
      32: aload_2
      33: instanceof    #645                // class java/lang/Exception
      36: ifne          43
      39: aload_2
      40: invokestatic  #651                // Method io/netty/util/internal/PlatformDependent.throwException:(Ljava/lang/Throwable;)V
      43: iconst_1
      44: ireturn
      45: iconst_0
      46: ireturn
    Exception table:
       from    to  target type
           5     9    12   Class java/lang/Throwable

  private void doStartThread();
    Code:
       0: getstatic     #207                // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: getfield      #195                // Field thread:Ljava/lang/Thread;
      10: ifnull        21
      13: new           #213                // class java/lang/AssertionError
      16: dup
      17: invokespecial #214                // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #163                // Field executor:Ljava/util/concurrent/Executor;
      25: new           #15                 // class io/netty/util/concurrent/SingleThreadEventExecutor$4
      28: dup
      29: aload_0
      30: invokespecial #655                // Method io/netty/util/concurrent/SingleThreadEventExecutor$4."<init>":(Lio/netty/util/concurrent/SingleThreadEventExecutor;)V
      33: invokeinterface #658,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      38: return

  final int drainTasks();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #169                // Field taskQueue:Ljava/util/Queue;
       6: invokeinterface #223,  1          // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      11: checkcast     #225                // class java/lang/Runnable
      14: astore_2
      15: aload_2
      16: ifnonnull     22
      19: goto          35
      22: getstatic     #228                // Field WAKEUP_TASK:Ljava/lang/Runnable;
      25: aload_2
      26: if_acmpeq     32
      29: iinc          1, 1
      32: goto          2
      35: iload_1
      36: ireturn

  static java.util.Set access$000(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #130                // Field shutdownHooks:Ljava/util/Set;
       4: areturn

  static java.lang.Thread access$102(io.netty.util.concurrent.SingleThreadEventExecutor, java.lang.Thread);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #195                // Field thread:Ljava/lang/Thread;
       6: areturn

  static boolean access$200(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #197                // Field interrupted:Z
       4: ireturn

  static java.lang.Thread access$100(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #195                // Field thread:Ljava/lang/Thread;
       4: areturn

  static io.netty.util.internal.logging.InternalLogger access$300();
    Code:
       0: getstatic     #424                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: areturn

  static int access$400(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #132                // Field state:I
       4: ireturn

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$500();
    Code:
       0: getstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: areturn

  static long access$600(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #517                // Field gracefulShutdownStartTime:J
       4: lreturn

  static java.util.concurrent.CountDownLatch access$700(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #123                // Field threadLock:Ljava/util/concurrent/CountDownLatch;
       4: areturn

  static io.netty.util.concurrent.Promise access$800(io.netty.util.concurrent.SingleThreadEventExecutor);
    Code:
       0: aload_0
       1: getfield      #145                // Field terminationFuture:Lio/netty/util/concurrent/Promise;
       4: areturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
       2: invokevirtual #689                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #207                // Field $assertionsDisabled:Z
      16: bipush        16
      18: ldc_w         #691                // String io.netty.eventexecutor.maxPendingTasks
      21: ldc_w         #692                // int 2147483647
      24: invokestatic  #698                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
      27: invokestatic  #153                // Method java/lang/Math.max:(II)I
      30: putstatic     #107                // Field DEFAULT_MAX_PENDING_EXECUTOR_TASKS:I
      33: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
      35: invokestatic  #704                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      38: putstatic     #424                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      41: new           #21                 // class io/netty/util/concurrent/SingleThreadEventExecutor$1
      44: dup
      45: invokespecial #705                // Method io/netty/util/concurrent/SingleThreadEventExecutor$1."<init>":()V
      48: putstatic     #604                // Field NOOP_TASK:Ljava/lang/Runnable;
      51: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
      53: ldc_w         #706                // String state
      56: invokestatic  #710                // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      59: putstatic     #482                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      62: ldc           #2                  // class io/netty/util/concurrent/SingleThreadEventExecutor
      64: ldc_w         #602                // class io/netty/util/concurrent/ThreadProperties
      67: ldc_w         #711                // String threadProperties
      70: invokestatic  #714                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      73: putstatic     #618                // Field PROPERTIES_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      76: getstatic     #717                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      79: lconst_1
      80: invokevirtual #491                // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      83: putstatic     #368                // Field SCHEDULE_PURGE_INTERVAL:J
      86: return
}
