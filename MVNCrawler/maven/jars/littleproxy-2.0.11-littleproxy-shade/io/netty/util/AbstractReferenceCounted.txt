Compiled from "AbstractReferenceCounted.java"
public abstract class io.netty.util.AbstractReferenceCounted implements io.netty.util.ReferenceCounted {
  private static final long REFCNT_FIELD_OFFSET;

  private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<io.netty.util.AbstractReferenceCounted> AIF_UPDATER;

  private static final io.netty.util.internal.ReferenceCountUpdater<io.netty.util.AbstractReferenceCounted> updater;

  private volatile int refCnt;

  public io.netty.util.AbstractReferenceCounted();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
       8: invokevirtual #31                 // Method io/netty/util/internal/ReferenceCountUpdater.initialValue:()I
      11: putfield      #33                 // Field refCnt:I
      14: return

  public int refCnt();
    Code:
       0: getstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
       3: aload_0
       4: invokevirtual #38                 // Method io/netty/util/internal/ReferenceCountUpdater.refCnt:(Lio/netty/util/ReferenceCounted;)I
       7: ireturn

  protected final void setRefCnt(int);
    Code:
       0: getstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
       3: aload_0
       4: iload_1
       5: invokevirtual #43                 // Method io/netty/util/internal/ReferenceCountUpdater.setRefCnt:(Lio/netty/util/ReferenceCounted;I)V
       8: return

  public io.netty.util.ReferenceCounted retain();
    Code:
       0: getstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
       3: aload_0
       4: invokevirtual #48                 // Method io/netty/util/internal/ReferenceCountUpdater.retain:(Lio/netty/util/ReferenceCounted;)Lio/netty/util/ReferenceCounted;
       7: areturn

  public io.netty.util.ReferenceCounted retain(int);
    Code:
       0: getstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
       3: aload_0
       4: iload_1
       5: invokevirtual #52                 // Method io/netty/util/internal/ReferenceCountUpdater.retain:(Lio/netty/util/ReferenceCounted;I)Lio/netty/util/ReferenceCounted;
       8: areturn

  public io.netty.util.ReferenceCounted touch();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #57                 // Method touch:(Ljava/lang/Object;)Lio/netty/util/ReferenceCounted;
       5: areturn

  public boolean release();
    Code:
       0: aload_0
       1: getstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
       4: aload_0
       5: invokevirtual #62                 // Method io/netty/util/internal/ReferenceCountUpdater.release:(Lio/netty/util/ReferenceCounted;)Z
       8: invokespecial #66                 // Method handleRelease:(Z)Z
      11: ireturn

  public boolean release(int);
    Code:
       0: aload_0
       1: getstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
       4: aload_0
       5: iload_1
       6: invokevirtual #70                 // Method io/netty/util/internal/ReferenceCountUpdater.release:(Lio/netty/util/ReferenceCounted;I)Z
       9: invokespecial #66                 // Method handleRelease:(Z)Z
      12: ireturn

  private boolean handleRelease(boolean);
    Code:
       0: iload_1
       1: ifeq          8
       4: aload_0
       5: invokevirtual #74                 // Method deallocate:()V
       8: iload_1
       9: ireturn

  protected abstract void deallocate();

  static java.util.concurrent.atomic.AtomicIntegerFieldUpdater access$000();
    Code:
       0: getstatic     #80                 // Field AIF_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: areturn

  static long access$100();
    Code:
       0: getstatic     #84                 // Field REFCNT_FIELD_OFFSET:J
       3: lreturn

  static {};
    Code:
       0: ldc           #2                  // class io/netty/util/AbstractReferenceCounted
       2: ldc           #86                 // String refCnt
       4: invokestatic  #90                 // Method io/netty/util/internal/ReferenceCountUpdater.getUnsafeOffset:(Ljava/lang/Class;Ljava/lang/String;)J
       7: putstatic     #84                 // Field REFCNT_FIELD_OFFSET:J
      10: ldc           #2                  // class io/netty/util/AbstractReferenceCounted
      12: ldc           #86                 // String refCnt
      14: invokestatic  #96                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #80                 // Field AIF_UPDATER:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: new           #9                  // class io/netty/util/AbstractReferenceCounted$1
      23: dup
      24: invokespecial #97                 // Method io/netty/util/AbstractReferenceCounted$1."<init>":()V
      27: putstatic     #25                 // Field updater:Lio/netty/util/internal/ReferenceCountUpdater;
      30: return
}
