Compiled from "ResourceLeakDetector.java"
public class io.netty.util.ResourceLeakDetector<T> {
  private static final java.lang.String PROP_LEVEL_OLD;

  private static final java.lang.String PROP_LEVEL;

  private static final io.netty.util.ResourceLeakDetector$Level DEFAULT_LEVEL;

  private static final java.lang.String PROP_TARGET_RECORDS;

  private static final int DEFAULT_TARGET_RECORDS;

  private static final java.lang.String PROP_SAMPLING_INTERVAL;

  private static final int DEFAULT_SAMPLING_INTERVAL;

  private static final int TARGET_RECORDS;

  static final int SAMPLING_INTERVAL;

  private static io.netty.util.ResourceLeakDetector$Level level;

  private static final io.netty.util.internal.logging.InternalLogger logger;

  private final java.util.Set<io.netty.util.ResourceLeakDetector$DefaultResourceLeak<?>> allLeaks;

  private final java.lang.ref.ReferenceQueue<java.lang.Object> refQueue;

  private final java.util.Set<java.lang.String> reportedLeaks;

  private final java.lang.String resourceType;

  private final int samplingInterval;

  private static final java.util.concurrent.atomic.AtomicReference<java.lang.String[]> excludedMethods;

  public static void setEnabled(boolean);
    Code:
       0: iload_0
       1: ifeq          10
       4: getstatic     #61                 // Field io/netty/util/ResourceLeakDetector$Level.SIMPLE:Lio/netty/util/ResourceLeakDetector$Level;
       7: goto          13
      10: getstatic     #64                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
      13: invokestatic  #68                 // Method setLevel:(Lio/netty/util/ResourceLeakDetector$Level;)V
      16: return

  public static boolean isEnabled();
    Code:
       0: invokestatic  #76                 // Method getLevel:()Lio/netty/util/ResourceLeakDetector$Level;
       3: invokevirtual #80                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
       6: getstatic     #64                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
       9: invokevirtual #80                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
      12: if_icmple     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static void setLevel(io.netty.util.ResourceLeakDetector$Level);
    Code:
       0: aload_0
       1: ldc           #81                 // String level
       3: invokestatic  #87                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: checkcast     #16                 // class io/netty/util/ResourceLeakDetector$Level
       9: putstatic     #89                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
      12: return

  public static io.netty.util.ResourceLeakDetector$Level getLevel();
    Code:
       0: getstatic     #89                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
       3: areturn

  public io.netty.util.ResourceLeakDetector(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
       5: invokespecial #101                // Method "<init>":(Ljava/lang/String;)V
       8: return

  public io.netty.util.ResourceLeakDetector(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        128
       5: ldc2_w        #107                // long 9223372036854775807l
       8: invokespecial #111                // Method "<init>":(Ljava/lang/String;IJ)V
      11: return

  public io.netty.util.ResourceLeakDetector(java.lang.Class<?>, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #116                // Method "<init>":(Ljava/lang/Class;I)V
       6: return

  public io.netty.util.ResourceLeakDetector(java.lang.Class<?>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #98                 // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Class;)Ljava/lang/String;
       5: iload_2
       6: ldc2_w        #107                // long 9223372036854775807l
       9: invokespecial #111                // Method "<init>":(Ljava/lang/String;IJ)V
      12: return

  public io.netty.util.ResourceLeakDetector(java.lang.String, int, long);
    Code:
       0: aload_0
       1: invokespecial #122                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #124                // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #125                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: invokestatic  #131                // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      15: putfield      #133                // Field allLeaks:Ljava/util/Set;
      18: aload_0
      19: new           #135                // class java/lang/ref/ReferenceQueue
      22: dup
      23: invokespecial #136                // Method java/lang/ref/ReferenceQueue."<init>":()V
      26: putfield      #138                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      29: aload_0
      30: new           #124                // class java/util/concurrent/ConcurrentHashMap
      33: dup
      34: invokespecial #125                // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      37: invokestatic  #131                // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      40: putfield      #140                // Field reportedLeaks:Ljava/util/Set;
      43: aload_0
      44: aload_1
      45: ldc           #141                // String resourceType
      47: invokestatic  #87                 // Method io/netty/util/internal/ObjectUtil.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      50: checkcast     #143                // class java/lang/String
      53: putfield      #145                // Field resourceType:Ljava/lang/String;
      56: aload_0
      57: iload_2
      58: putfield      #147                // Field samplingInterval:I
      61: return

  public final io.netty.util.ResourceLeak open(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #154                // Method track0:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakDetector$DefaultResourceLeak;
       5: areturn

  public final io.netty.util.ResourceLeakTracker<T> track(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #154                // Method track0:(Ljava/lang/Object;)Lio/netty/util/ResourceLeakDetector$DefaultResourceLeak;
       5: areturn

  private io.netty.util.ResourceLeakDetector$DefaultResourceLeak track0(T);
    Code:
       0: getstatic     #89                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
       3: astore_2
       4: aload_2
       5: getstatic     #64                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
       8: if_acmpne     13
      11: aconst_null
      12: areturn
      13: aload_2
      14: invokevirtual #80                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
      17: getstatic     #164                // Field io/netty/util/ResourceLeakDetector$Level.PARANOID:Lio/netty/util/ResourceLeakDetector$Level;
      20: invokevirtual #80                 // Method io/netty/util/ResourceLeakDetector$Level.ordinal:()I
      23: if_icmpge     70
      26: invokestatic  #170                // Method io/netty/util/internal/PlatformDependent.threadLocalRandom:()Ljava/util/Random;
      29: aload_0
      30: getfield      #147                // Field samplingInterval:I
      33: invokevirtual #176                // Method java/util/Random.nextInt:(I)I
      36: ifne          68
      39: aload_0
      40: invokespecial #179                // Method reportLeak:()V
      43: new           #13                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      46: dup
      47: aload_1
      48: aload_0
      49: getfield      #138                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      52: aload_0
      53: getfield      #133                // Field allLeaks:Ljava/util/Set;
      56: aload_0
      57: aload_0
      58: getfield      #145                // Field resourceType:Ljava/lang/String;
      61: invokevirtual #183                // Method getInitialHint:(Ljava/lang/String;)Ljava/lang/Object;
      64: invokespecial #186                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;Ljava/lang/Object;)V
      67: areturn
      68: aconst_null
      69: areturn
      70: aload_0
      71: invokespecial #179                // Method reportLeak:()V
      74: new           #13                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      77: dup
      78: aload_1
      79: aload_0
      80: getfield      #138                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      83: aload_0
      84: getfield      #133                // Field allLeaks:Ljava/util/Set;
      87: aload_0
      88: aload_0
      89: getfield      #145                // Field resourceType:Ljava/lang/String;
      92: invokevirtual #183                // Method getInitialHint:(Ljava/lang/String;)Ljava/lang/Object;
      95: invokespecial #186                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;Ljava/lang/Object;)V
      98: areturn

  private void clearRefQueue();
    Code:
       0: aload_0
       1: getfield      #138                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #191                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #13                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      10: astore_1
      11: aload_1
      12: ifnonnull     18
      15: goto          26
      18: aload_1
      19: invokevirtual #194                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak.dispose:()Z
      22: pop
      23: goto          0
      26: return

  protected boolean needReport();
    Code:
       0: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: invokeinterface #204,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isErrorEnabled:()Z
       8: ireturn

  private void reportLeak();
    Code:
       0: aload_0
       1: invokevirtual #206                // Method needReport:()Z
       4: ifne          12
       7: aload_0
       8: invokespecial #208                // Method clearRefQueue:()V
      11: return
      12: aload_0
      13: getfield      #138                // Field refQueue:Ljava/lang/ref/ReferenceQueue;
      16: invokevirtual #191                // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      19: checkcast     #13                 // class io/netty/util/ResourceLeakDetector$DefaultResourceLeak
      22: astore_1
      23: aload_1
      24: ifnonnull     30
      27: goto          88
      30: aload_1
      31: invokevirtual #194                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak.dispose:()Z
      34: ifne          40
      37: goto          12
      40: aload_1
      41: invokevirtual #212                // Method io/netty/util/ResourceLeakDetector$DefaultResourceLeak.getReportAndClearRecords:()Ljava/lang/String;
      44: astore_2
      45: aload_0
      46: getfield      #140                // Field reportedLeaks:Ljava/util/Set;
      49: aload_2
      50: invokeinterface #218,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      55: ifeq          85
      58: aload_2
      59: invokevirtual #221                // Method java/lang/String.isEmpty:()Z
      62: ifeq          76
      65: aload_0
      66: aload_0
      67: getfield      #145                // Field resourceType:Ljava/lang/String;
      70: invokevirtual #224                // Method reportUntracedLeak:(Ljava/lang/String;)V
      73: goto          85
      76: aload_0
      77: aload_0
      78: getfield      #145                // Field resourceType:Ljava/lang/String;
      81: aload_2
      82: invokevirtual #228                // Method reportTracedLeak:(Ljava/lang/String;Ljava/lang/String;)V
      85: goto          12
      88: return

  protected void reportTracedLeak(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #231                // String LEAK: {}.release() was not called before it\'s garbage-collected. See https://netty.io/wiki/reference-counted-objects.html for more information.{}
       5: aload_1
       6: aload_2
       7: invokeinterface #235,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: return

  protected void reportUntracedLeak(java.lang.String);
    Code:
       0: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
       3: ldc           #237                // String LEAK: {}.release() was not called before it\'s garbage-collected. Enable advanced leak reporting to find out where the leak occurred. To enable advanced leak reporting, specify the JVM option \'-D{}={}\' or call {}.setLevel() See https://netty.io/wiki/reference-counted-objects.html for more information.
       5: iconst_4
       6: anewarray     #5                  // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #24                 // String io.netty.leakDetection.level
      17: aastore
      18: dup
      19: iconst_2
      20: getstatic     #240                // Field io/netty/util/ResourceLeakDetector$Level.ADVANCED:Lio/netty/util/ResourceLeakDetector$Level;
      23: invokevirtual #243                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
      26: invokevirtual #246                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      29: aastore
      30: dup
      31: iconst_3
      32: aload_0
      33: invokestatic  #249                // Method io/netty/util/internal/StringUtil.simpleClassName:(Ljava/lang/Object;)Ljava/lang/String;
      36: aastore
      37: invokeinterface #252,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      42: return

  protected void reportInstancesLeak(java.lang.String);
    Code:
       0: return

  protected java.lang.Object getInitialHint(java.lang.String);
    Code:
       0: aconst_null
       1: areturn

  public static void addExclusions(java.lang.Class, java.lang.String...);
    Code:
       0: new           #257                // class java/util/HashSet
       3: dup
       4: aload_1
       5: invokestatic  #263                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokespecial #266                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      11: astore_2
      12: aload_0
      13: invokevirtual #272                // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
      16: astore_3
      17: aload_3
      18: arraylength
      19: istore        4
      21: iconst_0
      22: istore        5
      24: iload         5
      26: iload         4
      28: if_icmpge     69
      31: aload_3
      32: iload         5
      34: aaload
      35: astore        6
      37: aload_2
      38: aload         6
      40: invokevirtual #281                // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      43: invokeinterface #284,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      48: ifeq          63
      51: aload_2
      52: invokeinterface #285,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      57: ifeq          63
      60: goto          69
      63: iinc          5, 1
      66: goto          24
      69: aload_2
      70: invokeinterface #285,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      75: ifne          119
      78: new           #287                // class java/lang/IllegalArgumentException
      81: dup
      82: new           #289                // class java/lang/StringBuilder
      85: dup
      86: invokespecial #290                // Method java/lang/StringBuilder."<init>":()V
      89: ldc_w         #292                // String Can\'t find \'
      92: invokevirtual #296                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_2
      96: invokevirtual #299                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      99: ldc_w         #301                // String \' in
     102: invokevirtual #296                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: invokevirtual #302                // Method java/lang/Class.getName:()Ljava/lang/String;
     109: invokevirtual #296                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: invokevirtual #305                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: invokespecial #306                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: getstatic     #308                // Field excludedMethods:Ljava/util/concurrent/atomic/AtomicReference;
     122: invokevirtual #314                // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
     125: checkcast     #274                // class "[Ljava/lang/String;"
     128: astore_3
     129: aload_3
     130: aload_3
     131: arraylength
     132: iconst_2
     133: aload_1
     134: arraylength
     135: imul
     136: iadd
     137: invokestatic  #318                // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
     140: checkcast     #274                // class "[Ljava/lang/String;"
     143: astore        4
     145: iconst_0
     146: istore        5
     148: iload         5
     150: aload_1
     151: arraylength
     152: if_icmpge     191
     155: aload         4
     157: aload_3
     158: arraylength
     159: iload         5
     161: iconst_2
     162: imul
     163: iadd
     164: aload_0
     165: invokevirtual #302                // Method java/lang/Class.getName:()Ljava/lang/String;
     168: aastore
     169: aload         4
     171: aload_3
     172: arraylength
     173: iload         5
     175: iconst_2
     176: imul
     177: iadd
     178: iconst_1
     179: iadd
     180: aload_1
     181: iload         5
     183: aaload
     184: aastore
     185: iinc          5, 1
     188: goto          148
     191: getstatic     #308                // Field excludedMethods:Ljava/util/concurrent/atomic/AtomicReference;
     194: aload_3
     195: aload         4
     197: invokevirtual #322                // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
     200: ifeq          119
     203: return

  static io.netty.util.ResourceLeakDetector$Level access$000();
    Code:
       0: getstatic     #333                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
       3: areturn

  static int access$200();
    Code:
       0: getstatic     #336                // Field TARGET_RECORDS:I
       3: ireturn

  static java.util.concurrent.atomic.AtomicReference access$600();
    Code:
       0: getstatic     #308                // Field excludedMethods:Ljava/util/concurrent/atomic/AtomicReference;
       3: areturn

  static {};
    Code:
       0: getstatic     #61                 // Field io/netty/util/ResourceLeakDetector$Level.SIMPLE:Lio/netty/util/ResourceLeakDetector$Level;
       3: putstatic     #333                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
       6: ldc           #2                  // class io/netty/util/ResourceLeakDetector
       8: invokestatic  #345                // Method io/netty/util/internal/logging/InternalLoggerFactory.getInstance:(Ljava/lang/Class;)Lio/netty/util/internal/logging/InternalLogger;
      11: putstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      14: ldc_w         #347                // String io.netty.noResourceLeakDetection
      17: invokestatic  #352                // Method io/netty/util/internal/SystemPropertyUtil.get:(Ljava/lang/String;)Ljava/lang/String;
      20: ifnull        71
      23: ldc_w         #347                // String io.netty.noResourceLeakDetection
      26: iconst_0
      27: invokestatic  #356                // Method io/netty/util/internal/SystemPropertyUtil.getBoolean:(Ljava/lang/String;Z)Z
      30: istore_0
      31: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      34: ldc_w         #358                // String -Dio.netty.noResourceLeakDetection: {}
      37: iload_0
      38: invokestatic  #364                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: invokeinterface #368,  3          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      46: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
      49: ldc_w         #370                // String -Dio.netty.noResourceLeakDetection is deprecated. Use \'-D{}={}\' instead.
      52: ldc           #24                 // String io.netty.leakDetection.level
      54: getstatic     #333                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
      57: invokevirtual #243                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
      60: invokevirtual #246                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      63: invokeinterface #373,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      68: goto          73
      71: iconst_0
      72: istore_0
      73: iload_0
      74: ifeq          83
      77: getstatic     #64                 // Field io/netty/util/ResourceLeakDetector$Level.DISABLED:Lio/netty/util/ResourceLeakDetector$Level;
      80: goto          86
      83: getstatic     #333                // Field DEFAULT_LEVEL:Lio/netty/util/ResourceLeakDetector$Level;
      86: astore_1
      87: ldc           #21                 // String io.netty.leakDetectionLevel
      89: aload_1
      90: invokevirtual #243                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
      93: invokestatic  #376                // Method io/netty/util/internal/SystemPropertyUtil.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      96: astore_2
      97: ldc           #24                 // String io.netty.leakDetection.level
      99: aload_2
     100: invokestatic  #376                // Method io/netty/util/internal/SystemPropertyUtil.get:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     103: astore_2
     104: aload_2
     105: invokestatic  #380                // Method io/netty/util/ResourceLeakDetector$Level.parseLevel:(Ljava/lang/String;)Lio/netty/util/ResourceLeakDetector$Level;
     108: astore_3
     109: ldc           #29                 // String io.netty.leakDetection.targetRecords
     111: iconst_4
     112: invokestatic  #384                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
     115: putstatic     #336                // Field TARGET_RECORDS:I
     118: ldc           #35                 // String io.netty.leakDetection.samplingInterval
     120: sipush        128
     123: invokestatic  #384                // Method io/netty/util/internal/SystemPropertyUtil.getInt:(Ljava/lang/String;I)I
     126: putstatic     #386                // Field SAMPLING_INTERVAL:I
     129: aload_3
     130: putstatic     #89                 // Field level:Lio/netty/util/ResourceLeakDetector$Level;
     133: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     136: invokeinterface #389,  1          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.isDebugEnabled:()Z
     141: ifeq          183
     144: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     147: ldc_w         #391                // String -D{}: {}
     150: ldc           #24                 // String io.netty.leakDetection.level
     152: aload_3
     153: invokevirtual #243                // Method io/netty/util/ResourceLeakDetector$Level.name:()Ljava/lang/String;
     156: invokevirtual #246                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     159: invokeinterface #393,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     164: getstatic     #199                // Field logger:Lio/netty/util/internal/logging/InternalLogger;
     167: ldc_w         #391                // String -D{}: {}
     170: ldc           #29                 // String io.netty.leakDetection.targetRecords
     172: getstatic     #336                // Field TARGET_RECORDS:I
     175: invokestatic  #398                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     178: invokeinterface #393,  4          // InterfaceMethod io/netty/util/internal/logging/InternalLogger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     183: new           #310                // class java/util/concurrent/atomic/AtomicReference
     186: dup
     187: getstatic     #403                // Field io/netty/util/internal/EmptyArrays.EMPTY_STRINGS:[Ljava/lang/String;
     190: invokespecial #406                // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
     193: putstatic     #308                // Field excludedMethods:Ljava/util/concurrent/atomic/AtomicReference;
     196: return
}
