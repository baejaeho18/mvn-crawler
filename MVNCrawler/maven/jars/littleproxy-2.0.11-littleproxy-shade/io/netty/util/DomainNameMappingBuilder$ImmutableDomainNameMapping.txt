Compiled from "DomainNameMappingBuilder.java"
final class io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping<V> extends io.netty.util.DomainNameMapping<V> {
  private static final java.lang.String REPR_HEADER;

  private static final java.lang.String REPR_MAP_OPENING;

  private static final java.lang.String REPR_MAP_CLOSING;

  private static final int REPR_CONST_PART_LENGTH;

  private final java.lang.String[] domainNamePatterns;

  private final V[] values;

  private final java.util.Map<java.lang.String, V> map;

  private io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping(V, java.util.Map<java.lang.String, V>);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokespecial #42                 // Method io/netty/util/DomainNameMapping."<init>":(Ljava/util/Map;Ljava/lang/Object;)V
       6: aload_2
       7: invokeinterface #46,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      12: astore_3
      13: aload_3
      14: invokeinterface #52,  1           // InterfaceMethod java/util/Set.size:()I
      19: istore        4
      21: aload_0
      22: iload         4
      24: anewarray     #54                 // class java/lang/String
      27: putfield      #56                 // Field domainNamePatterns:[Ljava/lang/String;
      30: aload_0
      31: iload         4
      33: anewarray     #58                 // class java/lang/Object
      36: checkcast     #59                 // class "[Ljava/lang/Object;"
      39: putfield      #61                 // Field values:[Ljava/lang/Object;
      42: new           #63                 // class java/util/LinkedHashMap
      45: dup
      46: aload_2
      47: invokeinterface #64,  1           // InterfaceMethod java/util/Map.size:()I
      52: invokespecial #67                 // Method java/util/LinkedHashMap."<init>":(I)V
      55: astore        5
      57: iconst_0
      58: istore        6
      60: aload_3
      61: invokeinterface #71,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      66: astore        7
      68: aload         7
      70: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          150
      78: aload         7
      80: invokeinterface #81,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      85: checkcast     #8                  // class java/util/Map$Entry
      88: astore        8
      90: aload         8
      92: invokeinterface #84,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      97: checkcast     #54                 // class java/lang/String
     100: invokestatic  #88                 // Method normalizeHostname:(Ljava/lang/String;)Ljava/lang/String;
     103: astore        9
     105: aload         8
     107: invokeinterface #91,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     112: astore        10
     114: aload_0
     115: getfield      #56                 // Field domainNamePatterns:[Ljava/lang/String;
     118: iload         6
     120: aload         9
     122: aastore
     123: aload_0
     124: getfield      #61                 // Field values:[Ljava/lang/Object;
     127: iload         6
     129: aload         10
     131: aastore
     132: aload         5
     134: aload         9
     136: aload         10
     138: invokeinterface #95,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: iinc          6, 1
     147: goto          68
     150: aload_0
     151: aload         5
     153: invokestatic  #101                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     156: putfield      #103                // Field map:Ljava/util/Map;
     159: return

  public io.netty.util.DomainNameMapping<V> add(java.lang.String, V);
    Code:
       0: new           #126                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #128                // String Immutable DomainNameMapping does not support modification after initial creation
       6: invokespecial #131                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public V map(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        48
       4: aload_1
       5: invokestatic  #88                 // Method normalizeHostname:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_1
       9: aload_0
      10: getfield      #56                 // Field domainNamePatterns:[Ljava/lang/String;
      13: arraylength
      14: istore_2
      15: iconst_0
      16: istore_3
      17: iload_3
      18: iload_2
      19: if_icmpge     48
      22: aload_0
      23: getfield      #56                 // Field domainNamePatterns:[Ljava/lang/String;
      26: iload_3
      27: aaload
      28: aload_1
      29: invokestatic  #138                // Method matches:(Ljava/lang/String;Ljava/lang/String;)Z
      32: ifeq          42
      35: aload_0
      36: getfield      #61                 // Field values:[Ljava/lang/Object;
      39: iload_3
      40: aaload
      41: areturn
      42: iinc          3, 1
      45: goto          17
      48: aload_0
      49: getfield      #140                // Field defaultValue:Ljava/lang/Object;
      52: areturn

  public java.util.Map<java.lang.String, V> asMap();
    Code:
       0: aload_0
       1: getfield      #103                // Field map:Ljava/util/Map;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #140                // Field defaultValue:Ljava/lang/Object;
       4: invokevirtual #148                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: astore_1
       8: aload_0
       9: getfield      #56                 // Field domainNamePatterns:[Ljava/lang/String;
      12: arraylength
      13: istore_2
      14: iload_2
      15: ifne          48
      18: new           #150                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #153                // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #20                 // String ImmutableDomainNameMapping(default:
      27: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #23                 // String , map: {
      36: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #26                 // String })
      41: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: areturn
      48: aload_0
      49: getfield      #56                 // Field domainNamePatterns:[Ljava/lang/String;
      52: iconst_0
      53: aaload
      54: astore_3
      55: aload_0
      56: getfield      #61                 // Field values:[Ljava/lang/Object;
      59: iconst_0
      60: aaload
      61: invokevirtual #148                // Method java/lang/Object.toString:()Ljava/lang/String;
      64: astore        4
      66: aload_3
      67: invokevirtual #160                // Method java/lang/String.length:()I
      70: aload         4
      72: invokevirtual #160                // Method java/lang/String.length:()I
      75: iadd
      76: iconst_3
      77: iadd
      78: istore        5
      80: aload_1
      81: invokevirtual #160                // Method java/lang/String.length:()I
      84: iload_2
      85: iload         5
      87: invokestatic  #164                // Method estimateBufferSize:(III)I
      90: istore        6
      92: new           #150                // class java/lang/StringBuilder
      95: dup
      96: iload         6
      98: invokespecial #165                // Method java/lang/StringBuilder."<init>":(I)V
     101: ldc           #20                 // String ImmutableDomainNameMapping(default:
     103: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_1
     107: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: ldc           #23                 // String , map: {
     112: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: astore        7
     117: aload         7
     119: aload_3
     120: aload         4
     122: invokestatic  #169                // Method appendMapping:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: pop
     126: iconst_1
     127: istore        8
     129: iload         8
     131: iload_2
     132: if_icmpge     158
     135: aload         7
     137: ldc           #171                // String ,
     139: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: pop
     143: aload_0
     144: aload         7
     146: iload         8
     148: invokespecial #174                // Method appendMapping:(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;
     151: pop
     152: iinc          8, 1
     155: goto          129
     158: aload         7
     160: ldc           #26                 // String })
     162: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #158                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: areturn

  private static int estimateBufferSize(int, int, int);
    Code:
       0: getstatic     #183                // Field REPR_CONST_PART_LENGTH:I
       3: iload_0
       4: iadd
       5: iload_2
       6: iload_1
       7: imul
       8: i2d
       9: ldc2_w        #184                // double 1.1d
      12: dmul
      13: d2i
      14: iadd
      15: ireturn

  private java.lang.StringBuilder appendMapping(java.lang.StringBuilder, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #56                 // Field domainNamePatterns:[Ljava/lang/String;
       5: iload_2
       6: aaload
       7: aload_0
       8: getfield      #61                 // Field values:[Ljava/lang/Object;
      11: iload_2
      12: aaload
      13: invokevirtual #148                // Method java/lang/Object.toString:()Ljava/lang/String;
      16: invokestatic  #169                // Method appendMapping:(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: areturn

  private static java.lang.StringBuilder appendMapping(java.lang.StringBuilder, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: bipush        61
       7: invokevirtual #191                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      10: aload_2
      11: invokevirtual #157                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: areturn

  public java.lang.Object map(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #54                 // class java/lang/String
       5: invokevirtual #195                // Method map:(Ljava/lang/String;)Ljava/lang/Object;
       8: areturn

  io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping(java.lang.Object, java.util.Map, io.netty.util.DomainNameMappingBuilder$1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #198                // Method "<init>":(Ljava/lang/Object;Ljava/util/Map;)V
       6: return

  static {};
    Code:
       0: ldc           #20                 // String ImmutableDomainNameMapping(default:
       2: invokevirtual #160                // Method java/lang/String.length:()I
       5: ldc           #23                 // String , map: {
       7: invokevirtual #160                // Method java/lang/String.length:()I
      10: iadd
      11: ldc           #26                 // String })
      13: invokevirtual #160                // Method java/lang/String.length:()I
      16: iadd
      17: putstatic     #183                // Field REPR_CONST_PART_LENGTH:I
      20: return
}
