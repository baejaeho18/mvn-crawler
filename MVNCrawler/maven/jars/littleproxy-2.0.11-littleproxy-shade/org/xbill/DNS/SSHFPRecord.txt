Compiled from "SSHFPRecord.java"
public class org.xbill.DNS.SSHFPRecord extends org.xbill.DNS.Record {
  private int alg;

  private int digestType;

  private byte[] fingerprint;

  org.xbill.DNS.SSHFPRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  public org.xbill.DNS.SSHFPRecord(org.xbill.DNS.Name, int, long, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        44
       4: iload_2
       5: lload_3
       6: invokespecial #3                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #4                  // String alg
      12: iload         5
      14: invokestatic  #5                  // Method checkU8:(Ljava/lang/String;I)I
      17: putfield      #6                  // Field alg:I
      20: aload_0
      21: ldc           #7                  // String digestType
      23: iload         6
      25: invokestatic  #5                  // Method checkU8:(Ljava/lang/String;I)I
      28: putfield      #8                  // Field digestType:I
      31: aload_0
      32: aload         7
      34: putfield      #9                  // Field fingerprint:[B
      37: return

  protected void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method org/xbill/DNS/DNSInput.readU8:()I
       5: putfield      #6                  // Field alg:I
       8: aload_0
       9: aload_1
      10: invokevirtual #10                 // Method org/xbill/DNS/DNSInput.readU8:()I
      13: putfield      #8                  // Field digestType:I
      16: aload_0
      17: aload_1
      18: invokevirtual #11                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
      21: putfield      #9                  // Field fingerprint:[B
      24: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
       5: putfield      #6                  // Field alg:I
       8: aload_0
       9: aload_1
      10: invokevirtual #12                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
      13: putfield      #8                  // Field digestType:I
      16: aload_0
      17: aload_1
      18: iconst_1
      19: invokevirtual #13                 // Method org/xbill/DNS/Tokenizer.getHex:(Z)[B
      22: putfield      #9                  // Field fingerprint:[B
      25: return

  protected java.lang.String rrToString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field alg:I
      13: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #17                 // String
      20: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field digestType:I
      29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: ldc           #17                 // String
      36: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #9                  // Field fingerprint:[B
      45: invokestatic  #19                 // Method org/xbill/DNS/utils/base16.toString:([B)Ljava/lang/String;
      48: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_1
      53: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn

  public int getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #6                  // Field alg:I
       4: ireturn

  public int getDigestType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field digestType:I
       4: ireturn

  public byte[] getFingerPrint();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fingerprint:[B
       4: areturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field alg:I
       5: invokevirtual #21                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field digestType:I
      13: invokevirtual #21                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #9                  // Field fingerprint:[B
      21: invokevirtual #22                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      24: return
}
