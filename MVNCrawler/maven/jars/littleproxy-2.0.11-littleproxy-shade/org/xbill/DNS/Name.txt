Compiled from "Name.java"
public class org.xbill.DNS.Name implements java.lang.Comparable<org.xbill.DNS.Name>, java.io.Serializable {
  private static final org.slf4j.Logger log;

  private static final long serialVersionUID;

  private static final int LABEL_NORMAL;

  private static final int LABEL_COMPRESSION;

  private static final int LABEL_MASK;

  private byte[] name;

  private long offsets;

  private transient int hashcode;

  private int labels;

  private static final byte[] emptyLabel;

  private static final byte[] wildLabel;

  public static final org.xbill.DNS.Name root;

  public static final org.xbill.DNS.Name empty;

  private static final int MAXNAME;

  private static final int MAXLABEL;

  private static final int MAXOFFSETS;

  private static final byte[] lowercase;

  private static final org.xbill.DNS.Name wild;

  private org.xbill.DNS.Name();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private void setoffset(int, int);
    Code:
       0: iload_1
       1: ifeq          10
       4: iload_1
       5: bipush        9
       7: if_icmplt     11
      10: return
      11: bipush        8
      13: iload_1
      14: iconst_1
      15: isub
      16: imul
      17: istore_3
      18: aload_0
      19: dup
      20: getfield      #3                  // Field offsets:J
      23: ldc2_w        #4                  // long 255l
      26: iload_3
      27: lshl
      28: ldc2_w        #6                  // long -1l
      31: lxor
      32: land
      33: putfield      #3                  // Field offsets:J
      36: aload_0
      37: dup
      38: getfield      #3                  // Field offsets:J
      41: iload_2
      42: i2l
      43: iload_3
      44: lshl
      45: lor
      46: putfield      #3                  // Field offsets:J
      49: return

  private int offset(int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: iload_1
       7: iconst_1
       8: if_icmplt     19
      11: iload_1
      12: aload_0
      13: getfield      #8                  // Field labels:I
      16: if_icmplt     29
      19: new           #9                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #10                 // String label out of range
      25: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: iload_1
      30: bipush        9
      32: if_icmpge     54
      35: bipush        8
      37: iload_1
      38: iconst_1
      39: isub
      40: imul
      41: istore_2
      42: aload_0
      43: getfield      #3                  // Field offsets:J
      46: iload_2
      47: lushr
      48: l2i
      49: sipush        255
      52: iand
      53: ireturn
      54: aload_0
      55: getfield      #3                  // Field offsets:J
      58: bipush        56
      60: lushr
      61: l2i
      62: sipush        255
      65: iand
      66: istore_2
      67: bipush        8
      69: istore_3
      70: iload_3
      71: iload_1
      72: if_icmpge     92
      75: iload_2
      76: aload_0
      77: getfield      #12                 // Field name:[B
      80: iload_2
      81: baload
      82: iconst_1
      83: iadd
      84: iadd
      85: istore_2
      86: iinc          3, 1
      89: goto          70
      92: iload_2
      93: ireturn

  private static void copy(org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #12                 // Field name:[B
       5: putfield      #12                 // Field name:[B
       8: aload_1
       9: aload_0
      10: getfield      #3                  // Field offsets:J
      13: putfield      #3                  // Field offsets:J
      16: aload_1
      17: aload_0
      18: getfield      #8                  // Field labels:I
      21: putfield      #8                  // Field labels:I
      24: return

  private void append(byte[], int, int) throws org.xbill.DNS.NameTooLongException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:[B
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #12                 // Field name:[B
      15: arraylength
      16: istore        4
      18: iconst_0
      19: istore        5
      21: iconst_0
      22: istore        6
      24: iload_2
      25: istore        7
      27: iload         6
      29: iload_3
      30: if_icmpge     61
      33: aload_1
      34: iload         7
      36: baload
      37: iconst_1
      38: iadd
      39: istore        8
      41: iload         7
      43: iload         8
      45: iadd
      46: istore        7
      48: iload         5
      50: iload         8
      52: iadd
      53: istore        5
      55: iinc          6, 1
      58: goto          27
      61: iload         4
      63: iload         5
      65: iadd
      66: istore        6
      68: iload         6
      70: sipush        255
      73: if_icmple     84
      76: new           #13                 // class org/xbill/DNS/NameTooLongException
      79: dup
      80: invokespecial #14                 // Method org/xbill/DNS/NameTooLongException."<init>":()V
      83: athrow
      84: aload_0
      85: getfield      #12                 // Field name:[B
      88: ifnull        105
      91: aload_0
      92: getfield      #12                 // Field name:[B
      95: iload         6
      97: invokestatic  #15                 // Method java/util/Arrays.copyOf:([BI)[B
     100: astore        7
     102: goto          111
     105: iload         6
     107: newarray       byte
     109: astore        7
     111: aload_1
     112: iload_2
     113: aload         7
     115: iload         4
     117: iload         5
     119: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     122: aload_0
     123: aload         7
     125: putfield      #12                 // Field name:[B
     128: iconst_0
     129: istore        8
     131: iload         4
     133: istore        9
     135: iload         8
     137: iload_3
     138: if_icmpge     179
     141: iload         8
     143: bipush        9
     145: if_icmpge     179
     148: aload_0
     149: aload_0
     150: getfield      #8                  // Field labels:I
     153: iload         8
     155: iadd
     156: iload         9
     158: invokespecial #17                 // Method setoffset:(II)V
     161: iload         9
     163: aload         7
     165: iload         9
     167: baload
     168: iconst_1
     169: iadd
     170: iadd
     171: istore        9
     173: iinc          8, 1
     176: goto          135
     179: aload_0
     180: dup
     181: getfield      #8                  // Field labels:I
     184: iload_3
     185: iadd
     186: putfield      #8                  // Field labels:I
     189: return

  private void append(char[], int) throws org.xbill.DNS.NameTooLongException;
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #18                 // Method prepareAppend:(I)I
       5: istore_3
       6: iconst_0
       7: istore        4
       9: iload         4
      11: iload_2
      12: if_icmpge     35
      15: aload_0
      16: getfield      #12                 // Field name:[B
      19: iload_3
      20: iload         4
      22: iadd
      23: aload_1
      24: iload         4
      26: caload
      27: i2b
      28: bastore
      29: iinc          4, 1
      32: goto          9
      35: return

  private int prepareAppend(int) throws org.xbill.DNS.NameTooLongException;
    Code:
       0: aload_0
       1: getfield      #12                 // Field name:[B
       4: ifnonnull     11
       7: iconst_0
       8: goto          16
      11: aload_0
      12: getfield      #12                 // Field name:[B
      15: arraylength
      16: istore_2
      17: iload_2
      18: iconst_1
      19: iadd
      20: iload_1
      21: iadd
      22: istore_3
      23: iload_3
      24: sipush        255
      27: if_icmple     38
      30: new           #13                 // class org/xbill/DNS/NameTooLongException
      33: dup
      34: invokespecial #14                 // Method org/xbill/DNS/NameTooLongException."<init>":()V
      37: athrow
      38: aload_0
      39: getfield      #12                 // Field name:[B
      42: ifnull        58
      45: aload_0
      46: getfield      #12                 // Field name:[B
      49: iload_3
      50: invokestatic  #15                 // Method java/util/Arrays.copyOf:([BI)[B
      53: astore        4
      55: goto          63
      58: iload_3
      59: newarray       byte
      61: astore        4
      63: aload         4
      65: iload_2
      66: iload_1
      67: i2b
      68: bastore
      69: aload_0
      70: aload         4
      72: putfield      #12                 // Field name:[B
      75: aload_0
      76: aload_0
      77: getfield      #8                  // Field labels:I
      80: iload_2
      81: invokespecial #17                 // Method setoffset:(II)V
      84: aload_0
      85: dup
      86: getfield      #8                  // Field labels:I
      89: iconst_1
      90: iadd
      91: putfield      #8                  // Field labels:I
      94: iload_2
      95: iconst_1
      96: iadd
      97: ireturn

  private void appendFromString(java.lang.String, char[], int) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_2
       2: iload_3
       3: invokespecial #19                 // Method append:([CI)V
       6: goto          24
       9: astore        4
      11: new           #20                 // class org/xbill/DNS/TextParseException
      14: dup
      15: aload_1
      16: ldc           #21                 // String Name too long
      18: aload         4
      20: invokespecial #22                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V
      23: athrow
      24: return
    Exception table:
       from    to  target type
           0     6     9   Class org/xbill/DNS/NameTooLongException

  private void appendFromString(java.lang.String, byte[], int) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_2
       2: iconst_0
       3: iload_3
       4: invokespecial #23                 // Method append:([BII)V
       7: goto          23
      10: astore        4
      12: new           #20                 // class org/xbill/DNS/TextParseException
      15: dup
      16: aload_1
      17: ldc           #21                 // String Name too long
      19: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0     7    10   Class org/xbill/DNS/NameTooLongException

  public org.xbill.DNS.Name(java.lang.String, org.xbill.DNS.Name) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: astore_3
       6: iconst_m1
       7: istore        4
       9: aload_3
      10: invokevirtual #25                 // Method java/lang/String.hashCode:()I
      13: lookupswitch  { // 3
                     0: 48
                    46: 78
                    64: 63
               default: 90
          }
      48: aload_3
      49: ldc           #26                 // String
      51: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          90
      57: iconst_0
      58: istore        4
      60: goto          90
      63: aload_3
      64: ldc           #28                 // String @
      66: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      69: ifeq          90
      72: iconst_1
      73: istore        4
      75: goto          90
      78: aload_3
      79: ldc           #29                 // String .
      81: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      84: ifeq          90
      87: iconst_2
      88: istore        4
      90: iload         4
      92: tableswitch   { // 0 to 2
                     0: 120
                     1: 130
                     2: 150
               default: 158
          }
     120: new           #20                 // class org/xbill/DNS/TextParseException
     123: dup
     124: ldc           #30                 // String empty name
     126: invokespecial #31                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: aload_2
     131: ifnonnull     144
     134: getstatic     #32                 // Field empty:Lorg/xbill/DNS/Name;
     137: aload_0
     138: invokestatic  #33                 // Method copy:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     141: goto          149
     144: aload_2
     145: aload_0
     146: invokestatic  #33                 // Method copy:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     149: return
     150: getstatic     #34                 // Field root:Lorg/xbill/DNS/Name;
     153: aload_0
     154: invokestatic  #33                 // Method copy:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     157: return
     158: iconst_m1
     159: istore_3
     160: iconst_0
     161: istore        4
     163: bipush        63
     165: newarray       char
     167: astore        5
     169: iconst_0
     170: istore        6
     172: iconst_0
     173: istore        7
     175: iconst_0
     176: istore        8
     178: iconst_0
     179: istore        9
     181: iconst_0
     182: istore        10
     184: iload         10
     186: aload_1
     187: invokevirtual #35                 // Method java/lang/String.length:()I
     190: if_icmpge     461
     193: aload_1
     194: iload         10
     196: invokevirtual #36                 // Method java/lang/String.charAt:(I)C
     199: istore        11
     201: iload         11
     203: sipush        255
     206: if_icmple     220
     209: new           #20                 // class org/xbill/DNS/TextParseException
     212: dup
     213: aload_1
     214: ldc           #37                 // String Illegal character in name
     216: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     219: athrow
     220: iload         6
     222: ifeq          360
     225: iload         11
     227: bipush        48
     229: if_icmplt     301
     232: iload         11
     234: bipush        57
     236: if_icmpgt     301
     239: iload         7
     241: iconst_3
     242: if_icmpge     301
     245: iinc          7, 1
     248: iload         8
     250: bipush        10
     252: imul
     253: istore        8
     255: iload         8
     257: iload         11
     259: bipush        48
     261: isub
     262: iadd
     263: istore        8
     265: iload         8
     267: sipush        255
     270: if_icmple     284
     273: new           #20                 // class org/xbill/DNS/TextParseException
     276: dup
     277: aload_1
     278: ldc           #38                 // String bad escape
     280: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     283: athrow
     284: iload         7
     286: iconst_3
     287: if_icmpge     293
     290: goto          455
     293: iload         8
     295: i2c
     296: istore        11
     298: goto          323
     301: iload         7
     303: ifle          323
     306: iload         7
     308: iconst_3
     309: if_icmpge     323
     312: new           #20                 // class org/xbill/DNS/TextParseException
     315: dup
     316: aload_1
     317: ldc           #38                 // String bad escape
     319: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     322: athrow
     323: iload         4
     325: bipush        63
     327: if_icmplt     341
     330: new           #20                 // class org/xbill/DNS/TextParseException
     333: dup
     334: aload_1
     335: ldc           #39                 // String label too long
     337: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     340: athrow
     341: iload         4
     343: istore_3
     344: aload         5
     346: iload         4
     348: iinc          4, 1
     351: iload         11
     353: castore
     354: iconst_0
     355: istore        6
     357: goto          455
     360: iload         11
     362: bipush        92
     364: if_icmpne     379
     367: iconst_1
     368: istore        6
     370: iconst_0
     371: istore        7
     373: iconst_0
     374: istore        8
     376: goto          455
     379: iload         11
     381: bipush        46
     383: if_icmpne     419
     386: iload_3
     387: iconst_m1
     388: if_icmpne     402
     391: new           #20                 // class org/xbill/DNS/TextParseException
     394: dup
     395: aload_1
     396: ldc           #40                 // String invalid empty label
     398: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     401: athrow
     402: aload_0
     403: aload_1
     404: aload         5
     406: iload         4
     408: invokespecial #41                 // Method appendFromString:(Ljava/lang/String;[CI)V
     411: iconst_m1
     412: istore_3
     413: iconst_0
     414: istore        4
     416: goto          455
     419: iload_3
     420: iconst_m1
     421: if_icmpne     427
     424: iload         10
     426: istore_3
     427: iload         4
     429: bipush        63
     431: if_icmplt     445
     434: new           #20                 // class org/xbill/DNS/TextParseException
     437: dup
     438: aload_1
     439: ldc           #39                 // String label too long
     441: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     444: athrow
     445: aload         5
     447: iload         4
     449: iinc          4, 1
     452: iload         11
     454: castore
     455: iinc          10, 1
     458: goto          184
     461: iload         7
     463: ifle          472
     466: iload         7
     468: iconst_3
     469: if_icmplt     477
     472: iload         6
     474: ifeq          488
     477: new           #20                 // class org/xbill/DNS/TextParseException
     480: dup
     481: aload_1
     482: ldc           #38                 // String bad escape
     484: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     487: athrow
     488: iload_3
     489: iconst_m1
     490: if_icmpne     508
     493: aload_0
     494: aload_1
     495: getstatic     #42                 // Field emptyLabel:[B
     498: iconst_1
     499: invokespecial #43                 // Method appendFromString:(Ljava/lang/String;[BI)V
     502: iconst_1
     503: istore        9
     505: goto          517
     508: aload_0
     509: aload_1
     510: aload         5
     512: iload         4
     514: invokespecial #41                 // Method appendFromString:(Ljava/lang/String;[CI)V
     517: aload_2
     518: ifnull        539
     521: iload         9
     523: ifne          539
     526: aload_0
     527: aload_1
     528: aload_2
     529: getfield      #12                 // Field name:[B
     532: aload_2
     533: getfield      #8                  // Field labels:I
     536: invokespecial #43                 // Method appendFromString:(Ljava/lang/String;[BI)V
     539: iload         9
     541: ifne          565
     544: aload_0
     545: invokevirtual #44                 // Method length:()S
     548: sipush        255
     551: if_icmpne     565
     554: new           #20                 // class org/xbill/DNS/TextParseException
     557: dup
     558: aload_1
     559: ldc           #21                 // String Name too long
     561: invokespecial #24                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     564: athrow
     565: return

  public org.xbill.DNS.Name(java.lang.String) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #45                 // Method "<init>":(Ljava/lang/String;Lorg/xbill/DNS/Name;)V
       6: return

  public static org.xbill.DNS.Name fromString(java.lang.String, org.xbill.DNS.Name) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: ldc           #28                 // String @
       3: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          21
       9: aload_1
      10: ifnull        17
      13: aload_1
      14: goto          20
      17: getstatic     #32                 // Field empty:Lorg/xbill/DNS/Name;
      20: areturn
      21: aload_0
      22: ldc           #29                 // String .
      24: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          34
      30: getstatic     #34                 // Field root:Lorg/xbill/DNS/Name;
      33: areturn
      34: new           #2                  // class org/xbill/DNS/Name
      37: dup
      38: aload_0
      39: aload_1
      40: invokespecial #45                 // Method "<init>":(Ljava/lang/String;Lorg/xbill/DNS/Name;)V
      43: areturn

  public static org.xbill.DNS.Name fromString(java.lang.String) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #46                 // Method fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       5: areturn

  public static org.xbill.DNS.Name fromConstantString(java.lang.String);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #46                 // Method fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       5: areturn
       6: astore_1
       7: new           #9                  // class java/lang/IllegalArgumentException
      10: dup
      11: new           #47                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #49                 // String Invalid name \'
      20: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #51                 // String \'
      29: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      38: athrow
    Exception table:
       from    to  target type
           0     5     6   Class org/xbill/DNS/TextParseException

  public org.xbill.DNS.Name(org.xbill.DNS.DNSInput) throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iconst_0
       5: istore        4
       7: bipush        64
       9: newarray       byte
      11: astore        5
      13: iconst_0
      14: istore        6
      16: iload         4
      18: ifne          202
      21: aload_1
      22: invokevirtual #53                 // Method org/xbill/DNS/DNSInput.readU8:()I
      25: istore_2
      26: iload_2
      27: sipush        192
      30: iand
      31: lookupswitch  { // 2
                     0: 56
                   192: 100
               default: 192
          }
      56: iload_2
      57: ifne          75
      60: aload_0
      61: getstatic     #42                 // Field emptyLabel:[B
      64: iconst_0
      65: iconst_1
      66: invokespecial #23                 // Method append:([BII)V
      69: iconst_1
      70: istore        4
      72: goto          16
      75: aload         5
      77: iconst_0
      78: iload_2
      79: i2b
      80: bastore
      81: aload_1
      82: aload         5
      84: iconst_1
      85: iload_2
      86: invokevirtual #54                 // Method org/xbill/DNS/DNSInput.readByteArray:([BII)V
      89: aload_0
      90: aload         5
      92: iconst_0
      93: iconst_1
      94: invokespecial #23                 // Method append:([BII)V
      97: goto          16
     100: aload_1
     101: invokevirtual #53                 // Method org/xbill/DNS/DNSInput.readU8:()I
     104: istore_3
     105: iload_3
     106: iload_2
     107: sipush        -193
     110: iand
     111: bipush        8
     113: ishl
     114: iadd
     115: istore_3
     116: getstatic     #55                 // Field log:Lorg/slf4j/Logger;
     119: ldc           #56                 // String currently {}, pointer to {}
     121: aload_1
     122: invokevirtual #57                 // Method org/xbill/DNS/DNSInput.current:()I
     125: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     128: iload_3
     129: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     132: invokeinterface #59,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     137: iload_3
     138: aload_1
     139: invokevirtual #57                 // Method org/xbill/DNS/DNSInput.current:()I
     142: iconst_2
     143: isub
     144: if_icmplt     157
     147: new           #60                 // class org/xbill/DNS/WireParseException
     150: dup
     151: ldc           #61                 // String bad compression
     153: invokespecial #62                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
     156: athrow
     157: iload         6
     159: ifne          169
     162: aload_1
     163: invokevirtual #63                 // Method org/xbill/DNS/DNSInput.save:()V
     166: iconst_1
     167: istore        6
     169: aload_1
     170: iload_3
     171: invokevirtual #64                 // Method org/xbill/DNS/DNSInput.jump:(I)V
     174: getstatic     #55                 // Field log:Lorg/slf4j/Logger;
     177: ldc           #65                 // String current name \'{}\', seeking to {}
     179: aload_0
     180: iload_3
     181: invokestatic  #58                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     184: invokeinterface #59,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     189: goto          16
     192: new           #60                 // class org/xbill/DNS/WireParseException
     195: dup
     196: ldc           #66                 // String bad label type
     198: invokespecial #62                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
     201: athrow
     202: iload         6
     204: ifeq          211
     207: aload_1
     208: invokevirtual #67                 // Method org/xbill/DNS/DNSInput.restore:()V
     211: return

  public org.xbill.DNS.Name(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #68                 // class org/xbill/DNS/DNSInput
       4: dup
       5: aload_1
       6: invokespecial #69                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       9: invokespecial #70                 // Method "<init>":(Lorg/xbill/DNS/DNSInput;)V
      12: return

  public org.xbill.DNS.Name(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: aload_1
       6: getfield      #8                  // Field labels:I
       9: if_icmple     22
      12: new           #9                  // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #71                 // String attempted to remove too many labels
      18: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iload_2
      23: aload_1
      24: getfield      #8                  // Field labels:I
      27: if_icmpne     38
      30: getstatic     #32                 // Field empty:Lorg/xbill/DNS/Name;
      33: aload_0
      34: invokestatic  #33                 // Method copy:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      37: return
      38: aload_0
      39: aload_1
      40: getfield      #8                  // Field labels:I
      43: iload_2
      44: isub
      45: putfield      #8                  // Field labels:I
      48: aload_0
      49: aload_1
      50: getfield      #12                 // Field name:[B
      53: aload_1
      54: iload_2
      55: invokespecial #72                 // Method offset:(I)I
      58: aload_1
      59: getfield      #12                 // Field name:[B
      62: arraylength
      63: invokestatic  #73                 // Method java/util/Arrays.copyOfRange:([BII)[B
      66: putfield      #12                 // Field name:[B
      69: aload_1
      70: iload_2
      71: invokespecial #72                 // Method offset:(I)I
      74: istore_3
      75: iconst_1
      76: istore        4
      78: iload         4
      80: bipush        9
      82: if_icmpge     116
      85: iload         4
      87: aload_0
      88: getfield      #8                  // Field labels:I
      91: if_icmpge     116
      94: aload_0
      95: iload         4
      97: aload_1
      98: iload         4
     100: iload_2
     101: iadd
     102: invokespecial #72                 // Method offset:(I)I
     105: iload_3
     106: isub
     107: invokespecial #17                 // Method setoffset:(II)V
     110: iinc          4, 1
     113: goto          78
     116: return

  public static org.xbill.DNS.Name concatenate(org.xbill.DNS.Name, org.xbill.DNS.Name) throws org.xbill.DNS.NameTooLongException;
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isAbsolute:()Z
       4: ifeq          9
       7: aload_0
       8: areturn
       9: new           #2                  // class org/xbill/DNS/Name
      12: dup
      13: invokespecial #75                 // Method "<init>":()V
      16: astore_2
      17: aload_2
      18: aload_0
      19: getfield      #12                 // Field name:[B
      22: iconst_0
      23: aload_0
      24: getfield      #8                  // Field labels:I
      27: invokespecial #23                 // Method append:([BII)V
      30: aload_2
      31: aload_1
      32: getfield      #12                 // Field name:[B
      35: iconst_0
      36: aload_1
      37: getfield      #8                  // Field labels:I
      40: invokespecial #23                 // Method append:([BII)V
      43: aload_2
      44: areturn

  public org.xbill.DNS.Name relativize(org.xbill.DNS.Name);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_0
       5: aload_1
       6: invokevirtual #76                 // Method subdomain:(Lorg/xbill/DNS/Name;)Z
       9: ifne          14
      12: aload_0
      13: areturn
      14: new           #2                  // class org/xbill/DNS/Name
      17: dup
      18: invokespecial #75                 // Method "<init>":()V
      21: astore_2
      22: aload_0
      23: invokevirtual #44                 // Method length:()S
      26: aload_1
      27: invokevirtual #44                 // Method length:()S
      30: isub
      31: istore_3
      32: aload_2
      33: aload_0
      34: getfield      #8                  // Field labels:I
      37: aload_1
      38: getfield      #8                  // Field labels:I
      41: isub
      42: putfield      #8                  // Field labels:I
      45: aload_2
      46: aload_0
      47: getfield      #3                  // Field offsets:J
      50: putfield      #3                  // Field offsets:J
      53: aload_2
      54: iload_3
      55: newarray       byte
      57: putfield      #12                 // Field name:[B
      60: aload_0
      61: getfield      #12                 // Field name:[B
      64: iconst_0
      65: aload_2
      66: getfield      #12                 // Field name:[B
      69: iconst_0
      70: iload_3
      71: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      74: aload_2
      75: areturn

  public org.xbill.DNS.Name wild(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     15
       5: new           #9                  // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #77                 // String must replace 1 or more labels
      11: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: new           #2                  // class org/xbill/DNS/Name
      18: dup
      19: invokespecial #75                 // Method "<init>":()V
      22: astore_2
      23: getstatic     #78                 // Field wild:Lorg/xbill/DNS/Name;
      26: aload_2
      27: invokestatic  #33                 // Method copy:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      30: aload_2
      31: aload_0
      32: getfield      #12                 // Field name:[B
      35: aload_0
      36: iload_1
      37: invokespecial #72                 // Method offset:(I)I
      40: aload_0
      41: getfield      #8                  // Field labels:I
      44: iload_1
      45: isub
      46: invokespecial #23                 // Method append:([BII)V
      49: aload_2
      50: areturn
      51: astore_2
      52: new           #79                 // class java/lang/IllegalStateException
      55: dup
      56: ldc           #80                 // String Name.wild: concatenate failed
      58: invokespecial #81                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
    Exception table:
       from    to  target type
          15    50    51   Class org/xbill/DNS/NameTooLongException

  public org.xbill.DNS.Name canonicalize();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #12                 // Field name:[B
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     51
      19: aload_2
      20: iload         4
      22: baload
      23: istore        5
      25: getstatic     #82                 // Field lowercase:[B
      28: iload         5
      30: sipush        255
      33: iand
      34: baload
      35: iload         5
      37: if_icmpeq     45
      40: iconst_0
      41: istore_1
      42: goto          51
      45: iinc          4, 1
      48: goto          13
      51: iload_1
      52: ifeq          57
      55: aload_0
      56: areturn
      57: new           #2                  // class org/xbill/DNS/Name
      60: dup
      61: invokespecial #75                 // Method "<init>":()V
      64: astore_2
      65: aload_2
      66: aload_0
      67: getfield      #3                  // Field offsets:J
      70: putfield      #3                  // Field offsets:J
      73: aload_2
      74: aload_0
      75: getfield      #8                  // Field labels:I
      78: putfield      #8                  // Field labels:I
      81: aload_2
      82: aload_0
      83: invokevirtual #44                 // Method length:()S
      86: newarray       byte
      88: putfield      #12                 // Field name:[B
      91: iconst_0
      92: istore_3
      93: iload_3
      94: aload_2
      95: getfield      #12                 // Field name:[B
      98: arraylength
      99: if_icmpge     128
     102: aload_2
     103: getfield      #12                 // Field name:[B
     106: iload_3
     107: getstatic     #82                 // Field lowercase:[B
     110: aload_0
     111: getfield      #12                 // Field name:[B
     114: iload_3
     115: baload
     116: sipush        255
     119: iand
     120: baload
     121: bastore
     122: iinc          3, 1
     125: goto          93
     128: aload_2
     129: areturn

  public org.xbill.DNS.Name fromDNAME(org.xbill.DNS.DNAMERecord) throws org.xbill.DNS.NameTooLongException;
    Code:
       0: aload_1
       1: invokevirtual #83                 // Method org/xbill/DNS/DNAMERecord.getName:()Lorg/xbill/DNS/Name;
       4: astore_2
       5: aload_1
       6: invokevirtual #84                 // Method org/xbill/DNS/DNAMERecord.getTarget:()Lorg/xbill/DNS/Name;
       9: astore_3
      10: aload_0
      11: aload_2
      12: invokevirtual #76                 // Method subdomain:(Lorg/xbill/DNS/Name;)Z
      15: ifne          20
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #8                  // Field labels:I
      24: aload_2
      25: getfield      #8                  // Field labels:I
      28: isub
      29: istore        4
      31: aload_0
      32: invokevirtual #44                 // Method length:()S
      35: aload_2
      36: invokevirtual #44                 // Method length:()S
      39: isub
      40: istore        5
      42: aload_3
      43: getfield      #8                  // Field labels:I
      46: istore        6
      48: aload_3
      49: invokevirtual #44                 // Method length:()S
      52: istore        7
      54: iload         5
      56: iload         7
      58: iadd
      59: sipush        255
      62: if_icmple     73
      65: new           #13                 // class org/xbill/DNS/NameTooLongException
      68: dup
      69: invokespecial #14                 // Method org/xbill/DNS/NameTooLongException."<init>":()V
      72: athrow
      73: new           #2                  // class org/xbill/DNS/Name
      76: dup
      77: invokespecial #75                 // Method "<init>":()V
      80: astore        8
      82: aload         8
      84: iload         4
      86: iload         6
      88: iadd
      89: putfield      #8                  // Field labels:I
      92: aload         8
      94: aload_0
      95: getfield      #12                 // Field name:[B
      98: iload         5
     100: iload         7
     102: iadd
     103: invokestatic  #15                 // Method java/util/Arrays.copyOf:([BI)[B
     106: putfield      #12                 // Field name:[B
     109: aload_3
     110: getfield      #12                 // Field name:[B
     113: iconst_0
     114: aload         8
     116: getfield      #12                 // Field name:[B
     119: iload         5
     121: iload         7
     123: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     126: iconst_0
     127: istore        9
     129: iconst_0
     130: istore        10
     132: iload         9
     134: bipush        9
     136: if_icmpge     179
     139: iload         9
     141: iload         4
     143: iload         6
     145: iadd
     146: if_icmpge     179
     149: aload         8
     151: iload         9
     153: iload         10
     155: invokespecial #17                 // Method setoffset:(II)V
     158: iload         10
     160: aload         8
     162: getfield      #12                 // Field name:[B
     165: iload         10
     167: baload
     168: iconst_1
     169: iadd
     170: iadd
     171: istore        10
     173: iinc          9, 1
     176: goto          132
     179: aload         8
     181: areturn

  public boolean isWild();
    Code:
       0: aload_0
       1: getfield      #8                  // Field labels:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #12                 // Field name:[B
      13: iconst_0
      14: baload
      15: iconst_1
      16: if_icmpne     34
      19: aload_0
      20: getfield      #12                 // Field name:[B
      23: iconst_1
      24: baload
      25: bipush        42
      27: if_icmpne     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public boolean isAbsolute();
    Code:
       0: aload_0
       1: getfield      #8                  // Field labels:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #12                 // Field name:[B
      13: aload_0
      14: aload_0
      15: getfield      #8                  // Field labels:I
      18: iconst_1
      19: isub
      20: invokespecial #72                 // Method offset:(I)I
      23: baload
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public short length();
    Code:
       0: aload_0
       1: getfield      #8                  // Field labels:I
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: getfield      #12                 // Field name:[B
      13: arraylength
      14: i2s
      15: ireturn

  public int labels();
    Code:
       0: aload_0
       1: getfield      #8                  // Field labels:I
       4: ireturn

  public boolean subdomain(org.xbill.DNS.Name);
    Code:
       0: aload_1
       1: getfield      #8                  // Field labels:I
       4: istore_2
       5: iload_2
       6: aload_0
       7: getfield      #8                  // Field labels:I
      10: if_icmple     15
      13: iconst_0
      14: ireturn
      15: iload_2
      16: aload_0
      17: getfield      #8                  // Field labels:I
      20: if_icmpne     29
      23: aload_0
      24: aload_1
      25: invokevirtual #85                 // Method equals:(Ljava/lang/Object;)Z
      28: ireturn
      29: aload_1
      30: aload_0
      31: getfield      #12                 // Field name:[B
      34: aload_0
      35: aload_0
      36: getfield      #8                  // Field labels:I
      39: iload_2
      40: isub
      41: invokespecial #72                 // Method offset:(I)I
      44: invokespecial #86                 // Method equals:([BI)Z
      47: ireturn

  private java.lang.String byteString(byte[], int);
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_3
       8: aload_1
       9: iload_2
      10: iinc          2, 1
      13: baload
      14: istore        4
      16: iload_2
      17: istore        5
      19: iload         5
      21: iload_2
      22: iload         4
      24: iadd
      25: if_icmpge     188
      28: aload_1
      29: iload         5
      31: baload
      32: sipush        255
      35: iand
      36: istore        6
      38: iload         6
      40: bipush        32
      42: if_icmple     52
      45: iload         6
      47: bipush        127
      49: if_icmplt     100
      52: aload_3
      53: bipush        92
      55: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      58: pop
      59: iload         6
      61: bipush        10
      63: if_icmpge     76
      66: aload_3
      67: ldc           #88                 // String 00
      69: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: goto          90
      76: iload         6
      78: bipush        100
      80: if_icmpge     90
      83: aload_3
      84: bipush        48
      86: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      89: pop
      90: aload_3
      91: iload         6
      93: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: pop
      97: goto          182
     100: iload         6
     102: bipush        34
     104: if_icmpeq     156
     107: iload         6
     109: bipush        40
     111: if_icmpeq     156
     114: iload         6
     116: bipush        41
     118: if_icmpeq     156
     121: iload         6
     123: bipush        46
     125: if_icmpeq     156
     128: iload         6
     130: bipush        59
     132: if_icmpeq     156
     135: iload         6
     137: bipush        92
     139: if_icmpeq     156
     142: iload         6
     144: bipush        64
     146: if_icmpeq     156
     149: iload         6
     151: bipush        36
     153: if_icmpne     174
     156: aload_3
     157: bipush        92
     159: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     162: pop
     163: aload_3
     164: iload         6
     166: i2c
     167: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     170: pop
     171: goto          182
     174: aload_3
     175: iload         6
     177: i2c
     178: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     181: pop
     182: iinc          5, 1
     185: goto          19
     188: aload_3
     189: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: areturn

  public java.lang.String toString(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field labels:I
       4: ifne          10
       7: ldc           #28                 // String @
       9: areturn
      10: aload_0
      11: getfield      #8                  // Field labels:I
      14: iconst_1
      15: if_icmpne     30
      18: aload_0
      19: getfield      #12                 // Field name:[B
      22: iconst_0
      23: baload
      24: ifne          30
      27: ldc           #29                 // String .
      29: areturn
      30: new           #47                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      37: astore_2
      38: iconst_0
      39: istore_3
      40: iconst_0
      41: istore        4
      43: iload_3
      44: aload_0
      45: getfield      #8                  // Field labels:I
      48: if_icmpge     120
      51: aload_0
      52: getfield      #12                 // Field name:[B
      55: iload         4
      57: baload
      58: istore        5
      60: iload         5
      62: ifne          79
      65: iload_1
      66: ifne          120
      69: aload_2
      70: bipush        46
      72: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      75: pop
      76: goto          120
      79: iload_3
      80: ifle          90
      83: aload_2
      84: bipush        46
      86: invokevirtual #87                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      89: pop
      90: aload_2
      91: aload_0
      92: aload_0
      93: getfield      #12                 // Field name:[B
      96: iload         4
      98: invokespecial #90                 // Method byteString:([BI)Ljava/lang/String;
     101: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: pop
     105: iload         4
     107: iconst_1
     108: iload         5
     110: iadd
     111: iadd
     112: istore        4
     114: iinc          3, 1
     117: goto          43
     120: aload_2
     121: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #91                 // Method toString:(Z)Ljava/lang/String;
       5: areturn

  public byte[] getLabel(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #72                 // Method offset:(I)I
       5: istore_2
       6: aload_0
       7: getfield      #12                 // Field name:[B
      10: iload_2
      11: baload
      12: iconst_1
      13: iadd
      14: i2b
      15: istore_3
      16: aload_0
      17: getfield      #12                 // Field name:[B
      20: iload_2
      21: iload_2
      22: iload_3
      23: iadd
      24: invokestatic  #73                 // Method java/util/Arrays.copyOfRange:([BII)[B
      27: areturn

  public java.lang.String getLabelString(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #72                 // Method offset:(I)I
       5: istore_2
       6: aload_0
       7: aload_0
       8: getfield      #12                 // Field name:[B
      11: iload_2
      12: invokespecial #90                 // Method byteString:([BI)Ljava/lang/String;
      15: areturn

  public void toWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method isAbsolute:()Z
       4: ifne          17
       7: new           #9                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #92                 // String toWire() called on non-absolute name
      13: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_0
      18: istore_3
      19: iload_3
      20: aload_0
      21: getfield      #8                  // Field labels:I
      24: iconst_1
      25: isub
      26: if_icmpge     130
      29: iload_3
      30: ifne          39
      33: aload_0
      34: astore        4
      36: goto          50
      39: new           #2                  // class org/xbill/DNS/Name
      42: dup
      43: aload_0
      44: iload_3
      45: invokespecial #93                 // Method "<init>":(Lorg/xbill/DNS/Name;I)V
      48: astore        4
      50: iconst_m1
      51: istore        5
      53: aload_2
      54: ifnull        65
      57: aload_2
      58: aload         4
      60: invokevirtual #94                 // Method org/xbill/DNS/Compression.get:(Lorg/xbill/DNS/Name;)I
      63: istore        5
      65: iload         5
      67: iflt          84
      70: iload         5
      72: ldc           #95                 // int 49152
      74: ior
      75: istore        5
      77: aload_1
      78: iload         5
      80: invokevirtual #96                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      83: return
      84: aload_2
      85: ifnull        98
      88: aload_2
      89: aload_1
      90: invokevirtual #97                 // Method org/xbill/DNS/DNSOutput.current:()I
      93: aload         4
      95: invokevirtual #98                 // Method org/xbill/DNS/Compression.add:(ILorg/xbill/DNS/Name;)V
      98: aload_0
      99: iload_3
     100: invokespecial #72                 // Method offset:(I)I
     103: istore        6
     105: aload_1
     106: aload_0
     107: getfield      #12                 // Field name:[B
     110: iload         6
     112: aload_0
     113: getfield      #12                 // Field name:[B
     116: iload         6
     118: baload
     119: iconst_1
     120: iadd
     121: invokevirtual #99                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([BII)V
     124: iinc          3, 1
     127: goto          19
     130: aload_1
     131: iconst_0
     132: invokevirtual #100                // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     135: return

  public byte[] toWire();
    Code:
       0: new           #101                // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #102                // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: aconst_null
      11: invokevirtual #103                // Method toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;)V
      14: aload_1
      15: invokevirtual #104                // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      18: areturn

  public void toWireCanonical(org.xbill.DNS.DNSOutput);
    Code:
       0: aload_0
       1: invokevirtual #105                // Method toWireCanonical:()[B
       4: astore_2
       5: aload_1
       6: aload_2
       7: invokevirtual #106                // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      10: return

  public byte[] toWireCanonical();
    Code:
       0: aload_0
       1: getfield      #8                  // Field labels:I
       4: ifne          11
       7: iconst_0
       8: newarray       byte
      10: areturn
      11: aload_0
      12: getfield      #12                 // Field name:[B
      15: arraylength
      16: newarray       byte
      18: astore_1
      19: iconst_0
      20: istore_2
      21: iconst_0
      22: istore_3
      23: iconst_0
      24: istore        4
      26: iload_2
      27: aload_0
      28: getfield      #8                  // Field labels:I
      31: if_icmpge     104
      34: aload_0
      35: getfield      #12                 // Field name:[B
      38: iload_3
      39: baload
      40: istore        5
      42: aload_1
      43: iload         4
      45: iinc          4, 1
      48: aload_0
      49: getfield      #12                 // Field name:[B
      52: iload_3
      53: iinc          3, 1
      56: baload
      57: bastore
      58: iconst_0
      59: istore        6
      61: iload         6
      63: iload         5
      65: if_icmpge     98
      68: aload_1
      69: iload         4
      71: iinc          4, 1
      74: getstatic     #82                 // Field lowercase:[B
      77: aload_0
      78: getfield      #12                 // Field name:[B
      81: iload_3
      82: iinc          3, 1
      85: baload
      86: sipush        255
      89: iand
      90: baload
      91: bastore
      92: iinc          6, 1
      95: goto          61
      98: iinc          2, 1
     101: goto          26
     104: aload_1
     105: areturn

  public void toWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: iload_3
       1: ifeq          12
       4: aload_0
       5: aload_1
       6: invokevirtual #107                // Method toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
       9: goto          18
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #103                // Method toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;)V
      18: return

  private boolean equals(byte[], int);
    Code:
       0: iconst_0
       1: istore_3
       2: iconst_0
       3: istore        4
       5: iload_3
       6: aload_0
       7: getfield      #8                  // Field labels:I
      10: if_icmpge     102
      13: aload_0
      14: getfield      #12                 // Field name:[B
      17: iload         4
      19: baload
      20: aload_1
      21: iload_2
      22: baload
      23: if_icmpeq     28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: getfield      #12                 // Field name:[B
      32: iload         4
      34: iinc          4, 1
      37: baload
      38: istore        5
      40: iinc          2, 1
      43: iconst_0
      44: istore        6
      46: iload         6
      48: iload         5
      50: if_icmpge     96
      53: getstatic     #82                 // Field lowercase:[B
      56: aload_0
      57: getfield      #12                 // Field name:[B
      60: iload         4
      62: iinc          4, 1
      65: baload
      66: sipush        255
      69: iand
      70: baload
      71: getstatic     #82                 // Field lowercase:[B
      74: aload_1
      75: iload_2
      76: iinc          2, 1
      79: baload
      80: sipush        255
      83: iand
      84: baload
      85: if_icmpeq     90
      88: iconst_0
      89: ireturn
      90: iinc          6, 1
      93: goto          46
      96: iinc          3, 1
      99: goto          5
     102: iconst_1
     103: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class org/xbill/DNS/Name
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class org/xbill/DNS/Name
      20: astore_2
      21: aload_2
      22: getfield      #8                  // Field labels:I
      25: aload_0
      26: getfield      #8                  // Field labels:I
      29: if_icmpeq     34
      32: iconst_0
      33: ireturn
      34: aload_2
      35: invokevirtual #108                // Method hashCode:()I
      38: aload_0
      39: invokevirtual #108                // Method hashCode:()I
      42: if_icmpeq     47
      45: iconst_0
      46: ireturn
      47: aload_0
      48: aload_2
      49: getfield      #12                 // Field name:[B
      52: iconst_0
      53: invokespecial #86                 // Method equals:([BI)Z
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #109                // Field hashcode:I
       4: ifeq          12
       7: aload_0
       8: getfield      #109                // Field hashcode:I
      11: ireturn
      12: iconst_0
      13: istore_1
      14: aload_0
      15: iconst_0
      16: invokespecial #72                 // Method offset:(I)I
      19: istore_2
      20: iload_2
      21: aload_0
      22: getfield      #12                 // Field name:[B
      25: arraylength
      26: if_icmpge     60
      29: iload_1
      30: iload_1
      31: iconst_3
      32: ishl
      33: getstatic     #82                 // Field lowercase:[B
      36: aload_0
      37: getfield      #12                 // Field name:[B
      40: iload_2
      41: baload
      42: sipush        255
      45: iand
      46: baload
      47: sipush        255
      50: iand
      51: iadd
      52: iadd
      53: istore_1
      54: iinc          2, 1
      57: goto          20
      60: aload_0
      61: iload_1
      62: putfield      #109                // Field hashcode:I
      65: aload_0
      66: getfield      #109                // Field hashcode:I
      69: ireturn

  public int compareTo(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_1
       8: getfield      #8                  // Field labels:I
      11: istore_2
      12: aload_0
      13: getfield      #8                  // Field labels:I
      16: iload_2
      17: invokestatic  #110                // Method java/lang/Math.min:(II)I
      20: istore_3
      21: iconst_1
      22: istore        4
      24: iload         4
      26: iload_3
      27: if_icmpgt     172
      30: aload_0
      31: aload_0
      32: getfield      #8                  // Field labels:I
      35: iload         4
      37: isub
      38: invokespecial #72                 // Method offset:(I)I
      41: istore        5
      43: aload_1
      44: iload_2
      45: iload         4
      47: isub
      48: invokespecial #72                 // Method offset:(I)I
      51: istore        6
      53: aload_0
      54: getfield      #12                 // Field name:[B
      57: iload         5
      59: baload
      60: istore        7
      62: aload_1
      63: getfield      #12                 // Field name:[B
      66: iload         6
      68: baload
      69: istore        8
      71: iconst_0
      72: istore        9
      74: iload         9
      76: iload         7
      78: if_icmpge     153
      81: iload         9
      83: iload         8
      85: if_icmpge     153
      88: getstatic     #82                 // Field lowercase:[B
      91: aload_0
      92: getfield      #12                 // Field name:[B
      95: iload         9
      97: iload         5
      99: iadd
     100: iconst_1
     101: iadd
     102: baload
     103: sipush        255
     106: iand
     107: baload
     108: sipush        255
     111: iand
     112: getstatic     #82                 // Field lowercase:[B
     115: aload_1
     116: getfield      #12                 // Field name:[B
     119: iload         9
     121: iload         6
     123: iadd
     124: iconst_1
     125: iadd
     126: baload
     127: sipush        255
     130: iand
     131: baload
     132: sipush        255
     135: iand
     136: isub
     137: istore        10
     139: iload         10
     141: ifeq          147
     144: iload         10
     146: ireturn
     147: iinc          9, 1
     150: goto          74
     153: iload         7
     155: iload         8
     157: if_icmpeq     166
     160: iload         7
     162: iload         8
     164: isub
     165: ireturn
     166: iinc          4, 1
     169: goto          24
     172: aload_0
     173: getfield      #8                  // Field labels:I
     176: iload_2
     177: isub
     178: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/xbill/DNS/Name
       5: invokevirtual #111                // Method compareTo:(Lorg/xbill/DNS/Name;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #2                  // class org/xbill/DNS/Name
       2: invokestatic  #112                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #55                 // Field log:Lorg/slf4j/Logger;
       8: iconst_1
       9: newarray       byte
      11: dup
      12: iconst_0
      13: iconst_0
      14: bastore
      15: putstatic     #42                 // Field emptyLabel:[B
      18: iconst_2
      19: newarray       byte
      21: dup
      22: iconst_0
      23: iconst_1
      24: bastore
      25: dup
      26: iconst_1
      27: bipush        42
      29: bastore
      30: putstatic     #113                // Field wildLabel:[B
      33: sipush        256
      36: newarray       byte
      38: putstatic     #82                 // Field lowercase:[B
      41: iconst_0
      42: istore_0
      43: iload_0
      44: getstatic     #82                 // Field lowercase:[B
      47: arraylength
      48: if_icmpge     92
      51: iload_0
      52: bipush        65
      54: if_icmplt     63
      57: iload_0
      58: bipush        90
      60: if_icmple     73
      63: getstatic     #82                 // Field lowercase:[B
      66: iload_0
      67: iload_0
      68: i2b
      69: bastore
      70: goto          86
      73: getstatic     #82                 // Field lowercase:[B
      76: iload_0
      77: iload_0
      78: bipush        65
      80: isub
      81: bipush        97
      83: iadd
      84: i2b
      85: bastore
      86: iinc          0, 1
      89: goto          43
      92: new           #2                  // class org/xbill/DNS/Name
      95: dup
      96: invokespecial #75                 // Method "<init>":()V
      99: putstatic     #34                 // Field root:Lorg/xbill/DNS/Name;
     102: getstatic     #34                 // Field root:Lorg/xbill/DNS/Name;
     105: getstatic     #42                 // Field emptyLabel:[B
     108: putfield      #12                 // Field name:[B
     111: getstatic     #34                 // Field root:Lorg/xbill/DNS/Name;
     114: iconst_1
     115: putfield      #8                  // Field labels:I
     118: new           #2                  // class org/xbill/DNS/Name
     121: dup
     122: invokespecial #75                 // Method "<init>":()V
     125: putstatic     #32                 // Field empty:Lorg/xbill/DNS/Name;
     128: getstatic     #32                 // Field empty:Lorg/xbill/DNS/Name;
     131: iconst_0
     132: newarray       byte
     134: putfield      #12                 // Field name:[B
     137: new           #2                  // class org/xbill/DNS/Name
     140: dup
     141: invokespecial #75                 // Method "<init>":()V
     144: putstatic     #78                 // Field wild:Lorg/xbill/DNS/Name;
     147: getstatic     #78                 // Field wild:Lorg/xbill/DNS/Name;
     150: getstatic     #113                // Field wildLabel:[B
     153: putfield      #12                 // Field name:[B
     156: getstatic     #78                 // Field wild:Lorg/xbill/DNS/Name;
     159: iconst_1
     160: putfield      #8                  // Field labels:I
     163: return
}
