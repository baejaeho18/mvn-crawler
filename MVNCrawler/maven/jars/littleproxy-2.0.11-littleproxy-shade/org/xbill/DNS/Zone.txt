Compiled from "Zone.java"
public class org.xbill.DNS.Zone implements java.io.Serializable {
  private static final long serialVersionUID;

  public static final int PRIMARY;

  public static final int SECONDARY;

  private java.util.Map<org.xbill.DNS.Name, java.lang.Object> data;

  private org.xbill.DNS.Name origin;

  private java.lang.Object originNode;

  private org.xbill.DNS.RRset NS;

  private org.xbill.DNS.SOARecord SOA;

  private boolean hasWild;

  private void validate() throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_0
       2: aload_0
       3: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       6: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       9: putfield      #4                  // Field originNode:Ljava/lang/Object;
      12: aload_0
      13: getfield      #4                  // Field originNode:Ljava/lang/Object;
      16: ifnonnull     49
      19: new           #7                  // class java/io/IOException
      22: dup
      23: new           #8                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      30: aload_0
      31: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      34: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc           #11                 // String : no data specified
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: aload_0
      51: getfield      #4                  // Field originNode:Ljava/lang/Object;
      54: bipush        6
      56: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
      59: astore_1
      60: aload_1
      61: ifnull        72
      64: aload_1
      65: invokevirtual #16                 // Method org/xbill/DNS/RRset.size:()I
      68: iconst_1
      69: if_icmpeq     102
      72: new           #7                  // class java/io/IOException
      75: dup
      76: new           #8                  // class java/lang/StringBuilder
      79: dup
      80: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      83: aload_0
      84: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      87: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      90: ldc           #17                 // String : exactly 1 SOA must be specified
      92: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload_0
     103: aload_1
     104: invokevirtual #18                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/List;
     107: iconst_0
     108: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     113: checkcast     #20                 // class org/xbill/DNS/SOARecord
     116: putfield      #21                 // Field SOA:Lorg/xbill/DNS/SOARecord;
     119: aload_0
     120: aload_0
     121: aload_0
     122: getfield      #4                  // Field originNode:Ljava/lang/Object;
     125: iconst_2
     126: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     129: putfield      #22                 // Field NS:Lorg/xbill/DNS/RRset;
     132: aload_0
     133: getfield      #22                 // Field NS:Lorg/xbill/DNS/RRset;
     136: ifnonnull     169
     139: new           #7                  // class java/io/IOException
     142: dup
     143: new           #8                  // class java/lang/StringBuilder
     146: dup
     147: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     150: aload_0
     151: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
     154: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     157: ldc           #23                 // String : no NS set specified
     159: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     168: athrow
     169: return

  private void maybeAddRecord(org.xbill.DNS.Record) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/xbill/DNS/Record.getType:()I
       4: istore_2
       5: aload_1
       6: invokevirtual #25                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       9: astore_3
      10: iload_2
      11: bipush        6
      13: if_icmpne     66
      16: aload_3
      17: aload_0
      18: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      21: invokevirtual #26                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      24: ifne          66
      27: new           #7                  // class java/io/IOException
      30: dup
      31: new           #8                  // class java/lang/StringBuilder
      34: dup
      35: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #27                 // String SOA owner
      40: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_3
      44: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #28                 // String  does not match zone origin
      49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      56: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #14                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_3
      67: aload_0
      68: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      71: invokevirtual #29                 // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
      74: ifeq          82
      77: aload_0
      78: aload_1
      79: invokevirtual #30                 // Method addRecord:(Lorg/xbill/DNS/Record;)V
      82: return

  public org.xbill.DNS.Zone(org.xbill.DNS.Name, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #32                 // class java/util/TreeMap
       8: dup
       9: invokespecial #33                 // Method java/util/TreeMap."<init>":()V
      12: putfield      #5                  // Field data:Ljava/util/Map;
      15: aload_1
      16: ifnonnull     29
      19: new           #34                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #35                 // String no zone name specified
      25: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: new           #37                 // class org/xbill/DNS/Master
      32: dup
      33: aload_2
      34: aload_1
      35: invokespecial #38                 // Method org/xbill/DNS/Master."<init>":(Ljava/lang/String;Lorg/xbill/DNS/Name;)V
      38: astore_3
      39: aconst_null
      40: astore        4
      42: aload_0
      43: aload_1
      44: putfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      47: aload_3
      48: invokevirtual #39                 // Method org/xbill/DNS/Master.nextRecord:()Lorg/xbill/DNS/Record;
      51: dup
      52: astore        5
      54: ifnull        66
      57: aload_0
      58: aload         5
      60: invokespecial #40                 // Method maybeAddRecord:(Lorg/xbill/DNS/Record;)V
      63: goto          47
      66: aload_3
      67: ifnull        147
      70: aload         4
      72: ifnull        94
      75: aload_3
      76: invokevirtual #41                 // Method org/xbill/DNS/Master.close:()V
      79: goto          147
      82: astore        5
      84: aload         4
      86: aload         5
      88: invokevirtual #43                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      91: goto          147
      94: aload_3
      95: invokevirtual #41                 // Method org/xbill/DNS/Master.close:()V
      98: goto          147
     101: astore        5
     103: aload         5
     105: astore        4
     107: aload         5
     109: athrow
     110: astore        6
     112: aload_3
     113: ifnull        144
     116: aload         4
     118: ifnull        140
     121: aload_3
     122: invokevirtual #41                 // Method org/xbill/DNS/Master.close:()V
     125: goto          144
     128: astore        7
     130: aload         4
     132: aload         7
     134: invokevirtual #43                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     137: goto          144
     140: aload_3
     141: invokevirtual #41                 // Method org/xbill/DNS/Master.close:()V
     144: aload         6
     146: athrow
     147: aload_0
     148: invokespecial #44                 // Method validate:()V
     151: return
    Exception table:
       from    to  target type
          75    79    82   Class java/lang/Throwable
          42    66   101   Class java/lang/Throwable
          42    66   110   any
         121   125   128   Class java/lang/Throwable
         101   112   110   any

  public org.xbill.DNS.Zone(org.xbill.DNS.Name, org.xbill.DNS.Record[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #32                 // class java/util/TreeMap
       8: dup
       9: invokespecial #33                 // Method java/util/TreeMap."<init>":()V
      12: putfield      #5                  // Field data:Ljava/util/Map;
      15: aload_1
      16: ifnonnull     29
      19: new           #34                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #35                 // String no zone name specified
      25: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: aload_1
      31: putfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      34: aload_2
      35: astore_3
      36: aload_3
      37: arraylength
      38: istore        4
      40: iconst_0
      41: istore        5
      43: iload         5
      45: iload         4
      47: if_icmpge     68
      50: aload_3
      51: iload         5
      53: aaload
      54: astore        6
      56: aload_0
      57: aload         6
      59: invokespecial #40                 // Method maybeAddRecord:(Lorg/xbill/DNS/Record;)V
      62: iinc          5, 1
      65: goto          43
      68: aload_0
      69: invokespecial #44                 // Method validate:()V
      72: return

  private void fromXFR(org.xbill.DNS.ZoneTransferIn) throws java.io.IOException, org.xbill.DNS.ZoneTransferException;
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: new           #32                 // class java/util/TreeMap
       8: dup
       9: invokespecial #33                 // Method java/util/TreeMap."<init>":()V
      12: putfield      #5                  // Field data:Ljava/util/Map;
      15: aload_2
      16: monitorexit
      17: goto          25
      20: astore_3
      21: aload_2
      22: monitorexit
      23: aload_3
      24: athrow
      25: aload_0
      26: aload_1
      27: invokevirtual #45                 // Method org/xbill/DNS/ZoneTransferIn.getName:()Lorg/xbill/DNS/Name;
      30: putfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      33: aload_1
      34: invokevirtual #46                 // Method org/xbill/DNS/ZoneTransferIn.run:()V
      37: aload_1
      38: invokevirtual #47                 // Method org/xbill/DNS/ZoneTransferIn.isAXFR:()Z
      41: ifne          54
      44: new           #34                 // class java/lang/IllegalArgumentException
      47: dup
      48: ldc           #48                 // String zones can only be created from AXFRs
      50: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      53: athrow
      54: aload_1
      55: invokevirtual #49                 // Method org/xbill/DNS/ZoneTransferIn.getAXFR:()Ljava/util/List;
      58: invokeinterface #50,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: astore_2
      64: aload_2
      65: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      70: ifeq          91
      73: aload_2
      74: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #53                 // class org/xbill/DNS/Record
      82: astore_3
      83: aload_0
      84: aload_3
      85: invokespecial #40                 // Method maybeAddRecord:(Lorg/xbill/DNS/Record;)V
      88: goto          64
      91: aload_0
      92: invokespecial #44                 // Method validate:()V
      95: return
    Exception table:
       from    to  target type
           4    17    20   any
          20    23    20   any

  public org.xbill.DNS.Zone(org.xbill.DNS.ZoneTransferIn) throws java.io.IOException, org.xbill.DNS.ZoneTransferException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #54                 // Method fromXFR:(Lorg/xbill/DNS/ZoneTransferIn;)V
       9: return

  public org.xbill.DNS.Zone(org.xbill.DNS.Name, int, java.lang.String) throws java.io.IOException, org.xbill.DNS.ZoneTransferException;
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: aload_3
       6: aconst_null
       7: invokestatic  #55                 // Method org/xbill/DNS/ZoneTransferIn.newAXFR:(Lorg/xbill/DNS/Name;Ljava/lang/String;Lorg/xbill/DNS/TSIG;)Lorg/xbill/DNS/ZoneTransferIn;
      10: astore        4
      12: aload         4
      14: iload_2
      15: invokevirtual #56                 // Method org/xbill/DNS/ZoneTransferIn.setDClass:(I)V
      18: aload_0
      19: aload         4
      21: invokespecial #54                 // Method fromXFR:(Lorg/xbill/DNS/ZoneTransferIn;)V
      24: return

  public org.xbill.DNS.Name getOrigin();
    Code:
       0: aload_0
       1: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       4: areturn

  public org.xbill.DNS.RRset getNS();
    Code:
       0: aload_0
       1: getfield      #22                 // Field NS:Lorg/xbill/DNS/RRset;
       4: areturn

  public org.xbill.DNS.SOARecord getSOA();
    Code:
       0: aload_0
       1: getfield      #21                 // Field SOA:Lorg/xbill/DNS/SOARecord;
       4: areturn

  public int getDClass();
    Code:
       0: iconst_1
       1: ireturn

  private synchronized java.lang.Object exactName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  private synchronized org.xbill.DNS.RRset[] allRRsets(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #59                 // class java/util/List
       4: ifeq          26
       7: aload_1
       8: checkcast     #59                 // class java/util/List
      11: astore_2
      12: aload_2
      13: iconst_0
      14: anewarray     #60                 // class org/xbill/DNS/RRset
      17: invokeinterface #61,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      22: checkcast     #62                 // class "[Lorg/xbill/DNS/RRset;"
      25: areturn
      26: aload_1
      27: checkcast     #60                 // class org/xbill/DNS/RRset
      30: astore_2
      31: iconst_1
      32: anewarray     #60                 // class org/xbill/DNS/RRset
      35: dup
      36: iconst_0
      37: aload_2
      38: aastore
      39: areturn

  private synchronized org.xbill.DNS.RRset oneRRset(java.lang.Object, int);
    Code:
       0: iload_2
       1: sipush        255
       4: if_icmpne     17
       7: new           #34                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #63                 // String oneRRset(ANY)
      13: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_1
      18: instanceof    #59                 // class java/util/List
      21: ifeq          77
      24: aload_1
      25: checkcast     #59                 // class java/util/List
      28: astore_3
      29: aload_3
      30: invokeinterface #50,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore        4
      37: aload         4
      39: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          74
      47: aload         4
      49: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #60                 // class org/xbill/DNS/RRset
      57: astore        5
      59: aload         5
      61: invokevirtual #64                 // Method org/xbill/DNS/RRset.getType:()I
      64: iload_2
      65: if_icmpne     71
      68: aload         5
      70: areturn
      71: goto          37
      74: goto          92
      77: aload_1
      78: checkcast     #60                 // class org/xbill/DNS/RRset
      81: astore_3
      82: aload_3
      83: invokevirtual #64                 // Method org/xbill/DNS/RRset.getType:()I
      86: iload_2
      87: if_icmpne     92
      90: aload_3
      91: areturn
      92: aconst_null
      93: areturn

  private synchronized org.xbill.DNS.RRset findRRset(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_3
      14: iload_2
      15: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
      18: areturn

  private synchronized void addRRset(org.xbill.DNS.Name, org.xbill.DNS.RRset);
    Code:
       0: aload_0
       1: getfield      #65                 // Field hasWild:Z
       4: ifne          19
       7: aload_1
       8: invokevirtual #66                 // Method org/xbill/DNS/Name.isWild:()Z
      11: ifeq          19
      14: aload_0
      15: iconst_1
      16: putfield      #65                 // Field hasWild:Z
      19: aload_0
      20: getfield      #5                  // Field data:Ljava/util/Map;
      23: aload_1
      24: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: astore_3
      30: aload_3
      31: ifnonnull     47
      34: aload_0
      35: getfield      #5                  // Field data:Ljava/util/Map;
      38: aload_1
      39: aload_2
      40: invokeinterface #67,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: return
      47: aload_2
      48: invokevirtual #64                 // Method org/xbill/DNS/RRset.getType:()I
      51: istore        4
      53: aload_3
      54: instanceof    #59                 // class java/util/List
      57: ifeq          135
      60: aload_3
      61: checkcast     #59                 // class java/util/List
      64: astore        5
      66: iconst_0
      67: istore        6
      69: iload         6
      71: aload         5
      73: invokeinterface #68,  1           // InterfaceMethod java/util/List.size:()I
      78: if_icmpge     123
      81: aload         5
      83: iload         6
      85: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      90: checkcast     #60                 // class org/xbill/DNS/RRset
      93: astore        7
      95: aload         7
      97: invokevirtual #64                 // Method org/xbill/DNS/RRset.getType:()I
     100: iload         4
     102: if_icmpne     117
     105: aload         5
     107: iload         6
     109: aload_2
     110: invokeinterface #69,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
     115: pop
     116: return
     117: iinc          6, 1
     120: goto          69
     123: aload         5
     125: aload_2
     126: invokeinterface #70,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     131: pop
     132: goto          203
     135: aload_3
     136: checkcast     #60                 // class org/xbill/DNS/RRset
     139: astore        5
     141: aload         5
     143: invokevirtual #64                 // Method org/xbill/DNS/RRset.getType:()I
     146: iload         4
     148: if_icmpne     166
     151: aload_0
     152: getfield      #5                  // Field data:Ljava/util/Map;
     155: aload_1
     156: aload_2
     157: invokeinterface #67,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     162: pop
     163: goto          203
     166: new           #71                 // class java/util/LinkedList
     169: dup
     170: invokespecial #72                 // Method java/util/LinkedList."<init>":()V
     173: astore        6
     175: aload         6
     177: aload         5
     179: invokevirtual #73                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     182: pop
     183: aload         6
     185: aload_2
     186: invokevirtual #73                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     189: pop
     190: aload_0
     191: getfield      #5                  // Field data:Ljava/util/Map;
     194: aload_1
     195: aload         6
     197: invokeinterface #67,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     202: pop
     203: return

  private synchronized void removeRRset(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore_3
      11: aload_3
      12: ifnonnull     16
      15: return
      16: aload_3
      17: instanceof    #59                 // class java/util/List
      20: ifeq          108
      23: aload_3
      24: checkcast     #59                 // class java/util/List
      27: astore        4
      29: iconst_0
      30: istore        5
      32: iload         5
      34: aload         4
      36: invokeinterface #68,  1           // InterfaceMethod java/util/List.size:()I
      41: if_icmpge     105
      44: aload         4
      46: iload         5
      48: invokeinterface #19,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      53: checkcast     #60                 // class org/xbill/DNS/RRset
      56: astore        6
      58: aload         6
      60: invokevirtual #64                 // Method org/xbill/DNS/RRset.getType:()I
      63: iload_2
      64: if_icmpne     99
      67: aload         4
      69: iload         5
      71: invokeinterface #74,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      76: pop
      77: aload         4
      79: invokeinterface #68,  1           // InterfaceMethod java/util/List.size:()I
      84: ifne          98
      87: aload_0
      88: getfield      #5                  // Field data:Ljava/util/Map;
      91: aload_1
      92: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: return
      99: iinc          5, 1
     102: goto          32
     105: goto          135
     108: aload_3
     109: checkcast     #60                 // class org/xbill/DNS/RRset
     112: astore        4
     114: aload         4
     116: invokevirtual #64                 // Method org/xbill/DNS/RRset.getType:()I
     119: iload_2
     120: if_icmpeq     124
     123: return
     124: aload_0
     125: getfield      #5                  // Field data:Ljava/util/Map;
     128: aload_1
     129: invokeinterface #75,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: return

  private synchronized org.xbill.DNS.SetResponse lookup(org.xbill.DNS.Name, int);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       5: invokevirtual #29                 // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
       8: ifne          16
      11: iconst_1
      12: invokestatic  #77                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
      15: areturn
      16: aload_1
      17: invokevirtual #78                 // Method org/xbill/DNS/Name.labels:()I
      20: istore_3
      21: aload_0
      22: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      25: invokevirtual #78                 // Method org/xbill/DNS/Name.labels:()I
      28: istore        4
      30: iload         4
      32: istore        5
      34: iload         5
      36: iload_3
      37: if_icmpgt     322
      40: iload         5
      42: iload         4
      44: if_icmpne     51
      47: iconst_1
      48: goto          52
      51: iconst_0
      52: istore        6
      54: iload         5
      56: iload_3
      57: if_icmpne     64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: istore        7
      67: iload         6
      69: ifeq          81
      72: aload_0
      73: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      76: astore        8
      78: goto          106
      81: iload         7
      83: ifeq          92
      86: aload_1
      87: astore        8
      89: goto          106
      92: new           #79                 // class org/xbill/DNS/Name
      95: dup
      96: aload_1
      97: iload_3
      98: iload         5
     100: isub
     101: invokespecial #80                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/Name;I)V
     104: astore        8
     106: aload_0
     107: aload         8
     109: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
     112: astore        9
     114: aload         9
     116: ifnonnull     122
     119: goto          316
     122: iload         6
     124: ifne          152
     127: aload_0
     128: aload         9
     130: iconst_2
     131: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     134: astore        10
     136: aload         10
     138: ifnull        152
     141: new           #76                 // class org/xbill/DNS/SetResponse
     144: dup
     145: iconst_3
     146: aload         10
     148: invokespecial #81                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     151: areturn
     152: iload         7
     154: ifeq          221
     157: iload_2
     158: sipush        255
     161: if_icmpne     221
     164: new           #76                 // class org/xbill/DNS/SetResponse
     167: dup
     168: bipush        6
     170: invokespecial #82                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     173: astore        10
     175: aload_0
     176: aload         9
     178: invokespecial #3                  // Method allRRsets:(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;
     181: astore        11
     183: aload         11
     185: arraylength
     186: istore        12
     188: iconst_0
     189: istore        13
     191: iload         13
     193: iload         12
     195: if_icmpge     218
     198: aload         11
     200: iload         13
     202: aaload
     203: astore        14
     205: aload         10
     207: aload         14
     209: invokevirtual #83                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     212: iinc          13, 1
     215: goto          191
     218: aload         10
     220: areturn
     221: iload         7
     223: ifeq          280
     226: aload_0
     227: aload         9
     229: iload_2
     230: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     233: astore        10
     235: aload         10
     237: ifnull        252
     240: new           #76                 // class org/xbill/DNS/SetResponse
     243: dup
     244: bipush        6
     246: aload         10
     248: invokespecial #81                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     251: areturn
     252: aload_0
     253: aload         9
     255: iconst_5
     256: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     259: astore        10
     261: aload         10
     263: ifnull        277
     266: new           #76                 // class org/xbill/DNS/SetResponse
     269: dup
     270: iconst_4
     271: aload         10
     273: invokespecial #81                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     276: areturn
     277: goto          306
     280: aload_0
     281: aload         9
     283: bipush        39
     285: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     288: astore        10
     290: aload         10
     292: ifnull        306
     295: new           #76                 // class org/xbill/DNS/SetResponse
     298: dup
     299: iconst_5
     300: aload         10
     302: invokespecial #81                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     305: areturn
     306: iload         7
     308: ifeq          316
     311: iconst_2
     312: invokestatic  #77                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     315: areturn
     316: iinc          5, 1
     319: goto          34
     322: aload_0
     323: getfield      #65                 // Field hasWild:Z
     326: ifeq          473
     329: iconst_0
     330: istore        5
     332: iload         5
     334: iload_3
     335: iload         4
     337: isub
     338: if_icmpge     473
     341: aload_1
     342: iload         5
     344: iconst_1
     345: iadd
     346: invokevirtual #84                 // Method org/xbill/DNS/Name.wild:(I)Lorg/xbill/DNS/Name;
     349: astore        6
     351: aload_0
     352: aload         6
     354: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
     357: astore        7
     359: aload         7
     361: ifnonnull     367
     364: goto          467
     367: iload_2
     368: sipush        255
     371: if_icmpne     436
     374: new           #76                 // class org/xbill/DNS/SetResponse
     377: dup
     378: bipush        6
     380: invokespecial #82                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     383: astore        8
     385: aload_0
     386: aload         7
     388: invokespecial #3                  // Method allRRsets:(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;
     391: astore        9
     393: aload         9
     395: arraylength
     396: istore        10
     398: iconst_0
     399: istore        11
     401: iload         11
     403: iload         10
     405: if_icmpge     433
     408: aload         9
     410: iload         11
     412: aaload
     413: astore        12
     415: aload         8
     417: aload_0
     418: aload         12
     420: aload_1
     421: invokespecial #85                 // Method expandSet:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/RRset;
     424: invokevirtual #83                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     427: iinc          11, 1
     430: goto          401
     433: aload         8
     435: areturn
     436: aload_0
     437: aload         7
     439: iload_2
     440: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
     443: astore        8
     445: aload         8
     447: ifnull        467
     450: new           #76                 // class org/xbill/DNS/SetResponse
     453: dup
     454: bipush        6
     456: aload_0
     457: aload         8
     459: aload_1
     460: invokespecial #85                 // Method expandSet:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/RRset;
     463: invokespecial #81                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     466: areturn
     467: iinc          5, 1
     470: goto          332
     473: iconst_1
     474: invokestatic  #77                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     477: areturn

  private org.xbill.DNS.RRset expandSet(org.xbill.DNS.RRset, org.xbill.DNS.Name);
    Code:
       0: new           #60                 // class org/xbill/DNS/RRset
       3: dup
       4: invokespecial #86                 // Method org/xbill/DNS/RRset."<init>":()V
       7: astore_3
       8: aload_1
       9: invokevirtual #18                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/List;
      12: invokeinterface #50,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          54
      29: aload         4
      31: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #53                 // class org/xbill/DNS/Record
      39: astore        5
      41: aload_3
      42: aload         5
      44: aload_2
      45: invokevirtual #87                 // Method org/xbill/DNS/Record.withName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;
      48: invokevirtual #88                 // Method org/xbill/DNS/RRset.addRR:(Lorg/xbill/DNS/Record;)V
      51: goto          19
      54: aload_1
      55: invokevirtual #89                 // Method org/xbill/DNS/RRset.sigs:()Ljava/util/List;
      58: invokeinterface #50,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: astore        4
      65: aload         4
      67: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      72: ifeq          100
      75: aload         4
      77: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #90                 // class org/xbill/DNS/RRSIGRecord
      85: astore        5
      87: aload_3
      88: aload         5
      90: aload_2
      91: invokevirtual #91                 // Method org/xbill/DNS/RRSIGRecord.withName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;
      94: invokevirtual #88                 // Method org/xbill/DNS/RRset.addRR:(Lorg/xbill/DNS/Record;)V
      97: goto          65
     100: aload_3
     101: areturn

  public org.xbill.DNS.SetResponse findRecords(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #92                 // Method lookup:(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/SetResponse;
       6: areturn

  public org.xbill.DNS.RRset findExactMatch(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #6                  // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_3
      14: iload_2
      15: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
      18: areturn

  public void addRRset(org.xbill.DNS.RRset);
    Code:
       0: aload_1
       1: invokevirtual #93                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
       4: astore_2
       5: aload_0
       6: aload_2
       7: aload_1
       8: invokespecial #94                 // Method addRRset:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/RRset;)V
      11: return

  public <T extends org.xbill.DNS.Record> void addRecord(T);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       4: astore_2
       5: aload_1
       6: invokevirtual #95                 // Method org/xbill/DNS/Record.getRRsetType:()I
       9: istore_3
      10: aload_0
      11: dup
      12: astore        4
      14: monitorenter
      15: aload_0
      16: aload_2
      17: iload_3
      18: invokespecial #96                 // Method findRRset:(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/RRset;
      21: astore        5
      23: aload         5
      25: ifnonnull     48
      28: new           #60                 // class org/xbill/DNS/RRset
      31: dup
      32: aload_1
      33: invokespecial #97                 // Method org/xbill/DNS/RRset."<init>":(Lorg/xbill/DNS/Record;)V
      36: astore        5
      38: aload_0
      39: aload_2
      40: aload         5
      42: invokespecial #94                 // Method addRRset:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/RRset;)V
      45: goto          54
      48: aload         5
      50: aload_1
      51: invokevirtual #88                 // Method org/xbill/DNS/RRset.addRR:(Lorg/xbill/DNS/Record;)V
      54: aload         4
      56: monitorexit
      57: goto          68
      60: astore        6
      62: aload         4
      64: monitorexit
      65: aload         6
      67: athrow
      68: return
    Exception table:
       from    to  target type
          15    57    60   any
          60    65    60   any

  public void removeRecord(org.xbill.DNS.Record);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       4: astore_2
       5: aload_1
       6: invokevirtual #95                 // Method org/xbill/DNS/Record.getRRsetType:()I
       9: istore_3
      10: aload_0
      11: dup
      12: astore        4
      14: monitorenter
      15: aload_0
      16: aload_2
      17: iload_3
      18: invokespecial #96                 // Method findRRset:(Lorg/xbill/DNS/Name;I)Lorg/xbill/DNS/RRset;
      21: astore        5
      23: aload         5
      25: ifnonnull     32
      28: aload         4
      30: monitorexit
      31: return
      32: aload         5
      34: invokevirtual #16                 // Method org/xbill/DNS/RRset.size:()I
      37: iconst_1
      38: if_icmpne     62
      41: aload         5
      43: invokevirtual #98                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
      46: aload_1
      47: invokevirtual #99                 // Method org/xbill/DNS/Record.equals:(Ljava/lang/Object;)Z
      50: ifeq          62
      53: aload_0
      54: aload_2
      55: iload_3
      56: invokespecial #100                // Method removeRRset:(Lorg/xbill/DNS/Name;I)V
      59: goto          68
      62: aload         5
      64: aload_1
      65: invokevirtual #101                // Method org/xbill/DNS/RRset.deleteRR:(Lorg/xbill/DNS/Record;)V
      68: aload         4
      70: monitorexit
      71: goto          82
      74: astore        6
      76: aload         4
      78: monitorexit
      79: aload         6
      81: athrow
      82: return
    Exception table:
       from    to  target type
          15    31    74   any
          32    71    74   any
          74    79    74   any

  public java.util.Iterator<org.xbill.DNS.RRset> iterator();
    Code:
       0: new           #102                // class org/xbill/DNS/Zone$ZoneIterator
       3: dup
       4: aload_0
       5: iconst_0
       6: invokespecial #103                // Method org/xbill/DNS/Zone$ZoneIterator."<init>":(Lorg/xbill/DNS/Zone;Z)V
       9: areturn

  public java.util.Iterator<org.xbill.DNS.RRset> AXFR();
    Code:
       0: new           #102                // class org/xbill/DNS/Zone$ZoneIterator
       3: dup
       4: aload_0
       5: iconst_1
       6: invokespecial #103                // Method org/xbill/DNS/Zone$ZoneIterator."<init>":(Lorg/xbill/DNS/Zone;Z)V
       9: areturn

  private void nodeToString(java.lang.StringBuffer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method allRRsets:(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;
       5: astore_3
       6: aload_3
       7: astore        4
       9: aload         4
      11: arraylength
      12: istore        5
      14: iconst_0
      15: istore        6
      17: iload         6
      19: iload         5
      21: if_icmpge     69
      24: aload         4
      26: iload         6
      28: aaload
      29: astore        7
      31: aload         7
      33: invokevirtual #18                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/List;
      36: aload_1
      37: invokedynamic #104,  0            // InvokeDynamic #0:accept:(Ljava/lang/StringBuffer;)Ljava/util/function/Consumer;
      42: invokeinterface #105,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      47: aload         7
      49: invokevirtual #89                 // Method org/xbill/DNS/RRset.sigs:()Ljava/util/List;
      52: aload_1
      53: invokedynamic #106,  0            // InvokeDynamic #1:accept:(Ljava/lang/StringBuffer;)Ljava/util/function/Consumer;
      58: invokeinterface #105,  2          // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      63: iinc          6, 1
      66: goto          17
      69: return

  public synchronized java.lang.String toMasterFile();
    Code:
       0: new           #107                // class java/lang/StringBuffer
       3: dup
       4: invokespecial #108                // Method java/lang/StringBuffer."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: aload_0
      11: getfield      #4                  // Field originNode:Ljava/lang/Object;
      14: invokespecial #109                // Method nodeToString:(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #5                  // Field data:Ljava/util/Map;
      21: invokeinterface #110,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      26: invokeinterface #111,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      31: astore_2
      32: aload_2
      33: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          81
      41: aload_2
      42: invokeinterface #52,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #112                // class java/util/Map$Entry
      50: astore_3
      51: aload_0
      52: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
      55: aload_3
      56: invokeinterface #113,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      61: invokevirtual #26                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      64: ifne          78
      67: aload_0
      68: aload_1
      69: aload_3
      70: invokeinterface #114,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokespecial #109                // Method nodeToString:(Ljava/lang/StringBuffer;Ljava/lang/Object;)V
      78: goto          32
      81: aload_1
      82: invokevirtual #115                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      85: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #116                // Method toMasterFile:()Ljava/lang/String;
       4: areturn

  private static void lambda$nodeToString$1(java.lang.StringBuffer, org.xbill.DNS.RRSIGRecord);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #117                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
       5: bipush        10
       7: invokevirtual #118                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      10: pop
      11: return

  private static void lambda$nodeToString$0(java.lang.StringBuffer, org.xbill.DNS.Record);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #117                // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
       5: bipush        10
       7: invokevirtual #118                // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      10: pop
      11: return

  static java.util.Map access$000(org.xbill.DNS.Zone);
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:Ljava/util/Map;
       4: areturn

  static java.lang.Object access$100(org.xbill.DNS.Zone);
    Code:
       0: aload_0
       1: getfield      #4                  // Field originNode:Ljava/lang/Object;
       4: areturn

  static org.xbill.DNS.RRset[] access$200(org.xbill.DNS.Zone, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method allRRsets:(Ljava/lang/Object;)[Lorg/xbill/DNS/RRset;
       5: areturn

  static org.xbill.DNS.RRset access$300(org.xbill.DNS.Zone, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #2                  // Method oneRRset:(Ljava/lang/Object;I)Lorg/xbill/DNS/RRset;
       6: areturn

  static org.xbill.DNS.Name access$400(org.xbill.DNS.Zone);
    Code:
       0: aload_0
       1: getfield      #1                  // Field origin:Lorg/xbill/DNS/Name;
       4: areturn
}
