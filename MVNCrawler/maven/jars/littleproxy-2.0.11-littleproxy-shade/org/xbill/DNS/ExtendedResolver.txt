Compiled from "ExtendedResolver.java"
public class org.xbill.DNS.ExtendedResolver implements org.xbill.DNS.Resolver {
  private static final org.slf4j.Logger log;

  public static final java.time.Duration DEFAULT_TIMEOUT;

  public static final java.time.Duration DEFAULT_RESOLVER_TIMEOUT;

  private final java.util.List<org.xbill.DNS.ExtendedResolver$ResolverEntry> resolvers;

  private final java.util.concurrent.atomic.AtomicInteger lbStart;

  private boolean loadBalance;

  private int retries;

  private java.time.Duration timeout;

  public org.xbill.DNS.ExtendedResolver();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #6                  // Field resolvers:Ljava/util/List;
      15: aload_0
      16: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #3                  // Field lbStart:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: iconst_3
      28: putfield      #2                  // Field retries:I
      31: aload_0
      32: getstatic     #12                 // Field DEFAULT_TIMEOUT:Ljava/time/Duration;
      35: putfield      #5                  // Field timeout:Ljava/time/Duration;
      38: invokestatic  #13                 // Method org/xbill/DNS/ResolverConfig.getCurrentConfig:()Lorg/xbill/DNS/ResolverConfig;
      41: invokevirtual #14                 // Method org/xbill/DNS/ResolverConfig.servers:()Ljava/util/List;
      44: astore_1
      45: aload_0
      46: getfield      #6                  // Field resolvers:Ljava/util/List;
      49: aload_1
      50: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      55: invokedynamic #16,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      60: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      65: invokestatic  #18                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      68: invokeinterface #19,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      73: checkcast     #20                 // class java/util/Collection
      76: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      81: pop
      82: return

  public org.xbill.DNS.ExtendedResolver(java.lang.String[]) throws java.net.UnknownHostException;
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #6                  // Field resolvers:Ljava/util/List;
      15: aload_0
      16: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #3                  // Field lbStart:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: iconst_3
      28: putfield      #2                  // Field retries:I
      31: aload_0
      32: getstatic     #12                 // Field DEFAULT_TIMEOUT:Ljava/time/Duration;
      35: putfield      #5                  // Field timeout:Ljava/time/Duration;
      38: aload_1
      39: astore_2
      40: aload_2
      41: arraylength
      42: istore_3
      43: iconst_0
      44: istore        4
      46: iload         4
      48: iload_3
      49: if_icmpge     104
      52: aload_2
      53: iload         4
      55: aaload
      56: astore        5
      58: new           #22                 // class org/xbill/DNS/SimpleResolver
      61: dup
      62: aload         5
      64: invokespecial #23                 // Method org/xbill/DNS/SimpleResolver."<init>":(Ljava/lang/String;)V
      67: astore        6
      69: aload         6
      71: getstatic     #24                 // Field DEFAULT_RESOLVER_TIMEOUT:Ljava/time/Duration;
      74: invokeinterface #25,  2           // InterfaceMethod org/xbill/DNS/Resolver.setTimeout:(Ljava/time/Duration;)V
      79: aload_0
      80: getfield      #6                  // Field resolvers:Ljava/util/List;
      83: new           #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      86: dup
      87: aload         6
      89: invokespecial #27                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry."<init>":(Lorg/xbill/DNS/Resolver;)V
      92: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      97: pop
      98: iinc          4, 1
     101: goto          46
     104: return

  public org.xbill.DNS.ExtendedResolver(org.xbill.DNS.Resolver[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #29                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #30                 // Method "<init>":(Ljava/lang/Iterable;)V
       8: return

  public org.xbill.DNS.ExtendedResolver(java.lang.Iterable<org.xbill.DNS.Resolver>);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #9                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #6                  // Field resolvers:Ljava/util/List;
      15: aload_0
      16: new           #10                 // class java/util/concurrent/atomic/AtomicInteger
      19: dup
      20: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      23: putfield      #3                  // Field lbStart:Ljava/util/concurrent/atomic/AtomicInteger;
      26: aload_0
      27: iconst_3
      28: putfield      #2                  // Field retries:I
      31: aload_0
      32: getstatic     #12                 // Field DEFAULT_TIMEOUT:Ljava/time/Duration;
      35: putfield      #5                  // Field timeout:Ljava/time/Duration;
      38: aload_1
      39: invokeinterface #31,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      44: astore_2
      45: aload_2
      46: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          85
      54: aload_2
      55: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      60: checkcast     #34                 // class org/xbill/DNS/Resolver
      63: astore_3
      64: aload_0
      65: getfield      #6                  // Field resolvers:Ljava/util/List;
      68: new           #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      71: dup
      72: aload_3
      73: invokespecial #27                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry."<init>":(Lorg/xbill/DNS/Resolver;)V
      76: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      81: pop
      82: goto          45
      85: return

  public void setPort(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      28: astore_3
      29: aload_3
      30: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
      33: iload_1
      34: invokeinterface #37,  2           // InterfaceMethod org/xbill/DNS/Resolver.setPort:(I)V
      39: goto          10
      42: return

  public void setTCP(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      28: astore_3
      29: aload_3
      30: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
      33: iload_1
      34: invokeinterface #38,  2           // InterfaceMethod org/xbill/DNS/Resolver.setTCP:(Z)V
      39: goto          10
      42: return

  public void setIgnoreTruncation(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      28: astore_3
      29: aload_3
      30: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
      33: iload_1
      34: invokeinterface #39,  2           // InterfaceMethod org/xbill/DNS/Resolver.setIgnoreTruncation:(Z)V
      39: goto          10
      42: return

  public void setEDNS(int, int, int, java.util.List<org.xbill.DNS.EDNSOption>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          51
      21: aload         5
      23: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      31: astore        6
      33: aload         6
      35: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
      38: iload_1
      39: iload_2
      40: iload_3
      41: aload         4
      43: invokeinterface #40,  5           // InterfaceMethod org/xbill/DNS/Resolver.setEDNS:(IIILjava/util/List;)V
      48: goto          11
      51: return

  public void setTSIGKey(org.xbill.DNS.TSIG);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          42
      19: aload_2
      20: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      28: astore_3
      29: aload_3
      30: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
      33: aload_1
      34: invokeinterface #41,  2           // InterfaceMethod org/xbill/DNS/Resolver.setTSIGKey:(Lorg/xbill/DNS/TSIG;)V
      39: goto          10
      42: return

  public java.time.Duration getTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeout:Ljava/time/Duration;
       4: areturn

  public void setTimeout(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field timeout:Ljava/time/Duration;
       5: return

  public java.util.concurrent.CompletionStage<org.xbill.DNS.Message> sendAsync(org.xbill.DNS.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #42                 // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
       5: invokevirtual #43                 // Method sendAsync:(Lorg/xbill/DNS/Message;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
       8: areturn

  public java.util.concurrent.CompletionStage<org.xbill.DNS.Message> sendAsync(org.xbill.DNS.Message, java.util.concurrent.Executor);
    Code:
       0: new           #44                 // class org/xbill/DNS/ExtendedResolver$Resolution
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #45                 // Method org/xbill/DNS/ExtendedResolver$Resolution."<init>":(Lorg/xbill/DNS/ExtendedResolver;Lorg/xbill/DNS/Message;)V
       9: astore_3
      10: aload_3
      11: aload_2
      12: invokestatic  #46                 // Method org/xbill/DNS/ExtendedResolver$Resolution.access$800:(Lorg/xbill/DNS/ExtendedResolver$Resolution;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
      15: areturn

  public org.xbill.DNS.Resolver getResolver(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field resolvers:Ljava/util/List;
       5: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
      10: if_icmpge     30
      13: aload_0
      14: getfield      #6                  // Field resolvers:Ljava/util/List;
      17: iload_1
      18: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      23: checkcast     #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      26: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
      29: areturn
      30: aconst_null
      31: areturn

  public org.xbill.DNS.Resolver[] getResolvers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: invokedynamic #49,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      14: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokedynamic #50,  0             // InvokeDynamic #2:apply:()Ljava/util/function/IntFunction;
      24: invokeinterface #51,  2           // InterfaceMethod java/util/stream/Stream.toArray:(Ljava/util/function/IntFunction;)[Ljava/lang/Object;
      29: checkcast     #52                 // class "[Lorg/xbill/DNS/Resolver;"
      32: areturn

  public void addResolver(org.xbill.DNS.Resolver);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: new           #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
       7: dup
       8: aload_1
       9: invokespecial #27                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry."<init>":(Lorg/xbill/DNS/Resolver;)V
      12: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: return

  public void deleteResolver(org.xbill.DNS.Resolver);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: aload_1
       5: invokedynamic #53,  0             // InvokeDynamic #3:test:(Lorg/xbill/DNS/Resolver;)Ljava/util/function/Predicate;
      10: invokeinterface #54,  2           // InterfaceMethod java/util/List.removeIf:(Ljava/util/function/Predicate;)Z
      15: pop
      16: return

  public boolean getLoadBalance();
    Code:
       0: aload_0
       1: getfield      #4                  // Field loadBalance:Z
       4: ireturn

  public void setLoadBalance(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field loadBalance:Z
       5: return

  public int getRetries();
    Code:
       0: aload_0
       1: getfield      #2                  // Field retries:I
       4: ireturn

  public void setRetries(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field retries:I
       5: return

  public java.lang.String toString();
    Code:
       0: new           #55                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #56                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #57                 // String ExtendedResolver of
       9: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #6                  // Field resolvers:Ljava/util/List;
      16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: areturn

  private static boolean lambda$deleteResolver$3(org.xbill.DNS.Resolver, org.xbill.DNS.ExtendedResolver$ResolverEntry);
    Code:
       0: aload_1
       1: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
       4: aload_0
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static org.xbill.DNS.Resolver[] lambda$getResolvers$2(int);
    Code:
       0: iload_0
       1: anewarray     #34                 // class org/xbill/DNS/Resolver
       4: areturn

  private static org.xbill.DNS.Resolver lambda$getResolvers$1(org.xbill.DNS.ExtendedResolver$ResolverEntry);
    Code:
       0: aload_0
       1: invokestatic  #36                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry.access$500:(Lorg/xbill/DNS/ExtendedResolver$ResolverEntry;)Lorg/xbill/DNS/Resolver;
       4: areturn

  private static org.xbill.DNS.ExtendedResolver$ResolverEntry lambda$new$0(java.net.InetSocketAddress);
    Code:
       0: new           #22                 // class org/xbill/DNS/SimpleResolver
       3: dup
       4: aload_0
       5: invokespecial #61                 // Method org/xbill/DNS/SimpleResolver."<init>":(Ljava/net/InetSocketAddress;)V
       8: astore_1
       9: aload_1
      10: getstatic     #24                 // Field DEFAULT_RESOLVER_TIMEOUT:Ljava/time/Duration;
      13: invokeinterface #25,  2           // InterfaceMethod org/xbill/DNS/Resolver.setTimeout:(Ljava/time/Duration;)V
      18: new           #26                 // class org/xbill/DNS/ExtendedResolver$ResolverEntry
      21: dup
      22: aload_1
      23: invokespecial #27                 // Method org/xbill/DNS/ExtendedResolver$ResolverEntry."<init>":(Lorg/xbill/DNS/Resolver;)V
      26: areturn

  static java.util.List access$000(org.xbill.DNS.ExtendedResolver);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolvers:Ljava/util/List;
       4: areturn

  static java.time.Duration access$100(org.xbill.DNS.ExtendedResolver);
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeout:Ljava/time/Duration;
       4: areturn

  static boolean access$200(org.xbill.DNS.ExtendedResolver);
    Code:
       0: aload_0
       1: getfield      #4                  // Field loadBalance:Z
       4: ireturn

  static java.util.concurrent.atomic.AtomicInteger access$300(org.xbill.DNS.ExtendedResolver);
    Code:
       0: aload_0
       1: getfield      #3                  // Field lbStart:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn

  static int access$400(org.xbill.DNS.ExtendedResolver);
    Code:
       0: aload_0
       1: getfield      #2                  // Field retries:I
       4: ireturn

  static org.slf4j.Logger access$600();
    Code:
       0: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #62                 // class org/xbill/DNS/ExtendedResolver
       2: invokestatic  #63                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field log:Lorg/slf4j/Logger;
       8: ldc2_w        #64                 // long 10l
      11: invokestatic  #66                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      14: putstatic     #12                 // Field DEFAULT_TIMEOUT:Ljava/time/Duration;
      17: ldc2_w        #67                 // long 5l
      20: invokestatic  #66                 // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      23: putstatic     #24                 // Field DEFAULT_RESOLVER_TIMEOUT:Ljava/time/Duration;
      26: return
}
