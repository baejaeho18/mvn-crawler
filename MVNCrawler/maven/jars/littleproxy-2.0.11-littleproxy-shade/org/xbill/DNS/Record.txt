Compiled from "Record.java"
public abstract class org.xbill.DNS.Record implements java.lang.Cloneable, java.lang.Comparable<org.xbill.DNS.Record>, java.io.Serializable {
  private static final org.slf4j.Logger log;

  protected org.xbill.DNS.Name name;

  protected int type;

  protected int dclass;

  protected long ttl;

  private static final java.text.DecimalFormat byteFormat;

  protected org.xbill.DNS.Record();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.xbill.DNS.Record(org.xbill.DNS.Name, int, int, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #2                  // Method org/xbill/DNS/Name.isAbsolute:()Z
       8: ifne          20
      11: new           #3                  // class org/xbill/DNS/RelativeNameException
      14: dup
      15: aload_1
      16: invokespecial #4                  // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      19: athrow
      20: iload_2
      21: invokestatic  #5                  // Method org/xbill/DNS/Type.check:(I)V
      24: iload_3
      25: invokestatic  #6                  // Method org/xbill/DNS/DClass.check:(I)V
      28: lload         4
      30: invokestatic  #7                  // Method org/xbill/DNS/TTL.check:(J)V
      33: aload_0
      34: aload_1
      35: putfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      38: aload_0
      39: iload_2
      40: putfield      #9                  // Field type:I
      43: aload_0
      44: iload_3
      45: putfield      #10                 // Field dclass:I
      48: aload_0
      49: lload         4
      51: putfield      #11                 // Field ttl:J
      54: return

  java.lang.Object writeReplace();
    Code:
       0: getstatic     #12                 // Field log:Lorg/slf4j/Logger;
       3: ldc           #13                 // String Creating proxy object for serialization
       5: invokeinterface #14,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      10: new           #15                 // class org/xbill/DNS/Record$RecordSerializationProxy
      13: dup
      14: aload_0
      15: invokespecial #16                 // Method org/xbill/DNS/Record$RecordSerializationProxy."<init>":(Lorg/xbill/DNS/Record;)V
      18: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException;
    Code:
       0: new           #17                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #18                 // String Use RecordSerializationProxy
       6: invokespecial #19                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  private static org.xbill.DNS.Record getEmptyRecord(org.xbill.DNS.Name, int, int, long, boolean);
    Code:
       0: iload         5
       2: ifeq          43
       5: iload_1
       6: invokestatic  #20                 // Method org/xbill/DNS/Type.getFactory:(I)Ljava/util/function/Supplier;
       9: astore        7
      11: aload         7
      13: ifnull        31
      16: aload         7
      18: invokeinterface #21,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      23: checkcast     #22                 // class org/xbill/DNS/Record
      26: astore        6
      28: goto          40
      31: new           #23                 // class org/xbill/DNS/UNKRecord
      34: dup
      35: invokespecial #24                 // Method org/xbill/DNS/UNKRecord."<init>":()V
      38: astore        6
      40: goto          52
      43: new           #25                 // class org/xbill/DNS/EmptyRecord
      46: dup
      47: invokespecial #26                 // Method org/xbill/DNS/EmptyRecord."<init>":()V
      50: astore        6
      52: aload         6
      54: aload_0
      55: putfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      58: aload         6
      60: iload_1
      61: putfield      #9                  // Field type:I
      64: aload         6
      66: iload_2
      67: putfield      #10                 // Field dclass:I
      70: aload         6
      72: lload_3
      73: putfield      #11                 // Field ttl:J
      76: aload         6
      78: areturn

  protected abstract void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;

  private static org.xbill.DNS.Record newRecord(org.xbill.DNS.Name, int, int, long, int, org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: lload_3
       4: aload         6
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: invokestatic  #27                 // Method getEmptyRecord:(Lorg/xbill/DNS/Name;IIJZ)Lorg/xbill/DNS/Record;
      17: astore        7
      19: aload         6
      21: ifnull        81
      24: aload         6
      26: invokevirtual #28                 // Method org/xbill/DNS/DNSInput.remaining:()I
      29: iload         5
      31: if_icmpge     44
      34: new           #29                 // class org/xbill/DNS/WireParseException
      37: dup
      38: ldc           #30                 // String truncated record
      40: invokespecial #31                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload         6
      46: iload         5
      48: invokevirtual #32                 // Method org/xbill/DNS/DNSInput.setActive:(I)V
      51: aload         7
      53: aload         6
      55: invokevirtual #33                 // Method rrFromWire:(Lorg/xbill/DNS/DNSInput;)V
      58: aload         6
      60: invokevirtual #28                 // Method org/xbill/DNS/DNSInput.remaining:()I
      63: ifle          76
      66: new           #29                 // class org/xbill/DNS/WireParseException
      69: dup
      70: ldc           #34                 // String invalid record length
      72: invokespecial #31                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload         6
      78: invokevirtual #35                 // Method org/xbill/DNS/DNSInput.clearActive:()V
      81: aload         7
      83: areturn

  public static org.xbill.DNS.Record newRecord(org.xbill.DNS.Name, int, int, long, int, byte[]);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/xbill/DNS/Name.isAbsolute:()Z
       4: ifne          16
       7: new           #3                  // class org/xbill/DNS/RelativeNameException
      10: dup
      11: aload_0
      12: invokespecial #4                  // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      15: athrow
      16: iload_1
      17: invokestatic  #5                  // Method org/xbill/DNS/Type.check:(I)V
      20: iload_2
      21: invokestatic  #6                  // Method org/xbill/DNS/DClass.check:(I)V
      24: lload_3
      25: invokestatic  #7                  // Method org/xbill/DNS/TTL.check:(J)V
      28: aload         6
      30: ifnull        47
      33: new           #36                 // class org/xbill/DNS/DNSInput
      36: dup
      37: aload         6
      39: invokespecial #37                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      42: astore        7
      44: goto          50
      47: aconst_null
      48: astore        7
      50: aload_0
      51: iload_1
      52: iload_2
      53: lload_3
      54: iload         5
      56: aload         7
      58: invokestatic  #38                 // Method newRecord:(Lorg/xbill/DNS/Name;IIJILorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/Record;
      61: areturn
      62: astore        8
      64: aconst_null
      65: areturn
    Exception table:
       from    to  target type
          50    61    62   Class java/io/IOException

  public static org.xbill.DNS.Record newRecord(org.xbill.DNS.Name, int, int, long, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: lload_3
       4: aload         5
       6: arraylength
       7: aload         5
       9: invokestatic  #40                 // Method newRecord:(Lorg/xbill/DNS/Name;IIJI[B)Lorg/xbill/DNS/Record;
      12: areturn

  public static org.xbill.DNS.Record newRecord(org.xbill.DNS.Name, int, int, long);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/xbill/DNS/Name.isAbsolute:()Z
       4: ifne          16
       7: new           #3                  // class org/xbill/DNS/RelativeNameException
      10: dup
      11: aload_0
      12: invokespecial #4                  // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      15: athrow
      16: iload_1
      17: invokestatic  #5                  // Method org/xbill/DNS/Type.check:(I)V
      20: iload_2
      21: invokestatic  #6                  // Method org/xbill/DNS/DClass.check:(I)V
      24: lload_3
      25: invokestatic  #7                  // Method org/xbill/DNS/TTL.check:(J)V
      28: aload_0
      29: iload_1
      30: iload_2
      31: lload_3
      32: iconst_0
      33: invokestatic  #27                 // Method getEmptyRecord:(Lorg/xbill/DNS/Name;IIJZ)Lorg/xbill/DNS/Record;
      36: areturn

  public static org.xbill.DNS.Record newRecord(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: lconst_0
       4: invokestatic  #41                 // Method newRecord:(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;
       7: areturn

  static org.xbill.DNS.Record fromWire(org.xbill.DNS.DNSInput, int, boolean) throws java.io.IOException;
    Code:
       0: new           #42                 // class org/xbill/DNS/Name
       3: dup
       4: aload_0
       5: invokespecial #43                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
       8: astore        8
      10: aload_0
      11: invokevirtual #44                 // Method org/xbill/DNS/DNSInput.readU16:()I
      14: istore_3
      15: aload_0
      16: invokevirtual #44                 // Method org/xbill/DNS/DNSInput.readU16:()I
      19: istore        4
      21: iload_1
      22: ifne          34
      25: aload         8
      27: iload_3
      28: iload         4
      30: invokestatic  #45                 // Method newRecord:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;
      33: areturn
      34: aload_0
      35: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU32:()J
      38: lstore        5
      40: aload_0
      41: invokevirtual #44                 // Method org/xbill/DNS/DNSInput.readU16:()I
      44: istore        7
      46: iload         7
      48: ifne          76
      51: iload_2
      52: ifeq          76
      55: iload_1
      56: iconst_1
      57: if_icmpeq     65
      60: iload_1
      61: iconst_2
      62: if_icmpne     76
      65: aload         8
      67: iload_3
      68: iload         4
      70: lload         5
      72: invokestatic  #41                 // Method newRecord:(Lorg/xbill/DNS/Name;IIJ)Lorg/xbill/DNS/Record;
      75: areturn
      76: aload         8
      78: iload_3
      79: iload         4
      81: lload         5
      83: iload         7
      85: aload_0
      86: invokestatic  #38                 // Method newRecord:(Lorg/xbill/DNS/Name;IIJILorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/Record;
      89: astore        9
      91: aload         9
      93: areturn

  static org.xbill.DNS.Record fromWire(org.xbill.DNS.DNSInput, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #48                 // Method fromWire:(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;
       6: areturn

  public static org.xbill.DNS.Record fromWire(byte[], int) throws java.io.IOException;
    Code:
       0: new           #36                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #37                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: iload_1
       9: iconst_0
      10: invokestatic  #48                 // Method fromWire:(Lorg/xbill/DNS/DNSInput;IZ)Lorg/xbill/DNS/Record;
      13: areturn

  void toWire(org.xbill.DNS.DNSOutput, int, org.xbill.DNS.Compression);
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
       4: aload_1
       5: aload_3
       6: invokevirtual #49                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;)V
       9: aload_1
      10: aload_0
      11: getfield      #9                  // Field type:I
      14: invokevirtual #50                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      17: aload_1
      18: aload_0
      19: getfield      #10                 // Field dclass:I
      22: invokevirtual #50                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      25: iload_2
      26: ifne          30
      29: return
      30: aload_1
      31: aload_0
      32: getfield      #11                 // Field ttl:J
      35: invokevirtual #51                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      38: aload_1
      39: invokevirtual #52                 // Method org/xbill/DNS/DNSOutput.current:()I
      42: istore        4
      44: aload_1
      45: iconst_0
      46: invokevirtual #50                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      49: aload_0
      50: aload_1
      51: aload_3
      52: iconst_0
      53: invokevirtual #53                 // Method rrToWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      56: aload_1
      57: invokevirtual #52                 // Method org/xbill/DNS/DNSOutput.current:()I
      60: iload         4
      62: isub
      63: iconst_2
      64: isub
      65: istore        5
      67: aload_1
      68: iload         5
      70: iload         4
      72: invokevirtual #54                 // Method org/xbill/DNS/DNSOutput.writeU16At:(II)V
      75: return

  public byte[] toWire(int);
    Code:
       0: new           #55                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #56                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: iload_1
      11: aconst_null
      12: invokevirtual #57                 // Method toWire:(Lorg/xbill/DNS/DNSOutput;ILorg/xbill/DNS/Compression;)V
      15: aload_2
      16: invokevirtual #58                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      19: areturn

  private void toWireCanonical(org.xbill.DNS.DNSOutput, boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
       4: aload_1
       5: invokevirtual #59                 // Method org/xbill/DNS/Name.toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field type:I
      13: invokevirtual #50                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #10                 // Field dclass:I
      21: invokevirtual #50                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      24: iload_2
      25: ifeq          36
      28: aload_1
      29: lconst_0
      30: invokevirtual #51                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      33: goto          44
      36: aload_1
      37: aload_0
      38: getfield      #11                 // Field ttl:J
      41: invokevirtual #51                 // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      44: aload_1
      45: invokevirtual #52                 // Method org/xbill/DNS/DNSOutput.current:()I
      48: istore_3
      49: aload_1
      50: iconst_0
      51: invokevirtual #50                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      54: aload_0
      55: aload_1
      56: aconst_null
      57: iconst_1
      58: invokevirtual #53                 // Method rrToWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      61: aload_1
      62: invokevirtual #52                 // Method org/xbill/DNS/DNSOutput.current:()I
      65: iload_3
      66: isub
      67: iconst_2
      68: isub
      69: istore        4
      71: aload_1
      72: iload         4
      74: iload_3
      75: invokevirtual #54                 // Method org/xbill/DNS/DNSOutput.writeU16At:(II)V
      78: return

  private byte[] toWireCanonical(boolean);
    Code:
       0: new           #55                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #56                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_0
       9: aload_2
      10: iload_1
      11: invokespecial #60                 // Method toWireCanonical:(Lorg/xbill/DNS/DNSOutput;Z)V
      14: aload_2
      15: invokevirtual #58                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      18: areturn

  public byte[] toWireCanonical();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #61                 // Method toWireCanonical:(Z)[B
       5: areturn

  public byte[] rdataToWireCanonical();
    Code:
       0: new           #55                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #56                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: aconst_null
      11: iconst_1
      12: invokevirtual #53                 // Method rrToWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      15: aload_1
      16: invokevirtual #58                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      19: areturn

  protected abstract java.lang.String rrToString();

  public java.lang.String rdataToString();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method rrToString:()Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #63                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      13: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: invokevirtual #66                 // Method java/lang/StringBuilder.length:()I
      21: bipush        8
      23: if_icmpge     33
      26: aload_1
      27: ldc           #67                 // String \t
      29: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: invokevirtual #66                 // Method java/lang/StringBuilder.length:()I
      37: bipush        16
      39: if_icmpge     49
      42: aload_1
      43: ldc           #67                 // String \t
      45: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: pop
      49: aload_1
      50: ldc           #67                 // String \t
      52: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: ldc           #69                 // String BINDTTL
      58: invokestatic  #70                 // Method org/xbill/DNS/Options.check:(Ljava/lang/String;)Z
      61: ifeq          79
      64: aload_1
      65: aload_0
      66: getfield      #11                 // Field ttl:J
      69: invokestatic  #71                 // Method org/xbill/DNS/TTL.format:(J)Ljava/lang/String;
      72: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: goto          88
      79: aload_1
      80: aload_0
      81: getfield      #11                 // Field ttl:J
      84: invokevirtual #72                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      87: pop
      88: aload_1
      89: ldc           #67                 // String \t
      91: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: pop
      95: aload_0
      96: getfield      #10                 // Field dclass:I
      99: iconst_1
     100: if_icmpne     111
     103: ldc           #74                 // String noPrintIN
     105: invokestatic  #70                 // Method org/xbill/DNS/Options.check:(Ljava/lang/String;)Z
     108: ifne          130
     111: aload_1
     112: aload_0
     113: getfield      #10                 // Field dclass:I
     116: invokestatic  #75                 // Method org/xbill/DNS/DClass.string:(I)Ljava/lang/String;
     119: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: aload_1
     124: ldc           #67                 // String \t
     126: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: pop
     130: aload_1
     131: aload_0
     132: getfield      #9                  // Field type:I
     135: invokestatic  #76                 // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
     138: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: pop
     142: aload_0
     143: invokevirtual #62                 // Method rrToString:()Ljava/lang/String;
     146: astore_2
     147: aload_2
     148: ldc           #77                 // String
     150: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     153: ifne          169
     156: aload_1
     157: ldc           #67                 // String \t
     159: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: pop
     163: aload_1
     164: aload_2
     165: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: pop
     169: aload_1
     170: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     173: areturn

  protected abstract void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;

  protected static byte[] byteArrayFromString(java.lang.String) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: invokevirtual #80                 // Method java/lang/String.getBytes:()[B
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: aload_1
      10: astore        4
      12: aload         4
      14: arraylength
      15: istore        5
      17: iconst_0
      18: istore        6
      20: iload         6
      22: iload         5
      24: if_icmpge     52
      27: aload         4
      29: iload         6
      31: baload
      32: istore        7
      34: iload         7
      36: bipush        92
      38: if_icmpne     46
      41: iconst_1
      42: istore_3
      43: goto          52
      46: iinc          6, 1
      49: goto          20
      52: iload_3
      53: ifne          76
      56: aload_1
      57: arraylength
      58: sipush        255
      61: if_icmple     74
      64: new           #81                 // class org/xbill/DNS/TextParseException
      67: dup
      68: ldc           #82                 // String text string too long
      70: invokespecial #83                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_1
      75: areturn
      76: new           #84                 // class java/io/ByteArrayOutputStream
      79: dup
      80: invokespecial #85                 // Method java/io/ByteArrayOutputStream."<init>":()V
      83: astore        4
      85: iconst_0
      86: istore        5
      88: iconst_0
      89: istore        6
      91: aload_1
      92: astore        7
      94: aload         7
      96: arraylength
      97: istore        8
      99: iconst_0
     100: istore        9
     102: iload         9
     104: iload         8
     106: if_icmpge     251
     109: aload         7
     111: iload         9
     113: baload
     114: istore        10
     116: iload_2
     117: ifeq          220
     120: iload         10
     122: istore        11
     124: iload         11
     126: bipush        48
     128: if_icmplt     193
     131: iload         11
     133: bipush        57
     135: if_icmpgt     193
     138: iinc          5, 1
     141: iload         6
     143: bipush        10
     145: imul
     146: istore        6
     148: iload         6
     150: iload         11
     152: bipush        48
     154: isub
     155: iadd
     156: istore        6
     158: iload         6
     160: sipush        255
     163: if_icmple     176
     166: new           #81                 // class org/xbill/DNS/TextParseException
     169: dup
     170: ldc           #86                 // String bad escape
     172: invokespecial #83                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
     175: athrow
     176: iload         5
     178: iconst_3
     179: if_icmpge     185
     182: goto          245
     185: iload         6
     187: i2b
     188: istore        11
     190: goto          208
     193: iload         5
     195: ifle          208
     198: new           #81                 // class org/xbill/DNS/TextParseException
     201: dup
     202: ldc           #86                 // String bad escape
     204: invokespecial #83                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
     207: athrow
     208: aload         4
     210: iload         11
     212: invokevirtual #87                 // Method java/io/ByteArrayOutputStream.write:(I)V
     215: iconst_0
     216: istore_2
     217: goto          245
     220: iload         10
     222: bipush        92
     224: if_icmpne     238
     227: iconst_1
     228: istore_2
     229: iconst_0
     230: istore        5
     232: iconst_0
     233: istore        6
     235: goto          245
     238: aload         4
     240: iload         10
     242: invokevirtual #87                 // Method java/io/ByteArrayOutputStream.write:(I)V
     245: iinc          9, 1
     248: goto          102
     251: iload         5
     253: ifle          272
     256: iload         5
     258: iconst_3
     259: if_icmpge     272
     262: new           #81                 // class org/xbill/DNS/TextParseException
     265: dup
     266: ldc           #86                 // String bad escape
     268: invokespecial #83                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
     271: athrow
     272: aload         4
     274: invokevirtual #88                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     277: astore_1
     278: aload_1
     279: arraylength
     280: sipush        255
     283: if_icmple     296
     286: new           #81                 // class org/xbill/DNS/TextParseException
     289: dup
     290: ldc           #82                 // String text string too long
     292: invokespecial #83                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
     295: athrow
     296: aload         4
     298: invokevirtual #88                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     301: areturn

  protected static java.lang.String byteArrayToString(byte[], boolean);
    Code:
       0: new           #63                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: iload_1
       9: ifeq          19
      12: aload_2
      13: bipush        34
      15: invokevirtual #89                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      18: pop
      19: aload_0
      20: astore_3
      21: aload_3
      22: arraylength
      23: istore        4
      25: iconst_0
      26: istore        5
      28: iload         5
      30: iload         4
      32: if_icmpge     133
      35: aload_3
      36: iload         5
      38: baload
      39: istore        6
      41: iload         6
      43: sipush        255
      46: iand
      47: istore        7
      49: iload         7
      51: bipush        32
      53: if_icmplt     63
      56: iload         7
      58: bipush        127
      60: if_icmplt     87
      63: aload_2
      64: bipush        92
      66: invokevirtual #89                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      69: pop
      70: aload_2
      71: getstatic     #90                 // Field byteFormat:Ljava/text/DecimalFormat;
      74: iload         7
      76: i2l
      77: invokevirtual #91                 // Method java/text/DecimalFormat.format:(J)Ljava/lang/String;
      80: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: goto          127
      87: iload         7
      89: bipush        34
      91: if_icmpeq     101
      94: iload         7
      96: bipush        92
      98: if_icmpne     119
     101: aload_2
     102: bipush        92
     104: invokevirtual #89                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     107: pop
     108: aload_2
     109: iload         7
     111: i2c
     112: invokevirtual #89                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     115: pop
     116: goto          127
     119: aload_2
     120: iload         7
     122: i2c
     123: invokevirtual #89                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     126: pop
     127: iinc          5, 1
     130: goto          28
     133: iload_1
     134: ifeq          144
     137: aload_2
     138: bipush        34
     140: invokevirtual #89                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     143: pop
     144: aload_2
     145: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: areturn

  protected static java.lang.String unknownToString(byte[]);
    Code:
       0: new           #63                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #92                 // String \\#
       9: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: arraylength
      14: invokevirtual #93                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      17: ldc           #94                 // String
      19: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokestatic  #95                 // Method org/xbill/DNS/utils/base16.toString:([B)Ljava/lang/String;
      26: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  public static org.xbill.DNS.Record fromString(org.xbill.DNS.Name, int, int, long, org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method org/xbill/DNS/Name.isAbsolute:()Z
       4: ifne          16
       7: new           #3                  // class org/xbill/DNS/RelativeNameException
      10: dup
      11: aload_0
      12: invokespecial #4                  // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      15: athrow
      16: iload_1
      17: invokestatic  #5                  // Method org/xbill/DNS/Type.check:(I)V
      20: iload_2
      21: invokestatic  #6                  // Method org/xbill/DNS/DClass.check:(I)V
      24: lload_3
      25: invokestatic  #7                  // Method org/xbill/DNS/TTL.check:(J)V
      28: aload         5
      30: invokevirtual #96                 // Method org/xbill/DNS/Tokenizer.get:()Lorg/xbill/DNS/Tokenizer$Token;
      33: astore        8
      35: aload         8
      37: invokevirtual #97                 // Method org/xbill/DNS/Tokenizer$Token.type:()I
      40: iconst_3
      41: if_icmpne     120
      44: aload         8
      46: invokevirtual #99                 // Method org/xbill/DNS/Tokenizer$Token.value:()Ljava/lang/String;
      49: ldc           #100                // String \\#
      51: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          120
      57: aload         5
      59: invokevirtual #101                // Method org/xbill/DNS/Tokenizer.getUInt16:()I
      62: istore        9
      64: aload         5
      66: invokevirtual #102                // Method org/xbill/DNS/Tokenizer.getHex:()[B
      69: astore        10
      71: aload         10
      73: ifnonnull     81
      76: iconst_0
      77: newarray       byte
      79: astore        10
      81: iload         9
      83: aload         10
      85: arraylength
      86: if_icmpeq     97
      89: aload         5
      91: ldc           #103                // String invalid unknown RR encoding: length mismatch
      93: invokevirtual #104                // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      96: athrow
      97: new           #36                 // class org/xbill/DNS/DNSInput
     100: dup
     101: aload         10
     103: invokespecial #37                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
     106: astore        11
     108: aload_0
     109: iload_1
     110: iload_2
     111: lload_3
     112: iload         9
     114: aload         11
     116: invokestatic  #38                 // Method newRecord:(Lorg/xbill/DNS/Name;IIJILorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/Record;
     119: areturn
     120: aload         5
     122: invokevirtual #105                // Method org/xbill/DNS/Tokenizer.unget:()V
     125: aload_0
     126: iload_1
     127: iload_2
     128: lload_3
     129: iconst_1
     130: invokestatic  #27                 // Method getEmptyRecord:(Lorg/xbill/DNS/Name;IIJZ)Lorg/xbill/DNS/Record;
     133: astore        7
     135: aload         7
     137: aload         5
     139: aload         6
     141: invokevirtual #106                // Method rdataFromString:(Lorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)V
     144: aload         5
     146: invokevirtual #96                 // Method org/xbill/DNS/Tokenizer.get:()Lorg/xbill/DNS/Tokenizer$Token;
     149: astore        8
     151: aload         8
     153: invokevirtual #97                 // Method org/xbill/DNS/Tokenizer$Token.type:()I
     156: iconst_1
     157: if_icmpeq     199
     160: aload         8
     162: invokevirtual #97                 // Method org/xbill/DNS/Tokenizer$Token.type:()I
     165: ifeq          199
     168: aload         5
     170: new           #63                 // class java/lang/StringBuilder
     173: dup
     174: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
     177: ldc           #107                // String unexpected tokens at end of record (wanted EOL/EOF, got
     179: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: aload         8
     184: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     187: ldc           #108                // String )
     189: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokevirtual #104                // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     198: athrow
     199: aload         7
     201: areturn

  public static org.xbill.DNS.Record fromString(org.xbill.DNS.Name, int, int, long, java.lang.String, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: lload_3
       4: new           #98                 // class org/xbill/DNS/Tokenizer
       7: dup
       8: aload         5
      10: invokespecial #109                // Method org/xbill/DNS/Tokenizer."<init>":(Ljava/lang/String;)V
      13: aload         6
      15: invokestatic  #110                // Method fromString:(Lorg/xbill/DNS/Name;IIJLorg/xbill/DNS/Tokenizer;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Record;
      18: areturn

  public org.xbill.DNS.Name getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
       4: areturn

  public int getType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:I
       4: ireturn

  public int getRRsetType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:I
       4: ireturn

  public int getDClass();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dclass:I
       4: ireturn

  public long getTTL();
    Code:
       0: aload_0
       1: getfield      #11                 // Field ttl:J
       4: lreturn

  protected abstract void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);

  public boolean sameRRset(org.xbill.DNS.Record);
    Code:
       0: aload_0
       1: invokevirtual #111                // Method getRRsetType:()I
       4: aload_1
       5: invokevirtual #111                // Method getRRsetType:()I
       8: if_icmpne     40
      11: aload_0
      12: getfield      #10                 // Field dclass:I
      15: aload_1
      16: getfield      #10                 // Field dclass:I
      19: if_icmpne     40
      22: aload_0
      23: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      26: aload_1
      27: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      30: invokevirtual #112                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #22                 // class org/xbill/DNS/Record
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #22                 // class org/xbill/DNS/Record
      13: astore_2
      14: aload_0
      15: getfield      #9                  // Field type:I
      18: aload_2
      19: getfield      #9                  // Field type:I
      22: if_icmpne     50
      25: aload_0
      26: getfield      #10                 // Field dclass:I
      29: aload_2
      30: getfield      #10                 // Field dclass:I
      33: if_icmpne     50
      36: aload_0
      37: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      40: aload_2
      41: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      44: invokevirtual #112                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      47: ifne          52
      50: iconst_0
      51: ireturn
      52: aload_0
      53: invokevirtual #113                // Method rdataToWireCanonical:()[B
      56: astore_3
      57: aload_2
      58: invokevirtual #113                // Method rdataToWireCanonical:()[B
      61: astore        4
      63: aload_3
      64: aload         4
      66: invokestatic  #114                // Method java/util/Arrays.equals:([B[B)Z
      69: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #61                 // Method toWireCanonical:(Z)[B
       5: astore_1
       6: iconst_0
       7: istore_2
       8: aload_1
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     49
      24: aload_3
      25: iload         5
      27: baload
      28: istore        6
      30: iload_2
      31: iload_2
      32: iconst_3
      33: ishl
      34: iload         6
      36: sipush        255
      39: iand
      40: iadd
      41: iadd
      42: istore_2
      43: iinc          5, 1
      46: goto          17
      49: iload_2
      50: ireturn

  org.xbill.DNS.Record cloneRecord();
    Code:
       0: aload_0
       1: invokevirtual #115                // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #22                 // class org/xbill/DNS/Record
       7: areturn
       8: astore_1
       9: new           #117                // class java/lang/IllegalStateException
      12: dup
      13: invokespecial #118                // Method java/lang/IllegalStateException."<init>":()V
      16: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/CloneNotSupportedException

  public org.xbill.DNS.Record withName(org.xbill.DNS.Name);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/xbill/DNS/Name.isAbsolute:()Z
       4: ifne          16
       7: new           #3                  // class org/xbill/DNS/RelativeNameException
      10: dup
      11: aload_1
      12: invokespecial #4                  // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      15: athrow
      16: aload_0
      17: invokevirtual #119                // Method cloneRecord:()Lorg/xbill/DNS/Record;
      20: astore_2
      21: aload_2
      22: aload_1
      23: putfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      26: aload_2
      27: areturn

  org.xbill.DNS.Record withDClass(int, long);
    Code:
       0: aload_0
       1: invokevirtual #119                // Method cloneRecord:()Lorg/xbill/DNS/Record;
       4: astore        4
       6: aload         4
       8: iload_1
       9: putfield      #10                 // Field dclass:I
      12: aload         4
      14: lload_2
      15: putfield      #11                 // Field ttl:J
      18: aload         4
      20: areturn

  void setTTL(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field ttl:J
       5: return

  public int compareTo(org.xbill.DNS.Record);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      11: aload_1
      12: getfield      #8                  // Field name:Lorg/xbill/DNS/Name;
      15: invokevirtual #120                // Method org/xbill/DNS/Name.compareTo:(Lorg/xbill/DNS/Name;)I
      18: istore_2
      19: iload_2
      20: ifeq          25
      23: iload_2
      24: ireturn
      25: aload_0
      26: getfield      #10                 // Field dclass:I
      29: aload_1
      30: getfield      #10                 // Field dclass:I
      33: isub
      34: istore_2
      35: iload_2
      36: ifeq          41
      39: iload_2
      40: ireturn
      41: aload_0
      42: getfield      #9                  // Field type:I
      45: aload_1
      46: getfield      #9                  // Field type:I
      49: isub
      50: istore_2
      51: iload_2
      52: ifeq          57
      55: iload_2
      56: ireturn
      57: aload_0
      58: invokevirtual #113                // Method rdataToWireCanonical:()[B
      61: astore_3
      62: aload_1
      63: invokevirtual #113                // Method rdataToWireCanonical:()[B
      66: astore        4
      68: aload_3
      69: arraylength
      70: aload         4
      72: arraylength
      73: invokestatic  #121                // Method java/lang/Math.min:(II)I
      76: istore        5
      78: iconst_0
      79: istore        6
      81: iload         6
      83: iload         5
      85: if_icmpge     125
      88: aload_3
      89: iload         6
      91: baload
      92: aload         4
      94: iload         6
      96: baload
      97: if_icmpeq     119
     100: aload_3
     101: iload         6
     103: baload
     104: sipush        255
     107: iand
     108: aload         4
     110: iload         6
     112: baload
     113: sipush        255
     116: iand
     117: isub
     118: ireturn
     119: iinc          6, 1
     122: goto          81
     125: aload_3
     126: arraylength
     127: aload         4
     129: arraylength
     130: isub
     131: ireturn

  public org.xbill.DNS.Name getAdditionalName();
    Code:
       0: aconst_null
       1: areturn

  static int checkU8(java.lang.String, int);
    Code:
       0: iload_1
       1: iflt          11
       4: iload_1
       5: sipush        255
       8: if_icmple     52
      11: new           #122                // class java/lang/IllegalArgumentException
      14: dup
      15: new           #63                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #123                // String \"
      24: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #124                // String \"
      33: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: iload_1
      37: invokevirtual #93                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      40: ldc           #125                // String  must be an unsigned 8 bit value
      42: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #126                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: iload_1
      53: ireturn

  static int checkU16(java.lang.String, int);
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: ldc           #127                // int 65535
       7: if_icmple     51
      10: new           #122                // class java/lang/IllegalArgumentException
      13: dup
      14: new           #63                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #123                // String \"
      23: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #124                // String \"
      32: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: iload_1
      36: invokevirtual #93                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      39: ldc           #128                // String  must be an unsigned 16 bit value
      41: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #126                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: iload_1
      52: ireturn

  static long checkU32(java.lang.String, long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          14
       6: lload_1
       7: ldc2_w        #129                // long 4294967295l
      10: lcmp
      11: ifle          55
      14: new           #122                // class java/lang/IllegalArgumentException
      17: dup
      18: new           #63                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #123                // String \"
      27: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #124                // String \"
      36: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: lload_1
      40: invokevirtual #72                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      43: ldc           #131                // String  must be an unsigned 32 bit value
      45: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #126                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: lload_1
      56: lreturn

  static org.xbill.DNS.Name checkName(java.lang.String, org.xbill.DNS.Name);
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method org/xbill/DNS/Name.isAbsolute:()Z
       4: ifne          48
       7: new           #3                  // class org/xbill/DNS/RelativeNameException
      10: dup
      11: new           #63                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #132                // String \'
      20: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_1
      24: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #133                // String \' on field
      29: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #134                // String  is not an absolute name
      38: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #135                // Method org/xbill/DNS/RelativeNameException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_1
      49: areturn

  static byte[] checkByteArrayLength(java.lang.String, byte[], int);
    Code:
       0: aload_1
       1: arraylength
       2: ldc           #127                // int 65535
       4: if_icmple     48
       7: new           #122                // class java/lang/IllegalArgumentException
      10: dup
      11: new           #63                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #64                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #123                // String \"
      20: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: ldc           #136                // String \" array must have no more than
      29: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_2
      33: invokevirtual #93                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #137                // String  elements
      38: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #126                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_1
      49: arraylength
      50: newarray       byte
      52: astore_3
      53: aload_1
      54: iconst_0
      55: aload_3
      56: iconst_0
      57: aload_1
      58: arraylength
      59: invokestatic  #138                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload_3
      63: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class org/xbill/DNS/Record
       5: invokevirtual #139                // Method compareTo:(Lorg/xbill/DNS/Record;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #22                 // class org/xbill/DNS/Record
       2: invokestatic  #140                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #12                 // Field log:Lorg/slf4j/Logger;
       8: new           #141                // class java/text/DecimalFormat
      11: dup
      12: invokespecial #142                // Method java/text/DecimalFormat."<init>":()V
      15: putstatic     #90                 // Field byteFormat:Ljava/text/DecimalFormat;
      18: getstatic     #90                 // Field byteFormat:Ljava/text/DecimalFormat;
      21: iconst_3
      22: invokevirtual #143                // Method java/text/DecimalFormat.setMinimumIntegerDigits:(I)V
      25: return
}
