Compiled from "SMessage.java"
final class org.xbill.DNS.dnssec.SMessage {
  private static final org.slf4j.Logger log;

  private static final int NUM_SECTIONS;

  private static final int MAX_FLAGS;

  private static final int EXTENDED_FLAGS_BIT_OFFSET;

  private final org.xbill.DNS.Header header;

  private org.xbill.DNS.Record question;

  private org.xbill.DNS.OPTRecord oPTRecord;

  private final java.util.List<org.xbill.DNS.dnssec.SRRset>[] sections;

  private org.xbill.DNS.dnssec.SecurityStatus securityStatus;

  private java.lang.String bogusReason;

  private int edeReason;

  public org.xbill.DNS.dnssec.SMessage(org.xbill.DNS.Header);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field edeReason:I
       9: aload_0
      10: iconst_3
      11: anewarray     #4                  // class java/util/List
      14: putfield      #5                  // Field sections:[Ljava/util/List;
      17: aload_0
      18: aload_1
      19: putfield      #6                  // Field header:Lorg/xbill/DNS/Header;
      22: aload_0
      23: getstatic     #7                  // Field org/xbill/DNS/dnssec/SecurityStatus.UNCHECKED:Lorg/xbill/DNS/dnssec/SecurityStatus;
      26: putfield      #8                  // Field securityStatus:Lorg/xbill/DNS/dnssec/SecurityStatus;
      29: return

  public org.xbill.DNS.dnssec.SMessage(int, org.xbill.DNS.Record);
    Code:
       0: aload_0
       1: new           #9                  // class org/xbill/DNS/Header
       4: dup
       5: iload_1
       6: invokespecial #10                 // Method org/xbill/DNS/Header."<init>":(I)V
       9: invokespecial #11                 // Method "<init>":(Lorg/xbill/DNS/Header;)V
      12: aload_0
      13: aload_2
      14: putfield      #12                 // Field question:Lorg/xbill/DNS/Record;
      17: return

  public org.xbill.DNS.dnssec.SMessage(org.xbill.DNS.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
       5: invokespecial #11                 // Method "<init>":(Lorg/xbill/DNS/Header;)V
       8: aload_0
       9: aload_1
      10: invokevirtual #14                 // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
      13: putfield      #12                 // Field question:Lorg/xbill/DNS/Record;
      16: aload_0
      17: aload_1
      18: invokevirtual #15                 // Method org/xbill/DNS/Message.getOPT:()Lorg/xbill/DNS/OPTRecord;
      21: putfield      #16                 // Field oPTRecord:Lorg/xbill/DNS/OPTRecord;
      24: iconst_1
      25: istore_2
      26: iload_2
      27: iconst_3
      28: if_icmpgt     85
      31: aload_1
      32: iload_2
      33: invokevirtual #18                 // Method org/xbill/DNS/Message.getSectionRRsets:(I)Ljava/util/List;
      36: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      41: astore_3
      42: aload_3
      43: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      48: ifeq          79
      51: aload_3
      52: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #22                 // class org/xbill/DNS/RRset
      60: astore        4
      62: aload_0
      63: new           #23                 // class org/xbill/DNS/dnssec/SRRset
      66: dup
      67: aload         4
      69: invokespecial #24                 // Method org/xbill/DNS/dnssec/SRRset."<init>":(Lorg/xbill/DNS/RRset;)V
      72: iload_2
      73: invokespecial #25                 // Method addRRset:(Lorg/xbill/DNS/dnssec/SRRset;I)V
      76: goto          42
      79: iinc          2, 1
      82: goto          26
      85: return

  public org.xbill.DNS.Header getHeader();
    Code:
       0: aload_0
       1: getfield      #6                  // Field header:Lorg/xbill/DNS/Header;
       4: areturn

  public org.xbill.DNS.Record getQuestion();
    Code:
       0: aload_0
       1: getfield      #12                 // Field question:Lorg/xbill/DNS/Record;
       4: areturn

  public java.util.List<org.xbill.DNS.dnssec.SRRset> getSectionRRsets(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #26                 // Method checkSectionValidity:(I)V
       5: aload_0
       6: getfield      #5                  // Field sections:[Ljava/util/List;
       9: iload_1
      10: iconst_1
      11: isub
      12: aaload
      13: ifnonnull     31
      16: aload_0
      17: getfield      #5                  // Field sections:[Ljava/util/List;
      20: iload_1
      21: iconst_1
      22: isub
      23: new           #27                 // class java/util/LinkedList
      26: dup
      27: invokespecial #28                 // Method java/util/LinkedList."<init>":()V
      30: aastore
      31: aload_0
      32: getfield      #5                  // Field sections:[Ljava/util/List;
      35: iload_1
      36: iconst_1
      37: isub
      38: aaload
      39: areturn

  private void addRRset(org.xbill.DNS.dnssec.SRRset, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #26                 // Method checkSectionValidity:(I)V
       5: aload_1
       6: invokevirtual #29                 // Method org/xbill/DNS/dnssec/SRRset.getType:()I
       9: bipush        41
      11: if_icmpne     26
      14: aload_0
      15: aload_1
      16: invokevirtual #31                 // Method org/xbill/DNS/dnssec/SRRset.first:()Lorg/xbill/DNS/Record;
      19: checkcast     #32                 // class org/xbill/DNS/OPTRecord
      22: putfield      #16                 // Field oPTRecord:Lorg/xbill/DNS/OPTRecord;
      25: return
      26: aload_0
      27: iload_2
      28: invokevirtual #33                 // Method getSectionRRsets:(I)Ljava/util/List;
      31: astore_3
      32: aload_3
      33: aload_1
      34: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      39: pop
      40: return

  private void checkSectionValidity(int);
    Code:
       0: iload_1
       1: ifle          9
       4: iload_1
       5: iconst_3
       6: if_icmple     19
       9: new           #35                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #36                 // String Invalid section
      15: invokespecial #37                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: return

  public java.util.List<org.xbill.DNS.dnssec.SRRset> getSectionRRsets(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #33                 // Method getSectionRRsets:(I)Ljava/util/List;
       5: astore_3
       6: aload_3
       7: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      12: ifeq          19
      15: invokestatic  #39                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      18: areturn
      19: new           #40                 // class java/util/ArrayList
      22: dup
      23: aload_3
      24: invokeinterface #41,  1           // InterfaceMethod java/util/List.size:()I
      29: invokespecial #42                 // Method java/util/ArrayList."<init>":(I)V
      32: astore        4
      34: aload_3
      35: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        5
      42: aload         5
      44: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          86
      52: aload         5
      54: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #23                 // class org/xbill/DNS/dnssec/SRRset
      62: astore        6
      64: aload         6
      66: invokevirtual #29                 // Method org/xbill/DNS/dnssec/SRRset.getType:()I
      69: iload_2
      70: if_icmpne     83
      73: aload         4
      75: aload         6
      77: invokeinterface #34,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      82: pop
      83: goto          42
      86: aload         4
      88: areturn

  public int getRcode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field header:Lorg/xbill/DNS/Header;
       4: invokevirtual #43                 // Method org/xbill/DNS/Header.getRcode:()I
       7: istore_1
       8: aload_0
       9: getfield      #16                 // Field oPTRecord:Lorg/xbill/DNS/OPTRecord;
      12: ifnull        27
      15: iload_1
      16: aload_0
      17: getfield      #16                 // Field oPTRecord:Lorg/xbill/DNS/OPTRecord;
      20: invokevirtual #44                 // Method org/xbill/DNS/OPTRecord.getExtendedRcode:()I
      23: iconst_4
      24: ishl
      25: iadd
      26: istore_1
      27: iload_1
      28: ireturn

  public org.xbill.DNS.dnssec.SecurityStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #8                  // Field securityStatus:Lorg/xbill/DNS/dnssec/SecurityStatus;
       4: areturn

  public void setStatus(org.xbill.DNS.dnssec.SecurityStatus, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokevirtual #45                 // Method setStatus:(Lorg/xbill/DNS/dnssec/SecurityStatus;ILjava/lang/String;)V
       7: return

  public void setStatus(org.xbill.DNS.dnssec.SecurityStatus, int, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field securityStatus:Lorg/xbill/DNS/dnssec/SecurityStatus;
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field edeReason:I
      10: aload_0
      11: aload_3
      12: putfield      #46                 // Field bogusReason:Ljava/lang/String;
      15: aload_3
      16: ifnull        30
      19: getstatic     #47                 // Field log:Lorg/slf4j/Logger;
      22: ldc           #48                 // String Setting bad reason for message to {}
      24: aload_3
      25: invokeinterface #49,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      30: return

  public void setBogus(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #50                 // Field org/xbill/DNS/dnssec/SecurityStatus.BOGUS:Lorg/xbill/DNS/dnssec/SecurityStatus;
       4: bipush        6
       6: aload_1
       7: invokevirtual #45                 // Method setStatus:(Lorg/xbill/DNS/dnssec/SecurityStatus;ILjava/lang/String;)V
      10: return

  public void setBogus(java.lang.String, int);
    Code:
       0: aload_0
       1: getstatic     #50                 // Field org/xbill/DNS/dnssec/SecurityStatus.BOGUS:Lorg/xbill/DNS/dnssec/SecurityStatus;
       4: iload_2
       5: aload_1
       6: invokevirtual #45                 // Method setStatus:(Lorg/xbill/DNS/dnssec/SecurityStatus;ILjava/lang/String;)V
       9: return

  public java.lang.String getBogusReason();
    Code:
       0: aload_0
       1: getfield      #46                 // Field bogusReason:Ljava/lang/String;
       4: areturn

  public int getEdeReason();
    Code:
       0: aload_0
       1: getfield      #2                  // Field edeReason:I
       4: ireturn

  public org.xbill.DNS.Message getMessage();
    Code:
       0: new           #52                 // class org/xbill/DNS/Message
       3: dup
       4: aload_0
       5: getfield      #6                  // Field header:Lorg/xbill/DNS/Header;
       8: invokevirtual #53                 // Method org/xbill/DNS/Header.getID:()I
      11: invokespecial #54                 // Method org/xbill/DNS/Message."<init>":(I)V
      14: astore_1
      15: aload_1
      16: invokevirtual #13                 // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
      19: astore_2
      20: aload_2
      21: aload_0
      22: getfield      #6                  // Field header:Lorg/xbill/DNS/Header;
      25: invokevirtual #55                 // Method org/xbill/DNS/Header.getOpcode:()I
      28: invokevirtual #56                 // Method org/xbill/DNS/Header.setOpcode:(I)V
      31: aload_2
      32: aload_0
      33: getfield      #6                  // Field header:Lorg/xbill/DNS/Header;
      36: invokevirtual #43                 // Method org/xbill/DNS/Header.getRcode:()I
      39: invokevirtual #57                 // Method org/xbill/DNS/Header.setRcode:(I)V
      42: iconst_0
      43: istore_3
      44: iload_3
      45: bipush        16
      47: if_icmpge     79
      50: iload_3
      51: invokestatic  #58                 // Method org/xbill/DNS/Flags.isFlag:(I)Z
      54: ifeq          73
      57: aload_0
      58: getfield      #6                  // Field header:Lorg/xbill/DNS/Header;
      61: iload_3
      62: invokevirtual #59                 // Method org/xbill/DNS/Header.getFlag:(I)Z
      65: ifeq          73
      68: aload_2
      69: iload_3
      70: invokevirtual #60                 // Method org/xbill/DNS/Header.setFlag:(I)V
      73: iinc          3, 1
      76: goto          44
      79: aload_0
      80: getfield      #12                 // Field question:Lorg/xbill/DNS/Record;
      83: ifnull        95
      86: aload_1
      87: aload_0
      88: getfield      #12                 // Field question:Lorg/xbill/DNS/Record;
      91: iconst_0
      92: invokevirtual #61                 // Method org/xbill/DNS/Message.addRecord:(Lorg/xbill/DNS/Record;I)V
      95: iconst_1
      96: istore_3
      97: iload_3
      98: iconst_3
      99: if_icmpgt     237
     102: aload_0
     103: iload_3
     104: invokevirtual #33                 // Method getSectionRRsets:(I)Ljava/util/List;
     107: astore        4
     109: aload         4
     111: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     116: astore        5
     118: aload         5
     120: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          231
     128: aload         5
     130: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #23                 // class org/xbill/DNS/dnssec/SRRset
     138: astore        6
     140: aload         6
     142: invokevirtual #62                 // Method org/xbill/DNS/dnssec/SRRset.rrs:()Ljava/util/List;
     145: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     150: astore        7
     152: aload         7
     154: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     159: ifeq          184
     162: aload         7
     164: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     169: checkcast     #63                 // class org/xbill/DNS/Record
     172: astore        8
     174: aload_1
     175: aload         8
     177: iload_3
     178: invokevirtual #61                 // Method org/xbill/DNS/Message.addRecord:(Lorg/xbill/DNS/Record;I)V
     181: goto          152
     184: aload         6
     186: invokevirtual #64                 // Method org/xbill/DNS/dnssec/SRRset.sigs:()Ljava/util/List;
     189: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     194: astore        7
     196: aload         7
     198: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     203: ifeq          228
     206: aload         7
     208: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     213: checkcast     #65                 // class org/xbill/DNS/RRSIGRecord
     216: astore        8
     218: aload_1
     219: aload         8
     221: iload_3
     222: invokevirtual #61                 // Method org/xbill/DNS/Message.addRecord:(Lorg/xbill/DNS/Record;I)V
     225: goto          196
     228: goto          118
     231: iinc          3, 1
     234: goto          97
     237: aload_0
     238: getfield      #16                 // Field oPTRecord:Lorg/xbill/DNS/OPTRecord;
     241: ifnull        253
     244: aload_1
     245: aload_0
     246: getfield      #16                 // Field oPTRecord:Lorg/xbill/DNS/OPTRecord;
     249: iconst_3
     250: invokevirtual #61                 // Method org/xbill/DNS/Message.addRecord:(Lorg/xbill/DNS/Record;I)V
     253: aload_1
     254: areturn

  public int getCount(int);
    Code:
       0: iload_1
       1: ifne          6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: iload_1
       8: invokevirtual #33                 // Method getSectionRRsets:(I)Ljava/util/List;
      11: astore_2
      12: aload_2
      13: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      18: ifeq          23
      21: iconst_0
      22: ireturn
      23: iconst_0
      24: istore_3
      25: aload_2
      26: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          66
      43: aload         4
      45: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #23                 // class org/xbill/DNS/dnssec/SRRset
      53: astore        5
      55: iload_3
      56: aload         5
      58: invokevirtual #66                 // Method org/xbill/DNS/dnssec/SRRset.size:()I
      61: iadd
      62: istore_3
      63: goto          33
      66: iload_3
      67: ireturn

  public org.xbill.DNS.dnssec.SRRset findRRset(org.xbill.DNS.Name, int, int, int);
    Code:
       0: aload_0
       1: iload         4
       3: invokespecial #26                 // Method checkSectionValidity:(I)V
       6: aload_0
       7: iload         4
       9: invokevirtual #33                 // Method getSectionRRsets:(I)Ljava/util/List;
      12: invokeinterface #19,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        5
      19: aload         5
      21: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          77
      29: aload         5
      31: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #23                 // class org/xbill/DNS/dnssec/SRRset
      39: astore        6
      41: aload         6
      43: invokevirtual #67                 // Method org/xbill/DNS/dnssec/SRRset.getName:()Lorg/xbill/DNS/Name;
      46: aload_1
      47: invokevirtual #68                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      50: ifeq          74
      53: aload         6
      55: invokevirtual #29                 // Method org/xbill/DNS/dnssec/SRRset.getType:()I
      58: iload_2
      59: if_icmpne     74
      62: aload         6
      64: invokevirtual #69                 // Method org/xbill/DNS/dnssec/SRRset.getDClass:()I
      67: iload_3
      68: if_icmpne     74
      71: aload         6
      73: areturn
      74: goto          19
      77: aconst_null
      78: areturn

  public org.xbill.DNS.dnssec.SRRset findAnswerRRset(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iconst_1
       5: invokevirtual #70                 // Method findRRset:(Lorg/xbill/DNS/Name;III)Lorg/xbill/DNS/dnssec/SRRset;
       8: areturn

  static {};
    Code:
       0: ldc           #3                  // class org/xbill/DNS/dnssec/SMessage
       2: invokestatic  #71                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #47                 // Field log:Lorg/slf4j/Logger;
       8: return
}
