Compiled from "KeyCache.java"
final class org.xbill.DNS.dnssec.KeyCache {
  public static final java.lang.String MAX_TTL_CONFIG;

  public static final java.lang.String MAX_CACHE_SIZE_CONFIG;

  private static final int DEFAULT_MAX_TTL;

  private static final int DEFAULT_MAX_CACHE_SIZE;

  private final java.util.Map<java.lang.String, org.xbill.DNS.dnssec.KeyCache$CacheEntry> cache;

  private final java.time.Clock clock;

  private long maxTtl;

  private int maxCacheSize;

  public org.xbill.DNS.dnssec.KeyCache();
    Code:
       0: aload_0
       1: invokestatic  #3                  // Method java/time/Clock.systemUTC:()Ljava/time/Clock;
       4: invokespecial #4                  // Method "<init>":(Ljava/time/Clock;)V
       7: return

  public org.xbill.DNS.dnssec.KeyCache(java.time.Clock);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #7                  // long 900l
       8: putfield      #9                  // Field maxTtl:J
      11: aload_0
      12: sipush        1000
      15: putfield      #2                  // Field maxCacheSize:I
      18: aload_0
      19: aload_1
      20: putfield      #1                  // Field clock:Ljava/time/Clock;
      23: aload_0
      24: new           #10                 // class org/xbill/DNS/dnssec/KeyCache$1
      27: dup
      28: aload_0
      29: invokespecial #11                 // Method org/xbill/DNS/dnssec/KeyCache$1."<init>":(Lorg/xbill/DNS/dnssec/KeyCache;)V
      32: invokestatic  #12                 // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      35: putfield      #13                 // Field cache:Ljava/util/Map;
      38: return

  public void init(java.util.Properties);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: ldc           #14                 // String dnsjava.dnssec.keycache.max_ttl
       8: invokevirtual #15                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_2
      12: aload_2
      13: ifnull        24
      16: aload_0
      17: aload_2
      18: invokestatic  #16                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      21: putfield      #9                  // Field maxTtl:J
      24: aload_1
      25: ldc           #17                 // String dnsjava.dnssec.keycache.max_size
      27: invokevirtual #15                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      30: astore_2
      31: aload_2
      32: ifnull        43
      35: aload_0
      36: aload_2
      37: invokestatic  #18                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      40: putfield      #2                  // Field maxCacheSize:I
      43: return

  public org.xbill.DNS.dnssec.KeyEntry find(org.xbill.DNS.Name, int);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method org/xbill/DNS/Name.labels:()I
       4: ifle          42
       7: aload_0
       8: aload_1
       9: iload_2
      10: invokespecial #20                 // Method key:(Lorg/xbill/DNS/Name;I)Ljava/lang/String;
      13: astore_3
      14: aload_0
      15: aload_3
      16: invokespecial #21                 // Method lookupEntry:(Ljava/lang/String;)Lorg/xbill/DNS/dnssec/KeyEntry;
      19: astore        4
      21: aload         4
      23: ifnull        29
      26: aload         4
      28: areturn
      29: new           #22                 // class org/xbill/DNS/Name
      32: dup
      33: aload_1
      34: iconst_1
      35: invokespecial #23                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/Name;I)V
      38: astore_1
      39: goto          0
      42: aconst_null
      43: areturn

  public void store(org.xbill.DNS.dnssec.KeyEntry);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/xbill/DNS/dnssec/KeyEntry.isGood:()Z
       4: ifne          15
       7: aload_1
       8: invokevirtual #25                 // Method org/xbill/DNS/dnssec/KeyEntry.isNull:()Z
      11: ifne          15
      14: return
      15: aload_1
      16: invokevirtual #26                 // Method org/xbill/DNS/dnssec/KeyEntry.getType:()I
      19: bipush        48
      21: if_icmpeq     25
      24: return
      25: aload_0
      26: aload_1
      27: invokevirtual #28                 // Method org/xbill/DNS/dnssec/KeyEntry.getName:()Lorg/xbill/DNS/Name;
      30: aload_1
      31: invokevirtual #29                 // Method org/xbill/DNS/dnssec/KeyEntry.getDClass:()I
      34: invokespecial #20                 // Method key:(Lorg/xbill/DNS/Name;I)Ljava/lang/String;
      37: astore_2
      38: new           #30                 // class org/xbill/DNS/dnssec/KeyCache$CacheEntry
      41: dup
      42: aload_0
      43: aload_1
      44: aload_0
      45: getfield      #9                  // Field maxTtl:J
      48: invokespecial #31                 // Method org/xbill/DNS/dnssec/KeyCache$CacheEntry."<init>":(Lorg/xbill/DNS/dnssec/KeyCache;Lorg/xbill/DNS/dnssec/KeyEntry;J)V
      51: astore_3
      52: aload_0
      53: getfield      #13                 // Field cache:Ljava/util/Map;
      56: aload_2
      57: aload_3
      58: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: return

  private java.lang.String key(org.xbill.DNS.Name, int);
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #35                 // String K
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: iload_2
      13: invokevirtual #37                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: ldc           #38                 // String /
      18: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_1
      22: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      25: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: areturn

  private org.xbill.DNS.dnssec.KeyEntry lookupEntry(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field cache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #30                 // class org/xbill/DNS/dnssec/KeyCache$CacheEntry
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_2
      21: invokestatic  #42                 // Method org/xbill/DNS/dnssec/KeyCache$CacheEntry.access$100:(Lorg/xbill/DNS/dnssec/KeyCache$CacheEntry;)Ljava/time/Instant;
      24: aload_0
      25: getfield      #1                  // Field clock:Ljava/time/Clock;
      28: invokevirtual #43                 // Method java/time/Clock.instant:()Ljava/time/Instant;
      31: invokevirtual #44                 // Method java/time/Instant.isBefore:(Ljava/time/Instant;)Z
      34: ifeq          50
      37: aload_0
      38: getfield      #13                 // Field cache:Ljava/util/Map;
      41: aload_1
      42: invokeinterface #45,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aconst_null
      49: areturn
      50: aload_2
      51: invokestatic  #46                 // Method org/xbill/DNS/dnssec/KeyCache$CacheEntry.access$200:(Lorg/xbill/DNS/dnssec/KeyCache$CacheEntry;)Lorg/xbill/DNS/dnssec/KeyEntry;
      54: areturn

  static int access$000(org.xbill.DNS.dnssec.KeyCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxCacheSize:I
       4: ireturn

  static java.time.Clock access$300(org.xbill.DNS.dnssec.KeyCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field clock:Ljava/time/Clock;
       4: areturn
}
