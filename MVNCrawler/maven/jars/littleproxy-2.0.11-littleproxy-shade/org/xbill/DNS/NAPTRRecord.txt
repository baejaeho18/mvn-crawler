Compiled from "NAPTRRecord.java"
public class org.xbill.DNS.NAPTRRecord extends org.xbill.DNS.Record {
  private int order;

  private int preference;

  private byte[] flags;

  private byte[] service;

  private byte[] regexp;

  private org.xbill.DNS.Name replacement;

  org.xbill.DNS.NAPTRRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  public org.xbill.DNS.NAPTRRecord(org.xbill.DNS.Name, int, long, int, int, java.lang.String, java.lang.String, java.lang.String, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        35
       4: iload_2
       5: lload_3
       6: invokespecial #3                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #4                  // String order
      12: iload         5
      14: invokestatic  #5                  // Method checkU16:(Ljava/lang/String;I)I
      17: putfield      #6                  // Field order:I
      20: aload_0
      21: ldc           #7                  // String preference
      23: iload         6
      25: invokestatic  #5                  // Method checkU16:(Ljava/lang/String;I)I
      28: putfield      #8                  // Field preference:I
      31: aload_0
      32: aload         7
      34: invokestatic  #9                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      37: putfield      #10                 // Field flags:[B
      40: aload_0
      41: aload         8
      43: invokestatic  #9                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      46: putfield      #11                 // Field service:[B
      49: aload_0
      50: aload         9
      52: invokestatic  #9                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      55: putfield      #12                 // Field regexp:[B
      58: goto          76
      61: astore        11
      63: new           #14                 // class java/lang/IllegalArgumentException
      66: dup
      67: aload         11
      69: invokevirtual #15                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      72: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_0
      77: ldc           #17                 // String replacement
      79: aload         10
      81: invokestatic  #18                 // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      84: putfield      #19                 // Field replacement:Lorg/xbill/DNS/Name;
      87: return
    Exception table:
       from    to  target type
          31    58    61   Class org/xbill/DNS/TextParseException

  protected void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: putfield      #6                  // Field order:I
       8: aload_0
       9: aload_1
      10: invokevirtual #20                 // Method org/xbill/DNS/DNSInput.readU16:()I
      13: putfield      #8                  // Field preference:I
      16: aload_0
      17: aload_1
      18: invokevirtual #21                 // Method org/xbill/DNS/DNSInput.readCountedString:()[B
      21: putfield      #10                 // Field flags:[B
      24: aload_0
      25: aload_1
      26: invokevirtual #21                 // Method org/xbill/DNS/DNSInput.readCountedString:()[B
      29: putfield      #11                 // Field service:[B
      32: aload_0
      33: aload_1
      34: invokevirtual #21                 // Method org/xbill/DNS/DNSInput.readCountedString:()[B
      37: putfield      #12                 // Field regexp:[B
      40: aload_0
      41: new           #22                 // class org/xbill/DNS/Name
      44: dup
      45: aload_1
      46: invokespecial #23                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
      49: putfield      #19                 // Field replacement:Lorg/xbill/DNS/Name;
      52: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
       5: putfield      #6                  // Field order:I
       8: aload_0
       9: aload_1
      10: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
      13: putfield      #8                  // Field preference:I
      16: aload_0
      17: aload_1
      18: invokevirtual #25                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      21: invokestatic  #9                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      24: putfield      #10                 // Field flags:[B
      27: aload_0
      28: aload_1
      29: invokevirtual #25                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      32: invokestatic  #9                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      35: putfield      #11                 // Field service:[B
      38: aload_0
      39: aload_1
      40: invokevirtual #25                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      43: invokestatic  #9                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      46: putfield      #12                 // Field regexp:[B
      49: goto          62
      52: astore_3
      53: aload_1
      54: aload_3
      55: invokevirtual #15                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      58: invokevirtual #26                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      61: athrow
      62: aload_0
      63: aload_1
      64: aload_2
      65: invokevirtual #27                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      68: putfield      #19                 // Field replacement:Lorg/xbill/DNS/Name;
      71: return
    Exception table:
       from    to  target type
          16    49    52   Class org/xbill/DNS/TextParseException

  protected java.lang.String rrToString();
    Code:
       0: new           #28                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field order:I
      13: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #31                 // String
      20: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field preference:I
      29: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: ldc           #31                 // String
      36: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #10                 // Field flags:[B
      45: iconst_1
      46: invokestatic  #33                 // Method byteArrayToString:([BZ)Ljava/lang/String;
      49: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: aload_1
      54: ldc           #31                 // String
      56: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_1
      61: aload_0
      62: getfield      #11                 // Field service:[B
      65: iconst_1
      66: invokestatic  #33                 // Method byteArrayToString:([BZ)Ljava/lang/String;
      69: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: aload_1
      74: ldc           #31                 // String
      76: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_1
      81: aload_0
      82: getfield      #12                 // Field regexp:[B
      85: iconst_1
      86: invokestatic  #33                 // Method byteArrayToString:([BZ)Ljava/lang/String;
      89: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: ldc           #31                 // String
      96: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: pop
     100: aload_1
     101: aload_0
     102: getfield      #19                 // Field replacement:Lorg/xbill/DNS/Name;
     105: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: pop
     109: aload_1
     110: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: areturn

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field order:I
       4: ireturn

  public int getPreference();
    Code:
       0: aload_0
       1: getfield      #8                  // Field preference:I
       4: ireturn

  public java.lang.String getFlags();
    Code:
       0: aload_0
       1: getfield      #10                 // Field flags:[B
       4: iconst_0
       5: invokestatic  #33                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn

  public java.lang.String getService();
    Code:
       0: aload_0
       1: getfield      #11                 // Field service:[B
       4: iconst_0
       5: invokestatic  #33                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn

  public java.lang.String getRegexp();
    Code:
       0: aload_0
       1: getfield      #12                 // Field regexp:[B
       4: iconst_0
       5: invokestatic  #33                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn

  public org.xbill.DNS.Name getReplacement();
    Code:
       0: aload_0
       1: getfield      #19                 // Field replacement:Lorg/xbill/DNS/Name;
       4: areturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field order:I
       5: invokevirtual #36                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field preference:I
      13: invokevirtual #36                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #10                 // Field flags:[B
      21: invokevirtual #37                 // Method org/xbill/DNS/DNSOutput.writeCountedString:([B)V
      24: aload_1
      25: aload_0
      26: getfield      #11                 // Field service:[B
      29: invokevirtual #37                 // Method org/xbill/DNS/DNSOutput.writeCountedString:([B)V
      32: aload_1
      33: aload_0
      34: getfield      #12                 // Field regexp:[B
      37: invokevirtual #37                 // Method org/xbill/DNS/DNSOutput.writeCountedString:([B)V
      40: aload_0
      41: getfield      #19                 // Field replacement:Lorg/xbill/DNS/Name;
      44: aload_1
      45: aconst_null
      46: iload_3
      47: invokevirtual #38                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      50: return

  public org.xbill.DNS.Name getAdditionalName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field replacement:Lorg/xbill/DNS/Name;
       4: areturn
}
