Compiled from "NioUdpClient.java"
class org.xbill.DNS.NioUdpClient$Transaction implements org.xbill.DNS.NioClient$KeyProcessor {
  private final byte[] data;

  private final int max;

  private final long endTime;

  private final java.nio.channels.DatagramChannel channel;

  private final java.util.concurrent.CompletableFuture<byte[]> f;

  void send() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field data:[B
       4: invokestatic  #6                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       7: astore_1
       8: ldc           #7                  // String UDP write
      10: aload_0
      11: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      14: invokevirtual #8                  // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      17: invokevirtual #9                  // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      20: aload_0
      21: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      24: invokevirtual #8                  // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      27: invokevirtual #10                 // Method java/net/DatagramSocket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      30: aload_0
      31: getfield      #5                  // Field data:[B
      34: invokestatic  #11                 // Method org/xbill/DNS/NioClient.verboseLog:(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/net/SocketAddress;[B)V
      37: aload_0
      38: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      41: aload_1
      42: aload_0
      43: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      46: invokevirtual #8                  // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
      49: invokevirtual #10                 // Method java/net/DatagramSocket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      52: invokevirtual #12                 // Method java/nio/channels/DatagramChannel.send:(Ljava/nio/ByteBuffer;Ljava/net/SocketAddress;)I
      55: istore_2
      56: iload_2
      57: ifgt          68
      60: new           #13                 // class java/io/EOFException
      63: dup
      64: invokespecial #14                 // Method java/io/EOFException."<init>":()V
      67: athrow
      68: return

  public void processReadyKey(java.nio.channels.SelectionKey);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method java/nio/channels/SelectionKey.isReadable:()Z
       4: ifne          39
       7: aload_0
       8: invokespecial #1                  // Method silentCloseChannel:()V
      11: aload_0
      12: getfield      #3                  // Field f:Ljava/util/concurrent/CompletableFuture;
      15: new           #13                 // class java/io/EOFException
      18: dup
      19: ldc           #16                 // String channel not readable
      21: invokespecial #17                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      24: invokevirtual #18                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      27: pop
      28: invokestatic  #19                 // Method org/xbill/DNS/NioUdpClient.access$400:()Ljava/util/Queue;
      31: aload_0
      32: invokeinterface #20,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      37: pop
      38: return
      39: aload_1
      40: invokevirtual #21                 // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      43: checkcast     #22                 // class java/nio/channels/DatagramChannel
      46: astore_2
      47: aload_0
      48: getfield      #23                 // Field max:I
      51: invokestatic  #24                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      54: astore_3
      55: aload_2
      56: aload_3
      57: invokevirtual #25                 // Method java/nio/channels/DatagramChannel.read:(Ljava/nio/ByteBuffer;)I
      60: istore        4
      62: iload         4
      64: ifgt          75
      67: new           #13                 // class java/io/EOFException
      70: dup
      71: invokespecial #14                 // Method java/io/EOFException."<init>":()V
      74: athrow
      75: goto          105
      78: astore        5
      80: aload_0
      81: invokespecial #1                  // Method silentCloseChannel:()V
      84: aload_0
      85: getfield      #3                  // Field f:Ljava/util/concurrent/CompletableFuture;
      88: aload         5
      90: invokevirtual #18                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      93: pop
      94: invokestatic  #19                 // Method org/xbill/DNS/NioUdpClient.access$400:()Ljava/util/Queue;
      97: aload_0
      98: invokeinterface #20,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
     103: pop
     104: return
     105: aload_3
     106: invokevirtual #27                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     109: pop
     110: iload         4
     112: newarray       byte
     114: astore        5
     116: aload_3
     117: invokevirtual #28                 // Method java/nio/ByteBuffer.array:()[B
     120: iconst_0
     121: aload         5
     123: iconst_0
     124: iload         4
     126: invokestatic  #29                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     129: ldc           #30                 // String UDP read
     131: aload_2
     132: invokevirtual #8                  // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     135: invokevirtual #9                  // Method java/net/DatagramSocket.getLocalSocketAddress:()Ljava/net/SocketAddress;
     138: aload_2
     139: invokevirtual #8                  // Method java/nio/channels/DatagramChannel.socket:()Ljava/net/DatagramSocket;
     142: invokevirtual #10                 // Method java/net/DatagramSocket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
     145: aload         5
     147: invokestatic  #11                 // Method org/xbill/DNS/NioClient.verboseLog:(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/net/SocketAddress;[B)V
     150: aload_0
     151: invokespecial #1                  // Method silentCloseChannel:()V
     154: aload_0
     155: getfield      #3                  // Field f:Ljava/util/concurrent/CompletableFuture;
     158: aload         5
     160: invokevirtual #31                 // Method java/util/concurrent/CompletableFuture.complete:(Ljava/lang/Object;)Z
     163: pop
     164: invokestatic  #19                 // Method org/xbill/DNS/NioUdpClient.access$400:()Ljava/util/Queue;
     167: aload_0
     168: invokeinterface #20,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
     173: pop
     174: return
    Exception table:
       from    to  target type
          55    75    78   Class java/io/IOException

  private void silentCloseChannel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
       4: invokevirtual #32                 // Method java/nio/channels/DatagramChannel.disconnect:()Ljava/nio/channels/DatagramChannel;
       7: pop
       8: aload_0
       9: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      12: invokevirtual #33                 // Method java/nio/channels/DatagramChannel.close:()V
      15: goto          51
      18: astore_1
      19: goto          51
      22: astore_1
      23: aload_0
      24: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      27: invokevirtual #33                 // Method java/nio/channels/DatagramChannel.close:()V
      30: goto          51
      33: astore_1
      34: goto          51
      37: astore_2
      38: aload_0
      39: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      42: invokevirtual #33                 // Method java/nio/channels/DatagramChannel.close:()V
      45: goto          49
      48: astore_3
      49: aload_2
      50: athrow
      51: return
    Exception table:
       from    to  target type
           8    15    18   Class java/io/IOException
           0     8    22   Class java/io/IOException
          23    30    33   Class java/io/IOException
           0     8    37   any
          38    45    48   Class java/io/IOException

  public org.xbill.DNS.NioUdpClient$Transaction(byte[], int, long, java.nio.channels.DatagramChannel, java.util.concurrent.CompletableFuture<byte[]>);
    Code:
       0: aload_0
       1: invokespecial #34                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field data:[B
       9: aload_0
      10: iload_2
      11: putfield      #23                 // Field max:I
      14: aload_0
      15: lload_3
      16: putfield      #2                  // Field endTime:J
      19: aload_0
      20: aload         5
      22: putfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
      25: aload_0
      26: aload         6
      28: putfield      #3                  // Field f:Ljava/util/concurrent/CompletableFuture;
      31: return

  static java.nio.channels.DatagramChannel access$000(org.xbill.DNS.NioUdpClient$Transaction);
    Code:
       0: aload_0
       1: getfield      #4                  // Field channel:Ljava/nio/channels/DatagramChannel;
       4: areturn

  static java.util.concurrent.CompletableFuture access$100(org.xbill.DNS.NioUdpClient$Transaction);
    Code:
       0: aload_0
       1: getfield      #3                  // Field f:Ljava/util/concurrent/CompletableFuture;
       4: areturn

  static long access$200(org.xbill.DNS.NioUdpClient$Transaction);
    Code:
       0: aload_0
       1: getfield      #2                  // Field endTime:J
       4: lreturn

  static void access$300(org.xbill.DNS.NioUdpClient$Transaction);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method silentCloseChannel:()V
       4: return
}
