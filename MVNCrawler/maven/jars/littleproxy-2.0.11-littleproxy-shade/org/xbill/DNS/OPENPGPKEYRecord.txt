Compiled from "OPENPGPKEYRecord.java"
public class org.xbill.DNS.OPENPGPKEYRecord extends org.xbill.DNS.Record {
  private byte[] cert;

  org.xbill.DNS.OPENPGPKEYRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  public org.xbill.DNS.OPENPGPKEYRecord(org.xbill.DNS.Name, int, long, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        61
       4: iload_2
       5: lload_3
       6: invokespecial #3                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: aload         5
      12: putfield      #4                  // Field cert:[B
      15: return

  protected void rrFromWire(org.xbill.DNS.DNSInput);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method org/xbill/DNS/DNSInput.readByteArray:()[B
       5: putfield      #4                  // Field cert:[B
       8: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method org/xbill/DNS/Tokenizer.getBase64:()[B
       5: putfield      #4                  // Field cert:[B
       8: return

  protected java.lang.String rrToString();
    Code:
       0: new           #7                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field cert:[B
      12: ifnull        62
      15: ldc           #9                  // String multiline
      17: invokestatic  #10                 // Method org/xbill/DNS/Options.check:(Ljava/lang/String;)Z
      20: ifeq          50
      23: aload_1
      24: ldc           #11                 // String (\n
      26: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: pop
      30: aload_1
      31: aload_0
      32: getfield      #4                  // Field cert:[B
      35: bipush        64
      37: ldc           #13                 // String \t
      39: iconst_1
      40: invokestatic  #14                 // Method org/xbill/DNS/utils/base64.formatString:([BILjava/lang/String;Z)Ljava/lang/String;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: goto          62
      50: aload_1
      51: aload_0
      52: getfield      #4                  // Field cert:[B
      55: invokestatic  #15                 // Method org/xbill/DNS/utils/base64.toString:([B)Ljava/lang/String;
      58: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: pop
      62: aload_1
      63: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: areturn

  public byte[] getCert();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cert:[B
       4: areturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field cert:[B
       5: invokevirtual #17                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
       8: return
}
