Compiled from "NSAPRecord.java"
public class org.xbill.DNS.NSAPRecord extends org.xbill.DNS.Record {
  private byte[] address;

  org.xbill.DNS.NSAPRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  private static byte[] checkAndConvertAddress(java.lang.String);
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_2
       3: invokevirtual #2                  // Method java/lang/String.substring:(II)Ljava/lang/String;
       6: ldc           #3                  // String 0x
       8: invokevirtual #4                  // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      11: ifne          16
      14: aconst_null
      15: areturn
      16: new           #5                  // class java/io/ByteArrayOutputStream
      19: dup
      20: invokespecial #6                  // Method java/io/ByteArrayOutputStream."<init>":()V
      23: astore_1
      24: iconst_0
      25: istore_2
      26: iconst_0
      27: istore_3
      28: iconst_2
      29: istore        4
      31: iload         4
      33: aload_0
      34: invokevirtual #7                  // Method java/lang/String.length:()I
      37: if_icmpge     107
      40: aload_0
      41: iload         4
      43: invokevirtual #8                  // Method java/lang/String.charAt:(I)C
      46: istore        5
      48: iload         5
      50: bipush        46
      52: if_icmpne     58
      55: goto          101
      58: iload         5
      60: bipush        16
      62: invokestatic  #9                  // Method java/lang/Character.digit:(CI)I
      65: istore        6
      67: iload         6
      69: iconst_m1
      70: if_icmpne     75
      73: aconst_null
      74: areturn
      75: iload_2
      76: ifeq          94
      79: iload_3
      80: iload         6
      82: iadd
      83: istore_3
      84: aload_1
      85: iload_3
      86: invokevirtual #10                 // Method java/io/ByteArrayOutputStream.write:(I)V
      89: iconst_0
      90: istore_2
      91: goto          101
      94: iload         6
      96: iconst_4
      97: ishl
      98: istore_3
      99: iconst_1
     100: istore_2
     101: iinc          4, 1
     104: goto          31
     107: iload_2
     108: ifeq          113
     111: aconst_null
     112: areturn
     113: aload_1
     114: invokevirtual #11                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
     117: areturn

  public org.xbill.DNS.NSAPRecord(org.xbill.DNS.Name, int, long, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        22
       4: iload_2
       5: lload_3
       6: invokespecial #13                 // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: aload         5
      12: invokestatic  #14                 // Method checkAndConvertAddress:(Ljava/lang/String;)[B
      15: putfield      #15                 // Field address:[B
      18: aload_0
      19: getfield      #15                 // Field address:[B
      22: ifnonnull     53
      25: new           #16                 // class java/lang/IllegalArgumentException
      28: dup
      29: new           #17                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #19                 // String invalid NSAP address
      38: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload         5
      43: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: return

  protected void rrFromWire(org.xbill.DNS.DNSInput);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
       5: putfield      #15                 // Field address:[B
       8: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokestatic  #14                 // Method checkAndConvertAddress:(Ljava/lang/String;)[B
      10: putfield      #15                 // Field address:[B
      13: aload_0
      14: getfield      #15                 // Field address:[B
      17: ifnonnull     44
      20: aload_1
      21: new           #17                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #19                 // String invalid NSAP address
      30: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_3
      34: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #25                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      43: athrow
      44: return

  public java.lang.String getAddress();
    Code:
       0: aload_0
       1: getfield      #15                 // Field address:[B
       4: iconst_0
       5: invokestatic  #26                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #15                 // Field address:[B
       5: invokevirtual #27                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
       8: return

  protected java.lang.String rrToString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #3                  // String 0x
       9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #15                 // Field address:[B
      16: invokestatic  #28                 // Method org/xbill/DNS/utils/base16.toString:([B)Ljava/lang/String;
      19: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn
}
