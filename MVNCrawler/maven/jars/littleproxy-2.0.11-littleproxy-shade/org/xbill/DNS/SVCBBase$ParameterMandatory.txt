Compiled from "SVCBBase.java"
public class org.xbill.DNS.SVCBBase$ParameterMandatory extends org.xbill.DNS.SVCBBase$ParameterBase {
  private final java.util.List<java.lang.Integer> values;

  public org.xbill.DNS.SVCBBase$ParameterMandatory();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/xbill/DNS/SVCBBase$ParameterBase."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayList
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #2                  // Field values:Ljava/util/List;
      15: return

  public org.xbill.DNS.SVCBBase$ParameterMandatory(java.util.List<java.lang.Integer>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/xbill/DNS/SVCBBase$ParameterBase."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field values:Ljava/util/List;
       9: return

  public java.util.List<java.lang.Integer> getValues();
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:Ljava/util/List;
       4: areturn

  public int getKey();
    Code:
       0: iconst_0
       1: ireturn

  public void fromWire(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.clear:()V
       9: new           #7                  // class org/xbill/DNS/DNSInput
      12: dup
      13: aload_1
      14: invokespecial #8                  // Method org/xbill/DNS/DNSInput."<init>":([B)V
      17: astore_2
      18: aload_2
      19: invokevirtual #9                  // Method org/xbill/DNS/DNSInput.remaining:()I
      22: iconst_2
      23: if_icmplt     48
      26: aload_2
      27: invokevirtual #10                 // Method org/xbill/DNS/DNSInput.readU16:()I
      30: istore_3
      31: aload_0
      32: getfield      #2                  // Field values:Ljava/util/List;
      35: iload_3
      36: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      39: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: goto          18
      48: aload_2
      49: invokevirtual #9                  // Method org/xbill/DNS/DNSInput.remaining:()I
      52: ifle          65
      55: new           #13                 // class org/xbill/DNS/WireParseException
      58: dup
      59: ldc           #14                 // String Unexpected number of bytes in mandatory parameter
      61: invokespecial #15                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: return

  public void fromString(java.lang.String) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:Ljava/util/List;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/List.clear:()V
       9: aload_1
      10: ifnull        20
      13: aload_1
      14: invokevirtual #16                 // Method java/lang/String.isEmpty:()Z
      17: ifeq          30
      20: new           #17                 // class org/xbill/DNS/TextParseException
      23: dup
      24: ldc           #18                 // String Non-empty list must be specified for mandatory
      26: invokespecial #19                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_1
      31: invokestatic  #20                 // Method splitStringWithEscapedCommas:(Ljava/lang/String;)[Ljava/lang/String;
      34: astore_2
      35: aload_2
      36: arraylength
      37: istore_3
      38: iconst_0
      39: istore        4
      41: iload         4
      43: iload_3
      44: if_icmpge     149
      47: aload_2
      48: iload         4
      50: aaload
      51: astore        5
      53: invokestatic  #21                 // Method org/xbill/DNS/SVCBBase.access$000:()Lorg/xbill/DNS/SVCBBase$ParameterMnemonic;
      56: aload         5
      58: invokevirtual #22                 // Method org/xbill/DNS/SVCBBase$ParameterMnemonic.getValue:(Ljava/lang/String;)I
      61: istore        6
      63: iload         6
      65: ifne          78
      68: new           #17                 // class org/xbill/DNS/TextParseException
      71: dup
      72: ldc           #23                 // String Key mandatory must not appear in its own list
      74: invokespecial #19                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: getfield      #2                  // Field values:Ljava/util/List;
      82: iload         6
      84: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      87: invokeinterface #24,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      92: ifeq          128
      95: new           #17                 // class org/xbill/DNS/TextParseException
      98: dup
      99: new           #25                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #27                 // String Duplicate key
     108: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload         5
     113: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #29                 // String  not allowed in mandatory list
     118: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokespecial #19                 // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
     127: athrow
     128: aload_0
     129: getfield      #2                  // Field values:Ljava/util/List;
     132: iload         6
     134: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     137: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     142: pop
     143: iinc          4, 1
     146: goto          41
     149: return

  public byte[] toWire();
    Code:
       0: new           #31                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #32                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field values:Ljava/util/List;
      12: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          48
      27: aload_2
      28: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #36                 // class java/lang/Integer
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
      42: invokevirtual #38                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      45: goto          18
      48: aload_1
      49: invokevirtual #39                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      52: areturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field values:Ljava/util/List;
      12: invokeinterface #33,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          69
      27: aload_2
      28: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #36                 // class java/lang/Integer
      36: astore_3
      37: aload_1
      38: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
      41: ifle          51
      44: aload_1
      45: ldc           #41                 // String ,
      47: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: aload_1
      52: invokestatic  #21                 // Method org/xbill/DNS/SVCBBase.access$000:()Lorg/xbill/DNS/SVCBBase$ParameterMnemonic;
      55: aload_3
      56: invokevirtual #37                 // Method java/lang/Integer.intValue:()I
      59: invokevirtual #42                 // Method org/xbill/DNS/SVCBBase$ParameterMnemonic.getText:(I)Ljava/lang/String;
      62: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: goto          18
      69: aload_1
      70: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn

  static java.util.List access$100(org.xbill.DNS.SVCBBase$ParameterMandatory);
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:Ljava/util/List;
       4: areturn
}
