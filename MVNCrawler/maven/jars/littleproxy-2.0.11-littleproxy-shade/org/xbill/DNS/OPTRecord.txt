Compiled from "OPTRecord.java"
public class org.xbill.DNS.OPTRecord extends org.xbill.DNS.Record {
  private java.util.List<org.xbill.DNS.EDNSOption> options;

  org.xbill.DNS.OPTRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  public org.xbill.DNS.OPTRecord(int, int, int, int, org.xbill.DNS.EDNSOption...);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #2                  // Method "<init>":(IIII)V
       9: aload         5
      11: ifnull        30
      14: aload_0
      15: new           #3                  // class java/util/ArrayList
      18: dup
      19: aload         5
      21: invokestatic  #4                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      24: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      27: putfield      #6                  // Field options:Ljava/util/List;
      30: return

  public org.xbill.DNS.OPTRecord(int, int, int, int, java.util.List<org.xbill.DNS.EDNSOption>);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #2                  // Method "<init>":(IIII)V
       9: aload         5
      11: ifnull        27
      14: aload_0
      15: new           #3                  // class java/util/ArrayList
      18: dup
      19: aload         5
      21: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      24: putfield      #6                  // Field options:Ljava/util/List;
      27: return

  public org.xbill.DNS.OPTRecord(int, int, int, int);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
       4: bipush        41
       6: iload_1
       7: lconst_0
       8: invokespecial #9                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
      11: ldc           #10                 // String payloadSize
      13: iload_1
      14: invokestatic  #11                 // Method checkU16:(Ljava/lang/String;I)I
      17: pop
      18: ldc           #12                 // String xrcode
      20: iload_2
      21: invokestatic  #13                 // Method checkU8:(Ljava/lang/String;I)I
      24: pop
      25: ldc           #14                 // String version
      27: iload_3
      28: invokestatic  #13                 // Method checkU8:(Ljava/lang/String;I)I
      31: pop
      32: ldc           #15                 // String flags
      34: iload         4
      36: invokestatic  #11                 // Method checkU16:(Ljava/lang/String;I)I
      39: pop
      40: aload_0
      41: iload_2
      42: i2l
      43: bipush        24
      45: lshl
      46: iload_3
      47: i2l
      48: bipush        16
      50: lshl
      51: ladd
      52: iload         4
      54: i2l
      55: ladd
      56: putfield      #16                 // Field ttl:J
      59: return

  public org.xbill.DNS.OPTRecord(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: iconst_0
       5: invokespecial #2                  // Method "<init>":(IIII)V
       8: return

  protected void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #17                 // Method org/xbill/DNS/DNSInput.remaining:()I
       4: ifle          18
       7: aload_0
       8: new           #3                  // class java/util/ArrayList
      11: dup
      12: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      15: putfield      #6                  // Field options:Ljava/util/List;
      18: aload_1
      19: invokevirtual #17                 // Method org/xbill/DNS/DNSInput.remaining:()I
      22: ifle          44
      25: aload_1
      26: invokestatic  #19                 // Method org/xbill/DNS/EDNSOption.fromWire:(Lorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/EDNSOption;
      29: astore_2
      30: aload_0
      31: getfield      #6                  // Field options:Ljava/util/List;
      34: aload_2
      35: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: goto          18
      44: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #21                 // String no text format defined for OPT
       3: invokevirtual #22                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
       6: athrow

  protected java.lang.String rrToString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field options:Ljava/util/List;
      12: ifnull        31
      15: aload_1
      16: aload_0
      17: getfield      #6                  // Field options:Ljava/util/List;
      20: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #26                 // String
      27: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #28                 // String  ; payload
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: invokevirtual #29                 // Method getPayloadSize:()I
      43: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #31                 // String , xrcode
      50: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: aload_0
      56: invokevirtual #32                 // Method getExtendedRcode:()I
      59: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: ldc           #33                 // String , version
      66: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: aload_1
      71: aload_0
      72: invokevirtual #34                 // Method getVersion:()I
      75: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: pop
      79: aload_1
      80: ldc           #35                 // String , flags
      82: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: aload_1
      87: aload_0
      88: invokevirtual #36                 // Method getFlags:()I
      91: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      94: pop
      95: aload_1
      96: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: areturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: getstatic     #7                  // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      10: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      13: ldc           #38                 // String \t\t\t\t
      15: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: aload_0
      19: getfield      #39                 // Field type:I
      22: invokestatic  #40                 // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #41                 // String \t
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #42                 // Method rrToString:()Ljava/lang/String;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  void printPseudoSection(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: ldc           #43                 // String ;; OPT PSEUDOSECTION: \n; EDNS: version:
       3: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
       6: pop
       7: aload_1
       8: aload_0
       9: invokevirtual #34                 // Method getVersion:()I
      12: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      15: pop
      16: aload_1
      17: ldc           #44                 // String ; flags:
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: pop
      23: iconst_0
      24: istore_2
      25: iload_2
      26: bipush        16
      28: if_icmpge     67
      31: aload_0
      32: invokevirtual #36                 // Method getFlags:()I
      35: iconst_1
      36: bipush        15
      38: iload_2
      39: isub
      40: ishl
      41: iand
      42: ifeq          61
      45: aload_1
      46: iload_2
      47: invokestatic  #45                 // Method org/xbill/DNS/ExtendedFlags.stringFromBit:(I)Ljava/lang/String;
      50: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: ldc           #26                 // String
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: iinc          2, 1
      64: goto          25
      67: aload_1
      68: ldc           #46                 // String ; udp:
      70: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #29                 // Method getPayloadSize:()I
      77: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      80: pop
      81: aload_0
      82: getfield      #6                  // Field options:Ljava/util/List;
      85: ifnull        149
      88: aload_0
      89: getfield      #6                  // Field options:Ljava/util/List;
      92: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      97: astore_2
      98: aload_2
      99: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     104: ifeq          149
     107: aload_2
     108: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     113: checkcast     #50                 // class org/xbill/DNS/EDNSOption
     116: astore_3
     117: aload_1
     118: ldc           #51                 // String \n;
     120: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_3
     124: invokevirtual #52                 // Method org/xbill/DNS/EDNSOption.getCode:()I
     127: invokestatic  #53                 // Method org/xbill/DNS/EDNSOption$Code.string:(I)Ljava/lang/String;
     130: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: ldc           #54                 // String :
     135: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: aload_3
     139: invokevirtual #55                 // Method org/xbill/DNS/EDNSOption.optionToString:()Ljava/lang/String;
     142: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: pop
     146: goto          98
     149: return

  public int getPayloadSize();
    Code:
       0: aload_0
       1: getfield      #56                 // Field dclass:I
       4: ireturn

  public int getExtendedRcode();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ttl:J
       4: bipush        24
       6: lushr
       7: l2i
       8: ireturn

  public int getVersion();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ttl:J
       4: bipush        16
       6: lushr
       7: ldc2_w        #57                 // long 255l
      10: land
      11: l2i
      12: ireturn

  public int getFlags();
    Code:
       0: aload_0
       1: getfield      #16                 // Field ttl:J
       4: ldc2_w        #59                 // long 65535l
       7: land
       8: l2i
       9: ireturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field options:Ljava/util/List;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: getfield      #6                  // Field options:Ljava/util/List;
      12: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore        4
      19: aload         4
      21: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          50
      29: aload         4
      31: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #50                 // class org/xbill/DNS/EDNSOption
      39: astore        5
      41: aload         5
      43: aload_1
      44: invokevirtual #61                 // Method org/xbill/DNS/EDNSOption.toWire:(Lorg/xbill/DNS/DNSOutput;)V
      47: goto          19
      50: return

  public java.util.List<org.xbill.DNS.EDNSOption> getOptions();
    Code:
       0: aload_0
       1: getfield      #6                  // Field options:Ljava/util/List;
       4: ifnonnull     11
       7: invokestatic  #62                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: aload_0
      12: getfield      #6                  // Field options:Ljava/util/List;
      15: invokestatic  #63                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      18: areturn

  public java.util.List<org.xbill.DNS.EDNSOption> getOptions(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field options:Ljava/util/List;
       4: ifnonnull     11
       7: invokestatic  #62                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: new           #3                  // class java/util/ArrayList
      14: dup
      15: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      18: astore_2
      19: aload_0
      20: getfield      #6                  // Field options:Ljava/util/List;
      23: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      28: astore_3
      29: aload_3
      30: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          70
      38: aload_3
      39: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #50                 // class org/xbill/DNS/EDNSOption
      47: astore        4
      49: aload         4
      51: invokevirtual #52                 // Method org/xbill/DNS/EDNSOption.getCode:()I
      54: iload_1
      55: if_icmpne     67
      58: aload_2
      59: aload         4
      61: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      66: pop
      67: goto          29
      70: aload_2
      71: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #64                 // Method org/xbill/DNS/Record.equals:(Ljava/lang/Object;)Z
       5: ifeq          27
       8: aload_0
       9: getfield      #16                 // Field ttl:J
      12: aload_1
      13: checkcast     #65                 // class org/xbill/DNS/OPTRecord
      16: getfield      #16                 // Field ttl:J
      19: lcmp
      20: ifne          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method toWireCanonical:()[B
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_1
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     48
      23: aload_3
      24: iload         5
      26: baload
      27: istore        6
      29: iload_2
      30: iload_2
      31: iconst_3
      32: ishl
      33: iload         6
      35: sipush        255
      38: iand
      39: iadd
      40: iadd
      41: istore_2
      42: iinc          5, 1
      45: goto          16
      48: iload_2
      49: ireturn
}
