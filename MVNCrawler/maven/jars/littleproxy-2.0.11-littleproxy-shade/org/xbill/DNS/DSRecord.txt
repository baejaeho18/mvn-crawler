Compiled from "DSRecord.java"
public class org.xbill.DNS.DSRecord extends org.xbill.DNS.Record {
  public static final int SHA1_DIGEST_ID;

  public static final int SHA256_DIGEST_ID;

  public static final int GOST3411_DIGEST_ID;

  public static final int SHA384_DIGEST_ID;

  private int footprint;

  private int alg;

  private int digestid;

  private byte[] digest;

  org.xbill.DNS.DSRecord();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  protected org.xbill.DNS.DSRecord(org.xbill.DNS.Name, int, int, long, int, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: lload         4
       6: invokespecial #3                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #4                  // String footprint
      12: iload         6
      14: invokestatic  #5                  // Method checkU16:(Ljava/lang/String;I)I
      17: putfield      #6                  // Field footprint:I
      20: aload_0
      21: ldc           #7                  // String alg
      23: iload         7
      25: invokestatic  #8                  // Method checkU8:(Ljava/lang/String;I)I
      28: putfield      #9                  // Field alg:I
      31: aload_0
      32: ldc           #10                 // String digestid
      34: iload         8
      36: invokestatic  #8                  // Method checkU8:(Ljava/lang/String;I)I
      39: putfield      #11                 // Field digestid:I
      42: aload_0
      43: aload         9
      45: putfield      #12                 // Field digest:[B
      48: return

  public org.xbill.DNS.DSRecord(org.xbill.DNS.Name, int, long, int, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        43
       4: iload_2
       5: lload_3
       6: iload         5
       8: iload         6
      10: iload         7
      12: aload         8
      14: invokespecial #14                 // Method "<init>":(Lorg/xbill/DNS/Name;IIJIII[B)V
      17: return

  public org.xbill.DNS.DSRecord(org.xbill.DNS.Name, int, long, int, org.xbill.DNS.DNSKEYRecord);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: lload_3
       4: aload         6
       6: invokevirtual #15                 // Method org/xbill/DNS/DNSKEYRecord.getFootprint:()I
       9: aload         6
      11: invokevirtual #16                 // Method org/xbill/DNS/DNSKEYRecord.getAlgorithm:()I
      14: iload         5
      16: aload         6
      18: iload         5
      20: invokestatic  #17                 // Method org/xbill/DNS/DNSSEC.generateDSDigest:(Lorg/xbill/DNS/DNSKEYRecord;I)[B
      23: invokespecial #18                 // Method "<init>":(Lorg/xbill/DNS/Name;IJIII[B)V
      26: return

  protected void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: putfield      #6                  // Field footprint:I
       8: aload_0
       9: aload_1
      10: invokevirtual #20                 // Method org/xbill/DNS/DNSInput.readU8:()I
      13: putfield      #9                  // Field alg:I
      16: aload_0
      17: aload_1
      18: invokevirtual #20                 // Method org/xbill/DNS/DNSInput.readU8:()I
      21: putfield      #11                 // Field digestid:I
      24: aload_0
      25: aload_1
      26: invokevirtual #21                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
      29: putfield      #12                 // Field digest:[B
      32: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
       5: putfield      #6                  // Field footprint:I
       8: aload_0
       9: aload_1
      10: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
      13: putfield      #9                  // Field alg:I
      16: aload_0
      17: aload_1
      18: invokevirtual #23                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
      21: putfield      #11                 // Field digestid:I
      24: aload_0
      25: aload_1
      26: iconst_1
      27: invokevirtual #24                 // Method org/xbill/DNS/Tokenizer.getHex:(Z)[B
      30: putfield      #12                 // Field digest:[B
      33: return

  protected java.lang.String rrToString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field footprint:I
      13: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #28                 // String
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #9                  // Field alg:I
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: ldc           #28                 // String
      36: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: aload_0
      42: getfield      #11                 // Field digestid:I
      45: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: pop
      49: aload_0
      50: getfield      #12                 // Field digest:[B
      53: ifnull        75
      56: aload_1
      57: ldc           #28                 // String
      59: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: pop
      63: aload_1
      64: aload_0
      65: getfield      #12                 // Field digest:[B
      68: invokestatic  #30                 // Method org/xbill/DNS/utils/base16.toString:([B)Ljava/lang/String;
      71: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: pop
      75: aload_1
      76: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn

  public int getAlgorithm();
    Code:
       0: aload_0
       1: getfield      #9                  // Field alg:I
       4: ireturn

  public int getDigestID();
    Code:
       0: aload_0
       1: getfield      #11                 // Field digestid:I
       4: ireturn

  public byte[] getDigest();
    Code:
       0: aload_0
       1: getfield      #12                 // Field digest:[B
       4: areturn

  public int getFootprint();
    Code:
       0: aload_0
       1: getfield      #6                  // Field footprint:I
       4: ireturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field footprint:I
       5: invokevirtual #32                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #9                  // Field alg:I
      13: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #11                 // Field digestid:I
      21: invokevirtual #33                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      24: aload_0
      25: getfield      #12                 // Field digest:[B
      28: ifnull        39
      31: aload_1
      32: aload_0
      33: getfield      #12                 // Field digest:[B
      36: invokevirtual #34                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      39: return
}
