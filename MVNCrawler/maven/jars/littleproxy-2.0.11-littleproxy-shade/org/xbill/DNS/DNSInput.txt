Compiled from "DNSInput.java"
public class org.xbill.DNS.DNSInput {
  private final java.nio.ByteBuffer byteBuffer;

  private final int offset;

  private final int limit;

  private int savedPos;

  private int savedEnd;

  public org.xbill.DNS.DNSInput(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
       5: invokespecial #2                  // Method "<init>":(Ljava/nio/ByteBuffer;)V
       8: return

  public org.xbill.DNS.DNSInput(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       9: aload_0
      10: aload_1
      11: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      14: putfield      #6                  // Field offset:I
      17: aload_0
      18: aload_1
      19: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:()I
      22: putfield      #8                  // Field limit:I
      25: aload_0
      26: iconst_m1
      27: putfield      #9                  // Field savedPos:I
      30: aload_0
      31: iconst_m1
      32: putfield      #10                 // Field savedEnd:I
      35: return

  public int current();
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
       7: aload_0
       8: getfield      #6                  // Field offset:I
      11: isub
      12: ireturn

  public int remaining();
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #11                 // Method java/nio/ByteBuffer.remaining:()I
       7: ireturn

  private void require(int) throws org.xbill.DNS.WireParseException;
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #12                 // Method remaining:()I
       5: if_icmple     18
       8: new           #13                 // class org/xbill/DNS/WireParseException
      11: dup
      12: ldc           #14                 // String end of input
      14: invokespecial #15                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: return

  public void setActive(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #8                  // Field limit:I
       5: aload_0
       6: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       9: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      12: isub
      13: if_icmple     26
      16: new           #16                 // class java/lang/IllegalArgumentException
      19: dup
      20: ldc           #17                 // String cannot set active region past end of input
      22: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_0
      27: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      30: aload_0
      31: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      34: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
      37: iload_1
      38: iadd
      39: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      42: pop
      43: return

  public void clearActive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: aload_0
       5: getfield      #8                  // Field limit:I
       8: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      11: pop
      12: return

  public int saveActive();
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:()I
       7: aload_0
       8: getfield      #6                  // Field offset:I
      11: isub
      12: ireturn

  public void restoreActive(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field offset:I
       5: iadd
       6: aload_0
       7: getfield      #8                  // Field limit:I
      10: if_icmple     23
      13: new           #16                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #17                 // String cannot set active region past end of input
      19: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      27: iload_1
      28: aload_0
      29: getfield      #6                  // Field offset:I
      32: iadd
      33: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      36: pop
      37: return

  public void jump(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #6                  // Field offset:I
       5: iadd
       6: aload_0
       7: getfield      #8                  // Field limit:I
      10: if_icmplt     23
      13: new           #16                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #20                 // String cannot jump past end of input
      19: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      27: aload_0
      28: getfield      #6                  // Field offset:I
      31: iload_1
      32: iadd
      33: invokevirtual #21                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_0
      38: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      41: aload_0
      42: getfield      #8                  // Field limit:I
      45: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      48: pop
      49: return

  public void save();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       5: invokevirtual #5                  // Method java/nio/ByteBuffer.position:()I
       8: putfield      #9                  // Field savedPos:I
      11: aload_0
      12: aload_0
      13: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #7                  // Method java/nio/ByteBuffer.limit:()I
      19: putfield      #10                 // Field savedEnd:I
      22: return

  public void restore();
    Code:
       0: aload_0
       1: getfield      #9                  // Field savedPos:I
       4: ifge          17
       7: new           #22                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #23                 // String no previous state
      13: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      21: aload_0
      22: getfield      #9                  // Field savedPos:I
      25: invokevirtual #21                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      28: pop
      29: aload_0
      30: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      33: aload_0
      34: getfield      #10                 // Field savedEnd:I
      37: invokevirtual #19                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      40: pop
      41: aload_0
      42: iconst_m1
      43: putfield      #9                  // Field savedPos:I
      46: aload_0
      47: iconst_m1
      48: putfield      #10                 // Field savedEnd:I
      51: return

  public int readU8() throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #25                 // Method require:(I)V
       5: aload_0
       6: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       9: invokevirtual #26                 // Method java/nio/ByteBuffer.get:()B
      12: sipush        255
      15: iand
      16: ireturn

  public int readU16() throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #25                 // Method require:(I)V
       5: aload_0
       6: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       9: invokevirtual #27                 // Method java/nio/ByteBuffer.getShort:()S
      12: ldc           #28                 // int 65535
      14: iand
      15: ireturn

  public long readU32() throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokespecial #25                 // Method require:(I)V
       5: aload_0
       6: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       9: invokevirtual #29                 // Method java/nio/ByteBuffer.getInt:()I
      12: i2l
      13: ldc2_w        #30                 // long 4294967295l
      16: land
      17: lreturn

  public void readByteArray(byte[], int, int) throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #25                 // Method require:(I)V
       5: aload_0
       6: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       9: aload_1
      10: iload_2
      11: iload_3
      12: invokevirtual #32                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      15: pop
      16: return

  public byte[] readByteArray(int) throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #25                 // Method require:(I)V
       5: iload_1
       6: newarray       byte
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      13: aload_2
      14: iconst_0
      15: iload_1
      16: invokevirtual #32                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      19: pop
      20: aload_2
      21: areturn

  public byte[] readByteArray();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method remaining:()I
       4: istore_1
       5: iload_1
       6: newarray       byte
       8: astore_2
       9: aload_0
      10: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      13: aload_2
      14: iconst_0
      15: iload_1
      16: invokevirtual #32                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      19: pop
      20: aload_2
      21: areturn

  public byte[] readCountedString() throws org.xbill.DNS.WireParseException;
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method readU8:()I
       4: istore_1
       5: aload_0
       6: iload_1
       7: invokevirtual #34                 // Method readByteArray:(I)[B
      10: areturn
}
