Compiled from "CAARecord.java"
public class org.xbill.DNS.CAARecord extends org.xbill.DNS.Record {
  private int flags;

  private byte[] tag;

  private byte[] value;

  org.xbill.DNS.CAARecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  public org.xbill.DNS.CAARecord(org.xbill.DNS.Name, int, long, int, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        257
       5: iload_2
       6: lload_3
       7: invokespecial #3                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
      10: aload_0
      11: ldc           #4                  // String flags
      13: iload         5
      15: invokestatic  #5                  // Method checkU8:(Ljava/lang/String;I)I
      18: putfield      #6                  // Field flags:I
      21: aload_0
      22: aload         6
      24: invokestatic  #7                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      27: putfield      #8                  // Field tag:[B
      30: aload_0
      31: aload         7
      33: invokestatic  #7                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      36: putfield      #9                  // Field value:[B
      39: goto          57
      42: astore        8
      44: new           #11                 // class java/lang/IllegalArgumentException
      47: dup
      48: aload         8
      50: invokevirtual #12                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      53: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: return
    Exception table:
       from    to  target type
          21    39    42   Class org/xbill/DNS/TextParseException

  protected void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method org/xbill/DNS/DNSInput.readU8:()I
       5: putfield      #6                  // Field flags:I
       8: aload_0
       9: aload_1
      10: invokevirtual #15                 // Method org/xbill/DNS/DNSInput.readCountedString:()[B
      13: putfield      #8                  // Field tag:[B
      16: aload_0
      17: aload_1
      18: invokevirtual #16                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
      21: putfield      #9                  // Field value:[B
      24: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method org/xbill/DNS/Tokenizer.getUInt8:()I
       5: putfield      #6                  // Field flags:I
       8: aload_0
       9: aload_1
      10: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      13: invokestatic  #7                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      16: putfield      #8                  // Field tag:[B
      19: aload_0
      20: aload_1
      21: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer.getString:()Ljava/lang/String;
      24: invokestatic  #7                  // Method byteArrayFromString:(Ljava/lang/String;)[B
      27: putfield      #9                  // Field value:[B
      30: goto          43
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokevirtual #12                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      39: invokevirtual #19                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      42: athrow
      43: return
    Exception table:
       from    to  target type
           8    30    33   Class org/xbill/DNS/TextParseException

  protected java.lang.String rrToString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field flags:I
      13: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #23                 // String
      20: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: aload_0
      26: getfield      #8                  // Field tag:[B
      29: iconst_0
      30: invokestatic  #25                 // Method byteArrayToString:([BZ)Ljava/lang/String;
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_1
      38: ldc           #23                 // String
      40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: pop
      44: aload_1
      45: aload_0
      46: getfield      #9                  // Field value:[B
      49: iconst_1
      50: invokestatic  #25                 // Method byteArrayToString:([BZ)Ljava/lang/String;
      53: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: pop
      57: aload_1
      58: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: areturn

  public int getFlags();
    Code:
       0: aload_0
       1: getfield      #6                  // Field flags:I
       4: ireturn

  public java.lang.String getTag();
    Code:
       0: aload_0
       1: getfield      #8                  // Field tag:[B
       4: iconst_0
       5: invokestatic  #25                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field value:[B
       4: iconst_0
       5: invokestatic  #25                 // Method byteArrayToString:([BZ)Ljava/lang/String;
       8: areturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field flags:I
       5: invokevirtual #27                 // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field tag:[B
      13: invokevirtual #28                 // Method org/xbill/DNS/DNSOutput.writeCountedString:([B)V
      16: aload_1
      17: aload_0
      18: getfield      #9                  // Field value:[B
      21: invokevirtual #29                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      24: return
}
