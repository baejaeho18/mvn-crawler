Compiled from "Lookup.java"
public final class org.xbill.DNS.Lookup {
  private static final org.slf4j.Logger log;

  private static org.xbill.DNS.Resolver defaultResolver;

  private static java.util.List<org.xbill.DNS.Name> defaultSearchPath;

  private static java.util.Map<java.lang.Integer, org.xbill.DNS.Cache> defaultCaches;

  private static int defaultNdots;

  private static org.xbill.DNS.hosts.HostsFileParser defaultHostsFileParser;

  private org.xbill.DNS.Resolver resolver;

  private java.util.List<org.xbill.DNS.Name> searchPath;

  private int ndots;

  private org.xbill.DNS.Cache cache;

  private boolean temporary_cache;

  private int credibility;

  private final org.xbill.DNS.Name name;

  private final int type;

  private final int dclass;

  private int iterations;

  private boolean foundAlias;

  private boolean done;

  private boolean doneCurrent;

  private java.util.List<org.xbill.DNS.Name> aliases;

  private org.xbill.DNS.Record[] answers;

  private int result;

  private java.lang.String error;

  private boolean nxdomain;

  private boolean badresponse;

  private java.lang.String badresponse_error;

  private boolean networkerror;

  private boolean timedout;

  private boolean nametoolong;

  private boolean referral;

  private boolean cycleResults;

  private final int maxIterations;

  private org.xbill.DNS.hosts.HostsFileParser hostsFileParser;

  private static final org.xbill.DNS.Name[] noAliases;

  public static final int SUCCESSFUL;

  public static final int UNRECOVERABLE;

  public static final int TRY_AGAIN;

  public static final int HOST_NOT_FOUND;

  public static final int TYPE_NOT_FOUND;

  public static synchronized void refreshDefault();
    Code:
       0: new           #1                  // class org/xbill/DNS/ExtendedResolver
       3: dup
       4: invokespecial #2                  // Method org/xbill/DNS/ExtendedResolver."<init>":()V
       7: putstatic     #3                  // Field defaultResolver:Lorg/xbill/DNS/Resolver;
      10: invokestatic  #4                  // Method org/xbill/DNS/ResolverConfig.getCurrentConfig:()Lorg/xbill/DNS/ResolverConfig;
      13: invokevirtual #5                  // Method org/xbill/DNS/ResolverConfig.searchPath:()Ljava/util/List;
      16: putstatic     #6                  // Field defaultSearchPath:Ljava/util/List;
      19: new           #7                  // class java/util/HashMap
      22: dup
      23: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      26: putstatic     #9                  // Field defaultCaches:Ljava/util/Map;
      29: invokestatic  #4                  // Method org/xbill/DNS/ResolverConfig.getCurrentConfig:()Lorg/xbill/DNS/ResolverConfig;
      32: invokevirtual #10                 // Method org/xbill/DNS/ResolverConfig.ndots:()I
      35: putstatic     #11                 // Field defaultNdots:I
      38: new           #12                 // class org/xbill/DNS/hosts/HostsFileParser
      41: dup
      42: invokespecial #13                 // Method org/xbill/DNS/hosts/HostsFileParser."<init>":()V
      45: putstatic     #14                 // Field defaultHostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
      48: return

  public static synchronized org.xbill.DNS.Resolver getDefaultResolver();
    Code:
       0: getstatic     #3                  // Field defaultResolver:Lorg/xbill/DNS/Resolver;
       3: areturn

  public static synchronized void setDefaultResolver(org.xbill.DNS.Resolver);
    Code:
       0: aload_0
       1: putstatic     #3                  // Field defaultResolver:Lorg/xbill/DNS/Resolver;
       4: return

  public static synchronized org.xbill.DNS.Cache getDefaultCache(int);
    Code:
       0: iload_0
       1: invokestatic  #15                 // Method org/xbill/DNS/DClass.check:(I)V
       4: getstatic     #9                  // Field defaultCaches:Ljava/util/Map;
       7: iload_0
       8: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #18                 // class org/xbill/DNS/Cache
      19: astore_1
      20: aload_1
      21: ifnonnull     47
      24: new           #18                 // class org/xbill/DNS/Cache
      27: dup
      28: iload_0
      29: invokespecial #19                 // Method org/xbill/DNS/Cache."<init>":(I)V
      32: astore_1
      33: getstatic     #9                  // Field defaultCaches:Ljava/util/Map;
      36: iload_0
      37: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aload_1
      41: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_1
      48: areturn

  public static synchronized void setDefaultCache(org.xbill.DNS.Cache, int);
    Code:
       0: iload_1
       1: invokestatic  #15                 // Method org/xbill/DNS/DClass.check:(I)V
       4: getstatic     #9                  // Field defaultCaches:Ljava/util/Map;
       7: iload_1
       8: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: aload_0
      12: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public static synchronized java.util.List<org.xbill.DNS.Name> getDefaultSearchPath();
    Code:
       0: getstatic     #6                  // Field defaultSearchPath:Ljava/util/List;
       3: areturn

  public static synchronized void setDefaultSearchPath(java.util.List<org.xbill.DNS.Name>);
    Code:
       0: aload_0
       1: invokestatic  #21                 // Method convertSearchPathDomainList:(Ljava/util/List;)Ljava/util/List;
       4: putstatic     #6                  // Field defaultSearchPath:Ljava/util/List;
       7: return

  public static synchronized void setDefaultSearchPath(org.xbill.DNS.Name...);
    Code:
       0: aload_0
       1: invokestatic  #22                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #23                 // Method setDefaultSearchPath:(Ljava/util/List;)V
       7: return

  public static synchronized void setDefaultSearchPath(java.lang.String...) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: ifnonnull     9
       4: aconst_null
       5: putstatic     #6                  // Field defaultSearchPath:Ljava/util/List;
       8: return
       9: new           #24                 // class java/util/ArrayList
      12: dup
      13: aload_0
      14: arraylength
      15: invokespecial #25                 // Method java/util/ArrayList."<init>":(I)V
      18: astore_1
      19: aload_0
      20: astore_2
      21: aload_2
      22: arraylength
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     60
      33: aload_2
      34: iload         4
      36: aaload
      37: astore        5
      39: aload_1
      40: aload         5
      42: getstatic     #26                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      45: invokestatic  #27                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      48: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: iinc          4, 1
      57: goto          27
      60: aload_1
      61: putstatic     #6                  // Field defaultSearchPath:Ljava/util/List;
      64: return

  public static synchronized org.xbill.DNS.hosts.HostsFileParser getDefaultHostsFileParser();
    Code:
       0: getstatic     #14                 // Field defaultHostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
       3: areturn

  public static synchronized void setDefaultHostsFileParser(org.xbill.DNS.hosts.HostsFileParser);
    Code:
       0: aload_0
       1: putstatic     #14                 // Field defaultHostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
       4: return

  private static java.util.List<org.xbill.DNS.Name> convertSearchPathDomainList(java.util.List<org.xbill.DNS.Name>);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       6: invokedynamic #30,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: invokestatic  #32                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      19: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      24: checkcast     #34                 // class java/util/List
      27: areturn
      28: astore_1
      29: aload_1
      30: invokevirtual #36                 // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      33: instanceof    #37                 // class org/xbill/DNS/NameTooLongException
      36: ifeq          51
      39: new           #38                 // class java/lang/IllegalArgumentException
      42: dup
      43: aload_1
      44: invokevirtual #36                 // Method java/lang/RuntimeException.getCause:()Ljava/lang/Throwable;
      47: invokespecial #39                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      50: athrow
      51: aload_1
      52: athrow
    Exception table:
       from    to  target type
           0    27    28   Class java/lang/RuntimeException

  public static synchronized void setPacketLogger(org.xbill.DNS.PacketLogger);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method org/xbill/DNS/NioClient.setPacketLogger:(Lorg/xbill/DNS/PacketLogger;)V
       4: return

  private void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #41                 // Field iterations:I
       5: aload_0
       6: iconst_0
       7: putfield      #42                 // Field foundAlias:Z
      10: aload_0
      11: iconst_0
      12: putfield      #43                 // Field done:Z
      15: aload_0
      16: iconst_0
      17: putfield      #44                 // Field doneCurrent:Z
      20: aload_0
      21: aconst_null
      22: putfield      #45                 // Field aliases:Ljava/util/List;
      25: aload_0
      26: aconst_null
      27: putfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
      30: aload_0
      31: iconst_m1
      32: putfield      #47                 // Field result:I
      35: aload_0
      36: aconst_null
      37: putfield      #48                 // Field error:Ljava/lang/String;
      40: aload_0
      41: iconst_0
      42: putfield      #49                 // Field nxdomain:Z
      45: aload_0
      46: iconst_0
      47: putfield      #50                 // Field badresponse:Z
      50: aload_0
      51: aconst_null
      52: putfield      #51                 // Field badresponse_error:Ljava/lang/String;
      55: aload_0
      56: iconst_0
      57: putfield      #52                 // Field networkerror:Z
      60: aload_0
      61: iconst_0
      62: putfield      #53                 // Field timedout:Z
      65: aload_0
      66: iconst_0
      67: putfield      #54                 // Field nametoolong:Z
      70: aload_0
      71: iconst_0
      72: putfield      #55                 // Field referral:Z
      75: aload_0
      76: getfield      #56                 // Field temporary_cache:Z
      79: ifeq          89
      82: aload_0
      83: getfield      #57                 // Field cache:Lorg/xbill/DNS/Cache;
      86: invokevirtual #58                 // Method org/xbill/DNS/Cache.clearCache:()V
      89: return

  public org.xbill.DNS.Lookup(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: invokespecial #59                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #60                 // Field cycleResults:Z
       9: iload_2
      10: invokestatic  #61                 // Method org/xbill/DNS/Type.check:(I)V
      13: iload_3
      14: invokestatic  #15                 // Method org/xbill/DNS/DClass.check:(I)V
      17: iload_2
      18: invokestatic  #62                 // Method org/xbill/DNS/Type.isRR:(I)Z
      21: ifne          41
      24: iload_2
      25: sipush        255
      28: if_icmpeq     41
      31: new           #38                 // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #64                 // String Cannot query for meta-types other than ANY
      37: invokespecial #65                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: aload_1
      43: putfield      #66                 // Field name:Lorg/xbill/DNS/Name;
      46: aload_0
      47: iload_2
      48: putfield      #67                 // Field type:I
      51: aload_0
      52: iload_3
      53: putfield      #68                 // Field dclass:I
      56: ldc           #69                 // class org/xbill/DNS/Lookup
      58: dup
      59: astore        4
      61: monitorenter
      62: aload_0
      63: invokestatic  #70                 // Method getDefaultResolver:()Lorg/xbill/DNS/Resolver;
      66: putfield      #71                 // Field resolver:Lorg/xbill/DNS/Resolver;
      69: aload_0
      70: invokestatic  #72                 // Method getDefaultSearchPath:()Ljava/util/List;
      73: putfield      #73                 // Field searchPath:Ljava/util/List;
      76: aload_0
      77: iload_3
      78: invokestatic  #74                 // Method getDefaultCache:(I)Lorg/xbill/DNS/Cache;
      81: putfield      #57                 // Field cache:Lorg/xbill/DNS/Cache;
      84: aload         4
      86: monitorexit
      87: goto          98
      90: astore        5
      92: aload         4
      94: monitorexit
      95: aload         5
      97: athrow
      98: aload_0
      99: getstatic     #11                 // Field defaultNdots:I
     102: putfield      #75                 // Field ndots:I
     105: aload_0
     106: iconst_3
     107: putfield      #77                 // Field credibility:I
     110: aload_0
     111: iconst_m1
     112: putfield      #47                 // Field result:I
     115: aload_0
     116: ldc           #78                 // String dnsjava.lookup.max_iterations
     118: ldc           #79                 // String 16
     120: invokestatic  #80                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     123: invokestatic  #81                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     126: putfield      #82                 // Field maxIterations:I
     129: ldc           #83                 // String dnsjava.lookup.use_hosts_file
     131: ldc           #84                 // String true
     133: invokestatic  #80                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     136: invokestatic  #85                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
     139: ifeq          149
     142: aload_0
     143: invokestatic  #86                 // Method getDefaultHostsFileParser:()Lorg/xbill/DNS/hosts/HostsFileParser;
     146: putfield      #87                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
     149: return
    Exception table:
       from    to  target type
          62    87    90   any
          90    95    90   any

  public org.xbill.DNS.Lookup(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokespecial #89                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
       7: return

  public org.xbill.DNS.Lookup(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: iconst_1
       4: invokespecial #89                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
       7: return

  public org.xbill.DNS.Lookup(java.lang.String, int, int) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;)Lorg/xbill/DNS/Name;
       5: iload_2
       6: iload_3
       7: invokespecial #89                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
      10: return

  public org.xbill.DNS.Lookup(java.lang.String, int) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;)Lorg/xbill/DNS/Name;
       5: iload_2
       6: iconst_1
       7: invokespecial #89                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
      10: return

  public org.xbill.DNS.Lookup(java.lang.String) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #90                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;)Lorg/xbill/DNS/Name;
       5: iconst_1
       6: iconst_1
       7: invokespecial #89                 // Method "<init>":(Lorg/xbill/DNS/Name;II)V
      10: return

  public void setResolver(org.xbill.DNS.Resolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #71                 // Field resolver:Lorg/xbill/DNS/Resolver;
       5: return

  public void setSearchPath(java.util.List<org.xbill.DNS.Name>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #21                 // Method convertSearchPathDomainList:(Ljava/util/List;)Ljava/util/List;
       5: putfield      #73                 // Field searchPath:Ljava/util/List;
       8: return

  public void setSearchPath(org.xbill.DNS.Name...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #22                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokevirtual #91                 // Method setSearchPath:(Ljava/util/List;)V
       8: return

  public void setSearchPath(java.lang.String...) throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_0
       5: aconst_null
       6: putfield      #73                 // Field searchPath:Ljava/util/List;
       9: return
      10: new           #24                 // class java/util/ArrayList
      13: dup
      14: aload_1
      15: arraylength
      16: invokespecial #25                 // Method java/util/ArrayList."<init>":(I)V
      19: astore_2
      20: aload_1
      21: astore_3
      22: aload_3
      23: arraylength
      24: istore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload         4
      33: if_icmpge     63
      36: aload_3
      37: iload         5
      39: aaload
      40: astore        6
      42: aload_2
      43: aload         6
      45: getstatic     #26                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      48: invokestatic  #27                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      51: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: iinc          5, 1
      60: goto          29
      63: aload_0
      64: aload_2
      65: putfield      #73                 // Field searchPath:Ljava/util/List;
      68: return

  public void setCache(org.xbill.DNS.Cache);
    Code:
       0: aload_1
       1: ifnonnull     27
       4: aload_0
       5: new           #18                 // class org/xbill/DNS/Cache
       8: dup
       9: aload_0
      10: getfield      #68                 // Field dclass:I
      13: invokespecial #19                 // Method org/xbill/DNS/Cache."<init>":(I)V
      16: putfield      #57                 // Field cache:Lorg/xbill/DNS/Cache;
      19: aload_0
      20: iconst_1
      21: putfield      #56                 // Field temporary_cache:Z
      24: goto          37
      27: aload_0
      28: aload_1
      29: putfield      #57                 // Field cache:Lorg/xbill/DNS/Cache;
      32: aload_0
      33: iconst_0
      34: putfield      #56                 // Field temporary_cache:Z
      37: return

  public static void setDefaultNdots(int);
    Code:
       0: iload_0
       1: ifge          31
       4: new           #38                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #92                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #94                 // String Illegal ndots value:
      17: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_0
      21: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #65                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_0
      32: putstatic     #11                 // Field defaultNdots:I
      35: return

  public void setNdots(int);
    Code:
       0: iload_1
       1: ifge          31
       4: new           #38                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #92                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #94                 // String Illegal ndots value:
      17: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #96                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #65                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: iload_1
      33: putfield      #75                 // Field ndots:I
      36: return

  public void setCredibility(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field credibility:I
       5: return

  public void setCycleResults(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #60                 // Field cycleResults:Z
       5: return

  private void follow(org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #42                 // Field foundAlias:Z
       5: aload_0
       6: iconst_0
       7: putfield      #50                 // Field badresponse:Z
      10: aload_0
      11: iconst_0
      12: putfield      #52                 // Field networkerror:Z
      15: aload_0
      16: iconst_0
      17: putfield      #53                 // Field timedout:Z
      20: aload_0
      21: iconst_0
      22: putfield      #49                 // Field nxdomain:Z
      25: aload_0
      26: iconst_0
      27: putfield      #55                 // Field referral:Z
      30: aload_0
      31: dup
      32: getfield      #41                 // Field iterations:I
      35: iconst_1
      36: iadd
      37: putfield      #41                 // Field iterations:I
      40: aload_0
      41: getfield      #41                 // Field iterations:I
      44: aload_0
      45: getfield      #82                 // Field maxIterations:I
      48: if_icmpge     59
      51: aload_1
      52: aload_2
      53: invokevirtual #98                 // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      56: ifeq          76
      59: aload_0
      60: iconst_1
      61: putfield      #47                 // Field result:I
      64: aload_0
      65: ldc           #99                 // String CNAME loop
      67: putfield      #48                 // Field error:Ljava/lang/String;
      70: aload_0
      71: iconst_1
      72: putfield      #43                 // Field done:Z
      75: return
      76: aload_0
      77: getfield      #45                 // Field aliases:Ljava/util/List;
      80: ifnonnull     94
      83: aload_0
      84: new           #24                 // class java/util/ArrayList
      87: dup
      88: invokespecial #100                // Method java/util/ArrayList."<init>":()V
      91: putfield      #45                 // Field aliases:Ljava/util/List;
      94: aload_0
      95: getfield      #45                 // Field aliases:Ljava/util/List;
      98: aload_2
      99: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     104: pop
     105: aload_0
     106: aload_1
     107: invokespecial #101                // Method lookup:(Lorg/xbill/DNS/Name;)V
     110: return

  private void processResponse(org.xbill.DNS.Name, org.xbill.DNS.SetResponse);
    Code:
       0: aload_2
       1: invokevirtual #102                // Method org/xbill/DNS/SetResponse.isSuccessful:()Z
       4: ifeq          102
       7: aload_2
       8: invokevirtual #103                // Method org/xbill/DNS/SetResponse.answers:()Ljava/util/List;
      11: astore_3
      12: new           #24                 // class java/util/ArrayList
      15: dup
      16: invokespecial #100                // Method java/util/ArrayList."<init>":()V
      19: astore        4
      21: aload_3
      22: invokeinterface #104,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      27: astore        5
      29: aload         5
      31: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          71
      39: aload         5
      41: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #107                // class org/xbill/DNS/RRset
      49: astore        6
      51: aload         4
      53: aload         6
      55: aload_0
      56: getfield      #60                 // Field cycleResults:Z
      59: invokevirtual #108                // Method org/xbill/DNS/RRset.rrs:(Z)Ljava/util/List;
      62: invokeinterface #109,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      67: pop
      68: goto          29
      71: aload_0
      72: iconst_0
      73: putfield      #47                 // Field result:I
      76: aload_0
      77: aload         4
      79: iconst_0
      80: anewarray     #110                // class org/xbill/DNS/Record
      83: invokeinterface #111,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      88: checkcast     #112                // class "[Lorg/xbill/DNS/Record;"
      91: putfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
      94: aload_0
      95: iconst_1
      96: putfield      #43                 // Field done:Z
      99: goto          246
     102: aload_2
     103: invokevirtual #113                // Method org/xbill/DNS/SetResponse.isNXDOMAIN:()Z
     106: ifeq          139
     109: aload_0
     110: iconst_1
     111: putfield      #49                 // Field nxdomain:Z
     114: aload_0
     115: iconst_1
     116: putfield      #44                 // Field doneCurrent:Z
     119: aload_0
     120: getfield      #41                 // Field iterations:I
     123: ifle          246
     126: aload_0
     127: iconst_3
     128: putfield      #47                 // Field result:I
     131: aload_0
     132: iconst_1
     133: putfield      #43                 // Field done:Z
     136: goto          246
     139: aload_2
     140: invokevirtual #114                // Method org/xbill/DNS/SetResponse.isNXRRSET:()Z
     143: ifeq          164
     146: aload_0
     147: iconst_4
     148: putfield      #47                 // Field result:I
     151: aload_0
     152: aconst_null
     153: putfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
     156: aload_0
     157: iconst_1
     158: putfield      #43                 // Field done:Z
     161: goto          246
     164: aload_2
     165: invokevirtual #115                // Method org/xbill/DNS/SetResponse.isCNAME:()Z
     168: ifeq          188
     171: aload_2
     172: invokevirtual #116                // Method org/xbill/DNS/SetResponse.getCNAME:()Lorg/xbill/DNS/CNAMERecord;
     175: astore_3
     176: aload_0
     177: aload_3
     178: invokevirtual #117                // Method org/xbill/DNS/CNAMERecord.getTarget:()Lorg/xbill/DNS/Name;
     181: aload_1
     182: invokespecial #118                // Method follow:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     185: goto          246
     188: aload_2
     189: invokevirtual #119                // Method org/xbill/DNS/SetResponse.isDNAME:()Z
     192: ifeq          234
     195: aload_2
     196: invokevirtual #120                // Method org/xbill/DNS/SetResponse.getDNAME:()Lorg/xbill/DNS/DNAMERecord;
     199: astore_3
     200: aload_0
     201: aload_1
     202: aload_3
     203: invokevirtual #121                // Method org/xbill/DNS/Name.fromDNAME:(Lorg/xbill/DNS/DNAMERecord;)Lorg/xbill/DNS/Name;
     206: aload_1
     207: invokespecial #118                // Method follow:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     210: goto          231
     213: astore        4
     215: aload_0
     216: iconst_1
     217: putfield      #47                 // Field result:I
     220: aload_0
     221: ldc           #122                // String Invalid DNAME target
     223: putfield      #48                 // Field error:Ljava/lang/String;
     226: aload_0
     227: iconst_1
     228: putfield      #43                 // Field done:Z
     231: goto          246
     234: aload_2
     235: invokevirtual #123                // Method org/xbill/DNS/SetResponse.isDelegation:()Z
     238: ifeq          246
     241: aload_0
     242: iconst_1
     243: putfield      #55                 // Field referral:Z
     246: return
    Exception table:
       from    to  target type
         200   210   213   Class org/xbill/DNS/NameTooLongException

  private void lookup(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #124                // Method lookupFromHostsFile:(Lorg/xbill/DNS/Name;)Z
       5: ifeq          9
       8: return
       9: aload_0
      10: getfield      #57                 // Field cache:Lorg/xbill/DNS/Cache;
      13: aload_1
      14: aload_0
      15: getfield      #67                 // Field type:I
      18: aload_0
      19: getfield      #77                 // Field credibility:I
      22: invokevirtual #125                // Method org/xbill/DNS/Cache.lookupRecords:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
      25: astore_2
      26: getstatic     #126                // Field log:Lorg/slf4j/Logger;
      29: ldc           #127                // String Lookup for {}/{}, cache answer: {}
      31: iconst_3
      32: anewarray     #128                // class java/lang/Object
      35: dup
      36: iconst_0
      37: aload_1
      38: aastore
      39: dup
      40: iconst_1
      41: aload_0
      42: getfield      #67                 // Field type:I
      45: invokestatic  #129                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
      48: aastore
      49: dup
      50: iconst_2
      51: aload_2
      52: aastore
      53: invokeinterface #130,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      58: aload_0
      59: aload_1
      60: aload_2
      61: invokespecial #131                // Method processResponse:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/SetResponse;)V
      64: aload_0
      65: getfield      #43                 // Field done:Z
      68: ifne          78
      71: aload_0
      72: getfield      #44                 // Field doneCurrent:Z
      75: ifeq          79
      78: return
      79: aload_1
      80: aload_0
      81: getfield      #67                 // Field type:I
      84: aload_0
      85: getfield      #68                 // Field dclass:I
      88: invokestatic  #132                // Method org/xbill/DNS/Record.newRecord:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;
      91: astore_3
      92: aload_3
      93: invokestatic  #133                // Method org/xbill/DNS/Message.newQuery:(Lorg/xbill/DNS/Record;)Lorg/xbill/DNS/Message;
      96: astore        4
      98: aload_0
      99: getfield      #71                 // Field resolver:Lorg/xbill/DNS/Resolver;
     102: aload         4
     104: invokeinterface #134,  2          // InterfaceMethod org/xbill/DNS/Resolver.send:(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/Message;
     109: astore        5
     111: goto          196
     114: astore        6
     116: getstatic     #126                // Field log:Lorg/slf4j/Logger;
     119: ldc           #136                // String Lookup for {}/{}, id={} failed using resolver {}
     121: iconst_5
     122: anewarray     #128                // class java/lang/Object
     125: dup
     126: iconst_0
     127: aload_1
     128: aastore
     129: dup
     130: iconst_1
     131: aload         4
     133: invokevirtual #137                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
     136: invokevirtual #138                // Method org/xbill/DNS/Record.getType:()I
     139: invokestatic  #129                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
     142: aastore
     143: dup
     144: iconst_2
     145: aload         4
     147: invokevirtual #139                // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
     150: invokevirtual #140                // Method org/xbill/DNS/Header.getID:()I
     153: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     156: aastore
     157: dup
     158: iconst_3
     159: aload_0
     160: getfield      #71                 // Field resolver:Lorg/xbill/DNS/Resolver;
     163: aastore
     164: dup
     165: iconst_4
     166: aload         6
     168: aastore
     169: invokeinterface #130,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     174: aload         6
     176: instanceof    #141                // class java/io/InterruptedIOException
     179: ifeq          190
     182: aload_0
     183: iconst_1
     184: putfield      #53                 // Field timedout:Z
     187: goto          195
     190: aload_0
     191: iconst_1
     192: putfield      #52                 // Field networkerror:Z
     195: return
     196: aload         5
     198: invokevirtual #139                // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
     201: invokevirtual #142                // Method org/xbill/DNS/Header.getRcode:()I
     204: istore        6
     206: iload         6
     208: ifeq          232
     211: iload         6
     213: iconst_3
     214: if_icmpeq     232
     217: aload_0
     218: iconst_1
     219: putfield      #50                 // Field badresponse:Z
     222: aload_0
     223: iload         6
     225: invokestatic  #144                // Method org/xbill/DNS/Rcode.string:(I)Ljava/lang/String;
     228: putfield      #51                 // Field badresponse_error:Ljava/lang/String;
     231: return
     232: aload         4
     234: invokevirtual #137                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
     237: aload         5
     239: invokevirtual #137                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
     242: invokevirtual #145                // Method org/xbill/DNS/Record.equals:(Ljava/lang/Object;)Z
     245: ifne          260
     248: aload_0
     249: iconst_1
     250: putfield      #50                 // Field badresponse:Z
     253: aload_0
     254: ldc           #146                // String response does not match query
     256: putfield      #51                 // Field badresponse_error:Ljava/lang/String;
     259: return
     260: aload_0
     261: getfield      #57                 // Field cache:Lorg/xbill/DNS/Cache;
     264: aload         5
     266: invokevirtual #147                // Method org/xbill/DNS/Cache.addMessage:(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/SetResponse;
     269: astore_2
     270: aload_2
     271: ifnonnull     291
     274: aload_0
     275: getfield      #57                 // Field cache:Lorg/xbill/DNS/Cache;
     278: aload_1
     279: aload_0
     280: getfield      #67                 // Field type:I
     283: aload_0
     284: getfield      #77                 // Field credibility:I
     287: invokevirtual #125                // Method org/xbill/DNS/Cache.lookupRecords:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
     290: astore_2
     291: getstatic     #126                // Field log:Lorg/slf4j/Logger;
     294: ldc           #148                // String Queried {}/{}, id={}: {}
     296: iconst_4
     297: anewarray     #128                // class java/lang/Object
     300: dup
     301: iconst_0
     302: aload_1
     303: aastore
     304: dup
     305: iconst_1
     306: aload_0
     307: getfield      #67                 // Field type:I
     310: invokestatic  #129                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
     313: aastore
     314: dup
     315: iconst_2
     316: aload         5
     318: invokevirtual #139                // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
     321: invokevirtual #140                // Method org/xbill/DNS/Header.getID:()I
     324: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     327: aastore
     328: dup
     329: iconst_3
     330: aload_2
     331: aastore
     332: invokeinterface #130,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     337: aload_0
     338: aload_1
     339: aload_2
     340: invokespecial #131                // Method processResponse:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/SetResponse;)V
     343: return
    Exception table:
       from    to  target type
          98   111   114   Class java/io/IOException

  private boolean lookupFromHostsFile(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #87                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
       4: ifnull        144
       7: aload_0
       8: getfield      #67                 // Field type:I
      11: iconst_1
      12: if_icmpeq     24
      15: aload_0
      16: getfield      #67                 // Field type:I
      19: bipush        28
      21: if_icmpne     144
      24: aload_0
      25: getfield      #87                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
      28: aload_1
      29: aload_0
      30: getfield      #67                 // Field type:I
      33: invokevirtual #149                // Method org/xbill/DNS/hosts/HostsFileParser.getAddressForHost:(Lorg/xbill/DNS/Name;I)Ljava/util/Optional;
      36: astore_2
      37: aload_2
      38: invokevirtual #150                // Method java/util/Optional.isPresent:()Z
      41: ifeq          129
      44: aload_0
      45: iconst_0
      46: putfield      #47                 // Field result:I
      49: aload_0
      50: iconst_1
      51: putfield      #43                 // Field done:Z
      54: aload_0
      55: getfield      #67                 // Field type:I
      58: iconst_1
      59: if_icmpne     96
      62: aload_0
      63: iconst_1
      64: anewarray     #151                // class org/xbill/DNS/ARecord
      67: dup
      68: iconst_0
      69: new           #151                // class org/xbill/DNS/ARecord
      72: dup
      73: aload_1
      74: aload_0
      75: getfield      #68                 // Field dclass:I
      78: lconst_0
      79: aload_2
      80: invokevirtual #152                // Method java/util/Optional.get:()Ljava/lang/Object;
      83: checkcast     #153                // class java/net/InetAddress
      86: invokespecial #154                // Method org/xbill/DNS/ARecord."<init>":(Lorg/xbill/DNS/Name;IJLjava/net/InetAddress;)V
      89: aastore
      90: putfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
      93: goto          127
      96: aload_0
      97: iconst_1
      98: anewarray     #155                // class org/xbill/DNS/AAAARecord
     101: dup
     102: iconst_0
     103: new           #155                // class org/xbill/DNS/AAAARecord
     106: dup
     107: aload_1
     108: aload_0
     109: getfield      #68                 // Field dclass:I
     112: lconst_0
     113: aload_2
     114: invokevirtual #152                // Method java/util/Optional.get:()Ljava/lang/Object;
     117: checkcast     #153                // class java/net/InetAddress
     120: invokespecial #156                // Method org/xbill/DNS/AAAARecord."<init>":(Lorg/xbill/DNS/Name;IJLjava/net/InetAddress;)V
     123: aastore
     124: putfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
     127: iconst_1
     128: ireturn
     129: goto          144
     132: astore_2
     133: getstatic     #126                // Field log:Lorg/slf4j/Logger;
     136: ldc           #157                // String Local hosts database parsing failed, ignoring and using resolver
     138: aload_2
     139: invokeinterface #158,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     144: iconst_0
     145: ireturn
    Exception table:
       from    to  target type
          24   128   132   Class java/io/IOException

  private void resolve(org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #44                 // Field doneCurrent:Z
       5: aload_2
       6: ifnonnull     14
       9: aload_1
      10: astore_3
      11: goto          31
      14: aload_1
      15: aload_2
      16: invokestatic  #159                // Method org/xbill/DNS/Name.concatenate:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      19: astore_3
      20: goto          31
      23: astore        4
      25: aload_0
      26: iconst_1
      27: putfield      #54                 // Field nametoolong:Z
      30: return
      31: aload_0
      32: aload_3
      33: invokespecial #101                // Method lookup:(Lorg/xbill/DNS/Name;)V
      36: return
    Exception table:
       from    to  target type
          14    20    23   Class org/xbill/DNS/NameTooLongException

  public org.xbill.DNS.Record[] run();
    Code:
       0: aload_0
       1: getfield      #43                 // Field done:Z
       4: ifeq          11
       7: aload_0
       8: invokespecial #160                // Method reset:()V
      11: aload_0
      12: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
      15: invokevirtual #161                // Method org/xbill/DNS/Name.isAbsolute:()Z
      18: ifeq          33
      21: aload_0
      22: aload_0
      23: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
      26: aconst_null
      27: invokespecial #162                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      30: goto          165
      33: aload_0
      34: getfield      #73                 // Field searchPath:Ljava/util/List;
      37: ifnonnull     54
      40: aload_0
      41: aload_0
      42: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
      45: getstatic     #26                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      48: invokespecial #162                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      51: goto          165
      54: aload_0
      55: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
      58: invokevirtual #163                // Method org/xbill/DNS/Name.labels:()I
      61: aload_0
      62: getfield      #75                 // Field ndots:I
      65: if_icmple     79
      68: aload_0
      69: aload_0
      70: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
      73: getstatic     #26                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      76: invokespecial #162                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
      79: aload_0
      80: getfield      #43                 // Field done:Z
      83: ifeq          91
      86: aload_0
      87: getfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
      90: areturn
      91: aload_0
      92: getfield      #73                 // Field searchPath:Ljava/util/List;
      95: invokeinterface #104,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     100: astore_1
     101: aload_1
     102: invokeinterface #105,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     107: ifeq          154
     110: aload_1
     111: invokeinterface #106,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     116: checkcast     #164                // class org/xbill/DNS/Name
     119: astore_2
     120: aload_0
     121: aload_0
     122: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
     125: aload_2
     126: invokespecial #162                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     129: aload_0
     130: getfield      #43                 // Field done:Z
     133: ifeq          141
     136: aload_0
     137: getfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
     140: areturn
     141: aload_0
     142: getfield      #42                 // Field foundAlias:Z
     145: ifeq          151
     148: goto          154
     151: goto          101
     154: aload_0
     155: aload_0
     156: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
     159: getstatic     #26                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
     162: invokespecial #162                // Method resolve:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)V
     165: aload_0
     166: getfield      #43                 // Field done:Z
     169: ifne          321
     172: aload_0
     173: getfield      #50                 // Field badresponse:Z
     176: ifeq          200
     179: aload_0
     180: iconst_2
     181: putfield      #47                 // Field result:I
     184: aload_0
     185: aload_0
     186: getfield      #51                 // Field badresponse_error:Ljava/lang/String;
     189: putfield      #48                 // Field error:Ljava/lang/String;
     192: aload_0
     193: iconst_1
     194: putfield      #43                 // Field done:Z
     197: goto          321
     200: aload_0
     201: getfield      #53                 // Field timedout:Z
     204: ifeq          226
     207: aload_0
     208: iconst_2
     209: putfield      #47                 // Field result:I
     212: aload_0
     213: ldc           #165                // String timed out
     215: putfield      #48                 // Field error:Ljava/lang/String;
     218: aload_0
     219: iconst_1
     220: putfield      #43                 // Field done:Z
     223: goto          321
     226: aload_0
     227: getfield      #52                 // Field networkerror:Z
     230: ifeq          252
     233: aload_0
     234: iconst_2
     235: putfield      #47                 // Field result:I
     238: aload_0
     239: ldc           #166                // String network error
     241: putfield      #48                 // Field error:Ljava/lang/String;
     244: aload_0
     245: iconst_1
     246: putfield      #43                 // Field done:Z
     249: goto          321
     252: aload_0
     253: getfield      #49                 // Field nxdomain:Z
     256: ifeq          272
     259: aload_0
     260: iconst_3
     261: putfield      #47                 // Field result:I
     264: aload_0
     265: iconst_1
     266: putfield      #43                 // Field done:Z
     269: goto          321
     272: aload_0
     273: getfield      #55                 // Field referral:Z
     276: ifeq          298
     279: aload_0
     280: iconst_1
     281: putfield      #47                 // Field result:I
     284: aload_0
     285: ldc           #167                // String referral
     287: putfield      #48                 // Field error:Ljava/lang/String;
     290: aload_0
     291: iconst_1
     292: putfield      #43                 // Field done:Z
     295: goto          321
     298: aload_0
     299: getfield      #54                 // Field nametoolong:Z
     302: ifeq          321
     305: aload_0
     306: iconst_1
     307: putfield      #47                 // Field result:I
     310: aload_0
     311: ldc           #168                // String name too long
     313: putfield      #48                 // Field error:Ljava/lang/String;
     316: aload_0
     317: iconst_1
     318: putfield      #43                 // Field done:Z
     321: aload_0
     322: getfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
     325: areturn

  private void checkDone();
    Code:
       0: aload_0
       1: getfield      #43                 // Field done:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #47                 // Field result:I
      11: iconst_m1
      12: if_icmpeq     16
      15: return
      16: new           #92                 // class java/lang/StringBuilder
      19: dup
      20: new           #92                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #169                // String Lookup of
      29: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_0
      33: getfield      #66                 // Field name:Lorg/xbill/DNS/Name;
      36: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: ldc           #171                // String
      41: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #172                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      50: astore_1
      51: aload_0
      52: getfield      #68                 // Field dclass:I
      55: iconst_1
      56: if_icmpeq     76
      59: aload_1
      60: aload_0
      61: getfield      #68                 // Field dclass:I
      64: invokestatic  #173                // Method org/xbill/DNS/DClass.string:(I)Ljava/lang/String;
      67: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #171                // String
      72: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: pop
      76: aload_1
      77: aload_0
      78: getfield      #67                 // Field type:I
      81: invokestatic  #129                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
      84: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #174                // String  isn\'t done
      89: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: new           #175                // class java/lang/IllegalStateException
      96: dup
      97: aload_1
      98: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     104: athrow

  public org.xbill.DNS.Record[] getAnswers();
    Code:
       0: aload_0
       1: invokespecial #177                // Method checkDone:()V
       4: aload_0
       5: getfield      #46                 // Field answers:[Lorg/xbill/DNS/Record;
       8: areturn

  public org.xbill.DNS.Name[] getAliases();
    Code:
       0: aload_0
       1: invokespecial #177                // Method checkDone:()V
       4: aload_0
       5: getfield      #45                 // Field aliases:Ljava/util/List;
       8: ifnonnull     15
      11: getstatic     #178                // Field noAliases:[Lorg/xbill/DNS/Name;
      14: areturn
      15: aload_0
      16: getfield      #45                 // Field aliases:Ljava/util/List;
      19: iconst_0
      20: anewarray     #164                // class org/xbill/DNS/Name
      23: invokeinterface #111,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      28: checkcast     #179                // class "[Lorg/xbill/DNS/Name;"
      31: areturn

  public int getResult();
    Code:
       0: aload_0
       1: invokespecial #177                // Method checkDone:()V
       4: aload_0
       5: getfield      #47                 // Field result:I
       8: ireturn

  public java.lang.String getErrorString();
    Code:
       0: aload_0
       1: invokespecial #177                // Method checkDone:()V
       4: aload_0
       5: getfield      #48                 // Field error:Ljava/lang/String;
       8: ifnull        16
      11: aload_0
      12: getfield      #48                 // Field error:Ljava/lang/String;
      15: areturn
      16: aload_0
      17: getfield      #47                 // Field result:I
      20: tableswitch   { // 0 to 4
                     0: 56
                     1: 59
                     2: 62
                     3: 65
                     4: 68
               default: 71
          }
      56: ldc           #180                // String successful
      58: areturn
      59: ldc           #181                // String unrecoverable error
      61: areturn
      62: ldc           #182                // String try again
      64: areturn
      65: ldc           #183                // String host not found
      67: areturn
      68: ldc           #184                // String type not found
      70: areturn
      71: new           #175                // class java/lang/IllegalStateException
      74: dup
      75: ldc           #185                // String unknown result
      77: invokespecial #176                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      80: athrow

  public org.xbill.DNS.hosts.HostsFileParser getHostsFileParser();
    Code:
       0: aload_0
       1: getfield      #87                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
       4: areturn

  public void setHostsFileParser(org.xbill.DNS.hosts.HostsFileParser);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
       5: return

  private static org.xbill.DNS.Name lambda$convertSearchPathDomainList$0(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getstatic     #26                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
       4: invokestatic  #159                // Method org/xbill/DNS/Name.concatenate:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       7: areturn
       8: astore_1
       9: new           #35                 // class java/lang/RuntimeException
      12: dup
      13: aload_1
      14: invokespecial #186                // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     7     8   Class org/xbill/DNS/NameTooLongException

  static {};
    Code:
       0: ldc           #69                 // class org/xbill/DNS/Lookup
       2: invokestatic  #187                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #126                // Field log:Lorg/slf4j/Logger;
       8: iconst_0
       9: anewarray     #164                // class org/xbill/DNS/Name
      12: putstatic     #178                // Field noAliases:[Lorg/xbill/DNS/Name;
      15: invokestatic  #188                // Method refreshDefault:()V
      18: return
}
