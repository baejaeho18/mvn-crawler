Compiled from "SRVRecord.java"
public class org.xbill.DNS.SRVRecord extends org.xbill.DNS.Record {
  private int priority;

  private int weight;

  private int port;

  private org.xbill.DNS.Name target;

  org.xbill.DNS.SRVRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  public org.xbill.DNS.SRVRecord(org.xbill.DNS.Name, int, long, int, int, int, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        33
       4: iload_2
       5: lload_3
       6: invokespecial #3                  // Method org/xbill/DNS/Record."<init>":(Lorg/xbill/DNS/Name;IIJ)V
       9: aload_0
      10: ldc           #4                  // String priority
      12: iload         5
      14: invokestatic  #5                  // Method checkU16:(Ljava/lang/String;I)I
      17: putfield      #6                  // Field priority:I
      20: aload_0
      21: ldc           #7                  // String weight
      23: iload         6
      25: invokestatic  #5                  // Method checkU16:(Ljava/lang/String;I)I
      28: putfield      #8                  // Field weight:I
      31: aload_0
      32: ldc           #9                  // String port
      34: iload         7
      36: invokestatic  #5                  // Method checkU16:(Ljava/lang/String;I)I
      39: putfield      #10                 // Field port:I
      42: aload_0
      43: ldc           #11                 // String target
      45: aload         8
      47: invokestatic  #12                 // Method checkName:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      50: putfield      #13                 // Field target:Lorg/xbill/DNS/Name;
      53: return

  protected void rrFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #14                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: putfield      #6                  // Field priority:I
       8: aload_0
       9: aload_1
      10: invokevirtual #14                 // Method org/xbill/DNS/DNSInput.readU16:()I
      13: putfield      #8                  // Field weight:I
      16: aload_0
      17: aload_1
      18: invokevirtual #14                 // Method org/xbill/DNS/DNSInput.readU16:()I
      21: putfield      #10                 // Field port:I
      24: aload_0
      25: new           #15                 // class org/xbill/DNS/Name
      28: dup
      29: aload_1
      30: invokespecial #16                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/DNSInput;)V
      33: putfield      #13                 // Field target:Lorg/xbill/DNS/Name;
      36: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
       5: putfield      #6                  // Field priority:I
       8: aload_0
       9: aload_1
      10: invokevirtual #17                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
      13: putfield      #8                  // Field weight:I
      16: aload_0
      17: aload_1
      18: invokevirtual #17                 // Method org/xbill/DNS/Tokenizer.getUInt16:()I
      21: putfield      #10                 // Field port:I
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #18                 // Method org/xbill/DNS/Tokenizer.getName:(Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      30: putfield      #13                 // Field target:Lorg/xbill/DNS/Name;
      33: return

  protected java.lang.String rrToString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field priority:I
      13: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      16: ldc           #22                 // String
      18: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #8                  // Field weight:I
      27: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #22                 // String
      32: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: aload_0
      38: getfield      #10                 // Field port:I
      41: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #22                 // String
      46: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: pop
      50: aload_1
      51: aload_0
      52: getfield      #13                 // Field target:Lorg/xbill/DNS/Name;
      55: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: pop
      59: aload_1
      60: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn

  public int getPriority();
    Code:
       0: aload_0
       1: getfield      #6                  // Field priority:I
       4: ireturn

  public int getWeight();
    Code:
       0: aload_0
       1: getfield      #8                  // Field weight:I
       4: ireturn

  public int getPort();
    Code:
       0: aload_0
       1: getfield      #10                 // Field port:I
       4: ireturn

  public org.xbill.DNS.Name getTarget();
    Code:
       0: aload_0
       1: getfield      #13                 // Field target:Lorg/xbill/DNS/Name;
       4: areturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field priority:I
       5: invokevirtual #26                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field weight:I
      13: invokevirtual #26                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #10                 // Field port:I
      21: invokevirtual #26                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      24: aload_0
      25: getfield      #13                 // Field target:Lorg/xbill/DNS/Name;
      28: aload_1
      29: aconst_null
      30: iload_3
      31: invokevirtual #27                 // Method org/xbill/DNS/Name.toWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      34: return

  public org.xbill.DNS.Name getAdditionalName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field target:Lorg/xbill/DNS/Name;
       4: areturn
}
