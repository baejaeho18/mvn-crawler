Compiled from "APLRecord.java"
public class org.xbill.DNS.APLRecord$Element {
  public final int family;

  public final boolean negative;

  public final int prefixLength;

  public final java.lang.Object address;

  private org.xbill.DNS.APLRecord$Element(int, boolean, java.lang.Object, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field family:I
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field negative:Z
      14: aload_0
      15: aload_3
      16: putfield      #5                  // Field address:Ljava/lang/Object;
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field prefixLength:I
      25: iload_1
      26: iload         4
      28: invokestatic  #7                  // Method org/xbill/DNS/APLRecord.access$000:(II)Z
      31: ifne          44
      34: new           #8                  // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #9                  // String invalid prefix length
      40: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: return

  public org.xbill.DNS.APLRecord$Element(boolean, java.net.InetAddress, int);
    Code:
       0: aload_0
       1: aload_2
       2: invokestatic  #11                 // Method org/xbill/DNS/Address.familyOf:(Ljava/net/InetAddress;)I
       5: iload_1
       6: aload_2
       7: iload_3
       8: invokespecial #1                  // Method "<init>":(IZLjava/lang/Object;I)V
      11: return

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #4                  // Field negative:Z
      12: ifeq          22
      15: aload_1
      16: ldc           #14                 // String !
      18: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #3                  // Field family:I
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #17                 // String :
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_0
      39: getfield      #3                  // Field family:I
      42: iconst_1
      43: if_icmpeq     54
      46: aload_0
      47: getfield      #3                  // Field family:I
      50: iconst_2
      51: if_icmpne     72
      54: aload_1
      55: aload_0
      56: getfield      #5                  // Field address:Ljava/lang/Object;
      59: checkcast     #19                 // class java/net/InetAddress
      62: invokevirtual #20                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
      65: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: goto          90
      72: aload_1
      73: aload_0
      74: getfield      #5                  // Field address:Ljava/lang/Object;
      77: checkcast     #21                 // class "[B"
      80: checkcast     #21                 // class "[B"
      83: invokestatic  #22                 // Method org/xbill/DNS/utils/base16.toString:([B)Ljava/lang/String;
      86: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: aload_1
      91: ldc           #23                 // String /
      93: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: aload_1
      98: aload_0
      99: getfield      #6                  // Field prefixLength:I
     102: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     105: pop
     106: aload_1
     107: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #25                 // class org/xbill/DNS/APLRecord$Element
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #25                 // class org/xbill/DNS/APLRecord$Element
      13: astore_2
      14: aload_0
      15: getfield      #3                  // Field family:I
      18: aload_2
      19: getfield      #3                  // Field family:I
      22: if_icmpne     65
      25: aload_0
      26: getfield      #4                  // Field negative:Z
      29: aload_2
      30: getfield      #4                  // Field negative:Z
      33: if_icmpne     65
      36: aload_0
      37: getfield      #6                  // Field prefixLength:I
      40: aload_2
      41: getfield      #6                  // Field prefixLength:I
      44: if_icmpne     65
      47: aload_0
      48: getfield      #5                  // Field address:Ljava/lang/Object;
      51: aload_2
      52: getfield      #5                  // Field address:Ljava/lang/Object;
      55: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field address:Ljava/lang/Object;
       4: invokevirtual #27                 // Method java/lang/Object.hashCode:()I
       7: aload_0
       8: getfield      #6                  // Field prefixLength:I
      11: iadd
      12: aload_0
      13: getfield      #4                  // Field negative:Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: iadd
      25: ireturn

  org.xbill.DNS.APLRecord$Element(int, boolean, java.lang.Object, int, org.xbill.DNS.APLRecord$1);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iload         4
       6: invokespecial #1                  // Method "<init>":(IZLjava/lang/Object;I)V
       9: return
}
