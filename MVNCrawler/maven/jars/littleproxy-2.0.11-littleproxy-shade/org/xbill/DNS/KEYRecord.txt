Compiled from "KEYRecord.java"
public class org.xbill.DNS.KEYRecord extends org.xbill.DNS.KEYBase {
  public static final int FLAG_NOCONF;

  public static final int FLAG_NOAUTH;

  public static final int FLAG_NOKEY;

  public static final int OWNER_ZONE;

  public static final int OWNER_HOST;

  public static final int OWNER_USER;

  public static final int PROTOCOL_TLS;

  public static final int PROTOCOL_EMAIL;

  public static final int PROTOCOL_DNSSEC;

  public static final int PROTOCOL_IPSEC;

  public static final int PROTOCOL_ANY;

  org.xbill.DNS.KEYRecord();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/xbill/DNS/KEYBase."<init>":()V
       4: return

  public org.xbill.DNS.KEYRecord(org.xbill.DNS.Name, int, long, int, int, int, byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        25
       4: iload_2
       5: lload_3
       6: iload         5
       8: iload         6
      10: iload         7
      12: aload         8
      14: invokespecial #5                  // Method org/xbill/DNS/KEYBase."<init>":(Lorg/xbill/DNS/Name;IIJIII[B)V
      17: return

  public org.xbill.DNS.KEYRecord(org.xbill.DNS.Name, int, long, int, int, int, java.security.PublicKey) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: aload_1
       2: bipush        25
       4: iload_2
       5: lload_3
       6: iload         5
       8: iload         6
      10: iload         7
      12: aload         8
      14: iload         7
      16: invokestatic  #6                  // Method org/xbill/DNS/DNSSEC.fromPublicKey:(Ljava/security/PublicKey;I)[B
      19: invokespecial #5                  // Method org/xbill/DNS/KEYBase."<init>":(Lorg/xbill/DNS/Name;IIJIII[B)V
      22: aload_0
      23: aload         8
      25: putfield      #7                  // Field publicKey:Ljava/security/PublicKey;
      28: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/xbill/DNS/Tokenizer.getIdentifier:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokestatic  #9                  // Method org/xbill/DNS/KEYRecord$Flags.value:(Ljava/lang/String;)I
      10: putfield      #10                 // Field flags:I
      13: aload_0
      14: getfield      #10                 // Field flags:I
      17: ifge          44
      20: aload_1
      21: new           #11                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #13                 // String Invalid flags:
      30: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_3
      34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #16                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      43: athrow
      44: aload_1
      45: invokevirtual #8                  // Method org/xbill/DNS/Tokenizer.getIdentifier:()Ljava/lang/String;
      48: astore        4
      50: aload_0
      51: aload         4
      53: invokestatic  #17                 // Method org/xbill/DNS/KEYRecord$Protocol.value:(Ljava/lang/String;)I
      56: putfield      #18                 // Field proto:I
      59: aload_0
      60: getfield      #18                 // Field proto:I
      63: ifge          91
      66: aload_1
      67: new           #11                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #19                 // String Invalid protocol:
      76: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload         4
      81: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokevirtual #16                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      90: athrow
      91: aload_1
      92: invokevirtual #8                  // Method org/xbill/DNS/Tokenizer.getIdentifier:()Ljava/lang/String;
      95: astore        5
      97: aload_0
      98: aload         5
     100: invokestatic  #20                 // Method org/xbill/DNS/DNSSEC$Algorithm.value:(Ljava/lang/String;)I
     103: putfield      #21                 // Field alg:I
     106: aload_0
     107: getfield      #21                 // Field alg:I
     110: ifge          138
     113: aload_1
     114: new           #11                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #22                 // String Invalid algorithm:
     123: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         5
     128: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokevirtual #16                 // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     137: athrow
     138: aload_0
     139: getfield      #10                 // Field flags:I
     142: ldc           #23                 // int 49152
     144: iand
     145: ldc           #23                 // int 49152
     147: if_icmpne     158
     150: aload_0
     151: aconst_null
     152: putfield      #24                 // Field key:[B
     155: goto          166
     158: aload_0
     159: aload_1
     160: invokevirtual #25                 // Method org/xbill/DNS/Tokenizer.getBase64:()[B
     163: putfield      #24                 // Field key:[B
     166: return

  public java.security.PublicKey getPublicKey() throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: invokespecial #26                 // Method org/xbill/DNS/KEYBase.getPublicKey:()Ljava/security/PublicKey;
       4: areturn

  public int getFootprint();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/xbill/DNS/KEYBase.getFootprint:()I
       4: ireturn

  public byte[] getKey();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/xbill/DNS/KEYBase.getKey:()[B
       4: areturn

  public int getAlgorithm();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method org/xbill/DNS/KEYBase.getAlgorithm:()I
       4: ireturn

  public int getProtocol();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/xbill/DNS/KEYBase.getProtocol:()I
       4: ireturn

  public int getFlags();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/xbill/DNS/KEYBase.getFlags:()I
       4: ireturn
}
