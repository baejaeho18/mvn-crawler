Compiled from "Tokenizer.java"
public class org.xbill.DNS.Tokenizer implements java.lang.AutoCloseable {
  private static final java.lang.String DEFAULT_DELIMITERS;

  private static final java.lang.String QUOTES;

  public static final int EOF;

  public static final int EOL;

  public static final int WHITESPACE;

  public static final int IDENTIFIER;

  public static final int QUOTED_STRING;

  public static final int COMMENT;

  private final java.io.PushbackInputStream is;

  private boolean ungottenToken;

  private int multiline;

  private boolean quoting;

  private java.lang.String delimiters;

  private org.xbill.DNS.Tokenizer$Token current;

  private final java.lang.StringBuilder sb;

  private boolean wantClose;

  private java.lang.String filename;

  private int line;

  public org.xbill.DNS.Tokenizer(java.io.InputStream);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: instanceof    #2                  // class java/io/BufferedInputStream
       8: ifne          20
      11: new           #2                  // class java/io/BufferedInputStream
      14: dup
      15: aload_1
      16: invokespecial #3                  // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      19: astore_1
      20: aload_0
      21: new           #4                  // class java/io/PushbackInputStream
      24: dup
      25: aload_1
      26: iconst_2
      27: invokespecial #5                  // Method java/io/PushbackInputStream."<init>":(Ljava/io/InputStream;I)V
      30: putfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      33: aload_0
      34: iconst_0
      35: putfield      #7                  // Field ungottenToken:Z
      38: aload_0
      39: iconst_0
      40: putfield      #8                  // Field multiline:I
      43: aload_0
      44: iconst_0
      45: putfield      #9                  // Field quoting:Z
      48: aload_0
      49: ldc           #11                 // String  \t\n;()\"
      51: putfield      #12                 // Field delimiters:Ljava/lang/String;
      54: aload_0
      55: new           #13                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      62: putfield      #15                 // Field sb:Ljava/lang/StringBuilder;
      65: aload_0
      66: ldc           #16                 // String <none>
      68: putfield      #17                 // Field filename:Ljava/lang/String;
      71: aload_0
      72: iconst_1
      73: putfield      #18                 // Field line:I
      76: return

  public org.xbill.DNS.Tokenizer(java.lang.String);
    Code:
       0: aload_0
       1: new           #19                 // class java/io/ByteArrayInputStream
       4: dup
       5: aload_1
       6: invokevirtual #20                 // Method java/lang/String.getBytes:()[B
       9: invokespecial #21                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      12: invokespecial #22                 // Method "<init>":(Ljava/io/InputStream;)V
      15: return

  public org.xbill.DNS.Tokenizer(java.io.File) throws java.io.FileNotFoundException;
    Code:
       0: aload_0
       1: new           #23                 // class java/io/FileInputStream
       4: dup
       5: aload_1
       6: invokespecial #24                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
       9: invokespecial #22                 // Method "<init>":(Ljava/io/InputStream;)V
      12: aload_0
      13: iconst_1
      14: putfield      #25                 // Field wantClose:Z
      17: aload_0
      18: aload_1
      19: invokevirtual #26                 // Method java/io/File.getName:()Ljava/lang/String;
      22: putfield      #17                 // Field filename:Ljava/lang/String;
      25: return

  private int getChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
       4: invokevirtual #27                 // Method java/io/PushbackInputStream.read:()I
       7: istore_1
       8: iload_1
       9: bipush        13
      11: if_icmpne     39
      14: aload_0
      15: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      18: invokevirtual #27                 // Method java/io/PushbackInputStream.read:()I
      21: istore_2
      22: iload_2
      23: bipush        10
      25: if_icmpeq     36
      28: aload_0
      29: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      32: iload_2
      33: invokevirtual #28                 // Method java/io/PushbackInputStream.unread:(I)V
      36: bipush        10
      38: istore_1
      39: iload_1
      40: bipush        10
      42: if_icmpne     55
      45: aload_0
      46: dup
      47: getfield      #18                 // Field line:I
      50: iconst_1
      51: iadd
      52: putfield      #18                 // Field line:I
      55: iload_1
      56: ireturn

  private void ungetChar(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpne     6
       5: return
       6: aload_0
       7: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      10: iload_1
      11: invokevirtual #28                 // Method java/io/PushbackInputStream.unread:(I)V
      14: iload_1
      15: bipush        10
      17: if_icmpne     30
      20: aload_0
      21: dup
      22: getfield      #18                 // Field line:I
      25: iconst_1
      26: isub
      27: putfield      #18                 // Field line:I
      30: return

  private int skipWhitespace() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokespecial #29                 // Method getChar:()I
       6: istore_2
       7: iload_2
       8: bipush        32
      10: if_icmpeq     39
      13: iload_2
      14: bipush        9
      16: if_icmpeq     39
      19: iload_2
      20: bipush        10
      22: if_icmpne     32
      25: aload_0
      26: getfield      #8                  // Field multiline:I
      29: ifgt          39
      32: aload_0
      33: iload_2
      34: invokespecial #30                 // Method ungetChar:(I)V
      37: iload_1
      38: ireturn
      39: iinc          1, 1
      42: goto          2

  private void checkUnbalancedParens() throws org.xbill.DNS.TextParseException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field multiline:I
       4: ifle          14
       7: aload_0
       8: ldc           #31                 // String unbalanced parentheses
      10: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      13: athrow
      14: return

  public org.xbill.DNS.Tokenizer$Token get(boolean, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field ungottenToken:Z
       4: ifeq          78
       7: aload_0
       8: iconst_0
       9: putfield      #7                  // Field ungottenToken:Z
      12: aload_0
      13: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      16: getfield      #34                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      19: iconst_2
      20: if_icmpne     32
      23: iload_1
      24: ifeq          78
      27: aload_0
      28: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      31: areturn
      32: aload_0
      33: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      36: getfield      #34                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      39: iconst_5
      40: if_icmpne     52
      43: iload_2
      44: ifeq          78
      47: aload_0
      48: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      51: areturn
      52: aload_0
      53: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      56: getfield      #34                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      59: iconst_1
      60: if_icmpne     73
      63: aload_0
      64: dup
      65: getfield      #18                 // Field line:I
      68: iconst_1
      69: iadd
      70: putfield      #18                 // Field line:I
      73: aload_0
      74: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      77: areturn
      78: aload_0
      79: invokespecial #35                 // Method skipWhitespace:()I
      82: istore        5
      84: iload         5
      86: ifle          100
      89: iload_1
      90: ifeq          100
      93: aload_0
      94: iconst_2
      95: aconst_null
      96: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
      99: areturn
     100: iconst_3
     101: istore_3
     102: aload_0
     103: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     106: iconst_0
     107: invokevirtual #37                 // Method java/lang/StringBuilder.setLength:(I)V
     110: aload_0
     111: invokespecial #29                 // Method getChar:()I
     114: istore        4
     116: iload         4
     118: iconst_m1
     119: if_icmpeq     135
     122: aload_0
     123: getfield      #12                 // Field delimiters:Ljava/lang/String;
     126: iload         4
     128: invokevirtual #38                 // Method java/lang/String.indexOf:(I)I
     131: iconst_m1
     132: if_icmpeq     456
     135: iload         4
     137: iconst_m1
     138: if_icmpne     182
     141: aload_0
     142: getfield      #9                  // Field quoting:Z
     145: ifeq          155
     148: aload_0
     149: ldc           #39                 // String EOF in quoted string
     151: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     154: athrow
     155: aload_0
     156: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     159: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     162: ifne          172
     165: aload_0
     166: iconst_0
     167: aconst_null
     168: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     171: areturn
     172: aload_0
     173: iload_3
     174: aload_0
     175: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     178: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     181: areturn
     182: aload_0
     183: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     186: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     189: ifne          447
     192: iload_3
     193: iconst_4
     194: if_icmpeq     447
     197: iload         4
     199: bipush        40
     201: if_icmpne     222
     204: aload_0
     205: dup
     206: getfield      #8                  // Field multiline:I
     209: iconst_1
     210: iadd
     211: putfield      #8                  // Field multiline:I
     214: aload_0
     215: invokespecial #35                 // Method skipWhitespace:()I
     218: pop
     219: goto          110
     222: iload         4
     224: bipush        41
     226: if_icmpne     261
     229: aload_0
     230: getfield      #8                  // Field multiline:I
     233: ifgt          243
     236: aload_0
     237: ldc           #41                 // String invalid close parenthesis
     239: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     242: athrow
     243: aload_0
     244: dup
     245: getfield      #8                  // Field multiline:I
     248: iconst_1
     249: isub
     250: putfield      #8                  // Field multiline:I
     253: aload_0
     254: invokespecial #35                 // Method skipWhitespace:()I
     257: pop
     258: goto          110
     261: iload         4
     263: bipush        34
     265: if_icmpne     310
     268: aload_0
     269: getfield      #9                  // Field quoting:Z
     272: ifne          291
     275: aload_0
     276: iconst_1
     277: putfield      #9                  // Field quoting:Z
     280: aload_0
     281: ldc           #42                 // String \"
     283: putfield      #12                 // Field delimiters:Ljava/lang/String;
     286: iconst_4
     287: istore_3
     288: goto          110
     291: aload_0
     292: iconst_0
     293: putfield      #9                  // Field quoting:Z
     296: aload_0
     297: ldc           #11                 // String  \t\n;()\"
     299: putfield      #12                 // Field delimiters:Ljava/lang/String;
     302: aload_0
     303: invokespecial #35                 // Method skipWhitespace:()I
     306: pop
     307: goto          110
     310: iload         4
     312: bipush        10
     314: if_icmpne     324
     317: aload_0
     318: iconst_1
     319: aconst_null
     320: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     323: areturn
     324: iload         4
     326: bipush        59
     328: if_icmpne     439
     331: aload_0
     332: invokespecial #29                 // Method getChar:()I
     335: istore        4
     337: iload         4
     339: bipush        10
     341: if_icmpeq     367
     344: iload         4
     346: iconst_m1
     347: if_icmpne     353
     350: goto          367
     353: aload_0
     354: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     357: iload         4
     359: i2c
     360: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     363: pop
     364: goto          331
     367: iload_2
     368: ifeq          387
     371: aload_0
     372: iload         4
     374: invokespecial #30                 // Method ungetChar:(I)V
     377: aload_0
     378: iconst_5
     379: aload_0
     380: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     383: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     386: areturn
     387: iload         4
     389: iconst_m1
     390: if_icmpne     409
     393: iload_3
     394: iconst_4
     395: if_icmpeq     409
     398: aload_0
     399: invokespecial #44                 // Method checkUnbalancedParens:()V
     402: aload_0
     403: iconst_0
     404: aconst_null
     405: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     408: areturn
     409: aload_0
     410: getfield      #8                  // Field multiline:I
     413: ifle          432
     416: aload_0
     417: invokespecial #35                 // Method skipWhitespace:()I
     420: pop
     421: aload_0
     422: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     425: iconst_0
     426: invokevirtual #37                 // Method java/lang/StringBuilder.setLength:(I)V
     429: goto          110
     432: aload_0
     433: iconst_1
     434: aconst_null
     435: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     438: areturn
     439: new           #45                 // class java/lang/IllegalStateException
     442: dup
     443: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":()V
     446: athrow
     447: aload_0
     448: iload         4
     450: invokespecial #30                 // Method ungetChar:(I)V
     453: goto          530
     456: iload         4
     458: bipush        92
     460: if_icmpne     495
     463: aload_0
     464: invokespecial #29                 // Method getChar:()I
     467: istore        4
     469: iload         4
     471: iconst_m1
     472: if_icmpne     482
     475: aload_0
     476: ldc           #47                 // String unterminated escape sequence
     478: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     481: athrow
     482: aload_0
     483: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     486: bipush        92
     488: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     491: pop
     492: goto          516
     495: aload_0
     496: getfield      #9                  // Field quoting:Z
     499: ifeq          516
     502: iload         4
     504: bipush        10
     506: if_icmpne     516
     509: aload_0
     510: ldc           #48                 // String newline in quoted string
     512: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
     515: athrow
     516: aload_0
     517: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     520: iload         4
     522: i2c
     523: invokevirtual #43                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     526: pop
     527: goto          110
     530: aload_0
     531: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     534: invokevirtual #40                 // Method java/lang/StringBuilder.length:()I
     537: ifne          556
     540: iload_3
     541: iconst_4
     542: if_icmpeq     556
     545: aload_0
     546: invokespecial #44                 // Method checkUnbalancedParens:()V
     549: aload_0
     550: iconst_0
     551: aconst_null
     552: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     555: areturn
     556: aload_0
     557: iload_3
     558: aload_0
     559: getfield      #15                 // Field sb:Ljava/lang/StringBuilder;
     562: invokespecial #36                 // Method setCurrentToken:(ILjava/lang/StringBuilder;)Lorg/xbill/DNS/Tokenizer$Token;
     565: areturn

  private org.xbill.DNS.Tokenizer$Token setCurrentToken(int, java.lang.StringBuilder);
    Code:
       0: aload_0
       1: new           #49                 // class org/xbill/DNS/Tokenizer$Token
       4: dup
       5: iload_1
       6: aload_2
       7: aconst_null
       8: invokespecial #50                 // Method org/xbill/DNS/Tokenizer$Token."<init>":(ILjava/lang/StringBuilder;Lorg/xbill/DNS/Tokenizer$1;)V
      11: putfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      14: aload_0
      15: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      18: areturn

  public org.xbill.DNS.Tokenizer$Token get() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_0
       3: invokevirtual #51                 // Method get:(ZZ)Lorg/xbill/DNS/Tokenizer$Token;
       6: areturn

  public void unget();
    Code:
       0: aload_0
       1: getfield      #7                  // Field ungottenToken:Z
       4: ifeq          17
       7: new           #45                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #52                 // String Cannot unget multiple tokens
      13: invokespecial #53                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #33                 // Field current:Lorg/xbill/DNS/Tokenizer$Token;
      21: getfield      #34                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      24: iconst_1
      25: if_icmpne     38
      28: aload_0
      29: dup
      30: getfield      #18                 // Field line:I
      33: iconst_1
      34: isub
      35: putfield      #18                 // Field line:I
      38: aload_0
      39: iconst_1
      40: putfield      #7                  // Field ungottenToken:Z
      43: return

  public java.lang.String getString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       4: astore_1
       5: aload_1
       6: invokevirtual #55                 // Method org/xbill/DNS/Tokenizer$Token.isString:()Z
       9: ifne          19
      12: aload_0
      13: ldc           #56                 // String expected a string
      15: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      18: athrow
      19: aload_1
      20: getfield      #57                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      23: areturn

  private java.lang.String getIdentifier(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       4: astore_2
       5: aload_2
       6: getfield      #34                 // Field org/xbill/DNS/Tokenizer$Token.type:I
       9: iconst_3
      10: if_icmpeq     37
      13: aload_0
      14: new           #13                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #58                 // String expected
      23: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      36: athrow
      37: aload_2
      38: getfield      #57                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      41: areturn

  public java.lang.String getIdentifier() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #61                 // String an identifier
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public long getLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #63                 // String an integer
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: iconst_0
       9: invokevirtual #64                 // Method java/lang/String.charAt:(I)C
      12: invokestatic  #65                 // Method java/lang/Character.isDigit:(C)Z
      15: ifne          25
      18: aload_0
      19: ldc           #66                 // String expected an integer
      21: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      24: athrow
      25: aload_1
      26: invokestatic  #67                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      29: lreturn
      30: astore_2
      31: aload_0
      32: ldc           #66                 // String expected an integer
      34: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      37: athrow
    Exception table:
       from    to  target type
          25    29    30   Class java/lang/NumberFormatException

  public long getUInt32() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: iflt          19
      11: lload_1
      12: ldc2_w        #70                 // long 4294967295l
      15: lcmp
      16: ifle          26
      19: aload_0
      20: ldc           #72                 // String expected an 32 bit unsigned integer
      22: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      25: athrow
      26: lload_1
      27: lreturn

  public int getUInt16() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: iflt          19
      11: lload_1
      12: ldc2_w        #73                 // long 65535l
      15: lcmp
      16: ifle          26
      19: aload_0
      20: ldc           #75                 // String expected an 16 bit unsigned integer
      22: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      25: athrow
      26: lload_1
      27: l2i
      28: ireturn

  public int getUInt8() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method getLong:()J
       4: lstore_1
       5: lload_1
       6: lconst_0
       7: lcmp
       8: iflt          19
      11: lload_1
      12: ldc2_w        #76                 // long 255l
      15: lcmp
      16: ifle          26
      19: aload_0
      20: ldc           #78                 // String expected an 8 bit unsigned integer
      22: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      25: athrow
      26: lload_1
      27: l2i
      28: ireturn

  public long getTTL() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #79                 // String a TTL value
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #80                 // Method org/xbill/DNS/TTL.parseTTL:(Ljava/lang/String;)J
      11: lreturn
      12: astore_2
      13: aload_0
      14: ldc           #81                 // String expected a TTL value
      16: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      19: athrow
    Exception table:
       from    to  target type
           7    11    12   Class java/lang/NumberFormatException

  public long getTTLLike() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #82                 // String a TTL-like value
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: iconst_0
       9: invokestatic  #83                 // Method org/xbill/DNS/TTL.parse:(Ljava/lang/String;Z)J
      12: lreturn
      13: astore_2
      14: aload_0
      15: ldc           #84                 // String expected a TTL-like value
      17: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      20: athrow
    Exception table:
       from    to  target type
           7    12    13   Class java/lang/NumberFormatException

  public org.xbill.DNS.Name getName(org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #85                 // String a name
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: aload_1
       9: invokestatic  #86                 // Method org/xbill/DNS/Name.fromString:(Ljava/lang/String;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      12: astore_3
      13: aload_3
      14: invokevirtual #87                 // Method org/xbill/DNS/Name.isAbsolute:()Z
      17: ifne          29
      20: new           #88                 // class org/xbill/DNS/RelativeNameException
      23: dup
      24: aload_3
      25: invokespecial #89                 // Method org/xbill/DNS/RelativeNameException."<init>":(Lorg/xbill/DNS/Name;)V
      28: athrow
      29: aload_3
      30: areturn
      31: astore_3
      32: aload_0
      33: aload_3
      34: invokevirtual #91                 // Method org/xbill/DNS/TextParseException.getMessage:()Ljava/lang/String;
      37: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      40: athrow
    Exception table:
       from    to  target type
           7    30    31   Class org/xbill/DNS/TextParseException

  public byte[] getAddressBytes(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #92                 // String an address
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: iload_1
       9: invokestatic  #93                 // Method org/xbill/DNS/Address.toByteArray:(Ljava/lang/String;I)[B
      12: astore_3
      13: aload_3
      14: ifnonnull     41
      17: aload_0
      18: new           #13                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #94                 // String Invalid address:
      27: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_2
      31: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      40: athrow
      41: aload_3
      42: areturn

  public java.net.InetAddress getAddress(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #92                 // String an address
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_2
       8: iload_1
       9: invokestatic  #95                 // Method org/xbill/DNS/Address.getByAddress:(Ljava/lang/String;I)Ljava/net/InetAddress;
      12: areturn
      13: astore_3
      14: aload_0
      15: aload_3
      16: invokevirtual #97                 // Method java/net/UnknownHostException.getMessage:()Ljava/lang/String;
      19: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      22: athrow
    Exception table:
       from    to  target type
           7    12    13   Class java/net/UnknownHostException

  public void getEOL() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       4: astore_1
       5: aload_1
       6: getfield      #34                 // Field org/xbill/DNS/Tokenizer$Token.type:I
       9: iconst_1
      10: if_icmpeq     27
      13: aload_1
      14: getfield      #34                 // Field org/xbill/DNS/Tokenizer$Token.type:I
      17: ifeq          27
      20: aload_0
      21: ldc           #98                 // String expected EOL or EOF
      23: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      26: athrow
      27: return

  private java.lang.String remainingStrings() throws java.io.IOException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #54                 // Method get:()Lorg/xbill/DNS/Tokenizer$Token;
       6: astore_2
       7: aload_2
       8: invokevirtual #55                 // Method org/xbill/DNS/Tokenizer$Token.isString:()Z
      11: ifne          17
      14: goto          41
      17: aload_1
      18: ifnonnull     29
      21: new           #13                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      28: astore_1
      29: aload_1
      30: aload_2
      31: getfield      #57                 // Field org/xbill/DNS/Tokenizer$Token.value:Ljava/lang/String;
      34: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: goto          2
      41: aload_0
      42: invokevirtual #99                 // Method unget:()V
      45: aload_1
      46: ifnonnull     51
      49: aconst_null
      50: areturn
      51: aload_1
      52: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn

  public byte[] getBase64(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #100                // Method remainingStrings:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     22
       9: iload_1
      10: ifeq          20
      13: aload_0
      14: ldc           #101                // String expected base64 encoded string
      16: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      19: athrow
      20: aconst_null
      21: areturn
      22: aload_2
      23: invokestatic  #102                // Method org/xbill/DNS/utils/base64.fromString:(Ljava/lang/String;)[B
      26: astore_3
      27: aload_3
      28: ifnonnull     38
      31: aload_0
      32: ldc           #103                // String invalid base64 encoding
      34: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      37: athrow
      38: aload_3
      39: areturn

  public byte[] getBase64() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #104                // Method getBase64:(Z)[B
       5: areturn

  public byte[] getHex(boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #100                // Method remainingStrings:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: ifnonnull     22
       9: iload_1
      10: ifeq          20
      13: aload_0
      14: ldc           #105                // String expected hex encoded string
      16: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      19: athrow
      20: aconst_null
      21: areturn
      22: aload_2
      23: invokestatic  #106                // Method org/xbill/DNS/utils/base16.fromString:(Ljava/lang/String;)[B
      26: astore_3
      27: aload_3
      28: ifnonnull     38
      31: aload_0
      32: ldc           #107                // String invalid hex encoding
      34: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      37: athrow
      38: aload_3
      39: areturn

  public byte[] getHex() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #108                // Method getHex:(Z)[B
       5: areturn

  public byte[] getHexString() throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #109                // String a hex string
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #106                // Method org/xbill/DNS/utils/base16.fromString:(Ljava/lang/String;)[B
      11: astore_2
      12: aload_2
      13: ifnonnull     23
      16: aload_0
      17: ldc           #107                // String invalid hex encoding
      19: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      22: athrow
      23: aload_2
      24: areturn

  public byte[] getBase32String(org.xbill.DNS.utils.base32) throws java.io.IOException;
    Code:
       0: aload_0
       1: ldc           #110                // String a base32 string
       3: invokespecial #62                 // Method getIdentifier:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_2
       7: aload_1
       8: aload_2
       9: invokevirtual #111                // Method org/xbill/DNS/utils/base32.fromString:(Ljava/lang/String;)[B
      12: astore_3
      13: aload_3
      14: ifnonnull     24
      17: aload_0
      18: ldc           #112                // String invalid base32 encoding
      20: invokevirtual #32                 // Method exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
      23: athrow
      24: aload_3
      25: areturn

  public org.xbill.DNS.TextParseException exception(java.lang.String);
    Code:
       0: new           #90                 // class org/xbill/DNS/TextParseException
       3: dup
       4: new           #13                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: getfield      #17                 // Field filename:Ljava/lang/String;
      15: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: ldc           #113                // String :
      20: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: getfield      #18                 // Field line:I
      27: invokevirtual #114                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #115                // String :
      32: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #116                // Method org/xbill/DNS/TextParseException."<init>":(Ljava/lang/String;)V
      45: areturn

  public void close();
    Code:
       0: aload_0
       1: getfield      #25                 // Field wantClose:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #6                  // Field is:Ljava/io/PushbackInputStream;
      11: invokevirtual #117                // Method java/io/PushbackInputStream.close:()V
      14: goto          18
      17: astore_1
      18: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException
}
