Compiled from "AsyncSemaphore.java"
final class org.xbill.DNS.AsyncSemaphore {
  private static final org.slf4j.Logger log;

  private final java.util.Queue<java.util.concurrent.CompletableFuture<org.xbill.DNS.AsyncSemaphore$Permit>> queue;

  private final org.xbill.DNS.AsyncSemaphore$Permit singletonPermit;

  private volatile int permits;

  org.xbill.DNS.AsyncSemaphore(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #5                  // Method java/util/ArrayDeque."<init>":()V
      12: putfield      #2                  // Field queue:Ljava/util/Queue;
      15: aload_0
      16: new           #6                  // class org/xbill/DNS/AsyncSemaphore$Permit
      19: dup
      20: aload_0
      21: invokespecial #7                  // Method org/xbill/DNS/AsyncSemaphore$Permit."<init>":(Lorg/xbill/DNS/AsyncSemaphore;)V
      24: putfield      #8                  // Field singletonPermit:Lorg/xbill/DNS/AsyncSemaphore$Permit;
      27: aload_0
      28: iload_1
      29: putfield      #1                  // Field permits:I
      32: return

  java.util.concurrent.CompletionStage<org.xbill.DNS.AsyncSemaphore$Permit> acquire(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #1                  // Field permits:I
      11: ifle          34
      14: aload_0
      15: dup
      16: getfield      #1                  // Field permits:I
      19: iconst_1
      20: isub
      21: putfield      #1                  // Field permits:I
      24: aload_0
      25: getfield      #8                  // Field singletonPermit:Lorg/xbill/DNS/AsyncSemaphore$Permit;
      28: invokestatic  #9                  // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      31: aload_2
      32: monitorexit
      33: areturn
      34: new           #10                 // class org/xbill/DNS/TimeoutCompletableFuture
      37: dup
      38: invokespecial #11                 // Method org/xbill/DNS/TimeoutCompletableFuture."<init>":()V
      41: astore_3
      42: aload_3
      43: aload_1
      44: invokevirtual #12                 // Method java/time/Duration.toNanos:()J
      47: getstatic     #13                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      50: invokevirtual #14                 // Method org/xbill/DNS/TimeoutCompletableFuture.compatTimeout:(JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/CompletableFuture;
      53: aload_0
      54: aload_3
      55: invokedynamic #15,  0             // InvokeDynamic #0:accept:(Lorg/xbill/DNS/AsyncSemaphore;Lorg/xbill/DNS/TimeoutCompletableFuture;)Ljava/util/function/BiConsumer;
      60: invokevirtual #16                 // Method java/util/concurrent/CompletableFuture.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletableFuture;
      63: pop
      64: aload_0
      65: getfield      #2                  // Field queue:Ljava/util/Queue;
      68: aload_3
      69: invokeinterface #17,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      74: pop
      75: aload_3
      76: aload_2
      77: monitorexit
      78: areturn
      79: astore        4
      81: aload_2
      82: monitorexit
      83: aload         4
      85: athrow
    Exception table:
       from    to  target type
           7    33    79   any
          34    78    79   any
          79    83    79   any

  private void lambda$acquire$0(org.xbill.DNS.TimeoutCompletableFuture, org.xbill.DNS.AsyncSemaphore$Permit, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  static java.util.Queue access$000(org.xbill.DNS.AsyncSemaphore);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/util/Queue;
       4: areturn

  static int access$108(org.xbill.DNS.AsyncSemaphore);
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field permits:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #1                  // Field permits:I
      11: ireturn

  static {};
    Code:
       0: ldc           #19                 // class org/xbill/DNS/AsyncSemaphore
       2: invokestatic  #20                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #21                 // Field log:Lorg/slf4j/Logger;
       8: return
}
