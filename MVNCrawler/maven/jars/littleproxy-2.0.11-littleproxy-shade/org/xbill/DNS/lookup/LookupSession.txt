Compiled from "LookupSession.java"
public class org.xbill.DNS.lookup.LookupSession {
  private static final org.slf4j.Logger log;

  public static final int DEFAULT_MAX_ITERATIONS;

  public static final int DEFAULT_NDOTS;

  private final org.xbill.DNS.Resolver resolver;

  private final int maxRedirects;

  private final int ndots;

  private final java.util.List<org.xbill.DNS.Name> searchPath;

  private final boolean cycleResults;

  private final java.util.Map<java.lang.Integer, org.xbill.DNS.Cache> caches;

  private final org.xbill.DNS.hosts.HostsFileParser hostsFileParser;

  private final java.util.concurrent.Executor executor;

  private org.xbill.DNS.lookup.LookupSession(org.xbill.DNS.Resolver, int, int, java.util.List<org.xbill.DNS.Name>, boolean, java.util.List<org.xbill.DNS.Cache>, org.xbill.DNS.hosts.HostsFileParser, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #4                  // String resolver is marked non-null but is null
      14: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field resolver:Lorg/xbill/DNS/Resolver;
      23: aload_0
      24: iload_2
      25: putfield      #7                  // Field maxRedirects:I
      28: aload_0
      29: iload_3
      30: putfield      #8                  // Field ndots:I
      33: aload_0
      34: aload         4
      36: putfield      #9                  // Field searchPath:Ljava/util/List;
      39: aload_0
      40: iload         5
      42: putfield      #10                 // Field cycleResults:Z
      45: aload_0
      46: aload         6
      48: ifnonnull     57
      51: invokestatic  #11                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      54: goto          85
      57: aload         6
      59: invokeinterface #12,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      64: invokedynamic #13,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      69: invokedynamic #14,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      74: invokestatic  #15                 // Method java/util/stream/Collectors.toMap:(Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Collector;
      77: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      82: checkcast     #17                 // class java/util/Map
      85: putfield      #18                 // Field caches:Ljava/util/Map;
      88: aload_0
      89: aload         7
      91: putfield      #19                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
      94: aload_0
      95: aload         8
      97: ifnonnull     106
     100: invokestatic  #20                 // Method java/util/concurrent/ForkJoinPool.commonPool:()Ljava/util/concurrent/ForkJoinPool;
     103: goto          108
     106: aload         8
     108: putfield      #21                 // Field executor:Ljava/util/concurrent/Executor;
     111: return

  public static org.xbill.DNS.lookup.LookupSession$LookupSessionBuilder builder();
    Code:
       0: new           #22                 // class org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder
       3: dup
       4: aconst_null
       5: invokespecial #23                 // Method org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder."<init>":(Lorg/xbill/DNS/lookup/LookupSession$1;)V
       8: astore_0
       9: aload_0
      10: bipush        16
      12: invokestatic  #25                 // Method org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder.access$202:(Lorg/xbill/DNS/lookup/LookupSession$LookupSessionBuilder;I)I
      15: pop
      16: aload_0
      17: iconst_1
      18: invokestatic  #26                 // Method org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder.access$302:(Lorg/xbill/DNS/lookup/LookupSession$LookupSessionBuilder;I)I
      21: pop
      22: aload_0
      23: areturn

  public static org.xbill.DNS.lookup.LookupSession$LookupSessionBuilder defaultBuilder();
    Code:
       0: invokestatic  #27                 // Method builder:()Lorg/xbill/DNS/lookup/LookupSession$LookupSessionBuilder;
       3: new           #28                 // class org/xbill/DNS/ExtendedResolver
       6: dup
       7: invokestatic  #29                 // Method org/xbill/DNS/ResolverConfig.getCurrentConfig:()Lorg/xbill/DNS/ResolverConfig;
      10: invokevirtual #30                 // Method org/xbill/DNS/ResolverConfig.servers:()Ljava/util/List;
      13: invokeinterface #12,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      18: invokedynamic #31,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      23: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      28: invokestatic  #33                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      31: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      36: checkcast     #34                 // class java/lang/Iterable
      39: invokespecial #35                 // Method org/xbill/DNS/ExtendedResolver."<init>":(Ljava/lang/Iterable;)V
      42: invokevirtual #36                 // Method org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder.resolver:(Lorg/xbill/DNS/Resolver;)Lorg/xbill/DNS/lookup/LookupSession$LookupSessionBuilder;
      45: invokestatic  #29                 // Method org/xbill/DNS/ResolverConfig.getCurrentConfig:()Lorg/xbill/DNS/ResolverConfig;
      48: invokevirtual #37                 // Method org/xbill/DNS/ResolverConfig.ndots:()I
      51: invokevirtual #38                 // Method org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder.ndots:(I)Lorg/xbill/DNS/lookup/LookupSession$LookupSessionBuilder;
      54: new           #39                 // class org/xbill/DNS/Cache
      57: dup
      58: iconst_1
      59: invokespecial #41                 // Method org/xbill/DNS/Cache."<init>":(I)V
      62: invokevirtual #42                 // Method org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder.cache:(Lorg/xbill/DNS/Cache;)Lorg/xbill/DNS/lookup/LookupSession$LookupSessionBuilder;
      65: invokevirtual #43                 // Method org/xbill/DNS/lookup/LookupSession$LookupSessionBuilder.defaultHostsFileParser:()Lorg/xbill/DNS/lookup/LookupSession$LookupSessionBuilder;
      68: areturn

  public java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> lookupAsync(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokevirtual #44                 // Method lookupAsync:(Lorg/xbill/DNS/Name;II)Ljava/util/concurrent/CompletionStage;
       7: areturn

  public java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> lookupAsync(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #45                 // Method expandName:(Lorg/xbill/DNS/Name;)Ljava/util/List;
       5: astore        4
       7: aload_0
       8: aload         4
      10: iload_2
      11: invokespecial #46                 // Method lookupWithHosts:(Ljava/util/List;I)Lorg/xbill/DNS/lookup/LookupResult;
      14: astore        5
      16: aload         5
      18: ifnull        27
      21: aload         5
      23: invokestatic  #47                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      26: areturn
      27: aload_0
      28: aload         4
      30: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: iload_2
      36: iload_3
      37: invokespecial #49                 // Method lookupUntilSuccess:(Ljava/util/Iterator;II)Ljava/util/concurrent/CompletionStage;
      40: areturn

  java.util.List<org.xbill.DNS.Name> expandName(org.xbill.DNS.Name);
    Code:
       0: aload_1
       1: invokevirtual #50                 // Method org/xbill/DNS/Name.isAbsolute:()Z
       4: ifeq          12
       7: aload_1
       8: invokestatic  #51                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      11: areturn
      12: aload_0
      13: getfield      #9                  // Field searchPath:Ljava/util/List;
      16: invokeinterface #12,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      21: aload_1
      22: invokedynamic #52,  0             // InvokeDynamic #3:apply:(Lorg/xbill/DNS/Name;)Ljava/util/function/Function;
      27: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      32: invokedynamic #53,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      37: invokeinterface #54,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      42: invokedynamic #55,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      47: invokestatic  #56                 // Method java/util/stream/Collectors.toCollection:(Ljava/util/function/Supplier;)Ljava/util/stream/Collector;
      50: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      55: checkcast     #57                 // class java/util/List
      58: astore_2
      59: aload_1
      60: invokevirtual #58                 // Method org/xbill/DNS/Name.labels:()I
      63: aload_0
      64: getfield      #8                  // Field ndots:I
      67: if_icmple     87
      70: aload_2
      71: iconst_0
      72: aload_1
      73: getstatic     #59                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      76: invokestatic  #60                 // Method safeConcat:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      79: invokeinterface #61,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      84: goto          101
      87: aload_2
      88: aload_1
      89: getstatic     #59                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      92: invokestatic  #60                 // Method safeConcat:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
      95: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     100: pop
     101: aload_2
     102: areturn

  private static org.xbill.DNS.Name safeConcat(org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #63                 // Method org/xbill/DNS/Name.concatenate:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       5: areturn
       6: astore_2
       7: aconst_null
       8: areturn
    Exception table:
       from    to  target type
           0     5     6   Class org/xbill/DNS/NameTooLongException

  private org.xbill.DNS.lookup.LookupResult lookupWithHosts(java.util.List<org.xbill.DNS.Name>, int);
    Code:
       0: aload_0
       1: getfield      #19                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
       4: ifnull        149
       7: iload_2
       8: iconst_1
       9: if_icmpeq     18
      12: iload_2
      13: bipush        28
      15: if_icmpne     149
      18: aload_1
      19: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          134
      34: aload_3
      35: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #68                 // class org/xbill/DNS/Name
      43: astore        4
      45: aload_0
      46: getfield      #19                 // Field hostsFileParser:Lorg/xbill/DNS/hosts/HostsFileParser;
      49: aload         4
      51: iload_2
      52: invokevirtual #69                 // Method org/xbill/DNS/hosts/HostsFileParser.getAddressForHost:(Lorg/xbill/DNS/Name;I)Ljava/util/Optional;
      55: astore        5
      57: aload         5
      59: invokevirtual #70                 // Method java/util/Optional.isPresent:()Z
      62: ifeq          131
      65: iload_2
      66: iconst_1
      67: if_icmpne     94
      70: new           #71                 // class org/xbill/DNS/ARecord
      73: dup
      74: aload         4
      76: iconst_1
      77: lconst_0
      78: aload         5
      80: invokevirtual #72                 // Method java/util/Optional.get:()Ljava/lang/Object;
      83: checkcast     #73                 // class java/net/InetAddress
      86: invokespecial #74                 // Method org/xbill/DNS/ARecord."<init>":(Lorg/xbill/DNS/Name;IJLjava/net/InetAddress;)V
      89: astore        6
      91: goto          115
      94: new           #75                 // class org/xbill/DNS/AAAARecord
      97: dup
      98: aload         4
     100: iconst_1
     101: lconst_0
     102: aload         5
     104: invokevirtual #72                 // Method java/util/Optional.get:()Ljava/lang/Object;
     107: checkcast     #73                 // class java/net/InetAddress
     110: invokespecial #76                 // Method org/xbill/DNS/AAAARecord."<init>":(Lorg/xbill/DNS/Name;IJLjava/net/InetAddress;)V
     113: astore        6
     115: new           #77                 // class org/xbill/DNS/lookup/LookupResult
     118: dup
     119: aload         6
     121: invokestatic  #51                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     124: invokestatic  #78                 // Method java/util/Collections.emptyList:()Ljava/util/List;
     127: invokespecial #79                 // Method org/xbill/DNS/lookup/LookupResult."<init>":(Ljava/util/List;Ljava/util/List;)V
     130: areturn
     131: goto          25
     134: goto          149
     137: astore_3
     138: getstatic     #81                 // Field log:Lorg/slf4j/Logger;
     141: ldc           #82                 // String Local hosts database parsing failed, ignoring and using resolver
     143: aload_3
     144: invokeinterface #83,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
     149: aconst_null
     150: areturn
    Exception table:
       from    to  target type
          18   130   137   Class java/io/IOException
         131   134   137   Class java/io/IOException

  private java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> lookupUntilSuccess(java.util.Iterator<org.xbill.DNS.Name>, int, int);
    Code:
       0: aload_1
       1: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
       6: checkcast     #68                 // class org/xbill/DNS/Name
       9: iload_2
      10: iload_3
      11: invokestatic  #84                 // Method org/xbill/DNS/Record.newRecord:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;
      14: astore        4
      16: aload_0
      17: aload         4
      19: aconst_null
      20: invokespecial #85                 // Method lookupWithCache:(Lorg/xbill/DNS/Record;Ljava/util/List;)Ljava/util/concurrent/CompletionStage;
      23: aload_0
      24: aload         4
      26: invokedynamic #86,  0             // InvokeDynamic #6:apply:(Lorg/xbill/DNS/lookup/LookupSession;Lorg/xbill/DNS/Record;)Ljava/util/function/Function;
      31: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/CompletionStage.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
      36: aload_0
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokedynamic #88,  0             // InvokeDynamic #7:apply:(Lorg/xbill/DNS/lookup/LookupSession;Ljava/util/Iterator;II)Ljava/util/function/BiFunction;
      45: invokeinterface #89,  2           // InterfaceMethod java/util/concurrent/CompletionStage.handle:(Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletionStage;
      50: invokestatic  #90                 // InterfaceMethod java/util/function/Function.identity:()Ljava/util/function/Function;
      53: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/CompletionStage.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
      58: areturn

  private java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> lookupWithCache(org.xbill.DNS.Record, java.util.List<org.xbill.DNS.Name>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field caches:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #91                 // Method org/xbill/DNS/Record.getDClass:()I
       8: invokestatic  #92                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      11: invokeinterface #93,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: invokestatic  #94                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      19: aload_1
      20: invokedynamic #95,  0             // InvokeDynamic #8:apply:(Lorg/xbill/DNS/Record;)Ljava/util/function/Function;
      25: invokevirtual #96                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      28: aload_0
      29: aload_1
      30: aload_2
      31: invokedynamic #97,  0             // InvokeDynamic #9:apply:(Lorg/xbill/DNS/lookup/LookupSession;Lorg/xbill/DNS/Record;Ljava/util/List;)Ljava/util/function/Function;
      36: invokevirtual #96                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      39: aload_0
      40: aload_1
      41: aload_2
      42: invokedynamic #98,  0             // InvokeDynamic #10:get:(Lorg/xbill/DNS/lookup/LookupSession;Lorg/xbill/DNS/Record;Ljava/util/List;)Ljava/util/function/Supplier;
      47: invokevirtual #99                 // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
      50: checkcast     #100                // class java/util/concurrent/CompletionStage
      53: areturn

  private java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> lookupWithResolver(org.xbill.DNS.Record, java.util.List<org.xbill.DNS.Name>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field resolver:Lorg/xbill/DNS/Resolver;
       4: aload_1
       5: invokestatic  #101                // Method org/xbill/DNS/Message.newQuery:(Lorg/xbill/DNS/Record;)Lorg/xbill/DNS/Message;
       8: aload_0
       9: getfield      #21                 // Field executor:Ljava/util/concurrent/Executor;
      12: invokeinterface #102,  3          // InterfaceMethod org/xbill/DNS/Resolver.sendAsync:(Lorg/xbill/DNS/Message;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletionStage;
      17: aload_0
      18: invokedynamic #103,  0            // InvokeDynamic #11:apply:(Lorg/xbill/DNS/lookup/LookupSession;)Ljava/util/function/Function;
      23: invokeinterface #104,  2          // InterfaceMethod java/util/concurrent/CompletionStage.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
      28: aload_2
      29: aload_1
      30: invokedynamic #105,  0            // InvokeDynamic #12:apply:(Ljava/util/List;Lorg/xbill/DNS/Record;)Ljava/util/function/Function;
      35: invokeinterface #104,  2          // InterfaceMethod java/util/concurrent/CompletionStage.thenApply:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
      40: areturn

  private org.xbill.DNS.Message maybeAddToCache(org.xbill.DNS.Message);
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #107                // Method org/xbill/DNS/Message.getSectionRRsets:(I)Ljava/util/List;
       5: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      10: astore_2
      11: aload_2
      12: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          68
      20: aload_2
      21: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #108                // class org/xbill/DNS/RRset
      29: astore_3
      30: aload_3
      31: invokevirtual #109                // Method org/xbill/DNS/RRset.getType:()I
      34: iconst_5
      35: if_icmpeq     47
      38: aload_3
      39: invokevirtual #109                // Method org/xbill/DNS/RRset.getType:()I
      42: bipush        39
      44: if_icmpne     65
      47: aload_3
      48: invokevirtual #110                // Method org/xbill/DNS/RRset.size:()I
      51: iconst_1
      52: if_icmpeq     65
      55: new           #111                // class org/xbill/DNS/lookup/InvalidZoneDataException
      58: dup
      59: ldc           #112                // String Multiple CNAME RRs not allowed, see RFC1034 3.6.2
      61: invokespecial #113                // Method org/xbill/DNS/lookup/InvalidZoneDataException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: goto          11
      68: aload_0
      69: getfield      #18                 // Field caches:Ljava/util/Map;
      72: aload_1
      73: invokevirtual #114                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
      76: invokevirtual #91                 // Method org/xbill/DNS/Record.getDClass:()I
      79: invokestatic  #92                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: invokeinterface #93,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      87: invokestatic  #94                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
      90: aload_1
      91: invokedynamic #115,  0            // InvokeDynamic #13:accept:(Lorg/xbill/DNS/Message;)Ljava/util/function/Consumer;
      96: invokevirtual #116                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      99: aload_1
     100: areturn

  private java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> setResponseToMessageFuture(org.xbill.DNS.SetResponse, org.xbill.DNS.Record, java.util.List<org.xbill.DNS.Name>);
    Code:
       0: aload_1
       1: invokevirtual #117                // Method org/xbill/DNS/SetResponse.isNXDOMAIN:()Z
       4: ifeq          27
       7: aload_0
       8: new           #118                // class org/xbill/DNS/lookup/NoSuchDomainException
      11: dup
      12: aload_2
      13: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      16: aload_2
      17: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
      20: invokespecial #121                // Method org/xbill/DNS/lookup/NoSuchDomainException."<init>":(Lorg/xbill/DNS/Name;I)V
      23: invokespecial #122                // Method completeExceptionally:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage;
      26: areturn
      27: aload_1
      28: invokevirtual #123                // Method org/xbill/DNS/SetResponse.isNXRRSET:()Z
      31: ifeq          54
      34: aload_0
      35: new           #124                // class org/xbill/DNS/lookup/NoSuchRRSetException
      38: dup
      39: aload_2
      40: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      43: aload_2
      44: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
      47: invokespecial #125                // Method org/xbill/DNS/lookup/NoSuchRRSetException."<init>":(Lorg/xbill/DNS/Name;I)V
      50: invokespecial #122                // Method completeExceptionally:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage;
      53: areturn
      54: aload_1
      55: invokevirtual #126                // Method org/xbill/DNS/SetResponse.isSuccessful:()Z
      58: ifeq          108
      61: aload_1
      62: invokevirtual #127                // Method org/xbill/DNS/SetResponse.answers:()Ljava/util/List;
      65: invokeinterface #12,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      70: aload_0
      71: invokedynamic #128,  0            // InvokeDynamic #14:apply:(Lorg/xbill/DNS/lookup/LookupSession;)Ljava/util/function/Function;
      76: invokeinterface #129,  2          // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      81: invokestatic  #33                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      84: invokeinterface #16,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      89: checkcast     #57                 // class java/util/List
      92: astore        4
      94: new           #77                 // class org/xbill/DNS/lookup/LookupResult
      97: dup
      98: aload         4
     100: aload_3
     101: invokespecial #79                 // Method org/xbill/DNS/lookup/LookupResult."<init>":(Ljava/util/List;Ljava/util/List;)V
     104: invokestatic  #47                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
     107: areturn
     108: aconst_null
     109: areturn

  private <T extends java.lang.Throwable> java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> completeExceptionally(T);
    Code:
       0: new           #130                // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #131                // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #132                // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      13: pop
      14: aload_2
      15: areturn

  private java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> resolveRedirects(org.xbill.DNS.lookup.LookupResult, org.xbill.DNS.Record);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #133                // Method maybeFollowRedirect:(Lorg/xbill/DNS/lookup/LookupResult;Lorg/xbill/DNS/Record;I)Ljava/util/concurrent/CompletionStage;
       7: areturn

  private java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> maybeFollowRedirect(org.xbill.DNS.lookup.LookupResult, org.xbill.DNS.Record, int);
    Code:
       0: iload_3
       1: aload_0
       2: getfield      #7                  // Field maxRedirects:I
       5: if_icmple     20
       8: new           #134                // class org/xbill/DNS/lookup/RedirectOverflowException
      11: dup
      12: aload_0
      13: getfield      #7                  // Field maxRedirects:I
      16: invokespecial #135                // Method org/xbill/DNS/lookup/RedirectOverflowException."<init>":(I)V
      19: athrow
      20: aload_1
      21: invokevirtual #136                // Method org/xbill/DNS/lookup/LookupResult.getRecords:()Ljava/util/List;
      24: astore        4
      26: aload         4
      28: invokeinterface #137,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      33: ifne          81
      36: aload         4
      38: iconst_0
      39: invokeinterface #138,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #139                // class org/xbill/DNS/Record
      47: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
      50: iconst_5
      51: if_icmpeq     73
      54: aload         4
      56: iconst_0
      57: invokeinterface #138,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      62: checkcast     #139                // class org/xbill/DNS/Record
      65: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
      68: bipush        39
      70: if_icmpne     81
      73: aload_0
      74: aload_1
      75: aload_2
      76: iload_3
      77: invokespecial #140                // Method maybeFollowRedirectsInAnswer:(Lorg/xbill/DNS/lookup/LookupResult;Lorg/xbill/DNS/Record;I)Ljava/util/concurrent/CompletionStage;
      80: areturn
      81: aload_1
      82: invokestatic  #47                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      85: areturn

  private java.util.concurrent.CompletionStage<org.xbill.DNS.lookup.LookupResult> maybeFollowRedirectsInAnswer(org.xbill.DNS.lookup.LookupResult, org.xbill.DNS.Record, int);
    Code:
       0: new           #141                // class java/util/ArrayList
       3: dup
       4: aload_1
       5: invokevirtual #142                // Method org/xbill/DNS/lookup/LookupResult.getAliases:()Ljava/util/List;
       8: invokespecial #143                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore        4
      13: new           #141                // class java/util/ArrayList
      16: dup
      17: invokespecial #144                // Method java/util/ArrayList."<init>":()V
      20: astore        5
      22: aload_2
      23: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      26: astore        6
      28: aload_1
      29: invokevirtual #136                // Method org/xbill/DNS/lookup/LookupResult.getRecords:()Ljava/util/List;
      32: invokeinterface #48,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      37: astore        7
      39: aload         7
      41: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          275
      49: aload         7
      51: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #139                // class org/xbill/DNS/Record
      59: astore        8
      61: iload_3
      62: aload_0
      63: getfield      #7                  // Field maxRedirects:I
      66: if_icmple     81
      69: new           #134                // class org/xbill/DNS/lookup/RedirectOverflowException
      72: dup
      73: aload_0
      74: getfield      #7                  // Field maxRedirects:I
      77: invokespecial #135                // Method org/xbill/DNS/lookup/RedirectOverflowException."<init>":(I)V
      80: athrow
      81: aload         8
      83: invokevirtual #91                 // Method org/xbill/DNS/Record.getDClass:()I
      86: aload_2
      87: invokevirtual #91                 // Method org/xbill/DNS/Record.getDClass:()I
      90: if_icmpeq     96
      93: goto          39
      96: aload         8
      98: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
     101: iconst_5
     102: if_icmpne     144
     105: aload         6
     107: aload         8
     109: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
     112: invokevirtual #145                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
     115: ifeq          144
     118: aload         4
     120: aload         6
     122: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     127: pop
     128: iinc          3, 1
     131: aload         8
     133: checkcast     #146                // class org/xbill/DNS/CNAMERecord
     136: invokevirtual #147                // Method org/xbill/DNS/CNAMERecord.getTarget:()Lorg/xbill/DNS/Name;
     139: astore        6
     141: goto          272
     144: aload         8
     146: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
     149: bipush        39
     151: if_icmpne     237
     154: aload         6
     156: aload         8
     158: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
     161: invokevirtual #148                // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
     164: ifeq          237
     167: aload         4
     169: aload         6
     171: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     176: pop
     177: iinc          3, 1
     180: aload         6
     182: aload         8
     184: checkcast     #149                // class org/xbill/DNS/DNAMERecord
     187: invokevirtual #150                // Method org/xbill/DNS/Name.fromDNAME:(Lorg/xbill/DNS/DNAMERecord;)Lorg/xbill/DNS/Name;
     190: astore        6
     192: goto          272
     195: astore        9
     197: new           #111                // class org/xbill/DNS/lookup/InvalidZoneDataException
     200: dup
     201: new           #151                // class java/lang/StringBuilder
     204: dup
     205: invokespecial #152                // Method java/lang/StringBuilder."<init>":()V
     208: ldc           #153                // String Cannot derive DNAME from
     210: invokevirtual #154                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: aload         8
     215: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     218: ldc           #156                // String  for
     220: invokevirtual #154                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: aload         6
     225: invokevirtual #155                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     228: invokevirtual #157                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     231: aload         9
     233: invokespecial #158                // Method org/xbill/DNS/lookup/InvalidZoneDataException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     236: athrow
     237: aload         8
     239: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
     242: aload_2
     243: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
     246: if_icmpne     272
     249: aload         6
     251: aload         8
     253: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
     256: invokevirtual #145                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
     259: ifeq          272
     262: aload         5
     264: aload         8
     266: invokeinterface #62,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     271: pop
     272: goto          39
     275: aload         5
     277: invokeinterface #137,  1          // InterfaceMethod java/util/List.isEmpty:()Z
     282: ifne          300
     285: new           #77                 // class org/xbill/DNS/lookup/LookupResult
     288: dup
     289: aload         5
     291: aload         4
     293: invokespecial #79                 // Method org/xbill/DNS/lookup/LookupResult."<init>":(Ljava/util/List;Ljava/util/List;)V
     296: invokestatic  #47                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
     299: areturn
     300: iload_3
     301: aload_0
     302: getfield      #7                  // Field maxRedirects:I
     305: if_icmple     320
     308: new           #134                // class org/xbill/DNS/lookup/RedirectOverflowException
     311: dup
     312: aload_0
     313: getfield      #7                  // Field maxRedirects:I
     316: invokespecial #135                // Method org/xbill/DNS/lookup/RedirectOverflowException."<init>":(I)V
     319: athrow
     320: iload_3
     321: iconst_1
     322: iadd
     323: istore        7
     325: aload         6
     327: aload_2
     328: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
     331: aload_2
     332: invokevirtual #91                 // Method org/xbill/DNS/Record.getDClass:()I
     335: invokestatic  #84                 // Method org/xbill/DNS/Record.newRecord:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Record;
     338: astore        8
     340: aload_0
     341: aload         8
     343: aload         4
     345: invokespecial #85                 // Method lookupWithCache:(Lorg/xbill/DNS/Record;Ljava/util/List;)Ljava/util/concurrent/CompletionStage;
     348: aload_0
     349: aload         8
     351: iload         7
     353: invokedynamic #159,  0            // InvokeDynamic #15:apply:(Lorg/xbill/DNS/lookup/LookupSession;Lorg/xbill/DNS/Record;I)Ljava/util/function/Function;
     358: invokeinterface #87,  2           // InterfaceMethod java/util/concurrent/CompletionStage.thenCompose:(Ljava/util/function/Function;)Ljava/util/concurrent/CompletionStage;
     363: areturn
    Exception table:
       from    to  target type
         180   192   195   Class org/xbill/DNS/NameTooLongException

  private static org.xbill.DNS.lookup.LookupResult buildResult(org.xbill.DNS.Message, java.util.List<org.xbill.DNS.Name>, org.xbill.DNS.Record);
    Code:
       0: aload_0
       1: invokevirtual #160                // Method org/xbill/DNS/Message.getRcode:()I
       4: istore_3
       5: aload_0
       6: iconst_1
       7: invokevirtual #161                // Method org/xbill/DNS/Message.getSection:(I)Ljava/util/List;
      10: astore        4
      12: aload         4
      14: invokeinterface #137,  1          // InterfaceMethod java/util/List.isEmpty:()Z
      19: ifeq          124
      22: iload_3
      23: ifeq          124
      26: iload_3
      27: lookupswitch  { // 3
                     2: 92
                     3: 60
                     8: 76
               default: 100
          }
      60: new           #118                // class org/xbill/DNS/lookup/NoSuchDomainException
      63: dup
      64: aload_2
      65: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      68: aload_2
      69: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
      72: invokespecial #121                // Method org/xbill/DNS/lookup/NoSuchDomainException."<init>":(Lorg/xbill/DNS/Name;I)V
      75: athrow
      76: new           #124                // class org/xbill/DNS/lookup/NoSuchRRSetException
      79: dup
      80: aload_2
      81: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      84: aload_2
      85: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
      88: invokespecial #125                // Method org/xbill/DNS/lookup/NoSuchRRSetException."<init>":(Lorg/xbill/DNS/Name;I)V
      91: athrow
      92: new           #162                // class org/xbill/DNS/lookup/ServerFailedException
      95: dup
      96: invokespecial #163                // Method org/xbill/DNS/lookup/ServerFailedException."<init>":()V
      99: athrow
     100: new           #164                // class org/xbill/DNS/lookup/LookupFailedException
     103: dup
     104: ldc           #165                // String Unknown non-success error code %s
     106: iconst_1
     107: anewarray     #166                // class java/lang/Object
     110: dup
     111: iconst_0
     112: iload_3
     113: invokestatic  #167                // Method org/xbill/DNS/Rcode.string:(I)Ljava/lang/String;
     116: aastore
     117: invokestatic  #168                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     120: invokespecial #169                // Method org/xbill/DNS/lookup/LookupFailedException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: new           #77                 // class org/xbill/DNS/lookup/LookupResult
     127: dup
     128: aload         4
     130: aload_1
     131: invokespecial #79                 // Method org/xbill/DNS/lookup/LookupResult."<init>":(Ljava/util/List;Ljava/util/List;)V
     134: areturn

  private java.util.concurrent.CompletionStage lambda$maybeFollowRedirectsInAnswer$10(org.xbill.DNS.Record, int, org.xbill.DNS.lookup.LookupResult);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: iload_2
       4: invokespecial #133                // Method maybeFollowRedirect:(Lorg/xbill/DNS/lookup/LookupResult;Lorg/xbill/DNS/Record;I)Ljava/util/concurrent/CompletionStage;
       7: areturn

  private java.util.stream.Stream lambda$setResponseToMessageFuture$9(org.xbill.DNS.RRset);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #10                 // Field cycleResults:Z
       5: invokevirtual #170                // Method org/xbill/DNS/RRset.rrs:(Z)Ljava/util/List;
       8: invokeinterface #12,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      13: areturn

  private static void lambda$maybeAddToCache$8(org.xbill.DNS.Message, org.xbill.DNS.Cache);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #171                // Method org/xbill/DNS/Cache.addMessage:(Lorg/xbill/DNS/Message;)Lorg/xbill/DNS/SetResponse;
       5: pop
       6: return

  private static org.xbill.DNS.lookup.LookupResult lambda$lookupWithResolver$7(java.util.List, org.xbill.DNS.Record, org.xbill.DNS.Message);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokestatic  #172                // Method buildResult:(Lorg/xbill/DNS/Message;Ljava/util/List;Lorg/xbill/DNS/Record;)Lorg/xbill/DNS/lookup/LookupResult;
       6: areturn

  private java.util.concurrent.CompletionStage lambda$lookupWithCache$6(org.xbill.DNS.Record, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #173                // Method lookupWithResolver:(Lorg/xbill/DNS/Record;Ljava/util/List;)Ljava/util/concurrent/CompletionStage;
       6: areturn

  private java.util.concurrent.CompletionStage lambda$lookupWithCache$5(org.xbill.DNS.Record, java.util.List, org.xbill.DNS.SetResponse);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokespecial #174                // Method setResponseToMessageFuture:(Lorg/xbill/DNS/SetResponse;Lorg/xbill/DNS/Record;Ljava/util/List;)Ljava/util/concurrent/CompletionStage;
       7: areturn

  private static org.xbill.DNS.SetResponse lambda$lookupWithCache$4(org.xbill.DNS.Record, org.xbill.DNS.Cache);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #119                // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       5: aload_0
       6: invokevirtual #120                // Method org/xbill/DNS/Record.getType:()I
       9: iconst_3
      10: invokevirtual #176                // Method org/xbill/DNS/Cache.lookupRecords:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
      13: areturn

  private java.util.concurrent.CompletionStage lambda$lookupUntilSuccess$3(java.util.Iterator, int, int, org.xbill.DNS.lookup.LookupResult, java.lang.Throwable);
    Code:
       0: aload         5
       2: ifnonnull     9
       5: aconst_null
       6: goto          14
       9: aload         5
      11: invokevirtual #177                // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      14: astore        6
      16: aload         6
      18: instanceof    #118                // class org/xbill/DNS/lookup/NoSuchDomainException
      21: ifne          32
      24: aload         6
      26: instanceof    #124                // class org/xbill/DNS/lookup/NoSuchRRSetException
      29: ifeq          56
      32: aload_1
      33: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          49
      41: aload_0
      42: aload_1
      43: iload_2
      44: iload_3
      45: invokespecial #49                 // Method lookupUntilSuccess:(Ljava/util/Iterator;II)Ljava/util/concurrent/CompletionStage;
      48: areturn
      49: aload_0
      50: aload         6
      52: invokespecial #122                // Method completeExceptionally:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage;
      55: areturn
      56: aload         6
      58: ifnull        68
      61: aload_0
      62: aload         6
      64: invokespecial #122                // Method completeExceptionally:(Ljava/lang/Throwable;)Ljava/util/concurrent/CompletionStage;
      67: areturn
      68: aload         4
      70: invokestatic  #47                 // Method java/util/concurrent/CompletableFuture.completedFuture:(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;
      73: areturn

  private java.util.concurrent.CompletionStage lambda$lookupUntilSuccess$2(org.xbill.DNS.Record, org.xbill.DNS.lookup.LookupResult);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokespecial #178                // Method resolveRedirects:(Lorg/xbill/DNS/lookup/LookupResult;Lorg/xbill/DNS/Record;)Ljava/util/concurrent/CompletionStage;
       6: areturn

  private static org.xbill.DNS.Name lambda$expandName$1(org.xbill.DNS.Name, org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #60                 // Method safeConcat:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Name;)Lorg/xbill/DNS/Name;
       5: areturn

  private static org.xbill.DNS.Cache lambda$new$0(org.xbill.DNS.Cache);
    Code:
       0: aload_0
       1: areturn

  org.xbill.DNS.lookup.LookupSession(org.xbill.DNS.Resolver, int, int, java.util.List, boolean, java.util.List, org.xbill.DNS.hosts.HostsFileParser, java.util.concurrent.Executor, org.xbill.DNS.lookup.LookupSession$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: iload         5
       8: aload         6
      10: aload         7
      12: aload         8
      14: invokespecial #1                  // Method "<init>":(Lorg/xbill/DNS/Resolver;IILjava/util/List;ZLjava/util/List;Lorg/xbill/DNS/hosts/HostsFileParser;Ljava/util/concurrent/Executor;)V
      17: return

  static {};
    Code:
       0: ldc           #24                 // class org/xbill/DNS/lookup/LookupSession
       2: invokestatic  #179                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #81                 // Field log:Lorg/slf4j/Logger;
       8: return
}
