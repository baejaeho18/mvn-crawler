Compiled from "DNSSEC.java"
public class org.xbill.DNS.DNSSEC {
  private static final org.xbill.DNS.DNSSEC$ECKeyInfo GOST;

  private static final org.xbill.DNS.DNSSEC$ECKeyInfo ECDSA_P256;

  private static final org.xbill.DNS.DNSSEC$ECKeyInfo ECDSA_P384;

  static final int ASN1_SEQ;

  static final int ASN1_INT;

  static final int ASN1_BITSTRING;

  static final int ASN1_OID;

  private static final int DSA_LEN;

  private org.xbill.DNS.DNSSEC();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static void digestSIG(org.xbill.DNS.DNSOutput, org.xbill.DNS.SIGBase);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method org/xbill/DNS/SIGBase.getTypeCovered:()I
       5: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_0
       9: aload_1
      10: invokevirtual #4                  // Method org/xbill/DNS/SIGBase.getAlgorithm:()I
      13: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      16: aload_0
      17: aload_1
      18: invokevirtual #6                  // Method org/xbill/DNS/SIGBase.getLabels:()I
      21: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      24: aload_0
      25: aload_1
      26: invokevirtual #7                  // Method org/xbill/DNS/SIGBase.getOrigTTL:()J
      29: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      32: aload_0
      33: aload_1
      34: invokevirtual #9                  // Method org/xbill/DNS/SIGBase.getExpire:()Ljava/time/Instant;
      37: invokevirtual #10                 // Method java/time/Instant.getEpochSecond:()J
      40: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      43: aload_0
      44: aload_1
      45: invokevirtual #11                 // Method org/xbill/DNS/SIGBase.getTimeSigned:()Ljava/time/Instant;
      48: invokevirtual #10                 // Method java/time/Instant.getEpochSecond:()J
      51: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
      54: aload_0
      55: aload_1
      56: invokevirtual #12                 // Method org/xbill/DNS/SIGBase.getFootprint:()I
      59: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      62: aload_1
      63: invokevirtual #13                 // Method org/xbill/DNS/SIGBase.getSigner:()Lorg/xbill/DNS/Name;
      66: aload_0
      67: invokevirtual #14                 // Method org/xbill/DNS/Name.toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
      70: return

  public static byte[] digestRRset(org.xbill.DNS.RRSIGRecord, org.xbill.DNS.RRset);
    Code:
       0: new           #15                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokestatic  #17                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
      13: aload_1
      14: invokevirtual #18                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
      17: astore_3
      18: aconst_null
      19: astore        4
      21: aload_0
      22: invokevirtual #19                 // Method org/xbill/DNS/RRSIGRecord.getLabels:()I
      25: iconst_1
      26: iadd
      27: istore        5
      29: aload_3
      30: invokevirtual #20                 // Method org/xbill/DNS/Name.labels:()I
      33: iload         5
      35: if_icmple     51
      38: aload_3
      39: aload_3
      40: invokevirtual #20                 // Method org/xbill/DNS/Name.labels:()I
      43: iload         5
      45: isub
      46: invokevirtual #21                 // Method org/xbill/DNS/Name.wild:(I)Lorg/xbill/DNS/Name;
      49: astore        4
      51: new           #15                 // class org/xbill/DNS/DNSOutput
      54: dup
      55: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      58: astore        6
      60: aload         4
      62: ifnull        75
      65: aload         4
      67: aload         6
      69: invokevirtual #14                 // Method org/xbill/DNS/Name.toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
      72: goto          81
      75: aload_3
      76: aload         6
      78: invokevirtual #14                 // Method org/xbill/DNS/Name.toWireCanonical:(Lorg/xbill/DNS/DNSOutput;)V
      81: aload         6
      83: aload_1
      84: invokevirtual #22                 // Method org/xbill/DNS/RRset.getType:()I
      87: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      90: aload         6
      92: aload_1
      93: invokevirtual #23                 // Method org/xbill/DNS/RRset.getDClass:()I
      96: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      99: aload         6
     101: aload_0
     102: invokevirtual #24                 // Method org/xbill/DNS/RRSIGRecord.getOrigTTL:()J
     105: invokevirtual #8                  // Method org/xbill/DNS/DNSOutput.writeU32:(J)V
     108: aload_1
     109: iconst_0
     110: invokevirtual #25                 // Method org/xbill/DNS/RRset.rrs:(Z)Ljava/util/List;
     113: invokeinterface #26,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     118: invokeinterface #27,  1           // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;
     123: aload_2
     124: aload         6
     126: invokedynamic #28,  0             // InvokeDynamic #0:accept:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/DNSOutput;)Ljava/util/function/Consumer;
     131: invokeinterface #29,  2           // InterfaceMethod java/util/stream/Stream.forEachOrdered:(Ljava/util/function/Consumer;)V
     136: aload_2
     137: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     140: areturn

  public static byte[] digestMessage(org.xbill.DNS.SIGRecord, org.xbill.DNS.Message, byte[]);
    Code:
       0: new           #15                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_0
      10: invokestatic  #17                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
      13: aload_2
      14: ifnull        22
      17: aload_3
      18: aload_2
      19: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      22: aload_1
      23: aload_3
      24: invokevirtual #32                 // Method org/xbill/DNS/Message.toWire:(Lorg/xbill/DNS/DNSOutput;)V
      27: aload_3
      28: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      31: areturn

  private static int bigIntegerLength(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #33                 // Method java/math/BigInteger.bitLength:()I
       4: bipush        7
       6: iadd
       7: bipush        8
       9: idiv
      10: ireturn

  private static java.math.BigInteger readBigInteger(org.xbill.DNS.DNSInput, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #34                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
       5: astore_2
       6: new           #35                 // class java/math/BigInteger
       9: dup
      10: iconst_1
      11: aload_2
      12: invokespecial #36                 // Method java/math/BigInteger."<init>":(I[B)V
      15: areturn

  private static java.math.BigInteger readBigInteger(org.xbill.DNS.DNSInput);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method org/xbill/DNS/DNSInput.readByteArray:()[B
       4: astore_1
       5: new           #35                 // class java/math/BigInteger
       8: dup
       9: iconst_1
      10: aload_1
      11: invokespecial #36                 // Method java/math/BigInteger."<init>":(I[B)V
      14: areturn

  private static byte[] trimByteArray(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: baload
       3: ifne          26
       6: aload_0
       7: arraylength
       8: iconst_1
       9: isub
      10: newarray       byte
      12: astore_1
      13: aload_0
      14: iconst_1
      15: aload_1
      16: iconst_0
      17: aload_0
      18: arraylength
      19: iconst_1
      20: isub
      21: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_1
      25: areturn
      26: aload_0
      27: areturn

  private static void reverseByteArray(byte[]);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: arraylength
       5: iconst_2
       6: idiv
       7: if_icmpge     37
      10: aload_0
      11: arraylength
      12: iload_1
      13: isub
      14: iconst_1
      15: isub
      16: istore_2
      17: aload_0
      18: iload_1
      19: baload
      20: istore_3
      21: aload_0
      22: iload_1
      23: aload_0
      24: iload_2
      25: baload
      26: bastore
      27: aload_0
      28: iload_2
      29: iload_3
      30: bastore
      31: iinc          1, 1
      34: goto          2
      37: return

  private static java.math.BigInteger readBigIntegerLittleEndian(org.xbill.DNS.DNSInput, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #34                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
       5: astore_2
       6: aload_2
       7: invokestatic  #39                 // Method reverseByteArray:([B)V
      10: new           #35                 // class java/math/BigInteger
      13: dup
      14: iconst_1
      15: aload_2
      16: invokespecial #36                 // Method java/math/BigInteger."<init>":(I[B)V
      19: areturn

  private static void writeBigInteger(org.xbill.DNS.DNSOutput, java.math.BigInteger);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/math/BigInteger.toByteArray:()[B
       4: invokestatic  #41                 // Method trimByteArray:([B)[B
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      13: return

  private static void writePaddedBigInteger(org.xbill.DNS.DNSOutput, java.math.BigInteger, int);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/math/BigInteger.toByteArray:()[B
       4: invokestatic  #41                 // Method trimByteArray:([B)[B
       7: astore_3
       8: aload_3
       9: arraylength
      10: iload_2
      11: if_icmple     22
      14: new           #42                 // class java/lang/IllegalArgumentException
      17: dup
      18: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":()V
      21: athrow
      22: aload_3
      23: arraylength
      24: iload_2
      25: if_icmpge     42
      28: iload_2
      29: aload_3
      30: arraylength
      31: isub
      32: newarray       byte
      34: astore        4
      36: aload_0
      37: aload         4
      39: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      42: aload_0
      43: aload_3
      44: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      47: return

  private static void writePaddedBigIntegerLittleEndian(org.xbill.DNS.DNSOutput, java.math.BigInteger, int);
    Code:
       0: aload_1
       1: invokevirtual #40                 // Method java/math/BigInteger.toByteArray:()[B
       4: invokestatic  #41                 // Method trimByteArray:([B)[B
       7: astore_3
       8: aload_3
       9: arraylength
      10: iload_2
      11: if_icmple     22
      14: new           #42                 // class java/lang/IllegalArgumentException
      17: dup
      18: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":()V
      21: athrow
      22: aload_3
      23: invokestatic  #39                 // Method reverseByteArray:([B)V
      26: aload_0
      27: aload_3
      28: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      31: aload_3
      32: arraylength
      33: iload_2
      34: if_icmpge     51
      37: iload_2
      38: aload_3
      39: arraylength
      40: isub
      41: newarray       byte
      43: astore        4
      45: aload_0
      46: aload         4
      48: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      51: return

  private static java.security.PublicKey toRSAPublicKey(byte[]) throws java.io.IOException, java.security.GeneralSecurityException;
    Code:
       0: new           #44                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: astore_1
       9: aload_1
      10: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
      13: istore_2
      14: iload_2
      15: ifne          23
      18: aload_1
      19: invokevirtual #47                 // Method org/xbill/DNS/DNSInput.readU16:()I
      22: istore_2
      23: aload_1
      24: iload_2
      25: invokestatic  #48                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      28: astore_3
      29: aload_1
      30: invokestatic  #49                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;)Ljava/math/BigInteger;
      33: astore        4
      35: ldc           #50                 // String RSA
      37: invokestatic  #51                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      40: astore        5
      42: aload         5
      44: new           #52                 // class java/security/spec/RSAPublicKeySpec
      47: dup
      48: aload         4
      50: aload_3
      51: invokespecial #53                 // Method java/security/spec/RSAPublicKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      54: invokevirtual #54                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      57: areturn

  private static java.security.PublicKey toDSAPublicKey(byte[]) throws java.io.IOException, java.security.GeneralSecurityException, org.xbill.DNS.DNSSEC$MalformedKeyException;
    Code:
       0: new           #44                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: astore_1
       9: aload_1
      10: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
      13: istore_2
      14: iload_2
      15: bipush        8
      17: if_icmple     30
      20: new           #55                 // class org/xbill/DNS/DNSSEC$MalformedKeyException
      23: dup
      24: ldc           #56                 // String t is too large
      26: invokespecial #57                 // Method org/xbill/DNS/DNSSEC$MalformedKeyException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: aload_1
      31: bipush        20
      33: invokestatic  #48                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      36: astore_3
      37: aload_1
      38: bipush        64
      40: iload_2
      41: bipush        8
      43: imul
      44: iadd
      45: invokestatic  #48                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      48: astore        4
      50: aload_1
      51: bipush        64
      53: iload_2
      54: bipush        8
      56: imul
      57: iadd
      58: invokestatic  #48                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      61: astore        5
      63: aload_1
      64: bipush        64
      66: iload_2
      67: bipush        8
      69: imul
      70: iadd
      71: invokestatic  #48                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      74: astore        6
      76: ldc           #58                 // String DSA
      78: invokestatic  #51                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      81: astore        7
      83: aload         7
      85: new           #59                 // class java/security/spec/DSAPublicKeySpec
      88: dup
      89: aload         6
      91: aload         4
      93: aload_3
      94: aload         5
      96: invokespecial #60                 // Method java/security/spec/DSAPublicKeySpec."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      99: invokevirtual #54                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
     102: areturn

  private static java.security.PublicKey toECGOSTPublicKey(byte[], org.xbill.DNS.DNSSEC$ECKeyInfo) throws java.io.IOException, java.security.GeneralSecurityException;
    Code:
       0: new           #44                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      14: invokestatic  #62                 // Method readBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      17: astore_3
      18: aload_2
      19: aload_1
      20: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      23: invokestatic  #62                 // Method readBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      26: astore        4
      28: new           #63                 // class java/security/spec/ECPoint
      31: dup
      32: aload_3
      33: aload         4
      35: invokespecial #64                 // Method java/security/spec/ECPoint."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      38: astore        5
      40: ldc           #65                 // String ECGOST3410
      42: invokestatic  #51                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      45: astore        6
      47: aload         6
      49: new           #66                 // class java/security/spec/ECPublicKeySpec
      52: dup
      53: aload         5
      55: aload_1
      56: getfield      #67                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.spec:Ljava/security/spec/ECParameterSpec;
      59: invokespecial #68                 // Method java/security/spec/ECPublicKeySpec."<init>":(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V
      62: invokevirtual #54                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      65: areturn

  private static java.security.PublicKey toECDSAPublicKey(byte[], org.xbill.DNS.DNSSEC$ECKeyInfo) throws java.io.IOException, java.security.GeneralSecurityException;
    Code:
       0: new           #44                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: astore_2
       9: aload_2
      10: aload_1
      11: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      14: invokestatic  #48                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      17: astore_3
      18: aload_2
      19: aload_1
      20: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      23: invokestatic  #48                 // Method readBigInteger:(Lorg/xbill/DNS/DNSInput;I)Ljava/math/BigInteger;
      26: astore        4
      28: new           #63                 // class java/security/spec/ECPoint
      31: dup
      32: aload_3
      33: aload         4
      35: invokespecial #64                 // Method java/security/spec/ECPoint."<init>":(Ljava/math/BigInteger;Ljava/math/BigInteger;)V
      38: astore        5
      40: ldc           #69                 // String EC
      42: invokestatic  #51                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      45: astore        6
      47: aload         6
      49: new           #66                 // class java/security/spec/ECPublicKeySpec
      52: dup
      53: aload         5
      55: aload_1
      56: getfield      #67                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.spec:Ljava/security/spec/ECParameterSpec;
      59: invokespecial #68                 // Method java/security/spec/ECPublicKeySpec."<init>":(Ljava/security/spec/ECPoint;Ljava/security/spec/ECParameterSpec;)V
      62: invokevirtual #54                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
      65: areturn

  private static java.security.PublicKey toEdDSAPublicKey(byte[], byte) throws java.security.GeneralSecurityException;
    Code:
       0: bipush        12
       2: aload_0
       3: arraylength
       4: iadd
       5: newarray       byte
       7: astore_2
       8: aload_2
       9: iconst_0
      10: bipush        48
      12: bastore
      13: aload_2
      14: iconst_1
      15: bipush        10
      17: aload_0
      18: arraylength
      19: iadd
      20: i2b
      21: bastore
      22: aload_2
      23: iconst_2
      24: bipush        48
      26: bastore
      27: aload_2
      28: iconst_3
      29: iconst_5
      30: bastore
      31: aload_2
      32: iconst_4
      33: bipush        6
      35: bastore
      36: aload_2
      37: iconst_5
      38: iconst_3
      39: bastore
      40: aload_2
      41: bipush        6
      43: bipush        43
      45: bastore
      46: aload_2
      47: bipush        7
      49: bipush        101
      51: bastore
      52: aload_2
      53: bipush        8
      55: iload_1
      56: bastore
      57: aload_2
      58: bipush        9
      60: iconst_3
      61: bastore
      62: aload_2
      63: bipush        10
      65: aload_0
      66: arraylength
      67: iconst_1
      68: iadd
      69: i2b
      70: bastore
      71: aload_0
      72: iconst_0
      73: aload_2
      74: bipush        12
      76: aload_0
      77: arraylength
      78: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      81: new           #71                 // class java/security/spec/X509EncodedKeySpec
      84: dup
      85: aload_2
      86: invokespecial #72                 // Method java/security/spec/X509EncodedKeySpec."<init>":([B)V
      89: astore_3
      90: ldc           #73                 // String EdDSA
      92: invokestatic  #51                 // Method java/security/KeyFactory.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;
      95: astore        4
      97: aload         4
      99: aload_3
     100: invokevirtual #54                 // Method java/security/KeyFactory.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;
     103: areturn

  static java.security.PublicKey toPublicKey(org.xbill.DNS.KEYBase) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method org/xbill/DNS/KEYBase.getAlgorithm:()I
       4: aload_0
       5: invokevirtual #75                 // Method org/xbill/DNS/KEYBase.getKey:()[B
       8: aload_0
       9: invokestatic  #76                 // Method toPublicKey:(I[BLorg/xbill/DNS/Record;)Ljava/security/PublicKey;
      12: areturn

  static java.security.PublicKey toPublicKey(int, byte[], org.xbill.DNS.Record) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 16
                     1: 80
                     2: 128
                     3: 85
                     4: 128
                     5: 80
                     6: 85
                     7: 80
                     8: 80
                     9: 128
                    10: 80
                    11: 128
                    12: 90
                    13: 98
                    14: 106
                    15: 114
                    16: 121
               default: 128
          }
      80: aload_1
      81: invokestatic  #77                 // Method toRSAPublicKey:([B)Ljava/security/PublicKey;
      84: areturn
      85: aload_1
      86: invokestatic  #78                 // Method toDSAPublicKey:([B)Ljava/security/PublicKey;
      89: areturn
      90: aload_1
      91: getstatic     #79                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      94: invokestatic  #80                 // Method toECGOSTPublicKey:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)Ljava/security/PublicKey;
      97: areturn
      98: aload_1
      99: getstatic     #81                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     102: invokestatic  #82                 // Method toECDSAPublicKey:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)Ljava/security/PublicKey;
     105: areturn
     106: aload_1
     107: getstatic     #83                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     110: invokestatic  #82                 // Method toECDSAPublicKey:([BLorg/xbill/DNS/DNSSEC$ECKeyInfo;)Ljava/security/PublicKey;
     113: areturn
     114: aload_1
     115: bipush        112
     117: invokestatic  #84                 // Method toEdDSAPublicKey:([BB)Ljava/security/PublicKey;
     120: areturn
     121: aload_1
     122: bipush        113
     124: invokestatic  #84                 // Method toEdDSAPublicKey:([BB)Ljava/security/PublicKey;
     127: areturn
     128: new           #85                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     131: dup
     132: iload_0
     133: invokespecial #86                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     136: athrow
     137: astore_3
     138: new           #55                 // class org/xbill/DNS/DNSSEC$MalformedKeyException
     141: dup
     142: aload_2
     143: aload_3
     144: invokespecial #88                 // Method org/xbill/DNS/DNSSEC$MalformedKeyException."<init>":(Lorg/xbill/DNS/Record;Ljava/lang/Throwable;)V
     147: athrow
     148: astore_3
     149: new           #90                 // class org/xbill/DNS/DNSSEC$DNSSECException
     152: dup
     153: aload_3
     154: invokespecial #91                 // Method org/xbill/DNS/DNSSEC$DNSSECException."<init>":(Ljava/lang/Throwable;)V
     157: athrow
    Exception table:
       from    to  target type
           0    84   137   Class java/io/IOException
          85    89   137   Class java/io/IOException
          90    97   137   Class java/io/IOException
          98   105   137   Class java/io/IOException
         106   113   137   Class java/io/IOException
         114   120   137   Class java/io/IOException
         121   127   137   Class java/io/IOException
         128   137   137   Class java/io/IOException
           0    84   148   Class java/security/GeneralSecurityException
          85    89   148   Class java/security/GeneralSecurityException
          90    97   148   Class java/security/GeneralSecurityException
          98   105   148   Class java/security/GeneralSecurityException
         106   113   148   Class java/security/GeneralSecurityException
         114   120   148   Class java/security/GeneralSecurityException
         121   127   148   Class java/security/GeneralSecurityException
         128   137   148   Class java/security/GeneralSecurityException

  private static byte[] fromRSAPublicKey(java.security.interfaces.RSAPublicKey);
    Code:
       0: new           #15                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #92,  1           // InterfaceMethod java/security/interfaces/RSAPublicKey.getPublicExponent:()Ljava/math/BigInteger;
      14: astore_2
      15: aload_0
      16: invokeinterface #93,  1           // InterfaceMethod java/security/interfaces/RSAPublicKey.getModulus:()Ljava/math/BigInteger;
      21: astore_3
      22: aload_2
      23: invokestatic  #94                 // Method bigIntegerLength:(Ljava/math/BigInteger;)I
      26: istore        4
      28: iload         4
      30: sipush        256
      33: if_icmpge     45
      36: aload_1
      37: iload         4
      39: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      42: goto          56
      45: aload_1
      46: iconst_0
      47: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      50: aload_1
      51: iload         4
      53: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      56: aload_1
      57: aload_2
      58: invokestatic  #95                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      61: aload_1
      62: aload_3
      63: invokestatic  #95                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      66: aload_1
      67: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      70: areturn

  private static byte[] fromDSAPublicKey(java.security.interfaces.DSAPublicKey);
    Code:
       0: new           #15                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #96,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      14: invokeinterface #97,  1           // InterfaceMethod java/security/interfaces/DSAParams.getQ:()Ljava/math/BigInteger;
      19: astore_2
      20: aload_0
      21: invokeinterface #96,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      26: invokeinterface #98,  1           // InterfaceMethod java/security/interfaces/DSAParams.getP:()Ljava/math/BigInteger;
      31: astore_3
      32: aload_0
      33: invokeinterface #96,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      38: invokeinterface #99,  1           // InterfaceMethod java/security/interfaces/DSAParams.getG:()Ljava/math/BigInteger;
      43: astore        4
      45: aload_0
      46: invokeinterface #100,  1          // InterfaceMethod java/security/interfaces/DSAPublicKey.getY:()Ljava/math/BigInteger;
      51: astore        5
      53: aload_3
      54: invokevirtual #40                 // Method java/math/BigInteger.toByteArray:()[B
      57: arraylength
      58: bipush        64
      60: isub
      61: bipush        8
      63: idiv
      64: istore        6
      66: aload_1
      67: iload         6
      69: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      72: aload_1
      73: aload_2
      74: invokestatic  #95                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      77: aload_1
      78: aload_3
      79: invokestatic  #95                 // Method writeBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;)V
      82: aload_1
      83: aload         4
      85: bipush        8
      87: iload         6
      89: imul
      90: bipush        64
      92: iadd
      93: invokestatic  #101                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      96: aload_1
      97: aload         5
      99: bipush        8
     101: iload         6
     103: imul
     104: bipush        64
     106: iadd
     107: invokestatic  #101                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
     110: aload_1
     111: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     114: areturn

  private static byte[] fromECGOSTPublicKey(java.security.interfaces.ECPublicKey, org.xbill.DNS.DNSSEC$ECKeyInfo);
    Code:
       0: new           #15                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #102,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      14: invokevirtual #103                // Method java/security/spec/ECPoint.getAffineX:()Ljava/math/BigInteger;
      17: astore_3
      18: aload_0
      19: invokeinterface #102,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      24: invokevirtual #104                // Method java/security/spec/ECPoint.getAffineY:()Ljava/math/BigInteger;
      27: astore        4
      29: aload_2
      30: aload_3
      31: aload_1
      32: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      35: invokestatic  #105                // Method writePaddedBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      38: aload_2
      39: aload         4
      41: aload_1
      42: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      45: invokestatic  #105                // Method writePaddedBigIntegerLittleEndian:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      48: aload_2
      49: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      52: areturn

  private static byte[] fromECDSAPublicKey(java.security.interfaces.ECPublicKey, org.xbill.DNS.DNSSEC$ECKeyInfo);
    Code:
       0: new           #15                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_2
       8: aload_0
       9: invokeinterface #102,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      14: invokevirtual #103                // Method java/security/spec/ECPoint.getAffineX:()Ljava/math/BigInteger;
      17: astore_3
      18: aload_0
      19: invokeinterface #102,  1          // InterfaceMethod java/security/interfaces/ECPublicKey.getW:()Ljava/security/spec/ECPoint;
      24: invokevirtual #104                // Method java/security/spec/ECPoint.getAffineY:()Ljava/math/BigInteger;
      27: astore        4
      29: aload_2
      30: aload_3
      31: aload_1
      32: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      35: invokestatic  #101                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      38: aload_2
      39: aload         4
      41: aload_1
      42: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      45: invokestatic  #101                // Method writePaddedBigInteger:(Lorg/xbill/DNS/DNSOutput;Ljava/math/BigInteger;I)V
      48: aload_2
      49: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      52: areturn

  private static byte[] fromEdDSAPublicKey(java.security.PublicKey);
    Code:
       0: aload_0
       1: invokeinterface #106,  1          // InterfaceMethod java/security/PublicKey.getEncoded:()[B
       6: astore_1
       7: aload_1
       8: bipush        12
      10: aload_1
      11: arraylength
      12: invokestatic  #107                // Method java/util/Arrays.copyOfRange:([BII)[B
      15: areturn

  static byte[] fromPublicKey(java.security.PublicKey, int) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 16
                     1: 80
                     2: 231
                     3: 103
                     4: 231
                     5: 80
                     6: 103
                     7: 80
                     8: 80
                     9: 231
                    10: 80
                    11: 231
                    12: 126
                    13: 152
                    14: 178
                    15: 204
                    16: 204
               default: 231
          }
      80: aload_0
      81: instanceof    #108                // class java/security/interfaces/RSAPublicKey
      84: ifne          95
      87: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
      90: dup
      91: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
      94: athrow
      95: aload_0
      96: checkcast     #108                // class java/security/interfaces/RSAPublicKey
      99: invokestatic  #111                // Method fromRSAPublicKey:(Ljava/security/interfaces/RSAPublicKey;)[B
     102: areturn
     103: aload_0
     104: instanceof    #112                // class java/security/interfaces/DSAPublicKey
     107: ifne          118
     110: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     113: dup
     114: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     117: athrow
     118: aload_0
     119: checkcast     #112                // class java/security/interfaces/DSAPublicKey
     122: invokestatic  #113                // Method fromDSAPublicKey:(Ljava/security/interfaces/DSAPublicKey;)[B
     125: areturn
     126: aload_0
     127: instanceof    #114                // class java/security/interfaces/ECPublicKey
     130: ifne          141
     133: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     136: dup
     137: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     140: athrow
     141: aload_0
     142: checkcast     #114                // class java/security/interfaces/ECPublicKey
     145: getstatic     #79                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     148: invokestatic  #115                // Method fromECGOSTPublicKey:(Ljava/security/interfaces/ECPublicKey;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     151: areturn
     152: aload_0
     153: instanceof    #114                // class java/security/interfaces/ECPublicKey
     156: ifne          167
     159: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     162: dup
     163: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     166: athrow
     167: aload_0
     168: checkcast     #114                // class java/security/interfaces/ECPublicKey
     171: getstatic     #81                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     174: invokestatic  #116                // Method fromECDSAPublicKey:(Ljava/security/interfaces/ECPublicKey;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     177: areturn
     178: aload_0
     179: instanceof    #114                // class java/security/interfaces/ECPublicKey
     182: ifne          193
     185: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     188: dup
     189: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     192: athrow
     193: aload_0
     194: checkcast     #114                // class java/security/interfaces/ECPublicKey
     197: getstatic     #83                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     200: invokestatic  #116                // Method fromECDSAPublicKey:(Ljava/security/interfaces/ECPublicKey;Lorg/xbill/DNS/DNSSEC$ECKeyInfo;)[B
     203: areturn
     204: aload_0
     205: invokeinterface #117,  1          // InterfaceMethod java/security/PublicKey.getFormat:()Ljava/lang/String;
     210: ldc           #118                // String X.509
     212: invokevirtual #119                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     215: ifne          226
     218: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     221: dup
     222: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     225: athrow
     226: aload_0
     227: invokestatic  #120                // Method fromEdDSAPublicKey:(Ljava/security/PublicKey;)[B
     230: areturn
     231: new           #85                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     234: dup
     235: iload_1
     236: invokespecial #86                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     239: athrow

  public static java.lang.String algString(int) throws org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException;
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 16
                     1: 80
                     2: 110
                     3: 83
                     4: 110
                     5: 86
                     6: 83
                     7: 86
                     8: 89
                     9: 110
                    10: 92
                    11: 110
                    12: 95
                    13: 98
                    14: 101
                    15: 104
                    16: 107
               default: 110
          }
      80: ldc           #121                // String MD5withRSA
      82: areturn
      83: ldc           #122                // String SHA1withDSA
      85: areturn
      86: ldc           #123                // String SHA1withRSA
      88: areturn
      89: ldc           #124                // String SHA256withRSA
      91: areturn
      92: ldc           #125                // String SHA512withRSA
      94: areturn
      95: ldc           #126                // String GOST3411withECGOST3410
      97: areturn
      98: ldc           #127                // String SHA256withECDSA
     100: areturn
     101: ldc           #128                // String SHA384withECDSA
     103: areturn
     104: ldc           #129                // String Ed25519
     106: areturn
     107: ldc           #130                // String Ed448
     109: areturn
     110: new           #85                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     113: dup
     114: iload_0
     115: invokespecial #86                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     118: athrow

  private static java.io.IOException asn1ParseException(java.lang.Object, java.lang.Object);
    Code:
       0: new           #87                 // class java/io/IOException
       3: dup
       4: new           #131                // class java/lang/StringBuilder
       7: dup
       8: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #133                // String Invalid ASN.1 data, expected
      13: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      20: ldc           #136                // String  got
      22: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #138                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      35: areturn

  private static byte[] dsaSignatureFromDNS(byte[], int, boolean) throws org.xbill.DNS.DNSSEC$DNSSECException, java.io.IOException;
    Code:
       0: aload_0
       1: arraylength
       2: iload_1
       3: iconst_2
       4: imul
       5: iload_2
       6: ifeq          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: iadd
      15: if_icmpeq     26
      18: new           #139                // class org/xbill/DNS/DNSSEC$SignatureVerificationException
      21: dup
      22: invokespecial #140                // Method org/xbill/DNS/DNSSEC$SignatureVerificationException."<init>":()V
      25: athrow
      26: new           #44                 // class org/xbill/DNS/DNSInput
      29: dup
      30: aload_0
      31: invokespecial #45                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
      34: astore_3
      35: new           #15                 // class org/xbill/DNS/DNSOutput
      38: dup
      39: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      42: astore        4
      44: iload_2
      45: ifeq          53
      48: aload_3
      49: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
      52: pop
      53: aload_3
      54: iload_1
      55: invokevirtual #34                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      58: astore        5
      60: aload         5
      62: iload_1
      63: invokestatic  #141                // Method getDsaIntLen:([BI)I
      66: istore        6
      68: aload_3
      69: iload_1
      70: invokevirtual #34                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
      73: astore        7
      75: aload         7
      77: iload_1
      78: invokestatic  #141                // Method getDsaIntLen:([BI)I
      81: istore        8
      83: aload         4
      85: bipush        48
      87: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      90: aload         4
      92: iload         6
      94: iload         8
      96: iadd
      97: iconst_4
      98: iadd
      99: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
     102: iload_1
     103: aload         4
     105: aload         5
     107: iload         6
     109: invokestatic  #142                // Method writeAsn1Int:(ILorg/xbill/DNS/DNSOutput;[BI)V
     112: iload_1
     113: aload         4
     115: aload         7
     117: iload         8
     119: invokestatic  #142                // Method writeAsn1Int:(ILorg/xbill/DNS/DNSOutput;[BI)V
     122: aload         4
     124: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     127: areturn

  private static int getDsaIntLen(byte[], int);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: iconst_0
       4: baload
       5: ifge          14
       8: iinc          2, 1
      11: goto          46
      14: iconst_0
      15: istore_3
      16: iload_3
      17: iload_1
      18: iconst_1
      19: isub
      20: if_icmpge     46
      23: aload_0
      24: iload_3
      25: baload
      26: ifne          46
      29: aload_0
      30: iload_3
      31: iconst_1
      32: iadd
      33: baload
      34: iflt          46
      37: iinc          2, -1
      40: iinc          3, 1
      43: goto          16
      46: iload_2
      47: ireturn

  private static void writeAsn1Int(int, org.xbill.DNS.DNSOutput, byte[], int);
    Code:
       0: aload_1
       1: iconst_2
       2: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
       5: aload_1
       6: iload_3
       7: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      10: iload_3
      11: iload_0
      12: if_icmple     20
      15: aload_1
      16: iconst_0
      17: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      20: iload_3
      21: iload_0
      22: if_icmplt     33
      25: aload_1
      26: aload_2
      27: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      30: goto          42
      33: aload_1
      34: aload_2
      35: iload_0
      36: iload_3
      37: isub
      38: iload_3
      39: invokevirtual #143                // Method org/xbill/DNS/DNSOutput.writeByteArray:([BII)V
      42: return

  private static byte[] dsaSignatureToDNS(byte[], int, int) throws java.io.IOException;
    Code:
       0: new           #44                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: astore_3
       9: new           #15                 // class org/xbill/DNS/DNSOutput
      12: dup
      13: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      16: astore        4
      18: iload_2
      19: iconst_m1
      20: if_icmple     29
      23: aload         4
      25: iload_2
      26: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      29: aload_3
      30: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
      33: istore        5
      35: iload         5
      37: bipush        48
      39: if_icmpeq     56
      42: bipush        48
      44: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: iload         5
      49: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokestatic  #145                // Method asn1ParseException:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/io/IOException;
      55: athrow
      56: aload_3
      57: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
      60: pop
      61: iload_1
      62: aload_3
      63: aload         4
      65: invokestatic  #146                // Method transformAns1IntToDns:(ILorg/xbill/DNS/DNSInput;Lorg/xbill/DNS/DNSOutput;)V
      68: iload_1
      69: aload_3
      70: aload         4
      72: invokestatic  #146                // Method transformAns1IntToDns:(ILorg/xbill/DNS/DNSInput;Lorg/xbill/DNS/DNSOutput;)V
      75: aload         4
      77: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      80: areturn

  private static void transformAns1IntToDns(int, org.xbill.DNS.DNSInput, org.xbill.DNS.DNSOutput) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
       4: istore_3
       5: iload_3
       6: iconst_2
       7: if_icmpeq     22
      10: iconst_2
      11: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: iload_3
      15: invokestatic  #144                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokestatic  #145                // Method asn1ParseException:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/io/IOException;
      21: athrow
      22: aload_1
      23: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
      26: istore        4
      28: iload         4
      30: iload_0
      31: iconst_1
      32: iadd
      33: if_icmpne     49
      36: aload_1
      37: invokevirtual #46                 // Method org/xbill/DNS/DNSInput.readU8:()I
      40: ifne          49
      43: iinc          4, -1
      46: goto          109
      49: iload         4
      51: iload_0
      52: if_icmpgt     81
      55: iconst_0
      56: istore        5
      58: iload         5
      60: iload_0
      61: iload         4
      63: isub
      64: if_icmpge     78
      67: aload_2
      68: iconst_0
      69: invokevirtual #5                  // Method org/xbill/DNS/DNSOutput.writeU8:(I)V
      72: iinc          5, 1
      75: goto          58
      78: goto          109
      81: new           #87                 // class java/io/IOException
      84: dup
      85: new           #131                // class java/lang/StringBuilder
      88: dup
      89: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
      92: ldc           #147                // String Invalid r/s-value in ASN.1 DER encoded signature:
      94: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: iload         4
      99: invokevirtual #148                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     102: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokespecial #138                // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_2
     110: aload_1
     111: iload         4
     113: invokevirtual #34                 // Method org/xbill/DNS/DNSInput.readByteArray:(I)[B
     116: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     119: return

  private static void verify(java.security.PublicKey, int, byte[], byte[]) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: instanceof    #112                // class java/security/interfaces/DSAPublicKey
       4: ifeq          28
       7: aload_3
       8: bipush        20
      10: iconst_1
      11: invokestatic  #149                // Method dsaSignatureFromDNS:([BIZ)[B
      14: astore_3
      15: goto          137
      18: astore        4
      20: new           #150                // class java/lang/IllegalStateException
      23: dup
      24: invokespecial #151                // Method java/lang/IllegalStateException."<init>":()V
      27: athrow
      28: aload_0
      29: instanceof    #114                // class java/security/interfaces/ECPublicKey
      32: ifeq          137
      35: iload_1
      36: tableswitch   { // 12 to 14
                    12: 64
                    13: 85
                    14: 100
               default: 115
          }
      64: aload_3
      65: arraylength
      66: getstatic     #79                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      69: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      72: iconst_2
      73: imul
      74: if_icmpeq     124
      77: new           #139                // class org/xbill/DNS/DNSSEC$SignatureVerificationException
      80: dup
      81: invokespecial #140                // Method org/xbill/DNS/DNSSEC$SignatureVerificationException."<init>":()V
      84: athrow
      85: aload_3
      86: getstatic     #81                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      89: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
      92: iconst_0
      93: invokestatic  #149                // Method dsaSignatureFromDNS:([BIZ)[B
      96: astore_3
      97: goto          124
     100: aload_3
     101: getstatic     #83                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     104: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     107: iconst_0
     108: invokestatic  #149                // Method dsaSignatureFromDNS:([BIZ)[B
     111: astore_3
     112: goto          124
     115: new           #85                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     118: dup
     119: iload_1
     120: invokespecial #86                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     123: athrow
     124: goto          137
     127: astore        4
     129: new           #150                // class java/lang/IllegalStateException
     132: dup
     133: invokespecial #151                // Method java/lang/IllegalStateException."<init>":()V
     136: athrow
     137: iload_1
     138: invokestatic  #152                // Method algString:(I)Ljava/lang/String;
     141: invokestatic  #153                // Method java/security/Signature.getInstance:(Ljava/lang/String;)Ljava/security/Signature;
     144: astore        4
     146: aload         4
     148: aload_0
     149: invokevirtual #154                // Method java/security/Signature.initVerify:(Ljava/security/PublicKey;)V
     152: aload         4
     154: aload_2
     155: invokevirtual #155                // Method java/security/Signature.update:([B)V
     158: aload         4
     160: aload_3
     161: invokevirtual #156                // Method java/security/Signature.verify:([B)Z
     164: ifne          175
     167: new           #139                // class org/xbill/DNS/DNSSEC$SignatureVerificationException
     170: dup
     171: invokespecial #140                // Method org/xbill/DNS/DNSSEC$SignatureVerificationException."<init>":()V
     174: athrow
     175: goto          190
     178: astore        4
     180: new           #90                 // class org/xbill/DNS/DNSSEC$DNSSECException
     183: dup
     184: aload         4
     186: invokespecial #91                 // Method org/xbill/DNS/DNSSEC$DNSSECException."<init>":(Ljava/lang/Throwable;)V
     189: athrow
     190: return
    Exception table:
       from    to  target type
           7    15    18   Class java/io/IOException
          35   124   127   Class java/io/IOException
         137   175   178   Class java/security/GeneralSecurityException

  private static boolean matches(org.xbill.DNS.SIGBase, org.xbill.DNS.KEYBase);
    Code:
       0: aload_1
       1: invokevirtual #74                 // Method org/xbill/DNS/KEYBase.getAlgorithm:()I
       4: aload_0
       5: invokevirtual #4                  // Method org/xbill/DNS/SIGBase.getAlgorithm:()I
       8: if_icmpne     40
      11: aload_1
      12: invokevirtual #157                // Method org/xbill/DNS/KEYBase.getFootprint:()I
      15: aload_0
      16: invokevirtual #12                 // Method org/xbill/DNS/SIGBase.getFootprint:()I
      19: if_icmpne     40
      22: aload_1
      23: invokevirtual #158                // Method org/xbill/DNS/KEYBase.getName:()Lorg/xbill/DNS/Name;
      26: aload_0
      27: invokevirtual #13                 // Method org/xbill/DNS/SIGBase.getSigner:()Lorg/xbill/DNS/Name;
      30: invokevirtual #159                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  public static void verify(org.xbill.DNS.RRset, org.xbill.DNS.RRSIGRecord, org.xbill.DNS.DNSKEYRecord) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #160                // Method java/time/Instant.now:()Ljava/time/Instant;
       6: invokestatic  #161                // Method verify:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/DNSKEYRecord;Ljava/time/Instant;)V
       9: return

  public static void verify(org.xbill.DNS.RRset, org.xbill.DNS.RRSIGRecord, org.xbill.DNS.DNSKEYRecord, java.util.Date) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #162                // Method java/util/Date.toInstant:()Ljava/time/Instant;
       7: invokestatic  #161                // Method verify:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/DNSKEYRecord;Ljava/time/Instant;)V
      10: return

  public static void verify(org.xbill.DNS.RRset, org.xbill.DNS.RRSIGRecord, org.xbill.DNS.DNSKEYRecord, java.time.Instant) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #163                // Method matches:(Lorg/xbill/DNS/SIGBase;Lorg/xbill/DNS/KEYBase;)Z
       5: ifne          18
       8: new           #164                // class org/xbill/DNS/DNSSEC$KeyMismatchException
      11: dup
      12: aload_2
      13: aload_1
      14: invokespecial #165                // Method org/xbill/DNS/DNSSEC$KeyMismatchException."<init>":(Lorg/xbill/DNS/KEYBase;Lorg/xbill/DNS/SIGBase;)V
      17: athrow
      18: aload_3
      19: aload_1
      20: invokevirtual #166                // Method org/xbill/DNS/RRSIGRecord.getExpire:()Ljava/time/Instant;
      23: invokevirtual #167                // Method java/time/Instant.compareTo:(Ljava/time/Instant;)I
      26: ifle          42
      29: new           #168                // class org/xbill/DNS/DNSSEC$SignatureExpiredException
      32: dup
      33: aload_1
      34: invokevirtual #166                // Method org/xbill/DNS/RRSIGRecord.getExpire:()Ljava/time/Instant;
      37: aload_3
      38: invokespecial #169                // Method org/xbill/DNS/DNSSEC$SignatureExpiredException."<init>":(Ljava/time/Instant;Ljava/time/Instant;)V
      41: athrow
      42: aload_3
      43: aload_1
      44: invokevirtual #170                // Method org/xbill/DNS/RRSIGRecord.getTimeSigned:()Ljava/time/Instant;
      47: invokevirtual #167                // Method java/time/Instant.compareTo:(Ljava/time/Instant;)I
      50: ifge          66
      53: new           #171                // class org/xbill/DNS/DNSSEC$SignatureNotYetValidException
      56: dup
      57: aload_1
      58: invokevirtual #170                // Method org/xbill/DNS/RRSIGRecord.getTimeSigned:()Ljava/time/Instant;
      61: aload_3
      62: invokespecial #172                // Method org/xbill/DNS/DNSSEC$SignatureNotYetValidException."<init>":(Ljava/time/Instant;Ljava/time/Instant;)V
      65: athrow
      66: aload_2
      67: invokevirtual #173                // Method org/xbill/DNS/DNSKEYRecord.getPublicKey:()Ljava/security/PublicKey;
      70: aload_1
      71: invokevirtual #174                // Method org/xbill/DNS/RRSIGRecord.getAlgorithm:()I
      74: aload_1
      75: aload_0
      76: invokestatic  #175                // Method digestRRset:(Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/RRset;)[B
      79: aload_1
      80: invokevirtual #176                // Method org/xbill/DNS/RRSIGRecord.getSignature:()[B
      83: invokestatic  #177                // Method verify:(Ljava/security/PublicKey;I[B[B)V
      86: return

  static byte[] sign(java.security.PrivateKey, java.security.PublicKey, int, byte[], java.lang.String) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload         4
       2: ifnull        19
       5: iload_2
       6: invokestatic  #152                // Method algString:(I)Ljava/lang/String;
       9: aload         4
      11: invokestatic  #178                // Method java/security/Signature.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/Signature;
      14: astore        6
      16: goto          28
      19: iload_2
      20: invokestatic  #152                // Method algString:(I)Ljava/lang/String;
      23: invokestatic  #153                // Method java/security/Signature.getInstance:(Ljava/lang/String;)Ljava/security/Signature;
      26: astore        6
      28: aload         6
      30: aload_0
      31: invokevirtual #179                // Method java/security/Signature.initSign:(Ljava/security/PrivateKey;)V
      34: aload         6
      36: aload_3
      37: invokevirtual #155                // Method java/security/Signature.update:([B)V
      40: aload         6
      42: invokevirtual #180                // Method java/security/Signature.sign:()[B
      45: astore        5
      47: goto          62
      50: astore        6
      52: new           #90                 // class org/xbill/DNS/DNSSEC$DNSSECException
      55: dup
      56: aload         6
      58: invokespecial #91                 // Method org/xbill/DNS/DNSSEC$DNSSECException."<init>":(Ljava/lang/Throwable;)V
      61: athrow
      62: aload_1
      63: instanceof    #112                // class java/security/interfaces/DSAPublicKey
      66: ifeq          128
      69: aload_1
      70: checkcast     #112                // class java/security/interfaces/DSAPublicKey
      73: astore        6
      75: aload         6
      77: invokeinterface #96,  1           // InterfaceMethod java/security/interfaces/DSAPublicKey.getParams:()Ljava/security/interfaces/DSAParams;
      82: invokeinterface #98,  1           // InterfaceMethod java/security/interfaces/DSAParams.getP:()Ljava/math/BigInteger;
      87: astore        7
      89: aload         7
      91: invokestatic  #94                 // Method bigIntegerLength:(Ljava/math/BigInteger;)I
      94: bipush        64
      96: isub
      97: bipush        8
      99: idiv
     100: istore        8
     102: aload         5
     104: bipush        20
     106: iload         8
     108: invokestatic  #181                // Method dsaSignatureToDNS:([BII)[B
     111: astore        5
     113: goto          225
     116: astore        6
     118: new           #150                // class java/lang/IllegalStateException
     121: dup
     122: aload         6
     124: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     127: athrow
     128: aload_1
     129: instanceof    #114                // class java/security/interfaces/ECPublicKey
     132: ifeq          225
     135: iload_2
     136: tableswitch   { // 12 to 14
                    12: 164
                    13: 167
                    14: 184
               default: 201
          }
     164: goto          210
     167: aload         5
     169: getstatic     #81                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     172: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     175: iconst_m1
     176: invokestatic  #181                // Method dsaSignatureToDNS:([BII)[B
     179: astore        5
     181: goto          210
     184: aload         5
     186: getstatic     #83                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
     189: getfield      #61                 // Field org/xbill/DNS/DNSSEC$ECKeyInfo.length:I
     192: iconst_m1
     193: invokestatic  #181                // Method dsaSignatureToDNS:([BII)[B
     196: astore        5
     198: goto          210
     201: new           #85                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     204: dup
     205: iload_2
     206: invokespecial #86                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     209: athrow
     210: goto          225
     213: astore        6
     215: new           #150                // class java/lang/IllegalStateException
     218: dup
     219: aload         6
     221: invokespecial #182                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
     224: athrow
     225: aload         5
     227: areturn
    Exception table:
       from    to  target type
           0    47    50   Class java/security/GeneralSecurityException
          69   113   116   Class java/io/IOException
         135   210   213   Class java/io/IOException

  static void checkAlgorithm(java.security.PrivateKey, int) throws org.xbill.DNS.DNSSEC$UnsupportedAlgorithmException;
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 16
                     1: 80
                     2: 232
                     3: 102
                     4: 232
                     5: 80
                     6: 102
                     7: 80
                     8: 80
                     9: 232
                    10: 80
                    11: 232
                    12: 124
                    13: 124
                    14: 124
                    15: 160
                    16: 196
               default: 232
          }
      80: ldc           #50                 // String RSA
      82: aload_0
      83: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
      88: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifne          241
      94: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
      97: dup
      98: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     101: athrow
     102: ldc           #58                 // String DSA
     104: aload_0
     105: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
     110: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     113: ifne          241
     116: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     119: dup
     120: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     123: athrow
     124: ldc           #69                 // String EC
     126: aload_0
     127: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
     132: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     135: ifne          241
     138: ldc           #185                // String ECDSA
     140: aload_0
     141: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
     146: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     149: ifne          241
     152: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     155: dup
     156: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     159: athrow
     160: ldc           #129                // String Ed25519
     162: aload_0
     163: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
     168: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     171: ifne          241
     174: ldc           #73                 // String EdDSA
     176: aload_0
     177: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
     182: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     185: ifne          241
     188: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     191: dup
     192: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     195: athrow
     196: ldc           #130                // String Ed448
     198: aload_0
     199: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
     204: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     207: ifne          241
     210: ldc           #73                 // String EdDSA
     212: aload_0
     213: invokeinterface #183,  1          // InterfaceMethod java/security/PrivateKey.getAlgorithm:()Ljava/lang/String;
     218: invokevirtual #184                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     221: ifne          241
     224: new           #109                // class org/xbill/DNS/DNSSEC$IncompatibleKeyException
     227: dup
     228: invokespecial #110                // Method org/xbill/DNS/DNSSEC$IncompatibleKeyException."<init>":()V
     231: athrow
     232: new           #85                 // class org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException
     235: dup
     236: iload_1
     237: invokespecial #86                 // Method org/xbill/DNS/DNSSEC$UnsupportedAlgorithmException."<init>":(I)V
     240: athrow
     241: return

  public static org.xbill.DNS.RRSIGRecord sign(org.xbill.DNS.RRset, org.xbill.DNS.DNSKEYRecord, java.security.PrivateKey, java.util.Date, java.util.Date) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #162                // Method java/util/Date.toInstant:()Ljava/time/Instant;
       7: aload         4
       9: invokevirtual #162                // Method java/util/Date.toInstant:()Ljava/time/Instant;
      12: aconst_null
      13: invokestatic  #186                // Method sign:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/DNSKEYRecord;Ljava/security/PrivateKey;Ljava/time/Instant;Ljava/time/Instant;Ljava/lang/String;)Lorg/xbill/DNS/RRSIGRecord;
      16: areturn

  public static org.xbill.DNS.RRSIGRecord sign(org.xbill.DNS.RRset, org.xbill.DNS.DNSKEYRecord, java.security.PrivateKey, java.util.Date, java.util.Date, java.lang.String) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #162                // Method java/util/Date.toInstant:()Ljava/time/Instant;
       7: aload         4
       9: invokevirtual #162                // Method java/util/Date.toInstant:()Ljava/time/Instant;
      12: aload         5
      14: invokestatic  #186                // Method sign:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/DNSKEYRecord;Ljava/security/PrivateKey;Ljava/time/Instant;Ljava/time/Instant;Ljava/lang/String;)Lorg/xbill/DNS/RRSIGRecord;
      17: areturn

  public static org.xbill.DNS.RRSIGRecord sign(org.xbill.DNS.RRset, org.xbill.DNS.DNSKEYRecord, java.security.PrivateKey, java.time.Instant, java.time.Instant) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokestatic  #186                // Method sign:(Lorg/xbill/DNS/RRset;Lorg/xbill/DNS/DNSKEYRecord;Ljava/security/PrivateKey;Ljava/time/Instant;Ljava/time/Instant;Ljava/lang/String;)Lorg/xbill/DNS/RRSIGRecord;
      10: areturn

  public static org.xbill.DNS.RRSIGRecord sign(org.xbill.DNS.RRset, org.xbill.DNS.DNSKEYRecord, java.security.PrivateKey, java.time.Instant, java.time.Instant, java.lang.String) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_1
       1: invokevirtual #187                // Method org/xbill/DNS/DNSKEYRecord.getAlgorithm:()I
       4: istore        6
       6: aload_2
       7: iload         6
       9: invokestatic  #188                // Method checkAlgorithm:(Ljava/security/PrivateKey;I)V
      12: new           #189                // class org/xbill/DNS/RRSIGRecord
      15: dup
      16: aload_0
      17: invokevirtual #18                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
      20: aload_0
      21: invokevirtual #23                 // Method org/xbill/DNS/RRset.getDClass:()I
      24: aload_0
      25: invokevirtual #190                // Method org/xbill/DNS/RRset.getTTL:()J
      28: aload_0
      29: invokevirtual #22                 // Method org/xbill/DNS/RRset.getType:()I
      32: iload         6
      34: aload_0
      35: invokevirtual #190                // Method org/xbill/DNS/RRset.getTTL:()J
      38: aload         4
      40: aload_3
      41: aload_1
      42: invokevirtual #191                // Method org/xbill/DNS/DNSKEYRecord.getFootprint:()I
      45: aload_1
      46: invokevirtual #192                // Method org/xbill/DNS/DNSKEYRecord.getName:()Lorg/xbill/DNS/Name;
      49: aconst_null
      50: invokespecial #193                // Method org/xbill/DNS/RRSIGRecord."<init>":(Lorg/xbill/DNS/Name;IJIIJLjava/time/Instant;Ljava/time/Instant;ILorg/xbill/DNS/Name;[B)V
      53: astore        7
      55: aload         7
      57: aload_2
      58: aload_1
      59: invokevirtual #173                // Method org/xbill/DNS/DNSKEYRecord.getPublicKey:()Ljava/security/PublicKey;
      62: iload         6
      64: aload         7
      66: aload_0
      67: invokestatic  #175                // Method digestRRset:(Lorg/xbill/DNS/RRSIGRecord;Lorg/xbill/DNS/RRset;)[B
      70: aload         5
      72: invokestatic  #194                // Method sign:(Ljava/security/PrivateKey;Ljava/security/PublicKey;I[BLjava/lang/String;)[B
      75: invokevirtual #195                // Method org/xbill/DNS/RRSIGRecord.setSignature:([B)V
      78: aload         7
      80: areturn

  static org.xbill.DNS.SIGRecord signMessage(org.xbill.DNS.Message, org.xbill.DNS.SIGRecord, org.xbill.DNS.KEYRecord, java.security.PrivateKey, java.time.Instant, java.time.Instant) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_2
       1: invokevirtual #196                // Method org/xbill/DNS/KEYRecord.getAlgorithm:()I
       4: istore        6
       6: aload_3
       7: iload         6
       9: invokestatic  #188                // Method checkAlgorithm:(Ljava/security/PrivateKey;I)V
      12: new           #197                // class org/xbill/DNS/SIGRecord
      15: dup
      16: getstatic     #198                // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      19: sipush        255
      22: lconst_0
      23: iconst_0
      24: iload         6
      26: lconst_0
      27: aload         5
      29: aload         4
      31: aload_2
      32: invokevirtual #200                // Method org/xbill/DNS/KEYRecord.getFootprint:()I
      35: aload_2
      36: invokevirtual #201                // Method org/xbill/DNS/KEYRecord.getName:()Lorg/xbill/DNS/Name;
      39: aconst_null
      40: invokespecial #202                // Method org/xbill/DNS/SIGRecord."<init>":(Lorg/xbill/DNS/Name;IJIIJLjava/time/Instant;Ljava/time/Instant;ILorg/xbill/DNS/Name;[B)V
      43: astore        7
      45: new           #15                 // class org/xbill/DNS/DNSOutput
      48: dup
      49: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      52: astore        8
      54: aload         8
      56: aload         7
      58: invokestatic  #17                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
      61: aload_1
      62: ifnull        74
      65: aload         8
      67: aload_1
      68: invokevirtual #203                // Method org/xbill/DNS/SIGRecord.getSignature:()[B
      71: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      74: aload         8
      76: aload_0
      77: invokevirtual #204                // Method org/xbill/DNS/Message.toWire:()[B
      80: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
      83: aload         7
      85: aload_3
      86: aload_2
      87: invokevirtual #205                // Method org/xbill/DNS/KEYRecord.getPublicKey:()Ljava/security/PublicKey;
      90: iload         6
      92: aload         8
      94: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      97: aconst_null
      98: invokestatic  #194                // Method sign:(Ljava/security/PrivateKey;Ljava/security/PublicKey;I[BLjava/lang/String;)[B
     101: invokevirtual #206                // Method org/xbill/DNS/SIGRecord.setSignature:([B)V
     104: aload         7
     106: areturn

  static void verifyMessage(org.xbill.DNS.Message, byte[], org.xbill.DNS.SIGRecord, org.xbill.DNS.SIGRecord, org.xbill.DNS.KEYRecord, java.time.Instant) throws org.xbill.DNS.DNSSEC$DNSSECException;
    Code:
       0: aload_0
       1: getfield      #207                // Field org/xbill/DNS/Message.sig0start:I
       4: ifne          15
       7: new           #208                // class org/xbill/DNS/DNSSEC$NoSignatureException
      10: dup
      11: invokespecial #209                // Method org/xbill/DNS/DNSSEC$NoSignatureException."<init>":()V
      14: athrow
      15: aload_2
      16: aload         4
      18: invokestatic  #163                // Method matches:(Lorg/xbill/DNS/SIGBase;Lorg/xbill/DNS/KEYBase;)Z
      21: ifne          35
      24: new           #164                // class org/xbill/DNS/DNSSEC$KeyMismatchException
      27: dup
      28: aload         4
      30: aload_2
      31: invokespecial #165                // Method org/xbill/DNS/DNSSEC$KeyMismatchException."<init>":(Lorg/xbill/DNS/KEYBase;Lorg/xbill/DNS/SIGBase;)V
      34: athrow
      35: aload         5
      37: aload_2
      38: invokevirtual #210                // Method org/xbill/DNS/SIGRecord.getExpire:()Ljava/time/Instant;
      41: invokevirtual #167                // Method java/time/Instant.compareTo:(Ljava/time/Instant;)I
      44: ifle          61
      47: new           #168                // class org/xbill/DNS/DNSSEC$SignatureExpiredException
      50: dup
      51: aload_2
      52: invokevirtual #210                // Method org/xbill/DNS/SIGRecord.getExpire:()Ljava/time/Instant;
      55: aload         5
      57: invokespecial #169                // Method org/xbill/DNS/DNSSEC$SignatureExpiredException."<init>":(Ljava/time/Instant;Ljava/time/Instant;)V
      60: athrow
      61: aload         5
      63: aload_2
      64: invokevirtual #211                // Method org/xbill/DNS/SIGRecord.getTimeSigned:()Ljava/time/Instant;
      67: invokevirtual #167                // Method java/time/Instant.compareTo:(Ljava/time/Instant;)I
      70: ifge          87
      73: new           #171                // class org/xbill/DNS/DNSSEC$SignatureNotYetValidException
      76: dup
      77: aload_2
      78: invokevirtual #211                // Method org/xbill/DNS/SIGRecord.getTimeSigned:()Ljava/time/Instant;
      81: aload         5
      83: invokespecial #172                // Method org/xbill/DNS/DNSSEC$SignatureNotYetValidException."<init>":(Ljava/time/Instant;Ljava/time/Instant;)V
      86: athrow
      87: new           #15                 // class org/xbill/DNS/DNSOutput
      90: dup
      91: invokespecial #16                 // Method org/xbill/DNS/DNSOutput."<init>":()V
      94: astore        6
      96: aload         6
      98: aload_2
      99: invokestatic  #17                 // Method digestSIG:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/SIGBase;)V
     102: aload_3
     103: ifnull        115
     106: aload         6
     108: aload_3
     109: invokevirtual #203                // Method org/xbill/DNS/SIGRecord.getSignature:()[B
     112: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     115: aload_0
     116: invokevirtual #212                // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
     119: invokevirtual #213                // Method org/xbill/DNS/Header.clone:()Lorg/xbill/DNS/Header;
     122: astore        7
     124: aload         7
     126: iconst_3
     127: invokevirtual #215                // Method org/xbill/DNS/Header.decCount:(I)V
     130: aload         6
     132: aload         7
     134: invokevirtual #216                // Method org/xbill/DNS/Header.toWire:()[B
     137: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
     140: aload         6
     142: aload_1
     143: bipush        12
     145: aload_0
     146: getfield      #207                // Field org/xbill/DNS/Message.sig0start:I
     149: bipush        12
     151: isub
     152: invokevirtual #143                // Method org/xbill/DNS/DNSOutput.writeByteArray:([BII)V
     155: aload         4
     157: invokevirtual #205                // Method org/xbill/DNS/KEYRecord.getPublicKey:()Ljava/security/PublicKey;
     160: aload_2
     161: invokevirtual #218                // Method org/xbill/DNS/SIGRecord.getAlgorithm:()I
     164: aload         6
     166: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
     169: aload_2
     170: invokevirtual #203                // Method org/xbill/DNS/SIGRecord.getSignature:()[B
     173: invokestatic  #177                // Method verify:(Ljava/security/PublicKey;I[B[B)V
     176: return

  static byte[] generateDSDigest(org.xbill.DNS.DNSKEYRecord, int);
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 4
                     1: 32
                     2: 41
                     3: 50
                     4: 59
               default: 68
          }
      32: ldc           #219                // String sha-1
      34: invokestatic  #220                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      37: astore_2
      38: goto          95
      41: ldc           #221                // String sha-256
      43: invokestatic  #220                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      46: astore_2
      47: goto          95
      50: ldc           #222                // String GOST3411
      52: invokestatic  #220                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      55: astore_2
      56: goto          95
      59: ldc           #223                // String sha-384
      61: invokestatic  #220                // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      64: astore_2
      65: goto          95
      68: new           #42                 // class java/lang/IllegalArgumentException
      71: dup
      72: new           #131                // class java/lang/StringBuilder
      75: dup
      76: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #224                // String unknown DS digest type
      81: invokevirtual #134                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: iload_1
      85: invokevirtual #148                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #225                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: goto          109
      98: astore_3
      99: new           #150                // class java/lang/IllegalStateException
     102: dup
     103: ldc           #227                // String no message digest support
     105: invokespecial #228                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     108: athrow
     109: aload_2
     110: aload_0
     111: invokevirtual #192                // Method org/xbill/DNS/DNSKEYRecord.getName:()Lorg/xbill/DNS/Name;
     114: invokevirtual #229                // Method org/xbill/DNS/Name.toWireCanonical:()[B
     117: invokevirtual #230                // Method java/security/MessageDigest.update:([B)V
     120: aload_2
     121: aload_0
     122: invokevirtual #231                // Method org/xbill/DNS/DNSKEYRecord.rdataToWireCanonical:()[B
     125: invokevirtual #230                // Method java/security/MessageDigest.update:([B)V
     128: aload_2
     129: invokevirtual #232                // Method java/security/MessageDigest.digest:()[B
     132: areturn
    Exception table:
       from    to  target type
           0    95    98   Class java/security/NoSuchAlgorithmException

  private static void lambda$digestRRset$0(org.xbill.DNS.DNSOutput, org.xbill.DNS.DNSOutput, org.xbill.DNS.Record);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
       5: invokevirtual #31                 // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
       8: aload_0
       9: invokevirtual #233                // Method org/xbill/DNS/DNSOutput.current:()I
      12: istore_3
      13: aload_0
      14: iconst_0
      15: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      18: aload_2
      19: aload_0
      20: aconst_null
      21: iconst_1
      22: invokevirtual #234                // Method org/xbill/DNS/Record.rrToWire:(Lorg/xbill/DNS/DNSOutput;Lorg/xbill/DNS/Compression;Z)V
      25: aload_0
      26: invokevirtual #233                // Method org/xbill/DNS/DNSOutput.current:()I
      29: iload_3
      30: isub
      31: iconst_2
      32: isub
      33: istore        4
      35: aload_0
      36: invokevirtual #235                // Method org/xbill/DNS/DNSOutput.save:()V
      39: aload_0
      40: iload_3
      41: invokevirtual #236                // Method org/xbill/DNS/DNSOutput.jump:(I)V
      44: aload_0
      45: iload         4
      47: invokevirtual #3                  // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      50: aload_0
      51: invokevirtual #237                // Method org/xbill/DNS/DNSOutput.restore:()V
      54: return

  static {};
    Code:
       0: new           #238                // class org/xbill/DNS/DNSSEC$ECKeyInfo
       3: dup
       4: bipush        32
       6: ldc           #239                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD97
       8: ldc           #240                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD94
      10: ldc           #241                // String A6
      12: ldc           #242                // String 1
      14: ldc           #243                // String 8D91E471E0989CDA27DF505A453F2B7635294F2DDF23E3B122ACC99C9E9F1E14
      16: ldc           #244                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6C611070995AD10045841B09B761B893
      18: invokespecial #245                // Method org/xbill/DNS/DNSSEC$ECKeyInfo."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      21: putstatic     #79                 // Field GOST:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      24: new           #238                // class org/xbill/DNS/DNSSEC$ECKeyInfo
      27: dup
      28: bipush        32
      30: ldc           #246                // String FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF
      32: ldc           #247                // String FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC
      34: ldc           #248                // String 5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B
      36: ldc           #249                // String 6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296
      38: ldc           #250                // String 4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5
      40: ldc           #251                // String FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551
      42: invokespecial #245                // Method org/xbill/DNS/DNSSEC$ECKeyInfo."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      45: putstatic     #81                 // Field ECDSA_P256:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      48: new           #238                // class org/xbill/DNS/DNSSEC$ECKeyInfo
      51: dup
      52: bipush        48
      54: ldc           #252                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF
      56: ldc           #253                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC
      58: ldc           #254                // String B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF
      60: ldc           #255                // String AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7
      62: ldc_w         #256                // String 3617DE4A96262C6F5D9E98BF9292DC29F8F41DBD289A147CE9DA3113B5F0B8C00A60B1CE1D7E819D7A431D7C90EA0E5F
      65: ldc_w         #257                // String FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973
      68: invokespecial #245                // Method org/xbill/DNS/DNSSEC$ECKeyInfo."<init>":(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      71: putstatic     #83                 // Field ECDSA_P384:Lorg/xbill/DNS/DNSSEC$ECKeyInfo;
      74: return
}
