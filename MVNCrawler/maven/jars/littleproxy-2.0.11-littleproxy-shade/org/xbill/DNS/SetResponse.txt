Compiled from "SetResponse.java"
public class org.xbill.DNS.SetResponse {
  static final int UNKNOWN;

  static final int NXDOMAIN;

  static final int NXRRSET;

  static final int DELEGATION;

  static final int CNAME;

  static final int DNAME;

  static final int SUCCESSFUL;

  private static final org.xbill.DNS.SetResponse unknown;

  private static final org.xbill.DNS.SetResponse nxdomain;

  private static final org.xbill.DNS.SetResponse nxrrset;

  private int type;

  private java.util.List<org.xbill.DNS.RRset> data;

  private org.xbill.DNS.SetResponse();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  org.xbill.DNS.SetResponse(int, org.xbill.DNS.RRset);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iflt          14
       8: iload_1
       9: bipush        6
      11: if_icmple     24
      14: new           #2                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #3                  // String invalid type
      20: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: putfield      #5                  // Field type:I
      29: aload_0
      30: new           #6                  // class java/util/ArrayList
      33: dup
      34: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      37: putfield      #8                  // Field data:Ljava/util/List;
      40: aload_0
      41: getfield      #8                  // Field data:Ljava/util/List;
      44: aload_2
      45: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: return

  org.xbill.DNS.SetResponse(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iflt          14
       8: iload_1
       9: bipush        6
      11: if_icmple     24
      14: new           #2                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #3                  // String invalid type
      20: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: iload_1
      26: putfield      #5                  // Field type:I
      29: aload_0
      30: aconst_null
      31: putfield      #8                  // Field data:Ljava/util/List;
      34: return

  static org.xbill.DNS.SetResponse ofType(int);
    Code:
       0: iload_0
       1: tableswitch   { // 0 to 6
                     0: 44
                     1: 48
                     2: 52
                     3: 56
                     4: 56
                     5: 56
                     6: 56
               default: 76
          }
      44: getstatic     #10                 // Field unknown:Lorg/xbill/DNS/SetResponse;
      47: areturn
      48: getstatic     #11                 // Field nxdomain:Lorg/xbill/DNS/SetResponse;
      51: areturn
      52: getstatic     #12                 // Field nxrrset:Lorg/xbill/DNS/SetResponse;
      55: areturn
      56: new           #13                 // class org/xbill/DNS/SetResponse
      59: dup
      60: invokespecial #14                 // Method "<init>":()V
      63: astore_1
      64: aload_1
      65: iload_0
      66: putfield      #5                  // Field type:I
      69: aload_1
      70: aconst_null
      71: putfield      #8                  // Field data:Ljava/util/List;
      74: aload_1
      75: areturn
      76: new           #2                  // class java/lang/IllegalArgumentException
      79: dup
      80: ldc           #3                  // String invalid type
      82: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      85: athrow

  void addRRset(org.xbill.DNS.RRset);
    Code:
       0: aload_0
       1: getfield      #8                  // Field data:Ljava/util/List;
       4: ifnonnull     18
       7: aload_0
       8: new           #6                  // class java/util/ArrayList
      11: dup
      12: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      15: putfield      #8                  // Field data:Ljava/util/List;
      18: aload_0
      19: getfield      #8                  // Field data:Ljava/util/List;
      22: aload_1
      23: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      28: pop
      29: return

  public boolean isUnknown();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isNXDOMAIN();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isNXRRSET();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: iconst_2
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDelegation();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: iconst_3
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isCNAME();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDNAME();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: iconst_5
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isSuccessful();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: bipush        6
       6: if_icmpne     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public java.util.List<org.xbill.DNS.RRset> answers();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: bipush        6
       6: if_icmpeq     11
       9: aconst_null
      10: areturn
      11: aload_0
      12: getfield      #8                  // Field data:Ljava/util/List;
      15: areturn

  public org.xbill.DNS.CNAMERecord getCNAME();
    Code:
       0: aload_0
       1: getfield      #8                  // Field data:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #16                 // class org/xbill/DNS/RRset
      13: invokevirtual #17                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
      16: checkcast     #18                 // class org/xbill/DNS/CNAMERecord
      19: areturn

  public org.xbill.DNS.DNAMERecord getDNAME();
    Code:
       0: aload_0
       1: getfield      #8                  // Field data:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #16                 // class org/xbill/DNS/RRset
      13: invokevirtual #17                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
      16: checkcast     #19                 // class org/xbill/DNS/DNAMERecord
      19: areturn

  public org.xbill.DNS.RRset getNS();
    Code:
       0: aload_0
       1: getfield      #8                  // Field data:Ljava/util/List;
       4: ifnull        23
       7: aload_0
       8: getfield      #8                  // Field data:Ljava/util/List;
      11: iconst_0
      12: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      17: checkcast     #16                 // class org/xbill/DNS/RRset
      20: goto          24
      23: aconst_null
      24: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field type:I
       4: tableswitch   { // 0 to 6
                     0: 48
                     1: 51
                     2: 54
                     3: 57
                     4: 86
                     5: 115
                     6: 144
               default: 147
          }
      48: ldc           #20                 // String unknown
      50: areturn
      51: ldc           #21                 // String NXDOMAIN
      53: areturn
      54: ldc           #22                 // String NXRRSET
      56: areturn
      57: new           #23                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #25                 // String delegation:
      66: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #8                  // Field data:Ljava/util/List;
      73: iconst_0
      74: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: areturn
      86: new           #23                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #29                 // String CNAME:
      95: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #8                  // Field data:Ljava/util/List;
     102: iconst_0
     103: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     108: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     111: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: areturn
     115: new           #23                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     122: ldc           #30                 // String DNAME:
     124: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_0
     128: getfield      #8                  // Field data:Ljava/util/List;
     131: iconst_0
     132: invokeinterface #15,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     137: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     140: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: areturn
     144: ldc           #31                 // String successful
     146: areturn
     147: new           #32                 // class java/lang/IllegalStateException
     150: dup
     151: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":()V
     154: athrow

  static {};
    Code:
       0: new           #13                 // class org/xbill/DNS/SetResponse
       3: dup
       4: iconst_0
       5: invokespecial #34                 // Method "<init>":(I)V
       8: putstatic     #10                 // Field unknown:Lorg/xbill/DNS/SetResponse;
      11: new           #13                 // class org/xbill/DNS/SetResponse
      14: dup
      15: iconst_1
      16: invokespecial #34                 // Method "<init>":(I)V
      19: putstatic     #11                 // Field nxdomain:Lorg/xbill/DNS/SetResponse;
      22: new           #13                 // class org/xbill/DNS/SetResponse
      25: dup
      26: iconst_2
      27: invokespecial #34                 // Method "<init>":(I)V
      30: putstatic     #12                 // Field nxrrset:Lorg/xbill/DNS/SetResponse;
      33: return
}
