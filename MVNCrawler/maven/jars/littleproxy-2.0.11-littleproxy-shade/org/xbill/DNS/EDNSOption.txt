Compiled from "EDNSOption.java"
public abstract class org.xbill.DNS.EDNSOption {
  private final int code;

  public org.xbill.DNS.EDNSOption(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String code
       7: iload_1
       8: invokestatic  #3                  // Method org/xbill/DNS/Record.checkU16:(Ljava/lang/String;I)I
      11: putfield      #4                  // Field code:I
      14: return

  public java.lang.String toString();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #7                  // String {
       9: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field code:I
      16: invokestatic  #9                  // Method org/xbill/DNS/EDNSOption$Code.string:(I)Ljava/lang/String;
      19: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #10                 // String :
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #11                 // Method optionToString:()Ljava/lang/String;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc           #12                 // String }
      36: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: areturn

  public int getCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field code:I
       4: ireturn

  byte[] getData();
    Code:
       0: new           #14                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #15                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #16                 // Method optionToWire:(Lorg/xbill/DNS/DNSOutput;)V
      13: aload_1
      14: invokevirtual #17                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      17: areturn

  abstract void optionFromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;

  static org.xbill.DNS.EDNSOption fromWire(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
       4: istore_1
       5: aload_0
       6: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
       9: istore_2
      10: aload_0
      11: invokevirtual #19                 // Method org/xbill/DNS/DNSInput.remaining:()I
      14: iload_2
      15: if_icmpge     28
      18: new           #20                 // class org/xbill/DNS/WireParseException
      21: dup
      22: ldc           #21                 // String truncated option
      24: invokespecial #22                 // Method org/xbill/DNS/WireParseException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokevirtual #23                 // Method org/xbill/DNS/DNSInput.saveActive:()I
      32: istore_3
      33: aload_0
      34: iload_2
      35: invokevirtual #24                 // Method org/xbill/DNS/DNSInput.setActive:(I)V
      38: iload_1
      39: tableswitch   { // 3 to 15
                     3: 104
                     4: 180
                     5: 128
                     6: 128
                     7: 128
                     8: 116
                     9: 180
                    10: 144
                    11: 156
                    12: 180
                    13: 180
                    14: 180
                    15: 168
               default: 180
          }
     104: new           #25                 // class org/xbill/DNS/NSIDOption
     107: dup
     108: invokespecial #26                 // Method org/xbill/DNS/NSIDOption."<init>":()V
     111: astore        4
     113: goto          190
     116: new           #27                 // class org/xbill/DNS/ClientSubnetOption
     119: dup
     120: invokespecial #28                 // Method org/xbill/DNS/ClientSubnetOption."<init>":()V
     123: astore        4
     125: goto          190
     128: new           #29                 // class org/xbill/DNS/DnssecAlgorithmOption
     131: dup
     132: iload_1
     133: iconst_0
     134: newarray       int
     136: invokespecial #30                 // Method org/xbill/DNS/DnssecAlgorithmOption."<init>":(I[I)V
     139: astore        4
     141: goto          190
     144: new           #31                 // class org/xbill/DNS/CookieOption
     147: dup
     148: invokespecial #32                 // Method org/xbill/DNS/CookieOption."<init>":()V
     151: astore        4
     153: goto          190
     156: new           #33                 // class org/xbill/DNS/TcpKeepaliveOption
     159: dup
     160: invokespecial #34                 // Method org/xbill/DNS/TcpKeepaliveOption."<init>":()V
     163: astore        4
     165: goto          190
     168: new           #35                 // class org/xbill/DNS/ExtendedErrorCodeOption
     171: dup
     172: invokespecial #36                 // Method org/xbill/DNS/ExtendedErrorCodeOption."<init>":()V
     175: astore        4
     177: goto          190
     180: new           #37                 // class org/xbill/DNS/GenericEDNSOption
     183: dup
     184: iload_1
     185: invokespecial #38                 // Method org/xbill/DNS/GenericEDNSOption."<init>":(I)V
     188: astore        4
     190: aload         4
     192: aload_0
     193: invokevirtual #39                 // Method optionFromWire:(Lorg/xbill/DNS/DNSInput;)V
     196: aload_0
     197: iload_3
     198: invokevirtual #40                 // Method org/xbill/DNS/DNSInput.restoreActive:(I)V
     201: aload         4
     203: areturn

  public static org.xbill.DNS.EDNSOption fromWire(byte[]) throws java.io.IOException;
    Code:
       0: new           #41                 // class org/xbill/DNS/DNSInput
       3: dup
       4: aload_0
       5: invokespecial #42                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       8: invokestatic  #43                 // Method fromWire:(Lorg/xbill/DNS/DNSInput;)Lorg/xbill/DNS/EDNSOption;
      11: areturn

  abstract void optionToWire(org.xbill.DNS.DNSOutput);

  void toWire(org.xbill.DNS.DNSOutput);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field code:I
       5: invokevirtual #44                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: invokevirtual #45                 // Method org/xbill/DNS/DNSOutput.current:()I
      12: istore_2
      13: aload_1
      14: iconst_0
      15: invokevirtual #44                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      18: aload_0
      19: aload_1
      20: invokevirtual #16                 // Method optionToWire:(Lorg/xbill/DNS/DNSOutput;)V
      23: aload_1
      24: invokevirtual #45                 // Method org/xbill/DNS/DNSOutput.current:()I
      27: iload_2
      28: isub
      29: iconst_2
      30: isub
      31: istore_3
      32: aload_1
      33: iload_3
      34: iload_2
      35: invokevirtual #46                 // Method org/xbill/DNS/DNSOutput.writeU16At:(II)V
      38: return

  public byte[] toWire();
    Code:
       0: new           #14                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #15                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #47                 // Method toWire:(Lorg/xbill/DNS/DNSOutput;)V
      13: aload_1
      14: invokevirtual #17                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      17: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #48                 // class org/xbill/DNS/EDNSOption
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #48                 // class org/xbill/DNS/EDNSOption
      13: astore_2
      14: aload_0
      15: getfield      #4                  // Field code:I
      18: aload_2
      19: getfield      #4                  // Field code:I
      22: if_icmpeq     27
      25: iconst_0
      26: ireturn
      27: aload_0
      28: invokevirtual #49                 // Method getData:()[B
      31: aload_2
      32: invokevirtual #49                 // Method getData:()[B
      35: invokestatic  #50                 // Method java/util/Arrays.equals:([B[B)Z
      38: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method getData:()[B
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_1
       8: astore_3
       9: aload_3
      10: arraylength
      11: istore        4
      13: iconst_0
      14: istore        5
      16: iload         5
      18: iload         4
      20: if_icmpge     48
      23: aload_3
      24: iload         5
      26: baload
      27: istore        6
      29: iload_2
      30: iload_2
      31: iconst_3
      32: ishl
      33: iload         6
      35: sipush        255
      38: iand
      39: iadd
      40: iadd
      41: istore_2
      42: iinc          5, 1
      45: goto          16
      48: iload_2
      49: ireturn

  abstract java.lang.String optionToString();
}
