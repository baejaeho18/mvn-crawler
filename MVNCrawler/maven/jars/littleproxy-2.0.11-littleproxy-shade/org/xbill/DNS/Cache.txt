Compiled from "Cache.java"
public class org.xbill.DNS.Cache {
  private static final org.slf4j.Logger log;

  private final org.xbill.DNS.Cache$CacheMap data;

  private int maxncache;

  private int maxcache;

  private int dclass;

  private static final int defaultMaxEntries;

  private static int limitExpire(long, long);
    Code:
       0: lload_2
       1: lconst_0
       2: lcmp
       3: iflt          14
       6: lload_2
       7: lload_0
       8: lcmp
       9: ifge          14
      12: lload_2
      13: lstore_0
      14: invokestatic  #2                  // Method java/lang/System.currentTimeMillis:()J
      17: ldc2_w        #3                  // long 1000l
      20: ldiv
      21: lload_0
      22: ladd
      23: lstore        4
      25: lload         4
      27: lconst_0
      28: lcmp
      29: iflt          41
      32: lload         4
      34: ldc2_w        #6                  // long 2147483647l
      37: lcmp
      38: ifle          44
      41: ldc           #8                  // int 2147483647
      43: ireturn
      44: lload         4
      46: l2i
      47: ireturn

  public org.xbill.DNS.Cache(int);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #10                 // Field maxncache:I
       9: aload_0
      10: iconst_m1
      11: putfield      #11                 // Field maxcache:I
      14: aload_0
      15: iload_1
      16: putfield      #12                 // Field dclass:I
      19: aload_0
      20: new           #13                 // class org/xbill/DNS/Cache$CacheMap
      23: dup
      24: ldc           #15                 // int 50000
      26: invokespecial #16                 // Method org/xbill/DNS/Cache$CacheMap."<init>":(I)V
      29: putfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      32: return

  public org.xbill.DNS.Cache();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #19                 // Method "<init>":(I)V
       5: return

  public org.xbill.DNS.Cache(java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_m1
       6: putfield      #10                 // Field maxncache:I
       9: aload_0
      10: iconst_m1
      11: putfield      #11                 // Field maxcache:I
      14: aload_0
      15: new           #13                 // class org/xbill/DNS/Cache$CacheMap
      18: dup
      19: ldc           #15                 // int 50000
      21: invokespecial #16                 // Method org/xbill/DNS/Cache$CacheMap."<init>":(I)V
      24: putfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      27: new           #20                 // class org/xbill/DNS/Master
      30: dup
      31: aload_1
      32: invokespecial #21                 // Method org/xbill/DNS/Master."<init>":(Ljava/lang/String;)V
      35: astore_2
      36: aconst_null
      37: astore_3
      38: aload_2
      39: invokevirtual #22                 // Method org/xbill/DNS/Master.nextRecord:()Lorg/xbill/DNS/Record;
      42: dup
      43: astore        4
      45: ifnull        58
      48: aload_0
      49: aload         4
      51: iconst_0
      52: invokevirtual #24                 // Method addRecord:(Lorg/xbill/DNS/Record;I)V
      55: goto          38
      58: aload_2
      59: ifnull        134
      62: aload_3
      63: ifnull        84
      66: aload_2
      67: invokevirtual #25                 // Method org/xbill/DNS/Master.close:()V
      70: goto          134
      73: astore        4
      75: aload_3
      76: aload         4
      78: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      81: goto          134
      84: aload_2
      85: invokevirtual #25                 // Method org/xbill/DNS/Master.close:()V
      88: goto          134
      91: astore        4
      93: aload         4
      95: astore_3
      96: aload         4
      98: athrow
      99: astore        5
     101: aload_2
     102: ifnull        131
     105: aload_3
     106: ifnull        127
     109: aload_2
     110: invokevirtual #25                 // Method org/xbill/DNS/Master.close:()V
     113: goto          131
     116: astore        6
     118: aload_3
     119: aload         6
     121: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     124: goto          131
     127: aload_2
     128: invokevirtual #25                 // Method org/xbill/DNS/Master.close:()V
     131: aload         5
     133: athrow
     134: return
    Exception table:
       from    to  target type
          66    70    73   Class java/lang/Throwable
          38    58    91   Class java/lang/Throwable
          38    58    99   any
         109   113   116   Class java/lang/Throwable
          91   101    99   any

  private synchronized java.lang.Object exactName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #28                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  private synchronized void removeName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #29                 // Method org/xbill/DNS/Cache$CacheMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: pop
       9: return

  private synchronized org.xbill.DNS.Cache$Element[] allElements(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #30                 // class java/util/List
       4: ifeq          33
       7: aload_1
       8: checkcast     #30                 // class java/util/List
      11: astore_2
      12: aload_2
      13: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      18: istore_3
      19: aload_2
      20: iload_3
      21: anewarray     #32                 // class org/xbill/DNS/Cache$Element
      24: invokeinterface #33,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      29: checkcast     #34                 // class "[Lorg/xbill/DNS/Cache$Element;"
      32: areturn
      33: aload_1
      34: checkcast     #32                 // class org/xbill/DNS/Cache$Element
      37: astore_2
      38: iconst_1
      39: anewarray     #32                 // class org/xbill/DNS/Cache$Element
      42: dup
      43: iconst_0
      44: aload_2
      45: aastore
      46: areturn

  private synchronized org.xbill.DNS.Cache$Element oneElement(org.xbill.DNS.Name, java.lang.Object, int, int);
    Code:
       0: aconst_null
       1: astore        5
       3: iload_3
       4: sipush        255
       7: if_icmpne     20
      10: new           #36                 // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #37                 // String oneElement(ANY)
      16: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_2
      21: instanceof    #30                 // class java/util/List
      24: ifeq          88
      27: aload_2
      28: checkcast     #30                 // class java/util/List
      31: astore        6
      33: aload         6
      35: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore        7
      42: aload         7
      44: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          85
      52: aload         7
      54: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #32                 // class org/xbill/DNS/Cache$Element
      62: astore        8
      64: aload         8
      66: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      71: iload_3
      72: if_icmpne     82
      75: aload         8
      77: astore        5
      79: goto          85
      82: goto          42
      85: goto          109
      88: aload_2
      89: checkcast     #32                 // class org/xbill/DNS/Cache$Element
      92: astore        6
      94: aload         6
      96: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     101: iload_3
     102: if_icmpne     109
     105: aload         6
     107: astore        5
     109: aload         5
     111: ifnonnull     116
     114: aconst_null
     115: areturn
     116: aload         5
     118: invokeinterface #43,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.expired:()Z
     123: ifeq          134
     126: aload_0
     127: aload_1
     128: iload_3
     129: invokespecial #44                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
     132: aconst_null
     133: areturn
     134: aload         5
     136: iload         4
     138: invokeinterface #45,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
     143: ifge          148
     146: aconst_null
     147: areturn
     148: aload         5
     150: areturn

  private synchronized org.xbill.DNS.Cache$Element findElement(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #46                 // Method exactName:(Lorg/xbill/DNS/Name;)Ljava/lang/Object;
       5: astore        4
       7: aload         4
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_0
      15: aload_1
      16: aload         4
      18: iload_2
      19: iload_3
      20: invokespecial #47                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
      23: areturn

  private synchronized void addElement(org.xbill.DNS.Name, org.xbill.DNS.Cache$Element);
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #28                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: ifnonnull     24
      13: aload_0
      14: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      17: aload_1
      18: aload_2
      19: invokevirtual #48                 // Method org/xbill/DNS/Cache$CacheMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: return
      24: aload_2
      25: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      30: istore        4
      32: aload_3
      33: instanceof    #30                 // class java/util/List
      36: ifeq          116
      39: aload_3
      40: checkcast     #30                 // class java/util/List
      43: astore        5
      45: iconst_0
      46: istore        6
      48: iload         6
      50: aload         5
      52: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      57: if_icmpge     104
      60: aload         5
      62: iload         6
      64: invokeinterface #49,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      69: checkcast     #32                 // class org/xbill/DNS/Cache$Element
      72: astore        7
      74: aload         7
      76: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      81: iload         4
      83: if_icmpne     98
      86: aload         5
      88: iload         6
      90: aload_2
      91: invokeinterface #50,  3           // InterfaceMethod java/util/List.set:(ILjava/lang/Object;)Ljava/lang/Object;
      96: pop
      97: return
      98: iinc          6, 1
     101: goto          48
     104: aload         5
     106: aload_2
     107: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     112: pop
     113: goto          182
     116: aload_3
     117: checkcast     #32                 // class org/xbill/DNS/Cache$Element
     120: astore        5
     122: aload         5
     124: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     129: iload         4
     131: if_icmpne     147
     134: aload_0
     135: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
     138: aload_1
     139: aload_2
     140: invokevirtual #48                 // Method org/xbill/DNS/Cache$CacheMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     143: pop
     144: goto          182
     147: new           #52                 // class java/util/LinkedList
     150: dup
     151: invokespecial #53                 // Method java/util/LinkedList."<init>":()V
     154: astore        6
     156: aload         6
     158: aload         5
     160: invokevirtual #54                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     163: pop
     164: aload         6
     166: aload_2
     167: invokevirtual #54                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     170: pop
     171: aload_0
     172: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
     175: aload_1
     176: aload         6
     178: invokevirtual #48                 // Method org/xbill/DNS/Cache$CacheMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     181: pop
     182: return

  private synchronized void removeElement(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: aload_1
       5: invokevirtual #28                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: astore_3
       9: aload_3
      10: ifnonnull     14
      13: return
      14: aload_3
      15: instanceof    #30                 // class java/util/List
      18: ifeq          106
      21: aload_3
      22: checkcast     #30                 // class java/util/List
      25: astore        4
      27: iconst_0
      28: istore        5
      30: iload         5
      32: aload         4
      34: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      39: if_icmpge     103
      42: aload         4
      44: iload         5
      46: invokeinterface #49,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      51: checkcast     #32                 // class org/xbill/DNS/Cache$Element
      54: astore        6
      56: aload         6
      58: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
      63: iload_2
      64: if_icmpne     97
      67: aload         4
      69: iload         5
      71: invokeinterface #55,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      76: pop
      77: aload         4
      79: invokeinterface #31,  1           // InterfaceMethod java/util/List.size:()I
      84: ifne          96
      87: aload_0
      88: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      91: aload_1
      92: invokevirtual #29                 // Method org/xbill/DNS/Cache$CacheMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      95: pop
      96: return
      97: iinc          5, 1
     100: goto          30
     103: goto          133
     106: aload_3
     107: checkcast     #32                 // class org/xbill/DNS/Cache$Element
     110: astore        4
     112: aload         4
     114: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     119: iload_2
     120: if_icmpeq     124
     123: return
     124: aload_0
     125: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
     128: aload_1
     129: invokevirtual #29                 // Method org/xbill/DNS/Cache$CacheMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: return

  public synchronized void clearCache();
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: invokevirtual #56                 // Method org/xbill/DNS/Cache$CacheMap.clear:()V
       7: return

  public synchronized void addRecord(org.xbill.DNS.Record, int, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokevirtual #24                 // Method addRecord:(Lorg/xbill/DNS/Record;I)V
       6: return

  public synchronized void addRecord(org.xbill.DNS.Record, int);
    Code:
       0: aload_1
       1: invokevirtual #57                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
       4: astore_3
       5: aload_1
       6: invokevirtual #58                 // Method org/xbill/DNS/Record.getRRsetType:()I
       9: istore        4
      11: iload         4
      13: invokestatic  #59                 // Method org/xbill/DNS/Type.isRR:(I)Z
      16: ifne          20
      19: return
      20: aload_0
      21: aload_3
      22: iload         4
      24: iload_2
      25: invokespecial #60                 // Method findElement:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Cache$Element;
      28: astore        5
      30: aload         5
      32: ifnonnull     61
      35: new           #61                 // class org/xbill/DNS/Cache$CacheRRset
      38: dup
      39: aload_1
      40: iload_2
      41: aload_0
      42: getfield      #11                 // Field maxcache:I
      45: i2l
      46: invokespecial #62                 // Method org/xbill/DNS/Cache$CacheRRset."<init>":(Lorg/xbill/DNS/Record;IJ)V
      49: astore        6
      51: aload_0
      52: aload         6
      54: iload_2
      55: invokevirtual #63                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
      58: goto          93
      61: aload         5
      63: iload_2
      64: invokeinterface #45,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      69: ifne          93
      72: aload         5
      74: instanceof    #61                 // class org/xbill/DNS/Cache$CacheRRset
      77: ifeq          93
      80: aload         5
      82: checkcast     #61                 // class org/xbill/DNS/Cache$CacheRRset
      85: astore        6
      87: aload         6
      89: aload_1
      90: invokevirtual #64                 // Method org/xbill/DNS/Cache$CacheRRset.addRR:(Lorg/xbill/DNS/Record;)V
      93: return

  public synchronized <T extends org.xbill.DNS.Record> void addRRset(org.xbill.DNS.RRset, int);
    Code:
       0: aload_1
       1: invokevirtual #65                 // Method org/xbill/DNS/RRset.getTTL:()J
       4: lstore_3
       5: aload_1
       6: invokevirtual #66                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
       9: astore        5
      11: aload_1
      12: invokevirtual #67                 // Method org/xbill/DNS/RRset.getType:()I
      15: istore        6
      17: aload_0
      18: aload         5
      20: iload         6
      22: iconst_0
      23: invokespecial #60                 // Method findElement:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Cache$Element;
      26: astore        7
      28: lload_3
      29: lconst_0
      30: lcmp
      31: ifne          61
      34: aload         7
      36: ifnull        125
      39: aload         7
      41: iload_2
      42: invokeinterface #45,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      47: ifgt          125
      50: aload_0
      51: aload         5
      53: iload         6
      55: invokespecial #44                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
      58: goto          125
      61: aload         7
      63: ifnull        80
      66: aload         7
      68: iload_2
      69: invokeinterface #45,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      74: ifgt          80
      77: aconst_null
      78: astore        7
      80: aload         7
      82: ifnonnull     125
      85: aload_1
      86: instanceof    #61                 // class org/xbill/DNS/Cache$CacheRRset
      89: ifeq          101
      92: aload_1
      93: checkcast     #61                 // class org/xbill/DNS/Cache$CacheRRset
      96: astore        8
      98: goto          117
     101: new           #61                 // class org/xbill/DNS/Cache$CacheRRset
     104: dup
     105: aload_1
     106: iload_2
     107: aload_0
     108: getfield      #11                 // Field maxcache:I
     111: i2l
     112: invokespecial #68                 // Method org/xbill/DNS/Cache$CacheRRset."<init>":(Lorg/xbill/DNS/RRset;IJ)V
     115: astore        8
     117: aload_0
     118: aload         5
     120: aload         8
     122: invokespecial #69                 // Method addElement:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Cache$Element;)V
     125: return

  public synchronized void addNegative(org.xbill.DNS.Name, int, org.xbill.DNS.SOARecord, int);
    Code:
       0: lconst_0
       1: lstore        5
       3: aload_3
       4: ifnull        20
       7: aload_3
       8: invokevirtual #70                 // Method org/xbill/DNS/SOARecord.getMinimum:()J
      11: aload_3
      12: invokevirtual #71                 // Method org/xbill/DNS/SOARecord.getTTL:()J
      15: invokestatic  #72                 // Method java/lang/Math.min:(JJ)J
      18: lstore        5
      20: aload_0
      21: aload_1
      22: iload_2
      23: iconst_0
      24: invokespecial #60                 // Method findElement:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/Cache$Element;
      27: astore        7
      29: lload         5
      31: lconst_0
      32: lcmp
      33: ifne          62
      36: aload         7
      38: ifnull        109
      41: aload         7
      43: iload         4
      45: invokeinterface #45,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      50: ifgt          109
      53: aload_0
      54: aload_1
      55: iload_2
      56: invokespecial #44                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
      59: goto          109
      62: aload         7
      64: ifnull        82
      67: aload         7
      69: iload         4
      71: invokeinterface #45,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
      76: ifgt          82
      79: aconst_null
      80: astore        7
      82: aload         7
      84: ifnonnull     109
      87: aload_0
      88: aload_1
      89: new           #73                 // class org/xbill/DNS/Cache$NegativeElement
      92: dup
      93: aload_1
      94: iload_2
      95: aload_3
      96: iload         4
      98: aload_0
      99: getfield      #10                 // Field maxncache:I
     102: i2l
     103: invokespecial #74                 // Method org/xbill/DNS/Cache$NegativeElement."<init>":(Lorg/xbill/DNS/Name;ILorg/xbill/DNS/SOARecord;IJ)V
     106: invokespecial #69                 // Method addElement:(Lorg/xbill/DNS/Name;Lorg/xbill/DNS/Cache$Element;)V
     109: return

  protected synchronized org.xbill.DNS.SetResponse lookup(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_1
       1: invokevirtual #75                 // Method org/xbill/DNS/Name.labels:()I
       4: istore        4
       6: iload         4
       8: istore        5
      10: iload         5
      12: iconst_1
      13: if_icmplt     449
      16: iload         5
      18: iconst_1
      19: if_icmpne     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore        10
      29: iload         5
      31: iload         4
      33: if_icmpne     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore        11
      43: iload         10
      45: ifeq          56
      48: getstatic     #76                 // Field org/xbill/DNS/Name.root:Lorg/xbill/DNS/Name;
      51: astore        7
      53: goto          82
      56: iload         11
      58: ifeq          67
      61: aload_1
      62: astore        7
      64: goto          82
      67: new           #77                 // class org/xbill/DNS/Name
      70: dup
      71: aload_1
      72: iload         4
      74: iload         5
      76: isub
      77: invokespecial #78                 // Method org/xbill/DNS/Name."<init>":(Lorg/xbill/DNS/Name;I)V
      80: astore        7
      82: aload_0
      83: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      86: aload         7
      88: invokevirtual #28                 // Method org/xbill/DNS/Cache$CacheMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      91: astore        8
      93: aload         8
      95: ifnonnull     101
      98: goto          443
     101: iload         11
     103: ifeq          246
     106: iload_2
     107: sipush        255
     110: if_icmpne     246
     113: new           #79                 // class org/xbill/DNS/SetResponse
     116: dup
     117: bipush        6
     119: invokespecial #80                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     122: astore        9
     124: aload_0
     125: aload         8
     127: invokespecial #81                 // Method allElements:(Ljava/lang/Object;)[Lorg/xbill/DNS/Cache$Element;
     130: astore        12
     132: iconst_0
     133: istore        13
     135: aload         12
     137: astore        14
     139: aload         14
     141: arraylength
     142: istore        15
     144: iconst_0
     145: istore        16
     147: iload         16
     149: iload         15
     151: if_icmpge     235
     154: aload         14
     156: iload         16
     158: aaload
     159: astore        17
     161: aload         17
     163: astore        6
     165: aload         6
     167: invokeinterface #43,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.expired:()Z
     172: ifeq          191
     175: aload_0
     176: aload         7
     178: aload         6
     180: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/Cache$Element.getType:()I
     185: invokespecial #44                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
     188: goto          229
     191: aload         6
     193: instanceof    #61                 // class org/xbill/DNS/Cache$CacheRRset
     196: ifne          202
     199: goto          229
     202: aload         6
     204: iload_3
     205: invokeinterface #45,  2           // InterfaceMethod org/xbill/DNS/Cache$Element.compareCredibility:(I)I
     210: ifge          216
     213: goto          229
     216: aload         9
     218: aload         6
     220: checkcast     #61                 // class org/xbill/DNS/Cache$CacheRRset
     223: invokevirtual #82                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     226: iinc          13, 1
     229: iinc          16, 1
     232: goto          147
     235: iload         13
     237: ifle          243
     240: aload         9
     242: areturn
     243: goto          382
     246: iload         11
     248: ifeq          347
     251: aload_0
     252: aload         7
     254: aload         8
     256: iload_2
     257: iload_3
     258: invokespecial #47                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     261: astore        6
     263: aload         6
     265: instanceof    #61                 // class org/xbill/DNS/Cache$CacheRRset
     268: ifeq          295
     271: new           #79                 // class org/xbill/DNS/SetResponse
     274: dup
     275: bipush        6
     277: invokespecial #80                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     280: astore        9
     282: aload         9
     284: aload         6
     286: checkcast     #61                 // class org/xbill/DNS/Cache$CacheRRset
     289: invokevirtual #82                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     292: aload         9
     294: areturn
     295: aload         6
     297: ifnull        313
     300: new           #79                 // class org/xbill/DNS/SetResponse
     303: dup
     304: iconst_2
     305: invokespecial #80                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     308: astore        9
     310: aload         9
     312: areturn
     313: aload_0
     314: aload         7
     316: aload         8
     318: iconst_5
     319: iload_3
     320: invokespecial #47                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     323: astore        6
     325: aload         6
     327: instanceof    #61                 // class org/xbill/DNS/Cache$CacheRRset
     330: ifeq          382
     333: new           #79                 // class org/xbill/DNS/SetResponse
     336: dup
     337: iconst_4
     338: aload         6
     340: checkcast     #61                 // class org/xbill/DNS/Cache$CacheRRset
     343: invokespecial #83                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     346: areturn
     347: aload_0
     348: aload         7
     350: aload         8
     352: bipush        39
     354: iload_3
     355: invokespecial #47                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     358: astore        6
     360: aload         6
     362: instanceof    #61                 // class org/xbill/DNS/Cache$CacheRRset
     365: ifeq          382
     368: new           #79                 // class org/xbill/DNS/SetResponse
     371: dup
     372: iconst_5
     373: aload         6
     375: checkcast     #61                 // class org/xbill/DNS/Cache$CacheRRset
     378: invokespecial #83                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     381: areturn
     382: aload_0
     383: aload         7
     385: aload         8
     387: iconst_2
     388: iload_3
     389: invokespecial #47                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     392: astore        6
     394: aload         6
     396: instanceof    #61                 // class org/xbill/DNS/Cache$CacheRRset
     399: ifeq          416
     402: new           #79                 // class org/xbill/DNS/SetResponse
     405: dup
     406: iconst_3
     407: aload         6
     409: checkcast     #61                 // class org/xbill/DNS/Cache$CacheRRset
     412: invokespecial #83                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     415: areturn
     416: iload         11
     418: ifeq          443
     421: aload_0
     422: aload         7
     424: aload         8
     426: iconst_0
     427: iload_3
     428: invokespecial #47                 // Method oneElement:(Lorg/xbill/DNS/Name;Ljava/lang/Object;II)Lorg/xbill/DNS/Cache$Element;
     431: astore        6
     433: aload         6
     435: ifnull        443
     438: iconst_1
     439: invokestatic  #84                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     442: areturn
     443: iinc          5, -1
     446: goto          10
     449: iconst_0
     450: invokestatic  #84                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     453: areturn

  public org.xbill.DNS.SetResponse lookupRecords(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #85                 // Method lookup:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
       7: areturn

  private java.util.List<org.xbill.DNS.RRset> findRecords(org.xbill.DNS.Name, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokevirtual #86                 // Method lookupRecords:(Lorg/xbill/DNS/Name;II)Lorg/xbill/DNS/SetResponse;
       7: astore        4
       9: aload         4
      11: invokevirtual #87                 // Method org/xbill/DNS/SetResponse.isSuccessful:()Z
      14: ifeq          23
      17: aload         4
      19: invokevirtual #88                 // Method org/xbill/DNS/SetResponse.answers:()Ljava/util/List;
      22: areturn
      23: aconst_null
      24: areturn

  public java.util.List<org.xbill.DNS.RRset> findRecords(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_3
       4: invokespecial #89                 // Method findRecords:(Lorg/xbill/DNS/Name;II)Ljava/util/List;
       7: areturn

  public java.util.List<org.xbill.DNS.RRset> findAnyRecords(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_2
       4: invokespecial #89                 // Method findRecords:(Lorg/xbill/DNS/Name;II)Ljava/util/List;
       7: areturn

  private int getCred(int, boolean);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     13
       5: iload_2
       6: ifeq          11
       9: iconst_4
      10: ireturn
      11: iconst_3
      12: ireturn
      13: iload_1
      14: iconst_2
      15: if_icmpne     26
      18: iload_2
      19: ifeq          24
      22: iconst_4
      23: ireturn
      24: iconst_3
      25: ireturn
      26: iload_1
      27: iconst_3
      28: if_icmpne     33
      31: iconst_1
      32: ireturn
      33: new           #36                 // class java/lang/IllegalArgumentException
      36: dup
      37: ldc           #91                 // String getCred: invalid section
      39: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow

  private static void markAdditional(org.xbill.DNS.RRset, java.util.Set<org.xbill.DNS.Name>);
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
       4: astore_2
       5: aload_2
       6: invokevirtual #93                 // Method org/xbill/DNS/Record.getAdditionalName:()Lorg/xbill/DNS/Name;
       9: ifnonnull     13
      12: return
      13: aload_0
      14: invokevirtual #94                 // Method org/xbill/DNS/RRset.rrs:()Ljava/util/List;
      17: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          67
      32: aload_3
      33: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #95                 // class org/xbill/DNS/Record
      41: astore        4
      43: aload         4
      45: invokevirtual #93                 // Method org/xbill/DNS/Record.getAdditionalName:()Lorg/xbill/DNS/Name;
      48: astore        5
      50: aload         5
      52: ifnull        64
      55: aload_1
      56: aload         5
      58: invokeinterface #96,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          23
      67: return

  public org.xbill.DNS.SetResponse addMessage(org.xbill.DNS.Message);
    Code:
       0: aload_1
       1: invokevirtual #97                 // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
       4: iconst_5
       5: invokevirtual #99                 // Method org/xbill/DNS/Header.getFlag:(I)Z
       8: istore_2
       9: aload_1
      10: invokevirtual #100                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
      13: astore_3
      14: aload_1
      15: invokevirtual #97                 // Method org/xbill/DNS/Message.getHeader:()Lorg/xbill/DNS/Header;
      18: invokevirtual #101                // Method org/xbill/DNS/Header.getRcode:()I
      21: istore        9
      23: iconst_0
      24: istore        10
      26: aconst_null
      27: astore        14
      29: iload         9
      31: ifeq          40
      34: iload         9
      36: iconst_3
      37: if_icmpne     44
      40: aload_3
      41: ifnonnull     46
      44: aconst_null
      45: areturn
      46: aload_3
      47: invokevirtual #57                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      50: astore        4
      52: aload_3
      53: invokevirtual #103                // Method org/xbill/DNS/Record.getType:()I
      56: istore        6
      58: aload_3
      59: invokevirtual #104                // Method org/xbill/DNS/Record.getDClass:()I
      62: istore        7
      64: aload         4
      66: astore        5
      68: new           #105                // class java/util/HashSet
      71: dup
      72: invokespecial #106                // Method java/util/HashSet."<init>":()V
      75: astore        15
      77: aload_1
      78: iconst_1
      79: invokevirtual #107                // Method org/xbill/DNS/Message.getSectionRRsets:(I)Ljava/util/List;
      82: astore        11
      84: aload         11
      86: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      91: astore        16
      93: aload         16
      95: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          363
     103: aload         16
     105: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #108                // class org/xbill/DNS/RRset
     113: astore        17
     115: aload         17
     117: invokevirtual #109                // Method org/xbill/DNS/RRset.getDClass:()I
     120: iload         7
     122: if_icmpeq     128
     125: goto          93
     128: aload         17
     130: invokevirtual #67                 // Method org/xbill/DNS/RRset.getType:()I
     133: istore        18
     135: aload         17
     137: invokevirtual #66                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     140: astore        19
     142: aload_0
     143: iconst_1
     144: iload_2
     145: invokespecial #110                // Method getCred:(IZ)I
     148: istore        8
     150: iload         18
     152: iload         6
     154: if_icmpeq     165
     157: iload         6
     159: sipush        255
     162: if_icmpne     226
     165: aload         19
     167: aload         5
     169: invokevirtual #111                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
     172: ifeq          226
     175: aload_0
     176: aload         17
     178: iload         8
     180: invokevirtual #63                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     183: iconst_1
     184: istore        10
     186: aload         5
     188: aload         4
     190: if_acmpne     216
     193: aload         14
     195: ifnonnull     209
     198: new           #79                 // class org/xbill/DNS/SetResponse
     201: dup
     202: bipush        6
     204: invokespecial #80                 // Method org/xbill/DNS/SetResponse."<init>":(I)V
     207: astore        14
     209: aload         14
     211: aload         17
     213: invokevirtual #82                 // Method org/xbill/DNS/SetResponse.addRRset:(Lorg/xbill/DNS/RRset;)V
     216: aload         17
     218: aload         15
     220: invokestatic  #112                // Method markAdditional:(Lorg/xbill/DNS/RRset;Ljava/util/Set;)V
     223: goto          360
     226: iload         18
     228: iconst_5
     229: if_icmpne     289
     232: aload         19
     234: aload         5
     236: invokevirtual #111                // Method org/xbill/DNS/Name.equals:(Ljava/lang/Object;)Z
     239: ifeq          289
     242: aload_0
     243: aload         17
     245: iload         8
     247: invokevirtual #63                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     250: aload         5
     252: aload         4
     254: if_acmpne     269
     257: new           #79                 // class org/xbill/DNS/SetResponse
     260: dup
     261: iconst_4
     262: aload         17
     264: invokespecial #83                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     267: astore        14
     269: aload         17
     271: invokevirtual #92                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
     274: checkcast     #113                // class org/xbill/DNS/CNAMERecord
     277: astore        20
     279: aload         20
     281: invokevirtual #114                // Method org/xbill/DNS/CNAMERecord.getTarget:()Lorg/xbill/DNS/Name;
     284: astore        5
     286: goto          360
     289: iload         18
     291: bipush        39
     293: if_icmpne     360
     296: aload         5
     298: aload         19
     300: invokevirtual #115                // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
     303: ifeq          360
     306: aload_0
     307: aload         17
     309: iload         8
     311: invokevirtual #63                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     314: aload         5
     316: aload         4
     318: if_acmpne     333
     321: new           #79                 // class org/xbill/DNS/SetResponse
     324: dup
     325: iconst_5
     326: aload         17
     328: invokespecial #83                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     331: astore        14
     333: aload         17
     335: invokevirtual #92                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
     338: checkcast     #116                // class org/xbill/DNS/DNAMERecord
     341: astore        20
     343: aload         5
     345: aload         20
     347: invokevirtual #117                // Method org/xbill/DNS/Name.fromDNAME:(Lorg/xbill/DNS/DNAMERecord;)Lorg/xbill/DNS/Name;
     350: astore        5
     352: goto          360
     355: astore        21
     357: goto          363
     360: goto          93
     363: aload_1
     364: iconst_2
     365: invokevirtual #107                // Method org/xbill/DNS/Message.getSectionRRsets:(I)Ljava/util/List;
     368: astore        12
     370: aconst_null
     371: astore        16
     373: aconst_null
     374: astore        17
     376: aload         12
     378: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     383: astore        18
     385: aload         18
     387: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     392: ifeq          466
     395: aload         18
     397: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     402: checkcast     #108                // class org/xbill/DNS/RRset
     405: astore        19
     407: aload         19
     409: invokevirtual #67                 // Method org/xbill/DNS/RRset.getType:()I
     412: bipush        6
     414: if_icmpne     437
     417: aload         5
     419: aload         19
     421: invokevirtual #66                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     424: invokevirtual #115                // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
     427: ifeq          437
     430: aload         19
     432: astore        16
     434: goto          463
     437: aload         19
     439: invokevirtual #67                 // Method org/xbill/DNS/RRset.getType:()I
     442: iconst_2
     443: if_icmpne     463
     446: aload         5
     448: aload         19
     450: invokevirtual #66                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     453: invokevirtual #115                // Method org/xbill/DNS/Name.subdomain:(Lorg/xbill/DNS/Name;)Z
     456: ifeq          463
     459: aload         19
     461: astore        17
     463: goto          385
     466: iload         10
     468: ifne          612
     471: iload         9
     473: iconst_3
     474: if_icmpne     481
     477: iconst_0
     478: goto          483
     481: iload         6
     483: istore        18
     485: iload         9
     487: iconst_3
     488: if_icmpeq     501
     491: aload         16
     493: ifnonnull     501
     496: aload         17
     498: ifnonnull     569
     501: aload_0
     502: iconst_2
     503: iload_2
     504: invokespecial #110                // Method getCred:(IZ)I
     507: istore        8
     509: aconst_null
     510: astore        19
     512: aload         16
     514: ifnull        527
     517: aload         16
     519: invokevirtual #92                 // Method org/xbill/DNS/RRset.first:()Lorg/xbill/DNS/Record;
     522: checkcast     #119                // class org/xbill/DNS/SOARecord
     525: astore        19
     527: aload_0
     528: aload         5
     530: iload         18
     532: aload         19
     534: iload         8
     536: invokevirtual #120                // Method addNegative:(Lorg/xbill/DNS/Name;ILorg/xbill/DNS/SOARecord;I)V
     539: aload         14
     541: ifnonnull     566
     544: iload         9
     546: iconst_3
     547: if_icmpne     556
     550: iconst_1
     551: istore        20
     553: goto          559
     556: iconst_2
     557: istore        20
     559: iload         20
     561: invokestatic  #84                 // Method org/xbill/DNS/SetResponse.ofType:(I)Lorg/xbill/DNS/SetResponse;
     564: astore        14
     566: goto          609
     569: aload_0
     570: iconst_2
     571: iload_2
     572: invokespecial #110                // Method getCred:(IZ)I
     575: istore        8
     577: aload_0
     578: aload         17
     580: iload         8
     582: invokevirtual #63                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     585: aload         17
     587: aload         15
     589: invokestatic  #112                // Method markAdditional:(Lorg/xbill/DNS/RRset;Ljava/util/Set;)V
     592: aload         14
     594: ifnonnull     609
     597: new           #79                 // class org/xbill/DNS/SetResponse
     600: dup
     601: iconst_3
     602: aload         17
     604: invokespecial #83                 // Method org/xbill/DNS/SetResponse."<init>":(ILorg/xbill/DNS/RRset;)V
     607: astore        14
     609: goto          645
     612: iload         9
     614: ifne          645
     617: aload         17
     619: ifnull        645
     622: aload_0
     623: iconst_2
     624: iload_2
     625: invokespecial #110                // Method getCred:(IZ)I
     628: istore        8
     630: aload_0
     631: aload         17
     633: iload         8
     635: invokevirtual #63                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     638: aload         17
     640: aload         15
     642: invokestatic  #112                // Method markAdditional:(Lorg/xbill/DNS/RRset;Ljava/util/Set;)V
     645: aload_1
     646: iconst_3
     647: invokevirtual #107                // Method org/xbill/DNS/Message.getSectionRRsets:(I)Ljava/util/List;
     650: astore        13
     652: aload         13
     654: invokeinterface #39,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     659: astore        18
     661: aload         18
     663: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     668: ifeq          752
     671: aload         18
     673: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     678: checkcast     #108                // class org/xbill/DNS/RRset
     681: astore        19
     683: aload         19
     685: invokevirtual #67                 // Method org/xbill/DNS/RRset.getType:()I
     688: istore        20
     690: iload         20
     692: iconst_1
     693: if_icmpeq     713
     696: iload         20
     698: bipush        28
     700: if_icmpeq     713
     703: iload         20
     705: bipush        38
     707: if_icmpeq     713
     710: goto          661
     713: aload         19
     715: invokevirtual #66                 // Method org/xbill/DNS/RRset.getName:()Lorg/xbill/DNS/Name;
     718: astore        21
     720: aload         15
     722: aload         21
     724: invokevirtual #121                // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     727: ifne          733
     730: goto          661
     733: aload_0
     734: iconst_3
     735: iload_2
     736: invokespecial #110                // Method getCred:(IZ)I
     739: istore        8
     741: aload_0
     742: aload         19
     744: iload         8
     746: invokevirtual #63                 // Method addRRset:(Lorg/xbill/DNS/RRset;I)V
     749: goto          661
     752: getstatic     #122                // Field log:Lorg/slf4j/Logger;
     755: ldc           #123                // String Caching {} for {}/{}
     757: iconst_3
     758: anewarray     #124                // class java/lang/Object
     761: dup
     762: iconst_0
     763: aload         14
     765: aastore
     766: dup
     767: iconst_1
     768: aload_1
     769: invokevirtual #100                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
     772: invokevirtual #57                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
     775: aastore
     776: dup
     777: iconst_2
     778: aload_1
     779: invokevirtual #100                // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
     782: invokevirtual #103                // Method org/xbill/DNS/Record.getType:()I
     785: invokestatic  #125                // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
     788: aastore
     789: invokeinterface #126,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     794: aload         14
     796: areturn
    Exception table:
       from    to  target type
         343   352   355   Class org/xbill/DNS/NameTooLongException

  public void flushSet(org.xbill.DNS.Name, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #44                 // Method removeElement:(Lorg/xbill/DNS/Name;I)V
       6: return

  public void flushName(org.xbill.DNS.Name);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #127                // Method removeName:(Lorg/xbill/DNS/Name;)V
       5: return

  public void setMaxNCache(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field maxncache:I
       5: return

  public int getMaxNCache();
    Code:
       0: aload_0
       1: getfield      #10                 // Field maxncache:I
       4: ireturn

  public void setMaxCache(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field maxcache:I
       5: return

  public int getMaxCache();
    Code:
       0: aload_0
       1: getfield      #11                 // Field maxcache:I
       4: ireturn

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: invokevirtual #128                // Method org/xbill/DNS/Cache$CacheMap.size:()I
       7: ireturn

  public int getMaxEntries();
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: invokevirtual #129                // Method org/xbill/DNS/Cache$CacheMap.getMaxSize:()I
       7: ireturn

  public void setMaxEntries(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
       4: iload_1
       5: invokevirtual #130                // Method org/xbill/DNS/Cache$CacheMap.setMaxSize:(I)V
       8: return

  public int getDClass();
    Code:
       0: aload_0
       1: getfield      #12                 // Field dclass:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #131                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #132                // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #17                 // Field data:Lorg/xbill/DNS/Cache$CacheMap;
      16: invokevirtual #133                // Method org/xbill/DNS/Cache$CacheMap.values:()Ljava/util/Collection;
      19: invokeinterface #134,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          99
      34: aload_3
      35: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: astore        4
      42: aload_0
      43: aload         4
      45: invokespecial #81                 // Method allElements:(Ljava/lang/Object;)[Lorg/xbill/DNS/Cache$Element;
      48: astore        5
      50: aload         5
      52: astore        6
      54: aload         6
      56: arraylength
      57: istore        7
      59: iconst_0
      60: istore        8
      62: iload         8
      64: iload         7
      66: if_icmpge     96
      69: aload         6
      71: iload         8
      73: aaload
      74: astore        9
      76: aload_1
      77: aload         9
      79: invokevirtual #135                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_1
      84: ldc           #136                // String \n
      86: invokevirtual #137                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      89: pop
      90: iinc          8, 1
      93: goto          62
      96: goto          25
      99: aload_2
     100: monitorexit
     101: goto          111
     104: astore        10
     106: aload_2
     107: monitorexit
     108: aload         10
     110: athrow
     111: aload_1
     112: invokevirtual #138                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     115: areturn
    Exception table:
       from    to  target type
          12   101   104   any
         104   108   104   any

  static int access$000(long, long);
    Code:
       0: lload_0
       1: lload_2
       2: invokestatic  #1                  // Method limitExpire:(JJ)I
       5: ireturn

  static {};
    Code:
       0: ldc           #14                 // class org/xbill/DNS/Cache
       2: invokestatic  #139                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #122                // Field log:Lorg/slf4j/Logger;
       8: return
}
