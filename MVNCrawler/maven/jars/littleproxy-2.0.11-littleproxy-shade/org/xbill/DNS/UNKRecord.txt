Compiled from "UNKRecord.java"
public class org.xbill.DNS.UNKRecord extends org.xbill.DNS.Record {
  private byte[] data;

  org.xbill.DNS.UNKRecord();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/xbill/DNS/Record."<init>":()V
       4: return

  protected void rrFromWire(org.xbill.DNS.DNSInput);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method org/xbill/DNS/DNSInput.readByteArray:()[B
       5: putfield      #3                  // Field data:[B
       8: return

  protected void rdataFromString(org.xbill.DNS.Tokenizer, org.xbill.DNS.Name) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #4                  // String invalid unknown RR encoding
       3: invokevirtual #5                  // Method org/xbill/DNS/Tokenizer.exception:(Ljava/lang/String;)Lorg/xbill/DNS/TextParseException;
       6: athrow

  protected java.lang.String rrToString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:[B
       4: invokestatic  #6                  // Method unknownToString:([B)Ljava/lang/String;
       7: areturn

  public byte[] getData();
    Code:
       0: aload_0
       1: getfield      #3                  // Field data:[B
       4: areturn

  protected void rrToWire(org.xbill.DNS.DNSOutput, org.xbill.DNS.Compression, boolean);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field data:[B
       5: invokevirtual #7                  // Method org/xbill/DNS/DNSOutput.writeByteArray:([B)V
       8: return
}
