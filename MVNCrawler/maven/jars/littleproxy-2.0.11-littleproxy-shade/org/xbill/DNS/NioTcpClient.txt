Compiled from "NioTcpClient.java"
final class org.xbill.DNS.NioTcpClient extends org.xbill.DNS.NioClient {
  private static final org.slf4j.Logger log;

  private static final java.util.Queue<org.xbill.DNS.NioTcpClient$ChannelState> registrationQueue;

  private static final java.util.Map<org.xbill.DNS.NioTcpClient$ChannelKey, org.xbill.DNS.NioTcpClient$ChannelState> channelMap;

  private static void processPendingRegistrations();
    Code:
       0: getstatic     #3                  // Field registrationQueue:Ljava/util/Queue;
       3: invokeinterface #4,  1            // InterfaceMethod java/util/Queue.isEmpty:()Z
       8: ifne          77
      11: getstatic     #3                  // Field registrationQueue:Ljava/util/Queue;
      14: invokeinterface #5,  1            // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
      19: checkcast     #6                  // class org/xbill/DNS/NioTcpClient$ChannelState
      22: astore_0
      23: invokestatic  #7                  // Method selector:()Ljava/nio/channels/Selector;
      26: astore_1
      27: aload_0
      28: getfield      #8                  // Field org/xbill/DNS/NioTcpClient$ChannelState.channel:Ljava/nio/channels/SocketChannel;
      31: invokevirtual #9                  // Method java/nio/channels/SocketChannel.isConnected:()Z
      34: ifne          52
      37: aload_0
      38: getfield      #8                  // Field org/xbill/DNS/NioTcpClient$ChannelState.channel:Ljava/nio/channels/SocketChannel;
      41: aload_1
      42: bipush        8
      44: aload_0
      45: invokevirtual #11                 // Method java/nio/channels/SocketChannel.register:(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;
      48: pop
      49: goto          65
      52: aload_0
      53: getfield      #8                  // Field org/xbill/DNS/NioTcpClient$ChannelState.channel:Ljava/nio/channels/SocketChannel;
      56: aload_1
      57: invokevirtual #12                 // Method java/nio/channels/SocketChannel.keyFor:(Ljava/nio/channels/Selector;)Ljava/nio/channels/SelectionKey;
      60: iconst_4
      61: invokevirtual #13                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      64: pop
      65: goto          74
      68: astore_1
      69: aload_0
      70: aload_1
      71: invokestatic  #15                 // Method org/xbill/DNS/NioTcpClient$ChannelState.access$000:(Lorg/xbill/DNS/NioTcpClient$ChannelState;Ljava/io/IOException;)V
      74: goto          0
      77: return
    Exception table:
       from    to  target type
          23    65    68   Class java/io/IOException

  private static void checkTransactionTimeouts();
    Code:
       0: getstatic     #2                  // Field channelMap:Ljava/util/Map;
       3: invokeinterface #16,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       8: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_0
      14: aload_0
      15: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          104
      23: aload_0
      24: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #6                  // class org/xbill/DNS/NioTcpClient$ChannelState
      32: astore_1
      33: aload_1
      34: getfield      #20                 // Field org/xbill/DNS/NioTcpClient$ChannelState.pendingTransactions:Ljava/util/Queue;
      37: invokeinterface #21,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
      42: astore_2
      43: aload_2
      44: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          101
      52: aload_2
      53: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      58: checkcast     #22                 // class org/xbill/DNS/NioTcpClient$Transaction
      61: astore_3
      62: aload_3
      63: invokestatic  #23                 // Method org/xbill/DNS/NioTcpClient$Transaction.access$100:(Lorg/xbill/DNS/NioTcpClient$Transaction;)J
      66: invokestatic  #24                 // Method java/lang/System.nanoTime:()J
      69: lsub
      70: lconst_0
      71: lcmp
      72: ifge          98
      75: aload_3
      76: invokestatic  #25                 // Method org/xbill/DNS/NioTcpClient$Transaction.access$200:(Lorg/xbill/DNS/NioTcpClient$Transaction;)Ljava/util/concurrent/CompletableFuture;
      79: new           #26                 // class java/net/SocketTimeoutException
      82: dup
      83: ldc           #27                 // String Query timed out
      85: invokespecial #28                 // Method java/net/SocketTimeoutException."<init>":(Ljava/lang/String;)V
      88: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      91: pop
      92: aload_2
      93: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.remove:()V
      98: goto          43
     101: goto          14
     104: return

  private static void closeTcp();
    Code:
       0: getstatic     #3                  // Field registrationQueue:Ljava/util/Queue;
       3: invokeinterface #31,  1           // InterfaceMethod java/util/Queue.clear:()V
       8: new           #32                 // class java/io/EOFException
      11: dup
      12: ldc           #33                 // String Client is closing
      14: invokespecial #34                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      17: astore_0
      18: getstatic     #2                  // Field channelMap:Ljava/util/Map;
      21: aload_0
      22: invokedynamic #35,  0             // InvokeDynamic #0:accept:(Ljava/io/EOFException;)Ljava/util/function/BiConsumer;
      27: invokeinterface #36,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      32: getstatic     #2                  // Field channelMap:Ljava/util/Map;
      35: invokeinterface #37,  1           // InterfaceMethod java/util/Map.clear:()V
      40: return

  static java.util.concurrent.CompletableFuture<byte[]> sendrecv(java.net.InetSocketAddress, java.net.InetSocketAddress, org.xbill.DNS.Message, byte[], java.time.Duration);
    Code:
       0: new           #38                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #39                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore        5
       9: invokestatic  #7                  // Method selector:()Ljava/nio/channels/Selector;
      12: astore        6
      14: invokestatic  #24                 // Method java/lang/System.nanoTime:()J
      17: aload         4
      19: invokevirtual #40                 // Method java/time/Duration.toNanos:()J
      22: ladd
      23: lstore        7
      25: getstatic     #2                  // Field channelMap:Ljava/util/Map;
      28: new           #41                 // class org/xbill/DNS/NioTcpClient$ChannelKey
      31: dup
      32: aload_0
      33: aload_1
      34: invokespecial #42                 // Method org/xbill/DNS/NioTcpClient$ChannelKey."<init>":(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;)V
      37: aload_0
      38: aload_1
      39: aload         5
      41: invokedynamic #43,  0             // InvokeDynamic #1:apply:(Ljava/net/InetSocketAddress;Ljava/net/InetSocketAddress;Ljava/util/concurrent/CompletableFuture;)Ljava/util/function/Function;
      46: invokeinterface #44,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      51: checkcast     #6                  // class org/xbill/DNS/NioTcpClient$ChannelState
      54: astore        9
      56: aload         9
      58: ifnull        138
      61: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
      64: ldc           #45                 // String Creating transaction for {}/{}
      66: aload_2
      67: invokevirtual #46                 // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
      70: invokevirtual #47                 // Method org/xbill/DNS/Record.getName:()Lorg/xbill/DNS/Name;
      73: aload_2
      74: invokevirtual #46                 // Method org/xbill/DNS/Message.getQuestion:()Lorg/xbill/DNS/Record;
      77: invokevirtual #48                 // Method org/xbill/DNS/Record.getType:()I
      80: invokestatic  #49                 // Method org/xbill/DNS/Type.string:(I)Ljava/lang/String;
      83: invokeinterface #50,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      88: new           #22                 // class org/xbill/DNS/NioTcpClient$Transaction
      91: dup
      92: aload_2
      93: aload_3
      94: lload         7
      96: aload         9
      98: getfield      #8                  // Field org/xbill/DNS/NioTcpClient$ChannelState.channel:Ljava/nio/channels/SocketChannel;
     101: aload         5
     103: invokespecial #51                 // Method org/xbill/DNS/NioTcpClient$Transaction."<init>":(Lorg/xbill/DNS/Message;[BJLjava/nio/channels/SocketChannel;Ljava/util/concurrent/CompletableFuture;)V
     106: astore        10
     108: aload         9
     110: getfield      #20                 // Field org/xbill/DNS/NioTcpClient$ChannelState.pendingTransactions:Ljava/util/Queue;
     113: aload         10
     115: invokeinterface #52,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     120: pop
     121: getstatic     #3                  // Field registrationQueue:Ljava/util/Queue;
     124: aload         9
     126: invokeinterface #52,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     131: pop
     132: aload         6
     134: invokevirtual #53                 // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
     137: pop
     138: goto          151
     141: astore        6
     143: aload         5
     145: aload         6
     147: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     150: pop
     151: aload         5
     153: areturn
    Exception table:
       from    to  target type
           9   138   141   Class java/io/IOException

  private org.xbill.DNS.NioTcpClient();
    Code:
       0: aload_0
       1: invokespecial #54                 // Method org/xbill/DNS/NioClient."<init>":()V
       4: new           #55                 // class java/lang/UnsupportedOperationException
       7: dup
       8: ldc           #56                 // String This is a utility class and cannot be instantiated
      10: invokespecial #57                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      13: athrow

  private static org.xbill.DNS.NioTcpClient$ChannelState lambda$sendrecv$1(java.net.InetSocketAddress, java.net.InetSocketAddress, java.util.concurrent.CompletableFuture, org.xbill.DNS.NioTcpClient$ChannelKey);
    Code:
       0: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
       3: ldc           #58                 // String Opening async channel for l={}/r={}
       5: aload_0
       6: aload_1
       7: invokeinterface #50,  4           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      12: invokestatic  #59                 // Method java/nio/channels/SocketChannel.open:()Ljava/nio/channels/SocketChannel;
      15: astore        4
      17: aload         4
      19: iconst_0
      20: invokevirtual #60                 // Method java/nio/channels/SocketChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      23: pop
      24: aload_0
      25: ifnull        35
      28: aload         4
      30: aload_0
      31: invokevirtual #61                 // Method java/nio/channels/SocketChannel.bind:(Ljava/net/SocketAddress;)Ljava/nio/channels/SocketChannel;
      34: pop
      35: aload         4
      37: aload_1
      38: invokevirtual #62                 // Method java/nio/channels/SocketChannel.connect:(Ljava/net/SocketAddress;)Z
      41: pop
      42: new           #6                  // class org/xbill/DNS/NioTcpClient$ChannelState
      45: dup
      46: aload         4
      48: invokespecial #63                 // Method org/xbill/DNS/NioTcpClient$ChannelState."<init>":(Ljava/nio/channels/SocketChannel;)V
      51: areturn
      52: astore        4
      54: aload_2
      55: aload         4
      57: invokevirtual #29                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      60: pop
      61: aconst_null
      62: areturn
    Exception table:
       from    to  target type
           0    51    52   Class java/io/IOException

  private static void lambda$closeTcp$0(java.io.EOFException, org.xbill.DNS.NioTcpClient$ChannelKey, org.xbill.DNS.NioTcpClient$ChannelState);
    Code:
       0: aload_2
       1: aload_0
       2: invokevirtual #64                 // Method org/xbill/DNS/NioTcpClient$ChannelState.handleTransactionException:(Ljava/io/IOException;)V
       5: return

  static java.util.Map access$300();
    Code:
       0: getstatic     #2                  // Field channelMap:Ljava/util/Map;
       3: areturn

  static org.slf4j.Logger access$400();
    Code:
       0: getstatic     #1                  // Field log:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc           #65                 // class org/xbill/DNS/NioTcpClient
       2: invokestatic  #66                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #1                  // Field log:Lorg/slf4j/Logger;
       8: new           #67                 // class java/util/concurrent/ConcurrentLinkedQueue
      11: dup
      12: invokespecial #68                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      15: putstatic     #3                  // Field registrationQueue:Ljava/util/Queue;
      18: new           #69                 // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: invokespecial #70                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      25: putstatic     #2                  // Field channelMap:Ljava/util/Map;
      28: invokedynamic #71,  0             // InvokeDynamic #2:run:()Ljava/lang/Runnable;
      33: invokestatic  #72                 // Method addSelectorTimeoutTask:(Ljava/lang/Runnable;)V
      36: invokedynamic #73,  0             // InvokeDynamic #3:run:()Ljava/lang/Runnable;
      41: invokestatic  #72                 // Method addSelectorTimeoutTask:(Ljava/lang/Runnable;)V
      44: invokedynamic #74,  0             // InvokeDynamic #4:run:()Ljava/lang/Runnable;
      49: invokestatic  #75                 // Method addCloseTask:(Ljava/lang/Runnable;)V
      52: return
}
