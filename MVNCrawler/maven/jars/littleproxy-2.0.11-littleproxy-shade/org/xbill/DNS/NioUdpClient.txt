Compiled from "NioUdpClient.java"
final class org.xbill.DNS.NioUdpClient extends org.xbill.DNS.NioClient {
  private static final org.slf4j.Logger log;

  private static final int EPHEMERAL_START;

  private static final int EPHEMERAL_RANGE;

  private static final java.security.SecureRandom prng;

  private static final java.util.Queue<org.xbill.DNS.NioUdpClient$Transaction> registrationQueue;

  private static final java.util.Queue<org.xbill.DNS.NioUdpClient$Transaction> pendingTransactions;

  private static void processPendingRegistrations();
    Code:
       0: getstatic     #2                  // Field registrationQueue:Ljava/util/Queue;
       3: invokeinterface #3,  1            // InterfaceMethod java/util/Queue.isEmpty:()Z
       8: ifne          56
      11: getstatic     #2                  // Field registrationQueue:Ljava/util/Queue;
      14: invokeinterface #4,  1            // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;
      19: checkcast     #5                  // class org/xbill/DNS/NioUdpClient$Transaction
      22: astore_0
      23: aload_0
      24: invokestatic  #6                  // Method org/xbill/DNS/NioUdpClient$Transaction.access$000:(Lorg/xbill/DNS/NioUdpClient$Transaction;)Ljava/nio/channels/DatagramChannel;
      27: invokestatic  #7                  // Method selector:()Ljava/nio/channels/Selector;
      30: iconst_1
      31: aload_0
      32: invokevirtual #9                  // Method java/nio/channels/DatagramChannel.register:(Ljava/nio/channels/Selector;ILjava/lang/Object;)Ljava/nio/channels/SelectionKey;
      35: pop
      36: aload_0
      37: invokevirtual #10                 // Method org/xbill/DNS/NioUdpClient$Transaction.send:()V
      40: goto          53
      43: astore_1
      44: aload_0
      45: invokestatic  #12                 // Method org/xbill/DNS/NioUdpClient$Transaction.access$100:(Lorg/xbill/DNS/NioUdpClient$Transaction;)Ljava/util/concurrent/CompletableFuture;
      48: aload_1
      49: invokevirtual #13                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      52: pop
      53: goto          0
      56: return
    Exception table:
       from    to  target type
          23    40    43   Class java/io/IOException

  private static void checkTransactionTimeouts();
    Code:
       0: getstatic     #1                  // Field pendingTransactions:Ljava/util/Queue;
       3: invokeinterface #14,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;
       8: astore_0
       9: aload_0
      10: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          71
      18: aload_0
      19: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #5                  // class org/xbill/DNS/NioUdpClient$Transaction
      27: astore_1
      28: aload_1
      29: invokestatic  #17                 // Method org/xbill/DNS/NioUdpClient$Transaction.access$200:(Lorg/xbill/DNS/NioUdpClient$Transaction;)J
      32: invokestatic  #18                 // Method java/lang/System.nanoTime:()J
      35: lsub
      36: lconst_0
      37: lcmp
      38: ifge          68
      41: aload_1
      42: invokestatic  #19                 // Method org/xbill/DNS/NioUdpClient$Transaction.access$300:(Lorg/xbill/DNS/NioUdpClient$Transaction;)V
      45: aload_1
      46: invokestatic  #12                 // Method org/xbill/DNS/NioUdpClient$Transaction.access$100:(Lorg/xbill/DNS/NioUdpClient$Transaction;)Ljava/util/concurrent/CompletableFuture;
      49: new           #20                 // class java/net/SocketTimeoutException
      52: dup
      53: ldc           #21                 // String Query timed out
      55: invokespecial #22                 // Method java/net/SocketTimeoutException."<init>":(Ljava/lang/String;)V
      58: invokevirtual #13                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
      61: pop
      62: aload_0
      63: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.remove:()V
      68: goto          9
      71: return

  static java.util.concurrent.CompletableFuture<byte[]> sendrecv(java.net.InetSocketAddress, java.net.InetSocketAddress, byte[], int, java.time.Duration);
    Code:
       0: new           #24                 // class java/util/concurrent/CompletableFuture
       3: dup
       4: invokespecial #25                 // Method java/util/concurrent/CompletableFuture."<init>":()V
       7: astore        5
       9: invokestatic  #7                  // Method selector:()Ljava/nio/channels/Selector;
      12: astore        6
      14: invokestatic  #26                 // Method java/nio/channels/DatagramChannel.open:()Ljava/nio/channels/DatagramChannel;
      17: astore        7
      19: aload         7
      21: iconst_0
      22: invokevirtual #27                 // Method java/nio/channels/DatagramChannel.configureBlocking:(Z)Ljava/nio/channels/SelectableChannel;
      25: pop
      26: aload_0
      27: ifnull        37
      30: aload_0
      31: invokevirtual #28                 // Method java/net/InetSocketAddress.getPort:()I
      34: ifne          186
      37: iconst_0
      38: istore        8
      40: iconst_0
      41: istore        9
      43: iload         9
      45: sipush        1024
      48: if_icmpge     158
      51: aconst_null
      52: astore        10
      54: aload_0
      55: ifnonnull     89
      58: getstatic     #29                 // Field prng:Ljava/security/SecureRandom;
      61: ifnull        136
      64: new           #30                 // class java/net/InetSocketAddress
      67: dup
      68: getstatic     #29                 // Field prng:Ljava/security/SecureRandom;
      71: getstatic     #31                 // Field EPHEMERAL_RANGE:I
      74: invokevirtual #32                 // Method java/security/SecureRandom.nextInt:(I)I
      77: getstatic     #33                 // Field EPHEMERAL_START:I
      80: iadd
      81: invokespecial #34                 // Method java/net/InetSocketAddress."<init>":(I)V
      84: astore        10
      86: goto          136
      89: aload_0
      90: invokevirtual #28                 // Method java/net/InetSocketAddress.getPort:()I
      93: istore        11
      95: iload         11
      97: ifne          121
     100: getstatic     #29                 // Field prng:Ljava/security/SecureRandom;
     103: ifnull        121
     106: getstatic     #29                 // Field prng:Ljava/security/SecureRandom;
     109: getstatic     #31                 // Field EPHEMERAL_RANGE:I
     112: invokevirtual #32                 // Method java/security/SecureRandom.nextInt:(I)I
     115: getstatic     #33                 // Field EPHEMERAL_START:I
     118: iadd
     119: istore        11
     121: new           #30                 // class java/net/InetSocketAddress
     124: dup
     125: aload_0
     126: invokevirtual #35                 // Method java/net/InetSocketAddress.getAddress:()Ljava/net/InetAddress;
     129: iload         11
     131: invokespecial #36                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     134: astore        10
     136: aload         7
     138: aload         10
     140: invokevirtual #37                 // Method java/nio/channels/DatagramChannel.bind:(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;
     143: pop
     144: iconst_1
     145: istore        8
     147: goto          158
     150: astore        10
     152: iinc          9, 1
     155: goto          43
     158: iload         8
     160: ifne          186
     163: aload         7
     165: invokevirtual #39                 // Method java/nio/channels/DatagramChannel.close:()V
     168: aload         5
     170: new           #11                 // class java/io/IOException
     173: dup
     174: ldc           #40                 // String No available source port found
     176: invokespecial #41                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     179: invokevirtual #13                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     182: pop
     183: aload         5
     185: areturn
     186: aload         7
     188: aload_1
     189: invokevirtual #42                 // Method java/nio/channels/DatagramChannel.connect:(Ljava/net/SocketAddress;)Ljava/nio/channels/DatagramChannel;
     192: pop
     193: invokestatic  #18                 // Method java/lang/System.nanoTime:()J
     196: aload         4
     198: invokevirtual #43                 // Method java/time/Duration.toNanos:()J
     201: ladd
     202: lstore        8
     204: new           #5                  // class org/xbill/DNS/NioUdpClient$Transaction
     207: dup
     208: aload_2
     209: iload_3
     210: lload         8
     212: aload         7
     214: aload         5
     216: invokespecial #44                 // Method org/xbill/DNS/NioUdpClient$Transaction."<init>":([BIJLjava/nio/channels/DatagramChannel;Ljava/util/concurrent/CompletableFuture;)V
     219: astore        10
     221: getstatic     #1                  // Field pendingTransactions:Ljava/util/Queue;
     224: aload         10
     226: invokeinterface #45,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     231: pop
     232: getstatic     #2                  // Field registrationQueue:Ljava/util/Queue;
     235: aload         10
     237: invokeinterface #45,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
     242: pop
     243: aload         6
     245: invokevirtual #46                 // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
     248: pop
     249: goto          262
     252: astore        6
     254: aload         5
     256: aload         6
     258: invokevirtual #13                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
     261: pop
     262: aload         5
     264: areturn
    Exception table:
       from    to  target type
          51   147   150   Class java/net/SocketException
           9   185   252   Class java/io/IOException
         186   249   252   Class java/io/IOException

  private static void closeUdp();
    Code:
       0: getstatic     #2                  // Field registrationQueue:Ljava/util/Queue;
       3: invokeinterface #47,  1           // InterfaceMethod java/util/Queue.clear:()V
       8: new           #48                 // class java/io/EOFException
      11: dup
      12: ldc           #49                 // String Client is closing
      14: invokespecial #50                 // Method java/io/EOFException."<init>":(Ljava/lang/String;)V
      17: astore_0
      18: getstatic     #1                  // Field pendingTransactions:Ljava/util/Queue;
      21: aload_0
      22: invokedynamic #51,  0             // InvokeDynamic #0:accept:(Ljava/io/EOFException;)Ljava/util/function/Consumer;
      27: invokeinterface #52,  2           // InterfaceMethod java/util/Queue.forEach:(Ljava/util/function/Consumer;)V
      32: getstatic     #1                  // Field pendingTransactions:Ljava/util/Queue;
      35: invokeinterface #47,  1           // InterfaceMethod java/util/Queue.clear:()V
      40: return

  private org.xbill.DNS.NioUdpClient();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method org/xbill/DNS/NioClient."<init>":()V
       4: new           #54                 // class java/lang/UnsupportedOperationException
       7: dup
       8: ldc           #55                 // String This is a utility class and cannot be instantiated
      10: invokespecial #56                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      13: athrow

  private static void lambda$closeUdp$0(java.io.EOFException, org.xbill.DNS.NioUdpClient$Transaction);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method org/xbill/DNS/NioUdpClient$Transaction.access$100:(Lorg/xbill/DNS/NioUdpClient$Transaction;)Ljava/util/concurrent/CompletableFuture;
       4: aload_0
       5: invokevirtual #13                 // Method java/util/concurrent/CompletableFuture.completeExceptionally:(Ljava/lang/Throwable;)Z
       8: pop
       9: return

  static java.util.Queue access$400();
    Code:
       0: getstatic     #1                  // Field pendingTransactions:Ljava/util/Queue;
       3: areturn

  static {};
    Code:
       0: ldc           #57                 // class org/xbill/DNS/NioUdpClient
       2: invokestatic  #58                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #59                 // Field log:Lorg/slf4j/Logger;
       8: new           #60                 // class java/util/concurrent/ConcurrentLinkedQueue
      11: dup
      12: invokespecial #61                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      15: putstatic     #2                  // Field registrationQueue:Ljava/util/Queue;
      18: new           #60                 // class java/util/concurrent/ConcurrentLinkedQueue
      21: dup
      22: invokespecial #61                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      25: putstatic     #1                  // Field pendingTransactions:Ljava/util/Queue;
      28: ldc           #62                 // int 49152
      30: istore_0
      31: ldc           #63                 // int 65535
      33: istore_1
      34: ldc           #64                 // String os.name
      36: invokestatic  #65                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      39: invokevirtual #66                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      42: ldc           #67                 // String linux
      44: invokevirtual #68                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      47: ifeq          56
      50: ldc           #69                 // int 32768
      52: istore_0
      53: ldc           #70                 // int 60999
      55: istore_1
      56: ldc           #71                 // String dnsjava.udp.ephemeral.start
      58: iload_0
      59: invokestatic  #72                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      62: invokevirtual #73                 // Method java/lang/Integer.intValue:()I
      65: putstatic     #33                 // Field EPHEMERAL_START:I
      68: ldc           #74                 // String dnsjava.udp.ephemeral.end
      70: iload_1
      71: invokestatic  #72                 // Method java/lang/Integer.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;
      74: invokevirtual #73                 // Method java/lang/Integer.intValue:()I
      77: istore_2
      78: iload_2
      79: getstatic     #33                 // Field EPHEMERAL_START:I
      82: isub
      83: putstatic     #31                 // Field EPHEMERAL_RANGE:I
      86: ldc           #75                 // String dnsjava.udp.ephemeral.use_ephemeral_port
      88: invokestatic  #76                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      91: ifeq          101
      94: aconst_null
      95: putstatic     #29                 // Field prng:Ljava/security/SecureRandom;
      98: goto          111
     101: new           #77                 // class java/security/SecureRandom
     104: dup
     105: invokespecial #78                 // Method java/security/SecureRandom."<init>":()V
     108: putstatic     #29                 // Field prng:Ljava/security/SecureRandom;
     111: invokedynamic #79,  0             // InvokeDynamic #1:run:()Ljava/lang/Runnable;
     116: invokestatic  #80                 // Method addSelectorTimeoutTask:(Ljava/lang/Runnable;)V
     119: invokedynamic #81,  0             // InvokeDynamic #2:run:()Ljava/lang/Runnable;
     124: invokestatic  #80                 // Method addSelectorTimeoutTask:(Ljava/lang/Runnable;)V
     127: invokedynamic #82,  0             // InvokeDynamic #3:run:()Ljava/lang/Runnable;
     132: invokestatic  #83                 // Method addCloseTask:(Ljava/lang/Runnable;)V
     135: return
}
