Compiled from "NioClient.java"
public abstract class org.xbill.DNS.NioClient {
  private static final org.slf4j.Logger log;

  private static org.xbill.DNS.PacketLogger packetLogger;

  private static final java.util.List<java.lang.Runnable> timeoutTasks;

  private static final java.util.List<java.lang.Runnable> closeTasks;

  private static java.lang.Thread selectorThread;

  private static java.lang.Thread closeThread;

  private static volatile java.nio.channels.Selector selector;

  private static volatile boolean run;

  public org.xbill.DNS.NioClient();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static java.nio.channels.Selector selector() throws java.io.IOException;
    Code:
       0: getstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
       3: ifnonnull     115
       6: ldc           #3                  // class org/xbill/DNS/NioClient
       8: dup
       9: astore_0
      10: monitorenter
      11: getstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
      14: ifnonnull     105
      17: invokestatic  #4                  // Method java/nio/channels/Selector.open:()Ljava/nio/channels/Selector;
      20: putstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
      23: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
      26: ldc           #6                  // String Starting dnsjava NIO selector thread
      28: invokeinterface #7,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      33: iconst_1
      34: putstatic     #8                  // Field run:Z
      37: new           #9                  // class java/lang/Thread
      40: dup
      41: invokedynamic #10,  0             // InvokeDynamic #0:run:()Ljava/lang/Runnable;
      46: invokespecial #11                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      49: putstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
      52: getstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
      55: iconst_1
      56: invokevirtual #13                 // Method java/lang/Thread.setDaemon:(Z)V
      59: getstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
      62: ldc           #14                 // String dnsjava NIO selector
      64: invokevirtual #15                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      67: getstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
      70: invokevirtual #16                 // Method java/lang/Thread.start:()V
      73: new           #9                  // class java/lang/Thread
      76: dup
      77: invokedynamic #17,  0             // InvokeDynamic #1:run:()Ljava/lang/Runnable;
      82: invokespecial #11                 // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
      85: putstatic     #18                 // Field closeThread:Ljava/lang/Thread;
      88: getstatic     #18                 // Field closeThread:Ljava/lang/Thread;
      91: ldc           #19                 // String dnsjava NIO shutdown hook
      93: invokevirtual #15                 // Method java/lang/Thread.setName:(Ljava/lang/String;)V
      96: invokestatic  #20                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      99: getstatic     #18                 // Field closeThread:Ljava/lang/Thread;
     102: invokevirtual #21                 // Method java/lang/Runtime.addShutdownHook:(Ljava/lang/Thread;)V
     105: aload_0
     106: monitorexit
     107: goto          115
     110: astore_1
     111: aload_0
     112: monitorexit
     113: aload_1
     114: athrow
     115: getstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
     118: areturn
    Exception table:
       from    to  target type
          11   107   110   any
         110   113   110   any

  public static void close();
    Code:
       0: iconst_0
       1: invokestatic  #22                 // Method close:(Z)V
       4: return

  private static void close(boolean);
    Code:
       0: iconst_0
       1: putstatic     #8                  // Field run:Z
       4: iload_0
       5: ifne          32
       8: invokestatic  #20                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      11: getstatic     #18                 // Field closeThread:Ljava/lang/Thread;
      14: invokevirtual #23                 // Method java/lang/Runtime.removeShutdownHook:(Ljava/lang/Thread;)Z
      17: pop
      18: goto          32
      21: astore_1
      22: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
      25: ldc           #25                 // String Failed to remove shutdown hoook, ignoring and continuing close
      27: invokeinterface #26,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      32: getstatic     #27                 // Field closeTasks:Ljava/util/List;
      35: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      40: astore_1
      41: aload_1
      42: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          84
      50: aload_1
      51: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #31                 // class java/lang/Runnable
      59: astore_2
      60: aload_2
      61: invokeinterface #32,  1           // InterfaceMethod java/lang/Runnable.run:()V
      66: goto          81
      69: astore_3
      70: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
      73: ldc           #33                 // String Failed to execute a shutdown task, ignoring and continuing close
      75: aload_3
      76: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      81: goto          41
      84: getstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
      87: invokevirtual #35                 // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      90: pop
      91: getstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
      94: invokevirtual #36                 // Method java/nio/channels/Selector.close:()V
      97: goto          112
     100: astore_1
     101: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
     104: ldc           #38                 // String Failed to properly close selector, ignoring and continuing close
     106: aload_1
     107: invokeinterface #34,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     112: getstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
     115: invokevirtual #39                 // Method java/lang/Thread.join:()V
     118: ldc           #3                  // class org/xbill/DNS/NioClient
     120: dup
     121: astore_1
     122: monitorenter
     123: aconst_null
     124: putstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
     127: aconst_null
     128: putstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
     131: aconst_null
     132: putstatic     #18                 // Field closeThread:Ljava/lang/Thread;
     135: aload_1
     136: monitorexit
     137: goto          147
     140: astore        4
     142: aload_1
     143: monitorexit
     144: aload         4
     146: athrow
     147: goto          226
     150: astore_1
     151: invokestatic  #41                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     154: invokevirtual #42                 // Method java/lang/Thread.interrupt:()V
     157: ldc           #3                  // class org/xbill/DNS/NioClient
     159: dup
     160: astore_1
     161: monitorenter
     162: aconst_null
     163: putstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
     166: aconst_null
     167: putstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
     170: aconst_null
     171: putstatic     #18                 // Field closeThread:Ljava/lang/Thread;
     174: aload_1
     175: monitorexit
     176: goto          186
     179: astore        5
     181: aload_1
     182: monitorexit
     183: aload         5
     185: athrow
     186: goto          226
     189: astore        6
     191: ldc           #3                  // class org/xbill/DNS/NioClient
     193: dup
     194: astore        7
     196: monitorenter
     197: aconst_null
     198: putstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
     201: aconst_null
     202: putstatic     #12                 // Field selectorThread:Ljava/lang/Thread;
     205: aconst_null
     206: putstatic     #18                 // Field closeThread:Ljava/lang/Thread;
     209: aload         7
     211: monitorexit
     212: goto          223
     215: astore        8
     217: aload         7
     219: monitorexit
     220: aload         8
     222: athrow
     223: aload         6
     225: athrow
     226: return
    Exception table:
       from    to  target type
           8    18    21   Class java/lang/Exception
          60    66    69   Class java/lang/Exception
          91    97   100   Class java/io/IOException
         123   137   140   any
         140   144   140   any
         112   118   150   Class java/lang/InterruptedException
         162   176   179   any
         179   183   179   any
         112   118   189   any
         150   157   189   any
         197   212   215   any
         215   220   215   any
         189   191   189   any

  private static void runSelector();
    Code:
       0: getstatic     #8                  // Field run:Z
       3: ifeq          62
       6: getstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
       9: ldc2_w        #43                 // long 1000l
      12: invokevirtual #45                 // Method java/nio/channels/Selector.select:(J)I
      15: ifne          31
      18: getstatic     #46                 // Field timeoutTasks:Ljava/util/List;
      21: invokedynamic #47,  0             // InvokeDynamic #2:accept:()Ljava/util/function/Consumer;
      26: invokeinterface #48,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      31: getstatic     #8                  // Field run:Z
      34: ifeq          40
      37: invokestatic  #49                 // Method processReadyKeys:()V
      40: goto          0
      43: astore_0
      44: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
      47: ldc           #50                 // String A selection operation failed
      49: aload_0
      50: invokeinterface #51,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      55: goto          0
      58: astore_0
      59: goto          0
      62: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
      65: ldc           #53                 // String dnsjava NIO selector thread stopped
      67: invokeinterface #7,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      72: return
    Exception table:
       from    to  target type
           6    40    43   Class java/io/IOException
           6    40    58   Class java/nio/channels/ClosedSelectorException

  static void addSelectorTimeoutTask(java.lang.Runnable);
    Code:
       0: getstatic     #46                 // Field timeoutTasks:Ljava/util/List;
       3: aload_0
       4: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  static void addCloseTask(java.lang.Runnable);
    Code:
       0: getstatic     #27                 // Field closeTasks:Ljava/util/List;
       3: aload_0
       4: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       9: pop
      10: return

  private static void processReadyKeys();
    Code:
       0: getstatic     #2                  // Field selector:Ljava/nio/channels/Selector;
       3: invokevirtual #55                 // Method java/nio/channels/Selector.selectedKeys:()Ljava/util/Set;
       6: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_0
      12: aload_0
      13: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          55
      21: aload_0
      22: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #57                 // class java/nio/channels/SelectionKey
      30: astore_1
      31: aload_0
      32: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.remove:()V
      37: aload_1
      38: invokevirtual #59                 // Method java/nio/channels/SelectionKey.attachment:()Ljava/lang/Object;
      41: checkcast     #60                 // class org/xbill/DNS/NioClient$KeyProcessor
      44: astore_2
      45: aload_2
      46: aload_1
      47: invokeinterface #61,  2           // InterfaceMethod org/xbill/DNS/NioClient$KeyProcessor.processReadyKey:(Ljava/nio/channels/SelectionKey;)V
      52: goto          12
      55: return

  static void verboseLog(java.lang.String, java.net.SocketAddress, java.net.SocketAddress, byte[]);
    Code:
       0: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
       3: invokeinterface #62,  1           // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
       8: ifeq          24
      11: getstatic     #5                  // Field log:Lorg/slf4j/Logger;
      14: aload_0
      15: aload_3
      16: invokestatic  #63                 // Method org/xbill/DNS/utils/hexdump.dump:(Ljava/lang/String;[B)Ljava/lang/String;
      19: invokeinterface #64,  2           // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;)V
      24: getstatic     #65                 // Field packetLogger:Lorg/xbill/DNS/PacketLogger;
      27: ifnull        42
      30: getstatic     #65                 // Field packetLogger:Lorg/xbill/DNS/PacketLogger;
      33: aload_0
      34: aload_1
      35: aload_2
      36: aload_3
      37: invokeinterface #66,  5           // InterfaceMethod org/xbill/DNS/PacketLogger.log:(Ljava/lang/String;Ljava/net/SocketAddress;Ljava/net/SocketAddress;[B)V
      42: return

  static void setPacketLogger(org.xbill.DNS.PacketLogger);
    Code:
       0: aload_0
       1: putstatic     #65                 // Field packetLogger:Lorg/xbill/DNS/PacketLogger;
       4: return

  private static void lambda$selector$0();
    Code:
       0: iconst_1
       1: invokestatic  #22                 // Method close:(Z)V
       4: return

  static {};
    Code:
       0: ldc           #3                  // class org/xbill/DNS/NioClient
       2: invokestatic  #67                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #5                  // Field log:Lorg/slf4j/Logger;
       8: aconst_null
       9: putstatic     #65                 // Field packetLogger:Lorg/xbill/DNS/PacketLogger;
      12: new           #68                 // class java/util/concurrent/CopyOnWriteArrayList
      15: dup
      16: invokespecial #69                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      19: putstatic     #46                 // Field timeoutTasks:Ljava/util/List;
      22: new           #68                 // class java/util/concurrent/CopyOnWriteArrayList
      25: dup
      26: invokespecial #69                 // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      29: putstatic     #27                 // Field closeTasks:Ljava/util/List;
      32: return
}
