Compiled from "JndiContextResolverConfigProvider.java"
final class org.xbill.DNS.config.JndiContextResolverConfigProvider$InnerJndiContextResolverConfigProvider extends org.xbill.DNS.config.BaseResolverConfigProvider {
  private static final org.slf4j.Logger log;

  private org.xbill.DNS.config.JndiContextResolverConfigProvider$InnerJndiContextResolverConfigProvider();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/xbill/DNS/config/BaseResolverConfigProvider."<init>":()V
       4: return

  public void initialize();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method reset:()V
       4: new           #4                  // class java/util/Hashtable
       7: dup
       8: invokespecial #5                  // Method java/util/Hashtable."<init>":()V
      11: astore_1
      12: aload_1
      13: ldc           #7                  // String java.naming.factory.initial
      15: ldc           #8                  // String com.sun.jndi.dns.DnsContextFactory
      17: invokevirtual #9                  // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: aload_1
      22: ldc           #10                 // String java.naming.provider.url
      24: ldc           #11                 // String dns://
      26: invokevirtual #9                  // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aconst_null
      31: astore_2
      32: new           #12                 // class javax/naming/directory/InitialDirContext
      35: dup
      36: aload_1
      37: invokespecial #13                 // Method javax/naming/directory/InitialDirContext."<init>":(Ljava/util/Hashtable;)V
      40: astore_3
      41: aload_3
      42: invokeinterface #14,  1           // InterfaceMethod javax/naming/directory/DirContext.getEnvironment:()Ljava/util/Hashtable;
      47: ldc           #10                 // String java.naming.provider.url
      49: invokevirtual #15                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #16                 // class java/lang/String
      55: astore_2
      56: aload_3
      57: invokeinterface #17,  1           // InterfaceMethod javax/naming/directory/DirContext.close:()V
      62: goto          66
      65: astore_3
      66: aload_2
      67: ifnull        182
      70: new           #19                 // class java/util/StringTokenizer
      73: dup
      74: aload_2
      75: ldc           #20                 // String
      77: invokespecial #21                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      80: astore_3
      81: aload_3
      82: invokevirtual #22                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      85: ifeq          182
      88: aload_3
      89: invokevirtual #23                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      92: astore        4
      94: new           #24                 // class java/net/URI
      97: dup
      98: aload         4
     100: invokespecial #25                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     103: astore        5
     105: aload         5
     107: invokevirtual #26                 // Method java/net/URI.getHost:()Ljava/lang/String;
     110: astore        6
     112: aload         6
     114: ifnull        125
     117: aload         6
     119: invokevirtual #27                 // Method java/lang/String.isEmpty:()Z
     122: ifeq          128
     125: goto          81
     128: aload         5
     130: invokevirtual #28                 // Method java/net/URI.getPort:()I
     133: istore        7
     135: iload         7
     137: iconst_m1
     138: if_icmpne     145
     141: bipush        53
     143: istore        7
     145: aload_0
     146: new           #30                 // class java/net/InetSocketAddress
     149: dup
     150: aload         6
     152: iload         7
     154: invokespecial #31                 // Method java/net/InetSocketAddress."<init>":(Ljava/lang/String;I)V
     157: invokevirtual #32                 // Method addNameserver:(Ljava/net/InetSocketAddress;)V
     160: goto          179
     163: astore        5
     165: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
     168: ldc           #35                 // String Could not parse {} as a dns server, ignoring
     170: aload         4
     172: aload         5
     174: invokeinterface #36,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     179: goto          81
     182: return
    Exception table:
       from    to  target type
          32    62    65   Class javax/naming/NamingException
          94   125   163   Class java/net/URISyntaxException
         128   160   163   Class java/net/URISyntaxException

  org.xbill.DNS.config.JndiContextResolverConfigProvider$InnerJndiContextResolverConfigProvider(org.xbill.DNS.config.JndiContextResolverConfigProvider$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #37                 // class org/xbill/DNS/config/JndiContextResolverConfigProvider$InnerJndiContextResolverConfigProvider
       2: invokestatic  #38                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #34                 // Field log:Lorg/slf4j/Logger;
       8: getstatic     #34                 // Field log:Lorg/slf4j/Logger;
      11: ldc           #39                 // String JNDI class: {}
      13: ldc           #40                 // class javax/naming/directory/DirContext
      15: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;
      18: invokeinterface #42,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      23: return
}
