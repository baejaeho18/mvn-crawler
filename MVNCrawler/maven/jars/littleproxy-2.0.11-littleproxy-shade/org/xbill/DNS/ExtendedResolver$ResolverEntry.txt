Compiled from "ExtendedResolver.java"
class org.xbill.DNS.ExtendedResolver$ResolverEntry {
  private final org.xbill.DNS.Resolver resolver;

  private final java.util.concurrent.atomic.AtomicInteger failures;

  org.xbill.DNS.ExtendedResolver$ResolverEntry(org.xbill.DNS.Resolver);
    Code:
       0: aload_0
       1: aload_1
       2: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
       5: dup
       6: iconst_0
       7: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      10: invokespecial #5                  // Method "<init>":(Lorg/xbill/DNS/Resolver;Ljava/util/concurrent/atomic/AtomicInteger;)V
      13: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolver:Lorg/xbill/DNS/Resolver;
       4: invokevirtual #6                  // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public org.xbill.DNS.ExtendedResolver$ResolverEntry(org.xbill.DNS.Resolver, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field resolver:Lorg/xbill/DNS/Resolver;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
      14: return

  static org.xbill.DNS.Resolver access$500(org.xbill.DNS.ExtendedResolver$ResolverEntry);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resolver:Lorg/xbill/DNS/Resolver;
       4: areturn

  static java.util.concurrent.atomic.AtomicInteger access$700(org.xbill.DNS.ExtendedResolver$ResolverEntry);
    Code:
       0: aload_0
       1: getfield      #1                  // Field failures:Ljava/util/concurrent/atomic/AtomicInteger;
       4: areturn
}
