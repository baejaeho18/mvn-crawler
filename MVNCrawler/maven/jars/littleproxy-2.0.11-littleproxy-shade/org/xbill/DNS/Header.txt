Compiled from "Header.java"
public class org.xbill.DNS.Header implements java.lang.Cloneable {
  private int id;

  private int flags;

  private int[] counts;

  private static final java.util.Random random;

  public static final int LENGTH;

  public org.xbill.DNS.Header(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iflt          14
       8: iload_1
       9: ldc           #2                  // int 65535
      11: if_icmple     46
      14: new           #3                  // class java/lang/IllegalArgumentException
      17: dup
      18: new           #146                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #6                  // String DNS message ID
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: iload_1
      31: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      34: ldc           #9                  // String  is out of range
      36: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: aload_0
      47: iconst_4
      48: newarray       int
      50: putfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      53: aload_0
      54: iconst_0
      55: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      58: aload_0
      59: iload_1
      60: putfield      #14                 // Field org/xbill/DNS/Header.id:I
      63: return

  public org.xbill.DNS.Header();
    Code:
       0: aload_0
       1: getstatic     #15                 // Field org/xbill/DNS/Header.random:Ljava/util/Random;
       4: ldc           #2                  // int 65535
       6: invokevirtual #16                 // Method java/util/Random.nextInt:(I)I
       9: invokespecial #17                 // Method org/xbill/DNS/Header."<init>":(I)V
      12: return

  org.xbill.DNS.Header(org.xbill.DNS.DNSInput) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
       5: invokespecial #17                 // Method org/xbill/DNS/Header."<init>":(I)V
       8: aload_0
       9: aload_1
      10: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
      13: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      16: iconst_0
      17: istore_2
      18: iload_2
      19: aload_0
      20: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      23: arraylength
      24: if_icmpge     43
      27: aload_0
      28: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      31: iload_2
      32: aload_1
      33: invokevirtual #18                 // Method org/xbill/DNS/DNSInput.readU16:()I
      36: iastore
      37: iinc          2, 1
      40: goto          18
      43: return

  public org.xbill.DNS.Header(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: new           #95                 // class org/xbill/DNS/DNSInput
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method org/xbill/DNS/DNSInput."<init>":([B)V
       9: invokespecial #21                 // Method org/xbill/DNS/Header."<init>":(Lorg/xbill/DNS/DNSInput;)V
      12: return

  void toWire(org.xbill.DNS.DNSOutput);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #22                 // Method org/xbill/DNS/Header.getID:()I
       5: invokevirtual #23                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
      13: invokevirtual #23                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      16: aload_0
      17: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      20: astore_2
      21: aload_2
      22: arraylength
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     51
      33: aload_2
      34: iload         4
      36: iaload
      37: istore        5
      39: aload_1
      40: iload         5
      42: invokevirtual #23                 // Method org/xbill/DNS/DNSOutput.writeU16:(I)V
      45: iinc          4, 1
      48: goto          27
      51: return

  public byte[] toWire();
    Code:
       0: new           #24                 // class org/xbill/DNS/DNSOutput
       3: dup
       4: invokespecial #25                 // Method org/xbill/DNS/DNSOutput."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #26                 // Method org/xbill/DNS/Header.toWire:(Lorg/xbill/DNS/DNSOutput;)V
      13: aload_1
      14: invokevirtual #27                 // Method org/xbill/DNS/DNSOutput.toByteArray:()[B
      17: areturn

  private static boolean validFlag(int);
    Code:
       0: iload_0
       1: iflt          21
       4: iload_0
       5: bipush        15
       7: if_icmpgt     21
      10: iload_0
      11: invokestatic  #28                 // Method org/xbill/DNS/Flags.isFlag:(I)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  private static void checkFlag(int);
    Code:
       0: iload_0
       1: invokestatic  #29                 // Method org/xbill/DNS/Header.validFlag:(I)Z
       4: ifne          34
       7: new           #3                  // class java/lang/IllegalArgumentException
      10: dup
      11: new           #146                // class java/lang/StringBuilder
      14: dup
      15: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #30                 // String invalid flag bit
      20: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: iload_0
      24: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: return

  static int setFlag(int, int, boolean);
    Code:
       0: iload_1
       1: invokestatic  #31                 // Method org/xbill/DNS/Header.checkFlag:(I)V
       4: iload_2
       5: ifeq          17
       8: iload_0
       9: iconst_1
      10: bipush        15
      12: iload_1
      13: isub
      14: ishl
      15: ior
      16: ireturn
      17: iload_0
      18: iconst_1
      19: bipush        15
      21: iload_1
      22: isub
      23: ishl
      24: iconst_m1
      25: ixor
      26: iand
      27: ireturn

  public void setFlag(int);
    Code:
       0: iload_1
       1: invokestatic  #31                 // Method org/xbill/DNS/Header.checkFlag:(I)V
       4: aload_0
       5: aload_0
       6: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
       9: iload_1
      10: iconst_1
      11: invokestatic  #32                 // Method org/xbill/DNS/Header.setFlag:(IIZ)I
      14: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      17: return

  public void unsetFlag(int);
    Code:
       0: iload_1
       1: invokestatic  #31                 // Method org/xbill/DNS/Header.checkFlag:(I)V
       4: aload_0
       5: aload_0
       6: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
       9: iload_1
      10: iconst_0
      11: invokestatic  #32                 // Method org/xbill/DNS/Header.setFlag:(IIZ)I
      14: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      17: return

  public boolean getFlag(int);
    Code:
       0: iload_1
       1: invokestatic  #31                 // Method org/xbill/DNS/Header.checkFlag:(I)V
       4: aload_0
       5: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
       8: iconst_1
       9: bipush        15
      11: iload_1
      12: isub
      13: ishl
      14: iand
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  boolean[] getFlags();
    Code:
       0: bipush        16
       2: newarray       boolean
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: aload_1
       9: arraylength
      10: if_icmpge     34
      13: iload_2
      14: invokestatic  #29                 // Method org/xbill/DNS/Header.validFlag:(I)Z
      17: ifeq          28
      20: aload_1
      21: iload_2
      22: aload_0
      23: iload_2
      24: invokevirtual #33                 // Method org/xbill/DNS/Header.getFlag:(I)Z
      27: bastore
      28: iinc          2, 1
      31: goto          7
      34: aload_1
      35: areturn

  public int getID();
    Code:
       0: aload_0
       1: getfield      #14                 // Field org/xbill/DNS/Header.id:I
       4: ireturn

  public void setID(int);
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: ldc           #2                  // int 65535
       7: if_icmple     42
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #146                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #6                  // String DNS message ID
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #9                  // String  is out of range
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: iload_1
      44: putfield      #14                 // Field org/xbill/DNS/Header.id:I
      47: return

  public void setRcode(int);
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: bipush        15
       7: if_icmple     42
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #146                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #34                 // String DNS Rcode
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #9                  // String  is out of range
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: dup
      44: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
      47: bipush        -16
      49: iand
      50: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      53: aload_0
      54: dup
      55: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
      58: iload_1
      59: ior
      60: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      63: return

  public int getRcode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
       4: bipush        15
       6: iand
       7: ireturn

  public void setOpcode(int);
    Code:
       0: iload_1
       1: iflt          10
       4: iload_1
       5: bipush        15
       7: if_icmple     42
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #146                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #35                 // String DNS Opcode
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #36                 // String is out of range
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: dup
      44: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
      47: ldc           #37                 // int 34815
      49: iand
      50: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      53: aload_0
      54: dup
      55: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
      58: iload_1
      59: bipush        11
      61: ishl
      62: ior
      63: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      66: return

  public int getOpcode();
    Code:
       0: aload_0
       1: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
       4: bipush        11
       6: ishr
       7: bipush        15
       9: iand
      10: ireturn

  void setCount(int, int);
    Code:
       0: iload_2
       1: iflt          10
       4: iload_2
       5: ldc           #2                  // int 65535
       7: if_icmple     42
      10: new           #3                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #146                // class java/lang/StringBuilder
      17: dup
      18: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #38                 // String DNS section count
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_2
      27: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #9                  // String  is out of range
      32: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      46: iload_1
      47: iload_2
      48: iastore
      49: return

  void incCount(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
       4: iload_1
       5: iaload
       6: ldc           #2                  // int 65535
       8: if_icmpne     21
      11: new           #39                 // class java/lang/IllegalStateException
      14: dup
      15: ldc           #40                 // String DNS section count cannot be incremented
      17: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      25: iload_1
      26: dup2
      27: iaload
      28: iconst_1
      29: iadd
      30: iastore
      31: return

  void decCount(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
       4: iload_1
       5: iaload
       6: ifne          19
       9: new           #39                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #42                 // String DNS section count cannot be decremented
      15: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      23: iload_1
      24: dup2
      25: iaload
      26: iconst_1
      27: isub
      28: iastore
      29: return

  public int getCount(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
       4: iload_1
       5: iaload
       6: ireturn

  int getFlagsByte();
    Code:
       0: aload_0
       1: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
       4: ireturn

  public java.lang.String printFlags();
    Code:
       0: new           #146                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #43                 // Method org/xbill/DNS/Header.printFlags:(Ljava/lang/StringBuilder;)V
      13: aload_1
      14: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  private void printFlags(java.lang.StringBuilder);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: bipush        16
       5: if_icmpge     45
       8: iload_2
       9: invokestatic  #29                 // Method org/xbill/DNS/Header.validFlag:(I)Z
      12: ifeq          39
      15: aload_0
      16: iload_2
      17: invokevirtual #33                 // Method org/xbill/DNS/Header.getFlag:(I)Z
      20: ifeq          39
      23: aload_1
      24: iload_2
      25: invokestatic  #44                 // Method org/xbill/DNS/Flags.string:(I)Ljava/lang/String;
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: ldc           #45                 // String
      35: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: pop
      39: iinc          2, 1
      42: goto          2
      45: return

  java.lang.String toStringWithRcode(int);
    Code:
       0: new           #146                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #46                 // String ;; ->>HEADER<<-
      11: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_2
      16: ldc           #47                 // String opcode:
      18: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #48                 // Method org/xbill/DNS/Header.getOpcode:()I
      25: invokestatic  #49                 // Method org/xbill/DNS/Opcode.string:(I)Ljava/lang/String;
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: pop
      32: aload_2
      33: ldc           #50                 // String , status:
      35: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: iload_1
      39: invokestatic  #51                 // Method org/xbill/DNS/Rcode.string:(I)Ljava/lang/String;
      42: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_2
      47: ldc           #52                 // String , id:
      49: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #22                 // Method org/xbill/DNS/Header.getID:()I
      56: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: pop
      60: aload_2
      61: ldc           #53                 // String \n
      63: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: aload_2
      68: ldc           #54                 // String ;; flags:
      70: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_0
      75: aload_2
      76: invokespecial #43                 // Method org/xbill/DNS/Header.printFlags:(Ljava/lang/StringBuilder;)V
      79: aload_2
      80: ldc           #55                 // String ;
      82: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: iconst_0
      87: istore_3
      88: iload_3
      89: iconst_4
      90: if_icmpge     126
      93: aload_2
      94: iload_3
      95: invokestatic  #56                 // Method org/xbill/DNS/Section.string:(I)Ljava/lang/String;
      98: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: ldc           #57                 // String :
     103: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_0
     107: iload_3
     108: invokevirtual #58                 // Method org/xbill/DNS/Header.getCount:(I)I
     111: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     114: ldc           #45                 // String
     116: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: pop
     120: iinc          3, 1
     123: goto          88
     126: aload_2
     127: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #59                 // Method org/xbill/DNS/Header.getRcode:()I
       5: invokevirtual #60                 // Method org/xbill/DNS/Header.toStringWithRcode:(I)Ljava/lang/String;
       8: areturn

  public org.xbill.DNS.Header clone();
    Code:
       0: aload_0
       1: invokespecial #61                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #89                 // class org/xbill/DNS/Header
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #14                 // Field org/xbill/DNS/Header.id:I
      13: putfield      #14                 // Field org/xbill/DNS/Header.id:I
      16: aload_1
      17: aload_0
      18: getfield      #13                 // Field org/xbill/DNS/Header.flags:I
      21: putfield      #13                 // Field org/xbill/DNS/Header.flags:I
      24: aload_1
      25: aload_1
      26: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      29: arraylength
      30: newarray       int
      32: putfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      35: aload_0
      36: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      39: iconst_0
      40: aload_1
      41: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      44: iconst_0
      45: aload_0
      46: getfield      #12                 // Field org/xbill/DNS/Header.counts:[I
      49: arraylength
      50: invokestatic  #63                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      53: aload_1
      54: areturn
      55: astore_1
      56: aload_1
      57: athrow
    Exception table:
       from    to  target type
           0    54    55   Class java/lang/CloneNotSupportedException

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method org/xbill/DNS/Header.clone:()Lorg/xbill/DNS/Header;
       4: areturn

  static {};
    Code:
       0: new           #67                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #68                 // Method java/security/SecureRandom."<init>":()V
       7: putstatic     #15                 // Field org/xbill/DNS/Header.random:Ljava/util/Random;
      10: return
}
