Compiled from "ResolverConfig.java"
public final class org.xbill.DNS.ResolverConfig {
  private static final org.slf4j.Logger log;

  public static final java.lang.String CONFIGPROVIDER_SKIP_INIT;

  private final java.util.List<java.net.InetSocketAddress> servers;

  private final java.util.List<org.xbill.DNS.Name> searchlist;

  private int ndots;

  private static org.xbill.DNS.ResolverConfig currentConfig;

  private static java.util.List<org.xbill.DNS.config.ResolverConfigProvider> configProviders;

  private static void checkInitialized();
    Code:
       0: getstatic     #1                  // Field currentConfig:Lorg/xbill/DNS/ResolverConfig;
       3: ifnull        12
       6: getstatic     #2                  // Field configProviders:Ljava/util/List;
       9: ifnonnull     15
      12: invokestatic  #3                  // Method refresh:()V
      15: return

  public static synchronized org.xbill.DNS.ResolverConfig getCurrentConfig();
    Code:
       0: invokestatic  #4                  // Method checkInitialized:()V
       3: getstatic     #1                  // Field currentConfig:Lorg/xbill/DNS/ResolverConfig;
       6: areturn

  public static synchronized java.util.List<org.xbill.DNS.config.ResolverConfigProvider> getConfigProviders();
    Code:
       0: invokestatic  #4                  // Method checkInitialized:()V
       3: getstatic     #2                  // Field configProviders:Ljava/util/List;
       6: invokestatic  #5                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       9: areturn

  public static synchronized void setConfigProviders(java.util.List<org.xbill.DNS.config.ResolverConfigProvider>);
    Code:
       0: new           #6                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #7                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
       8: putstatic     #2                  // Field configProviders:Ljava/util/List;
      11: return

  public static void refresh();
    Code:
       0: new           #8                  // class org/xbill/DNS/ResolverConfig
       3: dup
       4: invokespecial #9                  // Method "<init>":()V
       7: astore_0
       8: ldc           #8                  // class org/xbill/DNS/ResolverConfig
      10: dup
      11: astore_1
      12: monitorenter
      13: aload_0
      14: putstatic     #1                  // Field currentConfig:Lorg/xbill/DNS/ResolverConfig;
      17: aload_1
      18: monitorexit
      19: goto          27
      22: astore_2
      23: aload_1
      24: monitorexit
      25: aload_2
      26: athrow
      27: return
    Exception table:
       from    to  target type
          13    19    22   any
          22    25    22   any

  public org.xbill.DNS.ResolverConfig();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/ArrayList
       8: dup
       9: iconst_2
      10: invokespecial #11                 // Method java/util/ArrayList."<init>":(I)V
      13: putfield      #12                 // Field servers:Ljava/util/List;
      16: aload_0
      17: new           #6                  // class java/util/ArrayList
      20: dup
      21: iconst_0
      22: invokespecial #11                 // Method java/util/ArrayList."<init>":(I)V
      25: putfield      #13                 // Field searchlist:Ljava/util/List;
      28: aload_0
      29: iconst_1
      30: putfield      #14                 // Field ndots:I
      33: ldc           #8                  // class org/xbill/DNS/ResolverConfig
      35: dup
      36: astore_1
      37: monitorenter
      38: getstatic     #2                  // Field configProviders:Ljava/util/List;
      41: ifnonnull     176
      44: new           #6                  // class java/util/ArrayList
      47: dup
      48: bipush        8
      50: invokespecial #11                 // Method java/util/ArrayList."<init>":(I)V
      53: putstatic     #2                  // Field configProviders:Ljava/util/List;
      56: ldc           #15                 // String dnsjava.configprovider.skipinit
      58: invokestatic  #16                 // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      61: ifne          176
      64: getstatic     #2                  // Field configProviders:Ljava/util/List;
      67: new           #17                 // class org/xbill/DNS/config/PropertyResolverConfigProvider
      70: dup
      71: invokespecial #18                 // Method org/xbill/DNS/config/PropertyResolverConfigProvider."<init>":()V
      74: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      79: pop
      80: getstatic     #2                  // Field configProviders:Ljava/util/List;
      83: new           #20                 // class org/xbill/DNS/config/ResolvConfResolverConfigProvider
      86: dup
      87: invokespecial #21                 // Method org/xbill/DNS/config/ResolvConfResolverConfigProvider."<init>":()V
      90: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: getstatic     #2                  // Field configProviders:Ljava/util/List;
      99: new           #22                 // class org/xbill/DNS/config/WindowsResolverConfigProvider
     102: dup
     103: invokespecial #23                 // Method org/xbill/DNS/config/WindowsResolverConfigProvider."<init>":()V
     106: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     111: pop
     112: getstatic     #2                  // Field configProviders:Ljava/util/List;
     115: new           #24                 // class org/xbill/DNS/config/AndroidResolverConfigProvider
     118: dup
     119: invokespecial #25                 // Method org/xbill/DNS/config/AndroidResolverConfigProvider."<init>":()V
     122: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     127: pop
     128: getstatic     #2                  // Field configProviders:Ljava/util/List;
     131: new           #26                 // class org/xbill/DNS/config/JndiContextResolverConfigProvider
     134: dup
     135: invokespecial #27                 // Method org/xbill/DNS/config/JndiContextResolverConfigProvider."<init>":()V
     138: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     143: pop
     144: getstatic     #2                  // Field configProviders:Ljava/util/List;
     147: new           #28                 // class org/xbill/DNS/config/SunJvmResolverConfigProvider
     150: dup
     151: invokespecial #29                 // Method org/xbill/DNS/config/SunJvmResolverConfigProvider."<init>":()V
     154: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     159: pop
     160: getstatic     #2                  // Field configProviders:Ljava/util/List;
     163: new           #30                 // class org/xbill/DNS/config/FallbackPropertyResolverConfigProvider
     166: dup
     167: invokespecial #31                 // Method org/xbill/DNS/config/FallbackPropertyResolverConfigProvider."<init>":()V
     170: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     175: pop
     176: aload_1
     177: monitorexit
     178: goto          186
     181: astore_2
     182: aload_1
     183: monitorexit
     184: aload_2
     185: athrow
     186: getstatic     #2                  // Field configProviders:Ljava/util/List;
     189: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     194: astore_1
     195: aload_1
     196: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     201: ifeq          349
     204: aload_1
     205: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     210: checkcast     #35                 // class org/xbill/DNS/config/ResolverConfigProvider
     213: astore_2
     214: aload_2
     215: invokeinterface #36,  1           // InterfaceMethod org/xbill/DNS/config/ResolverConfigProvider.isEnabled:()Z
     220: ifeq          346
     223: aload_2
     224: invokeinterface #37,  1           // InterfaceMethod org/xbill/DNS/config/ResolverConfigProvider.initialize:()V
     229: aload_0
     230: getfield      #12                 // Field servers:Ljava/util/List;
     233: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     238: ifeq          257
     241: aload_0
     242: getfield      #12                 // Field servers:Ljava/util/List;
     245: aload_2
     246: invokeinterface #39,  1           // InterfaceMethod org/xbill/DNS/config/ResolverConfigProvider.servers:()Ljava/util/List;
     251: invokeinterface #40,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     256: pop
     257: aload_0
     258: getfield      #13                 // Field searchlist:Ljava/util/List;
     261: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     266: ifeq          306
     269: aload_2
     270: invokeinterface #41,  1           // InterfaceMethod org/xbill/DNS/config/ResolverConfigProvider.searchPaths:()Ljava/util/List;
     275: astore_3
     276: aload_3
     277: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     282: ifne          306
     285: aload_0
     286: getfield      #13                 // Field searchlist:Ljava/util/List;
     289: aload_3
     290: invokeinterface #40,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
     295: pop
     296: aload_0
     297: aload_2
     298: invokeinterface #42,  1           // InterfaceMethod org/xbill/DNS/config/ResolverConfigProvider.ndots:()I
     303: putfield      #14                 // Field ndots:I
     306: aload_0
     307: getfield      #12                 // Field servers:Ljava/util/List;
     310: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     315: ifne          331
     318: aload_0
     319: getfield      #13                 // Field searchlist:Ljava/util/List;
     322: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     327: ifne          331
     330: return
     331: goto          346
     334: astore_3
     335: getstatic     #44                 // Field log:Lorg/slf4j/Logger;
     338: ldc           #45                 // String Failed to initialize provider
     340: aload_3
     341: invokeinterface #46,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
     346: goto          195
     349: aload_0
     350: getfield      #12                 // Field servers:Ljava/util/List;
     353: invokeinterface #38,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     358: ifeq          383
     361: aload_0
     362: getfield      #12                 // Field servers:Ljava/util/List;
     365: new           #47                 // class java/net/InetSocketAddress
     368: dup
     369: invokestatic  #48                 // Method java/net/InetAddress.getLoopbackAddress:()Ljava/net/InetAddress;
     372: bipush        53
     374: invokespecial #50                 // Method java/net/InetSocketAddress."<init>":(Ljava/net/InetAddress;I)V
     377: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     382: pop
     383: return
    Exception table:
       from    to  target type
          38   178   181   any
         181   184   181   any
         223   330   334   Class org/xbill/DNS/config/InitializationException

  public java.util.List<java.net.InetSocketAddress> servers();
    Code:
       0: aload_0
       1: getfield      #12                 // Field servers:Ljava/util/List;
       4: areturn

  public java.net.InetSocketAddress server();
    Code:
       0: aload_0
       1: getfield      #12                 // Field servers:Ljava/util/List;
       4: iconst_0
       5: invokeinterface #51,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #47                 // class java/net/InetSocketAddress
      13: areturn

  public java.util.List<org.xbill.DNS.Name> searchPath();
    Code:
       0: aload_0
       1: getfield      #13                 // Field searchlist:Ljava/util/List;
       4: areturn

  public int ndots();
    Code:
       0: aload_0
       1: getfield      #14                 // Field ndots:I
       4: ireturn

  static {};
    Code:
       0: ldc           #8                  // class org/xbill/DNS/ResolverConfig
       2: invokestatic  #52                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #44                 // Field log:Lorg/slf4j/Logger;
       8: return
}
