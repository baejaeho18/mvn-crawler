Compiled from "LockingVisitors.java"
public class org.apache.commons.lang3.concurrent.locks.LockingVisitors$LockVisitor<O, L> {
  private final L lock;

  private final O object;

  private final java.util.function.Supplier<java.util.concurrent.locks.Lock> readLockSupplier;

  private final java.util.function.Supplier<java.util.concurrent.locks.Lock> writeLockSupplier;

  protected org.apache.commons.lang3.concurrent.locks.LockingVisitors$LockVisitor(O, L, java.util.function.Supplier<java.util.concurrent.locks.Lock>, java.util.function.Supplier<java.util.concurrent.locks.Lock>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String object
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: putfield      #4                  // Field object:Ljava/lang/Object;
      14: aload_0
      15: aload_2
      16: ldc           #5                  // String lock
      18: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      21: putfield      #6                  // Field lock:Ljava/lang/Object;
      24: aload_0
      25: aload_3
      26: ldc           #7                  // String readLockSupplier
      28: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #8                  // class java/util/function/Supplier
      34: putfield      #9                  // Field readLockSupplier:Ljava/util/function/Supplier;
      37: aload_0
      38: aload         4
      40: ldc           #10                 // String writeLockSupplier
      42: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: checkcast     #8                  // class java/util/function/Supplier
      48: putfield      #11                 // Field writeLockSupplier:Ljava/util/function/Supplier;
      51: return

  public void acceptReadLocked(org.apache.commons.lang3.function.FailableConsumer<O, ?>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field readLockSupplier:Ljava/util/function/Supplier;
       5: aload_1
       6: invokevirtual #12                 // Method lockAcceptUnlock:(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/function/FailableConsumer;)V
       9: return

  public void acceptWriteLocked(org.apache.commons.lang3.function.FailableConsumer<O, ?>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field writeLockSupplier:Ljava/util/function/Supplier;
       5: aload_1
       6: invokevirtual #12                 // Method lockAcceptUnlock:(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/function/FailableConsumer;)V
       9: return

  public <T> T applyReadLocked(org.apache.commons.lang3.function.FailableFunction<O, T, ?>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #9                  // Field readLockSupplier:Ljava/util/function/Supplier;
       5: aload_1
       6: invokevirtual #13                 // Method lockApplyUnlock:(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/lang/Object;
       9: areturn

  public <T> T applyWriteLocked(org.apache.commons.lang3.function.FailableFunction<O, T, ?>);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #11                 // Field writeLockSupplier:Ljava/util/function/Supplier;
       5: aload_1
       6: invokevirtual #13                 // Method lockApplyUnlock:(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/lang/Object;
       9: areturn

  public L getLock();
    Code:
       0: aload_0
       1: getfield      #6                  // Field lock:Ljava/lang/Object;
       4: areturn

  public O getObject();
    Code:
       0: aload_0
       1: getfield      #4                  // Field object:Ljava/lang/Object;
       4: areturn

  protected void lockAcceptUnlock(java.util.function.Supplier<java.util.concurrent.locks.Lock>, org.apache.commons.lang3.function.FailableConsumer<O, ?>);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #15                 // class java/util/concurrent/locks/Lock
       9: astore_3
      10: aload_3
      11: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_2
      17: aload_0
      18: getfield      #4                  // Field object:Ljava/lang/Object;
      21: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V
      26: aload_3
      27: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      32: goto          54
      35: astore        4
      37: aload         4
      39: invokestatic  #20                 // Method org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      42: athrow
      43: astore        5
      45: aload_3
      46: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: aload         5
      53: athrow
      54: return
    Exception table:
       from    to  target type
          16    26    35   Class java/lang/Throwable
          16    26    43   any
          35    45    43   any

  protected <T> T lockApplyUnlock(java.util.function.Supplier<java.util.concurrent.locks.Lock>, org.apache.commons.lang3.function.FailableFunction<O, T, ?>);
    Code:
       0: aload_1
       1: invokeinterface #14,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       6: checkcast     #15                 // class java/util/concurrent/locks/Lock
       9: astore_3
      10: aload_3
      11: invokeinterface #16,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_2
      17: aload_0
      18: getfield      #4                  // Field object:Ljava/lang/Object;
      21: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: astore        4
      28: aload_3
      29: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      34: aload         4
      36: areturn
      37: astore        4
      39: aload         4
      41: invokestatic  #20                 // Method org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      44: athrow
      45: astore        5
      47: aload_3
      48: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload         5
      55: athrow
    Exception table:
       from    to  target type
          16    28    37   Class java/lang/Throwable
          16    28    45   any
          37    47    45   any
}
