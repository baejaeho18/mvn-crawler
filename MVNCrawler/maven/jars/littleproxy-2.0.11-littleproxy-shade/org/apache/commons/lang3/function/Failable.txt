Compiled from "Failable.java"
public class org.apache.commons.lang3.function.Failable {
  public static <T, U, E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableBiConsumer<T, U, E>, T, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #1,  0              // InvokeDynamic #0:run:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;
       8: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V
      11: return

  public static <T, E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableConsumer<T, E>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #3,  0              // InvokeDynamic #1:run:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;
       7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V
      10: return

  public static <E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableDoubleConsumer<E>, double);
    Code:
       0: aload_0
       1: dload_1
       2: invokedynamic #4,  0              // InvokeDynamic #2:run:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;
       7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V
      10: return

  public static <E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableIntConsumer<E>, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokedynamic #5,  0              // InvokeDynamic #3:run:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;
       7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V
      10: return

  public static <E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableLongConsumer<E>, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokedynamic #6,  0              // InvokeDynamic #4:run:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;
       7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V
      10: return

  public static <T, U, R, E extends java.lang.Throwable> R apply(org.apache.commons.lang3.function.FailableBiFunction<T, U, R, E>, T, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #7,  0              // InvokeDynamic #5:get:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;
       8: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;
      11: areturn

  public static <T, R, E extends java.lang.Throwable> R apply(org.apache.commons.lang3.function.FailableFunction<T, R, E>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #9,  0              // InvokeDynamic #6:get:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;
       7: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;
      10: areturn

  public static <E extends java.lang.Throwable> double applyAsDouble(org.apache.commons.lang3.function.FailableDoubleBinaryOperator<E>, double, double);
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokedynamic #10,  0             // InvokeDynamic #7:getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;
       8: invokestatic  #11                 // Method getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D
      11: dreturn

  public static <T, U> java.util.function.BiConsumer<T, U> asBiConsumer(org.apache.commons.lang3.function.FailableBiConsumer<T, U, ?>);
    Code:
       0: aload_0
       1: invokedynamic #12,  0             // InvokeDynamic #8:accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;
       6: areturn

  public static <T, U, R> java.util.function.BiFunction<T, U, R> asBiFunction(org.apache.commons.lang3.function.FailableBiFunction<T, U, R, ?>);
    Code:
       0: aload_0
       1: invokedynamic #13,  0             // InvokeDynamic #9:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;
       6: areturn

  public static <T, U> java.util.function.BiPredicate<T, U> asBiPredicate(org.apache.commons.lang3.function.FailableBiPredicate<T, U, ?>);
    Code:
       0: aload_0
       1: invokedynamic #14,  0             // InvokeDynamic #10:test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;
       6: areturn

  public static <V> java.util.concurrent.Callable<V> asCallable(org.apache.commons.lang3.function.FailableCallable<V, ?>);
    Code:
       0: aload_0
       1: invokedynamic #15,  0             // InvokeDynamic #11:call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;
       6: areturn

  public static <T> java.util.function.Consumer<T> asConsumer(org.apache.commons.lang3.function.FailableConsumer<T, ?>);
    Code:
       0: aload_0
       1: invokedynamic #16,  0             // InvokeDynamic #12:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;
       6: areturn

  public static <T, R> java.util.function.Function<T, R> asFunction(org.apache.commons.lang3.function.FailableFunction<T, R, ?>);
    Code:
       0: aload_0
       1: invokedynamic #17,  0             // InvokeDynamic #13:apply:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;
       6: areturn

  public static <T> java.util.function.Predicate<T> asPredicate(org.apache.commons.lang3.function.FailablePredicate<T, ?>);
    Code:
       0: aload_0
       1: invokedynamic #18,  0             // InvokeDynamic #14:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;
       6: areturn

  public static java.lang.Runnable asRunnable(org.apache.commons.lang3.function.FailableRunnable<?>);
    Code:
       0: aload_0
       1: invokedynamic #19,  0             // InvokeDynamic #15:run:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;
       6: areturn

  public static <T> java.util.function.Supplier<T> asSupplier(org.apache.commons.lang3.function.FailableSupplier<T, ?>);
    Code:
       0: aload_0
       1: invokedynamic #20,  0             // InvokeDynamic #16:get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;
       6: areturn

  public static <V, E extends java.lang.Throwable> V call(org.apache.commons.lang3.function.FailableCallable<V, E>);
    Code:
       0: aload_0
       1: dup
       2: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: pop
       6: invokedynamic #22,  0             // InvokeDynamic #17:get:(Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;
      11: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;
      14: areturn

  public static <T, E extends java.lang.Throwable> T get(org.apache.commons.lang3.function.FailableSupplier<T, E>);
    Code:
       0: aload_0
       1: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableSupplier.get:()Ljava/lang/Object;
       6: areturn
       7: astore_1
       8: aload_1
       9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public static <E extends java.lang.Throwable> boolean getAsBoolean(org.apache.commons.lang3.function.FailableBooleanSupplier<E>);
    Code:
       0: aload_0
       1: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableBooleanSupplier.getAsBoolean:()Z
       6: ireturn
       7: astore_1
       8: aload_1
       9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public static <E extends java.lang.Throwable> double getAsDouble(org.apache.commons.lang3.function.FailableDoubleSupplier<E>);
    Code:
       0: aload_0
       1: invokeinterface #27,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleSupplier.getAsDouble:()D
       6: dreturn
       7: astore_1
       8: aload_1
       9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public static <E extends java.lang.Throwable> int getAsInt(org.apache.commons.lang3.function.FailableIntSupplier<E>);
    Code:
       0: aload_0
       1: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableIntSupplier.getAsInt:()I
       6: ireturn
       7: astore_1
       8: aload_1
       9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public static <E extends java.lang.Throwable> long getAsLong(org.apache.commons.lang3.function.FailableLongSupplier<E>);
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableLongSupplier.getAsLong:()J
       6: lreturn
       7: astore_1
       8: aload_1
       9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public static <E extends java.lang.Throwable> short getAsShort(org.apache.commons.lang3.function.FailableShortSupplier<E>);
    Code:
       0: aload_0
       1: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableShortSupplier.getAsShort:()S
       6: ireturn
       7: astore_1
       8: aload_1
       9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      12: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  public static java.lang.RuntimeException rethrow(java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #31                 // String throwable
       3: invokestatic  #32                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: instanceof    #33                 // class java/lang/RuntimeException
      11: ifeq          19
      14: aload_0
      15: checkcast     #33                 // class java/lang/RuntimeException
      18: athrow
      19: aload_0
      20: instanceof    #34                 // class java/lang/Error
      23: ifeq          31
      26: aload_0
      27: checkcast     #34                 // class java/lang/Error
      30: athrow
      31: aload_0
      32: instanceof    #35                 // class java/io/IOException
      35: ifeq          50
      38: new           #36                 // class java/io/UncheckedIOException
      41: dup
      42: aload_0
      43: checkcast     #35                 // class java/io/IOException
      46: invokespecial #37                 // Method java/io/UncheckedIOException."<init>":(Ljava/io/IOException;)V
      49: athrow
      50: new           #38                 // class java/lang/reflect/UndeclaredThrowableException
      53: dup
      54: aload_0
      55: invokespecial #39                 // Method java/lang/reflect/UndeclaredThrowableException."<init>":(Ljava/lang/Throwable;)V
      58: athrow

  public static <E extends java.lang.Throwable> void run(org.apache.commons.lang3.function.FailableRunnable<E>);
    Code:
       0: aload_0
       1: invokeinterface #40,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V
       6: goto          15
       9: astore_1
      10: aload_1
      11: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      14: athrow
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  public static <E> org.apache.commons.lang3.stream.Streams$FailableStream<E> stream(java.util.Collection<E>);
    Code:
       0: new           #41                 // class org/apache/commons/lang3/stream/Streams$FailableStream
       3: dup
       4: aload_0
       5: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      10: invokespecial #43                 // Method org/apache/commons/lang3/stream/Streams$FailableStream."<init>":(Ljava/util/stream/Stream;)V
      13: areturn

  public static <T> org.apache.commons.lang3.stream.Streams$FailableStream<T> stream(java.util.stream.Stream<T>);
    Code:
       0: new           #41                 // class org/apache/commons/lang3/stream/Streams$FailableStream
       3: dup
       4: aload_0
       5: invokespecial #43                 // Method org/apache/commons/lang3/stream/Streams$FailableStream."<init>":(Ljava/util/stream/Stream;)V
       8: areturn

  public static <T, U, E extends java.lang.Throwable> boolean test(org.apache.commons.lang3.function.FailableBiPredicate<T, U, E>, T, U);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #44,  0             // InvokeDynamic #18:getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;
       8: invokestatic  #45                 // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z
      11: ireturn

  public static <T, E extends java.lang.Throwable> boolean test(org.apache.commons.lang3.function.FailablePredicate<T, E>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #46,  0             // InvokeDynamic #19:getAsBoolean:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;
       7: invokestatic  #45                 // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z
      10: ireturn

  public static void tryWithResources(org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.function.FailableConsumer<java.lang.Throwable, ? extends java.lang.Throwable>, org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>...);
    Code:
       0: aload_1
       1: ifnonnull     13
       4: invokedynamic #47,  0             // InvokeDynamic #20:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;
       9: astore_3
      10: goto          15
      13: aload_1
      14: astore_3
      15: aload_2
      16: ifnull        58
      19: aload_2
      20: astore        4
      22: aload         4
      24: arraylength
      25: istore        5
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload         5
      34: if_icmpge     58
      37: aload         4
      39: iload         6
      41: aaload
      42: astore        7
      44: aload         7
      46: ldc           #48                 // String runnable
      48: invokestatic  #32                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      51: pop
      52: iinc          6, 1
      55: goto          30
      58: aconst_null
      59: astore        4
      61: aload_0
      62: invokeinterface #40,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V
      67: goto          76
      70: astore        5
      72: aload         5
      74: astore        4
      76: aload_2
      77: ifnull        132
      80: aload_2
      81: astore        5
      83: aload         5
      85: arraylength
      86: istore        6
      88: iconst_0
      89: istore        7
      91: iload         7
      93: iload         6
      95: if_icmpge     132
      98: aload         5
     100: iload         7
     102: aaload
     103: astore        8
     105: aload         8
     107: invokeinterface #40,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V
     112: goto          126
     115: astore        9
     117: aload         4
     119: ifnonnull     126
     122: aload         9
     124: astore        4
     126: iinc          7, 1
     129: goto          91
     132: aload         4
     134: ifnull        156
     137: aload_3
     138: aload         4
     140: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V
     145: goto          156
     148: astore        5
     150: aload         5
     152: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     155: athrow
     156: return
    Exception table:
       from    to  target type
          61    67    70   Class java/lang/Throwable
         105   112   115   Class java/lang/Throwable
         137   145   148   Class java/lang/Throwable

  public static void tryWithResources(org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>...);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #50                 // Method tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V
       6: return

  private org.apache.commons.lang3.function.Failable();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method java/lang/Object."<init>":()V
       4: return

  private static boolean lambda$test$18(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #52,  2           // InterfaceMethod org/apache/commons/lang3/function/FailablePredicate.test:(Ljava/lang/Object;)Z
       7: ireturn

  private static boolean lambda$test$17(org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #53,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
       8: ireturn

  private static java.lang.Object lambda$asSupplier$16(org.apache.commons.lang3.function.FailableSupplier);
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;
       4: areturn

  private static void lambda$asRunnable$15(org.apache.commons.lang3.function.FailableRunnable);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V
       4: return

  private static boolean lambda$asPredicate$14(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #54                 // Method test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z
       5: ireturn

  private static java.lang.Object lambda$asFunction$13(org.apache.commons.lang3.function.FailableFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #55                 // Method apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private static void lambda$asConsumer$12(org.apache.commons.lang3.function.FailableConsumer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #56                 // Method accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V
       5: return

  private static java.lang.Object lambda$asCallable$11(org.apache.commons.lang3.function.FailableCallable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #57                 // Method call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;
       4: areturn

  private static boolean lambda$asBiPredicate$10(org.apache.commons.lang3.function.FailableBiPredicate, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #58                 // Method test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z
       6: ireturn

  private static java.lang.Object lambda$asBiFunction$9(org.apache.commons.lang3.function.FailableBiFunction, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #59                 // Method apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  private static void lambda$asBiConsumer$8(org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #60                 // Method accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V
       6: return

  private static double lambda$applyAsDouble$7(org.apache.commons.lang3.function.FailableDoubleBinaryOperator, double, double) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: dload_1
       2: dload_3
       3: invokeinterface #61,  5           // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleBinaryOperator.applyAsDouble:(DD)D
       8: dreturn

  private static java.lang.Object lambda$apply$6(org.apache.commons.lang3.function.FailableFunction, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #62,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  private static java.lang.Object lambda$apply$5(org.apache.commons.lang3.function.FailableBiFunction, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #63,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  private static void lambda$accept$4(org.apache.commons.lang3.function.FailableLongConsumer, long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: lload_1
       2: invokeinterface #64,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableLongConsumer.accept:(J)V
       7: return

  private static void lambda$accept$3(org.apache.commons.lang3.function.FailableIntConsumer, int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: iload_1
       2: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableIntConsumer.accept:(I)V
       7: return

  private static void lambda$accept$2(org.apache.commons.lang3.function.FailableDoubleConsumer, double) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: dload_1
       2: invokeinterface #66,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleConsumer.accept:(D)V
       7: return

  private static void lambda$accept$1(org.apache.commons.lang3.function.FailableConsumer, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V
       7: return

  private static void lambda$accept$0(org.apache.commons.lang3.function.FailableBiConsumer, java.lang.Object, java.lang.Object) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokeinterface #67,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: return
}
