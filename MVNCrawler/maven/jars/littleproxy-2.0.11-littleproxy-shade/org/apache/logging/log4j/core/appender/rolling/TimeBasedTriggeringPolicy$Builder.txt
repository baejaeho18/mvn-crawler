Compiled from "TimeBasedTriggeringPolicy.java"
public class org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy> {
  private int interval;

  private boolean modulate;

  private int maxRandomDelay;

  public org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field interval:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field modulate:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field maxRandomDelay:I
      19: return

  public org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy build();
    Code:
       0: getstatic     #5                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
       3: aload_0
       4: getfield      #4                  // Field maxRandomDelay:I
       7: i2l
       8: invokevirtual #6                  // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      11: lstore_1
      12: new           #7                  // class org/apache/logging/log4j/core/appender/rolling/TimeBasedTriggeringPolicy
      15: dup
      16: aload_0
      17: getfield      #2                  // Field interval:I
      20: aload_0
      21: getfield      #3                  // Field modulate:Z
      24: lload_1
      25: aconst_null
      26: invokespecial #8                  // Method org/apache/logging/log4j/core/appender/rolling/TimeBasedTriggeringPolicy."<init>":(IZJLorg/apache/logging/log4j/core/appender/rolling/TimeBasedTriggeringPolicy$1;)V
      29: areturn

  public int getInterval();
    Code:
       0: aload_0
       1: getfield      #2                  // Field interval:I
       4: ireturn

  public boolean isModulate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field modulate:Z
       4: ireturn

  public int getMaxRandomDelay();
    Code:
       0: aload_0
       1: getfield      #4                  // Field maxRandomDelay:I
       4: ireturn

  public org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder withInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field interval:I
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder withModulate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field modulate:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.TimeBasedTriggeringPolicy$Builder withMaxRandomDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field maxRandomDelay:I
       5: aload_0
       6: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method build:()Lorg/apache/logging/log4j/core/appender/rolling/TimeBasedTriggeringPolicy;
       4: areturn
}
