Compiled from "AsyncLoggerConfig.java"
public class org.apache.logging.log4j.core.async.AsyncLoggerConfig extends org.apache.logging.log4j.core.config.LoggerConfig {
  private static final java.lang.ThreadLocal<java.lang.Boolean> ASYNC_LOGGER_ENTERED;

  private final org.apache.logging.log4j.core.async.AsyncLoggerConfigDelegate delegate;

  public static <B extends org.apache.logging.log4j.core.async.AsyncLoggerConfig$Builder<B>> B newAsyncBuilder();
    Code:
       0: new           #2                  // class org/apache/logging/log4j/core/async/AsyncLoggerConfig$Builder
       3: dup
       4: invokespecial #3                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfig$Builder."<init>":()V
       7: invokevirtual #4                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfig$Builder.asBuilder:()Lorg/apache/logging/log4j/core/config/LoggerConfig$Builder;
      10: checkcast     #2                  // class org/apache/logging/log4j/core/async/AsyncLoggerConfig$Builder
      13: areturn

  protected org.apache.logging.log4j.core.async.AsyncLoggerConfig(java.lang.String, java.util.List<org.apache.logging.log4j.core.config.AppenderRef>, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.Level, boolean, org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: iload         5
       8: aload         6
      10: aload         7
      12: iload         8
      14: invokespecial #5                  // Method org/apache/logging/log4j/core/config/LoggerConfig."<init>":(Ljava/lang/String;Ljava/util/List;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/Level;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/config/Configuration;Z)V
      17: aload_0
      18: aload         7
      20: invokeinterface #6,  1            // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getAsyncLoggerConfigDelegate:()Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
      25: putfield      #7                  // Field delegate:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
      28: aload_0
      29: getfield      #7                  // Field delegate:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
      32: aload_0
      33: invokevirtual #8                  // Method getLogEventFactory:()Lorg/apache/logging/log4j/core/impl/LogEventFactory;
      36: invokeinterface #9,  2            // InterfaceMethod org/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate.setLogEventFactory:(Lorg/apache/logging/log4j/core/impl/LogEventFactory;)V
      41: return

  org.apache.logging.log4j.core.async.AsyncLoggerConfigDelegate getAsyncLoggerConfigDelegate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field delegate:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
       4: areturn

  protected void log(org.apache.logging.log4j.core.LogEvent, org.apache.logging.log4j.core.config.LoggerConfig$LoggerConfigPredicate);
    Code:
       0: aload_2
       1: getstatic     #10                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate.ALL:Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;
       4: if_acmpne     75
       7: getstatic     #11                 // Field ASYNC_LOGGER_ENTERED:Ljava/lang/ThreadLocal;
      10: invokevirtual #12                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      13: getstatic     #13                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      16: if_acmpne     75
      19: aload_0
      20: invokevirtual #14                 // Method hasAppenders:()Z
      23: ifeq          75
      26: getstatic     #11                 // Field ASYNC_LOGGER_ENTERED:Ljava/lang/ThreadLocal;
      29: getstatic     #15                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      32: invokevirtual #16                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      35: aload_0
      36: aload_1
      37: getstatic     #17                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate.SYNCHRONOUS_ONLY:Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;
      40: invokespecial #18                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
      43: aload_0
      44: aload_1
      45: invokespecial #19                 // Method logToAsyncDelegate:(Lorg/apache/logging/log4j/core/LogEvent;)V
      48: getstatic     #11                 // Field ASYNC_LOGGER_ENTERED:Ljava/lang/ThreadLocal;
      51: getstatic     #13                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      54: invokevirtual #16                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      57: goto          72
      60: astore_3
      61: getstatic     #11                 // Field ASYNC_LOGGER_ENTERED:Ljava/lang/ThreadLocal;
      64: getstatic     #13                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      67: invokevirtual #16                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      70: aload_3
      71: athrow
      72: goto          81
      75: aload_0
      76: aload_1
      77: aload_2
      78: invokespecial #18                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
      81: return
    Exception table:
       from    to  target type
          35    48    60   any

  protected void callAppenders(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method org/apache/logging/log4j/core/config/LoggerConfig.callAppenders:(Lorg/apache/logging/log4j/core/LogEvent;)V
       5: return

  private void logToAsyncDelegate(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method isFiltered:(Lorg/apache/logging/log4j/core/LogEvent;)Z
       5: ifne          32
       8: aload_0
       9: aload_1
      10: invokespecial #22                 // Method populateLazilyInitializedFields:(Lorg/apache/logging/log4j/core/LogEvent;)V
      13: aload_0
      14: getfield      #7                  // Field delegate:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
      17: aload_1
      18: aload_0
      19: invokeinterface #23,  3           // InterfaceMethod org/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate.tryEnqueue:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/async/AsyncLoggerConfig;)Z
      24: ifne          32
      27: aload_0
      28: aload_1
      29: invokespecial #24                 // Method handleQueueFull:(Lorg/apache/logging/log4j/core/LogEvent;)V
      32: return

  private void handleQueueFull(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: invokestatic  #25                 // Method org/apache/logging/log4j/spi/AbstractLogger.getRecursionDepth:()I
       3: iconst_1
       4: if_icmple     18
       7: invokestatic  #26                 // Method org/apache/logging/log4j/core/async/AsyncQueueFullMessageUtil.logWarningToStatusLogger:()V
      10: aload_0
      11: aload_1
      12: invokevirtual #27                 // Method logToAsyncLoggerConfigsOnCurrentThread:(Lorg/apache/logging/log4j/core/LogEvent;)V
      15: goto          40
      18: aload_0
      19: getfield      #7                  // Field delegate:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
      22: aload_1
      23: invokeinterface #28,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
      28: invokeinterface #29,  2           // InterfaceMethod org/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate.getEventRoute:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/async/EventRoute;
      33: astore_2
      34: aload_2
      35: aload_0
      36: aload_1
      37: invokevirtual #30                 // Method org/apache/logging/log4j/core/async/EventRoute.logMessage:(Lorg/apache/logging/log4j/core/async/AsyncLoggerConfig;Lorg/apache/logging/log4j/core/LogEvent;)V
      40: return

  private void populateLazilyInitializedFields(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: invokeinterface #31,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
       6: pop
       7: aload_1
       8: invokeinterface #32,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThreadName:()Ljava/lang/String;
      13: pop
      14: return

  void logInBackgroundThread(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field delegate:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
       4: aload_1
       5: aload_0
       6: invokeinterface #33,  3           // InterfaceMethod org/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate.enqueueEvent:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/async/AsyncLoggerConfig;)V
      11: return

  void logToAsyncLoggerConfigsOnCurrentThread(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #34                 // Field org/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate.ASYNCHRONOUS_ONLY:Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;
       5: invokevirtual #35                 // Method log:(Lorg/apache/logging/log4j/core/LogEvent;Lorg/apache/logging/log4j/core/config/LoggerConfig$LoggerConfigPredicate;)V
       8: return

  private java.lang.String displayName();
    Code:
       0: ldc           #37                 // String
       2: aload_0
       3: invokevirtual #38                 // Method getName:()Ljava/lang/String;
       6: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          17
      12: ldc           #41                 // String root
      14: goto          21
      17: aload_0
      18: invokevirtual #38                 // Method getName:()Ljava/lang/String;
      21: areturn

  public void start();
    Code:
       0: getstatic     #42                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #43                 // String AsyncLoggerConfig[{}] starting...
       5: aload_0
       6: invokespecial #44                 // Method displayName:()Ljava/lang/String;
       9: invokeinterface #45,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      14: aload_0
      15: invokespecial #46                 // Method org/apache/logging/log4j/core/config/LoggerConfig.start:()V
      18: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method setStopping:()V
       4: aload_0
       5: lload_1
       6: aload_3
       7: iconst_0
       8: invokespecial #48                 // Method org/apache/logging/log4j/core/config/LoggerConfig.stop:(JLjava/util/concurrent/TimeUnit;Z)Z
      11: pop
      12: getstatic     #42                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      15: ldc           #49                 // String AsyncLoggerConfig[{}] stopping...
      17: aload_0
      18: invokespecial #44                 // Method displayName:()Ljava/lang/String;
      21: invokeinterface #45,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      26: aload_0
      27: invokevirtual #50                 // Method setStopped:()V
      30: iconst_1
      31: ireturn

  public org.apache.logging.log4j.core.jmx.RingBufferAdmin createRingBufferAdmin(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field delegate:Lorg/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate;
       4: aload_1
       5: aload_0
       6: invokevirtual #38                 // Method getName:()Ljava/lang/String;
       9: invokeinterface #51,  3           // InterfaceMethod org/apache/logging/log4j/core/async/AsyncLoggerConfigDelegate.createRingBufferAdmin:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/logging/log4j/core/jmx/RingBufferAdmin;
      14: areturn

  public static org.apache.logging.log4j.core.config.LoggerConfig createLogger(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.AppenderRef[], org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_2
       1: ifnonnull     16
       4: getstatic     #42                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #52                 // String Loggers cannot be configured without a name
       9: invokeinterface #53,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aconst_null
      15: areturn
      16: aload         4
      18: invokestatic  #54                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      21: astore        8
      23: aload_1
      24: getstatic     #55                 // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
      27: invokestatic  #56                 // Method org/apache/logging/log4j/Level.toLevel:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/Level;
      30: astore        9
      32: goto          53
      35: astore        10
      37: getstatic     #42                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      40: ldc           #58                 // String Invalid Log level specified: {}. Defaulting to Error
      42: aload_1
      43: invokeinterface #59,  3           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;)V
      48: getstatic     #55                 // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
      51: astore        9
      53: aload_2
      54: ldc           #41                 // String root
      56: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      59: ifeq          67
      62: ldc           #37                 // String
      64: goto          68
      67: aload_2
      68: astore        10
      70: aload_0
      71: iconst_1
      72: invokestatic  #61                 // Method org/apache/logging/log4j/core/util/Booleans.parseBoolean:(Ljava/lang/String;Z)Z
      75: istore        11
      77: new           #62                 // class org/apache/logging/log4j/core/async/AsyncLoggerConfig
      80: dup
      81: aload         10
      83: aload         8
      85: aload         7
      87: aload         9
      89: iload         11
      91: aload         5
      93: aload         6
      95: aload_3
      96: invokestatic  #63                 // Method includeLocation:(Ljava/lang/String;)Z
      99: invokespecial #64                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/Level;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/config/Configuration;Z)V
     102: areturn
    Exception table:
       from    to  target type
          23    32    35   Class java/lang/Exception

  public static org.apache.logging.log4j.core.config.LoggerConfig createLogger(boolean, org.apache.logging.log4j.Level, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.AppenderRef[], org.apache.logging.log4j.core.config.Property[], org.apache.logging.log4j.core.config.Configuration, org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_2
       1: ldc           #41                 // String root
       3: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          14
       9: ldc           #37                 // String
      11: goto          15
      14: aload_2
      15: astore        8
      17: new           #62                 // class org/apache/logging/log4j/core/async/AsyncLoggerConfig
      20: dup
      21: aload         8
      23: aload         4
      25: invokestatic  #54                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      28: aload         7
      30: aload_1
      31: iload_0
      32: aload         5
      34: aload         6
      36: aload_3
      37: invokestatic  #63                 // Method includeLocation:(Ljava/lang/String;)Z
      40: invokespecial #64                 // Method "<init>":(Ljava/lang/String;Ljava/util/List;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/Level;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/config/Configuration;Z)V
      43: areturn

  protected static boolean includeLocation(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
       4: ireturn

  static org.apache.logging.log4j.core.config.LoggerConfig$LevelAndRefs access$000(org.apache.logging.log4j.Level, org.apache.logging.log4j.core.config.AppenderRef[], java.lang.String, org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #1                  // Method getLevelAndRefs:(Lorg/apache/logging/log4j/Level;[Lorg/apache/logging/log4j/core/config/AppenderRef;Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)Lorg/apache/logging/log4j/core/config/LoggerConfig$LevelAndRefs;
       7: areturn

  static {};
    Code:
       0: new           #66                 // class org/apache/logging/log4j/core/async/AsyncLoggerConfig$1
       3: dup
       4: invokespecial #67                 // Method org/apache/logging/log4j/core/async/AsyncLoggerConfig$1."<init>":()V
       7: putstatic     #11                 // Field ASYNC_LOGGER_ENTERED:Ljava/lang/ThreadLocal;
      10: return
}
