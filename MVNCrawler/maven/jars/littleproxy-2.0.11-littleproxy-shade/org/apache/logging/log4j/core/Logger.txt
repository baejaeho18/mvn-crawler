Compiled from "Logger.java"
public class org.apache.logging.log4j.core.Logger extends org.apache.logging.log4j.spi.AbstractLogger implements org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig> {
  private static final long serialVersionUID;

  protected volatile org.apache.logging.log4j.core.Logger$PrivateConfig privateConfig;

  private final org.apache.logging.log4j.core.LoggerContext context;

  protected org.apache.logging.log4j.core.Logger(org.apache.logging.log4j.core.LoggerContext, java.lang.String, org.apache.logging.log4j.message.MessageFactory);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #1                  // Method org/apache/logging/log4j/spi/AbstractLogger."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field context:Lorg/apache/logging/log4j/core/LoggerContext;
      11: aload_0
      12: new           #3                  // class org/apache/logging/log4j/core/Logger$PrivateConfig
      15: dup
      16: aload_0
      17: aload_1
      18: invokevirtual #4                  // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      21: aload_0
      22: invokespecial #5                  // Method org/apache/logging/log4j/core/Logger$PrivateConfig."<init>":(Lorg/apache/logging/log4j/core/Logger;Lorg/apache/logging/log4j/core/config/Configuration;Lorg/apache/logging/log4j/core/Logger;)V
      25: putfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      28: return

  protected java.lang.Object writeReplace() throws java.io.ObjectStreamException;
    Code:
       0: new           #7                  // class org/apache/logging/log4j/core/Logger$LoggerProxy
       3: dup
       4: aload_0
       5: invokevirtual #8                  // Method getName:()Ljava/lang/String;
       8: aload_0
       9: invokevirtual #9                  // Method getMessageFactory:()Lorg/apache/logging/log4j/message/MessageFactory;
      12: invokespecial #10                 // Method org/apache/logging/log4j/core/Logger$LoggerProxy."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)V
      15: areturn

  public org.apache.logging.log4j.core.Logger getParent();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: invokevirtual #12                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getName:()Ljava/lang/String;
      10: aload_0
      11: invokevirtual #8                  // Method getName:()Ljava/lang/String;
      14: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          33
      20: aload_0
      21: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      24: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      27: invokevirtual #14                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getParent:()Lorg/apache/logging/log4j/core/config/LoggerConfig;
      30: goto          40
      33: aload_0
      34: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      37: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      40: astore_1
      41: aload_1
      42: ifnonnull     47
      45: aconst_null
      46: areturn
      47: aload_1
      48: invokevirtual #12                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getName:()Ljava/lang/String;
      51: astore_2
      52: aload_0
      53: invokevirtual #9                  // Method getMessageFactory:()Lorg/apache/logging/log4j/message/MessageFactory;
      56: astore_3
      57: aload_0
      58: getfield      #2                  // Field context:Lorg/apache/logging/log4j/core/LoggerContext;
      61: aload_2
      62: aload_3
      63: invokevirtual #15                 // Method org/apache/logging/log4j/core/LoggerContext.hasLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Z
      66: ifeq          79
      69: aload_0
      70: getfield      #2                  // Field context:Lorg/apache/logging/log4j/core/LoggerContext;
      73: aload_2
      74: aload_3
      75: invokevirtual #16                 // Method org/apache/logging/log4j/core/LoggerContext.getLogger:(Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)Lorg/apache/logging/log4j/core/Logger;
      78: areturn
      79: new           #17                 // class org/apache/logging/log4j/core/Logger
      82: dup
      83: aload_0
      84: getfield      #2                  // Field context:Lorg/apache/logging/log4j/core/LoggerContext;
      87: aload_2
      88: aload_3
      89: invokespecial #18                 // Method "<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)V
      92: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field context:Lorg/apache/logging/log4j/core/LoggerContext;
       4: areturn

  public synchronized void setLevel(org.apache.logging.log4j.Level);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #19                 // Method getLevel:()Lorg/apache/logging/log4j/Level;
       5: if_acmpne     9
       8: return
       9: aload_1
      10: ifnull        18
      13: aload_1
      14: astore_2
      15: goto          42
      18: aload_0
      19: invokevirtual #20                 // Method getParent:()Lorg/apache/logging/log4j/core/Logger;
      22: astore_3
      23: aload_3
      24: ifnull        34
      27: aload_3
      28: invokevirtual #19                 // Method getLevel:()Lorg/apache/logging/log4j/Level;
      31: goto          41
      34: aload_0
      35: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      38: invokestatic  #21                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.access$000:(Lorg/apache/logging/log4j/core/Logger$PrivateConfig;)Lorg/apache/logging/log4j/Level;
      41: astore_2
      42: aload_0
      43: new           #3                  // class org/apache/logging/log4j/core/Logger$PrivateConfig
      46: dup
      47: aload_0
      48: aload_0
      49: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      52: aload_2
      53: invokespecial #22                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig."<init>":(Lorg/apache/logging/log4j/core/Logger;Lorg/apache/logging/log4j/core/Logger$PrivateConfig;Lorg/apache/logging/log4j/Level;)V
      56: putfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      59: return

  public org.apache.logging.log4j.core.config.LoggerConfig get();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: areturn

  protected boolean requiresLocation();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: invokestatic  #23                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.access$100:(Lorg/apache/logging/log4j/core/Logger$PrivateConfig;)Z
       7: ireturn

  public void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload         4
       2: ifnonnull     17
       5: new           #24                 // class org/apache/logging/log4j/message/SimpleMessage
       8: dup
       9: ldc           #26                 // String
      11: invokespecial #27                 // Method org/apache/logging/log4j/message/SimpleMessage."<init>":(Ljava/lang/String;)V
      14: goto          19
      17: aload         4
      19: astore        6
      21: aload_0
      22: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      25: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      28: invokevirtual #28                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      31: astore        7
      33: aload         7
      35: aload_0
      36: aload_0
      37: invokevirtual #8                  // Method getName:()Ljava/lang/String;
      40: aload_1
      41: aload_3
      42: aload_2
      43: aload         6
      45: aload         5
      47: invokeinterface #29,  8           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.log:(Lorg/apache/logging/log4j/util/Supplier;Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      52: return

  protected void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: invokevirtual #28                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      10: astore        7
      12: aload         7
      14: instanceof    #30                 // class org/apache/logging/log4j/core/config/LocationAwareReliabilityStrategy
      17: ifeq          47
      20: aload         7
      22: checkcast     #30                 // class org/apache/logging/log4j/core/config/LocationAwareReliabilityStrategy
      25: aload_0
      26: aload_0
      27: invokevirtual #8                  // Method getName:()Ljava/lang/String;
      30: aload_3
      31: aload         4
      33: aload_2
      34: aload_1
      35: aload         5
      37: aload         6
      39: invokeinterface #31,  9           // InterfaceMethod org/apache/logging/log4j/core/config/LocationAwareReliabilityStrategy.log:(Lorg/apache/logging/log4j/util/Supplier;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      44: goto          66
      47: aload         7
      49: aload_0
      50: aload_0
      51: invokevirtual #8                  // Method getName:()Ljava/lang/String;
      54: aload_3
      55: aload_2
      56: aload_1
      57: aload         5
      59: aload         6
      61: invokeinterface #29,  8           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.log:(Lorg/apache/logging/log4j/util/Supplier;Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      66: return

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #32                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Throwable;)Z
      12: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokevirtual #33                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;)Z
      10: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object...);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #34                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;[Ljava/lang/Object;)Z
      12: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #35                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;)Z
      12: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #36                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Z
      14: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: invokevirtual #37                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      16: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: invokevirtual #38                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: invokevirtual #39                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      20: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: aload         9
      19: invokevirtual #40                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      22: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: aload         9
      19: aload         10
      21: invokevirtual #41                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      24: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: aload         9
      19: aload         10
      21: aload         11
      23: invokevirtual #42                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: aload         9
      19: aload         10
      21: aload         11
      23: aload         12
      25: invokevirtual #43                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      28: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: aload         6
      13: aload         7
      15: aload         8
      17: aload         9
      19: aload         10
      21: aload         11
      23: aload         12
      25: aload         13
      27: invokevirtual #44                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #45                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/CharSequence;Ljava/lang/Throwable;)Z
      12: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #46                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Ljava/lang/Object;Ljava/lang/Throwable;)Z
      12: ireturn

  public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokevirtual #47                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.filter:(Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)Z
      12: ireturn

  public void addAppender(org.apache.logging.log4j.core.Appender);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #48                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.config:Lorg/apache/logging/log4j/core/config/Configuration;
       7: aload_0
       8: aload_1
       9: invokeinterface #49,  3           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addLoggerAppender:(Lorg/apache/logging/log4j/core/Logger;Lorg/apache/logging/log4j/core/Appender;)V
      14: return

  public void removeAppender(org.apache.logging.log4j.core.Appender);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: aload_1
       8: invokeinterface #50,  1           // InterfaceMethod org/apache/logging/log4j/core/Appender.getName:()Ljava/lang/String;
      13: invokevirtual #51                 // Method org/apache/logging/log4j/core/config/LoggerConfig.removeAppender:(Ljava/lang/String;)V
      16: return

  public java.util.Map<java.lang.String, org.apache.logging.log4j.core.Appender> getAppenders();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: invokevirtual #52                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getAppenders:()Ljava/util/Map;
      10: areturn

  public java.util.Iterator<org.apache.logging.log4j.core.Filter> getFilters();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: invokevirtual #53                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getFilter:()Lorg/apache/logging/log4j/core/Filter;
      10: astore_1
      11: aload_1
      12: ifnonnull     26
      15: new           #54                 // class java/util/ArrayList
      18: dup
      19: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
      22: invokevirtual #56                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      25: areturn
      26: aload_1
      27: instanceof    #57                 // class org/apache/logging/log4j/core/filter/CompositeFilter
      30: ifeq          41
      33: aload_1
      34: checkcast     #57                 // class org/apache/logging/log4j/core/filter/CompositeFilter
      37: invokevirtual #58                 // Method org/apache/logging/log4j/core/filter/CompositeFilter.iterator:()Ljava/util/Iterator;
      40: areturn
      41: new           #54                 // class java/util/ArrayList
      44: dup
      45: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
      48: astore_2
      49: aload_2
      50: aload_1
      51: invokeinterface #59,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload_2
      58: invokeinterface #60,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      63: areturn

  public org.apache.logging.log4j.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: invokestatic  #21                 // Method org/apache/logging/log4j/core/Logger$PrivateConfig.access$000:(Lorg/apache/logging/log4j/core/Logger$PrivateConfig;)Lorg/apache/logging/log4j/Level;
       7: areturn

  public int filterCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: invokevirtual #53                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getFilter:()Lorg/apache/logging/log4j/core/Filter;
      10: astore_1
      11: aload_1
      12: ifnonnull     17
      15: iconst_0
      16: ireturn
      17: aload_1
      18: instanceof    #57                 // class org/apache/logging/log4j/core/filter/CompositeFilter
      21: ifeq          32
      24: aload_1
      25: checkcast     #57                 // class org/apache/logging/log4j/core/filter/CompositeFilter
      28: invokevirtual #61                 // Method org/apache/logging/log4j/core/filter/CompositeFilter.size:()I
      31: ireturn
      32: iconst_1
      33: ireturn

  public void addFilter(org.apache.logging.log4j.core.Filter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #48                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.config:Lorg/apache/logging/log4j/core/config/Configuration;
       7: aload_0
       8: aload_1
       9: invokeinterface #62,  3           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.addLoggerFilter:(Lorg/apache/logging/log4j/core/Logger;Lorg/apache/logging/log4j/core/Filter;)V
      14: return

  public boolean isAdditive();
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #11                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: invokevirtual #63                 // Method org/apache/logging/log4j/core/config/LoggerConfig.isAdditive:()Z
      10: ireturn

  public void setAdditive(boolean);
    Code:
       0: aload_0
       1: getfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #48                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.config:Lorg/apache/logging/log4j/core/config/Configuration;
       7: aload_0
       8: iload_1
       9: invokeinterface #64,  3           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.setLoggerAdditive:(Lorg/apache/logging/log4j/core/Logger;Z)V
      14: return

  protected void updateConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: new           #3                  // class org/apache/logging/log4j/core/Logger$PrivateConfig
       4: dup
       5: aload_0
       6: aload_1
       7: aload_0
       8: invokespecial #5                  // Method org/apache/logging/log4j/core/Logger$PrivateConfig."<init>":(Lorg/apache/logging/log4j/core/Logger;Lorg/apache/logging/log4j/core/config/Configuration;Lorg/apache/logging/log4j/core/Logger;)V
      11: putfield      #6                  // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      14: return

  public java.lang.String toString();
    Code:
       0: new           #65                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String
       9: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #8                  // Method getName:()Ljava/lang/String;
      16: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: bipush        58
      21: invokevirtual #68                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #19                 // Method getLevel:()Lorg/apache/logging/log4j/Level;
      28: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: astore_1
      35: aload_0
      36: getfield      #2                  // Field context:Lorg/apache/logging/log4j/core/LoggerContext;
      39: ifnonnull     44
      42: aload_1
      43: areturn
      44: aload_0
      45: getfield      #2                  // Field context:Lorg/apache/logging/log4j/core/LoggerContext;
      48: invokevirtual #71                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
      51: astore_2
      52: aload_2
      53: ifnonnull     60
      56: aload_1
      57: goto          83
      60: new           #65                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #66                 // Method java/lang/StringBuilder."<init>":()V
      67: aload_1
      68: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #72                 // String  in
      73: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_2
      77: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #73                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #17                 // class org/apache/logging/log4j/core/Logger
      28: astore_2
      29: aload_0
      30: invokevirtual #8                  // Method getName:()Ljava/lang/String;
      33: aload_2
      34: invokevirtual #8                  // Method getName:()Ljava/lang/String;
      37: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      40: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getName:()Ljava/lang/String;
       4: invokevirtual #74                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #75                 // Method get:()Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: areturn
}
