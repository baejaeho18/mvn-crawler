Compiled from "LoggerNameLevelRewritePolicy.java"
public class org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy implements org.apache.logging.log4j.core.appender.rewrite.RewritePolicy {
  private final java.lang.String loggerName;

  private final java.util.Map<org.apache.logging.log4j.Level, org.apache.logging.log4j.Level> map;

  public static org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy createPolicy(java.lang.String, org.apache.logging.log4j.core.util.KeyValuePair[]);
    Code:
       0: new           #1                  // class java/util/HashMap
       3: dup
       4: aload_1
       5: arraylength
       6: invokespecial #2                  // Method java/util/HashMap."<init>":(I)V
       9: astore_2
      10: aload_1
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     61
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_2
      33: aload         6
      35: invokevirtual #3                  // Method org/apache/logging/log4j/core/util/KeyValuePair.getKey:()Ljava/lang/String;
      38: invokestatic  #4                  // Method getLevel:(Ljava/lang/String;)Lorg/apache/logging/log4j/Level;
      41: aload         6
      43: invokevirtual #5                  // Method org/apache/logging/log4j/core/util/KeyValuePair.getValue:()Ljava/lang/String;
      46: invokestatic  #4                  // Method getLevel:(Ljava/lang/String;)Lorg/apache/logging/log4j/Level;
      49: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: iinc          5, 1
      58: goto          19
      61: new           #7                  // class org/apache/logging/log4j/core/appender/rewrite/LoggerNameLevelRewritePolicy
      64: dup
      65: aload_0
      66: aload_2
      67: invokespecial #8                  // Method "<init>":(Ljava/lang/String;Ljava/util/Map;)V
      70: areturn

  private static org.apache.logging.log4j.Level getLevel(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #9                  // Field java/util/Locale.ROOT:Ljava/util/Locale;
       4: invokevirtual #10                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: invokestatic  #11                 // Method org/apache/logging/log4j/Level.getLevel:(Ljava/lang/String;)Lorg/apache/logging/log4j/Level;
      10: areturn

  private org.apache.logging.log4j.core.appender.rewrite.LoggerNameLevelRewritePolicy(java.lang.String, java.util.Map<org.apache.logging.log4j.Level, org.apache.logging.log4j.Level>);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #13                 // Field loggerName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #14                 // Field map:Ljava/util/Map;
      14: return

  public org.apache.logging.log4j.core.LogEvent rewrite(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: invokeinterface #15,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
       6: ifnull        25
       9: aload_1
      10: invokeinterface #15,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
      15: aload_0
      16: getfield      #13                 // Field loggerName:Ljava/lang/String;
      19: invokevirtual #16                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      22: ifne          27
      25: aload_1
      26: areturn
      27: aload_1
      28: invokeinterface #17,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
      33: astore_2
      34: aload_0
      35: getfield      #14                 // Field map:Ljava/util/Map;
      38: aload_2
      39: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #19                 // class org/apache/logging/log4j/Level
      47: astore_3
      48: aload_3
      49: ifnull        57
      52: aload_3
      53: aload_2
      54: if_acmpne     59
      57: aload_1
      58: areturn
      59: new           #20                 // class org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder
      62: dup
      63: aload_1
      64: invokespecial #21                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder."<init>":(Lorg/apache/logging/log4j/core/LogEvent;)V
      67: aload_3
      68: invokevirtual #22                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setLevel:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      71: invokevirtual #23                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.build:()Lorg/apache/logging/log4j/core/impl/Log4jLogEvent;
      74: astore        4
      76: aload         4
      78: areturn
}
