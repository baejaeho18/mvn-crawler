Compiled from "AsyncLoggerDisruptor.java"
class org.apache.logging.log4j.core.async.AsyncLoggerDisruptor extends org.apache.logging.log4j.core.AbstractLifeCycle {
  private static final int SLEEP_MILLIS_BETWEEN_DRAIN_ATTEMPTS;

  private static final int MAX_DRAIN_ATTEMPTS_BEFORE_SHUTDOWN;

  private final java.lang.Object queueFullEnqueueLock;

  private volatile com.lmax.disruptor.dsl.Disruptor<org.apache.logging.log4j.core.async.RingBufferLogEvent> disruptor;

  private java.lang.String contextName;

  private final java.util.function.Supplier<org.apache.logging.log4j.core.async.AsyncWaitStrategyFactory> waitStrategyFactorySupplier;

  private boolean useThreadLocalTranslator;

  private long backgroundThreadId;

  private org.apache.logging.log4j.core.async.AsyncQueueFullPolicy asyncQueueFullPolicy;

  private int ringBufferSize;

  private com.lmax.disruptor.WaitStrategy waitStrategy;

  org.apache.logging.log4j.core.async.AsyncLoggerDisruptor(java.lang.String, java.util.function.Supplier<org.apache.logging.log4j.core.async.AsyncWaitStrategyFactory>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/logging/log4j/core/AbstractLifeCycle."<init>":()V
       4: aload_0
       5: new           #3                  // class java/lang/Object
       8: dup
       9: invokespecial #4                  // Method java/lang/Object."<init>":()V
      12: putfield      #5                  // Field queueFullEnqueueLock:Ljava/lang/Object;
      15: aload_0
      16: iconst_1
      17: putfield      #6                  // Field useThreadLocalTranslator:Z
      20: aload_0
      21: aload_1
      22: putfield      #7                  // Field contextName:Ljava/lang/String;
      25: aload_0
      26: aload_2
      27: ldc           #8                  // String waitStrategyFactorySupplier
      29: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #10                 // class java/util/function/Supplier
      35: putfield      #11                 // Field waitStrategyFactorySupplier:Ljava/util/function/Supplier;
      38: return

  com.lmax.disruptor.WaitStrategy getWaitStrategy();
    Code:
       0: aload_0
       1: getfield      #12                 // Field waitStrategy:Lcom/lmax/disruptor/WaitStrategy;
       4: areturn

  public java.lang.String getContextName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field contextName:Ljava/lang/String;
       4: areturn

  public void setContextName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field contextName:Ljava/lang/String;
       5: return

  com.lmax.disruptor.dsl.Disruptor<org.apache.logging.log4j.core.async.RingBufferLogEvent> getDisruptor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
       4: areturn

  public synchronized void start();
    Code:
       0: aload_0
       1: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
       4: ifnull        22
       7: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: ldc           #15                 // String [{}] AsyncLoggerDisruptor not starting new disruptor for this context, using existing object.
      12: aload_0
      13: getfield      #7                  // Field contextName:Ljava/lang/String;
      16: invokeinterface #16,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      21: return
      22: aload_0
      23: invokevirtual #17                 // Method isStarting:()Z
      26: ifeq          44
      29: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      32: ldc           #18                 // String [{}] AsyncLoggerDisruptor is already starting.
      34: aload_0
      35: getfield      #7                  // Field contextName:Ljava/lang/String;
      38: invokeinterface #16,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      43: return
      44: aload_0
      45: invokevirtual #19                 // Method setStarting:()V
      48: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      51: ldc           #20                 // String [{}] AsyncLoggerDisruptor creating new disruptor for this context.
      53: aload_0
      54: getfield      #7                  // Field contextName:Ljava/lang/String;
      57: invokeinterface #16,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      62: aload_0
      63: ldc           #21                 // String AsyncLogger.RingBufferSize
      65: invokestatic  #22                 // Method org/apache/logging/log4j/core/async/DisruptorUtil.calculateRingBufferSize:(Ljava/lang/String;)I
      68: putfield      #23                 // Field ringBufferSize:I
      71: aload_0
      72: getfield      #11                 // Field waitStrategyFactorySupplier:Ljava/util/function/Supplier;
      75: invokeinterface #24,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      80: checkcast     #25                 // class org/apache/logging/log4j/core/async/AsyncWaitStrategyFactory
      83: astore_1
      84: aload_0
      85: ldc           #26                 // String AsyncLogger.WaitStrategy
      87: aload_1
      88: invokestatic  #27                 // Method org/apache/logging/log4j/core/async/DisruptorUtil.createWaitStrategy:(Ljava/lang/String;Lorg/apache/logging/log4j/core/async/AsyncWaitStrategyFactory;)Lcom/lmax/disruptor/WaitStrategy;
      91: putfield      #12                 // Field waitStrategy:Lcom/lmax/disruptor/WaitStrategy;
      94: new           #28                 // class org/apache/logging/log4j/core/async/AsyncLoggerDisruptor$1
      97: dup
      98: aload_0
      99: new           #29                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #31                 // String AsyncLogger[
     108: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: getfield      #7                  // Field contextName:Ljava/lang/String;
     115: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #33                 // String ]
     120: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: iconst_1
     127: iconst_5
     128: invokespecial #36                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor$1."<init>":(Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;Ljava/lang/String;ZI)V
     131: astore_2
     132: aload_0
     133: invokestatic  #37                 // Method org/apache/logging/log4j/core/async/AsyncQueueFullPolicyFactory.create:()Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     136: putfield      #38                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     139: aload_0
     140: new           #39                 // class com/lmax/disruptor/dsl/Disruptor
     143: dup
     144: getstatic     #40                 // Field org/apache/logging/log4j/core/async/RingBufferLogEvent.FACTORY:Lorg/apache/logging/log4j/core/async/RingBufferLogEvent$Factory;
     147: aload_0
     148: getfield      #23                 // Field ringBufferSize:I
     151: aload_2
     152: getstatic     #41                 // Field com/lmax/disruptor/dsl/ProducerType.MULTI:Lcom/lmax/disruptor/dsl/ProducerType;
     155: aload_0
     156: getfield      #12                 // Field waitStrategy:Lcom/lmax/disruptor/WaitStrategy;
     159: invokespecial #42                 // Method com/lmax/disruptor/dsl/Disruptor."<init>":(Lcom/lmax/disruptor/EventFactory;ILjava/util/concurrent/ThreadFactory;Lcom/lmax/disruptor/dsl/ProducerType;Lcom/lmax/disruptor/WaitStrategy;)V
     162: putfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
     165: invokestatic  #43                 // Method org/apache/logging/log4j/core/async/DisruptorUtil.getAsyncLoggerExceptionHandler:()Lcom/lmax/disruptor/ExceptionHandler;
     168: astore_3
     169: aload_0
     170: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
     173: aload_3
     174: invokevirtual #44                 // Method com/lmax/disruptor/dsl/Disruptor.setDefaultExceptionHandler:(Lcom/lmax/disruptor/ExceptionHandler;)V
     177: iconst_1
     178: anewarray     #45                 // class org/apache/logging/log4j/core/async/RingBufferLogEventHandler
     181: dup
     182: iconst_0
     183: new           #45                 // class org/apache/logging/log4j/core/async/RingBufferLogEventHandler
     186: dup
     187: invokespecial #46                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventHandler."<init>":()V
     190: aastore
     191: astore        4
     193: aload_0
     194: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
     197: aload         4
     199: invokevirtual #47                 // Method com/lmax/disruptor/dsl/Disruptor.handleEventsWith:([Lcom/lmax/disruptor/EventHandler;)Lcom/lmax/disruptor/dsl/EventHandlerGroup;
     202: pop
     203: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     206: ldc           #48                 // String [{}] Starting AsyncLogger disruptor for this context with ringbufferSize={}, waitStrategy={}, exceptionHandler={}...
     208: aload_0
     209: getfield      #7                  // Field contextName:Ljava/lang/String;
     212: aload_0
     213: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
     216: invokevirtual #49                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
     219: invokevirtual #50                 // Method com/lmax/disruptor/RingBuffer.getBufferSize:()I
     222: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     225: aload_0
     226: getfield      #12                 // Field waitStrategy:Lcom/lmax/disruptor/WaitStrategy;
     229: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     232: invokevirtual #53                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     235: aload_3
     236: invokeinterface #54,  6           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     241: aload_0
     242: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
     245: invokevirtual #55                 // Method com/lmax/disruptor/dsl/Disruptor.start:()Lcom/lmax/disruptor/RingBuffer;
     248: pop
     249: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     252: ldc           #56                 // String [{}] AsyncLoggers use a {} translator
     254: aload_0
     255: getfield      #7                  // Field contextName:Ljava/lang/String;
     258: aload_0
     259: getfield      #6                  // Field useThreadLocalTranslator:Z
     262: ifeq          270
     265: ldc           #57                 // String threadlocal
     267: goto          272
     270: ldc           #58                 // String vararg
     272: invokeinterface #59,  4           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     277: aload_0
     278: invokespecial #60                 // Method org/apache/logging/log4j/core/AbstractLifeCycle.start:()V
     281: return

  public boolean stop(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getDisruptor:()Lcom/lmax/disruptor/dsl/Disruptor;
       4: astore        4
       6: aload         4
       8: ifnonnull     27
      11: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      14: ldc           #62                 // String [{}] AsyncLoggerDisruptor: disruptor for this context already shut down.
      16: aload_0
      17: getfield      #7                  // Field contextName:Ljava/lang/String;
      20: invokeinterface #16,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      25: iconst_1
      26: ireturn
      27: aload_0
      28: invokevirtual #63                 // Method setStopping:()V
      31: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      34: ldc           #64                 // String [{}] AsyncLoggerDisruptor: shutting down disruptor for this context.
      36: aload_0
      37: getfield      #7                  // Field contextName:Ljava/lang/String;
      40: invokeinterface #65,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      45: aload_0
      46: aconst_null
      47: putfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
      50: iconst_0
      51: istore        5
      53: aload         4
      55: invokestatic  #66                 // Method hasBacklog:(Lcom/lmax/disruptor/dsl/Disruptor;)Z
      58: ifeq          86
      61: iload         5
      63: sipush        200
      66: if_icmpge     86
      69: ldc2_w        #68                 // long 50l
      72: invokestatic  #70                 // Method java/lang/Thread.sleep:(J)V
      75: goto          80
      78: astore        6
      80: iinc          5, 1
      83: goto          53
      86: aload         4
      88: lload_1
      89: aload_3
      90: invokevirtual #72                 // Method com/lmax/disruptor/dsl/Disruptor.shutdown:(JLjava/util/concurrent/TimeUnit;)V
      93: goto          122
      96: astore        5
      98: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     101: ldc           #74                 // String [{}] AsyncLoggerDisruptor: shutdown timed out after {} {}
     103: aload_0
     104: getfield      #7                  // Field contextName:Ljava/lang/String;
     107: lload_1
     108: invokestatic  #75                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     111: aload_3
     112: invokeinterface #76,  5           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     117: aload         4
     119: invokevirtual #77                 // Method com/lmax/disruptor/dsl/Disruptor.halt:()V
     122: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     125: ldc           #78                 // String [{}] AsyncLoggerDisruptor: disruptor has been shut down.
     127: aload_0
     128: getfield      #7                  // Field contextName:Ljava/lang/String;
     131: invokeinterface #16,  3           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
     136: aload_0
     137: getfield      #38                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     140: invokestatic  #79                 // Method org/apache/logging/log4j/core/async/DiscardingAsyncQueueFullPolicy.getDiscardCount:(Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;)J
     143: lconst_0
     144: lcmp
     145: ifle          172
     148: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     151: ldc           #80                 // String AsyncLoggerDisruptor: {} discarded {} events.
     153: aload_0
     154: getfield      #38                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     157: aload_0
     158: getfield      #38                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
     161: invokestatic  #79                 // Method org/apache/logging/log4j/core/async/DiscardingAsyncQueueFullPolicy.getDiscardCount:(Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;)J
     164: invokestatic  #75                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     167: invokeinterface #59,  4           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     172: aload_0
     173: invokevirtual #81                 // Method setStopped:()V
     176: iconst_1
     177: ireturn
    Exception table:
       from    to  target type
          69    75    78   Class java/lang/InterruptedException
          86    93    96   Class com/lmax/disruptor/TimeoutException

  private static boolean hasBacklog(com.lmax.disruptor.dsl.Disruptor<?>);
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
       4: astore_1
       5: aload_1
       6: aload_1
       7: invokevirtual #50                 // Method com/lmax/disruptor/RingBuffer.getBufferSize:()I
      10: invokevirtual #82                 // Method com/lmax/disruptor/RingBuffer.hasAvailableCapacity:(I)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public org.apache.logging.log4j.core.jmx.RingBufferAdmin createRingBufferAdmin(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
      15: invokevirtual #49                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
      18: astore_2
      19: aload_2
      20: aload_1
      21: invokestatic  #83                 // Method org/apache/logging/log4j/core/jmx/RingBufferAdmin.forAsyncLogger:(Lcom/lmax/disruptor/RingBuffer;Ljava/lang/String;)Lorg/apache/logging/log4j/core/jmx/RingBufferAdmin;
      24: areturn

  org.apache.logging.log4j.core.async.EventRoute getEventRoute(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: invokespecial #84                 // Method remainingDisruptorCapacity:()I
       4: istore_2
       5: iload_2
       6: ifge          13
       9: getstatic     #85                 // Field org/apache/logging/log4j/core/async/EventRoute.DISCARD:Lorg/apache/logging/log4j/core/async/EventRoute;
      12: areturn
      13: aload_0
      14: getfield      #38                 // Field asyncQueueFullPolicy:Lorg/apache/logging/log4j/core/async/AsyncQueueFullPolicy;
      17: aload_0
      18: getfield      #1                  // Field backgroundThreadId:J
      21: aload_1
      22: invokeinterface #86,  4           // InterfaceMethod org/apache/logging/log4j/core/async/AsyncQueueFullPolicy.getRoute:(JLorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/async/EventRoute;
      27: areturn

  private int remainingDisruptorCapacity();
    Code:
       0: aload_0
       1: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
       4: astore_1
       5: aload_0
       6: aload_1
       7: invokespecial #87                 // Method hasLog4jBeenShutDown:(Lcom/lmax/disruptor/dsl/Disruptor;)Z
      10: ifeq          15
      13: iconst_m1
      14: ireturn
      15: aload_1
      16: invokevirtual #49                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
      19: invokevirtual #88                 // Method com/lmax/disruptor/RingBuffer.remainingCapacity:()J
      22: l2i
      23: ireturn

  private boolean hasLog4jBeenShutDown(com.lmax.disruptor.dsl.Disruptor<org.apache.logging.log4j.core.async.RingBufferLogEvent>);
    Code:
       0: aload_1
       1: ifnonnull     16
       4: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #89                 // String Ignoring log event after log4j was shut down
       9: invokeinterface #90,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
      14: iconst_1
      15: ireturn
      16: iconst_0
      17: ireturn

  boolean tryPublish(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator);
    Code:
       0: aload_0
       1: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
       4: invokevirtual #49                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
       7: aload_1
       8: invokevirtual #91                 // Method com/lmax/disruptor/RingBuffer.tryPublishEvent:(Lcom/lmax/disruptor/EventTranslator;)Z
      11: ireturn
      12: astore_2
      13: aload_0
      14: aload_1
      15: invokespecial #93                 // Method logWarningOnNpeFromDisruptorPublish:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      18: iconst_0
      19: ireturn
    Exception table:
       from    to  target type
           0    11    12   Class java/lang/NullPointerException

  void enqueueLogMessageWhenQueueFull(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator);
    Code:
       0: aload_0
       1: invokespecial #94                 // Method synchronizeEnqueueWhenQueueFull:()Z
       4: ifeq          35
       7: aload_0
       8: getfield      #5                  // Field queueFullEnqueueLock:Ljava/lang/Object;
      11: dup
      12: astore_2
      13: monitorenter
      14: aload_0
      15: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
      18: aload_1
      19: invokevirtual #95                 // Method com/lmax/disruptor/dsl/Disruptor.publishEvent:(Lcom/lmax/disruptor/EventTranslator;)V
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: goto          43
      35: aload_0
      36: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
      39: aload_1
      40: invokevirtual #95                 // Method com/lmax/disruptor/dsl/Disruptor.publishEvent:(Lcom/lmax/disruptor/EventTranslator;)V
      43: goto          52
      46: astore_2
      47: aload_0
      48: aload_1
      49: invokespecial #93                 // Method logWarningOnNpeFromDisruptorPublish:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      52: return
    Exception table:
       from    to  target type
          14    24    27   any
          27    30    27   any
           0    43    46   Class java/lang/NullPointerException

  void enqueueLogMessageWhenQueueFull(com.lmax.disruptor.EventTranslatorVararg<org.apache.logging.log4j.core.async.RingBufferLogEvent>, org.apache.logging.log4j.core.async.AsyncLogger, java.lang.StackTraceElement, java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #94                 // Method synchronizeEnqueueWhenQueueFull:()Z
       4: ifeq          82
       7: aload_0
       8: getfield      #5                  // Field queueFullEnqueueLock:Ljava/lang/Object;
      11: dup
      12: astore        9
      14: monitorenter
      15: aload_0
      16: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
      19: invokevirtual #49                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
      22: aload_1
      23: bipush        7
      25: anewarray     #3                  // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_2
      31: aastore
      32: dup
      33: iconst_1
      34: aload_3
      35: aastore
      36: dup
      37: iconst_2
      38: aload         4
      40: aastore
      41: dup
      42: iconst_3
      43: aload         5
      45: aastore
      46: dup
      47: iconst_4
      48: aload         6
      50: aastore
      51: dup
      52: iconst_5
      53: aload         7
      55: aastore
      56: dup
      57: bipush        6
      59: aload         8
      61: aastore
      62: invokevirtual #96                 // Method com/lmax/disruptor/RingBuffer.publishEvent:(Lcom/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)V
      65: aload         9
      67: monitorexit
      68: goto          79
      71: astore        10
      73: aload         9
      75: monitorexit
      76: aload         10
      78: athrow
      79: goto          132
      82: aload_0
      83: getfield      #13                 // Field disruptor:Lcom/lmax/disruptor/dsl/Disruptor;
      86: invokevirtual #49                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
      89: aload_1
      90: bipush        7
      92: anewarray     #3                  // class java/lang/Object
      95: dup
      96: iconst_0
      97: aload_2
      98: aastore
      99: dup
     100: iconst_1
     101: aload_3
     102: aastore
     103: dup
     104: iconst_2
     105: aload         4
     107: aastore
     108: dup
     109: iconst_3
     110: aload         5
     112: aastore
     113: dup
     114: iconst_4
     115: aload         6
     117: aastore
     118: dup
     119: iconst_5
     120: aload         7
     122: aastore
     123: dup
     124: bipush        6
     126: aload         8
     128: aastore
     129: invokevirtual #96                 // Method com/lmax/disruptor/RingBuffer.publishEvent:(Lcom/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)V
     132: goto          149
     135: astore        9
     137: aload_0
     138: aload         5
     140: aload         4
     142: aload         7
     144: aload         8
     146: invokespecial #97                 // Method logWarningOnNpeFromDisruptorPublish:(Lorg/apache/logging/log4j/Level;Ljava/lang/String;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
     149: return
    Exception table:
       from    to  target type
          15    68    71   any
          71    76    71   any
           0   132   135   Class java/lang/NullPointerException

  private boolean synchronizeEnqueueWhenQueueFull();
    Code:
       0: getstatic     #98                 // Field org/apache/logging/log4j/core/async/DisruptorUtil.ASYNC_LOGGER_SYNCHRONIZE_ENQUEUE_WHEN_QUEUE_FULL:Z
       3: ifeq          33
       6: aload_0
       7: getfield      #1                  // Field backgroundThreadId:J
      10: invokestatic  #99                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      13: invokevirtual #100                // Method java/lang/Thread.getId:()J
      16: lcmp
      17: ifeq          33
      20: invokestatic  #99                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      23: instanceof    #101                // class org/apache/logging/log4j/core/util/Log4jThread
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  private void logWarningOnNpeFromDisruptorPublish(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #102                // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.level:Lorg/apache/logging/log4j/Level;
       5: aload_1
       6: getfield      #103                // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.loggerName:Ljava/lang/String;
       9: aload_1
      10: getfield      #104                // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.message:Lorg/apache/logging/log4j/message/Message;
      13: aload_1
      14: getfield      #105                // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.thrown:Ljava/lang/Throwable;
      17: invokespecial #97                 // Method logWarningOnNpeFromDisruptorPublish:(Lorg/apache/logging/log4j/Level;Ljava/lang/String;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      20: return

  private void logWarningOnNpeFromDisruptorPublish(org.apache.logging.log4j.Level, java.lang.String, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       3: ldc           #106                // String [{}] Ignoring log event after log4j was shut down: {} [{}] {}{}
       5: aload_0
       6: getfield      #7                  // Field contextName:Ljava/lang/String;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokeinterface #107,  1          // InterfaceMethod org/apache/logging/log4j/message/Message.getFormattedMessage:()Ljava/lang/String;
      17: aload         4
      19: ifnonnull     27
      22: ldc           #108                // String
      24: goto          32
      27: aload         4
      29: invokestatic  #109                // Method org/apache/logging/log4j/core/util/Throwables.toStringList:(Ljava/lang/Throwable;)Ljava/util/List;
      32: invokeinterface #110,  7          // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      37: return

  public boolean isUseThreadLocals();
    Code:
       0: aload_0
       1: getfield      #6                  // Field useThreadLocalTranslator:Z
       4: ireturn

  public void setUseThreadLocals(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field useThreadLocalTranslator:Z
       5: getstatic     #14                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       8: ldc           #111                // String [{}] AsyncLoggers have been modified to use a {} translator
      10: aload_0
      11: getfield      #7                  // Field contextName:Ljava/lang/String;
      14: aload_0
      15: getfield      #6                  // Field useThreadLocalTranslator:Z
      18: ifeq          26
      21: ldc           #57                 // String threadlocal
      23: goto          28
      26: ldc           #58                 // String vararg
      28: invokeinterface #59,  4           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      33: return

  static long access$002(org.apache.logging.log4j.core.async.AsyncLoggerDisruptor, long);
    Code:
       0: aload_0
       1: lload_1
       2: dup2_x1
       3: putfield      #1                  // Field backgroundThreadId:J
       6: lreturn
}
