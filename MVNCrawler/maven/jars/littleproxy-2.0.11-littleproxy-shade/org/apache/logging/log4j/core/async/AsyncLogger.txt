Compiled from "AsyncLogger.java"
public class org.apache.logging.log4j.core.async.AsyncLogger extends org.apache.logging.log4j.core.Logger implements com.lmax.disruptor.EventTranslatorVararg<org.apache.logging.log4j.core.async.RingBufferLogEvent> {
  private static final org.apache.logging.log4j.status.StatusLogger LOGGER;

  private static final org.apache.logging.log4j.core.util.Clock CLOCK;

  private static final org.apache.logging.log4j.core.ContextDataInjector CONTEXT_DATA_INJECTOR;

  private static final org.apache.logging.log4j.core.async.ThreadNameCachingStrategy THREAD_NAME_CACHING_STRATEGY;

  private final java.lang.ThreadLocal<org.apache.logging.log4j.core.async.RingBufferLogEventTranslator> threadLocalTranslator;

  private final org.apache.logging.log4j.core.async.AsyncLoggerDisruptor loggerDisruptor;

  private volatile boolean includeLocation;

  private volatile org.apache.logging.log4j.core.util.NanoClock nanoClock;

  private final org.apache.logging.log4j.core.async.AsyncLogger$TranslatorType threadLocalTranslatorType;

  private final org.apache.logging.log4j.core.async.AsyncLogger$TranslatorType varargTranslatorType;

  public org.apache.logging.log4j.core.async.AsyncLogger(org.apache.logging.log4j.core.LoggerContext, java.lang.String, org.apache.logging.log4j.message.MessageFactory, org.apache.logging.log4j.core.async.AsyncLoggerDisruptor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #5                  // Method org/apache/logging/log4j/core/Logger."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/lang/String;Lorg/apache/logging/log4j/message/MessageFactory;)V
       7: aload_0
       8: new           #6                  // class java/lang/ThreadLocal
      11: dup
      12: invokespecial #7                  // Method java/lang/ThreadLocal."<init>":()V
      15: putfield      #8                  // Field threadLocalTranslator:Ljava/lang/ThreadLocal;
      18: aload_0
      19: new           #9                  // class org/apache/logging/log4j/core/async/AsyncLogger$1
      22: dup
      23: aload_0
      24: invokespecial #10                 // Method org/apache/logging/log4j/core/async/AsyncLogger$1."<init>":(Lorg/apache/logging/log4j/core/async/AsyncLogger;)V
      27: putfield      #11                 // Field threadLocalTranslatorType:Lorg/apache/logging/log4j/core/async/AsyncLogger$TranslatorType;
      30: aload_0
      31: new           #12                 // class org/apache/logging/log4j/core/async/AsyncLogger$2
      34: dup
      35: aload_0
      36: invokespecial #13                 // Method org/apache/logging/log4j/core/async/AsyncLogger$2."<init>":(Lorg/apache/logging/log4j/core/async/AsyncLogger;)V
      39: putfield      #14                 // Field varargTranslatorType:Lorg/apache/logging/log4j/core/async/AsyncLogger$TranslatorType;
      42: aload_0
      43: aload         4
      45: putfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      48: aload_0
      49: aload_0
      50: getfield      #16                 // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      53: getfield      #17                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      56: invokevirtual #18                 // Method org/apache/logging/log4j/core/config/LoggerConfig.isIncludeLocation:()Z
      59: putfield      #19                 // Field includeLocation:Z
      62: aload_0
      63: aload_1
      64: invokevirtual #20                 // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
      67: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getNanoClock:()Lorg/apache/logging/log4j/core/util/NanoClock;
      72: putfield      #22                 // Field nanoClock:Lorg/apache/logging/log4j/core/util/NanoClock;
      75: return

  protected void updateConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getNanoClock:()Lorg/apache/logging/log4j/core/util/NanoClock;
       7: putfield      #22                 // Field nanoClock:Lorg/apache/logging/log4j/core/util/NanoClock;
      10: aload_0
      11: aload_1
      12: aload_0
      13: getfield      #23                 // Field name:Ljava/lang/String;
      16: invokeinterface #24,  2           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getLoggerConfig:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
      21: invokevirtual #18                 // Method org/apache/logging/log4j/core/config/LoggerConfig.isIncludeLocation:()Z
      24: putfield      #19                 // Field includeLocation:Z
      27: aload_0
      28: aload_1
      29: invokespecial #25                 // Method org/apache/logging/log4j/core/Logger.updateConfiguration:(Lorg/apache/logging/log4j/core/config/Configuration;)V
      32: return

  org.apache.logging.log4j.core.util.NanoClock getNanoClock();
    Code:
       0: aload_0
       1: getfield      #22                 // Field nanoClock:Lorg/apache/logging/log4j/core/util/NanoClock;
       4: areturn

  private org.apache.logging.log4j.core.async.RingBufferLogEventTranslator getCachedTranslator();
    Code:
       0: aload_0
       1: getfield      #8                  // Field threadLocalTranslator:Ljava/lang/ThreadLocal;
       4: invokevirtual #26                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #27                 // class org/apache/logging/log4j/core/async/RingBufferLogEventTranslator
      10: astore_1
      11: aload_1
      12: ifnonnull     31
      15: new           #27                 // class org/apache/logging/log4j/core/async/RingBufferLogEventTranslator
      18: dup
      19: invokespecial #28                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventTranslator."<init>":()V
      22: astore_1
      23: aload_0
      24: getfield      #8                  // Field threadLocalTranslator:Ljava/lang/ThreadLocal;
      27: aload_1
      28: invokevirtual #29                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      31: aload_1
      32: areturn

  public void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method getTranslatorType:()Lorg/apache/logging/log4j/core/async/AsyncLogger$TranslatorType;
       4: aload_1
       5: aload_2
       6: aload_3
       7: aload         4
       9: aload         5
      11: invokevirtual #31                 // Method org/apache/logging/log4j/core/async/AsyncLogger$TranslatorType.log:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      14: return

  public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method getTranslatorType:()Lorg/apache/logging/log4j/core/async/AsyncLogger$TranslatorType;
       4: aload_3
       5: aload         4
       7: aload_1
       8: aload_2
       9: aload         5
      11: aload         6
      13: invokevirtual #32                 // Method org/apache/logging/log4j/core/async/AsyncLogger$TranslatorType.log:(Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      16: return

  private org.apache.logging.log4j.core.async.AsyncLogger$TranslatorType getTranslatorType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: invokevirtual #33                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.isUseThreadLocals:()Z
       7: ifeq          17
      10: aload_0
      11: getfield      #11                 // Field threadLocalTranslatorType:Lorg/apache/logging/log4j/core/async/AsyncLogger$TranslatorType;
      14: goto          21
      17: aload_0
      18: getfield      #14                 // Field varargTranslatorType:Lorg/apache/logging/log4j/core/async/AsyncLogger$TranslatorType;
      21: areturn

  private boolean isReused(org.apache.logging.log4j.message.Message);
    Code:
       0: aload_1
       1: instanceof    #34                 // class org/apache/logging/log4j/message/ReusableMessage
       4: ireturn

  private void logWithThreadLocalTranslator(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method getCachedTranslator:()Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;
       4: astore        6
       6: aload_0
       7: aload         6
       9: aload_1
      10: aload_2
      11: aload_3
      12: aload         4
      14: aload         5
      16: invokespecial #36                 // Method initTranslator:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      19: aload_0
      20: aload         6
      22: invokespecial #37                 // Method initTranslatorThreadValues:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      25: aload_0
      26: aload         6
      28: invokespecial #38                 // Method publish:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      31: return

  private void logWithThreadLocalTranslator(java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokespecial #35                 // Method getCachedTranslator:()Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;
       4: astore        7
       6: aload_0
       7: aload         7
       9: aload_1
      10: aload_2
      11: aload_3
      12: aload         4
      14: aload         5
      16: aload         6
      18: invokespecial #39                 // Method initTranslator:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      21: aload_0
      22: aload         7
      24: invokespecial #37                 // Method initTranslatorThreadValues:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      27: aload_0
      28: aload         7
      30: invokespecial #38                 // Method publish:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      33: return

  private void publish(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator);
    Code:
       0: aload_0
       1: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: aload_1
       5: invokevirtual #40                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.tryPublish:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)Z
       8: ifne          16
      11: aload_0
      12: aload_1
      13: invokespecial #41                 // Method handleRingBufferFull:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      16: return

  private void handleRingBufferFull(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator);
    Code:
       0: invokestatic  #42                 // Method org/apache/logging/log4j/spi/AbstractLogger.getRecursionDepth:()I
       3: iconst_1
       4: if_icmple     39
       7: invokestatic  #43                 // Method org/apache/logging/log4j/core/async/AsyncQueueFullMessageUtil.logWarningToStatusLogger:()V
      10: aload_0
      11: aload_1
      12: getfield      #44                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.fqcn:Ljava/lang/String;
      15: aload_1
      16: getfield      #45                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.level:Lorg/apache/logging/log4j/Level;
      19: aload_1
      20: getfield      #46                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.marker:Lorg/apache/logging/log4j/Marker;
      23: aload_1
      24: getfield      #47                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.message:Lorg/apache/logging/log4j/message/Message;
      27: aload_1
      28: getfield      #48                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.thrown:Ljava/lang/Throwable;
      31: invokevirtual #49                 // Method logMessageInCurrentThread:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      34: aload_1
      35: invokevirtual #50                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.clear:()V
      38: return
      39: aload_0
      40: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      43: aload_1
      44: getfield      #45                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.level:Lorg/apache/logging/log4j/Level;
      47: invokevirtual #51                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.getEventRoute:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/async/EventRoute;
      50: astore_2
      51: getstatic     #52                 // Field org/apache/logging/log4j/core/async/AsyncLogger$3.$SwitchMap$org$apache$logging$log4j$core$async$EventRoute:[I
      54: aload_2
      55: invokevirtual #53                 // Method org/apache/logging/log4j/core/async/EventRoute.ordinal:()I
      58: iaload
      59: tableswitch   { // 1 to 3
                     1: 84
                     2: 95
                     3: 126
               default: 133
          }
      84: aload_0
      85: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      88: aload_1
      89: invokevirtual #54                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.enqueueLogMessageWhenQueueFull:(Lorg/apache/logging/log4j/core/async/RingBufferLogEventTranslator;)V
      92: goto          160
      95: aload_0
      96: aload_1
      97: getfield      #44                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.fqcn:Ljava/lang/String;
     100: aload_1
     101: getfield      #45                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.level:Lorg/apache/logging/log4j/Level;
     104: aload_1
     105: getfield      #46                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.marker:Lorg/apache/logging/log4j/Marker;
     108: aload_1
     109: getfield      #47                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.message:Lorg/apache/logging/log4j/message/Message;
     112: aload_1
     113: getfield      #48                 // Field org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.thrown:Ljava/lang/Throwable;
     116: invokevirtual #49                 // Method logMessageInCurrentThread:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
     119: aload_1
     120: invokevirtual #50                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.clear:()V
     123: goto          160
     126: aload_1
     127: invokevirtual #50                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.clear:()V
     130: goto          160
     133: new           #55                 // class java/lang/IllegalStateException
     136: dup
     137: new           #56                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #58                 // String Unknown EventRoute
     146: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_2
     150: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     153: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     156: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     159: athrow
     160: return

  private void initTranslator(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_0
       2: aload_0
       3: getfield      #23                 // Field name:Ljava/lang/String;
       6: aload         5
       8: aload_2
       9: aload         4
      11: aload         6
      13: aload         7
      15: invokestatic  #63                 // Method org/apache/logging/log4j/ThreadContext.getImmutableStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
      18: aload_3
      19: getstatic     #64                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
      22: aload_0
      23: getfield      #22                 // Field nanoClock:Lorg/apache/logging/log4j/core/util/NanoClock;
      26: invokevirtual #65                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.setBasicValues:(Lorg/apache/logging/log4j/core/async/AsyncLogger;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;Lorg/apache/logging/log4j/ThreadContext$ContextStack;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/core/util/Clock;Lorg/apache/logging/log4j/core/util/NanoClock;)V
      29: return

  private void initTranslator(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator, java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_1
       1: aload_0
       2: aload_0
       3: getfield      #23                 // Field name:Ljava/lang/String;
       6: aload         4
       8: aload_2
       9: aload_3
      10: aload         5
      12: aload         6
      14: invokestatic  #63                 // Method org/apache/logging/log4j/ThreadContext.getImmutableStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
      17: aload_0
      18: aload_2
      19: invokespecial #66                 // Method calcLocationIfRequested:(Ljava/lang/String;)Ljava/lang/StackTraceElement;
      22: getstatic     #64                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
      25: aload_0
      26: getfield      #22                 // Field nanoClock:Lorg/apache/logging/log4j/core/util/NanoClock;
      29: invokevirtual #65                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.setBasicValues:(Lorg/apache/logging/log4j/core/async/AsyncLogger;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;Lorg/apache/logging/log4j/ThreadContext$ContextStack;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/core/util/Clock;Lorg/apache/logging/log4j/core/util/NanoClock;)V
      32: return

  private void initTranslatorThreadValues(org.apache.logging.log4j.core.async.RingBufferLogEventTranslator);
    Code:
       0: getstatic     #67                 // Field THREAD_NAME_CACHING_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
       3: getstatic     #68                 // Field org/apache/logging/log4j/core/async/ThreadNameCachingStrategy.UNCACHED:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
       6: if_acmpne     13
       9: aload_1
      10: invokevirtual #69                 // Method org/apache/logging/log4j/core/async/RingBufferLogEventTranslator.updateThreadValues:()V
      13: return

  private java.lang.StackTraceElement calcLocationIfRequested(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #19                 // Field includeLocation:Z
       4: ifeq          14
       7: aload_1
       8: invokestatic  #70                 // Method org/apache/logging/log4j/util/StackLocatorUtil.calcLocation:(Ljava/lang/String;)Ljava/lang/StackTraceElement;
      11: goto          15
      14: aconst_null
      15: areturn

  private void logWithVarargTranslator(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: invokevirtual #71                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.getDisruptor:()Lcom/lmax/disruptor/dsl/Disruptor;
       7: astore        6
       9: aload         6
      11: ifnonnull     23
      14: getstatic     #72                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      17: ldc           #73                 // String Ignoring log event after Log4j has been shut down.
      19: invokevirtual #74                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;)V
      22: return
      23: aload_0
      24: aload         4
      26: invokespecial #75                 // Method isReused:(Lorg/apache/logging/log4j/message/Message;)Z
      29: ifne          38
      32: aload         4
      34: invokestatic  #76                 // Method org/apache/logging/log4j/core/async/InternalAsyncUtil.makeMessageImmutable:(Lorg/apache/logging/log4j/message/Message;)Lorg/apache/logging/log4j/message/Message;
      37: pop
      38: aconst_null
      39: astore        7
      41: aload         6
      43: invokevirtual #77                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
      46: aload_0
      47: bipush        7
      49: anewarray     #78                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: aload_0
      55: aastore
      56: dup
      57: iconst_1
      58: aload_0
      59: aload_1
      60: invokespecial #66                 // Method calcLocationIfRequested:(Ljava/lang/String;)Ljava/lang/StackTraceElement;
      63: dup
      64: astore        7
      66: aastore
      67: dup
      68: iconst_2
      69: aload_1
      70: aastore
      71: dup
      72: iconst_3
      73: aload_2
      74: aastore
      75: dup
      76: iconst_4
      77: aload_3
      78: aastore
      79: dup
      80: iconst_5
      81: aload         4
      83: aastore
      84: dup
      85: bipush        6
      87: aload         5
      89: aastore
      90: invokevirtual #79                 // Method com/lmax/disruptor/RingBuffer.tryPublishEvent:(Lcom/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)Z
      93: ifne          109
      96: aload_0
      97: aload         7
      99: aload_1
     100: aload_2
     101: aload_3
     102: aload         4
     104: aload         5
     106: invokespecial #80                 // Method handleRingBufferFull:(Ljava/lang/StackTraceElement;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
     109: return

  private void logWithVarargTranslator(java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: invokevirtual #71                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.getDisruptor:()Lcom/lmax/disruptor/dsl/Disruptor;
       7: astore        7
       9: aload         7
      11: ifnonnull     23
      14: getstatic     #72                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      17: ldc           #73                 // String Ignoring log event after Log4j has been shut down.
      19: invokevirtual #74                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;)V
      22: return
      23: aload_0
      24: aload         5
      26: invokespecial #75                 // Method isReused:(Lorg/apache/logging/log4j/message/Message;)Z
      29: ifne          38
      32: aload         5
      34: invokestatic  #76                 // Method org/apache/logging/log4j/core/async/InternalAsyncUtil.makeMessageImmutable:(Lorg/apache/logging/log4j/message/Message;)Lorg/apache/logging/log4j/message/Message;
      37: pop
      38: aload         7
      40: invokevirtual #77                 // Method com/lmax/disruptor/dsl/Disruptor.getRingBuffer:()Lcom/lmax/disruptor/RingBuffer;
      43: aload_0
      44: bipush        7
      46: anewarray     #78                 // class java/lang/Object
      49: dup
      50: iconst_0
      51: aload_0
      52: aastore
      53: dup
      54: iconst_1
      55: aload_2
      56: aastore
      57: dup
      58: iconst_2
      59: aload_1
      60: aastore
      61: dup
      62: iconst_3
      63: aload_3
      64: aastore
      65: dup
      66: iconst_4
      67: aload         4
      69: aastore
      70: dup
      71: iconst_5
      72: aload         5
      74: aastore
      75: dup
      76: bipush        6
      78: aload         6
      80: aastore
      81: invokevirtual #79                 // Method com/lmax/disruptor/RingBuffer.tryPublishEvent:(Lcom/lmax/disruptor/EventTranslatorVararg;[Ljava/lang/Object;)Z
      84: ifne          100
      87: aload_0
      88: aload_2
      89: aload_1
      90: aload_3
      91: aload         4
      93: aload         5
      95: aload         6
      97: invokespecial #80                 // Method handleRingBufferFull:(Ljava/lang/StackTraceElement;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
     100: return

  public void translateTo(org.apache.logging.log4j.core.async.RingBufferLogEvent, long, java.lang.Object...);
    Code:
       0: aload         4
       2: iconst_0
       3: aaload
       4: checkcast     #81                 // class org/apache/logging/log4j/core/async/AsyncLogger
       7: astore        5
       9: aload         4
      11: iconst_1
      12: aaload
      13: checkcast     #82                 // class java/lang/StackTraceElement
      16: astore        6
      18: aload         4
      20: iconst_2
      21: aaload
      22: checkcast     #83                 // class java/lang/String
      25: astore        7
      27: aload         4
      29: iconst_3
      30: aaload
      31: checkcast     #84                 // class org/apache/logging/log4j/Level
      34: astore        8
      36: aload         4
      38: iconst_4
      39: aaload
      40: checkcast     #85                 // class org/apache/logging/log4j/Marker
      43: astore        9
      45: aload         4
      47: iconst_5
      48: aaload
      49: checkcast     #86                 // class org/apache/logging/log4j/message/Message
      52: astore        10
      54: aload         4
      56: bipush        6
      58: aaload
      59: checkcast     #87                 // class java/lang/Throwable
      62: astore        11
      64: invokestatic  #63                 // Method org/apache/logging/log4j/ThreadContext.getImmutableStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
      67: astore        12
      69: invokestatic  #88                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      72: astore        13
      74: getstatic     #67                 // Field THREAD_NAME_CACHING_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      77: invokevirtual #89                 // Method org/apache/logging/log4j/core/async/ThreadNameCachingStrategy.getThreadName:()Ljava/lang/String;
      80: astore        14
      82: aload_1
      83: aload         5
      85: aload         5
      87: invokevirtual #90                 // Method getName:()Ljava/lang/String;
      90: aload         9
      92: aload         7
      94: aload         8
      96: aload         10
      98: aload         11
     100: getstatic     #91                 // Field CONTEXT_DATA_INJECTOR:Lorg/apache/logging/log4j/core/ContextDataInjector;
     103: aconst_null
     104: aload_1
     105: invokevirtual #92                 // Method org/apache/logging/log4j/core/async/RingBufferLogEvent.getContextData:()Lorg/apache/logging/log4j/util/ReadOnlyStringMap;
     108: checkcast     #93                 // class org/apache/logging/log4j/util/StringMap
     111: invokeinterface #94,  3           // InterfaceMethod org/apache/logging/log4j/core/ContextDataInjector.injectContextData:(Ljava/util/List;Lorg/apache/logging/log4j/util/StringMap;)Lorg/apache/logging/log4j/util/StringMap;
     116: aload         12
     118: aload         13
     120: invokevirtual #95                 // Method java/lang/Thread.getId:()J
     123: aload         14
     125: aload         13
     127: invokevirtual #96                 // Method java/lang/Thread.getPriority:()I
     130: aload         6
     132: getstatic     #64                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
     135: aload_0
     136: getfield      #22                 // Field nanoClock:Lorg/apache/logging/log4j/core/util/NanoClock;
     139: invokevirtual #97                 // Method org/apache/logging/log4j/core/async/RingBufferLogEvent.setValues:(Lorg/apache/logging/log4j/core/async/AsyncLogger;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;Lorg/apache/logging/log4j/util/StringMap;Lorg/apache/logging/log4j/ThreadContext$ContextStack;JLjava/lang/String;ILjava/lang/StackTraceElement;Lorg/apache/logging/log4j/core/util/Clock;Lorg/apache/logging/log4j/core/util/NanoClock;)V
     142: return

  void logMessageInCurrentThread(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #16                 // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #17                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: invokevirtual #98                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      10: astore        6
      12: aload         6
      14: aload_0
      15: aload_0
      16: invokevirtual #90                 // Method getName:()Ljava/lang/String;
      19: aload_1
      20: aload_3
      21: aload_2
      22: aload         4
      24: aload         5
      26: invokeinterface #99,  8           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.log:(Lorg/apache/logging/log4j/util/Supplier;Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      31: return

  private void handleRingBufferFull(java.lang.StackTraceElement, java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: invokestatic  #42                 // Method org/apache/logging/log4j/spi/AbstractLogger.getRecursionDepth:()I
       3: iconst_1
       4: if_icmple     23
       7: invokestatic  #43                 // Method org/apache/logging/log4j/core/async/AsyncQueueFullMessageUtil.logWarningToStatusLogger:()V
      10: aload_0
      11: aload_2
      12: aload_3
      13: aload         4
      15: aload         5
      17: aload         6
      19: invokevirtual #49                 // Method logMessageInCurrentThread:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      22: return
      23: aload_0
      24: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      27: aload_3
      28: invokevirtual #51                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.getEventRoute:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/async/EventRoute;
      31: astore        7
      33: getstatic     #52                 // Field org/apache/logging/log4j/core/async/AsyncLogger$3.$SwitchMap$org$apache$logging$log4j$core$async$EventRoute:[I
      36: aload         7
      38: invokevirtual #53                 // Method org/apache/logging/log4j/core/async/EventRoute.ordinal:()I
      41: iaload
      42: tableswitch   { // 1 to 3
                     1: 68
                     2: 89
                     3: 104
               default: 107
          }
      68: aload_0
      69: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
      72: aload_0
      73: aload_0
      74: aload_1
      75: aload_2
      76: aload_3
      77: aload         4
      79: aload         5
      81: aload         6
      83: invokevirtual #100                // Method org/apache/logging/log4j/core/async/AsyncLoggerDisruptor.enqueueLogMessageWhenQueueFull:(Lcom/lmax/disruptor/EventTranslatorVararg;Lorg/apache/logging/log4j/core/async/AsyncLogger;Ljava/lang/StackTraceElement;Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      86: goto          135
      89: aload_0
      90: aload_2
      91: aload_3
      92: aload         4
      94: aload         5
      96: aload         6
      98: invokevirtual #49                 // Method logMessageInCurrentThread:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
     101: goto          135
     104: goto          135
     107: new           #55                 // class java/lang/IllegalStateException
     110: dup
     111: new           #56                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #57                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #58                 // String Unknown EventRoute
     120: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload         7
     125: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     128: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: return

  public void actualAsyncLog(org.apache.logging.log4j.core.async.RingBufferLogEvent);
    Code:
       0: aload_0
       1: getfield      #16                 // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
       4: getfield      #17                 // Field org/apache/logging/log4j/core/Logger$PrivateConfig.loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       7: astore_2
       8: aload_2
       9: invokevirtual #101                // Method org/apache/logging/log4j/core/config/LoggerConfig.getPropertyList:()Ljava/util/List;
      12: astore_3
      13: aload_3
      14: ifnull        23
      17: aload_0
      18: aload_1
      19: aload_3
      20: invokespecial #102                // Method onPropertiesPresent:(Lorg/apache/logging/log4j/core/async/RingBufferLogEvent;Ljava/util/List;)V
      23: aload_2
      24: invokevirtual #98                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      27: aload_0
      28: aload_1
      29: invokeinterface #103,  3          // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.log:(Lorg/apache/logging/log4j/util/Supplier;Lorg/apache/logging/log4j/core/LogEvent;)V
      34: return

  private void onPropertiesPresent(org.apache.logging.log4j.core.async.RingBufferLogEvent, java.util.List<org.apache.logging.log4j.core.config.Property>);
    Code:
       0: aload_1
       1: invokestatic  #104                // Method getContextData:(Lorg/apache/logging/log4j/core/async/RingBufferLogEvent;)Lorg/apache/logging/log4j/util/StringMap;
       4: astore_3
       5: iconst_0
       6: istore        4
       8: aload_2
       9: invokeinterface #105,  1          // InterfaceMethod java/util/List.size:()I
      14: istore        5
      16: iload         4
      18: iload         5
      20: if_icmpge     91
      23: aload_2
      24: iload         4
      26: invokeinterface #106,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      31: checkcast     #107                // class org/apache/logging/log4j/core/config/Property
      34: astore        6
      36: aload_3
      37: aload         6
      39: invokevirtual #108                // Method org/apache/logging/log4j/core/config/Property.getName:()Ljava/lang/String;
      42: invokeinterface #109,  2          // InterfaceMethod org/apache/logging/log4j/util/StringMap.getValue:(Ljava/lang/String;)Ljava/lang/Object;
      47: ifnull        53
      50: goto          85
      53: aload         6
      55: aload_0
      56: getfield      #16                 // Field privateConfig:Lorg/apache/logging/log4j/core/Logger$PrivateConfig;
      59: getfield      #110                // Field org/apache/logging/log4j/core/Logger$PrivateConfig.config:Lorg/apache/logging/log4j/core/config/Configuration;
      62: invokeinterface #111,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getStrSubstitutor:()Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
      67: invokevirtual #112                // Method org/apache/logging/log4j/core/config/Property.evaluate:(Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;)Ljava/lang/String;
      70: astore        7
      72: aload_3
      73: aload         6
      75: invokevirtual #108                // Method org/apache/logging/log4j/core/config/Property.getName:()Ljava/lang/String;
      78: aload         7
      80: invokeinterface #113,  3          // InterfaceMethod org/apache/logging/log4j/util/StringMap.putValue:(Ljava/lang/String;Ljava/lang/Object;)V
      85: iinc          4, 1
      88: goto          16
      91: aload_1
      92: aload_3
      93: invokevirtual #114                // Method org/apache/logging/log4j/core/async/RingBufferLogEvent.setContextData:(Lorg/apache/logging/log4j/util/StringMap;)V
      96: return

  private static org.apache.logging.log4j.util.StringMap getContextData(org.apache.logging.log4j.core.async.RingBufferLogEvent);
    Code:
       0: aload_0
       1: invokevirtual #92                 // Method org/apache/logging/log4j/core/async/RingBufferLogEvent.getContextData:()Lorg/apache/logging/log4j/util/ReadOnlyStringMap;
       4: checkcast     #93                 // class org/apache/logging/log4j/util/StringMap
       7: astore_1
       8: aload_1
       9: invokeinterface #115,  1          // InterfaceMethod org/apache/logging/log4j/util/StringMap.isFrozen:()Z
      14: ifeq          30
      17: invokestatic  #116                // Method org/apache/logging/log4j/core/impl/ContextDataFactory.createContextData:()Lorg/apache/logging/log4j/util/StringMap;
      20: astore_2
      21: aload_2
      22: aload_1
      23: invokeinterface #117,  2          // InterfaceMethod org/apache/logging/log4j/util/StringMap.putAll:(Lorg/apache/logging/log4j/util/ReadOnlyStringMap;)V
      28: aload_2
      29: areturn
      30: aload_1
      31: areturn

  org.apache.logging.log4j.core.async.AsyncLoggerDisruptor getAsyncLoggerDisruptor();
    Code:
       0: aload_0
       1: getfield      #15                 // Field loggerDisruptor:Lorg/apache/logging/log4j/core/async/AsyncLoggerDisruptor;
       4: areturn

  public void translateTo(java.lang.Object, long, java.lang.Object[]);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #118                // class org/apache/logging/log4j/core/async/RingBufferLogEvent
       5: lload_2
       6: aload         4
       8: invokevirtual #119                // Method translateTo:(Lorg/apache/logging/log4j/core/async/RingBufferLogEvent;J[Ljava/lang/Object;)V
      11: return

  static void access$000(org.apache.logging.log4j.core.async.AsyncLogger, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #4                  // Method logWithThreadLocalTranslator:(Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      13: return

  static void access$100(org.apache.logging.log4j.core.async.AsyncLogger, java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #3                  // Method logWithThreadLocalTranslator:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      11: return

  static void access$200(org.apache.logging.log4j.core.async.AsyncLogger, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokespecial #2                  // Method logWithVarargTranslator:(Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      13: return

  static void access$300(org.apache.logging.log4j.core.async.AsyncLogger, java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method logWithVarargTranslator:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      11: return

  static {};
    Code:
       0: invokestatic  #120                // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #72                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       6: invokestatic  #121                // Method org/apache/logging/log4j/core/util/ClockFactory.getClock:()Lorg/apache/logging/log4j/core/util/Clock;
       9: putstatic     #64                 // Field CLOCK:Lorg/apache/logging/log4j/core/util/Clock;
      12: invokestatic  #122                // Method org/apache/logging/log4j/core/impl/ContextDataInjectorFactory.createInjector:()Lorg/apache/logging/log4j/core/ContextDataInjector;
      15: putstatic     #91                 // Field CONTEXT_DATA_INJECTOR:Lorg/apache/logging/log4j/core/ContextDataInjector;
      18: invokestatic  #123                // Method org/apache/logging/log4j/core/async/ThreadNameCachingStrategy.create:()Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      21: putstatic     #67                 // Field THREAD_NAME_CACHING_STRATEGY:Lorg/apache/logging/log4j/core/async/ThreadNameCachingStrategy;
      24: return
}
