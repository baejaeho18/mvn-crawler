Compiled from "LockingReliabilityStrategy.java"
public class org.apache.logging.log4j.core.config.LockingReliabilityStrategy implements org.apache.logging.log4j.core.config.ReliabilityStrategy,org.apache.logging.log4j.core.config.LocationAwareReliabilityStrategy {
  private final org.apache.logging.log4j.core.config.LoggerConfig loggerConfig;

  private final java.util.concurrent.locks.ReadWriteLock reconfigureLock;

  private volatile boolean isStopping;

  public org.apache.logging.log4j.core.config.LockingReliabilityStrategy(org.apache.logging.log4j.core.config.LoggerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #4                  // Field reconfigureLock:Ljava/util/concurrent/locks/ReadWriteLock;
      15: aload_0
      16: aload_1
      17: ldc           #5                  // String loggerConfig was null
      19: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: checkcast     #7                  // class org/apache/logging/log4j/core/config/LoggerConfig
      25: putfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      28: return

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, java.lang.String, java.lang.String, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
       5: astore        8
       7: aload         8
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: aload         7
      19: invokevirtual #10                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      22: aload         8
      24: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      27: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      32: goto          50
      35: astore        9
      37: aload         8
      39: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      42: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      47: aload         9
      49: athrow
      50: return
    Exception table:
       from    to  target type
           7    22    35   any
          35    37    35   any

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, java.lang.String, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
       5: astore        9
       7: aload         9
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: aload         7
      19: aload         8
      21: invokevirtual #13                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      24: aload         9
      26: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      29: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      34: goto          52
      37: astore        10
      39: aload         9
      41: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      44: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      49: aload         10
      51: athrow
      52: return
    Exception table:
       from    to  target type
           7    24    37   any
          37    39    37   any

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokevirtual #14                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Lorg/apache/logging/log4j/core/LogEvent;)V
      11: aload_3
      12: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      15: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      20: goto          37
      23: astore        4
      25: aload_3
      26: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      29: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      34: aload         4
      36: athrow
      37: return
    Exception table:
       from    to  target type
           6    11    23   any
          23    25    23   any

  public org.apache.logging.log4j.core.config.LoggerConfig getActiveLoggerConfig(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: astore_2
       5: aload_0
       6: invokespecial #15                 // Method beforeLogEvent:()Z
       9: ifne          45
      12: aload_1
      13: invokeinterface #16,  1           // InterfaceMethod org/apache/logging/log4j/util/Supplier.get:()Ljava/lang/Object;
      18: checkcast     #7                  // class org/apache/logging/log4j/core/config/LoggerConfig
      21: astore_2
      22: aload_2
      23: aload_0
      24: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      27: if_acmpne     34
      30: aload_2
      31: goto          44
      34: aload_2
      35: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      38: aload_1
      39: invokeinterface #17,  2           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
      44: areturn
      45: aload_2
      46: areturn

  private boolean beforeLogEvent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field reconfigureLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_0
      15: getfield      #20                 // Field isStopping:Z
      18: ifeq          37
      21: aload_0
      22: getfield      #4                  // Field reconfigureLock:Ljava/util/concurrent/locks/ReadWriteLock;
      25: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: iconst_0
      36: ireturn
      37: iconst_1
      38: ireturn

  public void afterLogEvent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field reconfigureLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      14: return

  public void beforeStopAppenders();
    Code:
       0: aload_0
       1: getfield      #4                  // Field reconfigureLock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_0
      15: iconst_1
      16: putfield      #20                 // Field isStopping:Z
      19: aload_0
      20: getfield      #4                  // Field reconfigureLock:Ljava/util/concurrent/locks/ReadWriteLock;
      23: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      28: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      33: goto          53
      36: astore_1
      37: aload_0
      38: getfield      #4                  // Field reconfigureLock:Ljava/util/concurrent/locks/ReadWriteLock;
      41: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: aload_1
      52: athrow
      53: return
    Exception table:
       from    to  target type
          14    19    36   any

  public void beforeStopConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: return
}
