Compiled from "ContextSelector.java"
public interface org.apache.logging.log4j.core.selector.ContextSelector {
  public static final long DEFAULT_STOP_TIMEOUT;

  public default void shutdown(java.lang.String, java.lang.ClassLoader, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokeinterface #1,  4            // InterfaceMethod hasContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Z
       9: ifeq          31
      12: aload_0
      13: aload_1
      14: aload_2
      15: iload_3
      16: invokeinterface #2,  4            // InterfaceMethod getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Lorg/apache/logging/log4j/core/LoggerContext;
      21: ldc2_w        #4                  // long 50l
      24: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      27: invokevirtual #7                  // Method org/apache/logging/log4j/core/LoggerContext.stop:(JLjava/util/concurrent/TimeUnit;)Z
      30: pop
      31: return

  public default boolean hasContext(java.lang.String, java.lang.ClassLoader, boolean);
    Code:
       0: iconst_0
       1: ireturn

  public abstract org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean);

  public default org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.util.Map$Entry<java.lang.String, java.lang.Object>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload         4
       5: invokeinterface #2,  4            // InterfaceMethod getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Lorg/apache/logging/log4j/core/LoggerContext;
      10: astore        5
      12: aload         5
      14: ifnull        38
      17: aload         5
      19: aload_3
      20: invokeinterface #8,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      25: checkcast     #9                  // class java/lang/String
      28: aload_3
      29: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      34: invokevirtual #11                 // Method org/apache/logging/log4j/core/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload         5
      40: areturn

  public abstract org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean, java.net.URI);

  public default org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, java.util.Map$Entry<java.lang.String, java.lang.Object>, boolean, java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload         4
       5: aload         5
       7: invokeinterface #12,  5           // InterfaceMethod getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
      12: astore        6
      14: aload         6
      16: ifnull        40
      19: aload         6
      21: aload_3
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      27: checkcast     #9                  // class java/lang/String
      30: aload_3
      31: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      36: invokevirtual #11                 // Method org/apache/logging/log4j/core/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload         6
      42: areturn

  public abstract java.util.List<org.apache.logging.log4j.core.LoggerContext> getLoggerContexts();

  public abstract void removeContext(org.apache.logging.log4j.core.LoggerContext);

  public default boolean isClassLoaderDependent();
    Code:
       0: iconst_1
       1: ireturn
}
