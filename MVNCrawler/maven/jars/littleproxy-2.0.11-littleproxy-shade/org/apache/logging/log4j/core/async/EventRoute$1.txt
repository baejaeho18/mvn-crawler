Compiled from "EventRoute.java"
final class org.apache.logging.log4j.core.async.EventRoute$1 extends org.apache.logging.log4j.core.async.EventRoute {
  org.apache.logging.log4j.core.async.EventRoute$1(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/apache/logging/log4j/core/async/EventRoute."<init>":(Ljava/lang/String;ILorg/apache/logging/log4j/core/async/EventRoute$1;)V
       7: return

  public void logMessage(org.apache.logging.log4j.core.async.AsyncLogger, java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: return

  public void logMessage(org.apache.logging.log4j.core.async.AsyncLoggerConfig, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2                  // Method org/apache/logging/log4j/core/async/AsyncLoggerConfig.logInBackgroundThread:(Lorg/apache/logging/log4j/core/LogEvent;)V
       5: return

  public void logMessage(org.apache.logging.log4j.core.appender.AsyncAppender, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #3                  // Method org/apache/logging/log4j/core/appender/AsyncAppender.logMessageInBackgroundThread:(Lorg/apache/logging/log4j/core/LogEvent;)V
       5: return
}
