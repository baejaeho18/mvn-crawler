Compiled from "AwaitUnconditionallyReliabilityStrategy.java"
public class org.apache.logging.log4j.core.config.AwaitUnconditionallyReliabilityStrategy implements org.apache.logging.log4j.core.config.ReliabilityStrategy,org.apache.logging.log4j.core.config.LocationAwareReliabilityStrategy {
  private static final long DEFAULT_SLEEP_MILLIS;

  private static final long SLEEP_MILLIS;

  private final org.apache.logging.log4j.core.config.LoggerConfig loggerConfig;

  public org.apache.logging.log4j.core.config.AwaitUnconditionallyReliabilityStrategy(org.apache.logging.log4j.core.config.LoggerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String loggerConfig is null
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class org/apache/logging/log4j/core/config/LoggerConfig
      14: putfield      #5                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      17: return

  private static long sleepMillis();
    Code:
       0: invokestatic  #6                  // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       3: ldc           #7                  // String log4j.waitMillisBeforeStopOldConfig
       5: ldc2_w        #9                  // long 5000l
       8: invokevirtual #11                 // Method org/apache/logging/log4j/util/PropertiesUtil.getLongProperty:(Ljava/lang/String;J)J
      11: lreturn

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, java.lang.String, java.lang.String, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: aload_2
       5: aload_3
       6: aload         4
       8: aload         5
      10: aload         6
      12: aload         7
      14: invokevirtual #12                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      17: return

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, java.lang.String, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: aload_2
       5: aload_3
       6: aload         4
       8: aload         5
      10: aload         6
      12: aload         7
      14: aload         8
      16: invokevirtual #13                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      19: return

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #5                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: aload_2
       5: invokevirtual #14                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Lorg/apache/logging/log4j/core/LogEvent;)V
       8: return

  public org.apache.logging.log4j.core.config.LoggerConfig getActiveLoggerConfig(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: areturn

  public void afterLogEvent();
    Code:
       0: return

  public void beforeStopAppenders();
    Code:
       0: return

  public void beforeStopConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #5                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: aload_1
       5: invokeinterface #15,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getRootLogger:()Lorg/apache/logging/log4j/core/config/LoggerConfig;
      10: if_acmpne     31
      13: getstatic     #16                 // Field SLEEP_MILLIS:J
      16: invokestatic  #17                 // Method java/lang/Thread.sleep:(J)V
      19: goto          31
      22: astore_2
      23: invokestatic  #19                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      26: ldc           #20                 // String Sleep before stop configuration was interrupted.
      28: invokevirtual #21                 // Method org/apache/logging/log4j/status/StatusLogger.warn:(Ljava/lang/String;)V
      31: return
    Exception table:
       from    to  target type
          13    19    22   Class java/lang/InterruptedException

  static {};
    Code:
       0: invokestatic  #22                 // Method sleepMillis:()J
       3: putstatic     #16                 // Field SLEEP_MILLIS:J
       6: return
}
