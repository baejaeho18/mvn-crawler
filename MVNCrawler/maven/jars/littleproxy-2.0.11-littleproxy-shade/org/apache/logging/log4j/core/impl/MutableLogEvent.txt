Compiled from "MutableLogEvent.java"
public class org.apache.logging.log4j.core.impl.MutableLogEvent implements org.apache.logging.log4j.core.LogEvent,org.apache.logging.log4j.message.ReusableMessage,org.apache.logging.log4j.message.ParameterVisitable {
  private static final org.apache.logging.log4j.message.Message EMPTY;

  private int threadPriority;

  private long threadId;

  private final org.apache.logging.log4j.core.time.MutableInstant instant;

  private long nanoTime;

  private short parameterCount;

  private boolean includeLocation;

  private boolean endOfBatch;

  private org.apache.logging.log4j.Level level;

  private java.lang.String threadName;

  private java.lang.String loggerName;

  private org.apache.logging.log4j.message.Message message;

  private java.lang.String messageFormat;

  private java.lang.StringBuilder messageText;

  private java.lang.Object[] parameters;

  private java.lang.Throwable thrown;

  private org.apache.logging.log4j.core.impl.ThrowableProxy thrownProxy;

  private org.apache.logging.log4j.util.StringMap contextData;

  private org.apache.logging.log4j.Marker marker;

  private java.lang.String loggerFqcn;

  private java.lang.StackTraceElement source;

  private org.apache.logging.log4j.ThreadContext$ContextStack contextStack;

  transient boolean reserved;

  public org.apache.logging.log4j.core.impl.MutableLogEvent();
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/StringBuilder;[Ljava/lang/Object;)V
       6: return

  public org.apache.logging.log4j.core.impl.MutableLogEvent(java.lang.StringBuilder, java.lang.Object[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/apache/logging/log4j/core/time/MutableInstant
       8: dup
       9: invokespecial #4                  // Method org/apache/logging/log4j/core/time/MutableInstant."<init>":()V
      12: putfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
      15: aload_0
      16: iconst_0
      17: putfield      #6                  // Field endOfBatch:Z
      20: aload_0
      21: invokestatic  #7                  // Method org/apache/logging/log4j/core/impl/ContextDataFactory.createContextData:()Lorg/apache/logging/log4j/util/StringMap;
      24: putfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
      27: aload_0
      28: iconst_0
      29: putfield      #9                  // Field reserved:Z
      32: aload_0
      33: aload_1
      34: putfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
      37: aload_0
      38: aload_2
      39: putfield      #11                 // Field parameters:[Ljava/lang/Object;
      42: return

  public org.apache.logging.log4j.core.impl.Log4jLogEvent toImmutable();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method createMemento:()Lorg/apache/logging/log4j/core/impl/Log4jLogEvent;
       4: areturn

  public void initFrom(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #13,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerFqcn:()Ljava/lang/String;
       7: putfield      #14                 // Field loggerFqcn:Ljava/lang/String;
      10: aload_0
      11: aload_1
      12: invokeinterface #15,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMarker:()Lorg/apache/logging/log4j/Marker;
      17: putfield      #16                 // Field marker:Lorg/apache/logging/log4j/Marker;
      20: aload_0
      21: aload_1
      22: invokeinterface #17,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLevel:()Lorg/apache/logging/log4j/Level;
      27: putfield      #18                 // Field level:Lorg/apache/logging/log4j/Level;
      30: aload_0
      31: aload_1
      32: invokeinterface #19,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getLoggerName:()Ljava/lang/String;
      37: putfield      #20                 // Field loggerName:Ljava/lang/String;
      40: aload_0
      41: aload_1
      42: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThrown:()Ljava/lang/Throwable;
      47: putfield      #22                 // Field thrown:Ljava/lang/Throwable;
      50: aload_0
      51: aload_1
      52: invokeinterface #23,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThrownProxy:()Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
      57: putfield      #24                 // Field thrownProxy:Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
      60: aload_0
      61: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
      64: aload_1
      65: invokeinterface #25,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getInstant:()Lorg/apache/logging/log4j/core/time/Instant;
      70: invokevirtual #26                 // Method org/apache/logging/log4j/core/time/MutableInstant.initFrom:(Lorg/apache/logging/log4j/core/time/Instant;)V
      73: aload_0
      74: getfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
      77: aload_1
      78: invokeinterface #27,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getContextData:()Lorg/apache/logging/log4j/util/ReadOnlyStringMap;
      83: invokeinterface #28,  2           // InterfaceMethod org/apache/logging/log4j/util/StringMap.putAll:(Lorg/apache/logging/log4j/util/ReadOnlyStringMap;)V
      88: aload_0
      89: aload_1
      90: invokeinterface #29,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getContextStack:()Lorg/apache/logging/log4j/ThreadContext$ContextStack;
      95: putfield      #30                 // Field contextStack:Lorg/apache/logging/log4j/ThreadContext$ContextStack;
      98: aload_0
      99: aload_1
     100: invokeinterface #31,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.isIncludeLocation:()Z
     105: ifeq          117
     108: aload_1
     109: invokeinterface #32,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getSource:()Ljava/lang/StackTraceElement;
     114: goto          118
     117: aconst_null
     118: putfield      #33                 // Field source:Ljava/lang/StackTraceElement;
     121: aload_0
     122: aload_1
     123: invokeinterface #34,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThreadId:()J
     128: putfield      #35                 // Field threadId:J
     131: aload_0
     132: aload_1
     133: invokeinterface #36,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThreadName:()Ljava/lang/String;
     138: putfield      #37                 // Field threadName:Ljava/lang/String;
     141: aload_0
     142: aload_1
     143: invokeinterface #38,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getThreadPriority:()I
     148: putfield      #39                 // Field threadPriority:I
     151: aload_0
     152: aload_1
     153: invokeinterface #40,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.isEndOfBatch:()Z
     158: putfield      #6                  // Field endOfBatch:Z
     161: aload_0
     162: aload_1
     163: invokeinterface #31,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.isIncludeLocation:()Z
     168: putfield      #41                 // Field includeLocation:Z
     171: aload_0
     172: aload_1
     173: invokeinterface #42,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getNanoTime:()J
     178: putfield      #43                 // Field nanoTime:J
     181: aload_0
     182: aload_1
     183: invokeinterface #44,  1           // InterfaceMethod org/apache/logging/log4j/core/LogEvent.getMessage:()Lorg/apache/logging/log4j/message/Message;
     188: invokevirtual #45                 // Method setMessage:(Lorg/apache/logging/log4j/message/Message;)V
     191: return

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #14                 // Field loggerFqcn:Ljava/lang/String;
       5: aload_0
       6: aconst_null
       7: putfield      #16                 // Field marker:Lorg/apache/logging/log4j/Marker;
      10: aload_0
      11: aconst_null
      12: putfield      #18                 // Field level:Lorg/apache/logging/log4j/Level;
      15: aload_0
      16: aconst_null
      17: putfield      #20                 // Field loggerName:Ljava/lang/String;
      20: aload_0
      21: aconst_null
      22: putfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
      25: aload_0
      26: aconst_null
      27: putfield      #47                 // Field messageFormat:Ljava/lang/String;
      30: aload_0
      31: aconst_null
      32: putfield      #22                 // Field thrown:Ljava/lang/Throwable;
      35: aload_0
      36: aconst_null
      37: putfield      #24                 // Field thrownProxy:Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
      40: aload_0
      41: aconst_null
      42: putfield      #33                 // Field source:Ljava/lang/StackTraceElement;
      45: aload_0
      46: getfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
      49: ifnull        81
      52: aload_0
      53: getfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
      56: invokeinterface #48,  1           // InterfaceMethod org/apache/logging/log4j/util/StringMap.isFrozen:()Z
      61: ifeq          72
      64: aload_0
      65: aconst_null
      66: putfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
      69: goto          81
      72: aload_0
      73: getfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
      76: invokeinterface #49,  1           // InterfaceMethod org/apache/logging/log4j/util/StringMap.clear:()V
      81: aload_0
      82: aconst_null
      83: putfield      #30                 // Field contextStack:Lorg/apache/logging/log4j/ThreadContext$ContextStack;
      86: aload_0
      87: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
      90: getstatic     #50                 // Field org/apache/logging/log4j/core/util/Constants.MAX_REUSABLE_MESSAGE_SIZE:I
      93: invokestatic  #51                 // Method org/apache/logging/log4j/util/StringBuilders.trimToMaxSize:(Ljava/lang/StringBuilder;I)V
      96: aload_0
      97: getfield      #11                 // Field parameters:[Ljava/lang/Object;
     100: ifnull        111
     103: aload_0
     104: getfield      #11                 // Field parameters:[Ljava/lang/Object;
     107: aconst_null
     108: invokestatic  #52                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
     111: return

  public java.lang.String getLoggerFqcn();
    Code:
       0: aload_0
       1: getfield      #14                 // Field loggerFqcn:Ljava/lang/String;
       4: areturn

  public void setLoggerFqcn(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field loggerFqcn:Ljava/lang/String;
       5: return

  public org.apache.logging.log4j.Marker getMarker();
    Code:
       0: aload_0
       1: getfield      #16                 // Field marker:Lorg/apache/logging/log4j/Marker;
       4: areturn

  public void setMarker(org.apache.logging.log4j.Marker);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field marker:Lorg/apache/logging/log4j/Marker;
       5: return

  public org.apache.logging.log4j.Level getLevel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field level:Lorg/apache/logging/log4j/Level;
       4: ifnonnull     14
       7: aload_0
       8: getstatic     #53                 // Field org/apache/logging/log4j/Level.OFF:Lorg/apache/logging/log4j/Level;
      11: putfield      #18                 // Field level:Lorg/apache/logging/log4j/Level;
      14: aload_0
      15: getfield      #18                 // Field level:Lorg/apache/logging/log4j/Level;
      18: areturn

  public void setLevel(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field level:Lorg/apache/logging/log4j/Level;
       5: return

  public java.lang.String getLoggerName();
    Code:
       0: aload_0
       1: getfield      #20                 // Field loggerName:Ljava/lang/String;
       4: areturn

  public void setLoggerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field loggerName:Ljava/lang/String;
       5: return

  public org.apache.logging.log4j.message.Message getMessage();
    Code:
       0: aload_0
       1: getfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
       4: ifnonnull     22
       7: aload_0
       8: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
      11: ifnonnull     20
      14: getstatic     #54                 // Field EMPTY:Lorg/apache/logging/log4j/message/Message;
      17: goto          21
      20: aload_0
      21: areturn
      22: aload_0
      23: getfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
      26: areturn

  public void setMessage(org.apache.logging.log4j.message.Message);
    Code:
       0: aload_1
       1: instanceof    #55                 // class org/apache/logging/log4j/message/ReusableMessage
       4: ifeq          74
       7: aload_1
       8: checkcast     #55                 // class org/apache/logging/log4j/message/ReusableMessage
      11: astore_2
      12: aload_2
      13: aload_0
      14: invokespecial #56                 // Method getMessageTextForWriting:()Ljava/lang/StringBuilder;
      17: invokeinterface #57,  2           // InterfaceMethod org/apache/logging/log4j/message/ReusableMessage.formatTo:(Ljava/lang/StringBuilder;)V
      22: aload_0
      23: aload_1
      24: invokeinterface #58,  1           // InterfaceMethod org/apache/logging/log4j/message/Message.getFormat:()Ljava/lang/String;
      29: putfield      #47                 // Field messageFormat:Ljava/lang/String;
      32: aload_0
      33: aload_2
      34: aload_0
      35: getfield      #11                 // Field parameters:[Ljava/lang/Object;
      38: ifnonnull     49
      41: bipush        10
      43: anewarray     #59                 // class java/lang/Object
      46: goto          53
      49: aload_0
      50: getfield      #11                 // Field parameters:[Ljava/lang/Object;
      53: invokeinterface #60,  2           // InterfaceMethod org/apache/logging/log4j/message/ReusableMessage.swapParameters:([Ljava/lang/Object;)[Ljava/lang/Object;
      58: putfield      #11                 // Field parameters:[Ljava/lang/Object;
      61: aload_0
      62: aload_2
      63: invokeinterface #61,  1           // InterfaceMethod org/apache/logging/log4j/message/ReusableMessage.getParameterCount:()S
      68: putfield      #62                 // Field parameterCount:S
      71: goto          82
      74: aload_0
      75: aload_1
      76: invokestatic  #63                 // Method org/apache/logging/log4j/core/async/InternalAsyncUtil.makeMessageImmutable:(Lorg/apache/logging/log4j/message/Message;)Lorg/apache/logging/log4j/message/Message;
      79: putfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
      82: return

  private java.lang.StringBuilder getMessageTextForWriting();
    Code:
       0: aload_0
       1: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
       4: ifnonnull     21
       7: aload_0
       8: new           #64                 // class java/lang/StringBuilder
      11: dup
      12: getstatic     #65                 // Field org/apache/logging/log4j/core/util/Constants.INITIAL_REUSABLE_MESSAGE_SIZE:I
      15: invokespecial #66                 // Method java/lang/StringBuilder."<init>":(I)V
      18: putfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
      21: aload_0
      22: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
      25: iconst_0
      26: invokevirtual #67                 // Method java/lang/StringBuilder.setLength:(I)V
      29: aload_0
      30: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
      33: areturn

  public java.lang.String getFormattedMessage();
    Code:
       0: aload_0
       1: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
       4: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.String getFormat();
    Code:
       0: aload_0
       1: getfield      #47                 // Field messageFormat:Ljava/lang/String;
       4: areturn

  public java.lang.Object[] getParameters();
    Code:
       0: aload_0
       1: getfield      #11                 // Field parameters:[Ljava/lang/Object;
       4: ifnonnull     11
       7: aconst_null
       8: goto          22
      11: aload_0
      12: getfield      #11                 // Field parameters:[Ljava/lang/Object;
      15: aload_0
      16: getfield      #62                 // Field parameterCount:S
      19: invokestatic  #69                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      22: areturn

  public <S> void forEachParameter(org.apache.logging.log4j.message.ParameterConsumer<S>, S);
    Code:
       0: aload_0
       1: getfield      #11                 // Field parameters:[Ljava/lang/Object;
       4: ifnull        39
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_0
      11: getfield      #62                 // Field parameterCount:S
      14: if_icmpge     39
      17: aload_1
      18: aload_0
      19: getfield      #11                 // Field parameters:[Ljava/lang/Object;
      22: iload_3
      23: aaload
      24: iload_3
      25: aload_2
      26: invokeinterface #70,  4           // InterfaceMethod org/apache/logging/log4j/message/ParameterConsumer.accept:(Ljava/lang/Object;ILjava/lang/Object;)V
      31: iload_3
      32: iconst_1
      33: iadd
      34: i2s
      35: istore_3
      36: goto          9
      39: return

  public java.lang.Throwable getThrowable();
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method getThrown:()Ljava/lang/Throwable;
       4: areturn

  public void formatTo(java.lang.StringBuilder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
       5: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
       8: pop
       9: return

  public java.lang.Object[] swapParameters(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #11                 // Field parameters:[Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_1
       7: putfield      #11                 // Field parameters:[Ljava/lang/Object;
      10: aload_2
      11: areturn

  public short getParameterCount();
    Code:
       0: aload_0
       1: getfield      #62                 // Field parameterCount:S
       4: ireturn

  public org.apache.logging.log4j.message.Message memento();
    Code:
       0: aload_0
       1: getfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
       4: ifnonnull     33
       7: aload_0
       8: new           #73                 // class org/apache/logging/log4j/core/impl/MementoMessage
      11: dup
      12: aload_0
      13: getfield      #10                 // Field messageText:Ljava/lang/StringBuilder;
      16: invokestatic  #74                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      19: aload_0
      20: getfield      #47                 // Field messageFormat:Ljava/lang/String;
      23: aload_0
      24: invokevirtual #75                 // Method getParameters:()[Ljava/lang/Object;
      27: invokespecial #76                 // Method org/apache/logging/log4j/core/impl/MementoMessage."<init>":(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      30: putfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
      33: aload_0
      34: getfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
      37: areturn

  public java.lang.Throwable getThrown();
    Code:
       0: aload_0
       1: getfield      #22                 // Field thrown:Ljava/lang/Throwable;
       4: areturn

  public void setThrown(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field thrown:Ljava/lang/Throwable;
       5: return

  void initTime(org.apache.logging.log4j.core.util.Clock, org.apache.logging.log4j.core.util.NanoClock);
    Code:
       0: aload_0
       1: getfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
       4: instanceof    #77                 // class org/apache/logging/log4j/message/TimestampMessage
       7: ifeq          33
      10: aload_0
      11: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
      14: aload_0
      15: getfield      #46                 // Field message:Lorg/apache/logging/log4j/message/Message;
      18: checkcast     #77                 // class org/apache/logging/log4j/message/TimestampMessage
      21: invokeinterface #78,  1           // InterfaceMethod org/apache/logging/log4j/message/TimestampMessage.getTimestamp:()J
      26: iconst_0
      27: invokevirtual #79                 // Method org/apache/logging/log4j/core/time/MutableInstant.initFromEpochMilli:(JI)V
      30: goto          41
      33: aload_0
      34: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
      37: aload_1
      38: invokevirtual #80                 // Method org/apache/logging/log4j/core/time/MutableInstant.initFrom:(Lorg/apache/logging/log4j/core/util/Clock;)V
      41: aload_0
      42: aload_2
      43: invokeinterface #81,  1           // InterfaceMethod org/apache/logging/log4j/core/util/NanoClock.nanoTime:()J
      48: putfield      #43                 // Field nanoTime:J
      51: return

  public long getTimeMillis();
    Code:
       0: aload_0
       1: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
       4: invokevirtual #82                 // Method org/apache/logging/log4j/core/time/MutableInstant.getEpochMillisecond:()J
       7: lreturn

  public void setTimeMillis(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
       4: lload_1
       5: iconst_0
       6: invokevirtual #79                 // Method org/apache/logging/log4j/core/time/MutableInstant.initFromEpochMilli:(JI)V
       9: return

  public org.apache.logging.log4j.core.time.Instant getInstant();
    Code:
       0: aload_0
       1: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
       4: areturn

  public org.apache.logging.log4j.core.impl.ThrowableProxy getThrownProxy();
    Code:
       0: aload_0
       1: getfield      #24                 // Field thrownProxy:Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
       4: ifnonnull     29
       7: aload_0
       8: getfield      #22                 // Field thrown:Ljava/lang/Throwable;
      11: ifnull        29
      14: aload_0
      15: new           #83                 // class org/apache/logging/log4j/core/impl/ThrowableProxy
      18: dup
      19: aload_0
      20: getfield      #22                 // Field thrown:Ljava/lang/Throwable;
      23: invokespecial #84                 // Method org/apache/logging/log4j/core/impl/ThrowableProxy."<init>":(Ljava/lang/Throwable;)V
      26: putfield      #24                 // Field thrownProxy:Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
      29: aload_0
      30: getfield      #24                 // Field thrownProxy:Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
      33: areturn

  public void setSource(java.lang.StackTraceElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field source:Ljava/lang/StackTraceElement;
       5: return

  public java.lang.StackTraceElement getSource();
    Code:
       0: aload_0
       1: getfield      #33                 // Field source:Ljava/lang/StackTraceElement;
       4: ifnull        12
       7: aload_0
       8: getfield      #33                 // Field source:Ljava/lang/StackTraceElement;
      11: areturn
      12: aload_0
      13: getfield      #14                 // Field loggerFqcn:Ljava/lang/String;
      16: ifnull        26
      19: aload_0
      20: getfield      #41                 // Field includeLocation:Z
      23: ifne          28
      26: aconst_null
      27: areturn
      28: aload_0
      29: aload_0
      30: getfield      #14                 // Field loggerFqcn:Ljava/lang/String;
      33: invokestatic  #85                 // Method org/apache/logging/log4j/util/StackLocatorUtil.calcLocation:(Ljava/lang/String;)Ljava/lang/StackTraceElement;
      36: putfield      #33                 // Field source:Ljava/lang/StackTraceElement;
      39: aload_0
      40: getfield      #33                 // Field source:Ljava/lang/StackTraceElement;
      43: areturn

  public org.apache.logging.log4j.util.ReadOnlyStringMap getContextData();
    Code:
       0: aload_0
       1: getfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
       4: areturn

  public java.util.Map<java.lang.String, java.lang.String> getContextMap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
       4: invokeinterface #86,  1           // InterfaceMethod org/apache/logging/log4j/util/StringMap.toMap:()Ljava/util/Map;
       9: areturn

  public void setContextData(org.apache.logging.log4j.util.StringMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
       5: return

  public org.apache.logging.log4j.ThreadContext$ContextStack getContextStack();
    Code:
       0: aload_0
       1: getfield      #30                 // Field contextStack:Lorg/apache/logging/log4j/ThreadContext$ContextStack;
       4: areturn

  public void setContextStack(org.apache.logging.log4j.ThreadContext$ContextStack);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field contextStack:Lorg/apache/logging/log4j/ThreadContext$ContextStack;
       5: return

  public long getThreadId();
    Code:
       0: aload_0
       1: getfield      #35                 // Field threadId:J
       4: lreturn

  public void setThreadId(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #35                 // Field threadId:J
       5: return

  public java.lang.String getThreadName();
    Code:
       0: aload_0
       1: getfield      #37                 // Field threadName:Ljava/lang/String;
       4: areturn

  public void setThreadName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field threadName:Ljava/lang/String;
       5: return

  public int getThreadPriority();
    Code:
       0: aload_0
       1: getfield      #39                 // Field threadPriority:I
       4: ireturn

  public void setThreadPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #39                 // Field threadPriority:I
       5: return

  public boolean isIncludeLocation();
    Code:
       0: aload_0
       1: getfield      #41                 // Field includeLocation:Z
       4: ireturn

  public void setIncludeLocation(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #41                 // Field includeLocation:Z
       5: return

  public boolean isEndOfBatch();
    Code:
       0: aload_0
       1: getfield      #6                  // Field endOfBatch:Z
       4: ireturn

  public void setEndOfBatch(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field endOfBatch:Z
       5: return

  public long getNanoTime();
    Code:
       0: aload_0
       1: getfield      #43                 // Field nanoTime:J
       4: lreturn

  public void setNanoTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #43                 // Field nanoTime:J
       5: return

  protected java.lang.Object writeReplace();
    Code:
       0: new           #87                 // class org/apache/logging/log4j/core/impl/Log4jLogEvent$LogEventProxy
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #41                 // Field includeLocation:Z
       9: invokespecial #88                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$LogEventProxy."<init>":(Lorg/apache/logging/log4j/core/LogEvent;Z)V
      12: areturn

  private void readObject(java.io.ObjectInputStream) throws java.io.InvalidObjectException;
    Code:
       0: new           #89                 // class java/io/InvalidObjectException
       3: dup
       4: ldc           #90                 // String Proxy required
       6: invokespecial #91                 // Method java/io/InvalidObjectException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.apache.logging.log4j.core.impl.Log4jLogEvent createMemento();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #41                 // Field includeLocation:Z
       5: invokestatic  #92                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent.serialize:(Lorg/apache/logging/log4j/core/LogEvent;Z)Ljava/io/Serializable;
       8: invokestatic  #93                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent.deserialize:(Ljava/io/Serializable;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent;
      11: areturn

  public void initializeBuilder(org.apache.logging.log4j.core.impl.Log4jLogEvent$Builder);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field contextData:Lorg/apache/logging/log4j/util/StringMap;
       5: invokevirtual #94                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setContextData:(Lorg/apache/logging/log4j/util/StringMap;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
       8: aload_0
       9: getfield      #30                 // Field contextStack:Lorg/apache/logging/log4j/ThreadContext$ContextStack;
      12: invokevirtual #95                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setContextStack:(Lorg/apache/logging/log4j/ThreadContext$ContextStack;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      15: aload_0
      16: getfield      #6                  // Field endOfBatch:Z
      19: invokevirtual #96                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setEndOfBatch:(Z)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      22: aload_0
      23: getfield      #41                 // Field includeLocation:Z
      26: invokevirtual #97                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setIncludeLocation:(Z)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      29: aload_0
      30: invokevirtual #98                 // Method getLevel:()Lorg/apache/logging/log4j/Level;
      33: invokevirtual #99                 // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setLevel:(Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      36: aload_0
      37: getfield      #14                 // Field loggerFqcn:Ljava/lang/String;
      40: invokevirtual #100                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setLoggerFqcn:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      43: aload_0
      44: getfield      #20                 // Field loggerName:Ljava/lang/String;
      47: invokevirtual #101                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setLoggerName:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      50: aload_0
      51: getfield      #16                 // Field marker:Lorg/apache/logging/log4j/Marker;
      54: invokevirtual #102                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setMarker:(Lorg/apache/logging/log4j/Marker;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      57: aload_0
      58: invokevirtual #103                // Method memento:()Lorg/apache/logging/log4j/message/Message;
      61: invokevirtual #104                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setMessage:(Lorg/apache/logging/log4j/message/Message;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      64: aload_0
      65: getfield      #43                 // Field nanoTime:J
      68: invokevirtual #105                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setNanoTime:(J)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      71: aload_0
      72: getfield      #33                 // Field source:Ljava/lang/StackTraceElement;
      75: invokevirtual #106                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setSource:(Ljava/lang/StackTraceElement;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      78: aload_0
      79: getfield      #35                 // Field threadId:J
      82: invokevirtual #107                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setThreadId:(J)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      85: aload_0
      86: getfield      #37                 // Field threadName:Ljava/lang/String;
      89: invokevirtual #108                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setThreadName:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      92: aload_0
      93: getfield      #39                 // Field threadPriority:I
      96: invokevirtual #109                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setThreadPriority:(I)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
      99: aload_0
     100: invokevirtual #71                 // Method getThrown:()Ljava/lang/Throwable;
     103: invokevirtual #110                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setThrown:(Ljava/lang/Throwable;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
     106: aload_0
     107: getfield      #24                 // Field thrownProxy:Lorg/apache/logging/log4j/core/impl/ThrowableProxy;
     110: invokevirtual #111                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setThrownProxy:(Lorg/apache/logging/log4j/core/impl/ThrowableProxy;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
     113: aload_0
     114: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
     117: invokevirtual #112                // Method org/apache/logging/log4j/core/impl/Log4jLogEvent$Builder.setInstant:(Lorg/apache/logging/log4j/core/time/Instant;)Lorg/apache/logging/log4j/core/impl/Log4jLogEvent$Builder;
     120: pop
     121: return

  public org.apache.logging.log4j.core.LogEvent toImmutable();
    Code:
       0: aload_0
       1: invokevirtual #113                // Method toImmutable:()Lorg/apache/logging/log4j/core/impl/Log4jLogEvent;
       4: areturn

  static {};
    Code:
       0: new           #114                // class org/apache/logging/log4j/message/SimpleMessage
       3: dup
       4: ldc           #116                // String
       6: invokespecial #117                // Method org/apache/logging/log4j/message/SimpleMessage."<init>":(Ljava/lang/String;)V
       9: putstatic     #54                 // Field EMPTY:Lorg/apache/logging/log4j/message/Message;
      12: return
}
