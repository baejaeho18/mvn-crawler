Compiled from "DirectWriteRolloverStrategy.java"
public class org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy> {
  private java.lang.String maxFiles;

  private java.lang.String compressionLevelStr;

  private org.apache.logging.log4j.core.appender.rolling.action.Action[] customActions;

  private boolean stopCustomActionsOnError;

  private java.lang.String tempCompressedFilePattern;

  private org.apache.logging.log4j.core.config.Configuration config;

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field stopCustomActionsOnError:Z
       9: return

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy build();
    Code:
       0: ldc           #5                  // int 2147483647
       2: istore_1
       3: aload_0
       4: getfield      #6                  // Field maxFiles:Ljava/lang/String;
       7: ifnull        46
      10: aload_0
      11: getfield      #6                  // Field maxFiles:Ljava/lang/String;
      14: invokestatic  #7                  // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;)I
      17: istore_1
      18: iload_1
      19: ifge          28
      22: ldc           #5                  // int 2147483647
      24: istore_1
      25: goto          46
      28: iload_1
      29: iconst_2
      30: if_icmpge     46
      33: getstatic     #8                  // Field org/apache/logging/log4j/core/appender/rolling/AbstractRolloverStrategy.LOGGER:Lorg/apache/logging/log4j/Logger;
      36: ldc           #9                  // String Maximum files too small. Limited to 7
      38: invokeinterface #10,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      43: bipush        7
      45: istore_1
      46: aload_0
      47: getfield      #11                 // Field compressionLevelStr:Ljava/lang/String;
      50: iconst_m1
      51: invokestatic  #13                 // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;I)I
      54: istore_2
      55: new           #1                  // class org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy
      58: dup
      59: iload_1
      60: iload_2
      61: aload_0
      62: getfield      #14                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
      65: invokeinterface #15,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getStrSubstitutor:()Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
      70: aload_0
      71: getfield      #16                 // Field customActions:[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
      74: aload_0
      75: getfield      #3                  // Field stopCustomActionsOnError:Z
      78: aload_0
      79: getfield      #17                 // Field tempCompressedFilePattern:Ljava/lang/String;
      82: invokespecial #18                 // Method org/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy."<init>":(IILorg/apache/logging/log4j/core/lookup/StrSubstitutor;[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;ZLjava/lang/String;)V
      85: areturn

  public java.lang.String getMaxFiles();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxFiles:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder withMaxFiles(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field maxFiles:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.String getCompressionLevelStr();
    Code:
       0: aload_0
       1: getfield      #11                 // Field compressionLevelStr:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder withCompressionLevelStr(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field compressionLevelStr:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.Action[] getCustomActions();
    Code:
       0: aload_0
       1: getfield      #16                 // Field customActions:[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder withCustomActions(org.apache.logging.log4j.core.appender.rolling.action.Action[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field customActions:[Lorg/apache/logging/log4j/core/appender/rolling/action/Action;
       5: aload_0
       6: areturn

  public boolean isStopCustomActionsOnError();
    Code:
       0: aload_0
       1: getfield      #3                  // Field stopCustomActionsOnError:Z
       4: ireturn

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder withStopCustomActionsOnError(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field stopCustomActionsOnError:Z
       5: aload_0
       6: areturn

  public java.lang.String getTempCompressedFilePattern();
    Code:
       0: aload_0
       1: getfield      #17                 // Field tempCompressedFilePattern:Ljava/lang/String;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder withTempCompressedFilePattern(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field tempCompressedFilePattern:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.config.Configuration getConfig();
    Code:
       0: aload_0
       1: getfield      #14                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       4: areturn

  public org.apache.logging.log4j.core.appender.rolling.DirectWriteRolloverStrategy$Builder withConfig(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field config:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method build:()Lorg/apache/logging/log4j/core/appender/rolling/DirectWriteRolloverStrategy;
       4: areturn
}
