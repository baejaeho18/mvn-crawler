Compiled from "Server.java"
public final class org.apache.logging.log4j.core.jmx.Server {
  private static final java.lang.String CONTEXT_NAME_ALL;

  public static final java.lang.String DOMAIN;

  private static final java.lang.String PROPERTY_DISABLE_JMX;

  private static final java.lang.String PROPERTY_ASYNC_NOTIF;

  private static final java.lang.String THREAD_NAME_PREFIX;

  private static final org.apache.logging.log4j.status.StatusLogger LOGGER;

  static final java.util.concurrent.Executor executor;

  private org.apache.logging.log4j.core.jmx.Server();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  private static java.util.concurrent.ExecutorService createExecutor();
    Code:
       0: getstatic     #2                  // Field org/apache/logging/log4j/core/util/Constants.IS_WEB_APP:Z
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: istore_0
      12: invokestatic  #3                  // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
      15: ldc           #5                  // String log4j2.jmx.notify.async
      17: iload_0
      18: invokevirtual #6                  // Method org/apache/logging/log4j/util/PropertiesUtil.getBooleanProperty:(Ljava/lang/String;Z)Z
      21: istore_1
      22: iload_1
      23: ifeq          38
      26: iconst_1
      27: ldc           #7                  // String jmx.notif
      29: invokestatic  #8                  // Method org/apache/logging/log4j/core/util/Log4jThreadFactory.createDaemonThreadFactory:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/util/Log4jThreadFactory;
      32: invokestatic  #9                  // Method java/util/concurrent/Executors.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      35: goto          39
      38: aconst_null
      39: areturn

  public static java.lang.String escape(java.lang.String);
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: invokevirtual #11                 // Method java/lang/String.length:()I
       8: iconst_2
       9: imul
      10: invokespecial #12                 // Method java/lang/StringBuilder."<init>":(I)V
      13: astore_1
      14: iconst_0
      15: istore_2
      16: iconst_0
      17: istore_3
      18: iload_3
      19: aload_0
      20: invokevirtual #11                 // Method java/lang/String.length:()I
      23: if_icmpge     161
      26: aload_0
      27: iload_3
      28: invokevirtual #13                 // Method java/lang/String.charAt:(I)C
      31: istore        4
      33: iload         4
      35: lookupswitch  { // 9
                    10: 136
                    13: 133
                    34: 116
                    42: 116
                    44: 128
                    58: 128
                    61: 128
                    63: 116
                    92: 116
               default: 148
          }
     116: aload_1
     117: bipush        92
     119: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     122: pop
     123: iconst_1
     124: istore_2
     125: goto          148
     128: iconst_1
     129: istore_2
     130: goto          148
     133: goto          155
     136: aload_1
     137: ldc           #15                 // String \\n
     139: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: pop
     143: iconst_1
     144: istore_2
     145: goto          155
     148: aload_1
     149: iload         4
     151: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     154: pop
     155: iinc          3, 1
     158: goto          18
     161: iload_2
     162: ifeq          180
     165: aload_1
     166: iconst_0
     167: bipush        34
     169: invokevirtual #17                 // Method java/lang/StringBuilder.insert:(IC)Ljava/lang/StringBuilder;
     172: pop
     173: aload_1
     174: bipush        34
     176: invokevirtual #14                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     179: pop
     180: aload_1
     181: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     184: areturn

  private static boolean isJmxDisabled();
    Code:
       0: invokestatic  #3                  // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       3: ldc           #19                 // String log4j2.disable.jmx
       5: invokevirtual #20                 // Method org/apache/logging/log4j/util/PropertiesUtil.getBooleanProperty:(Ljava/lang/String;)Z
       8: ireturn

  public static void reregisterMBeansAfterReconfigure();
    Code:
       0: invokestatic  #21                 // Method isJmxDisabled:()Z
       3: ifeq          15
       6: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       9: ldc           #23                 // String JMX disabled for Log4j2. Not registering MBeans.
      11: invokevirtual #24                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;)V
      14: return
      15: invokestatic  #25                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
      18: astore_0
      19: aload_0
      20: invokestatic  #26                 // Method reregisterMBeansAfterReconfigure:(Ljavax/management/MBeanServer;)V
      23: return

  public static void reregisterMBeansAfterReconfigure(javax.management.MBeanServer);
    Code:
       0: invokestatic  #21                 // Method isJmxDisabled:()Z
       3: ifeq          15
       6: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       9: ldc           #23                 // String JMX disabled for Log4j2. Not registering MBeans.
      11: invokevirtual #24                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;)V
      14: return
      15: invokestatic  #27                 // Method getContextSelector:()Lorg/apache/logging/log4j/core/selector/ContextSelector;
      18: astore_1
      19: aload_1
      20: ifnonnull     32
      23: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      26: ldc           #28                 // String Could not register MBeans: no ContextSelector found.
      28: invokevirtual #24                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;)V
      31: return
      32: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      35: ldc           #29                 // String Reregistering MBeans after reconfigure. Selector={}
      37: aload_1
      38: invokevirtual #30                 // Method org/apache/logging/log4j/status/StatusLogger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      41: aload_1
      42: invokeinterface #31,  1           // InterfaceMethod org/apache/logging/log4j/core/selector/ContextSelector.getLoggerContexts:()Ljava/util/List;
      47: astore_2
      48: iconst_0
      49: istore_3
      50: aload_2
      51: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      56: astore        4
      58: aload         4
      60: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          230
      68: aload         4
      70: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #35                 // class org/apache/logging/log4j/core/LoggerContext
      78: astore        5
      80: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      83: ldc           #36                 // String Reregistering context ({}/{}): \'{}\' {}
      85: iinc          3, 1
      88: iload_3
      89: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      92: aload_2
      93: invokeinterface #38,  1           // InterfaceMethod java/util/List.size:()I
      98: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     101: aload         5
     103: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     106: aload         5
     108: invokevirtual #40                 // Method org/apache/logging/log4j/status/StatusLogger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
     111: aload         5
     113: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     116: aload_0
     117: invokestatic  #41                 // Method unregisterLoggerContext:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
     120: new           #42                 // class org/apache/logging/log4j/core/jmx/LoggerContextAdmin
     123: dup
     124: aload         5
     126: getstatic     #43                 // Field executor:Ljava/util/concurrent/Executor;
     129: invokespecial #44                 // Method org/apache/logging/log4j/core/jmx/LoggerContextAdmin."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/util/concurrent/Executor;)V
     132: astore        6
     134: aload_0
     135: aload         6
     137: aload         6
     139: invokevirtual #45                 // Method org/apache/logging/log4j/core/jmx/LoggerContextAdmin.getObjectName:()Ljavax/management/ObjectName;
     142: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
     145: aload         5
     147: instanceof    #47                 // class org/apache/logging/log4j/core/async/AsyncLoggerContext
     150: ifeq          184
     153: aload         5
     155: checkcast     #47                 // class org/apache/logging/log4j/core/async/AsyncLoggerContext
     158: invokevirtual #48                 // Method org/apache/logging/log4j/core/async/AsyncLoggerContext.createRingBufferAdmin:()Lorg/apache/logging/log4j/core/jmx/RingBufferAdmin;
     161: astore        7
     163: aload         7
     165: invokevirtual #49                 // Method org/apache/logging/log4j/core/jmx/RingBufferAdmin.getBufferSize:()J
     168: lconst_0
     169: lcmp
     170: ifle          184
     173: aload_0
     174: aload         7
     176: aload         7
     178: invokevirtual #50                 // Method org/apache/logging/log4j/core/jmx/RingBufferAdmin.getObjectName:()Ljavax/management/ObjectName;
     181: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
     184: aload         5
     186: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     189: aload_0
     190: getstatic     #43                 // Field executor:Ljava/util/concurrent/Executor;
     193: invokestatic  #51                 // Method registerStatusLogger:(Ljava/lang/String;Ljavax/management/MBeanServer;Ljava/util/concurrent/Executor;)V
     196: aload         5
     198: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     201: aload_1
     202: aload_0
     203: getstatic     #43                 // Field executor:Ljava/util/concurrent/Executor;
     206: invokestatic  #52                 // Method registerContextSelector:(Ljava/lang/String;Lorg/apache/logging/log4j/core/selector/ContextSelector;Ljavax/management/MBeanServer;Ljava/util/concurrent/Executor;)V
     209: aload         5
     211: aload_0
     212: getstatic     #43                 // Field executor:Ljava/util/concurrent/Executor;
     215: invokestatic  #53                 // Method registerLoggerConfigs:(Lorg/apache/logging/log4j/core/LoggerContext;Ljavax/management/MBeanServer;Ljava/util/concurrent/Executor;)V
     218: aload         5
     220: aload_0
     221: getstatic     #43                 // Field executor:Ljava/util/concurrent/Executor;
     224: invokestatic  #54                 // Method registerAppenders:(Lorg/apache/logging/log4j/core/LoggerContext;Ljavax/management/MBeanServer;Ljava/util/concurrent/Executor;)V
     227: goto          58
     230: goto          243
     233: astore_1
     234: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     237: ldc           #56                 // String Could not register mbeans
     239: aload_1
     240: invokevirtual #57                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     243: return
    Exception table:
       from    to  target type
          15    31   233   Class java/lang/Exception
          32   230   233   Class java/lang/Exception

  public static void unregisterMBeans();
    Code:
       0: invokestatic  #21                 // Method isJmxDisabled:()Z
       3: ifeq          15
       6: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       9: ldc           #58                 // String JMX disabled for Log4j2. Not unregistering MBeans.
      11: invokevirtual #24                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;)V
      14: return
      15: invokestatic  #25                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
      18: invokestatic  #59                 // Method unregisterMBeans:(Ljavax/management/MBeanServer;)V
      21: return

  public static void unregisterMBeans(javax.management.MBeanServer);
    Code:
       0: aload_0
       1: ifnull        50
       4: ldc           #60                 // String *
       6: aload_0
       7: invokestatic  #61                 // Method unregisterStatusLogger:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      10: ldc           #60                 // String *
      12: aload_0
      13: invokestatic  #62                 // Method unregisterContextSelector:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      16: aload_0
      17: invokestatic  #63                 // Method unregisterContexts:(Ljavax/management/MBeanServer;)V
      20: ldc           #60                 // String *
      22: aload_0
      23: invokestatic  #64                 // Method unregisterLoggerConfigs:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      26: ldc           #60                 // String *
      28: aload_0
      29: invokestatic  #65                 // Method unregisterAsyncLoggerRingBufferAdmins:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      32: ldc           #60                 // String *
      34: aload_0
      35: invokestatic  #66                 // Method unregisterAsyncLoggerConfigRingBufferAdmins:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      38: ldc           #60                 // String *
      40: aload_0
      41: invokestatic  #67                 // Method unregisterAppenders:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      44: ldc           #60                 // String *
      46: aload_0
      47: invokestatic  #68                 // Method unregisterAsyncAppenders:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      50: return

  private static org.apache.logging.log4j.core.selector.ContextSelector getContextSelector();
    Code:
       0: invokestatic  #69                 // Method org/apache/logging/log4j/LogManager.getFactory:()Lorg/apache/logging/log4j/spi/LoggerContextFactory;
       3: astore_0
       4: aload_0
       5: instanceof    #70                 // class org/apache/logging/log4j/core/impl/Log4jContextFactory
       8: ifeq          21
      11: aload_0
      12: checkcast     #70                 // class org/apache/logging/log4j/core/impl/Log4jContextFactory
      15: invokevirtual #71                 // Method org/apache/logging/log4j/core/impl/Log4jContextFactory.getSelector:()Lorg/apache/logging/log4j/core/selector/ContextSelector;
      18: astore_1
      19: aload_1
      20: areturn
      21: aconst_null
      22: areturn

  public static void unregisterLoggerContext(java.lang.String);
    Code:
       0: invokestatic  #21                 // Method isJmxDisabled:()Z
       3: ifeq          15
       6: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       9: ldc           #58                 // String JMX disabled for Log4j2. Not unregistering MBeans.
      11: invokevirtual #24                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;)V
      14: return
      15: invokestatic  #25                 // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
      18: astore_1
      19: aload_0
      20: aload_1
      21: invokestatic  #41                 // Method unregisterLoggerContext:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      24: return

  public static void unregisterLoggerContext(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #73                 // String org.apache.logging.log4j2:type=%s
       2: iconst_2
       3: anewarray     #74                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #60                 // String *
      17: aastore
      18: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: astore_2
      22: aload_2
      23: aload_1
      24: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      27: aload_0
      28: aload_1
      29: invokestatic  #61                 // Method unregisterStatusLogger:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      32: aload_0
      33: aload_1
      34: invokestatic  #62                 // Method unregisterContextSelector:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      37: aload_0
      38: aload_1
      39: invokestatic  #64                 // Method unregisterLoggerConfigs:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      42: aload_0
      43: aload_1
      44: invokestatic  #67                 // Method unregisterAppenders:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      47: aload_0
      48: aload_1
      49: invokestatic  #68                 // Method unregisterAsyncAppenders:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      52: aload_0
      53: aload_1
      54: invokestatic  #65                 // Method unregisterAsyncLoggerRingBufferAdmins:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      57: aload_0
      58: aload_1
      59: invokestatic  #66                 // Method unregisterAsyncLoggerConfigRingBufferAdmins:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      62: return

  private static void registerStatusLogger(java.lang.String, javax.management.MBeanServer, java.util.concurrent.Executor) throws javax.management.InstanceAlreadyExistsException, javax.management.MBeanRegistrationException, javax.management.NotCompliantMBeanException;
    Code:
       0: new           #78                 // class org/apache/logging/log4j/core/jmx/StatusLoggerAdmin
       3: dup
       4: aload_0
       5: aload_2
       6: invokespecial #79                 // Method org/apache/logging/log4j/core/jmx/StatusLoggerAdmin."<init>":(Ljava/lang/String;Ljava/util/concurrent/Executor;)V
       9: astore_3
      10: aload_1
      11: aload_3
      12: aload_3
      13: invokevirtual #80                 // Method org/apache/logging/log4j/core/jmx/StatusLoggerAdmin.getObjectName:()Ljavax/management/ObjectName;
      16: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      19: return

  private static void registerContextSelector(java.lang.String, org.apache.logging.log4j.core.selector.ContextSelector, javax.management.MBeanServer, java.util.concurrent.Executor) throws javax.management.InstanceAlreadyExistsException, javax.management.MBeanRegistrationException, javax.management.NotCompliantMBeanException;
    Code:
       0: new           #81                 // class org/apache/logging/log4j/core/jmx/ContextSelectorAdmin
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #82                 // Method org/apache/logging/log4j/core/jmx/ContextSelectorAdmin."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/selector/ContextSelector;)V
       9: astore        4
      11: aload_2
      12: aload         4
      14: aload         4
      16: invokevirtual #83                 // Method org/apache/logging/log4j/core/jmx/ContextSelectorAdmin.getObjectName:()Ljavax/management/ObjectName;
      19: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      22: return

  private static void unregisterStatusLogger(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #85                 // String org.apache.logging.log4j2:type=%s,component=StatusLogger
       2: iconst_2
       3: anewarray     #74                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #60                 // String *
      17: aastore
      18: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: astore_2
      22: aload_2
      23: aload_1
      24: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      27: return

  private static void unregisterContextSelector(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #87                 // String org.apache.logging.log4j2:type=%s,component=ContextSelector
       2: iconst_2
       3: anewarray     #74                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #60                 // String *
      17: aastore
      18: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: astore_2
      22: aload_2
      23: aload_1
      24: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      27: return

  private static void unregisterLoggerConfigs(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #89                 // String org.apache.logging.log4j2:type=%s,component=Loggers,name=%s
       2: astore_2
       3: ldc           #89                 // String org.apache.logging.log4j2:type=%s,component=Loggers,name=%s
       5: iconst_2
       6: anewarray     #74                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #60                 // String *
      20: aastore
      21: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      30: return

  private static void unregisterContexts(javax.management.MBeanServer);
    Code:
       0: ldc           #73                 // String org.apache.logging.log4j2:type=%s
       2: astore_1
       3: ldc           #73                 // String org.apache.logging.log4j2:type=%s
       5: iconst_1
       6: anewarray     #74                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: ldc           #60                 // String *
      13: aastore
      14: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: astore_2
      18: aload_2
      19: aload_0
      20: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      23: return

  private static void unregisterAppenders(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #91                 // String org.apache.logging.log4j2:type=%s,component=Appenders,name=%s
       2: astore_2
       3: ldc           #91                 // String org.apache.logging.log4j2:type=%s,component=Appenders,name=%s
       5: iconst_2
       6: anewarray     #74                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #60                 // String *
      20: aastore
      21: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      30: return

  private static void unregisterAsyncAppenders(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #93                 // String org.apache.logging.log4j2:type=%s,component=AsyncAppenders,name=%s
       2: astore_2
       3: ldc           #93                 // String org.apache.logging.log4j2:type=%s,component=AsyncAppenders,name=%s
       5: iconst_2
       6: anewarray     #74                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #60                 // String *
      20: aastore
      21: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      30: return

  private static void unregisterAsyncLoggerRingBufferAdmins(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #95                 // String org.apache.logging.log4j2:type=%s,component=AsyncLoggerRingBuffer
       2: astore_2
       3: ldc           #95                 // String org.apache.logging.log4j2:type=%s,component=AsyncLoggerRingBuffer
       5: iconst_1
       6: anewarray     #74                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      15: aastore
      16: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: astore_3
      20: aload_3
      21: aload_1
      22: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      25: return

  private static void unregisterAsyncLoggerConfigRingBufferAdmins(java.lang.String, javax.management.MBeanServer);
    Code:
       0: ldc           #96                 // String org.apache.logging.log4j2:type=%s,component=Loggers,name=%s,subtype=RingBuffer
       2: astore_2
       3: ldc           #96                 // String org.apache.logging.log4j2:type=%s,component=Loggers,name=%s,subtype=RingBuffer
       5: iconst_2
       6: anewarray     #74                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: aload_0
      12: invokestatic  #75                 // Method escape:(Ljava/lang/String;)Ljava/lang/String;
      15: aastore
      16: dup
      17: iconst_1
      18: ldc           #60                 // String *
      20: aastore
      21: invokestatic  #76                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: aload_1
      27: invokestatic  #77                 // Method unregisterAllMatching:(Ljava/lang/String;Ljavax/management/MBeanServer;)V
      30: return

  private static void unregisterAllMatching(java.lang.String, javax.management.MBeanServer);
    Code:
       0: new           #97                 // class javax/management/ObjectName
       3: dup
       4: aload_0
       5: invokespecial #98                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: aconst_null
      12: invokeinterface #99,  3           // InterfaceMethod javax/management/MBeanServer.queryNames:(Ljavax/management/ObjectName;Ljavax/management/QueryExp;)Ljava/util/Set;
      17: astore_3
      18: aload_3
      19: ifnull        31
      22: aload_3
      23: invokeinterface #100,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      28: ifeq          43
      31: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      34: ldc           #101                // String Unregistering but no MBeans found matching \'{}\'
      36: aload_0
      37: invokevirtual #30                 // Method org/apache/logging/log4j/status/StatusLogger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      40: goto          61
      43: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      46: ldc           #102                // String Unregistering {} MBeans: {}
      48: aload_3
      49: invokeinterface #103,  1          // InterfaceMethod java/util/Set.size:()I
      54: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: aload_3
      58: invokevirtual #104                // Method org/apache/logging/log4j/status/StatusLogger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      61: aload_3
      62: ifnull        106
      65: aload_3
      66: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      71: astore        4
      73: aload         4
      75: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      80: ifeq          106
      83: aload         4
      85: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      90: checkcast     #97                 // class javax/management/ObjectName
      93: astore        5
      95: aload_1
      96: aload         5
      98: invokeinterface #106,  2          // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
     103: goto          73
     106: goto          174
     109: astore_2
     110: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     113: new           #10                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #109                // String Could not unregister MBeans for
     122: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #110                // String . Ignoring
     131: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_2
     135: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokevirtual #24                 // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;)V
     144: goto          174
     147: astore_2
     148: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     151: new           #10                 // class java/lang/StringBuilder
     154: dup
     155: invokespecial #108                // Method java/lang/StringBuilder."<init>":()V
     158: ldc           #109                // String Could not unregister MBeans for
     160: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: aload_0
     164: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     170: aload_2
     171: invokevirtual #57                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     174: return
    Exception table:
       from    to  target type
           0   106   109   Class javax/management/InstanceNotFoundException
           0   106   147   Class java/lang/Exception

  private static void registerLoggerConfigs(org.apache.logging.log4j.core.LoggerContext, javax.management.MBeanServer, java.util.concurrent.Executor) throws javax.management.InstanceAlreadyExistsException, javax.management.MBeanRegistrationException, javax.management.NotCompliantMBeanException;
    Code:
       0: aload_0
       1: invokevirtual #112                // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
       4: invokeinterface #113,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getLoggers:()Ljava/util/Map;
       9: astore_3
      10: aload_3
      11: invokeinterface #114,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      16: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          121
      33: aload         4
      35: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #115                // class java/lang/String
      43: astore        5
      45: aload_3
      46: aload         5
      48: invokeinterface #116,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #117                // class org/apache/logging/log4j/core/config/LoggerConfig
      56: astore        6
      58: new           #118                // class org/apache/logging/log4j/core/jmx/LoggerConfigAdmin
      61: dup
      62: aload_0
      63: aload         6
      65: invokespecial #119                // Method org/apache/logging/log4j/core/jmx/LoggerConfigAdmin."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Lorg/apache/logging/log4j/core/config/LoggerConfig;)V
      68: astore        7
      70: aload_1
      71: aload         7
      73: aload         7
      75: invokevirtual #120                // Method org/apache/logging/log4j/core/jmx/LoggerConfigAdmin.getObjectName:()Ljavax/management/ObjectName;
      78: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      81: aload         6
      83: instanceof    #121                // class org/apache/logging/log4j/core/async/AsyncLoggerConfig
      86: ifeq          118
      89: aload         6
      91: checkcast     #121                // class org/apache/logging/log4j/core/async/AsyncLoggerConfig
      94: astore        8
      96: aload         8
      98: aload_0
      99: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     102: invokevirtual #122                // Method org/apache/logging/log4j/core/async/AsyncLoggerConfig.createRingBufferAdmin:(Ljava/lang/String;)Lorg/apache/logging/log4j/core/jmx/RingBufferAdmin;
     105: astore        9
     107: aload_1
     108: aload         9
     110: aload         9
     112: invokevirtual #50                 // Method org/apache/logging/log4j/core/jmx/RingBufferAdmin.getObjectName:()Ljavax/management/ObjectName;
     115: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
     118: goto          23
     121: return

  private static void registerAppenders(org.apache.logging.log4j.core.LoggerContext, javax.management.MBeanServer, java.util.concurrent.Executor) throws javax.management.InstanceAlreadyExistsException, javax.management.MBeanRegistrationException, javax.management.NotCompliantMBeanException;
    Code:
       0: aload_0
       1: invokevirtual #112                // Method org/apache/logging/log4j/core/LoggerContext.getConfiguration:()Lorg/apache/logging/log4j/core/config/Configuration;
       4: invokeinterface #123,  1          // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getAppenders:()Ljava/util/Map;
       9: astore_3
      10: aload_3
      11: invokeinterface #114,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      16: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: invokeinterface #33,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          131
      33: aload         4
      35: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #115                // class java/lang/String
      43: astore        5
      45: aload_3
      46: aload         5
      48: invokeinterface #116,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      53: checkcast     #124                // class org/apache/logging/log4j/core/Appender
      56: astore        6
      58: aload         6
      60: instanceof    #125                // class org/apache/logging/log4j/core/appender/AsyncAppender
      63: ifeq          102
      66: aload         6
      68: checkcast     #125                // class org/apache/logging/log4j/core/appender/AsyncAppender
      71: astore        7
      73: new           #126                // class org/apache/logging/log4j/core/jmx/AsyncAppenderAdmin
      76: dup
      77: aload_0
      78: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
      81: aload         7
      83: invokespecial #127                // Method org/apache/logging/log4j/core/jmx/AsyncAppenderAdmin."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/appender/AsyncAppender;)V
      86: astore        8
      88: aload_1
      89: aload         8
      91: aload         8
      93: invokevirtual #128                // Method org/apache/logging/log4j/core/jmx/AsyncAppenderAdmin.getObjectName:()Ljavax/management/ObjectName;
      96: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
      99: goto          128
     102: new           #129                // class org/apache/logging/log4j/core/jmx/AppenderAdmin
     105: dup
     106: aload_0
     107: invokevirtual #39                 // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
     110: aload         6
     112: invokespecial #130                // Method org/apache/logging/log4j/core/jmx/AppenderAdmin."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Appender;)V
     115: astore        7
     117: aload_1
     118: aload         7
     120: aload         7
     122: invokevirtual #131                // Method org/apache/logging/log4j/core/jmx/AppenderAdmin.getObjectName:()Ljavax/management/ObjectName;
     125: invokestatic  #46                 // Method register:(Ljavax/management/MBeanServer;Ljava/lang/Object;Ljavax/management/ObjectName;)V
     128: goto          23
     131: return

  private static void register(javax.management.MBeanServer, java.lang.Object, javax.management.ObjectName) throws javax.management.InstanceAlreadyExistsException, javax.management.MBeanRegistrationException, javax.management.NotCompliantMBeanException;
    Code:
       0: aload_0
       1: aload_2
       2: invokeinterface #132,  2          // InterfaceMethod javax/management/MBeanServer.isRegistered:(Ljavax/management/ObjectName;)Z
       7: ifeq          30
      10: aload_0
      11: aload_2
      12: invokeinterface #106,  2          // InterfaceMethod javax/management/MBeanServer.unregisterMBean:(Ljavax/management/ObjectName;)V
      17: goto          30
      20: astore_3
      21: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      24: ldc           #134                // String Failed to unregister MBean {}
      26: aload_2
      27: invokevirtual #30                 // Method org/apache/logging/log4j/status/StatusLogger.trace:(Ljava/lang/String;Ljava/lang/Object;)V
      30: getstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      33: ldc           #135                // String Registering MBean {}
      35: aload_2
      36: invokevirtual #136                // Method org/apache/logging/log4j/status/StatusLogger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      39: aload_0
      40: aload_1
      41: aload_2
      42: invokeinterface #137,  3          // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      47: pop
      48: return
    Exception table:
       from    to  target type
          10    17    20   Class javax/management/MBeanRegistrationException
          10    17    20   Class javax/management/InstanceNotFoundException

  static {};
    Code:
       0: invokestatic  #138                // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #22                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       6: invokestatic  #21                 // Method isJmxDisabled:()Z
       9: ifeq          16
      12: aconst_null
      13: goto          19
      16: invokestatic  #139                // Method createExecutor:()Ljava/util/concurrent/ExecutorService;
      19: putstatic     #43                 // Field executor:Ljava/util/concurrent/Executor;
      22: return
}
