Compiled from "IfAccumulatedFileSize.java"
public final class org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize implements org.apache.logging.log4j.core.appender.rolling.action.PathCondition {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private final long thresholdBytes;

  private long accumulatedSize;

  private final org.apache.logging.log4j.core.appender.rolling.action.PathCondition[] nestedConditions;

  private org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize(long, org.apache.logging.log4j.core.appender.rolling.action.PathCondition...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: lload_1
       5: lconst_0
       6: lcmp
       7: ifgt          37
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #3                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #5                  // String Count must be a positive integer but was
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: lload_1
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      30: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_0
      38: lload_1
      39: putfield      #10                 // Field thresholdBytes:J
      42: aload_0
      43: aload_3
      44: invokestatic  #11                 // InterfaceMethod org/apache/logging/log4j/core/appender/rolling/action/PathCondition.copy:([Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;)[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
      47: putfield      #12                 // Field nestedConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
      50: return

  public long getThresholdBytes();
    Code:
       0: aload_0
       1: getfield      #10                 // Field thresholdBytes:J
       4: lreturn

  public java.util.List<org.apache.logging.log4j.core.appender.rolling.action.PathCondition> getNestedConditions();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nestedConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
       4: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: invokestatic  #14                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      10: areturn

  public boolean accept(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);
    Code:
       0: aload_0
       1: dup
       2: getfield      #15                 // Field accumulatedSize:J
       5: aload_3
       6: invokeinterface #16,  1           // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.size:()J
      11: ladd
      12: putfield      #15                 // Field accumulatedSize:J
      15: aload_0
      16: getfield      #15                 // Field accumulatedSize:J
      19: aload_0
      20: getfield      #10                 // Field thresholdBytes:J
      23: lcmp
      24: ifle          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: istore        4
      34: iload         4
      36: ifeq          44
      39: ldc           #17                 // String >
      41: goto          46
      44: ldc           #18                 // String <=
      46: astore        5
      48: iload         4
      50: ifeq          58
      53: ldc           #19                 // String ACCEPTED
      55: goto          60
      58: ldc           #20                 // String REJECTED
      60: astore        6
      62: getstatic     #21                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      65: ldc           #22                 // String IfAccumulatedFileSize {}: {} accumulated size \'{}\' {} thresholdBytes \'{}\'
      67: aload         6
      69: aload_2
      70: aload_0
      71: getfield      #15                 // Field accumulatedSize:J
      74: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      77: aload         5
      79: aload_0
      80: getfield      #10                 // Field thresholdBytes:J
      83: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      86: invokeinterface #24,  7           // InterfaceMethod org/apache/logging/log4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      91: iload         4
      93: ifeq          107
      96: aload_0
      97: getfield      #12                 // Field nestedConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
     100: aload_1
     101: aload_2
     102: aload_3
     103: invokestatic  #25                 // Method org/apache/logging/log4j/core/appender/rolling/action/IfAll.accept:([Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z
     106: ireturn
     107: iload         4
     109: ireturn

  public void beforeFileTreeWalk();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #15                 // Field accumulatedSize:J
       5: aload_0
       6: getfield      #12                 // Field nestedConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
       9: invokestatic  #26                 // Method org/apache/logging/log4j/core/appender/rolling/action/IfAll.beforeFileTreeWalk:([Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;)V
      12: return

  public static org.apache.logging.log4j.core.appender.rolling.action.IfAccumulatedFileSize createFileSizeCondition(java.lang.String, org.apache.logging.log4j.core.appender.rolling.action.PathCondition...);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: getstatic     #21                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #27                 // String IfAccumulatedFileSize missing mandatory size threshold.
       9: invokeinterface #28,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: aload_0
      15: ifnonnull     24
      18: ldc2_w        #30                 // long 9223372036854775807l
      21: goto          31
      24: aload_0
      25: ldc2_w        #30                 // long 9223372036854775807l
      28: invokestatic  #32                 // Method org/apache/logging/log4j/core/appender/rolling/FileSize.parse:(Ljava/lang/String;J)J
      31: lstore_2
      32: new           #33                 // class org/apache/logging/log4j/core/appender/rolling/action/IfAccumulatedFileSize
      35: dup
      36: lload_2
      37: aload_1
      38: invokespecial #34                 // Method "<init>":(J[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;)V
      41: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #12                 // Field nestedConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
       4: arraylength
       5: ifne          13
       8: ldc           #35                 // String
      10: goto          38
      13: new           #3                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #36                 // String  AND
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #12                 // Field nestedConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
      29: invokestatic  #37                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: astore_1
      39: new           #3                  // class java/lang/StringBuilder
      42: dup
      43: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #38                 // String IfAccumulatedFileSize(exceeds=
      48: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: getfield      #10                 // Field thresholdBytes:J
      55: invokevirtual #7                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #39                 // String )
      64: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn

  static {};
    Code:
       0: invokestatic  #40                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #21                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: return
}
