Compiled from "LoggerConfigAdmin.java"
public class org.apache.logging.log4j.core.jmx.LoggerConfigAdmin implements org.apache.logging.log4j.core.jmx.LoggerConfigAdminMBean {
  private final org.apache.logging.log4j.core.LoggerContext loggerContext;

  private final org.apache.logging.log4j.core.config.LoggerConfig loggerConfig;

  private final javax.management.ObjectName objectName;

  public org.apache.logging.log4j.core.jmx.LoggerConfigAdmin(org.apache.logging.log4j.core.LoggerContext, org.apache.logging.log4j.core.config.LoggerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String loggerContext
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class org/apache/logging/log4j/core/LoggerContext
      14: putfield      #5                  // Field loggerContext:Lorg/apache/logging/log4j/core/LoggerContext;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String loggerConfig
      21: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class org/apache/logging/log4j/core/config/LoggerConfig
      27: putfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      30: aload_1
      31: invokevirtual #9                  // Method org/apache/logging/log4j/core/LoggerContext.getName:()Ljava/lang/String;
      34: invokestatic  #10                 // Method org/apache/logging/log4j/core/jmx/Server.escape:(Ljava/lang/String;)Ljava/lang/String;
      37: astore_3
      38: aload_2
      39: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getName:()Ljava/lang/String;
      42: invokestatic  #10                 // Method org/apache/logging/log4j/core/jmx/Server.escape:(Ljava/lang/String;)Ljava/lang/String;
      45: astore        4
      47: ldc           #13                 // String org.apache.logging.log4j2:type=%s,component=Loggers,name=%s
      49: iconst_2
      50: anewarray     #14                 // class java/lang/Object
      53: dup
      54: iconst_0
      55: aload_3
      56: aastore
      57: dup
      58: iconst_1
      59: aload         4
      61: aastore
      62: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      65: astore        5
      67: aload_0
      68: new           #16                 // class javax/management/ObjectName
      71: dup
      72: aload         5
      74: invokespecial #17                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      77: putfield      #18                 // Field objectName:Ljavax/management/ObjectName;
      80: goto          93
      83: astore_3
      84: new           #20                 // class java/lang/IllegalStateException
      87: dup
      88: aload_3
      89: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      92: athrow
      93: return
    Exception table:
       from    to  target type
          30    80    83   Class java/lang/Exception

  public javax.management.ObjectName getObjectName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field objectName:Ljavax/management/ObjectName;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: invokevirtual #11                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getLevel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: invokevirtual #22                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getLevel:()Lorg/apache/logging/log4j/Level;
       7: invokevirtual #23                 // Method org/apache/logging/log4j/Level.name:()Ljava/lang/String;
      10: areturn

  public void setLevel(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: aload_1
       5: invokestatic  #24                 // Method org/apache/logging/log4j/Level.getLevel:(Ljava/lang/String;)Lorg/apache/logging/log4j/Level;
       8: invokevirtual #25                 // Method org/apache/logging/log4j/core/config/LoggerConfig.setLevel:(Lorg/apache/logging/log4j/Level;)V
      11: aload_0
      12: getfield      #5                  // Field loggerContext:Lorg/apache/logging/log4j/core/LoggerContext;
      15: invokevirtual #26                 // Method org/apache/logging/log4j/core/LoggerContext.updateLoggers:()V
      18: return

  public boolean isAdditive();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: invokevirtual #27                 // Method org/apache/logging/log4j/core/config/LoggerConfig.isAdditive:()Z
       7: ireturn

  public void setAdditive(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: iload_1
       5: invokevirtual #28                 // Method org/apache/logging/log4j/core/config/LoggerConfig.setAdditive:(Z)V
       8: aload_0
       9: getfield      #5                  // Field loggerContext:Lorg/apache/logging/log4j/core/LoggerContext;
      12: invokevirtual #26                 // Method org/apache/logging/log4j/core/LoggerContext.updateLoggers:()V
      15: return

  public boolean isIncludeLocation();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: invokevirtual #29                 // Method org/apache/logging/log4j/core/config/LoggerConfig.isIncludeLocation:()Z
       7: ireturn

  public java.lang.String getFilter();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: invokevirtual #30                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getFilter:()Lorg/apache/logging/log4j/core/Filter;
       7: invokestatic  #31                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      10: areturn

  public java.lang.String[] getAppenderRefs();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: invokevirtual #32                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getAppenderRefs:()Ljava/util/List;
       7: astore_1
       8: aload_1
       9: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      14: anewarray     #34                 // class java/lang/String
      17: astore_2
      18: iconst_0
      19: istore_3
      20: iload_3
      21: aload_2
      22: arraylength
      23: if_icmpge     48
      26: aload_2
      27: iload_3
      28: aload_1
      29: iload_3
      30: invokeinterface #35,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      35: checkcast     #36                 // class org/apache/logging/log4j/core/config/AppenderRef
      38: invokevirtual #37                 // Method org/apache/logging/log4j/core/config/AppenderRef.getRef:()Ljava/lang/String;
      41: aastore
      42: iinc          3, 1
      45: goto          20
      48: aload_2
      49: areturn
}
