Compiled from "ConfigurationBuilder.java"
public interface org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T extends org.apache.logging.log4j.core.config.Configuration> extends org.apache.logging.log4j.core.util.Builder<T> {
  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> add(org.apache.logging.log4j.core.config.builder.api.ScriptComponentBuilder);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> add(org.apache.logging.log4j.core.config.builder.api.ScriptFileComponentBuilder);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> add(org.apache.logging.log4j.core.config.builder.api.AppenderComponentBuilder);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> add(org.apache.logging.log4j.core.config.builder.api.CustomLevelComponentBuilder);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> add(org.apache.logging.log4j.core.config.builder.api.FilterComponentBuilder);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> add(org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> add(org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> addProperty(java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ScriptComponentBuilder newScript(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ScriptFileComponentBuilder newScriptFile(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ScriptFileComponentBuilder newScriptFile(java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.AppenderComponentBuilder newAppender(java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.AppenderRefComponentBuilder newAppenderRef(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newAsyncLogger(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newAsyncLogger(java.lang.String, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newAsyncLogger(java.lang.String, org.apache.logging.log4j.Level);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newAsyncLogger(java.lang.String, org.apache.logging.log4j.Level, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newAsyncLogger(java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newAsyncLogger(java.lang.String, java.lang.String, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newAsyncRootLogger();

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newAsyncRootLogger(boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newAsyncRootLogger(org.apache.logging.log4j.Level);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newAsyncRootLogger(org.apache.logging.log4j.Level, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newAsyncRootLogger(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newAsyncRootLogger(java.lang.String, boolean);

  public abstract <B extends org.apache.logging.log4j.core.config.builder.api.ComponentBuilder<B>> org.apache.logging.log4j.core.config.builder.api.ComponentBuilder<B> newComponent(java.lang.String);

  public abstract <B extends org.apache.logging.log4j.core.config.builder.api.ComponentBuilder<B>> org.apache.logging.log4j.core.config.builder.api.ComponentBuilder<B> newComponent(java.lang.String, java.lang.String);

  public abstract <B extends org.apache.logging.log4j.core.config.builder.api.ComponentBuilder<B>> org.apache.logging.log4j.core.config.builder.api.ComponentBuilder<B> newComponent(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.PropertyComponentBuilder newProperty(java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.KeyValuePairComponentBuilder newKeyValuePair(java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.CustomLevelComponentBuilder newCustomLevel(java.lang.String, int);

  public abstract org.apache.logging.log4j.core.config.builder.api.FilterComponentBuilder newFilter(java.lang.String, org.apache.logging.log4j.core.Filter$Result, org.apache.logging.log4j.core.Filter$Result);

  public abstract org.apache.logging.log4j.core.config.builder.api.FilterComponentBuilder newFilter(java.lang.String, java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.LayoutComponentBuilder newLayout(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newLogger(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newLogger(java.lang.String, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newLogger(java.lang.String, org.apache.logging.log4j.Level);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newLogger(java.lang.String, org.apache.logging.log4j.Level, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newLogger(java.lang.String, java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.LoggerComponentBuilder newLogger(java.lang.String, java.lang.String, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newRootLogger();

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newRootLogger(boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newRootLogger(org.apache.logging.log4j.Level);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newRootLogger(org.apache.logging.log4j.Level, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newRootLogger(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.RootLoggerComponentBuilder newRootLogger(java.lang.String, boolean);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setAdvertiser(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setConfigurationName(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setConfigurationSource(org.apache.logging.log4j.core.config.ConfigurationSource);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setMonitorInterval(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setPackages(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setShutdownHook(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setShutdownTimeout(long, java.util.concurrent.TimeUnit);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setStatusLevel(org.apache.logging.log4j.Level);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setVerbosity(java.lang.String);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> setDestination(java.lang.String);

  public abstract void setLoggerContext(org.apache.logging.log4j.core.LoggerContext);

  public abstract org.apache.logging.log4j.core.config.builder.api.ConfigurationBuilder<T> addRootProperty(java.lang.String, java.lang.String);

  public abstract T build(boolean);

  public abstract void writeXmlConfiguration(java.io.OutputStream) throws java.io.IOException;

  public abstract java.lang.String toXmlConfiguration();
}
