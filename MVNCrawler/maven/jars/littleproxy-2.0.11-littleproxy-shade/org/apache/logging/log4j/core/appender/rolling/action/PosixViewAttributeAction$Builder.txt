Compiled from "PosixViewAttributeAction.java"
public class org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction> {
  private org.apache.logging.log4j.core.config.Configuration configuration;

  private org.apache.logging.log4j.core.lookup.StrSubstitutor subst;

  private java.lang.String basePath;

  private boolean followLinks;

  private int maxDepth;

  private org.apache.logging.log4j.core.appender.rolling.action.PathCondition[] pathConditions;

  private java.lang.String filePermissionsString;

  private java.util.Set<java.nio.file.attribute.PosixFilePermission> filePermissions;

  private java.lang.String fileOwner;

  private java.lang.String fileGroup;

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field followLinks:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field maxDepth:I
      14: return

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction build();
    Code:
       0: aload_0
       1: getfield      #4                  // Field basePath:Ljava/lang/String;
       4: invokestatic  #5                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       7: ifeq          22
      10: getstatic     #6                  // Field org/apache/logging/log4j/core/appender/rolling/action/AbstractAction.LOGGER:Lorg/apache/logging/log4j/Logger;
      13: ldc           #7                  // String Posix file attribute view action not valid because base path is empty.
      15: invokeinterface #8,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      20: aconst_null
      21: areturn
      22: aload_0
      23: getfield      #9                  // Field filePermissions:Ljava/util/Set;
      26: ifnonnull     71
      29: aload_0
      30: getfield      #10                 // Field filePermissionsString:Ljava/lang/String;
      33: invokestatic  #5                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
      36: ifeq          71
      39: aload_0
      40: getfield      #11                 // Field fileOwner:Ljava/lang/String;
      43: invokestatic  #5                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
      46: ifeq          71
      49: aload_0
      50: getfield      #12                 // Field fileGroup:Ljava/lang/String;
      53: invokestatic  #5                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
      56: ifeq          71
      59: getstatic     #6                  // Field org/apache/logging/log4j/core/appender/rolling/action/AbstractAction.LOGGER:Lorg/apache/logging/log4j/Logger;
      62: ldc           #13                 // String Posix file attribute view not valid because nor permissions, user or group defined.
      64: invokeinterface #8,  2            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      69: aconst_null
      70: areturn
      71: invokestatic  #14                 // Method org/apache/logging/log4j/core/util/FileUtils.isFilePosixAttributeViewSupported:()Z
      74: ifne          89
      77: getstatic     #6                  // Field org/apache/logging/log4j/core/appender/rolling/action/AbstractAction.LOGGER:Lorg/apache/logging/log4j/Logger;
      80: ldc           #15                 // String Posix file attribute view defined but it is not supported by this files system.
      82: invokeinterface #16,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
      87: aconst_null
      88: areturn
      89: new           #17                 // class org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction
      92: dup
      93: aload_0
      94: getfield      #4                  // Field basePath:Ljava/lang/String;
      97: aload_0
      98: getfield      #2                  // Field followLinks:Z
     101: aload_0
     102: getfield      #3                  // Field maxDepth:I
     105: aload_0
     106: getfield      #18                 // Field pathConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
     109: aload_0
     110: getfield      #19                 // Field subst:Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
     113: ifnull        123
     116: aload_0
     117: getfield      #19                 // Field subst:Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
     120: goto          132
     123: aload_0
     124: getfield      #20                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
     127: invokeinterface #21,  1           // InterfaceMethod org/apache/logging/log4j/core/config/Configuration.getStrSubstitutor:()Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
     132: aload_0
     133: getfield      #9                  // Field filePermissions:Ljava/util/Set;
     136: ifnull        146
     139: aload_0
     140: getfield      #9                  // Field filePermissions:Ljava/util/Set;
     143: goto          164
     146: aload_0
     147: getfield      #10                 // Field filePermissionsString:Ljava/lang/String;
     150: ifnull        163
     153: aload_0
     154: getfield      #10                 // Field filePermissionsString:Ljava/lang/String;
     157: invokestatic  #22                 // Method java/nio/file/attribute/PosixFilePermissions.fromString:(Ljava/lang/String;)Ljava/util/Set;
     160: goto          164
     163: aconst_null
     164: aload_0
     165: getfield      #11                 // Field fileOwner:Ljava/lang/String;
     168: aload_0
     169: getfield      #12                 // Field fileGroup:Ljava/lang/String;
     172: aconst_null
     173: invokespecial #23                 // Method org/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction."<init>":(Ljava/lang/String;ZI[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction$1;)V
     176: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field configuration:Lorg/apache/logging/log4j/core/config/Configuration;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withSubst(org.apache.logging.log4j.core.lookup.StrSubstitutor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field subst:Lorg/apache/logging/log4j/core/lookup/StrSubstitutor;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withBasePath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field basePath:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withFollowLinks(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field followLinks:Z
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withMaxDepth(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field maxDepth:I
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withPathConditions(org.apache.logging.log4j.core.appender.rolling.action.PathCondition[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field pathConditions:[Lorg/apache/logging/log4j/core/appender/rolling/action/PathCondition;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withFilePermissionsString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field filePermissionsString:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withFilePermissions(java.util.Set<java.nio.file.attribute.PosixFilePermission>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field filePermissions:Ljava/util/Set;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withFileOwner(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field fileOwner:Ljava/lang/String;
       5: aload_0
       6: areturn

  public org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction$Builder withFileGroup(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field fileGroup:Ljava/lang/String;
       5: aload_0
       6: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method build:()Lorg/apache/logging/log4j/core/appender/rolling/action/PosixViewAttributeAction;
       4: areturn
}
