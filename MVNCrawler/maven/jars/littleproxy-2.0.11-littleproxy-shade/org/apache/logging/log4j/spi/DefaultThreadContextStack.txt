Compiled from "DefaultThreadContextStack.java"
public class org.apache.logging.log4j.spi.DefaultThreadContextStack implements org.apache.logging.log4j.spi.ThreadContextStack,org.apache.logging.log4j.util.StringBuilderFormattable {
  private static final java.lang.Object[] EMPTY_OBJECT_ARRAY;

  private static final long serialVersionUID;

  private static final java.lang.ThreadLocal<org.apache.logging.log4j.spi.MutableThreadContextStack> STACK;

  private final boolean useStack;

  public org.apache.logging.log4j.spi.DefaultThreadContextStack(boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field useStack:Z
       9: return

  private org.apache.logging.log4j.spi.MutableThreadContextStack getNonNullStackCopy();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnonnull     24
      14: new           #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      17: dup
      18: invokespecial #6                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack."<init>":()V
      21: goto          28
      24: aload_1
      25: invokevirtual #7                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
      28: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      31: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      34: areturn

  public boolean add(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field useStack:Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: invokespecial #8                  // Method getNonNullStackCopy:()Lorg/apache/logging/log4j/spi/MutableThreadContextStack;
      13: astore_2
      14: aload_2
      15: aload_1
      16: invokevirtual #9                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.add:(Ljava/lang/String;)Z
      19: pop
      20: aload_2
      21: invokevirtual #10                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.freeze:()V
      24: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      27: aload_2
      28: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      31: iconst_1
      32: ireturn

  public boolean addAll(java.util.Collection<? extends java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field useStack:Z
       4: ifeq          16
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: invokespecial #8                  // Method getNonNullStackCopy:()Lorg/apache/logging/log4j/spi/MutableThreadContextStack;
      22: astore_2
      23: aload_2
      24: aload_1
      25: invokevirtual #13                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: aload_2
      30: invokevirtual #10                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.freeze:()V
      33: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      36: aload_2
      37: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      40: iconst_1
      41: ireturn

  public java.util.List<java.lang.String> asList();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: invokestatic  #14                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      17: areturn
      18: aload_1
      19: invokevirtual #15                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.asList:()Ljava/util/List;
      22: areturn

  public void clear();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #16                 // Method java/lang/ThreadLocal.remove:()V
       6: return

  public boolean contains(java.lang.Object);
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_2
      10: aload_2
      11: ifnull        26
      14: aload_2
      15: aload_1
      16: invokevirtual #17                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.contains:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       6: ifeq          11
       9: iconst_1
      10: ireturn
      11: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      14: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      17: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      20: astore_2
      21: aload_2
      22: ifnull        37
      25: aload_2
      26: aload_1
      27: invokevirtual #18                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.containsAll:(Ljava/util/Collection;)Z
      30: ifeq          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn

  public org.apache.logging.log4j.spi.ThreadContextStack copy();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #2                  // Field useStack:Z
       6: ifeq          23
       9: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      12: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      15: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      18: dup
      19: astore_1
      20: ifnonnull     31
      23: new           #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      26: dup
      27: invokespecial #6                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack."<init>":()V
      30: areturn
      31: aload_1
      32: invokevirtual #7                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
      35: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_1
      14: instanceof    #19                 // class org/apache/logging/log4j/spi/DefaultThreadContextStack
      17: ifeq          38
      20: aload_1
      21: checkcast     #19                 // class org/apache/logging/log4j/spi/DefaultThreadContextStack
      24: astore_2
      25: aload_0
      26: getfield      #2                  // Field useStack:Z
      29: aload_2
      30: getfield      #2                  // Field useStack:Z
      33: if_icmpeq     38
      36: iconst_0
      37: ireturn
      38: aload_1
      39: instanceof    #20                 // class org/apache/logging/log4j/spi/ThreadContextStack
      42: ifne          47
      45: iconst_0
      46: ireturn
      47: aload_1
      48: checkcast     #20                 // class org/apache/logging/log4j/spi/ThreadContextStack
      51: astore_2
      52: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      55: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      58: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      61: astore_3
      62: aload_3
      63: ifnonnull     68
      66: iconst_0
      67: ireturn
      68: aload_3
      69: aload_2
      70: invokevirtual #21                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.equals:(Ljava/lang/Object;)Z
      73: ireturn

  public int getDepth();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: iconst_0
      15: goto          22
      18: aload_1
      19: invokevirtual #22                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.getDepth:()I
      22: ireturn

  public int hashCode();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: bipush        31
      12: istore_2
      13: iconst_1
      14: istore_3
      15: bipush        31
      17: iload_3
      18: imul
      19: aload_1
      20: ifnonnull     27
      23: iconst_0
      24: goto          31
      27: aload_1
      28: invokevirtual #23                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.hashCode:()I
      31: iadd
      32: istore_3
      33: iload_3
      34: ireturn

  public boolean isEmpty();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnull        21
      14: aload_1
      15: invokevirtual #24                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.isEmpty:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.util.Iterator<java.lang.String> iterator();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnonnull     25
      14: invokestatic  #14                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      17: astore_2
      18: aload_2
      19: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      24: areturn
      25: aload_1
      26: invokevirtual #26                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.iterator:()Ljava/util/Iterator;
      29: areturn

  public java.lang.String peek();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnull        21
      14: aload_1
      15: invokevirtual #24                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.isEmpty:()Z
      18: ifeq          24
      21: ldc           #28                 // String
      23: areturn
      24: aload_1
      25: invokevirtual #29                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.peek:()Ljava/lang/String;
      28: areturn

  public java.lang.String pop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field useStack:Z
       4: ifne          10
       7: ldc           #28                 // String
       9: areturn
      10: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      13: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      16: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      19: astore_1
      20: aload_1
      21: ifnull        31
      24: aload_1
      25: invokevirtual #24                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.isEmpty:()Z
      28: ifeq          34
      31: ldc           #28                 // String
      33: areturn
      34: aload_1
      35: invokevirtual #7                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
      38: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      41: astore_2
      42: aload_2
      43: invokevirtual #30                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.pop:()Ljava/lang/String;
      46: astore_3
      47: aload_2
      48: invokevirtual #10                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.freeze:()V
      51: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      54: aload_2
      55: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      58: aload_3
      59: areturn

  public void push(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field useStack:Z
       4: ifne          8
       7: return
       8: aload_0
       9: aload_1
      10: invokevirtual #31                 // Method add:(Ljava/lang/String;)Z
      13: pop
      14: return

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field useStack:Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      12: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      15: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      18: astore_2
      19: aload_2
      20: ifnull        30
      23: aload_2
      24: invokevirtual #24                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.isEmpty:()Z
      27: ifeq          32
      30: iconst_0
      31: ireturn
      32: aload_2
      33: invokevirtual #7                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
      36: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      39: astore_3
      40: aload_3
      41: aload_1
      42: invokevirtual #32                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.remove:(Ljava/lang/Object;)Z
      45: istore        4
      47: aload_3
      48: invokevirtual #10                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.freeze:()V
      51: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      54: aload_3
      55: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      58: iload         4
      60: ireturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field useStack:Z
       4: ifeq          16
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      21: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      24: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      27: astore_2
      28: aload_2
      29: ifnull        39
      32: aload_2
      33: invokevirtual #24                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.isEmpty:()Z
      36: ifeq          41
      39: iconst_0
      40: ireturn
      41: aload_2
      42: invokevirtual #7                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
      45: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      48: astore_3
      49: aload_3
      50: aload_1
      51: invokevirtual #33                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.removeAll:(Ljava/util/Collection;)Z
      54: istore        4
      56: aload_3
      57: invokevirtual #10                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.freeze:()V
      60: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      63: aload_3
      64: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      67: iload         4
      69: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field useStack:Z
       4: ifeq          16
       7: aload_1
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      13: ifeq          18
      16: iconst_0
      17: ireturn
      18: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      21: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      24: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      27: astore_2
      28: aload_2
      29: ifnull        39
      32: aload_2
      33: invokevirtual #24                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.isEmpty:()Z
      36: ifeq          41
      39: iconst_0
      40: ireturn
      41: aload_2
      42: invokevirtual #7                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
      45: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      48: astore_3
      49: aload_3
      50: aload_1
      51: invokevirtual #34                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.retainAll:(Ljava/util/Collection;)Z
      54: istore        4
      56: aload_3
      57: invokevirtual #10                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.freeze:()V
      60: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      63: aload_3
      64: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      67: iload         4
      69: ireturn

  public int size();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: iconst_0
      15: goto          22
      18: aload_1
      19: invokevirtual #35                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.size:()I
      22: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnonnull     18
      14: getstatic     #36                 // Field org/apache/logging/log4j/util/Strings.EMPTY_ARRAY:[Ljava/lang/String;
      17: areturn
      18: aload_1
      19: getstatic     #37                 // Field EMPTY_OBJECT_ARRAY:[Ljava/lang/Object;
      22: invokevirtual #38                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      25: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_2
      10: aload_2
      11: ifnonnull     25
      14: aload_1
      15: arraylength
      16: ifle          23
      19: aload_1
      20: iconst_0
      21: aconst_null
      22: aastore
      23: aload_1
      24: areturn
      25: aload_2
      26: aload_1
      27: invokevirtual #38                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      30: areturn

  public java.lang.String toString();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_1
      10: aload_1
      11: ifnonnull     19
      14: ldc           #39                 // String []
      16: goto          23
      19: aload_1
      20: invokevirtual #40                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.toString:()Ljava/lang/String;
      23: areturn

  public void formatTo(java.lang.StringBuilder);
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
       9: astore_2
      10: aload_2
      11: ifnonnull     24
      14: aload_1
      15: ldc           #39                 // String []
      17: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: pop
      21: goto          29
      24: aload_1
      25: aload_2
      26: invokestatic  #42                 // Method org/apache/logging/log4j/util/StringBuilders.appendValue:(Ljava/lang/StringBuilder;Ljava/lang/Object;)V
      29: return

  public void trim(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #43                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #44                 // String Maximum stack depth cannot be negative
      10: invokespecial #45                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      17: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      20: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      23: astore_2
      24: aload_2
      25: ifnonnull     29
      28: return
      29: aload_2
      30: invokevirtual #7                  // Method org/apache/logging/log4j/spi/MutableThreadContextStack.copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
      33: checkcast     #5                  // class org/apache/logging/log4j/spi/MutableThreadContextStack
      36: astore_3
      37: aload_3
      38: iload_1
      39: invokevirtual #46                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.trim:(I)V
      42: aload_3
      43: invokevirtual #10                 // Method org/apache/logging/log4j/spi/MutableThreadContextStack.freeze:()V
      46: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      49: aload_3
      50: invokevirtual #11                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      53: return

  public org.apache.logging.log4j.ThreadContext$ContextStack getImmutableStackOrNull();
    Code:
       0: getstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
       3: invokevirtual #4                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #47                 // class org/apache/logging/log4j/ThreadContext$ContextStack
       9: areturn

  public org.apache.logging.log4j.ThreadContext$ContextStack copy();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method copy:()Lorg/apache/logging/log4j/spi/ThreadContextStack;
       4: areturn

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #49                 // class java/lang/String
       5: invokevirtual #31                 // Method add:(Ljava/lang/String;)Z
       8: ireturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #50                 // class java/lang/Object
       4: putstatic     #37                 // Field EMPTY_OBJECT_ARRAY:[Ljava/lang/Object;
       7: new           #51                 // class java/lang/ThreadLocal
      10: dup
      11: invokespecial #52                 // Method java/lang/ThreadLocal."<init>":()V
      14: putstatic     #3                  // Field STACK:Ljava/lang/ThreadLocal;
      17: return
}
