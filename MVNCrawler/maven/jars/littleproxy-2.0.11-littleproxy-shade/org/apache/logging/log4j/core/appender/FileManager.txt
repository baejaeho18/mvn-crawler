Compiled from "FileManager.java"
public class org.apache.logging.log4j.core.appender.FileManager extends org.apache.logging.log4j.core.appender.OutputStreamManager {
  private static final org.apache.logging.log4j.core.appender.FileManager$FileManagerFactory FACTORY;

  private final boolean isAppend;

  private final boolean createOnDemand;

  private final boolean isLocking;

  private final java.lang.String advertiseURI;

  private final int bufferSize;

  private final java.util.Set<java.nio.file.attribute.PosixFilePermission> filePermissions;

  private final java.lang.String fileOwner;

  private final java.lang.String fileGroup;

  private final boolean attributeViewEnabled;

  protected org.apache.logging.log4j.core.appender.FileManager(java.lang.String, java.io.OutputStream, boolean, boolean, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: aload         5
       8: aload         6
      10: iload         8
      12: iload         7
      14: newarray       byte
      16: invokestatic  #2                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      19: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/io/OutputStream;ZZLjava/lang/String;Lorg/apache/logging/log4j/core/Layout;ZLjava/nio/ByteBuffer;)V
      22: return

  protected org.apache.logging.log4j.core.appender.FileManager(java.lang.String, java.io.OutputStream, boolean, boolean, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: aload         6
       5: iload         7
       7: aload         8
       9: invokespecial #4                  // Method org/apache/logging/log4j/core/appender/OutputStreamManager."<init>":(Ljava/io/OutputStream;Ljava/lang/String;Lorg/apache/logging/log4j/core/Layout;ZLjava/nio/ByteBuffer;)V
      12: aload_0
      13: iload_3
      14: putfield      #5                  // Field isAppend:Z
      17: aload_0
      18: iconst_0
      19: putfield      #6                  // Field createOnDemand:Z
      22: aload_0
      23: iload         4
      25: putfield      #7                  // Field isLocking:Z
      28: aload_0
      29: aload         5
      31: putfield      #8                  // Field advertiseURI:Ljava/lang/String;
      34: aload_0
      35: aload         8
      37: invokevirtual #9                  // Method java/nio/ByteBuffer.capacity:()I
      40: putfield      #10                 // Field bufferSize:I
      43: aload_0
      44: aconst_null
      45: putfield      #11                 // Field filePermissions:Ljava/util/Set;
      48: aload_0
      49: aconst_null
      50: putfield      #12                 // Field fileOwner:Ljava/lang/String;
      53: aload_0
      54: aconst_null
      55: putfield      #13                 // Field fileGroup:Ljava/lang/String;
      58: aload_0
      59: iconst_0
      60: putfield      #1                  // Field attributeViewEnabled:Z
      63: return

  protected org.apache.logging.log4j.core.appender.FileManager(org.apache.logging.log4j.core.LoggerContext, java.lang.String, java.io.OutputStream, boolean, boolean, boolean, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: iload         6
       6: aload         8
       8: iload         9
      10: aload         10
      12: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/io/OutputStream;Ljava/lang/String;ZLorg/apache/logging/log4j/core/Layout;ZLjava/nio/ByteBuffer;)V
      15: aload_0
      16: iload         4
      18: putfield      #5                  // Field isAppend:Z
      21: aload_0
      22: iload         6
      24: putfield      #6                  // Field createOnDemand:Z
      27: aload_0
      28: iload         5
      30: putfield      #7                  // Field isLocking:Z
      33: aload_0
      34: aload         7
      36: putfield      #8                  // Field advertiseURI:Ljava/lang/String;
      39: aload_0
      40: aload         10
      42: invokevirtual #9                  // Method java/nio/ByteBuffer.capacity:()I
      45: putfield      #10                 // Field bufferSize:I
      48: aload_0
      49: aconst_null
      50: putfield      #11                 // Field filePermissions:Ljava/util/Set;
      53: aload_0
      54: aconst_null
      55: putfield      #12                 // Field fileOwner:Ljava/lang/String;
      58: aload_0
      59: aconst_null
      60: putfield      #13                 // Field fileGroup:Ljava/lang/String;
      63: aload_0
      64: iconst_0
      65: putfield      #1                  // Field attributeViewEnabled:Z
      68: return

  protected org.apache.logging.log4j.core.appender.FileManager(org.apache.logging.log4j.core.LoggerContext, java.lang.String, java.io.OutputStream, boolean, boolean, boolean, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, java.lang.String, java.lang.String, java.lang.String, boolean, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: aload_2
       4: iload         6
       6: aload         8
       8: iload         12
      10: aload         13
      12: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager."<init>":(Lorg/apache/logging/log4j/core/LoggerContext;Ljava/io/OutputStream;Ljava/lang/String;ZLorg/apache/logging/log4j/core/Layout;ZLjava/nio/ByteBuffer;)V
      15: aload_0
      16: iload         4
      18: putfield      #5                  // Field isAppend:Z
      21: aload_0
      22: iload         6
      24: putfield      #6                  // Field createOnDemand:Z
      27: aload_0
      28: iload         5
      30: putfield      #7                  // Field isLocking:Z
      33: aload_0
      34: aload         7
      36: putfield      #8                  // Field advertiseURI:Ljava/lang/String;
      39: aload_0
      40: aload         13
      42: invokevirtual #9                  // Method java/nio/ByteBuffer.capacity:()I
      45: putfield      #10                 // Field bufferSize:I
      48: invokestatic  #15                 // Method java/nio/file/FileSystems.getDefault:()Ljava/nio/file/FileSystem;
      51: invokevirtual #16                 // Method java/nio/file/FileSystem.supportedFileAttributeViews:()Ljava/util/Set;
      54: astore        14
      56: aload         14
      58: ldc           #17                 // String posix
      60: invokeinterface #18,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      65: ifeq          95
      68: aload_0
      69: aload         9
      71: ifnull        82
      74: aload         9
      76: invokestatic  #19                 // Method java/nio/file/attribute/PosixFilePermissions.fromString:(Ljava/lang/String;)Ljava/util/Set;
      79: goto          83
      82: aconst_null
      83: putfield      #11                 // Field filePermissions:Ljava/util/Set;
      86: aload_0
      87: aload         11
      89: putfield      #13                 // Field fileGroup:Ljava/lang/String;
      92: goto          135
      95: aload_0
      96: aconst_null
      97: putfield      #11                 // Field filePermissions:Ljava/util/Set;
     100: aload_0
     101: aconst_null
     102: putfield      #13                 // Field fileGroup:Ljava/lang/String;
     105: aload         9
     107: ifnull        120
     110: getstatic     #20                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     113: ldc           #21                 // String Posix file attribute permissions defined but it is not supported by this files system.
     115: invokeinterface #22,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     120: aload         11
     122: ifnull        135
     125: getstatic     #20                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     128: ldc           #23                 // String Posix file attribute group defined but it is not supported by this files system.
     130: invokeinterface #22,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     135: aload         14
     137: ldc           #24                 // String owner
     139: invokeinterface #18,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     144: ifeq          156
     147: aload_0
     148: aload         10
     150: putfield      #12                 // Field fileOwner:Ljava/lang/String;
     153: goto          176
     156: aload_0
     157: aconst_null
     158: putfield      #12                 // Field fileOwner:Ljava/lang/String;
     161: aload         10
     163: ifnull        176
     166: getstatic     #20                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
     169: ldc           #25                 // String Owner file attribute defined but it is not supported by this files system.
     171: invokeinterface #22,  2           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;)V
     176: aload_0
     177: aload_0
     178: getfield      #11                 // Field filePermissions:Ljava/util/Set;
     181: ifnonnull     198
     184: aload_0
     185: getfield      #12                 // Field fileOwner:Ljava/lang/String;
     188: ifnonnull     198
     191: aload_0
     192: getfield      #13                 // Field fileGroup:Ljava/lang/String;
     195: ifnull        202
     198: iconst_1
     199: goto          203
     202: iconst_0
     203: putfield      #1                  // Field attributeViewEnabled:Z
     206: return

  public static org.apache.logging.log4j.core.appender.FileManager getFileManager(java.lang.String, boolean, boolean, boolean, boolean, java.lang.String, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, int, java.lang.String, java.lang.String, java.lang.String, org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: iload_2
       1: ifeq          10
       4: iload_3
       5: ifeq          10
       8: iconst_0
       9: istore_2
      10: ldc           #26                 // class org/apache/logging/log4j/core/appender/FileManager
      12: aload_0
      13: new           #27                 // class org/apache/logging/log4j/core/appender/FileManager$FactoryData
      16: dup
      17: iload_1
      18: iload_2
      19: iload_3
      20: iload         7
      22: iload         4
      24: aload         5
      26: aload         6
      28: aload         8
      30: aload         9
      32: aload         10
      34: aload         11
      36: invokespecial #28                 // Method org/apache/logging/log4j/core/appender/FileManager$FactoryData."<init>":(ZZZIZLjava/lang/String;Lorg/apache/logging/log4j/core/Layout;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/core/config/Configuration;)V
      39: getstatic     #29                 // Field FACTORY:Lorg/apache/logging/log4j/core/appender/FileManager$FileManagerFactory;
      42: invokestatic  #30                 // Method getManager:(Ljava/lang/String;Ljava/lang/Object;Lorg/apache/logging/log4j/core/appender/ManagerFactory;)Lorg/apache/logging/log4j/core/appender/OutputStreamManager;
      45: invokestatic  #31                 // Method narrow:(Ljava/lang/Class;Lorg/apache/logging/log4j/core/appender/AbstractManager;)Lorg/apache/logging/log4j/core/appender/AbstractManager;
      48: checkcast     #26                 // class org/apache/logging/log4j/core/appender/FileManager
      51: areturn

  protected java.io.OutputStream createOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method getFileName:()Ljava/lang/String;
       4: astore_1
       5: getstatic     #20                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       8: ldc           #33                 // String Now writing to {} at {}
      10: aload_1
      11: new           #34                 // class java/util/Date
      14: dup
      15: invokespecial #35                 // Method java/util/Date."<init>":()V
      18: invokeinterface #36,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: new           #37                 // class java/io/File
      26: dup
      27: aload_1
      28: invokespecial #38                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      31: astore_2
      32: aload_0
      33: aload_2
      34: invokevirtual #39                 // Method createParentDir:(Ljava/io/File;)V
      37: new           #40                 // class java/io/FileOutputStream
      40: dup
      41: aload_2
      42: aload_0
      43: getfield      #5                  // Field isAppend:Z
      46: invokespecial #41                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;Z)V
      49: astore_3
      50: aload_2
      51: invokevirtual #42                 // Method java/io/File.exists:()Z
      54: ifeq          111
      57: aload_2
      58: invokevirtual #43                 // Method java/io/File.length:()J
      61: lconst_0
      62: lcmp
      63: ifne          111
      66: invokestatic  #44                 // Method java/lang/System.currentTimeMillis:()J
      69: invokestatic  #45                 // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;
      72: astore        4
      74: aload_2
      75: invokevirtual #46                 // Method java/io/File.toPath:()Ljava/nio/file/Path;
      78: ldc           #47                 // String creationTime
      80: aload         4
      82: iconst_0
      83: anewarray     #48                 // class java/nio/file/LinkOption
      86: invokestatic  #49                 // Method java/nio/file/Files.setAttribute:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/Object;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;
      89: pop
      90: goto          106
      93: astore        4
      95: getstatic     #20                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      98: ldc           #51                 // String Unable to set current file time for {}
     100: aload_1
     101: invokeinterface #52,  3           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     106: aload_0
     107: aload_3
     108: invokevirtual #53                 // Method writeHeader:(Ljava/io/OutputStream;)V
     111: aload_0
     112: aload_1
     113: iconst_0
     114: anewarray     #54                 // class java/lang/String
     117: invokestatic  #55                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;
     120: invokevirtual #56                 // Method defineAttributeView:(Ljava/nio/file/Path;)V
     123: aload_3
     124: areturn
    Exception table:
       from    to  target type
          66    90    93   Class java/lang/Exception

  protected void createParentDir(java.io.File);
    Code:
       0: return

  protected void defineAttributeView(java.nio.file.Path);
    Code:
       0: aload_0
       1: getfield      #1                  // Field attributeViewEnabled:Z
       4: ifeq          53
       7: aload_1
       8: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;
      13: invokevirtual #58                 // Method java/io/File.createNewFile:()Z
      16: pop
      17: aload_1
      18: aload_0
      19: getfield      #11                 // Field filePermissions:Ljava/util/Set;
      22: aload_0
      23: getfield      #12                 // Field fileOwner:Ljava/lang/String;
      26: aload_0
      27: getfield      #13                 // Field fileGroup:Ljava/lang/String;
      30: invokestatic  #59                 // Method org/apache/logging/log4j/core/util/FileUtils.defineFilePosixAttributeView:(Ljava/nio/file/Path;Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;)V
      33: goto          53
      36: astore_2
      37: getstatic     #20                 // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      40: ldc           #60                 // String Could not define attribute view on path \"{}\" got {}
      42: aload_1
      43: aload_2
      44: invokevirtual #61                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      47: aload_2
      48: invokeinterface #62,  5           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      53: return
    Exception table:
       from    to  target type
           7    33    36   Class java/lang/Exception

  protected synchronized void write(byte[], int, int, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field isLocking:Z
       4: ifeq          167
       7: aload_0
       8: invokevirtual #63                 // Method getOutputStream:()Ljava/io/OutputStream;
      11: checkcast     #40                 // class java/io/FileOutputStream
      14: invokevirtual #64                 // Method java/io/FileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
      17: astore        5
      19: aload         5
      21: lconst_0
      22: ldc2_w        #66                 // long 9223372036854775807l
      25: iconst_0
      26: invokevirtual #68                 // Method java/nio/channels/FileChannel.lock:(JJZ)Ljava/nio/channels/FileLock;
      29: astore        6
      31: aconst_null
      32: astore        7
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload_3
      38: iload         4
      40: invokespecial #69                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.write:([BIIZ)V
      43: aload         6
      45: ifnull        130
      48: aload         7
      50: ifnull        73
      53: aload         6
      55: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
      58: goto          130
      61: astore        8
      63: aload         7
      65: aload         8
      67: invokevirtual #72                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      70: goto          130
      73: aload         6
      75: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
      78: goto          130
      81: astore        8
      83: aload         8
      85: astore        7
      87: aload         8
      89: athrow
      90: astore        9
      92: aload         6
      94: ifnull        127
      97: aload         7
      99: ifnull        122
     102: aload         6
     104: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
     107: goto          127
     110: astore        10
     112: aload         7
     114: aload         10
     116: invokevirtual #72                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     119: goto          127
     122: aload         6
     124: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
     127: aload         9
     129: athrow
     130: goto          176
     133: astore        5
     135: new           #74                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
     138: dup
     139: new           #75                 // class java/lang/StringBuilder
     142: dup
     143: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
     146: ldc           #77                 // String Unable to obtain lock on
     148: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_0
     152: invokevirtual #79                 // Method getName:()Ljava/lang/String;
     155: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     161: aload         5
     163: invokespecial #81                 // Method org/apache/logging/log4j/core/appender/AppenderLoggingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     166: athrow
     167: aload_0
     168: aload_1
     169: iload_2
     170: iload_3
     171: iload         4
     173: invokespecial #69                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.write:([BIIZ)V
     176: return
    Exception table:
       from    to  target type
          53    58    61   Class java/lang/Throwable
          34    43    81   Class java/lang/Throwable
          34    43    90   any
         102   107   110   Class java/lang/Throwable
          81    92    90   any
           7   130   133   Class java/io/IOException

  protected synchronized void writeToDestination(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field isLocking:Z
       4: ifeq          165
       7: aload_0
       8: invokevirtual #63                 // Method getOutputStream:()Ljava/io/OutputStream;
      11: checkcast     #40                 // class java/io/FileOutputStream
      14: invokevirtual #64                 // Method java/io/FileOutputStream.getChannel:()Ljava/nio/channels/FileChannel;
      17: astore        4
      19: aload         4
      21: lconst_0
      22: ldc2_w        #66                 // long 9223372036854775807l
      25: iconst_0
      26: invokevirtual #68                 // Method java/nio/channels/FileChannel.lock:(JJZ)Ljava/nio/channels/FileLock;
      29: astore        5
      31: aconst_null
      32: astore        6
      34: aload_0
      35: aload_1
      36: iload_2
      37: iload_3
      38: invokespecial #82                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.writeToDestination:([BII)V
      41: aload         5
      43: ifnull        128
      46: aload         6
      48: ifnull        71
      51: aload         5
      53: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
      56: goto          128
      59: astore        7
      61: aload         6
      63: aload         7
      65: invokevirtual #72                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      68: goto          128
      71: aload         5
      73: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
      76: goto          128
      79: astore        7
      81: aload         7
      83: astore        6
      85: aload         7
      87: athrow
      88: astore        8
      90: aload         5
      92: ifnull        125
      95: aload         6
      97: ifnull        120
     100: aload         5
     102: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
     105: goto          125
     108: astore        9
     110: aload         6
     112: aload         9
     114: invokevirtual #72                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     117: goto          125
     120: aload         5
     122: invokevirtual #70                 // Method java/nio/channels/FileLock.close:()V
     125: aload         8
     127: athrow
     128: goto          172
     131: astore        4
     133: new           #74                 // class org/apache/logging/log4j/core/appender/AppenderLoggingException
     136: dup
     137: new           #75                 // class java/lang/StringBuilder
     140: dup
     141: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
     144: ldc           #77                 // String Unable to obtain lock on
     146: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: aload_0
     150: invokevirtual #79                 // Method getName:()Ljava/lang/String;
     153: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: invokevirtual #80                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     159: aload         4
     161: invokespecial #81                 // Method org/apache/logging/log4j/core/appender/AppenderLoggingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     164: athrow
     165: aload_0
     166: aload_1
     167: iload_2
     168: iload_3
     169: invokespecial #82                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.writeToDestination:([BII)V
     172: return
    Exception table:
       from    to  target type
          51    56    59   Class java/lang/Throwable
          34    41    79   Class java/lang/Throwable
          34    41    88   any
         100   105   108   Class java/lang/Throwable
          79    90    88   any
           7   128   131   Class java/io/IOException

  public java.lang.String getFileName();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method getName:()Ljava/lang/String;
       4: areturn

  public boolean isAppend();
    Code:
       0: aload_0
       1: getfield      #5                  // Field isAppend:Z
       4: ireturn

  public boolean isCreateOnDemand();
    Code:
       0: aload_0
       1: getfield      #6                  // Field createOnDemand:Z
       4: ireturn

  public boolean isLocking();
    Code:
       0: aload_0
       1: getfield      #7                  // Field isLocking:Z
       4: ireturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field bufferSize:I
       4: ireturn

  public java.util.Set<java.nio.file.attribute.PosixFilePermission> getFilePermissions();
    Code:
       0: aload_0
       1: getfield      #11                 // Field filePermissions:Ljava/util/Set;
       4: areturn

  public java.lang.String getFileOwner();
    Code:
       0: aload_0
       1: getfield      #12                 // Field fileOwner:Ljava/lang/String;
       4: areturn

  public java.lang.String getFileGroup();
    Code:
       0: aload_0
       1: getfield      #13                 // Field fileGroup:Ljava/lang/String;
       4: areturn

  public boolean isAttributeViewEnabled();
    Code:
       0: aload_0
       1: getfield      #1                  // Field attributeViewEnabled:Z
       4: ireturn

  public java.util.Map<java.lang.String, java.lang.String> getContentFormat();
    Code:
       0: new           #83                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: invokespecial #84                 // Method org/apache/logging/log4j/core/appender/OutputStreamManager.getContentFormat:()Ljava/util/Map;
       8: invokespecial #85                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: astore_1
      12: aload_1
      13: ldc           #86                 // String fileURI
      15: aload_0
      16: getfield      #8                  // Field advertiseURI:Ljava/lang/String;
      19: invokeinterface #87,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_1
      26: areturn

  static boolean access$1100(org.apache.logging.log4j.core.appender.FileManager);
    Code:
       0: aload_0
       1: getfield      #1                  // Field attributeViewEnabled:Z
       4: ireturn

  static {};
    Code:
       0: new           #88                 // class org/apache/logging/log4j/core/appender/FileManager$FileManagerFactory
       3: dup
       4: aconst_null
       5: invokespecial #89                 // Method org/apache/logging/log4j/core/appender/FileManager$FileManagerFactory."<init>":(Lorg/apache/logging/log4j/core/appender/FileManager$1;)V
       8: putstatic     #29                 // Field FACTORY:Lorg/apache/logging/log4j/core/appender/FileManager$FileManagerFactory;
      11: return
}
