Compiled from "DisruptorUtil.java"
final class org.apache.logging.log4j.core.async.DisruptorUtil {
  private static final org.apache.logging.log4j.Logger LOGGER;

  private static final int RINGBUFFER_MIN_SIZE;

  private static final int RINGBUFFER_DEFAULT_SIZE;

  private static final int RINGBUFFER_NO_GC_DEFAULT_SIZE;

  static final boolean ASYNC_LOGGER_SYNCHRONIZE_ENQUEUE_WHEN_QUEUE_FULL;

  static final boolean ASYNC_CONFIG_SYNCHRONIZE_ENQUEUE_WHEN_QUEUE_FULL;

  private org.apache.logging.log4j.core.async.DisruptorUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static com.lmax.disruptor.WaitStrategy createWaitStrategy(java.lang.String, org.apache.logging.log4j.core.async.AsyncWaitStrategyFactory);
    Code:
       0: aload_1
       1: ifnonnull     26
       4: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #3                  // String No AsyncWaitStrategyFactory was configured in the configuration, using default factory...
       9: invokeinterface #4,  2            // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;)V
      14: new           #5                  // class org/apache/logging/log4j/core/async/DefaultAsyncWaitStrategyFactory
      17: dup
      18: aload_0
      19: invokespecial #6                  // Method org/apache/logging/log4j/core/async/DefaultAsyncWaitStrategyFactory."<init>":(Ljava/lang/String;)V
      22: invokevirtual #7                  // Method org/apache/logging/log4j/core/async/DefaultAsyncWaitStrategyFactory.createWaitStrategy:()Lcom/lmax/disruptor/WaitStrategy;
      25: areturn
      26: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      29: ldc           #8                  // String Using configured AsyncWaitStrategyFactory {}
      31: aload_1
      32: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: invokevirtual #10                 // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokeinterface #11,  3           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      43: aload_1
      44: invokeinterface #12,  1           // InterfaceMethod org/apache/logging/log4j/core/async/AsyncWaitStrategyFactory.createWaitStrategy:()Lcom/lmax/disruptor/WaitStrategy;
      49: areturn

  static int calculateRingBufferSize(java.lang.String);
    Code:
       0: getstatic     #13                 // Field org/apache/logging/log4j/core/util/Constants.ENABLE_THREADLOCALS:Z
       3: ifeq          12
       6: sipush        4096
       9: goto          14
      12: ldc           #15                 // int 262144
      14: istore_1
      15: invokestatic  #16                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
      18: aload_0
      19: iload_1
      20: invokestatic  #17                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      23: invokevirtual #18                 // Method org/apache/logging/log4j/util/PropertiesUtil.getStringProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: invokestatic  #19                 // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;)I
      31: istore_3
      32: iload_3
      33: sipush        128
      36: if_icmpge     60
      39: sipush        128
      42: istore_3
      43: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      46: ldc           #20                 // String Invalid RingBufferSize {}, using minimum size {}.
      48: aload_2
      49: sipush        128
      52: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: invokeinterface #22,  4           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      60: iload_3
      61: istore_1
      62: goto          81
      65: astore_3
      66: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      69: ldc           #24                 // String Invalid RingBufferSize {}, using default size {}.
      71: aload_2
      72: iload_1
      73: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: invokeinterface #22,  4           // InterfaceMethod org/apache/logging/log4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      81: iload_1
      82: invokestatic  #25                 // Method org/apache/logging/log4j/core/util/Integers.ceilingNextPowerOfTwo:(I)I
      85: ireturn
    Exception table:
       from    to  target type
          27    62    65   Class java/lang/Exception

  static com.lmax.disruptor.ExceptionHandler<org.apache.logging.log4j.core.async.RingBufferLogEvent> getAsyncLoggerExceptionHandler();
    Code:
       0: invokestatic  #16                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       3: ldc           #26                 // String AsyncLogger.ExceptionHandler
       5: invokevirtual #27                 // Method org/apache/logging/log4j/util/PropertiesUtil.getStringProperty:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: ifnonnull     21
      13: new           #28                 // class org/apache/logging/log4j/core/async/AsyncLoggerDefaultExceptionHandler
      16: dup
      17: invokespecial #29                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDefaultExceptionHandler."<init>":()V
      20: areturn
      21: aload_0
      22: invokestatic  #30                 // Method org/apache/logging/log4j/core/util/Loader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      25: astore_1
      26: aload_1
      27: invokevirtual #31                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      30: checkcast     #32                 // class com/lmax/disruptor/ExceptionHandler
      33: areturn
      34: astore_1
      35: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      38: ldc           #33                 // String Invalid AsyncLogger.ExceptionHandler value: error creating {}:
      40: aload_0
      41: aload_1
      42: invokeinterface #34,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      47: new           #28                 // class org/apache/logging/log4j/core/async/AsyncLoggerDefaultExceptionHandler
      50: dup
      51: invokespecial #29                 // Method org/apache/logging/log4j/core/async/AsyncLoggerDefaultExceptionHandler."<init>":()V
      54: areturn
    Exception table:
       from    to  target type
          21    33    34   Class java/lang/Exception

  static com.lmax.disruptor.ExceptionHandler<org.apache.logging.log4j.core.async.AsyncLoggerConfigDisruptor$Log4jEventWrapper> getAsyncLoggerConfigExceptionHandler();
    Code:
       0: invokestatic  #16                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       3: ldc           #35                 // String AsyncLoggerConfig.ExceptionHandler
       5: invokevirtual #27                 // Method org/apache/logging/log4j/util/PropertiesUtil.getStringProperty:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_0
       9: aload_0
      10: ifnonnull     21
      13: new           #36                 // class org/apache/logging/log4j/core/async/AsyncLoggerConfigDefaultExceptionHandler
      16: dup
      17: invokespecial #37                 // Method org/apache/logging/log4j/core/async/AsyncLoggerConfigDefaultExceptionHandler."<init>":()V
      20: areturn
      21: aload_0
      22: invokestatic  #30                 // Method org/apache/logging/log4j/core/util/Loader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      25: astore_1
      26: aload_1
      27: invokevirtual #31                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
      30: checkcast     #32                 // class com/lmax/disruptor/ExceptionHandler
      33: areturn
      34: astore_1
      35: getstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      38: ldc           #38                 // String Invalid AsyncLoggerConfig.ExceptionHandler value: error creating {}:
      40: aload_0
      41: aload_1
      42: invokeinterface #34,  4           // InterfaceMethod org/apache/logging/log4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      47: new           #36                 // class org/apache/logging/log4j/core/async/AsyncLoggerConfigDefaultExceptionHandler
      50: dup
      51: invokespecial #37                 // Method org/apache/logging/log4j/core/async/AsyncLoggerConfigDefaultExceptionHandler."<init>":()V
      54: areturn
    Exception table:
       from    to  target type
          21    33    34   Class java/lang/Exception

  public static long getExecutorThreadId(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokedynamic #39,  0             // InvokeDynamic #0:call:()Ljava/util/concurrent/Callable;
       6: invokeinterface #40,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      11: astore_1
      12: aload_1
      13: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;
      18: checkcast     #42                 // class java/lang/Long
      21: invokevirtual #43                 // Method java/lang/Long.longValue:()J
      24: lreturn
      25: astore_2
      26: ldc           #44                 // String Could not obtain executor thread Id. Giving up to avoid the risk of application deadlock.
      28: astore_3
      29: new           #45                 // class java/lang/IllegalStateException
      32: dup
      33: ldc           #44                 // String Could not obtain executor thread Id. Giving up to avoid the risk of application deadlock.
      35: aload_2
      36: invokespecial #46                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      39: athrow
    Exception table:
       from    to  target type
          12    24    25   Class java/lang/Exception

  private static java.lang.Long lambda$getExecutorThreadId$0() throws java.lang.Exception;
    Code:
       0: invokestatic  #47                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #48                 // Method java/lang/Thread.getId:()J
       6: invokestatic  #49                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: areturn

  static {};
    Code:
       0: invokestatic  #50                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
       3: putstatic     #2                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       6: invokestatic  #16                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
       9: ldc           #51                 // String AsyncLogger.SynchronizeEnqueueWhenQueueFull
      11: iconst_1
      12: invokevirtual #52                 // Method org/apache/logging/log4j/util/PropertiesUtil.getBooleanProperty:(Ljava/lang/String;Z)Z
      15: putstatic     #53                 // Field ASYNC_LOGGER_SYNCHRONIZE_ENQUEUE_WHEN_QUEUE_FULL:Z
      18: invokestatic  #16                 // Method org/apache/logging/log4j/util/PropertiesUtil.getProperties:()Lorg/apache/logging/log4j/util/PropertiesUtil;
      21: ldc           #54                 // String AsyncLoggerConfig.SynchronizeEnqueueWhenQueueFull
      23: iconst_1
      24: invokevirtual #52                 // Method org/apache/logging/log4j/util/PropertiesUtil.getBooleanProperty:(Ljava/lang/String;Z)Z
      27: putstatic     #55                 // Field ASYNC_CONFIG_SYNCHRONIZE_ENQUEUE_WHEN_QUEUE_FULL:Z
      30: return
}
