Compiled from "JCToolsBlockingQueueFactory.java"
public final class org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy extends java.lang.Enum<org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy> {
  public static final org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy SPIN;

  public static final org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy YIELD;

  public static final org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy PARK;

  public static final org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy PROGRESSIVE;

  private final org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$Idle idle;

  private static final org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy[] $VALUES;

  public static org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
       3: invokevirtual #3                  // Method "[Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;"
       9: areturn

  public static org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy valueOf(java.lang.String);
    Code:
       0: ldc           #5                  // class org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy
       2: aload_0
       3: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #5                  // class org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy
       9: areturn

  private int idle(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field idle:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;
       4: iload_1
       5: invokeinterface #8,  2            // InterfaceMethod org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle.idle:(I)I
      10: ireturn

  private org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy(org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$Idle);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #9                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field idle:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;
      11: return

  private static int lambda$static$3(int);
    Code:
       0: iload_0
       1: sipush        200
       4: if_icmple     14
       7: lconst_1
       8: invokestatic  #10                 // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
      11: goto          23
      14: iload_0
      15: bipush        100
      17: if_icmple     23
      20: invokestatic  #11                 // Method java/lang/Thread.yield:()V
      23: iload_0
      24: iconst_1
      25: iadd
      26: ireturn

  private static int lambda$static$2(int);
    Code:
       0: lconst_1
       1: invokestatic  #10                 // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
       4: iload_0
       5: iconst_1
       6: iadd
       7: ireturn

  private static int lambda$static$1(int);
    Code:
       0: invokestatic  #11                 // Method java/lang/Thread.yield:()V
       3: iload_0
       4: iconst_1
       5: iadd
       6: ireturn

  private static int lambda$static$0(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: ireturn

  static int access$000(org.apache.logging.log4j.core.async.JCToolsBlockingQueueFactory$WaitStrategy, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method idle:(I)I
       5: ireturn

  static {};
    Code:
       0: new           #5                  // class org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy
       3: dup
       4: ldc           #12                 // String SPIN
       6: iconst_0
       7: invokedynamic #13,  0             // InvokeDynamic #0:idle:()Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;
      12: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;)V
      15: putstatic     #15                 // Field SPIN:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      18: new           #5                  // class org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy
      21: dup
      22: ldc           #16                 // String YIELD
      24: iconst_1
      25: invokedynamic #17,  0             // InvokeDynamic #1:idle:()Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;
      30: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;)V
      33: putstatic     #18                 // Field YIELD:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      36: new           #5                  // class org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy
      39: dup
      40: ldc           #19                 // String PARK
      42: iconst_2
      43: invokedynamic #20,  0             // InvokeDynamic #2:idle:()Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;
      48: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;)V
      51: putstatic     #21                 // Field PARK:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      54: new           #5                  // class org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy
      57: dup
      58: ldc           #22                 // String PROGRESSIVE
      60: iconst_3
      61: invokedynamic #23,  0             // InvokeDynamic #3:idle:()Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;
      66: invokespecial #14                 // Method "<init>":(Ljava/lang/String;ILorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$Idle;)V
      69: putstatic     #24                 // Field PROGRESSIVE:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      72: iconst_4
      73: anewarray     #5                  // class org/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy
      76: dup
      77: iconst_0
      78: getstatic     #15                 // Field SPIN:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      81: aastore
      82: dup
      83: iconst_1
      84: getstatic     #18                 // Field YIELD:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      87: aastore
      88: dup
      89: iconst_2
      90: getstatic     #21                 // Field PARK:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      93: aastore
      94: dup
      95: iconst_3
      96: getstatic     #24                 // Field PROGRESSIVE:Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
      99: aastore
     100: putstatic     #2                  // Field $VALUES:[Lorg/apache/logging/log4j/core/async/JCToolsBlockingQueueFactory$WaitStrategy;
     103: return
}
