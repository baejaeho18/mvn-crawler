Compiled from "AbstractAppender.java"
public abstract class org.apache.logging.log4j.core.appender.AbstractAppender extends org.apache.logging.log4j.core.filter.AbstractFilterable implements org.apache.logging.log4j.core.Appender,org.apache.logging.log4j.core.impl.LocationAware {
  private final java.lang.String name;

  private final boolean ignoreExceptions;

  private final org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> layout;

  private org.apache.logging.log4j.core.ErrorHandler handler;

  public static int parseInt(java.lang.String, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #1                  // Method org/apache/logging/log4j/core/util/Integers.parseInt:(Ljava/lang/String;I)I
       5: ireturn
       6: astore_2
       7: getstatic     #3                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      10: ldc           #4                  // String Could not parse \"{}\" as an integer,  using default value {}: {}
      12: aload_0
      13: iload_1
      14: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      17: aload_2
      18: invokeinterface #6,  5            // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      23: iload_1
      24: ireturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/NumberFormatException

  public boolean requiresLocation();
    Code:
       0: aload_0
       1: getfield      #7                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       4: instanceof    #8                  // class org/apache/logging/log4j/core/impl/LocationAware
       7: ifeq          29
      10: aload_0
      11: getfield      #7                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
      14: checkcast     #8                  // class org/apache/logging/log4j/core/impl/LocationAware
      17: invokeinterface #9,  1            // InterfaceMethod org/apache/logging/log4j/core/impl/LocationAware.requiresLocation:()Z
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  protected org.apache.logging.log4j.core.appender.AbstractAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iconst_1
       5: getstatic     #10                 // Field org/apache/logging/log4j/core/config/Property.EMPTY_ARRAY:[Lorg/apache/logging/log4j/core/config/Property;
       8: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      11: return

  protected org.apache.logging.log4j.core.appender.AbstractAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: getstatic     #10                 // Field org/apache/logging/log4j/core/config/Property.EMPTY_ARRAY:[Lorg/apache/logging/log4j/core/config/Property;
       9: invokespecial #11                 // Method "<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;)V
      12: return

  protected org.apache.logging.log4j.core.appender.AbstractAppender(java.lang.String, org.apache.logging.log4j.core.Filter, org.apache.logging.log4j.core.Layout<? extends java.io.Serializable>, boolean, org.apache.logging.log4j.core.config.Property[]);
    Code:
       0: aload_0
       1: aload_2
       2: aload         5
       4: invokespecial #12                 // Method org/apache/logging/log4j/core/filter/AbstractFilterable."<init>":(Lorg/apache/logging/log4j/core/Filter;[Lorg/apache/logging/log4j/core/config/Property;)V
       7: aload_0
       8: new           #13                 // class org/apache/logging/log4j/core/appender/DefaultErrorHandler
      11: dup
      12: aload_0
      13: invokespecial #14                 // Method org/apache/logging/log4j/core/appender/DefaultErrorHandler."<init>":(Lorg/apache/logging/log4j/core/Appender;)V
      16: putfield      #15                 // Field handler:Lorg/apache/logging/log4j/core/ErrorHandler;
      19: aload_0
      20: aload_1
      21: ldc           #16                 // String name
      23: invokestatic  #17                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      26: checkcast     #18                 // class java/lang/String
      29: putfield      #19                 // Field name:Ljava/lang/String;
      32: aload_0
      33: aload_3
      34: putfield      #7                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
      37: aload_0
      38: iload         4
      40: putfield      #20                 // Field ignoreExceptions:Z
      43: return

  public void error(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #15                 // Field handler:Lorg/apache/logging/log4j/core/ErrorHandler;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod org/apache/logging/log4j/core/ErrorHandler.error:(Ljava/lang/String;)V
      10: return

  public void error(java.lang.String, org.apache.logging.log4j.core.LogEvent, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field handler:Lorg/apache/logging/log4j/core/ErrorHandler;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #22,  4           // InterfaceMethod org/apache/logging/log4j/core/ErrorHandler.error:(Ljava/lang/String;Lorg/apache/logging/log4j/core/LogEvent;Ljava/lang/Throwable;)V
      12: return

  public void error(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #15                 // Field handler:Lorg/apache/logging/log4j/core/ErrorHandler;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod org/apache/logging/log4j/core/ErrorHandler.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      11: return

  public org.apache.logging.log4j.core.ErrorHandler getHandler();
    Code:
       0: aload_0
       1: getfield      #15                 // Field handler:Lorg/apache/logging/log4j/core/ErrorHandler;
       4: areturn

  public org.apache.logging.log4j.core.Layout<? extends java.io.Serializable> getLayout();
    Code:
       0: aload_0
       1: getfield      #7                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       4: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #19                 // Field name:Ljava/lang/String;
       4: areturn

  public boolean ignoreExceptions();
    Code:
       0: aload_0
       1: getfield      #20                 // Field ignoreExceptions:Z
       4: ireturn

  public void setHandler(org.apache.logging.log4j.core.ErrorHandler);
    Code:
       0: aload_1
       1: ifnonnull     15
       4: getstatic     #3                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
       7: ldc           #24                 // String The handler cannot be set to null
       9: invokeinterface #25,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      14: return
      15: aload_0
      16: invokevirtual #26                 // Method isStarted:()Z
      19: ifeq          33
      22: getstatic     #3                  // Field LOGGER:Lorg/apache/logging/log4j/Logger;
      25: ldc           #27                 // String The handler cannot be changed once the appender is started
      27: invokeinterface #25,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      32: return
      33: aload_0
      34: aload_1
      35: putfield      #15                 // Field handler:Lorg/apache/logging/log4j/core/ErrorHandler;
      38: return

  protected java.io.Serializable toSerializable(org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: getfield      #7                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
       4: ifnull        20
       7: aload_0
       8: getfield      #7                  // Field layout:Lorg/apache/logging/log4j/core/Layout;
      11: aload_1
      12: invokeinterface #28,  2           // InterfaceMethod org/apache/logging/log4j/core/Layout.toSerializable:(Lorg/apache/logging/log4j/core/LogEvent;)Ljava/io/Serializable;
      17: goto          21
      20: aconst_null
      21: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #19                 // Field name:Ljava/lang/String;
       4: areturn
}
