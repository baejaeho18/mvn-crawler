Compiled from "JndiContextSelector.java"
public class org.apache.logging.log4j.core.selector.JndiContextSelector implements org.apache.logging.log4j.core.selector.NamedContextSelector {
  private static final org.apache.logging.log4j.core.LoggerContext CONTEXT;

  private static final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.logging.log4j.core.LoggerContext> CONTEXT_MAP;

  private static final org.apache.logging.log4j.status.StatusLogger LOGGER;

  public org.apache.logging.log4j.core.selector.JndiContextSelector();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: invokestatic  #2                  // Method org/apache/logging/log4j/core/net/JndiManager.isJndiContextSelectorEnabled:()Z
       7: ifne          20
      10: new           #3                  // class java/lang/IllegalStateException
      13: dup
      14: ldc           #4                  // String JNDI must be enabled by setting log4j2.enableJndiContextSelector=true
      16: invokespecial #5                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: return

  public void shutdown(java.lang.String, java.lang.ClassLoader, boolean, boolean);
    Code:
       0: getstatic     #6                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
       9: astore        5
      11: aload         5
      13: ifnonnull     42
      16: aload_0
      17: invokespecial #9                  // Method getContextName:()Ljava/lang/String;
      20: astore        6
      22: aload         6
      24: ifnull        42
      27: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      30: aload         6
      32: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
      40: astore        5
      42: aload         5
      44: ifnull        59
      47: aload         5
      49: ldc2_w        #13                 // long 50l
      52: getstatic     #15                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      55: invokevirtual #16                 // Method org/apache/logging/log4j/core/LoggerContext.stop:(JLjava/util/concurrent/TimeUnit;)Z
      58: pop
      59: return

  public boolean hasContext(java.lang.String, java.lang.ClassLoader, boolean);
    Code:
       0: getstatic     #6                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
       9: astore        4
      11: aload         4
      13: ifnonnull     44
      16: aload_0
      17: invokespecial #9                  // Method getContextName:()Ljava/lang/String;
      20: astore        5
      22: aload         5
      24: ifnonnull     29
      27: iconst_0
      28: ireturn
      29: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      32: aload         5
      34: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
      42: astore        4
      44: aload         4
      46: ifnull        61
      49: aload         4
      51: invokevirtual #17                 // Method org/apache/logging/log4j/core/LoggerContext.isStarted:()Z
      54: ifeq          61
      57: iconst_1
      58: goto          62
      61: iconst_0
      62: ireturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #18                 // Method getContext:(Ljava/lang/String;Ljava/lang/ClassLoader;ZLjava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
       8: areturn

  public org.apache.logging.log4j.core.LoggerContext getContext(java.lang.String, java.lang.ClassLoader, boolean, java.net.URI);
    Code:
       0: getstatic     #6                  // Field org/apache/logging/log4j/core/impl/ContextAnchor.THREAD_CONTEXT:Ljava/lang/ThreadLocal;
       3: invokevirtual #7                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
       9: astore        5
      11: aload         5
      13: ifnull        19
      16: aload         5
      18: areturn
      19: aconst_null
      20: astore        6
      22: invokestatic  #19                 // Method org/apache/logging/log4j/core/net/JndiManager.getDefaultManager:()Lorg/apache/logging/log4j/core/net/JndiManager;
      25: astore        7
      27: aconst_null
      28: astore        8
      30: aload         7
      32: ldc           #21                 // String java:comp/env/log4j/context-name
      34: invokevirtual #22                 // Method org/apache/logging/log4j/core/net/JndiManager.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #23                 // class java/lang/String
      40: astore        6
      42: aload         7
      44: ifnull        129
      47: aload         8
      49: ifnull        72
      52: aload         7
      54: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
      57: goto          129
      60: astore        9
      62: aload         8
      64: aload         9
      66: invokevirtual #26                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      69: goto          129
      72: aload         7
      74: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
      77: goto          129
      80: astore        9
      82: aload         9
      84: astore        8
      86: aload         9
      88: athrow
      89: astore        10
      91: aload         7
      93: ifnull        126
      96: aload         8
      98: ifnull        121
     101: aload         7
     103: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
     106: goto          126
     109: astore        11
     111: aload         8
     113: aload         11
     115: invokevirtual #26                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
     118: goto          126
     121: aload         7
     123: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
     126: aload         10
     128: athrow
     129: goto          146
     132: astore        7
     134: getstatic     #28                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     137: ldc           #29                 // String Unable to lookup {}
     139: ldc           #21                 // String java:comp/env/log4j/context-name
     141: aload         7
     143: invokevirtual #30                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     146: aload         6
     148: ifnonnull     157
     151: getstatic     #31                 // Field CONTEXT:Lorg/apache/logging/log4j/core/LoggerContext;
     154: goto          166
     157: aload_0
     158: aload         6
     160: aconst_null
     161: aload         4
     163: invokevirtual #32                 // Method locateContext:(Ljava/lang/String;Ljava/lang/Object;Ljava/net/URI;)Lorg/apache/logging/log4j/core/LoggerContext;
     166: areturn
    Exception table:
       from    to  target type
          52    57    60   Class java/lang/Throwable
          30    42    80   Class java/lang/Throwable
          30    42    89   any
         101   106   109   Class java/lang/Throwable
          80    91    89   any
          22   129   132   Class javax/naming/NamingException

  private java.lang.String getContextName();
    Code:
       0: aconst_null
       1: astore_1
       2: invokestatic  #19                 // Method org/apache/logging/log4j/core/net/JndiManager.getDefaultManager:()Lorg/apache/logging/log4j/core/net/JndiManager;
       5: astore_2
       6: aconst_null
       7: astore_3
       8: aload_2
       9: ldc           #21                 // String java:comp/env/log4j/context-name
      11: invokevirtual #22                 // Method org/apache/logging/log4j/core/net/JndiManager.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #23                 // class java/lang/String
      17: astore_1
      18: aload_2
      19: ifnull        94
      22: aload_3
      23: ifnull        44
      26: aload_2
      27: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
      30: goto          94
      33: astore        4
      35: aload_3
      36: aload         4
      38: invokevirtual #26                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      41: goto          94
      44: aload_2
      45: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
      48: goto          94
      51: astore        4
      53: aload         4
      55: astore_3
      56: aload         4
      58: athrow
      59: astore        5
      61: aload_2
      62: ifnull        91
      65: aload_3
      66: ifnull        87
      69: aload_2
      70: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
      73: goto          91
      76: astore        6
      78: aload_3
      79: aload         6
      81: invokevirtual #26                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      84: goto          91
      87: aload_2
      88: invokevirtual #24                 // Method org/apache/logging/log4j/core/net/JndiManager.close:()V
      91: aload         5
      93: athrow
      94: goto          109
      97: astore_2
      98: getstatic     #28                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
     101: ldc           #29                 // String Unable to lookup {}
     103: ldc           #21                 // String java:comp/env/log4j/context-name
     105: aload_2
     106: invokevirtual #30                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     109: aload_1
     110: areturn
    Exception table:
       from    to  target type
          26    30    33   Class java/lang/Throwable
           8    18    51   Class java/lang/Throwable
           8    18    59   any
          69    73    76   Class java/lang/Throwable
          51    61    59   any
           2    94    97   Class javax/naming/NamingException

  public org.apache.logging.log4j.core.LoggerContext locateContext(java.lang.String, java.lang.Object, java.net.URI);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: getstatic     #28                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
       7: ldc           #33                 // String A context name is required to locate a LoggerContext
       9: invokevirtual #34                 // Method org/apache/logging/log4j/status/StatusLogger.error:(Ljava/lang/String;)V
      12: aconst_null
      13: areturn
      14: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      17: aload_1
      18: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.containsKey:(Ljava/lang/Object;)Z
      23: ifne          50
      26: new           #8                  // class org/apache/logging/log4j/core/LoggerContext
      29: dup
      30: aload_1
      31: aload_2
      32: aload_3
      33: invokespecial #36                 // Method org/apache/logging/log4j/core/LoggerContext."<init>":(Ljava/lang/String;Ljava/lang/Object;Ljava/net/URI;)V
      36: astore        4
      38: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      41: aload_1
      42: aload         4
      44: invokeinterface #37,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      53: aload_1
      54: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
      62: areturn

  public void removeContext(org.apache.logging.log4j.core.LoggerContext);
    Code:
       0: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
       3: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.entrySet:()Ljava/util/Set;
       8: invokeinterface #39,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #40,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          67
      23: aload_2
      24: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #42                 // class java/util/Map$Entry
      32: astore_3
      33: aload_3
      34: invokeinterface #43,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      39: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
      42: aload_1
      43: invokevirtual #44                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      46: ifeq          64
      49: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      52: aload_3
      53: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: goto          14
      67: return

  public boolean isClassLoaderDependent();
    Code:
       0: iconst_0
       1: ireturn

  public org.apache.logging.log4j.core.LoggerContext removeContext(java.lang.String);
    Code:
       0: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
       3: aload_1
       4: invokeinterface #46,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #8                  // class org/apache/logging/log4j/core/LoggerContext
      12: areturn

  public java.util.List<org.apache.logging.log4j.core.LoggerContext> getLoggerContexts();
    Code:
       0: new           #47                 // class java/util/ArrayList
       3: dup
       4: getstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
       7: invokeinterface #48,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      12: invokespecial #49                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: invokestatic  #50                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      18: areturn

  static {};
    Code:
       0: new           #8                  // class org/apache/logging/log4j/core/LoggerContext
       3: dup
       4: ldc           #51                 // String Default
       6: invokespecial #52                 // Method org/apache/logging/log4j/core/LoggerContext."<init>":(Ljava/lang/String;)V
       9: putstatic     #31                 // Field CONTEXT:Lorg/apache/logging/log4j/core/LoggerContext;
      12: new           #53                 // class java/util/concurrent/ConcurrentHashMap
      15: dup
      16: invokespecial #54                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      19: putstatic     #10                 // Field CONTEXT_MAP:Ljava/util/concurrent/ConcurrentMap;
      22: invokestatic  #55                 // Method org/apache/logging/log4j/status/StatusLogger.getLogger:()Lorg/apache/logging/log4j/status/StatusLogger;
      25: putstatic     #28                 // Field LOGGER:Lorg/apache/logging/log4j/status/StatusLogger;
      28: return
}
