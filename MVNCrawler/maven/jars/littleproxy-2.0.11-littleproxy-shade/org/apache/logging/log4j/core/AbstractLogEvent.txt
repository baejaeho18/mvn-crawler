Compiled from "AbstractLogEvent.java"
public abstract class org.apache.logging.log4j.core.AbstractLogEvent implements org.apache.logging.log4j.core.LogEvent {
  private static final long serialVersionUID;

  private volatile org.apache.logging.log4j.core.time.MutableInstant instant;

  public org.apache.logging.log4j.core.AbstractLogEvent();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.apache.logging.log4j.core.LogEvent toImmutable();
    Code:
       0: aload_0
       1: areturn

  public org.apache.logging.log4j.util.ReadOnlyStringMap getContextData();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Map<java.lang.String, java.lang.String> getContextMap();
    Code:
       0: invokestatic  #2                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       3: areturn

  public org.apache.logging.log4j.ThreadContext$ContextStack getContextStack();
    Code:
       0: getstatic     #3                  // Field org/apache/logging/log4j/ThreadContext.EMPTY_STACK:Lorg/apache/logging/log4j/spi/ThreadContextStack;
       3: areturn

  public org.apache.logging.log4j.Level getLevel();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getLoggerFqcn();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.String getLoggerName();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.logging.log4j.Marker getMarker();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.logging.log4j.message.Message getMessage();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.StackTraceElement getSource();
    Code:
       0: aconst_null
       1: areturn

  public long getThreadId();
    Code:
       0: lconst_0
       1: lreturn

  public java.lang.String getThreadName();
    Code:
       0: aconst_null
       1: areturn

  public int getThreadPriority();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Throwable getThrown();
    Code:
       0: aconst_null
       1: areturn

  public org.apache.logging.log4j.core.impl.ThrowableProxy getThrownProxy();
    Code:
       0: aconst_null
       1: areturn

  public long getTimeMillis();
    Code:
       0: lconst_0
       1: lreturn

  public org.apache.logging.log4j.core.time.Instant getInstant();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getMutableInstant:()Lorg/apache/logging/log4j/core/time/MutableInstant;
       4: areturn

  protected final org.apache.logging.log4j.core.time.MutableInstant getMutableInstant();
    Code:
       0: aload_0
       1: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
       4: ifnonnull     18
       7: aload_0
       8: new           #6                  // class org/apache/logging/log4j/core/time/MutableInstant
      11: dup
      12: invokespecial #7                  // Method org/apache/logging/log4j/core/time/MutableInstant."<init>":()V
      15: putfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
      18: aload_0
      19: getfield      #5                  // Field instant:Lorg/apache/logging/log4j/core/time/MutableInstant;
      22: areturn

  public boolean isEndOfBatch();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isIncludeLocation();
    Code:
       0: iconst_0
       1: ireturn

  public void setEndOfBatch(boolean);
    Code:
       0: return

  public void setIncludeLocation(boolean);
    Code:
       0: return

  public long getNanoTime();
    Code:
       0: lconst_0
       1: lreturn
}
