Compiled from "JdbcAppender.java"
public class org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder<B extends org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder<B>> extends org.apache.logging.log4j.core.appender.db.AbstractDatabaseAppender$Builder<B> implements org.apache.logging.log4j.core.util.Builder<org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender> {
  private org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource connectionSource;

  private boolean immediateFail;

  private int bufferSize;

  private java.lang.String tableName;

  private org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig[] columnConfigs;

  private org.apache.logging.log4j.core.appender.db.ColumnMapping[] columnMappings;

  private boolean truncateStrings;

  private long reconnectIntervalMillis;

  public org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender$Builder();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/logging/log4j/core/appender/db/AbstractDatabaseAppender$Builder."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #3                  // Field truncateStrings:Z
       9: aload_0
      10: ldc2_w        #4                  // long 5000l
      13: putfield      #6                  // Field reconnectIntervalMillis:J
      16: return

  public org.apache.logging.log4j.core.appender.db.jdbc.JdbcAppender build();
    Code:
       0: aload_0
       1: getfield      #7                  // Field columnConfigs:[Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;
       4: invokestatic  #8                  // Method org/apache/logging/log4j/core/util/Assert.isEmpty:(Ljava/lang/Object;)Z
       7: ifeq          32
      10: aload_0
      11: getfield      #9                  // Field columnMappings:[Lorg/apache/logging/log4j/core/appender/db/ColumnMapping;
      14: invokestatic  #8                  // Method org/apache/logging/log4j/core/util/Assert.isEmpty:(Ljava/lang/Object;)Z
      17: ifeq          32
      20: invokestatic  #10                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender.access$000:()Lorg/apache/logging/log4j/Logger;
      23: ldc           #11                 // String Cannot create JdbcAppender without any columns.
      25: invokeinterface #12,  2           // InterfaceMethod org/apache/logging/log4j/Logger.error:(Ljava/lang/String;)V
      30: aconst_null
      31: areturn
      32: new           #13                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #15                 // String JdbcManager{name=
      41: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: invokevirtual #17                 // Method getName:()Ljava/lang/String;
      48: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #18                 // String , bufferSize=
      53: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_0
      57: getfield      #19                 // Field bufferSize:I
      60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: ldc           #21                 // String , tableName=
      65: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #22                 // Field tableName:Ljava/lang/String;
      72: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: ldc           #23                 // String , columnConfigs=
      77: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: getfield      #7                  // Field columnConfigs:[Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;
      84: invokestatic  #24                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
      87: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc           #25                 // String , columnMappings=
      92: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: aload_0
      96: getfield      #9                  // Field columnMappings:[Lorg/apache/logging/log4j/core/appender/db/ColumnMapping;
      99: invokestatic  #24                 // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;
     102: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: bipush        125
     107: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     110: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: astore_1
     114: aload_1
     115: aload_0
     116: getfield      #19                 // Field bufferSize:I
     119: aload_0
     120: invokevirtual #28                 // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
     123: aload_0
     124: getfield      #29                 // Field connectionSource:Lorg/apache/logging/log4j/core/appender/db/jdbc/ConnectionSource;
     127: aload_0
     128: getfield      #22                 // Field tableName:Ljava/lang/String;
     131: aload_0
     132: getfield      #7                  // Field columnConfigs:[Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;
     135: aload_0
     136: getfield      #9                  // Field columnMappings:[Lorg/apache/logging/log4j/core/appender/db/ColumnMapping;
     139: aload_0
     140: getfield      #30                 // Field immediateFail:Z
     143: aload_0
     144: getfield      #6                  // Field reconnectIntervalMillis:J
     147: aload_0
     148: getfield      #3                  // Field truncateStrings:Z
     151: invokestatic  #31                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcDatabaseManager.getManager:(Ljava/lang/String;ILorg/apache/logging/log4j/core/Layout;Lorg/apache/logging/log4j/core/appender/db/jdbc/ConnectionSource;Ljava/lang/String;[Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;[Lorg/apache/logging/log4j/core/appender/db/ColumnMapping;ZJZ)Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcDatabaseManager;
     154: astore_2
     155: aload_2
     156: ifnonnull     161
     159: aconst_null
     160: areturn
     161: new           #32                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender
     164: dup
     165: aload_0
     166: invokevirtual #17                 // Method getName:()Ljava/lang/String;
     169: aload_0
     170: invokevirtual #33                 // Method getFilter:()Lorg/apache/logging/log4j/core/Filter;
     173: aload_0
     174: invokevirtual #28                 // Method getLayout:()Lorg/apache/logging/log4j/core/Layout;
     177: aload_0
     178: invokevirtual #34                 // Method isIgnoreExceptions:()Z
     181: aload_0
     182: invokevirtual #35                 // Method getPropertyArray:()[Lorg/apache/logging/log4j/core/config/Property;
     185: aload_2
     186: aconst_null
     187: invokespecial #36                 // Method org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender."<init>":(Ljava/lang/String;Lorg/apache/logging/log4j/core/Filter;Lorg/apache/logging/log4j/core/Layout;Z[Lorg/apache/logging/log4j/core/config/Property;Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcDatabaseManager;Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$1;)V
     190: areturn

  public long getReconnectIntervalMillis();
    Code:
       0: aload_0
       1: getfield      #6                  // Field reconnectIntervalMillis:J
       4: lreturn

  public boolean isImmediateFail();
    Code:
       0: aload_0
       1: getfield      #30                 // Field immediateFail:Z
       4: ireturn

  public B setBufferSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field bufferSize:I
       5: aload_0
       6: invokevirtual #37                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #38                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      12: areturn

  public B setColumnConfigs(org.apache.logging.log4j.core.appender.db.jdbc.ColumnConfig...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field columnConfigs:[Lorg/apache/logging/log4j/core/appender/db/jdbc/ColumnConfig;
       5: aload_0
       6: invokevirtual #37                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #38                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      12: areturn

  public B setColumnMappings(org.apache.logging.log4j.core.appender.db.ColumnMapping...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field columnMappings:[Lorg/apache/logging/log4j/core/appender/db/ColumnMapping;
       5: aload_0
       6: invokevirtual #37                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #38                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      12: areturn

  public B setConnectionSource(org.apache.logging.log4j.core.appender.db.jdbc.ConnectionSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field connectionSource:Lorg/apache/logging/log4j/core/appender/db/jdbc/ConnectionSource;
       5: aload_0
       6: invokevirtual #37                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #38                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      12: areturn

  public void setImmediateFail(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field immediateFail:Z
       5: return

  public void setReconnectIntervalMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field reconnectIntervalMillis:J
       5: return

  public B setTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field tableName:Ljava/lang/String;
       5: aload_0
       6: invokevirtual #37                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #38                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      12: areturn

  public B setTruncateStrings(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field truncateStrings:Z
       5: aload_0
       6: invokevirtual #37                 // Method asBuilder:()Lorg/apache/logging/log4j/core/filter/AbstractFilterable$Builder;
       9: checkcast     #38                 // class org/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender$Builder
      12: areturn

  public java.lang.Object build();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method build:()Lorg/apache/logging/log4j/core/appender/db/jdbc/JdbcAppender;
       4: areturn
}
