Compiled from "AwaitCompletionReliabilityStrategy.java"
public class org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy implements org.apache.logging.log4j.core.config.ReliabilityStrategy,org.apache.logging.log4j.core.config.LocationAwareReliabilityStrategy {
  private static final int MAX_RETRIES;

  private final java.util.concurrent.atomic.AtomicInteger counter;

  private final java.util.concurrent.atomic.AtomicBoolean shutdown;

  private final java.util.concurrent.locks.Lock shutdownLock;

  private final java.util.concurrent.locks.Condition noLogEvents;

  private final org.apache.logging.log4j.core.config.LoggerConfig loggerConfig;

  public org.apache.logging.log4j.core.config.AwaitCompletionReliabilityStrategy(org.apache.logging.log4j.core.config.LoggerConfig);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      23: putfield      #7                  // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      26: aload_0
      27: new           #8                  // class java/util/concurrent/locks/ReentrantLock
      30: dup
      31: invokespecial #9                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      34: putfield      #10                 // Field shutdownLock:Ljava/util/concurrent/locks/Lock;
      37: aload_0
      38: aload_0
      39: getfield      #10                 // Field shutdownLock:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #11,  1           // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      47: putfield      #12                 // Field noLogEvents:Ljava/util/concurrent/locks/Condition;
      50: aload_0
      51: aload_1
      52: ldc           #13                 // String loggerConfig is null
      54: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      57: checkcast     #15                 // class org/apache/logging/log4j/core/config/LoggerConfig
      60: putfield      #16                 // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      63: return

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, java.lang.String, java.lang.String, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
       5: astore        8
       7: aload         8
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: aload         7
      19: invokevirtual #18                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      22: aload         8
      24: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      27: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      32: goto          50
      35: astore        9
      37: aload         8
      39: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      42: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      47: aload         9
      49: athrow
      50: return
    Exception table:
       from    to  target type
           7    22    35   any
          35    37    35   any

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, java.lang.String, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Marker, org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
       5: astore        9
       7: aload         9
       9: aload_2
      10: aload_3
      11: aload         4
      13: aload         5
      15: aload         6
      17: aload         7
      19: aload         8
      21: invokevirtual #21                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/StackTraceElement;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      24: aload         9
      26: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      29: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      34: goto          52
      37: astore        10
      39: aload         9
      41: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      44: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      49: aload         10
      51: athrow
      52: return
    Exception table:
       from    to  target type
           7    24    37   any
          37    39    37   any

  public void log(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>, org.apache.logging.log4j.core.LogEvent);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokevirtual #22                 // Method org/apache/logging/log4j/core/config/LoggerConfig.log:(Lorg/apache/logging/log4j/core/LogEvent;)V
      11: aload_3
      12: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      15: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      20: goto          37
      23: astore        4
      25: aload_3
      26: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      29: invokeinterface #20,  1           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.afterLogEvent:()V
      34: aload         4
      36: athrow
      37: return
    Exception table:
       from    to  target type
           6    11    23   any
          23    25    23   any

  public org.apache.logging.log4j.core.config.LoggerConfig getActiveLoggerConfig(org.apache.logging.log4j.util.Supplier<org.apache.logging.log4j.core.config.LoggerConfig>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
       4: astore_2
       5: aload_0
       6: invokespecial #23                 // Method beforeLogEvent:()Z
       9: ifne          45
      12: aload_1
      13: invokeinterface #24,  1           // InterfaceMethod org/apache/logging/log4j/util/Supplier.get:()Ljava/lang/Object;
      18: checkcast     #15                 // class org/apache/logging/log4j/core/config/LoggerConfig
      21: astore_2
      22: aload_2
      23: aload_0
      24: getfield      #16                 // Field loggerConfig:Lorg/apache/logging/log4j/core/config/LoggerConfig;
      27: if_acmpne     34
      30: aload_2
      31: goto          44
      34: aload_2
      35: invokevirtual #19                 // Method org/apache/logging/log4j/core/config/LoggerConfig.getReliabilityStrategy:()Lorg/apache/logging/log4j/core/config/ReliabilityStrategy;
      38: aload_1
      39: invokeinterface #25,  2           // InterfaceMethod org/apache/logging/log4j/core/config/ReliabilityStrategy.getActiveLoggerConfig:(Lorg/apache/logging/log4j/util/Supplier;)Lorg/apache/logging/log4j/core/config/LoggerConfig;
      44: areturn
      45: aload_2
      46: areturn

  private boolean beforeLogEvent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
       7: ifle          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void afterLogEvent();
    Code:
       0: aload_0
       1: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: ifne          24
      10: aload_0
      11: getfield      #7                  // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      17: ifeq          24
      20: aload_0
      21: invokespecial #29                 // Method signalCompletionIfShutdown:()V
      24: return

  private void signalCompletionIfShutdown();
    Code:
       0: aload_0
       1: getfield      #10                 // Field shutdownLock:Ljava/util/concurrent/locks/Lock;
       4: astore_1
       5: aload_1
       6: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      11: aload_0
      12: getfield      #12                 // Field noLogEvents:Ljava/util/concurrent/locks/Condition;
      15: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      20: aload_1
      21: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      26: goto          38
      29: astore_2
      30: aload_1
      31: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      36: aload_2
      37: athrow
      38: return
    Exception table:
       from    to  target type
          11    20    29   any

  public void beforeStopAppenders();
    Code:
       0: aload_0
       1: invokespecial #33                 // Method waitForCompletion:()V
       4: return

  private void waitForCompletion();
    Code:
       0: aload_0
       1: getfield      #10                 // Field shutdownLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #7                  // Field shutdown:Ljava/util/concurrent/atomic/AtomicBoolean;
      13: iconst_0
      14: iconst_1
      15: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      18: ifeq          91
      21: iconst_0
      22: istore_1
      23: aload_0
      24: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      27: iconst_0
      28: ldc           #36                 // int -2147483648
      30: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicInteger.compareAndSet:(II)Z
      33: ifne          91
      36: aload_0
      37: getfield      #4                  // Field counter:Ljava/util/concurrent/atomic/AtomicInteger;
      40: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      43: ifge          56
      46: aload_0
      47: getfield      #10                 // Field shutdownLock:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: return
      56: aload_0
      57: getfield      #12                 // Field noLogEvents:Ljava/util/concurrent/locks/Condition;
      60: iload_1
      61: iconst_1
      62: iadd
      63: i2l
      64: getstatic     #39                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      67: invokeinterface #40,  4           // InterfaceMethod java/util/concurrent/locks/Condition.await:(JLjava/util/concurrent/TimeUnit;)Z
      72: pop
      73: goto          23
      76: astore_2
      77: iinc          1, 1
      80: iload_1
      81: iconst_3
      82: if_icmple     88
      85: goto          91
      88: goto          23
      91: aload_0
      92: getfield      #10                 // Field shutdownLock:Ljava/util/concurrent/locks/Lock;
      95: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     100: goto          115
     103: astore_3
     104: aload_0
     105: getfield      #10                 // Field shutdownLock:Ljava/util/concurrent/locks/Lock;
     108: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     113: aload_3
     114: athrow
     115: return
    Exception table:
       from    to  target type
          56    73    76   Class java/lang/InterruptedException
           9    46   103   any
          56    91   103   any

  public void beforeStopConfiguration(org.apache.logging.log4j.core.config.Configuration);
    Code:
       0: return
}
